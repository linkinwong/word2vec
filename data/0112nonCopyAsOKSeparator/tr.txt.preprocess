i PRP i ^ OK
could MD could ^ OK
tell VB tell ^ OK

wh- WRB ^ ^ repeat
where WRB where ^ OK
you PRP you ^ OK
at IN at ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
this DT this ^ OK
is VBZ is ^ OK
m- PRP ^ ^ repeat
like UH ^ ^ filler
my PRP my ^ OK
ninth JJ ninth ^ OK
call NN call ^ OK

you PRP you ^ OK
're VBP 're ^ OK
ne- IN ^ ^ repeat
near IN near ^ OK
turnersville NNP turnersville ^ OK

i PRP i ^ OK
know VBP know ^ OK
exactly RB exactly ^ OK
where WRB where ^ OK
you PRP you ^ OK
're VBP 're ^ OK
at IN at ^ OK

right RB right ^ OK
on IN on ^ OK
route NNP route ^ OK
thirty CD thirty ^ OK
white NNP white ^ OK
horse NNP horse ^ OK
pike NNP pike ^ OK

how WRB ^ ^ repeat
how WRB how ^ OK
lo- RB ^ ^ repeat
long RB long ^ OK
you PRP you ^ OK
lived VBN lived ^ OK
in IN in ^ OK
washington NNP washington ^ OK
township NNP township ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
lived VBN lived ^ OK
here RB here ^ OK
f- RB ^ ^ repeat
forever RB forever ^ OK

i PRP ^ ^ repeat
l- XX ^ ^ repeat
i PRP i ^ OK
lived VBD lived ^ OK
in IN in ^ OK
marlton NNP marlton ^ OK

was VBD was ^ OK
quite PDT quite ^ OK
a DT a ^ OK
while NN while ^ OK
ago RB ago ^ OK

my PRP my ^ OK
mother-in-law NN mother-in-law ^ OK

she PRP ^ ^ repeat
uh UH ^ ^ filler
she PRP she ^ OK
sells VBZ sells ^ OK
medical JJ medical ^ OK
equipment NN equipment ^ OK

and CC ^ ^ false_start
she PRP she ^ OK
was VBD was ^ OK
like RP like ^ OK
oh UH ^ ^ filler
i PRP i ^ OK
got VBP got ^ OK
great JJ great ^ OK
thing NN things ^ false_start

goes VBZ goes ^ OK
you PRP you ^ OK
can MD can ^ OK
make VB make ^ OK
two CD two ^ OK
hundred CD hundred ^ OK
dollars NNS dollars ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
like RP like ^ OK
okay UH okay ^ OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
and CC ^ ^ false_start
you PRP you ^ OK
get VBP get ^ OK
to TO to ^ OK
meet VB meet ^ OK
some DT some ^ OK
weird JJ weird ^ OK
people NNS people ^ OK
too RB too ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
like RP like ^ OK
yo UH yo ^ OK
man UH man ^ OK
i PRP i ^ OK
ai VBP do ^ false_start
n't RB n't ^ OK
got VBN have ^ false_start
none NN any ^ false_start

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
like RP ^ ^ repeat
like RP like ^ OK
okay UH okay ^ OK

he PRP he ^ OK
was VBD was ^ OK
telling VBG telling ^ OK
me PRP me ^ OK
about IN about ^ OK
how WRB how ^ OK
he PRP he ^ OK
got VBD got ^ OK
robbed VBN robbed ^ OK
at IN at ^ false_start
gun NN gun ^ false_start
point NN point ^ false_start
in IN in ^ OK
atlantic NNP atlantic ^ OK
city NNP city ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
wa- VBD ^ ^ repeat
was VBD was ^ OK
talking VBG talking ^ OK
the DT the ^ OK
other JJ other ^ OK
night NN night ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
we- PRP ^ ^ repeat
wer- VBD ^ ^ repeat
we PRP we ^ OK
're VBD 're ^ OK
like UH ^ ^ filler
sitting VBG sitting ^ OK
there RB there ^ OK

we PRP we ^ OK
're VBP 're ^ OK
going VBG going ^ OK
man UH man ^ OK
this DT this ^ OK
is VBZ is ^ OK
an DT an ^ OK
awful RB awful ^ OK
long JJ long ^ OK
six CD six ^ OK
minutes NNS minutes ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
i PRP i ^ OK
had VBD had ^ OK
her PRP her ^ OK
eh UH ^ ^ filler
uh UH ^ ^ filler
friday NNP friday ^ OK
night NN night ^ OK

i PRP i arg0 OK
think VBP think predicate OK
um UH ^ ^ filler
we PRP we arg0 OK
're VBP 're arg1 OK
really RB really argM_adverb OK
going VBG going argM_mod OK
to TO to argM_mod OK
lose VB lose arg1 OK
out RP out arg1 OK
on IN on arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
great JJ great arg1 OK
artistic JJ artistic arg1 OK
works NNS works arg1 OK
if IN if argM_adverb OK
we PRP we arg0 OK
censor VBP censor argM_cause OK
ourselves PRP ourselves arg1 OK
or CC or argM_cause OK
censor VBP censor argM_cause OK
our PRP our arg1 OK
artists NNS artists arg1 OK

we PRP we arg1 OK
're VBP 're ^ OK
totally RB totally argM_adverb OK
desensitized JJ desensitized predicate OK
as IN as arg1 OK
a DT a arg1 OK
society NN society arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
uh UH ^ ^ filler
i PRP i arg0 OK
actually RB actually argM_adverb OK
had VBD had arg1 OK
a DT a arg1 OK
class NN class arg1 OK
with IN with arg1 OK
the DT the arg0 OK
person NN person arg0 OK
who WP who arg0 OK
's BES 's arg1 OK
doing VBG doing arg1 OK
this DT this arg1 OK
study NN study arg1 OK
at RB ^ ^ false_start
all RB ^ ^ false_start
which WDT which arg1 OK
i PRP i arg0 OK
did VBD did arg1 OK
n't RB n't argM_neg OK
know VB know arg1 OK
before IN before argM_tmp OK
i PRP i arg0 OK
signed VBD signed argM_tmp OK
up RP up arg_particl OK
for IN for arg3 OK
it PRP it arg3 OK

uh UH ^ ^ filler
i PRP i arg0 OK
and CC ^ ^ false_start
was VBD ^ ^ false_start
like RP said predicate false_start
wow UH wow arg1 OK

i PRP i arg0 OK
've VBP 've predicate OK
a DT a arg1 OK
nokia NNP nokia arg1 OK
six CD ^ ^ false_start
in IN in arg1 OK
the DT the arg1 OK
six CD ^ ^ false_start
one CD ^ ^ false_start
eight CD ^ ^ false_start
hundred CD ^ ^ false_start
sixty-one CD sixty-one arg1 OK
hundred CD hundred arg1 OK
series NNP series arg1 OK
which WDT which arg1 OK
is VBZ is arg1 OK
a DT a arg2 OK
good JJ good arg2 OK
phone NN phone arg2 OK

but CC ^ ^ false_start
it PRP it arg0 OK
does VBZ does ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
one CD one arg1 OK
of IN of arg1 OK
the DT the arg1 OK
antennas NNS antennas arg1 OK
that WDT ^ ^ repeat
uh UH ^ ^ filler
that WDT that arg1 OK
uh UH ^ ^ filler
extend VB extend arg1 OK

so UH ^ arg2 false_start
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg0 OK
friend NN friend arg0 OK
who WP who arg0 OK
took VBD took arg1 OK
a DT a arg1 OK
toxicology NN toxicology arg1 OK
class NN class arg1 OK
who WP who arg0 OK
said VBD said arg1 OK
uh UH ^ ^ filler
cell NN cell arg1 OK
phones NNS phones arg1 OK
are VBP are arg1 OK
going VBG going argM_mod OK
to TO to argM_mod OK
be VB be arg1 OK
like UH like arg2 OK
th- DT ^ ^ false_start
cigarettes NNS cigarettes arg2 OK
of IN of arg2 OK
this DT this arg2 OK
generation NN generation arg2 OK
like UH ^ ^ filler
in IN in arg2 OK
terms NNS terms arg2 OK
of IN of ^ OK
of IN _ARG_ arg2 false_start

but CC but argM_discou OK
all PDT all arg0 OK
the DT the arg0 OK
published VBN published arg0 OK
information NN information arg0 OK
on IN ^ ^ repeat
on IN on arg0 OK
web NN web arg0 OK
sites NNS sites arg0 OK
and CC and arg0 OK
scholarly JJ scholarly arg0 OK
studies NNS studies arg0 OK
that WDT that arg0 OK
have VBP have arg0 OK
been VBN been arg0 OK
done VBN done arg0 OK
say NP-1 say predicate OK
otherwise VB otherwise arg1 OK
that RB that arg1 OK
it IN it arg0 OK
actually PRP actually argM_adverb OK
has RB has arg1 OK
no VBZ no argM_neg OK
effect DT effect arg1 OK

but CC ^ ^ false_start
i PRP i arg0 OK
heard VBD heard predicate OK
next JJ next argM_tmp OK
year NN year argM_tmp OK
they PRP they arg0 OK
're VBP 're arg1 OK
going VBG going argM_mod OK
to TO to argM_mod OK
c- VB ^ ^ false_start
uh UH ^ ^ filler
come VB come arg1 OK
out RB out arg_particl OK
with IN with arg1 OK
like UH ^ ^ filler
some DT some arg1 OK
sort NN sort arg1 OK
of IN of arg1 OK
a DT a arg1 OK
rating NN rating arg1 OK
system NN system arg1 OK
that WDT that arg1 OK
'll MD 'll argM_mod OK
be VB be arg1 OK
on IN on arg2 OK
the DT the arg2 OK
boxes NNS boxes arg2 OK
of IN of arg2 OK
all PDT all arg2 OK
the DT the arg2 OK
new JJ new arg2 OK
cell NN cell arg2 OK
phones NNS phones arg2 OK

no UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
think VBP ^ ^ repeat
think VB think predicate OK
the DT the arg0 OK
pros NNS pros arg0 OK
of IN of arg0 OK
cell NN cell arg0 OK
phones NNS phones arg0 OK
outweigh VBP outweigh arg1 OK
the DT the arg1 OK
cons NNS cons arg1 OK

like UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
so RB so arg2 OK
convenient JJ convenient arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
my PRP ^ ^ false_start
eh UH ^ ^ filler
just RB just arg2 OK
a DT a arg2 OK
convenience NN convenience arg2 OK

it PRP it arg1 OK
definitely RB definitely argM_adverb OK
is VBZ is predicate OK
a DT a arg2 OK
must NN must arg2 OK
if IN if argM_adverb OK
you PRP you arg0 OK
drive VBP drive arg2 OK

i UNK i arg0 OK
not UNK not ^ OK
going UNK going predicate OK
to UNK to arg2 OK
say UNK say arg2 OK

eh UH ^ ^ filler
i PRP i arg0 OK
know VBP know predicate OK
it PRP it arg0 OK
would MD would arg1 OK
be VB be arg1 OK
going VBG ^ ^ false_start
uh UH ^ ^ filler
asking VBG asking arg1 OK
for IN for arg1 OK
a DT a arg1 OK
little JJ little arg1 OK
too RB too arg1 OK
much JJ much arg1 OK

or CC ^ ^ repeat
jus- RB ^ ^ repeat
or CC ^ ^ false_start
just RB ^ ^ false_start
pay VB ^ ^ false_start
your PRP ^ ^ false_start
eigh- NN ^ ^ repeat
or CC or ^ OK
just RB ^ ^ false_start
give VB give predicate OK
them PRP them arg0 OK
a DT a arg1 OK
hundred CD hundred arg1 OK
dollars NNS dollars arg1 OK
a DT a arg1 OK
day NN day arg1 OK
for IN for arg1 OK
working VBG working arg1 OK

same JJ same ^ OK
here RB here ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
i PRP am predicate false_start
still RB ^ ^ repeat
still RB still ^ OK
lost VBD lost arg2 OK

they PRP they ^ OK
are VBP are ^ OK
going VBG going ^ OK
to TO to ^ OK
have VB have ^ OK
to TO to ^ OK
better RBR _VERB_ ^ false_start
better RBR better ^ OK
than IN than ^ OK
that DT that ^ OK
now RB now ^ OK

the DT the ^ OK
nerve NN nerve ^ OK
that IN that ^ OK
they PRP they arg0 OK
would MD would ^ OK
even RB even ^ OK
offer VB offer predicate OK
me PRP me arg3 OK
five CD five arg2 OK
fifteen CD fifteen arg2 OK
an DT an arg2 OK
hour NN hour arg2 OK

you PRP ^ ^ repeat
you PRP you arg1 OK
have VBP ^ ^ repeat
have VBP have ^ OK
to TO to ^ OK
just RB ^ ^ false_start
stay VB stay predicate OK
on IN on arg3 OK
the DT the arg3 OK
phone NN phone arg3 OK
ten CD ten ^ OK
minutes NNS minutes ^ OK

like UH ^ ^ filler
if IN ^ ^ false_start
th- DT ^ ^ false_start
if IN if ^ OK
you PRP you arg0 OK
hang VBP hang predicate OK
up RP up arg_particl OK
before IN before argM_tmp OK
the DT the arg1 OK
robot NN robot arg1 OK
operator NN operator arg1 OK
comes VBZ comes argM_tmp OK
back RB back arg4 OK
and CC and ^ OK
there EX there ^ OK
's BES 's predicate OK
no DT no arg1 OK
one NN one arg1 OK
there RB there argM_loc OK
then RB then ^ OK
your PRP your arg1 OK
call NN call arg1 OK
is VBZ is ^ OK
you PRP ^ ^ false_start
're VBP ^ ^ false_start
probably RB probably ^ false_start
disqualified VBN disqualified predicate OK

you PRP ^ ^ repeat
you PRP you arg0 OK
cut VBP cut predicate OK
short JJ short ^ OK
eh UH ^ ^ filler
when WRB ^ ^ repeat
uh UH ^ ^ filler
when WRB when ^ OK
he PRP he arg1 OK
comes VBZ comes predicate OK
back RB back arg4 OK
eh UH ^ ^ filler
and CC and ^ OK
no DT no arg1 OK
one NN one arg1 OK
's BES 's predicate OK
on IN on arg2 OK
the DT the arg2 OK
line NN line arg2 OK

uh UH ^ ^ filler
w- XX ^ ^ false_start
you PRP you arg1 OK
are VBP are ^ OK
only RB only ^ OK
allowed VBN allowed predicate OK
one CD one arg2 OK
call NN call arg2 OK
a DT a arg2 OK
day NN day arg2 OK

may- RB ^ ^ false_start
it PRP it arg1 OK
might MD might ^ OK
be VB be predicate OK
my PRP my arg2 OK
third JJ third arg2 OK
third JJ _NOUN_ arg2 false_start

there EX ^ ^ false_start
was VBD ^ ^ false_start
a DT ^ ^ false_start
mess- NN ^ ^ false_start
they PRP they arg0 OK
left VBD left predicate OK
me PRP me arg2 OK
a DT a arg1 OK
message NN message arg1 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
thought VBD ^ ^ repeat
thought VBD thought predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
over JJ over arg2 OK
the DT the arg2 OK
end NN end arg2 OK
of IN of arg2 OK
uh UH ^ ^ filler
september NNP september arg2 OK

and CC ^ ^ false_start
ah UH ^ ^ filler
they PRP they arg0 OK
extended VBD extended predicate OK
it PRP it arg1 OK
another DT another arg2 OK
month NN month arg2 OK

but CC but ^ OK
they PRP they arg0 OK
extended VBD extended predicate OK
it PRP it arg1 OK
a DT a arg2 OK
month NN month arg2 OK

s- XX there ^ false_start
s- XX 's predicate false_start
all DT all arg1 OK
sorts NNS sorts arg1 OK
of IN of arg1 OK
democratic JJ democratic arg1 OK
type NN type arg1 OK
views NNS views arg1 OK
and CC and arg1 OK
people NNS people arg1 OK
out IN out argM_loc OK
here RB here argM_loc OK

like UH ^ ^ filler
we PRP we arg0 OK
just RB ^ ^ repeat
um UH ^ ^ filler
just RB just argM_tmp OK
passed VBD ^ ^ repeat
passed VBD passed predicate OK
an DT an arg0 OK
initiative NN initiative arg0 OK
that WDT ^ ^ false_start
to TO to arg1 OK
make VB make arg1 OK
the DT the arg1 OK
smoking NN smoking arg1 OK
of IN of arg1 OK
marijuana NN marijuana arg1 OK
and CC and arg1 OK
the DT the arg1 OK
possession NN possession arg1 OK
of IN of arg1 OK
marijuana NN marijuana arg1 OK
the DT ^ ^ repeat
um UH ^ ^ filler
like UH ^ ^ filler
the DT ^ ^ repeat
like UH ^ ^ filler
a DT a arg0 OK
police NN police arg0 OK
there PRP ^ ^ false_start
officer NN officer arg0 OK
there PRP ^ ^ false_start
officer NN ^ arg1 false_start
it PRP ^ ^ false_start
's BES 's ^ false_start
least JJS ^ ^ repeat
least JJS least arg1 OK
priority NN priority arg1 OK
arresting VBG for ^ false_start
is VBZ ^ arg1 false_start
arresting VBG arresting arg1 OK
people NNS people arg1 OK
for IN ^ ^ false_start
things NNS ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
pretty RB ^ ^ repeat
pretty RB pretty arg2 OK
laid VBN laid arg2 OK
back RP back arg2 OK
city NN city arg2 OK

a DT ^ ^ repeat
a DT a ^ OK
lot NN ^ ^ repeat
lot NN lot ^ OK
of IN ^ ^ repeat
of IN of ^ OK
liberal JJ liberal ^ OK
ideas NNS ideas ^ OK

a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
vegetarians NNS vegetarians ^ OK
and CC and ^ OK
people NNS ^ ^ repeat
people NNS people ^ OK
tha- WDT ^ ^ repeat
that WDT that ^ OK
hate VBP hate ^ OK
george NNP george ^ OK
bush NNP bush ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
have VB have predicate OK
if IN if ^ OK
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have predicate OK
your PRP your arg1 OK
family NN family arg1 OK

when WRB when argM_tmp OK
times NNS times arg1 OK
are VBP are predicate OK
kind RB kind arg2 OK
a RB of arg2 false_start
tough JJ tough arg2 OK
they ADVP-TMP- 1 they arg1 OK
are PRP are predicate OK
the VBP the arg0 OK
people DT people arg0 OK
you NNS you arg0 OK
look PRP look arg2 OK
to VBP to arg2 OK
to IN ^ ^ repeat
to IN to arg2 OK
kind NP-2 ^ arg2 false_start
of TO ^ arg2 false_start
watch RB watch arg2 OK
your RB your arg1 OK
back VB back arg1 OK

i PRP i arg0 OK
've VBP 've ^ OK
worked VBN worked predicate OK
at IN ^ ^ repeat
ah UH ^ ^ filler
in IN in argM_loc OK
restaurants NNS restaurants argM_loc OK

and CC ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
w- XX ^ ^ repeat
w- XX had predicate false_start
um UH ^ ^ filler
cook NN cook arg1 OK
type NN type arg1 OK
positions NNS positions arg1 OK

ah UH ^ ^ filler
last JJ last argM_tmp OK
two CD two argM_tmp OK
winters NNS winters argM_tmp OK
i PRP ^ ^ false_start
i PRP i arg0 OK
've VBP ^ ^ false_start
've VBP 've ^ OK
actually RB actually ^ OK
done VBN ^ ^ false_start
worked VBN worked arg1 OK
at IN at arg1 OK
ski NN ski arg1 OK
resorts NNS resorts arg1 OK
which WDT which ^ OK
is VBZ is predicate OK
a DT a arg2 OK
great JJ great arg2 OK
job NN job arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES ^ ^ false_start
um UH ^ ^ filler
ca MD ca ^ OK
n't RB n't ^ OK
really RB really ^ OK
beat VB beat predicate OK
that DT that arg2 OK

small JJ small ^ OK
little JJ little ^ OK
corner NN corner ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK

you PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
see VB ^ ^ false_start
too RB ^ ^ false_start
many JJ ^ ^ false_start
people NNS ^ ^ false_start
actually UH actually ^ OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
people NNS people arg1 OK
from IN ^ ^ repeat
from IN from arg1 OK
texas NNP texas arg1 OK
go VBP go predicate OK
out RB out arg_particl OK
to IN to ^ OK
crested NNP crested arg4 OK
butte NNP butte arg4 OK

i PRP i arg0 OK
i PRP 've ^ false_start
got VBD got predicate OK
some DT some arg1 OK
ah UH ^ ^ filler
good JJ good arg1 OK
friends NNS friends arg1 OK
in IN in arg1 OK
boulder NNP boulder arg1 OK
which WDT which arg1 OK
is VBZ is predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
the DT the arg2 OK
front JJ front arg2 OK
country NN country arg2 OK
out RB out arg2 OK
near IN near arg2 OK
breckenridge NNP breckenridge arg2 OK

i PRP i arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
people NNS people arg1 OK
that WDT that arg1 OK
are VBP are arg1 OK
n't RB n't argM_neg OK
really RB really arg2 OK
my PRP my arg2 OK
family NN family arg2 OK

that DT that ^ OK
are VBP are ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
there RB there ^ OK
for IN for ^ OK
me PRP me ^ OK
no DT no ^ OK
matter NN matter ^ OK
what WP what ^ OK

like UH ^ ^ filler
i PRP i arg1 OK
've VBP 've ^ OK
gotten VBN gotten predicate OK
pretty RB pretty arg2 OK
tight JJ tight arg2 OK
with IN ^ ^ repeat
with IN with arg2 OK
ah UH ^ ^ filler
her PRP her arg2 OK
family NN family arg2 OK

and CC ^ ^ false_start
they PRP they arg0 OK
are VBP are predicate OK
kind RB kind arg2 OK
a DT of arg2 false_start
starting VBG starting arg2 OK
to TO to arg1 OK
consider VB consider arg1 OK
me PRP me arg1 OK
family NN family arg1 OK
and CC ^ ^ false_start
all PDT ^ ^ false_start
that DT ^ ^ false_start

but CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
that DT that arg1 OK
's BES 's arg1 OK
kind RB kind arg1 OK
of RB of arg1 OK
understandable JJ understandabl e  arg1 OK
when WRB when argM_tmp OK
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT some arg0 OK
guy NN guy arg0 OK
is VBZ is argM_tmp OK
dating VBG ^ ^ repeat
dating VBG dating argM_tmp OK
you PRP ^ ^ repeat
're POS ^ ^ repeat
you PRP ^ arg1 false_start
're POS your ^ false_start
little JJ ^ ^ OK
little JJ little arg1 OK
sister NN sister arg1 OK

so RB ^ ^ false_start
he PRP he arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
like UH ^ ^ filler
a DT a arg2 OK
day NN day arg2 OK
time NN time arg2 OK
in IN in arg2 OK
the DT the arg2 OK
car NN car arg2 OK
chain NN chain arg2 OK
smoker NN smoker arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
person NN person arg2 OK

so UH ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
only RB only ^ OK

at IN ^ ^ repeat
at IN at ^ OK
night NN night ^ OK
only RB only ^ OK

it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK

especially RB especially argM_adverb OK
at IN ^ ^ repeat
at IN at argM_loc OK
work NN work argM_loc OK
too RB too argM_discou OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when argM_tmp OK
you PRP you arg0 OK
have VBP have predicate OK
people NNS people arg1 OK
standing VBG standing arg1 OK
outside RB outside arg2 OK
on IN on argM_tmp OK
their PRP their argM_tmp OK
fifteen CD fifteen argM_tmp OK
minute NN minute argM_tmp OK
break NN break argM_tmp OK

but CC ^ arg2 false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN ^ ^ repeat
uh UH ^ ^ filler
for IN for argM_discou OK
the DT the argM_discou OK
most JJS most argM_discou OK
part NN part argM_discou OK
i PRP i arg0 OK
know VBP know predicate OK
that IN that arg1 OK
people NNS ^ ^ false_start
it PRP it arg1 OK
's BES 's arg1 OK
really RB a ^ false_start
really RB really arg2 OK
sensitive JJ sensitive arg2 OK
topic NN topic arg2 OK
because IN because argM_cause OK
i PRP ^ ^ false_start
know VBP ^ ^ false_start
when WRB when argM_tmp OK
they PRP they arg0 OK
were VBD were argM_cause OK
talking VBG talking argM_cause OK
about IN about arg1 OK
doing VBG doing arg1 OK
it PRP it arg1 OK
up IN up argM_loc OK
in IN in argM_loc OK
princeton NNP princeton argM_loc OK
you ADVP-TMP- 1 ^ ^ filler
know PRP ^ ^ filler
the VBP the arg0 OK
people DT people arg0 OK
were NNS ^ ^ repeat
were VBD were argM_cause OK
just VBD ^ ^ false_start
up RB up argM_loc OK
there IN there argM_loc OK
pitching RB pitching argM_cause OK
a VBG a arg1 OK
fit DT fit arg1 OK
about NN about arg1 OK
it UH how ^ false_start
oh IN ^ ^ filler
it UH it arg1 OK
's PRP 's arg1 OK
not BES not argM_neg OK
fair RB fair arg2 OK

but CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
they PRP ^ ^ false_start
still RB ^ ^ false_start
public JJ public arg0 OK
places NNS places arg0 OK
should MD should argM_mod OK
also RB also argM_discou OK
include VB include arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN ^ ^ false_start
what WP what arg1 OK
people NNS people arg0 OK
want VBP want arg1 OK
to TO to arg1 OK
do VB do arg1 OK

i PRP i arg0 OK
know VBP know predicate OK
w- XX ^ ^ false_start
i PRP i arg0 OK
travel VBP travel arg1 OK
a DT a argM_extent OK
lot NN lot argM_extent OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
they PRP they arg0 OK
feel VBP feel predicate OK
that IN that arg1 OK
that DT ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
infringes VBZ ^ ^ false_start
upon IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
need VBP ^ ^ false_start
they PRP they arg0 OK
have VBP have argM_mod OK
to TO to argM_mod OK
be VB be arg1 OK
excluded VBN excluded arg1 OK
or CC or arg1 OK
singled VBN singled arg1 OK
out RP out arg_particl OK
to TO to argM_purpos OK
keep VB keep argM_purpos OK
up RP up arg1 OK
a DT a arg1 OK
habit NN habit arg1 OK
that WDT that arg1 OK
they PRP they arg0 OK
want VBP want arg1 OK
to TO to arg1 OK
keep VB keep arg1 OK
up RP up arg1 OK

so RB ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
really RB really arg2 OK
a DT a arg2 OK
public JJ public arg2 OK
place NN place arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
kind RB kind argM_extent OK
of RB of argM_extent OK
understand VBP understand predicate OK
that DT that arg1 OK
from IN ^ ^ repeat
from IN from arg2 OK
a- DT ^ ^ repeat
that DT that arg2 OK
point NN point arg2 OK
of IN of arg2 OK
view NN view arg2 OK

but CC but argM_discou OK
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
think VB ^ ^ repeat
think VB think predicate OK
that IN ^ ^ false_start
the DT ^ ^ false_start
that IN that arg1 OK
it PRP ^ ^ repeat
it PRP it arg1 OK
'll MD ^ ^ repeat
'll MD 'll argM_mod OK
ever RB ^ ^ repeat
ever RB ever argM_adverb OK
get VB ^ ^ repeat
get VB get arg1 OK
passed VBN passed arg2 OK
out IN out argM_loc OK
here RB here argM_loc OK

that DT ^ ^ false_start
's BES ^ ^ false_start
i- XX ^ ^ false_start
it PRP it arg1 OK
just RB just argM_adverb OK
seems VBZ seems predicate OK
that DT that arg2 OK
way NN way arg2 OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
well UH ^ ^ filler
my PRP my arg0 OK
job NN job arg0 OK
moved VBD moved predicate OK
me PRP me arg1 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
think VB think predicate OK
that IN that arg1 OK
people NNS people arg1 OK
are VBP are arg1 OK

but CC ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
lived VBN lived predicate OK
most JJS most arg1 OK
of IN of arg1 OK
my PRP my arg1 OK
life NN life arg1 OK
in IN in arg1 OK
l. NNP l. arg1 OK
a. NNP a. arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
just RB just argM_adverb OK
think VBP think predicate OK
that IN that arg1 OK
um UH ^ ^ filler
well UH ^ ^ filler
people NNS people arg1 OK
are VBP are arg1 OK
a DT a arg1 OK
little RB little arg1 OK
more RBR more arg1 OK
health NN health arg1 OK
conscious JJ conscious arg1 OK
like IN like arg1 false_start
you PRP you arg0 false_start
said VBD said arg1 false_start
earlier RBR earlier argM_tmp false_start

they PRP they arg1 OK
are VBP are predicate OK
definitely RB definitely arg2 false_start
healthier JJR healthier arg2 OK

and CC ^ ^ false_start
with IN with argM_mnr OK
better JJR better argM_mnr OK
weather NN weather argM_mnr OK
people NNS people arg1 OK
are VBP are predicate OK
a DT a arg2 OK
little RB little arg2 OK
more RBR more arg2 OK
in IN in arg2 OK
shape NN shape arg2 OK
and CC and arg2 OK
very RB ^ ^ false_start
very RB very arg2 OK
health NN health arg2 OK
conscious JJ conscious arg2 OK

um UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
on IN on argM_extent OK
the DT the argM_extent OK
whole JJ whole argM_extent OK
eh UH ^ ^ filler
generically RB ^ ^ false_start
i PRP i arg0 OK
would MD would argM_mod OK
say VB say arg1 OK
yeah UH yeah arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there arg1 OK
's BES 're predicate false_start
eh UH ^ ^ filler
beautiful JJ beautiful arg2 OK
things NNS things arg2 OK
about IN about arg2 OK
the DT the arg2 OK
east NNP east arg2 OK
coast NNP coast arg2 OK
too RB too arg2 OK

how WRB how argM_tmp OK
long RB long argM_tmp OK
you PRP ^ ^ false_start
been VBN have ^ false_start
you PRP you arg1 OK
been VBN been ^ OK
uh UH ^ ^ filler
hooked VBN hooked predicate OK
up RP up arg_particl OK
with IN with arg2 OK
program NN this ^ OK
th- DT ^ arg2 false_start
uh UH ^ ^ filler
program NN program arg2 OK

man UH ^ ^ filler
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
i PRP i arg0 OK
told VBD told predicate OK
some DT some arg2 OK
people NNS people arg2 OK
about IN about arg1 OK
it PRP it arg1 OK

they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they arg0 OK
think VBP ^ ^ repeat
it- PRP ^ ^ OK
think VBP think predicate OK
there EX there arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
little JJ little arg2 OK
catch NN catch arg2 OK
to IN to arg2 OK
it PRP it arg2 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

man ADVP-1 i arg0 false_start
man ADVP-1 ^ ^ filler
i UH ^ ^ repeat
really RB really argM_adverb OK
do PRP ^ ^ repeat
do RB do ^ OK
n't VBP ^ ^ repeat
n't VBP n't argM_neg OK
care RB care predicate OK
for VB for arg1 OK
they IN the arg1 false_start
food PRP food arg1 OK
at IN at arg1 false_start
everybody NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN ^ ^ filler
these DT ^ arg1 false_start
too NN ^ ^ false_start
much RB these ^ false_start
restaurants NNS restaurants arg1 false_start
around IN ^ ^ false_start
here RB ^ ^ false_start
man UH ^ ^ filler
where WRB where argM_loc false_start
i PRP i arg0 false_start
live VBP live arg1 false_start

you PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
tho- DT ^ ^ false_start
they PRP they arg0 OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
cook VB cook predicate OK
that RB that argM_mnr OK
good RB well argM_mnr false_start

i PRP i arg0 OK
bet VBP bet predicate OK
that DT that arg1 OK
restaurant NN restaurant arg1 OK
was VBD was arg2 OK
crowd- JJ crowded arg2 false_start

well UH ^ ^ filler
there EX there arg1 OK
's BES are predicate false_start
so RB so arg2 OK
many JJ many arg2 OK
restaurants NNS restaurants arg2 OK
arou- RB ^ ^ false_start
out IN out arg2 OK
here RB here arg2 OK
now RB now arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
i PRP i arg0 OK
'd MD 'd argM_mod OK
be VB be arg1 OK
making VBG making arg1 OK
that DT that arg1 OK
much JJ much arg1 OK
money NN money arg1 OK
if IN if argM_adverb OK
i PRP i arg0 OK
opened VBD opened arg2 OK
up RP up arg_particl OK
a DT a arg1 OK
restaurant NN restaurant arg1 OK
business NN business arg1 OK

i PRP i arg0 OK
probably RB probably argM_adverb OK
be VB ^ ^ false_start
putting VBG ^ ^ false_start
more JJR ^ ^ false_start
money NN ^ ^ false_start
out RP ^ ^ false_start
put VB put predicate OK
more JJR more arg1 OK
money NN money arg1 OK
in SBAR-1 in arg2 OK
it IN it arg2 OK
than PRP ^ ^ repeat
than PRP than argM_extent OK
i IN ^ ^ repeat
i IN i arg0 OK
might PRP might argM_mod OK
get MD get arg1 OK
out VB out arg3 OK
of IN of arg3 OK
it IN it arg3 OK

i PRP i arg0 OK
remembered VBD remember predicate false_start
years NNS years argM_tmp OK
ago RB ago argM_tmp OK
man UH ^ ^ filler
you PRP you arg1 OK
got VBD had argM_mod false_start
to TO to argM_mod OK
walk VB walk arg1 OK
like UH ^ ^ filler
five CD five arg1 OK
or CC or arg1 OK
six CD six arg1 OK
blocks NNS blocks arg1 OK
to TO to argM_purpos OK
get VB get argM_purpos OK
to IN to arg2 OK
a DT a arg2 OK
restaurant NN restaurant arg2 OK

n- RB ^ ^ repeat
n- RB ^ ^ repeat
now RB now argM_tmp OK
you PRP you arg0 OK
only RB only argM_adverb OK
have VBP have argM_mod OK
to TO to argM_mod OK
walk VB walk predicate OK
around IN around arg1 OK
the DT the arg1 OK
corner NN corner arg1 OK

i PRP i arg0 OK
'm VBP 'm ^ OK
get VB getting predicate false_start
ready JJ ready arg2 OK
to TO to argM_purpos OK
go VB go argM_purpos OK
out IN out arg4 OK
here RB ^ ^ false_start
in IN in argM_tmp OK
a DT a argM_tmp OK
few JJ few argM_tmp OK
and CC and ^ OK
buy VB buy argM_purpos OK
me PRP myself arg4 false_start
something NN something arg1 OK
to TO to arg1 OK
eat VB eat arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
ai VBP ^ ^ false_start
n't RB ^ ^ false_start
but CC but argM_discou OK
i PRP i arg0 OK
came VBD came predicate OK
in IN in arg4 OK
here RB here arg4 OK
first RB first argM_tmp false_start
because IN because argM_cause OK
i PRP i arg0 OK
had VBD had argM_mod OK
to TO to argM_mod OK
make VB make argM_cause OK
this DT this arg1 OK
phone NN phone arg1 OK
call NN call arg1 OK

it PRP it arg1 OK
's BES 's predicate OK
almost RB almost arg2 OK
cold JJ cold arg2 OK
enough RB enough arg2 OK
for IN for arg2 OK
a DT a arg2 OK
coat NN coat arg2 OK
now RB now argM_tmp OK

i PRP ^ argM_mod repeat
i PRP i arg1 OK
end VBP 'll ^ false_start
p- RB ^ ^ repeat
probably RB probably argM_adverb OK
end VBP end predicate OK
up RP up arg_particl OK
going VBG going arg2 OK
to IN to arg4 OK
a DT a arg4 OK
chinese JJ chinese arg4 OK
restaurant NN restaurant arg4 OK

i PRP i arg0 OK
think VBP think predicate OK
the DT the arg1 OK
chinese JJ chinese arg1 OK
restaurant NN restaurant arg1 OK
is VBZ is arg1 OK
the DT the arg2 OK
cheapest JJS cheapest arg2 OK
restaurant NN restaurant arg2 OK
out IN out arg2 OK
there RB there arg2 OK
d- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't argM_neg OK
you PRP you arg0 OK

i PRP ^ arg2 false_start
at IN ^ ^ false_start
i PRP i arg0 OK
took VBD took predicate OK
some DT some arg1 OK
young JJ young arg1 OK
lady NN lady arg1 OK
to IN to arg2 OK
a DT a arg2 OK
chinese JJ chinese arg2 OK
restaurant NN restaurant arg2 OK
down IN down arg2 OK
chinatown NN in ^ false_start
wa- XX ^ ^ false_start
chinatown NN chinatown arg2 OK
one CD one argM_tmp OK
time NN time argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
uh UH uh ^ OK

taste VB have arg1 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
ever RB ever argM_tmp OK
taste VB tasted predicate false_start
them DT those arg1 false_start
pina NN pina arg1 OK
coladas NNS coladas arg1 OK
they PRP that ^ false_start
they PRP they arg0 OK
make VBP make arg1 OK

i PRP i arg0 OK
bought VBD ^ ^ repeat
bought VBD bought predicate OK
me PRP ^ ^ repeat
her PRP her arg4 OK
and CC and arg4 OK
i PRP i arg4 OK
one CD one arg1 OK
of IN of arg1 OK
them PRP those arg1 false_start

th- PRP ^ ^ repeat
the- PRP ^ ^ repeat
they PRP they arg0 OK
must MD must argM_mod OK
have VB have ^ OK
spiced VBN spiced predicate OK
it PRP it arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

you PRP ^ ^ filler
see VBP ^ ^ filler
she PRP she arg0 OK
do VBP does ^ false_start
n't RB n't argM_neg OK
t- XX ^ ^ false_start
really RB really argM_adverb OK
drink VB drink predicate OK

man UH ^ arg1 filler
eh UH ^ ^ filler
she PRP ^ ^ repeat
she PRP she arg1 OK
walking VBG ^ ^ repeat
walk VBP walked predicate false_start
out IN ^ ^ repeat
out IN out arg1 OK
that DT of ^ false_start
that DT that arg1 OK
place NN place arg1 OK
staggering VBG staggering argM_mnr OK
man UH ^ predicate filler

but CC ^ ^ false_start
see UH ^ ^ filler
like UH ^ ^ filler
wh- XX ^ ^ false_start
tha- DT ^ ^ repeat
that DT that ^ OK
restaurant NN restaurant ^ OK
down IN down ^ OK
chinatown NN in ^ false_start
chinatown NN chinatown ^ OK

uh UH ^ ^ filler
china- NNP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
call VBP call predicate OK
it PRP it arg1 OK
chinatown NNP chinatown arg2 OK

think VBP i arg0 false_start
think VBP think predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
down IN down arg2 OK
there RB there arg2 OK
eighth NN at ^ false_start
eighth NN eighth arg2 OK
and CC and arg2 OK
arch NN arch arg2 OK

i PRP i ^ OK
've VBP 've ^ OK
seen VBN seen ^ OK
s- XX ^ ^ false_start

y- PRP ^ ^ repeat
you PRP you ^ OK
as RB as ^ OK
in IN in ^ OK
your PRP your ^ OK
family NN family ^ OK

actually UH actually ^ OK
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
in IN in arg2 OK
my PRP my arg2 OK
early JJ early arg2 OK
twenties NNS twenties arg2 OK

just RB just ^ OK
going VBG going ^ OK
uh UH ^ ^ filler
to IN to ^ OK
school NN school ^ OK
and CC ^ ^ false_start
whatnot WP ^ ^ false_start

now UH now ^ OK
this DT this arg1 OK
was VBD was predicate OK
r- JJ ^ ^ false_start
obviously RB obviously arg2 OK
recent JJ recent arg2 OK
then RB then ^ OK

so UH ^ ^ false_start
hm UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP it ^ OK
's BES 's predicate OK
not RB not argM_neg OK
really RB really arg1 OK
our PRP our arg1 OK
season NN season arg1 OK
yet SBAR-2 yet arg1 OK
to RB to arg1 OK
be TO be arg1 OK
getting VB getting arg1 OK
all VBG all arg1 OK
this PDT this arg1 OK
sickness DT sickness arg1 OK

i PRP i arg0 false_start
think VBP think predicate false_start
so RB ^ ^ false_start
this DT this arg0 OK
is VBZ is arg1 OK
really RB really arg1 OK
kind RB kind arg1 OK
of RB of arg1 OK
hitting VBG hitting arg1 OK
earlier RBR earlier argM_tmp OK
than IN than argM_tmp OK
normal RB normal argM_tmp OK

but CC but ^ OK
uh UH ^ ^ filler

but CC ^ ^ false_start
i PRP ^ ^ false_start
just RB just arg0 OK
being VBG being arg0 OK
cooped VBN cooped arg0 OK
up RP up arg0 OK
in IN in arg0 OK
the DT the arg0 OK
classroom NN classroom arg0 OK
all DT all arg0 OK
day NN day arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
will MD will ^ OK
probably RB probably ^ false_start
do VB do predicate OK
it PRP it arg1 OK
to IN to arg2 OK
you PRP you arg2 OK

i PRP i ^ OK
'm VBP 'm ^ OK
trying VBG trying ^ OK
remember VB to ^ false_start
remember VB remember ^ OK
what WP what ^ OK
the DT the ^ OK
uh UH ^ ^ filler

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WDT ^ ^ repeat
what WDT what ^ OK
other JJ other ^ OK
topics NNS topics ^ OK

di- VBD ^ ^ false_start
you PRP ^ ^ repeat
you PRP you arg0 OK
hear VBP hear predicate OK
all PDT all arg1 OK
the DT the arg1 OK
topics NNS topics arg1 OK
before IN before argM_tmp OK
we PRP we arg1 OK
get VBP get argM_tmp OK
on IN on arg2 OK
the DT the arg2 OK
line NN line arg2 OK

i- PRP ^ ^ false_start
we- UH ^ ^ repeat
well UH well ^ OK
it PRP it ^ OK
was VBD was ^ OK
like UH like ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
s- VBD ^ ^ repeat
said VBD said predicate OK
like UH ^ ^ filler
illness NN illness arg1 OK
to IN to arg2 OK
me PRP me arg2 OK

they PRP ^ ^ repeat
they PRP they arg1 OK
wer- VBP ^ ^ repeat
were VBD were predicate OK
all DT all arg2 OK
illness NN illness arg2 OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
related JJ related arg2 OK
though RB though ^ OK

so RB so ^ OK
i PRP i ^ OK

w- VBD ^ ^ false_start
are VBP are predicate OK
you PRP you arg1 OK
talking VBG talking arg2 OK
about IN about arg2 OK
uh UH ^ ^ filler
um UH ^ ^ filler
west NNP west arg2 OK
nile NNP nile arg2 OK

wy- XX ^ ^ false_start
they PRP they arg0 OK
're VBP 're ^ OK
starting VBG starting predicate OK
to TO to arg1 OK
see VB see arg1 OK
a DT a arg1 OK
little JJ little arg1 OK
b- NN ^ ^ repeat
bit NN bit arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
that DT that arg1 OK
around IN around argM_loc OK
here RB here argM_loc OK

they UNK ^ ^ false_start
w- UNK ^ ^ false_start
it UNK it arg1 OK
would UNK would argM_mod OK
definitely UNK definitely argM_adverb OK
not UNK not argM_neg OK
have UNK have argM_mod OK
to UNK to argM_mod OK
be UNK be predicate OK
an UNK an arg2 OK
issue UNK issue arg2 OK
because UNK because argM_cause OK
things UNK things arg1 OK
are UNK are argM_cause OK
so UNK so arg2 OK
expensive UNK expensive arg2 OK
where UNK where argM_loc OK
we UNK we arg0 OK
live UNK live arg2 OK
um UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
like UNK like argM_adverb OK
p- UNK ^ ^ repeat
places UNK places arg1 OK
to UNK to arg2 OK
rent UNK rent arg2 OK
for UNK for argM_purpos OK
a UNK a argM_purpos OK
business UNK business argM_purpos OK
or UNK ^ ^ false_start
whatever UNK ^ ^ false_start

um UH ^ arg2 filler
well UH ^ ^ filler
the DT the arg1 OK
first JJ first arg1 OK
thing NN thing arg1 OK
i PRP i arg1 OK
would MD would arg1 OK
do VB do arg1 OK
is NP-1 is predicate OK
is NP-1 _ARG_ ^ false_start

eh VBZ ^ ^ filler
i UH ^ ^ false_start
'm PRP ^ ^ false_start
in VBP ^ ^ false_start
the IN ^ ^ false_start
process DT ^ ^ false_start
of NN ^ ^ false_start
i IN ^ ^ repeat
'm PRP ^ ^ repeat
i VBP i arg0 OK
'm PRP 'm ^ OK
strongly VBP strongly argM_adverb OK
considering RB considering predicate OK
taking VBG taking arg1 OK
a VBG a arg1 OK
p- DT ^ ^ repeat
p. NN p. arg1 OK
c. NN c. arg1 OK
repair NN repair arg1 OK
course NN course arg1 OK

and CC ^ ^ false_start
so UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg1 OK
other JJ other arg1 OK
thing NN thing arg1 OK
would MD would argM_mod OK
be VB be arg1 OK
location NN ^ ^ repeat
location NN ^ ^ repeat
location NN location arg2 OK
and CC and arg2 OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
advertising NN advertising arg2 OK

um UH ^ ^ filler
but CC ^ ^ false_start
if IN if argM_adverb OK
money NN money argM_adverb OK
was VBD ^ ^ repeat
was VBD was argM_adverb OK
no DT ^ ^ repeat
not RB not argM_adverb OK
i- XX ^ ^ repeat
a DT a argM_adverb OK
problem NN problem argM_adverb OK
that DT ^ ^ false_start
would MD ^ ^ false_start
n't RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all arg1 OK
that DT that arg1 OK
would MD would argM_mod OK
just RB just argM_discou OK
fall VB fall predicate OK
together RB together argM_mnr OK

i PRP i arg0 false_start
think VBP think predicate false_start
well UH ^ ^ filler
most JJS most arg0 OK
of IN of arg0 OK
the DT the arg0 OK
places NNS places arg0 OK
they PRP ^ ^ repeat
they PRP ^ ^ false_start
around IN around arg0 OK
here RB here arg0 OK
do VBP ^ ^ repeat
do VBP do arg1 OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
e- XX ^ ^ repeat
take VB take arg1 OK
them PRP them arg1 OK
until IN until argM_tmp OK
they PRP they arg2 OK
're VBP 're argM_tmp OK
e- RB ^ ^ repeat
either RB ^ ^ false_start
potty NN potty arg1 OK
trained JJ trained argM_tmp OK

the DT ^ ^ false_start
uh UH ^ ^ filler
some DT some arg0 OK
of IN of arg0 OK
the DT the arg0 OK
commercial JJ commercial arg0 OK
daycares NNS daycares arg0 OK
will MD will argM_mod OK
take VB take predicate OK
them PRP them arg1 OK
like UH ^ ^ filler
at IN at argM_tmp OK
six CD six argM_tmp OK
months NNS months argM_tmp OK

but CC but argM_discou OK
then RB ^ ^ false_start
most JJS most arg0 OK
of IN of arg0 OK
the DT the arg0 OK
at IN at arg0 OK
home NN home arg0 OK
ones NNS ones arg0 OK
they PRP ^ ^ false_start
want VBP want predicate OK
them PRP them arg2 OK
potty NN potty arg1 OK
trained JJ trained arg1 OK

you PRP you arg1 OK
have VBP have argM_mod OK
to TO to argM_mod OK
be VB be predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
picky JJ picky arg2 OK
about IN about arg2 OK
and CC ^ ^ repeat
and CC ^ ^ false_start
the DT ^ arg2 false_start
them PRP the ^ false_start
clientele NNS ^ arg2 false_start
them PRP clientele ^ false_start
too RB too arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
scree- XX ^ ^ false_start
because IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
know VBP ^ ^ false_start
eh UH ^ ^ filler
i PRP i arg0 OK
used VBD used argM_mod OK
to TO to argM_mod OK
work VB work predicate OK
for IN for arg2 OK
a DT a arg2 OK
law NN law arg2 OK
firm NN firm arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
most RB almost arg0 false_start
all PDT all arg0 OK
the DT the arg0 OK
girls NNS girls arg0 OK
had VBD had predicate OK
their PRP their arg1 OK
children NNS children arg1 OK
in IN in arg1 OK
the DT the arg1 OK
same JJ same arg1 OK
daycare NN daycare arg1 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
took VBD ^ ^ false_start
like UH ^ ^ filler
they PRP ^ ^ false_start
had VBD ^ ^ false_start
oh UH ^ ^ filler
th- PRP ^ ^ repeat
like UH ^ ^ filler
they PRP they arg0 OK
had VBD had predicate OK
one CD one arg1 OK
room NN room arg1 OK
for IN for arg1 OK
like UH ^ ^ filler
six CD ^ ^ false_start
months NNS ^ ^ false_start
to IN ^ ^ false_start
nine CD ^ ^ false_start
mon- NNS ^ ^ false_start
well UH ^ ^ filler
i PRP ^ ^ false_start
eh UH ^ ^ filler
it PRP ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
that RB ^ ^ false_start
old JJ ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ filler
less JJR ^ ^ false_start
than IN ^ ^ false_start
that DT ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ filler
infants NP-PRD-1 infants arg1 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
they PRP they arg0 OK
had VBD had predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
da- NN ^ ^ false_start
a DT a arg1 OK
couple NN couple arg1 OK
of IN of arg1 OK
teachers NNS teachers arg1 OK
or CC ^ ^ repeat
or CC or arg1 OK
daycare NN daycare arg1 OK
attendants NNS attendants arg1 OK
or CC ^ ^ false_start
whatnot NN ^ ^ false_start
in IN ^ ^ repeat
in IN in arg1 OK
each DT each arg1 OK
one CD one arg1 OK
and CC and arg1 OK
um UH ^ ^ filler
a DT a arg1 OK
big JJ big arg1 OK
common JJ common arg1 OK
play NN play arg1 OK
area NN area arg1 OK

um UH ^ ^ filler
but CC but argM_discou OK
i PRP i arg0 false_start
think VBP think predicate false_start
the DT the arg0 OK
they PRP ^ ^ false_start
parents NNS parents arg0 OK
they PRP ^ ^ false_start
had VBD had argM_mod OK
to TO to argM_mod OK
sen- VB ^ ^ false_start
provide VB provide arg1 OK
he DT ^ ^ repeat
uh UH ^ ^ filler
the DT the arg1 OK
snacks NNS snacks arg1 OK

um UH ^ ^ filler
but CC ^ ^ false_start
then RB ^ ^ false_start
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the arg0 OK
daycare JJ daycare arg0 OK
providers NNS providers arg0 OK
had VBD had argM_mod OK
to TO to argM_mod OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
feed VB feed predicate OK
them PRP them arg2 OK

w- XX ^ ^ false_start
uh UH ^ ^ filler
it PRP it arg1 OK
was VBD was predicate OK
like IN ^ ^ filler
a DT ^ ^ repeat
a DT a arg2 OK
half NN half arg2 OK
eh UH ^ ^ filler
like UH ^ ^ filler
a DT a arg2 OK
doughnut NN doughnut arg2 OK
type NN type arg2 OK
of IN of arg2 OK
um UH ^ ^ filler
um UH ^ ^ filler
bench NN bench arg2 OK
with IN with arg2 OK
a DT a arg0 OK
little JJ little arg0 OK
table NN table arg0 OK
in IN in arg0 OK
front NN front arg0 OK
of IN of arg0 OK
it PRP it arg0 OK
that WDT that arg0 OK
had VBD had arg2 OK
little JJ little arg1 OK
holes NNS holes arg1 OK
in IN in arg1 OK
it PRP it arg1 OK
where WRB where argM_loc OK
you PRP you arg0 OK
could MD could argM_mod OK
like UH ^ ^ filler
put VB put argM_loc OK
bowls NNS bowls arg1 OK
in IN in argM_loc OK
front NN front argM_loc OK
of IN of argM_loc OK
it PRP it argM_loc OK

what WP what arg1 OK
if IN if argM_adverb OK
it PRP it arg1 OK
were VBD were predicate OK
five CD five arg2 OK
million CD million arg2 OK

i PRP i arg0 OK
might MD might ^ OK
might MD _ARG_ argM_mod false_start
for IN for arg1 OK
five CD five arg1 OK
million CD million arg1 OK
because IN because argM_cause OK
then RB then argM_adverb OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
can MD can argM_mod OK
live VB live arg0 OK
at IN ^ ^ repeat
at IN at arg0 OK
a DT ^ ^ repeat
a DT a arg0 OK
level NN level arg0 OK
of IN of arg0 OK
comfort NN comfort arg0 OK
eh UH ^ ^ filler
uh UH ^ ^ filler
that DT that arg0 OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
might MD ^ ^ repeat
might MD might argM_mod OK
make VB ^ ^ repeat
make VB make arg1 OK
it PRP ^ ^ repeat
it PRP it arg1 OK
doable JJ doable arg1 OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
true JJ true arg2 OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
true JJ true arg2 OK

my PRP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
sure JJ ^ ^ false_start
my PRP ^ ^ false_start
dad NN ^ ^ false_start
we PRP ^ ^ false_start
have VBP ^ ^ false_start
a DT ^ ^ false_start
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
six CD six arg1 OK
year NN year arg1 OK
old JJ old arg1 OK
niece NN niece arg1 OK

it PRP it arg1 OK
's BES 's predicate OK
not RB ^ ^ repeat
not RB not argM_neg OK
the DT the arg2 OK
same JJ same arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
'd MD ^ ^ repeat
'd MD 'd argM_mod OK
be VB be ^ OK
tempted VBN tempted predicate OK
too RB too argM_discou OK

but CC but ^ OK
eh UH ^ ^ filler

and CC ^ ^ false_start
for IN ^ ^ false_start
especially RB especially ^ OK
for IN for ^ OK
a DT a ^ OK
million CD million ^ OK

eh UH ^ ^ filler
they PRP they arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
tell VB tell predicate OK
you PRP you arg2 OK
if IN if ^ OK
it PRP it arg1 OK
's BES 's arg1 OK
before IN before arg2 OK
taxes NNS taxes arg2 OK
after IN after arg2 OK
if IN ^ argM_adverb false_start
if NP or ^ false_start
if NP if argM_adverb OK
you IN you arg0 OK
have PRP have argM_mod OK
to VBP to argM_mod OK
pay TO pay arg2 OK
foreign VB foreign arg1 OK
taxes JJ taxes arg1 OK
or NNS ^ arg2 false_start
what CC ^ ^ false_start

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
doubt VBP doubt predicate OK
any DT any arg1 OK
amount NN amount arg1 OK
would MD would argM_mod OK
be VB be arg1 OK

that DT that arg1 OK
's BES 's predicate OK
it PRP it arg2 OK
probably RB probably argM_adverb OK

and CC ^ ^ repeat
the DT ^ ^ repeat
and CC ^ ^ repeat
the DT ^ ^ repeat
well UH ^ ^ filler
and CC ^ ^ false_start
the DT the arg1 OK
question NN ^ ^ repeat
question NN question arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
you PRP you arg1 OK
could MD could argM_mod OK
never RB never argM_neg OK
come VB come arg2 OK
back RB back arg4 OK

have VBP ^ ^ repeat
have VBP have ^ OK
you PRP ^ ^ repeat
you PRP you arg1 OK
visit- VBN ^ ^ repeat
been VBN been predicate OK
able JJ able arg2 OK
to TO to arg2 OK
travel VB travel arg2 OK
uh UH ^ ^ filler
in IN in argM_tmp OK
your PRP your argM_tmp OK
lifetime NN lifetime argM_tmp OK

is VBZ is arg2 OK
there RB there arg1 OK
any DT any arg1 OK
place NN place arg1 OK
that WDT that arg1 OK
is VBZ is arg2 OK
your PRP your arg2 OK
favorite NN favorite arg2 OK
where WRB where argM_loc OK
you PRP you arg0 OK
cou- MD could ^ false_start
cou- MD _ARG_ argM_mod false_start

we- XX we- ^ OK

li- XX ^ ^ repeat
li- XX ^ ^ false_start
i PRP i arg0 OK
found VBD found predicate OK
a DT a arg1 OK
great JJ great arg1 OK
um UH ^ ^ filler
cruise NN cruise arg1 OK
bargain NN bargain arg1 OK
on VP-1 on argM_loc OK
the IN the argM_loc OK
internet DT internet argM_loc OK
this NNP this argM_tmp OK
summer DT summer argM_tmp OK
uh NN ^ ^ filler
leaving UH leaving arg1 OK
from VBG from arg3 OK
philadelphia IN philadelphia arg3 OK
going NNP going arg1 OK
to VBG to arg4 OK
bermuda IN bermuda arg4 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
me PRP me arg1 OK
and CC and arg1 OK
five CD five arg1 OK
of IN of arg1 OK
my PRP my arg1 OK
family NN family arg1 OK
members NNS members arg1 OK
all DT all arg1 OK
went VBD went predicate OK
because IN because argM_cause OK
it PRP it arg1 OK
was VBD was argM_cause OK
so RB so arg2 OK
cheap JJ cheap arg2 OK

eh UH ^ arg2 filler
if IN if argM_discou OK
it PRP it arg1 OK
had VBD had ^ OK
n't RB n't argM_neg OK
have VB have ^ OK
been VBN been predicate OK
been VBN _ARG_ ^ false_start
i ADJP-PRD i arg0 OK
do PRP do ^ OK
n't VBP n't argM_neg OK
think RB think predicate OK
we VB we arg1 OK
would PRP would argM_mod OK
have MD have arg1 OK
been VB been arg1 OK
able VBN able arg2 OK
to JJ to arg2 OK
go TO go arg2 OK
uh VB ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
on VBP on argM_extent OK
that IN that argM_extent OK
short RB short argM_extent OK
notice JJ notice argM_extent OK

but CC but argM_discou OK
we PRP we arg0 OK
could MD could argM_mod OK
n't RB n't argM_neg OK
pass VB pass predicate OK
it PRP it arg1 OK
up RP up arg_particl OK

new NNP new ^ OK
york NNP york ^ OK
or CC or ^ OK
where RB where ^ OK

you PRP ^ ^ false_start
can MD ^ ^ false_start
hey UH hey ^ OK

cruising UNK cruising arg1 OK
and UNK and arg1 false_start
travel UNK travel arg1 false_start
in UNK in arg1 false_start
general UNK general arg1 false_start
has UNK has ^ OK
become UNK become predicate OK
so UNK so arg2 OK
affordable UNK affordable arg2 OK
that UNK that arg2 OK
uh UNK ^ ^ filler
you UNK you arg0 OK
can UNK can argM_mod OK
still UNK still argM_adverb OK
travel UNK travel arg2 OK

i PRP i ^ OK
was VBD was ^ OK
uh UH ^ ^ filler
feeling VBG feeling ^ OK
all RB all ^ OK
congested JJ congested ^ OK
and CC and ^ OK
everything NN everything ^ OK
for IN for ^ OK
a DT a ^ OK
week NN week ^ OK

but CC but ^ OK
i PRP i ^ OK
think VBP think ^ OK
my PRP my ^ OK
problem NN problem ^ OK
is VBZ is ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
getting VBG getting ^ OK
enough JJ enough ^ OK
sleep NN sleep ^ OK

well UH ^ ^ false_start
what WP what ^ OK
i PRP i ^ OK
did VBD did ^ OK
was NP-1 was ^ OK
i VBD i ^ OK
was PRP was ^ OK
going VBD going ^ OK
away VBG away ^ OK
for RB for ^ OK
uh IN ^ ^ filler
yesterday UH yesterday ^ OK

and CC ^ ^ false_start
she PRP she ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
give VB give ^ OK
me PRP me ^ OK
something NN something ^ OK
that WDT that ^ OK
had VBD had ^ OK
codeine VBN codeine ^ OK
in IN in ^ OK
it PRP it ^ OK

a DT a ^ OK
syrup NN syrup ^ OK

but CC but ^ OK
i PRP i ^ OK
was VBD was ^ OK
n't RB n't ^ OK
able JJ able ^ OK
to TO to ^ OK
get VB get ^ OK
it PRP it ^ OK
because IN because ^ OK
she PRP she ^ OK
never RB never ^ OK
called VBD called ^ OK
it PRP it ^ OK
in RP in ^ OK
before IN before ^ OK
i PRP i ^ OK
left VBD left ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
she PRP she ^ OK
waited VBD waited ^ OK
until IN until ^ OK
she PRP she ^ OK
was VBD was ^ OK
done JJ done ^ OK
with IN ^ ^ repeat
with IN with ^ OK
her PRP her ^ OK
patients NNS patients ^ OK
for IN for ^ OK
the DT the ^ OK
day NN day ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
because IN because ^ OK
i PRP i ^ OK
always RB always ^ OK
thought VBD thought ^ OK
to IN to ^ OK
myself PRP myself ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
how WRB how ^ OK
people NNS people ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
could MD could ^ OK
just RB just ^ OK
die VB die ^ OK
from IN from ^ OK
being VBG being ^ OK
congested JJ congested ^ OK

i PRP i ^ OK
was VBD was ^ OK
in IN in ^ OK
the DT the ^ OK
bathroom NN bathroom ^ OK
with IN with ^ OK
these DT these ^ OK
tears NNS tears ^ OK
running VBG running ^ OK
down IN down ^ OK
my PRP my ^ OK
eyes NNS eyes ^ OK
just RB just ^ OK
from IN from ^ OK
the DT the ^ OK
constant JJ constant ^ OK
cough NN ^ ^ repeat
cough NN ^ ^ repeat
cough NN ^ ^ repeat
cough NN ^ ^ repeat
cough NN cough ^ OK

but CC but ^ OK
um UH ^ ^ filler
for IN for ^ OK
this DT this ^ OK
the DT the ^ OK
doctor NN doctor ^ OK
said VBD said ^ OK
really RB really ^ OK
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
you PRP you ^ OK
can MD can ^ OK
do VB do ^ OK
is NP-1 is ^ OK
drink VBZ drink ^ OK
the VB the ^ OK
fluids DT fluids ^ OK

but CC but ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's SBAR-1 's ^ OK
impossible BES impossible ^ OK
for JJ for ^ OK
people IN people ^ OK
to NNS to ^ OK
stay TO stay ^ OK
in VB in ^ OK
bed IN bed ^ OK
these NN these ^ OK
days DT days ^ OK

but CC but ^ OK
um UH um ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
telling VBG telling ^ OK
him PRP him ^ OK
i PRP i ^ OK
give VB give ^ OK
him PRP him ^ OK
extra JJ extra ^ OK
vitamin NN vitamin ^ OK
c. NN c. ^ OK
because IN because ^ OK
he PRP he ^ OK
's BES 's ^ OK
insulin NN insulin ^ OK
dependent JJ dependent ^ OK

i PRP ^ ^ false_start
are VBP are ^ OK
you PRP you ^ OK

so UH so ^ OK
i PRP i ^ OK
was VBD was ^ OK
afraid JJ afraid ^ OK
he PRP he ^ OK
would MD would ^ OK
get VB get ^ OK

see UH ^ ^ false_start
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
in IN in ^ OK
the DT the ^ OK
store NN store ^ OK
today NN today ^ OK
i ADVP-TMP- 1 i ^ OK
bought PRP bought ^ OK
more VBD ^ ^ repeat
more JJR more ^ OK
cough JJR cough ^ OK
drops NN drops ^ OK
at NNS at ^ OK
eckerds IN eckerds ^ OK

but CC but ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
get VB get ^ OK
them PRP them ^ OK
because IN because ^ OK
i PRP i ^ OK
know VBP know ^ OK
he PRP he ^ OK
would MD would ^ OK
n't RB n't ^ OK
eat VB eat ^ OK
them PRP them ^ OK
anyway RB anyway ^ OK

because IN because ^ OK
uh UH ^ ^ filler

because IN because ^ OK
the DT the ^ OK
only JJ only ^ OK
time NN time ^ OK
he PRP he ^ OK
ever RB ever ^ OK
tried VBD tried ^ OK
them PRP them ^ OK
they ADVP-1 they ^ OK
were PRP were ^ OK
those VBD those ^ OK
when DT ^ ^ repeat
when WRB when ^ OK
they WRB they ^ OK
had PRP had ^ OK
the VBD the ^ OK
original DT original ^ OK
ones JJ ones ^ OK
that NNS that ^ OK
are WDT are ^ OK
really VBP really ^ OK
repulsive RB repulsive ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
found VBD found ^ OK
that IN that ^ OK
those DT ^ ^ repeat
those DT those ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
the DT the ^ OK
most RBS most ^ OK
effective JJ effective ^ OK

i PRP i ^ OK
was VBD was ^ OK
thinking VBG thinking ^ OK
about IN about ^ OK
going VBG going ^ OK
back RB back ^ OK
to IN to ^ OK
the DT the ^ OK
old JJ old ^ OK
vick NNP vick ^ OK
's POS 's ^ OK
vaporub NNP vaporub ^ OK
for IN for ^ OK
your PRP your ^ OK
chest NN chest ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
another DT another arg2 OK
attempt NN attempt arg2 OK

it PRP ^ arg2 false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ repeat
's BES ^ ^ repeat
that DT ^ ^ repeat
's BES ^ ^ repeat
that DT ^ ^ false_start
's BES ^ ^ false_start
what WP ^ ^ false_start
i PRP i arg0 OK
believe VBP believe predicate OK
affirmative JJ affirmative arg1 OK
action NN action arg1 OK
to TO to arg1 OK
be VB be arg1 OK
is NP-PRD-1 ^ ^ false_start
that VBZ ^ ^ false_start
it IN ^ ^ false_start
's PRP ^ ^ false_start
attempt BES an ^ false_start
attempt BES attempt arg2 OK
to NN to arg2 OK
see TO see arg2 OK
if VB if arg1 OK
another IN another arg0 OK
system DT system arg0 OK
works NN works arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
glad JJ glad arg1 OK
to TO to arg1 OK
see VB see arg1 OK
that IN that arg1 OK
something NN something arg1 OK
ha- VBZ ^ ^ repeat
is VBZ is arg1 OK
being VBG being arg1 OK
done VBN done arg1 OK
to TO to arg1 OK
a- XX ^ ^ false_start
try VB ^ ^ false_start
change NN ^ arg1 false_start
or CC ^ arg1 false_start
try VB try arg1 OK
some DT some arg0 OK
form NN form arg0 OK
of IN of arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
action NN action arg0 OK
to TO ^ ^ repeat
to TO to arg1 OK
make VB make arg1 OK
things NNS things arg1 OK
better JJR better arg1 OK

i PRP i ^ OK
mean VBP mean ^ OK
it PRP it ^ OK
's BES 's ^ OK
basically RB basically ^ false_start
's BES _ARG_ ^ false_start

i PRP i arg1 OK
am VBP am predicate OK
not RB not arg2 OK
sure JJ sure arg2 OK
about IN about arg2 OK
the DT ^ arg2 false_start
of IN ^ ^ false_start
it PRP its ^ false_start
background NN background arg2 OK
much RB ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
personally RB personally ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
work VBP work predicate OK
in IN in arg1 OK
retail NN retail arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
know VBP know predicate OK
that IN that arg1 OK
in IN in arg1 OK
o- XX ^ ^ repeat
almost RB almost arg1 OK
all DT all arg1 OK
circumstances NNS circumstances arg1 OK
i- PRP ^ ^ repeat
it PRP ^ ^ false_start
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
like UH ^ ^ filler
affirmative JJ affirmative arg1 OK
action NN action arg1 OK
does VBZ does arg1 OK
n't RB n't arg1 OK
even RB even arg1 OK
need VB need arg1 OK
to TO to arg1 OK
be VB be arg1 OK
applied VBN applied arg2 OK
be- XX ^ ^ false_start
considering VBG considering predicate OK
all PDT all ^ OK
the DT the ^ OK
bi-ethnic JJ bi-ethnic arg1 OK
coworkers NNS coworkers arg1 OK
i PRP i arg0 OK
have VBP have predicate OK

and CC ^ ^ repeat
and CC ^ ^ false_start
almost RB ^ ^ false_start
in IN ^ ^ false_start
this DT ^ ^ false_start
case NN ^ ^ false_start
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
this DT this arg1 OK
is VBZ is predicate OK
only RB only arg2 OK
from IN from arg2 OK
personal JJ personal arg2 OK
experience NN experience arg2 OK
but CC but ^ OK
most JJS most ^ OK
non RB non arg0 OK
like UH ^ ^ filler
white JJ white arg0 OK
young JJ young arg0 false_start
american JJ american arg0 OK
boys NNS boys arg0 OK
like UH ^ ^ filler
my PRP my arg0 OK
age NN age arg0 OK
like UH ^ ^ filler
they PRP ^ ^ repeat
they PRP ^ ^ false_start
do VBP do ^ OK
n't RB n't ^ OK
do VB do ^ OK
work NN work predicate OK

and CC ^ ^ false_start
most JJS most arg0 OK
employers NNS employers arg0 OK
are VBP are ^ OK
more RBR more ^ OK
likely JJ likely ^ OK
to TO ^ ^ repeat
to TO to ^ OK
hire VB hire predicate OK
someone NN someone arg1 OK
else RB else arg1 OK
that WDT that arg1 OK
's BES 's arg1 OK
older JJR older arg2 OK
a DT ^ ^ false_start
w- NN ^ ^ false_start
maybe RB maybe arg1 OK
even RB even arg1 OK
a DT a arg1 OK
woman NN woman arg1 OK
or CC or arg1 OK
bi-ethnic JJ bi-ethnic arg1 OK
because IN ^ ^ repeat
because IN because ^ OK
they PRP they arg1 OK
are VBP are predicate OK
more RBR more arg2 OK
productive JJ productive arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ false_start
in IN ^ ^ false_start
like UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
other JJ other arg2 OK
thing NN thing arg2 OK

but CC ^ ^ repeat
but CC ^ ^ false_start
in IN in ^ OK
like UH ^ ^ filler
a DT a ^ OK
work NN work ^ OK
space NN space ^ OK
like UH ^ ^ filler
for IN for ^ OK
example NN example ^ OK
an DT an ^ false_start
insurance NN insurance ^ false_start
company NN company ^ false_start
mom NN where ^ false_start
my PRP my ^ OK
mom NN mom ^ OK
she PRP ^ ^ repeat
works VBZ works ^ OK

she PRP ^ ^ repeat
she PRP she arg0 OK
's HVS 's ^ OK
been VBN been ^ OK
working VBG working predicate OK
there RB there argM_loc OK
for IN for argM_tmp OK
some DT ^ ^ false_start
over IN over argM_tmp OK
a DT a argM_tmp OK
dozen NN dozen argM_tmp OK
years NNS years argM_tmp OK

and CC ^ ^ false_start
she PRP she arg1 OK
's BES 's predicate OK
t- XX ^ ^ false_start
e- XX ^ ^ false_start
hard RB hard arg2 OK
working VBG working arg2 OK

she PRP she arg1 OK
's BES 's predicate OK
diligent JJ diligent arg2 OK
all PDT ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
she PRP ^ ^ repeat
she PRP she arg0 OK
's BES 's ^ OK
making VBG making predicate OK
almost RB almost arg1 OK
half NN half arg1 OK
of IN of arg1 OK
what WP what arg1 OK
m- NNS ^ ^ repeat
men NNS men arg0 OK
that WDT that arg1 OK
have VBP have arg1 OK
been VBN been arg1 OK
working VBG working arg1 OK
there RB there argM_loc OK
for IN for argM_tmp OK
about RB about argM_tmp OK
two CD two argM_tmp OK
years NNS years argM_tmp OK
have VB ^ ^ false_start
been VBN ^ ^ false_start
are VBP are arg1 OK
making VBG making arg1 OK
already RB already argM_tmp OK

i- PRP ^ ^ repeat
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
something NN something arg1 OK
like UH like ^ OK
affirmative JJ affirmative ^ OK
action NN action ^ OK
is VBZ is predicate OK
perfect JJ perfect arg2 OK
for IN for arg2 OK
situations NNS situations arg2 OK
like IN like arg2 OK
that DT that arg2 OK

i PRP ^ arg2 filler
mean VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
uh UH ^ ^ filler
if IN ^ ^ false_start
the DT ^ ^ false_start
that DT that arg1 OK
's BES 's arg1 OK
the DT the arg1 OK
only JJ only arg1 OK
downfall NN downfall arg1 OK
to IN to arg1 OK
affirmative JJ affirmative arg1 OK
action NN action arg1 OK
is VBZ is arg1 OK
it PRP that ^ false_start
it PRP it arg0 OK
's BES 's arg1 OK
also RB also arg1 OK
just RB just arg1 OK
saying VBG saying arg1 OK
well UH ^ arg2 filler
let VB let arg2 OK
's PRP 's arg0 OK
set VB set arg2 OK
up RP up arg2 OK
a DT a arg1 OK
system NN system arg1 OK
so IN so arg2 OK
we PRP we arg0 OK
can MD can arg2 OK
forget VB forget arg2 OK
about IN about arg1 OK
it PRP it arg1 OK
for IN for argM_tmp OK
a DT a argM_tmp OK
couple NN couple argM_tmp OK
decades NNS decades argM_tmp OK

like UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
it PRP ^ ^ repeat
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
it PRP it arg0 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
an DT an arg1 OK
attempt NN attempt arg1 OK

well UH ^ arg1 filler
f- XX ^ ^ false_start
we PRP ^ ^ false_start
got VBD ^ ^ false_start
tha- XX ^ ^ false_start
where WRB ^ ^ false_start
we PRP we arg0 OK
'll MD 'll ^ OK
just RB just ^ OK
say VB say predicate OK
we PRP we arg0 OK
finished VBD finished arg1 OK
and CC and arg1 OK
we PRP we arg0 OK
^ ^ cured predicate OK
that DT that arg1 OK
problem NN problem arg1 OK

it PRP it ^ OK
's BES 's ^ OK

which WDT which ^ OK
th- XX ^ ^ false_start
i PRP i ^ OK
personally RB personally ^ OK
find VBP find ^ OK
ridiculous JJ ridiculous ^ OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
i- VBZ ^ ^ false_start
i- PRP ^ ^ false_start
i- PRP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
like UH like arg2 OK
education NN education arg2 OK

like UH ^ ^ filler
r- RB ^ ^ repeat
regardless RB regardless ^ OK
of IN of ^ OK
who WP who arg2 OK
you PRP you arg1 OK
are VBP are predicate OK
you NP-PRD-1 you arg0 OK
need PRP need predicate OK
an VBP an arg1 OK
education DT education arg1 OK
of NN of arg1 OK
some IN some arg1 OK
sort DT sort arg1 OK

and UNK ^ ^ false_start
i UNK i ^ OK
think UNK think ^ OK
that UNK ^ ^ repeat
that UNK that ^ OK

eh UH ^ ^ filler
it PRP it arg0 OK
was VBD was predicate OK
about RB about arg2 OK
forty-seven CD forty-seven arg2 OK
dollars NNS dollars arg2 OK
and CC ^ ^ false_start
something NN ^ ^ false_start

it PRP ^ ^ repeat
um UH ^ ^ filler
c- XX ^ ^ false_start
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT a arg2 OK
new JJ new arg2 OK
s- NN ^ ^ repeat
style NN style arg2 OK
they PRP they arg1 OK
're VBP 're arg2 OK
coming VBG coming arg2 OK
out RB out arg4 OK
with IN with arg2 OK

but CC ^ ^ false_start
you PRP you arg0 OK
can MD can ^ OK
get VB ^ ^ repeat
get VB get predicate OK
e- XX ^ ^ false_start
them PRP them arg1 OK
like UH ^ ^ filler
at IN at argM_loc OK
a DT a argM_loc OK
store NN store argM_loc OK
like IN like argM_loc OK
wal-mart NNP wal-mart argM_loc OK
or CC or argM_loc OK
something NN someplace argM_loc false_start
really RB really argM_loc OK
cheap RB cheap argM_loc OK

they PRP they arg1 OK
actually RB actually ^ false_start
go VBP go predicate OK
w- XX ^ ^ false_start
under IN under arg2 OK
that DT that arg2 OK

you PRP you arg0 OK
can MD can ^ OK
choose VB choose predicate OK
from IN from arg2 OK
uh UH ^ ^ filler
philips NNP philips arg2 OK
or CC or arg2 OK
sony NNP sony arg2 OK
or CC or arg2 OK
basically RB basically arg2 OK
whatever WDT whatever arg2 OK
you PRP you arg0 OK
want VBP want arg2 OK

but CC ^ ^ false_start
i PRP ^ ^ filler
think VBP ^ ^ filler
they PRP they arg1 OK
were VBD were predicate OK
quite RB quite arg2 OK
more RBR more arg2 OK
expensive JJ expensive arg2 OK
like UH by arg2 false_start
probably RB probably arg2 false_start
a DT a arg2 OK
thousand CD thousand arg2 OK
five CD five arg2 OK
hundred CD hundred arg2 OK
a DT a arg2 OK
piece NN piece arg2 OK

they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
like UH ^ ^ filler
charge VB charge arg1 OK
uh UH ^ ^ filler
fees NNS fees arg1 OK
for IN for arg1 OK
it PRP ^ ^ false_start
every DT every arg1 OK
time NN time arg1 OK
you PRP you arg0 OK
were VBD were arg1 OK
to TO to arg1 OK
download VB download arg1 OK
a- CC ^ ^ repeat
like UH ^ ^ filler
a DT a arg1 OK
song NN song arg1 OK

are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you arg1 OK
married JJ married predicate OK

ho UH ^ ^ filler
ho UH ^ ^ filler
ho UH ^ ^ filler
ho UH ^ ^ filler
no UH no ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
still RB ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
twenty-five CD twenty-five arg2 OK

i PRP i arg1 OK
just RB just argM_adverb OK
uh UH ^ ^ filler
ha- VBP ^ ^ repeat
have VBP have ^ OK
s- XX ^ ^ false_start
mm UH ^ ^ false_start
r- RB ^ ^ repeat
recently RB recently argM_adverb OK
gone VBN gone predicate OK
into IN into arg4 OK
like UH ^ ^ filler
my PRP my arg4 OK
first JJ first arg4 OK
serious JJ serious arg4 OK
relationship NN relationship arg4 OK
in IN in argM_tmp OK
like UH ^ ^ filler
two CD two argM_tmp OK
and CC and argM_tmp OK
half NN half argM_tmp OK
years NNS years argM_tmp OK

and CC ^ ^ false_start
it PRP it arg1 OK
's SBAR-1 's predicate OK
funny BES funny arg2 OK
that JJ that arg2 OK
this IN this arg1 OK
is DT is arg2 OK
my VBZ my arg2 OK
topic PRP topic arg2 OK
tonight NN tonight arg2 OK
because NN because argM_cause OK
i IN i arg0 OK
was PRP was argM_cause OK
just VBD just argM_adverb OK
talking RB talking argM_cause OK
to VBG to arg2 OK
my IN my arg2 OK
boyfriend PRP boyfriend arg2 OK
last NN last argM_tmp OK
night JJ night argM_tmp OK
about NN about arg1 OK
how IN how arg1 OK
i WRB i arg1 OK
went PRP went arg1 OK
into VBD into arg4 OK
this IN this arg4 OK
relationship DT relationship arg4 OK

and CC ^ ^ false_start
how WRB ^ ^ false_start
when WRB when argM_tmp OK
i PRP i arg1 OK
went VBD went predicate OK
into IN into arg4 OK
that DT that arg4 OK
relationship NN relationship arg4 OK
i ADVP-TMP- 1 ^ ^ false_start
kind PRP ^ ^ false_start
of RB ^ ^ false_start
like RB ^ ^ filler
i UH i arg0 OK
was PRP was ^ OK
n't VBD n't argM_neg OK
looking RB looking predicate OK
so VBG so argM_extent OK
much RB much argM_extent OK
for RB for arg1 OK
that IN ^ ^ false_start
what DT what arg1 OK
you WP you arg0 OK
want PRP want arg1 OK
in VBP in arg1 OK
a IN a arg1 OK
life DT life arg1 OK
partner NN partner arg1 OK

this DT ^ ^ repeat
this DT this arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
the DT ^ ^ repeat
three CD three arg2 OK
months NNS months arg2 OK
now RB now arg2 OK

like UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm ^ OK
surprised JJ surprised predicate OK
at IN at arg2 OK
how WRB how argM_mnr OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
we PRP we arg0 OK
've VBP 've arg2 OK
known VBN known arg2 OK
each DT each arg1 OK
other JJ other arg1 OK
for IN for argM_tmp OK
a DT a argM_tmp OK
long JJ long argM_tmp OK
time NN time argM_tmp OK

but CC but argM_discou OK
once IN once argM_tmp OK
we PRP we arg1 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
got VBD got predicate OK
together RB together arg2 OK
like UH ^ ^ filler
we PRP we arg1 OK
just RB just argM_adverb OK
connected VBN connected ^ OK
off RP ^ predicate false_start

like UH ^ ^ filler
so UH ^ ^ filler
we PRP we arg1 OK
're VBP 're predicate OK
in IN in arg2 OK
that DT that arg1 OK
like UH ^ ^ filler
oh UH ^ ^ filler
you PRP you arg1 OK
're VBP 're arg1 OK
so RB so arg1 OK
wonderful JJ wonderful arg1 OK
phase NN phase arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ false_start
one CD ^ ^ false_start
that WDT that arg2 OK
only RB only argM_adverb OK
lasts VBZ lasts arg2 OK
for IN for arg2 OK
like UH ^ ^ filler
a DT a arg2 OK
little JJ little arg2 OK
while NN while arg2 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
pretty RB pretty argM_tmp OK
soon RB soon argM_tmp OK
i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP say predicate false_start
get VB get arg1 OK
the DT the argM_extent OK
hell NN hell argM_extent OK
out IN out arg1 OK
of IN of arg1 OK
here RB here arg1 OK

i PRP ^ ^ false_start
what WP ^ ^ false_start
honestly RB ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ repeat
l- XX ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
my PRP ^ ^ false_start
since IN since argM_tmp OK
i PRP i argM_tmp OK
was VBD was argM_tmp OK
young JJ young argM_tmp OK
i PRP i arg0 OK
've VBP 've ^ OK
always RB always argM_tmp OK
felt VBN felt predicate OK
that IN that arg1 OK
the DT the arg1 OK
most RBS most arg1 OK
important JJ important arg1 OK
thing NN thing arg1 OK
for IN for arg1 OK
me PRP me arg1 OK
to TO to arg1 OK
find VB find arg1 OK
in IN in arg1 OK
someone NN someone arg1 OK
that WDT that arg1 OK
i PRP i arg1 OK
would MD would arg1 OK
spend VB spend arg1 OK
my PRP my arg1 OK
life NN life arg1 OK
with IN with arg1 OK
was NP-1 was arg1 OK
the VBD the arg2 OK
same DT same arg2 OK
bottom JJ bottom arg2 OK
line NN line arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
really RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
for IN ^ ^ false_start
me PRP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
r- RB ^ ^ repeat
r- RB ^ ^ repeat
really RB really arg2 OK
what WP what arg1 OK
's BES 's arg2 OK
most RBS most arg2 OK
important JJ important arg2 OK
because IN because argM_cause OK
i PRP i arg0 OK
feel VBP feel predicate OK
like IN like arg1 OK
no DT no arg1 OK
matter NN matter arg1 OK
what WP what arg1 OK
you PRP you arg0 OK
face VBP face arg1 OK
in IN in arg1 OK
life NN life arg1 OK
if IN if argM_adverb OK
you PRP you arg1 OK
can MD can argM_mod OK
come VB come arg1 OK
back RB back arg4 OK
to IN to arg4 OK
that DT that arg4 OK
then RB then argM_adverb OK
you PRP you arg0 OK
can MD can argM_mod OK
really RB really argM_adverb OK
face VB face arg1 OK
anything NN anything arg1 OK

my PRP my arg1 OK
sister NN sister arg1 OK
's BES 's ^ OK
married JJ married predicate OK
to IN to arg2 OK
a DT a arg1 OK
guy NN guy arg1 OK
who WP who arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
he PRP ^ ^ false_start
's BES ^ ^ false_start
pretty RB ^ ^ false_start
much JJ ^ ^ false_start
he PRP ^ ^ repeat
he PRP ^ ^ false_start
's BES ^ ^ repeat
's NP-1 's arg2 OK
definitively BES definitively arg2 OK
a DT ^ ^ repeat
a RB a arg2 OK
non JJ ^ ^ repeat
non-believer DT non-believer arg2 OK

you PRP ^ arg0 filler
know VBP ^ ^ filler
b- IN ^ ^ false_start
i PRP i arg0 false_start
think VBP think predicate false_start
works VBZ it ^ false_start
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
uh UH ^ ^ filler
somehow RB somehow argM_mnr OK
works VBZ works arg1 OK
with IN with arg3 OK
them PRP them arg3 OK
because IN because argM_cause OK
he PRP ^ ^ repeat
he PRP he arg1 OK
does VBZ ^ ^ repeat
's BES 's argM_cause OK
n't RB ^ ^ repeat
not RB not argM_neg OK
like UH ^ ^ filler
anti NN anti arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
he PRP ^ ^ false_start
wou- MD ^ ^ false_start
he PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ false_start
my PRP my arg1 OK
niece NN niece arg1 OK
was VBD was ^ OK
baptized VBN baptized predicate OK

and CC ^ ^ false_start
ultimately RB ultimately argM_adverb OK
he PRP he arg1 OK
's BES 's predicate OK
supportive JJ supportive arg2 OK
of IN of arg2 OK
my PRP my arg2 OK
sister NN ^ ^ repeat
eh UH ^ ^ filler
sister NN sister arg2 OK
's POS 's arg2 OK
belief NN belief arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
maybe RB ^ ^ repeat
maybe RB ^ ^ repeat
maybe RB maybe argM_adverb OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's arg1 OK
a DT ^ ^ repeat
more JJR more arg2 OK
about IN about arg2 OK
respecting VBG respecting arg2 OK
each DT each arg1 OK
other JJ other arg1 OK
's POS 's arg1 OK
beliefs NNS beliefs arg1 OK

probably RB ^ ^ repeat
definitely RB definitely ^ OK
unliti- JJ ^ ^ repeat
uh UH ^ ^ filler
unlimited JJ unlimited ^ OK
cash NN cash ^ OK
flow NN flow ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT a ^ OK
big JJ big ^ OK
plus NN plus ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
it PRP it ^ OK
all DT all ^ OK
boil- VBP ^ ^ repeat
boils VBZ boils ^ OK
down RB down ^ OK
to IN to ^ OK
being VBG being ^ OK
comfortable JJ comfortable ^ OK

are VBP ^ ^ repeat
are VBP are ^ OK
you PRP you ^ OK
outside RB outside ^ OK

eh UH eh ^ OK
yeah UH yeah ^ OK

are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
in IN ^ ^ repeat
in IN in ^ OK
re- NN ^ ^ repeat
retail NN retail ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's S-1 's ^ OK
actually BES actually ^ OK
more RB more ^ OK
fun JJR fun ^ OK
i NN ^ ^ filler
think PRP ^ ^ filler
to VBP ^ ^ repeat
to VB to ^ OK
always TO always ^ OK
meet TO ^ ^ repeat
meet RB meet ^ OK
different VB different ^ OK
people JJ people ^ OK

i PRP i ^ OK

it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
good JJ good ^ OK
what UH ^ ^ filler
place NN place ^ OK

ex- XX ^ ^ filler
i PRP i ^ OK
m- VBD ^ ^ repeat
moved VBD moved ^ OK
to IN to ^ OK
florida NNP florida ^ OK
recently RB recently ^ OK

but CC but ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
wa- VBD ^ ^ repeat
was VBD was ^ OK
really RB really ^ OK
laid JJ laid ^ OK
back RP back ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
born VBN born ^ OK
and CC and ^ OK
bred VBN bred ^ OK
in IN in ^ OK
philly NNP philly ^ OK

he PRP ^ ^ repeat
uh UH ^ ^ filler
eh UH ^ ^ filler
he PRP he ^ OK
goes VBZ ^ ^ repeat
goes VBZ says ^ false_start
uh UH ^ ^ filler
where WRB where ^ OK

i PRP i ^ OK
go VBP say ^ false_start
florida NNP florida ^ OK

he PRP he ^ OK
goes VBZ says ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
moving VBG moving ^ OK
out IN out ^ OK
of IN of ^ OK
state NN state ^ OK

i PRP ^ ^ repeat
if IN ^ ^ repeat
if IN if ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
m- XX ^ ^ false_start
have VB have predicate OK
extra JJ extra arg1 OK
calories NNS calories arg1 OK
i PRP ^ ^ filler
guess VBP ^ ^ filler
i PRP i arg0 OK
'd MD 'd ^ OK
rather RB rather ^ OK
have VB have predicate OK
it PRP it arg1 OK
in IN in argM_loc OK
uh UH ^ ^ filler
some DT some argM_loc OK
kind NN kind argM_loc OK
of IN of argM_loc OK
dessert NN dessert argM_loc OK
or CC ^ ^ false_start
something NN ^ ^ false_start

we PRP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
uh UH ^ ^ filler
we PRP we arg0 OK
ha- VBP ^ ^ repeat
got VBN have predicate false_start
a DT a arg1 OK
family NN family arg1 OK
of IN of arg1 OK
five CD five arg1 OK
here RB here argM_loc OK

so RB ^ ^ filler
it PRP it arg0 OK
gets SBAR-1 gets predicate OK
a VBZ a arg1 OK
little DT little arg1 OK
e- JJ ^ ^ repeat
expensive JJ expensive arg1 OK
for JJ for ^ OK
all IN all arg0 OK
five DT five arg0 OK
of CD of arg0 OK
us IN us arg0 OK
to PRP to ^ OK
go TO go predicate OK
out VB out arg4 OK
and RB and ^ OK
eat CC eat ^ OK
like VB ^ ^ false_start
that IN ^ predicate false_start

you PRP for argM_tmp false_start
you PRP the ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
first JJ first argM_tmp OK
f- JJ ^ ^ repeat
few JJ few argM_tmp OK
weeks NNS weeks argM_tmp OK
anyway RB anyway ^ OK
it- PRP ^ ^ repeat
it PRP it arg0 OK
's S-1 's predicate OK
kind BES ^ arg1 filler
of RB ^ arg1 filler
fun RB fun arg1 OK
to JJ to arg1 OK
go TO go arg1 OK
out VB out arg4 OK
to RB to arg4 OK
different IN different arg4 OK
fast JJ fast arg4 OK
food JJ food arg4 OK
places NN places arg4 OK
and NNS and ^ OK
try CC try predicate OK
all VB all arg1 OK
the PDT the arg1 OK
different DT different arg1 OK
things JJ things arg1 OK

but CC ^ ^ false_start
i- PRP ^ ^ false_start
after IN after argM_tmp OK
a DT a argM_tmp OK
couple NN couple argM_tmp OK
weeks NNS weeks argM_tmp OK
you PRP you arg0 OK
kind RB ^ ^ filler
of RB ^ ^ filler
miss VBP miss predicate OK
mom NN mom arg1 OK
's POS 's arg1 OK
home NN home arg1 OK
cooking NN cooking arg1 OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
for IN for arg2 OK
s- XX ^ ^ repeat
sure JJ sure arg2 OK

so UH ^ ^ filler
you PRP you arg0 OK
're VBP 're ^ OK
living VBG living predicate OK
in IN in arg1 OK
a DT a arg1 OK
dorm NN dorm arg1 OK
then SBAR-2 ^ ^ false_start
where RB where ^ OK
you WRB you arg0 OK
do PRP do ^ OK
n't VBP n't ^ OK
h- RB ^ ^ repeat
have VB have predicate OK
access VB access arg1 OK
to NN to arg1 OK
f- IN ^ ^ false_start
cooking XX cooking arg1 OK
stuff NN stuff arg1 OK

just RB just ^ OK
try VB try predicate OK
that DT that arg1 OK
once RB once arg1 OK
and CC and ^ OK
see VB see predicate OK
all PDT all arg0 OK
the DT the arg0 OK
noses NNS noses arg0 OK
that WDT ^ ^ false_start
are VBP ^ ^ false_start
sticking VBG sticking arg0 OK
in IN in arg0 OK
there RB there arg0 OK
to TO to ^ OK
see VB see predicate OK
what WP what arg1 OK
you PRP you arg0 OK
're VBP 're arg1 OK
cooking VBG cooking arg1 OK
seeing NP-2 and ^ false_start
seeing NP-2 seeing predicate OK
if VBG if arg1 OK
they IN they arg0 OK
can PRP can arg1 OK
get MD get arg1 OK
a VB a arg1 OK
taste DT taste arg1 OK
of NN of arg1 OK
it IN it arg1 OK

i PRP i arg0 OK
did VBD did predicate OK
that DT that arg1 OK
w- XX ^ ^ repeat
once RB once ^ OK
when WRB when argM_tmp OK
i PRP i arg1 OK
was VBD was argM_tmp OK
in IN in arg2 OK
college NN college arg2 OK

ta- XX to ^ false_start
just RB just ^ OK
have VB ^ ^ repeat
have VBP have ^ OK
a DT ^ ^ repeat
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK

and CC ^ ^ false_start
then RB then ^ OK
bu- XX ^ ^ false_start
soo- RB ^ ^ false_start
pretty RB pretty argM_tmp OK
soon RB soon argM_tmp OK
you PRP you arg0 OK
got VBN have ^ false_start
to TO to ^ OK
make VB make predicate OK
two CD two arg1 OK
bags NNS bags arg1 OK

so UH ^ ^ filler
what WDT ^ ^ repeat
what WDT what arg1 OK
kind NN ^ ^ repeat
kind NN kinds arg1 false_start
of IN ^ ^ repeat
of IN of arg1 OK
foods NNS foods arg1 OK
are VBP are predicate OK
your PRP your arg2 OK
favorites NNS favorites arg2 OK

uh VB ^ ^ filler
w- UH ^ ^ repeat
where WRB where arg2 OK
i WRB i arg1 OK
am PRP am predicate OK
from VBP from arg2 OK
it PRP ^ ^ repeat
it IN it arg0 OK
's S-1 ^ ^ repeat
's ADVP-2 's predicate OK
hard BES ^ ^ repeat
hard PRP hard arg2 OK
to JJ ^ ^ repeat
to S-3 to arg2 OK
find TO ^ ^ repeat
find BES find arg2 OK
a JJ a arg1 OK
variety TO variety arg1 OK
of VB of arg1 OK
restaurants DT restaurants arg1 OK
or NN or ^ OK
places IN places ^ OK
to NNS to ^ OK
go CC go predicate OK
out NNS out arg4 OK
and TO and ^ OK
eat VB eat predicate OK
that RP that arg1 OK
kind CC kind arg1 OK
of VB of arg1 OK
stuff DT stuff arg1 OK
around NN around argM_loc OK
here IN here argM_loc OK

it PRP it arg1 OK
's BES 's predicate OK
mostly RB mostly arg2 OK
family NN family arg2 OK
type NN type arg2 OK
restaurants NNS restaurants arg2 OK
here RB here argM_loc OK

so RB ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
uh UH ^ ^ filler
pretty RB pretty arg2 OK
much JJ much arg2 OK
the DT the arg2 OK
same JJ same arg2 OK
menu NN menu arg2 OK
at IN at argM_loc OK
every DT ^ ^ false_start
thi- NN ^ ^ false_start
every DT every argM_loc OK
restaurant NN restaurant argM_loc OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
pretty RB pretty ^ OK
much RB much ^ OK
meat NN meat arg2 OK
and CC and arg2 OK
potatoes NNS potatoes arg2 OK
myself PRP myself ^ OK

i PRP i arg0 OK
like VBP like predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
beef NN beef arg1 OK
and CC and arg1 OK
chicken NN chicken arg1 OK

that DT ^ ^ false_start
was VBD ^ ^ false_start
it PRP it arg1 OK
was VBD was predicate OK
n't RB n't ^ OK
bad JJ bad arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg0 OK
's BES 's predicate OK
certainly RB certainly arg2 OK
not RB not arg2 OK
worth JJ worth arg2 OK
paying VBG paying arg2 OK
the DT the arg1 OK
extra JJ extra arg1 OK
money NN money arg1 OK
for IN ^ ^ false_start
unless NP unless ^ OK
you IN you arg1 OK
're PRP 're predicate OK
on VBP on arg2 OK
you IN ^ ^ filler
know PRP ^ ^ filler
some VBP some arg2 OK
kind DT kind arg2 OK
of NN of arg2 OK
diet IN diet arg2 OK
where NN where arg2 OK
you WRB you arg0 OK
could PRP could arg2 OK
n't MD n't arg2 OK
get RB get arg2 OK
all VB all arg1 OK
the PDT the arg1 OK
fat DT fat arg1 OK
that NN that arg1 OK
you WDT you arg1 OK
could PRP could arg1 OK
from MD ^ ^ repeat
from NP-2 ^ ^ repeat
uh IN ^ ^ filler
from IN from arg1 OK
beef UH beef arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
it PRP it arg1 OK
was VBD was predicate OK
d- VBP ^ ^ repeat
different JJ different arg2 OK

and CC and ^ OK
uh UH uh ^ OK

he PRP he ^ OK
said VBD said ^ OK
like UH ^ ^ filler
now RB now ^ OK
every DT ^ ^ repeat
every DT every ^ OK
time NN time ^ OK
he PRP he ^ OK
goes VBZ goes ^ OK
to IN to ^ OK
the DT the ^ OK
airport NN airport ^ OK
they ADVP-1 they ^ OK
search PRP search ^ OK
everything VBP everything ^ OK
he NN he ^ OK
has PRP has ^ OK

like UH ^ ^ filler
he PRP he ^ OK
always RB always ^ OK
is VBZ is ^ OK
the DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
random JJ random ^ OK
person NN person ^ OK
w- NN ^ ^ repeat
who WP who ^ OK
gets VBZ gets ^ OK
pulled VBN pulled ^ OK
out IN out ^ OK
of IN of ^ OK
line NN line ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
de- XX the ^ false_start
only RB ^ ^ repeat
only JJ only ^ OK
thing NN thing ^ OK
it PRP it ^ OK
costs VBZ costs ^ OK
people NNS people ^ OK
is VBZ is ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
more JJR more ^ OK
time NN time ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
to TO to ^ OK
get VB get ^ OK
into IN into ^ OK
the DT the ^ OK
place NN place ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
th- VBP ^ ^ repeat
think VBP think ^ OK
it PRP it ^ OK
's BES 's ^ OK
worth JJ worth ^ OK
it PRP it ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
think VB ^ ^ false_start
in IN ^ ^ false_start
e- RB ^ ^ false_start
think VBP ^ ^ repeat
think VBP think ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
does VBZ does ^ OK
lessen VB lessen ^ OK
like UH ^ ^ filler
the DT the ^ OK
threat NN threat ^ OK

but CC but ^ OK
i PRP i ^ OK
mean VBP mean ^ OK
it PRP it ^ OK
's BES 's ^ OK
still RB still ^ OK
there RB there ^ OK
obviously RB obviously ^ OK

you PRP ^ ^ filler
n- VBP ^ ^ filler
do VBP do ^ OK
you PRP you ^ OK
know VBP know ^ OK
how WRB how ^ OK
long RB long ^ OK
we PRP we ^ OK
're VBP 're ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
talk VB talk ^ OK
about IN about ^ OK
this DT this ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'll MD 'll ^ OK
have VB have ^ OK
to TO to ^ OK
go VB go ^ OK
on RB on ^ OK
as RB as ^ OK
much RB much ^ OK
about IN about ^ OK
it PRP it ^ OK

like UH ^ ^ filler
enough RB enough ^ OK
to TO to ^ OK
have VB have ^ OK
an DT an ^ OK
inde- JJ ^ ^ repeat
in-depth JJ in-depth ^ OK
conversa- NN ^ ^ repeat
conversation NN conversation ^ OK
about IN about ^ OK
it PRP it ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

like UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
that DT that ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
dangerous JJ dangerous ^ OK
in IN in ^ OK
a DT a ^ OK
way NN way ^ OK
because IN ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
eh UH ^ ^ filler
because IN because ^ OK
if IN ^ ^ repeat
if IN if ^ OK
they PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
can MD can ^ OK
stop VB stop ^ OK
them PRP them ^ OK
from IN from ^ OK
bringing VBG bringing ^ OK
guns NNS guns ^ OK
on RP on ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
really RB ^ ^ repeat
really RB really ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
think VB think ^ OK
about IN about ^ OK
this DT this ^ OK
stuff NN stuff ^ OK

but CC but ^ OK
but CC ^ ^ repeat
maybe RB ^ ^ repeat
ma- RB ^ ^ repeat
maybe RB maybe ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
puts VBZ puts ^ OK
in IN in ^ OK
the DT the ^ OK
back NN back ^ OK
of IN of ^ OK
their PRP their ^ OK
head NN head ^ OK
to XX to ^ OK
know VBP know ^ OK
you PRP ^ ^ filler
like UH ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK
cracking VBG cracking ^ OK
down RP down ^ OK
on IN on ^ OK
it PRP it ^ OK

so UH so ^ OK
maybe RB ^ ^ repeat
may- RB ^ ^ repeat
maybe RB maybe ^ OK
maybe RB ^ ^ repeat
that DT ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
a DT ^ ^ false_start
little JJ ^ ^ false_start
bit NN ^ ^ false_start
to IN ^ ^ false_start
the DT ^ ^ false_start
i- PRP ^ ^ repeat
it PRP it ^ OK
helps VBZ helps ^ OK
that DT that ^ OK
way NN way ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
the- PRP ^ ^ repeat
they PRP they ^ OK
're VBP 're ^ OK
sophisticated JJ sophisticated ^ OK
enough RB enough ^ OK
they PRP they ^ OK
're VBP 're ^ OK
still RB still ^ OK
going VBG going ^ OK
to TO to ^ OK
find VB find ^ OK
a DT a ^ OK
way NN way ^ OK
i PRP i ^ OK
believe VBP believe ^ OK

i PRP i ^ OK
know VBP know ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
ma- VBZ ^ ^ repeat
makes VBZ makes ^ OK
people NNS people ^ OK
feel VB feel ^ OK
safe JJ safe ^ OK
for IN for ^ OK
one CD one ^ OK
thing NN thing ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ false_start
makes VBZ ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
keeps VBZ keeps ^ OK
people NNS people ^ OK
flying VBG flying ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
it PRP it ^ OK
may MD may ^ OK
help VB help ^ OK
a DT a ^ OK
little JJ little ^ OK

at IN at ^ OK

georgia NNP georgia ^ OK
tech NNP tech ^ OK

georgia NNP georgia ^ OK
tech NNP tech ^ OK

w- WRB ^ ^ repeat
wha- WP ^ ^ repeat
why WRB why ^ OK
did VBD did ^ OK
that DT that ^ OK
happen VB happen ^ OK
though RB though ^ OK

eh UH ^ ^ filler
who WP who ^ OK
'd VBD 'd ^ OK
y'all PRP y'all ^ OK
beat VB beat ^ OK

m- PRP ^ ^ repeat
my PRP my arg0 OK
father NN father arg0 OK
smoked VBD smoked predicate OK
from IN from argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK
he PRP he arg1 OK
was VBD was argM_tmp OK
thirteen CD thirteen arg2 OK
to ADVP-TMP- 1 to argM_tmp OK
the IN the argM_tmp OK
time DT time argM_tmp OK
he NN he arg1 OK
was PRP was argM_tmp OK
like VBD ^ ^ filler
fifty UH fifty arg2 OK

so UH ^ ^ filler
in IN in ^ OK
general JJ general ^ OK
i PRP i arg1 OK
am VBP am predicate OK
in IN in arg2 OK
favor NN favor arg2 OK
of IN of arg2 OK
pretty RB pretty arg2 OK
much JJ much arg2 OK
anything NN anything arg0 OK
to TO ^ ^ repeat
uh UH ^ ^ filler
to TO to arg2 OK
encourage VB encourage arg2 OK
people NNS people arg0 OK
not RB not argM_neg OK
to TO to arg1 OK
smoke VB smoke arg1 OK

i- PRP i- ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
know VBP ^ ^ repeat
know VBP know predicate OK
it PRP it arg0 OK
took VBD took arg1 OK
my PRP my arg0 false_start
father NN father arg0 false_start
like UH ^ ^ filler
three CD three arg1 OK
or CC or arg1 OK
four CD four arg1 OK
time- NNS ^ ^ repeat
times NNS times arg1 OK
to TO to arg1 OK
quit VB quit arg1 OK

well UH ^ ^ false_start
uh UH ^ ^ filler
w- XX ^ ^ filler
there EX there ^ OK
's BES 's predicate OK
uh UH ^ ^ filler
no DT no arg1 OK
smoking NN smoking arg1 OK
in IN in argM_loc OK
restaurants NNS restaurants argM_loc OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
know VBP ^ ^ false_start
in IN ^ ^ repeat
a DT ^ ^ repeat
lot NN ^ ^ repeat
of IN ^ ^ repeat
uh UH ^ ^ filler
in IN ^ ^ false_start
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
places NNS ^ ^ false_start
like IN ^ ^ false_start
uh UH ^ ^ filler
outside IN ^ ^ false_start
of IN ^ ^ false_start
well UH ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
a DT a arg2 OK
college NN college arg2 OK
student NN student arg2 OK

they PRP ^ ^ repeat
they PRP they ^ OK
might MD might ^ OK

but CC ^ ^ false_start
probably RB probably ^ OK
not RB not ^ OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
'd MD 'd arg1 OK
be VB be arg1 OK
good JJ good arg2 OK
if IN if arg2 OK
they PRP they arg0 OK
did VBD did arg2 OK
because VP because ^ OK
there IN there ^ OK
's EX are predicate false_start
a BES a arg1 OK
lot DT lot arg1 OK
of NN of arg1 OK
people IN people arg0 OK
that NNS that arg1 OK
smoke WDT smoke arg1 OK
on VBP on arg1 OK
campus IN campus arg1 OK

w- UH ^ ^ filler
well UH ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
good JJ good arg2 OK

but CC but ^ OK
uh UH ^ ^ filler

i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
a DT ^ ^ false_start
like UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg0 OK
he- VBZ ^ ^ repeat
helps VBZ helps arg1 OK
people NNS people arg1 OK
that WDT that arg0 OK
are VBP are arg1 OK
going VBG going arg1 OK
to TO to arg2 OK
quit VB quit arg2 OK
that WDT that arg0 OK
would MD would arg1 OK
probably RB probably arg1 OK
be VB be arg1 OK
quitting VBG quitting arg1 OK
anyway RB anyway arg1 OK

i- PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
glad JJ glad arg2 OK
they PRP they arg1 OK
exist VBP exist arg2 OK

but CC but ^ OK
uh UH ^ ^ filler

just RB just ^ OK
just RB ^ ^ repeat
themselves PRP themselves ^ OK

i UNK ^ ^ filler
i UNK ^ ^ filler
definitely UNK definitely ^ OK
a UNK a ^ OK
problem UNK problem ^ OK
you UNK you ^ OK
know UNK know ^ OK

um UH ^ argM_tmp filler
because IN ^ ^ false_start
we PRP we arg0 OK
all DT all ^ OK
use VBP use predicate OK
the DT the arg1 OK
computers NNS computers arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
from IN from argM_tmp false_start
preschool NN preschool argM_tmp false_start
age NN age argM_tmp false_start
sometimes RB and ^ false_start
sometimes RB sometimes argM_tmp false_start
younger JJR ^ argM_tmp false_start
ah UH ^ ^ filler
on RB ^ ^ false_start
up RB younger ^ false_start

and CC ^ ^ false_start
then RB ^ ^ false_start
we PRP we arg0 OK
have VBP have predicate OK
adults NNS adults arg0 OK
who WP who arg1 OK
may MD may arg1 OK
have VB have arg1 OK
to TO to arg1 OK
turn VB turn arg1 OK
in RP in arg_particl OK
reports NNS reports arg1 OK
or CC ^ ^ repeat
or CC or arg1 OK
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
look VB look arg1 OK
for IN for arg1 OK
information NN information arg1 OK
for IN for arg2 OK
whatever WP whatever arg0 OK
uh UH ^ ^ filler
topic NN topic arg0 OK
is VBZ is arg2 OK
needed VBN needed arg2 OK
or NP-3 ^ ^ repeat
or CC or arg2 OK
where CC whatever arg1 false_start
they WRB ^ ^ repeat
they VBP they arg0 OK
have PRP ^ ^ repeat
have PRP have arg2 OK
to VBP to arg2 OK
do TO do arg2 OK
for VB for arg2 OK
school IN school arg2 OK
um NN ^ ^ filler
or UH or arg2 OK
college CC college arg2 OK

and CC and ^ OK
um UH ^ ^ filler

so UH so ^ OK
the DT the ^ OK
th- DT ^ ^ repeat
computers NNS computers ^ OK
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it ^ OK
was VBD was ^ OK
who- JJ ^ ^ repeat
whoever WP whoever ^ OK
came VBD came ^ OK
up RP up ^ OK
with IN with ^ OK
it PRP it ^ OK
gave VBD gave ^ OK
to IN to ^ OK
whomever WP whomever ^ OK
came VBD came ^ OK
up RP up ^ OK
with IN with ^ OK
it PRP it ^ OK

uh UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's SBAR-1 's arg1 OK
great BES great arg2 OK
you JJ ^ ^ filler
know PRP ^ ^ filler
that VBP that arg2 OK
they IN they arg0 OK
've PRP 've arg2 OK
done VBP done arg2 OK
that VBN that arg1 OK

it PRP it arg0 OK
saves VBZ saves predicate OK
trips NNS trips arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when arg1 OK
you PRP you arg0 OK
have VBP have arg1 OK
to TO to arg1 OK
um UH ^ ^ filler
uh UH ^ ^ filler
have VB have arg1 OK
information NN information arg1 OK
and CC and arg1 OK
get VB ^ ^ repeat
get VB get arg1 OK
your PRP your arg1 OK
um UH ^ ^ filler
papers NNS papers arg1 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
together RB together arg1 OK
for IN for arg1 OK
school NN school arg1 OK

you PRP you arg0 OK
can MD can ^ OK
sit VB sit predicate OK
at IN ^ ^ repeat
in IN in argM_loc OK
the DT the argM_loc OK
comfort NN comfort argM_loc OK
of IN of argM_loc OK
your PRP your argM_loc OK
own JJ own argM_loc OK
home NN home argM_loc OK
and CC and ^ OK
go VB go predicate OK
on IN on arg1 OK
your PRP your arg1 OK
computer NN computer arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
an- CC ^ ^ repeat
and CC ^ ^ false_start
unfortunately RB unfortunately ^ OK
though RB ^ arg0 false_start
those DT ^ ^ filler
they PRP those ^ false_start
who WP who arg0 OK
do VBP do arg0 OK
not RB not arg0 OK
own VB own arg0 OK
their PRP their arg0 OK
own JJ own arg0 OK
computer NN computer arg0 OK
can MD can ^ OK
go VB go predicate OK
to IN to arg4 OK
the DT the arg4 OK
library NN library arg4 OK
and CC and arg4 OK
um UH ^ ^ filler
look VB look arg4 OK
up RP up arg_particl OK
any DT any arg1 OK
information NN information arg1 OK
that WDT that arg1 OK
they PRP they arg0 OK
need VBP need arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT a arg2 OK
great JJ great arg2 OK
improvement NN improvement arg2 OK

that DT ^ ^ repeat
tha- DT ^ ^ repeat
great JJ great ^ OK
point NN point ^ OK

and CC ^ ^ false_start
then RB ^ ^ false_start
either CC you arg0 false_start
you PRP 'd ^ false_start
have VBP have predicate OK
some DT some arg0 OK
that WDT that arg0 OK
would MD would arg0 OK
much RB much arg0 OK
rather RB rather arg0 OK
do SBAR-2 do arg0 OK
that VB that arg0 OK
than DT than arg1 OK
have IN have arg1 OK
the VB the arg1 OK
pressure DT pressure arg1 OK
of NN of arg1 OK
um IN ^ ^ filler
a UH a arg1 OK
professor DT professor arg1 OK
or NN or arg1 OK
teacher CC teacher arg1 OK
over NN over arg1 OK
them IN them arg1 OK

so UH ^ ^ filler
uh UH ^ ^ filler
i- PRP ^ ^ repeat
it PRP it arg1 OK
could MD could ^ OK
go VB go predicate OK
both DT both arg4 OK
ways NNS ways arg4 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
stand VBP stand predicate OK
in IN in arg1 OK
agreement NN agreement arg1 OK
with IN with ^ OK
you PRP you ^ OK
on IN on ^ OK
that DT that ^ OK
one CD one ^ OK

um UH ^ ^ repeat
yet RB yet ^ OK
overall RB overall ^ OK
the DT the arg1 OK
computers NNS computers arg1 OK
um UH ^ ^ filler
are VBP are predicate OK
a DT a arg2 OK
great JJ great arg2 OK
addition NN addition arg2 OK
to IN to arg2 OK
classroom NN classroom arg2 OK

and CC ^ arg2 false_start
it PRP it arg1 OK
's BES 's predicate OK
aid NN a ^ false_start
ah UH ^ ^ filler
great JJ great arg2 OK
aid NN aid arg2 OK
to IN to arg2 OK
the DT the arg2 OK
students NNS students arg2 OK

also RB ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
the DT ^ arg1 false_start
they PRP the ^ false_start
computers NNS ^ arg1 false_start
they PRP computers ^ false_start
are VBP are arg1 OK
a DT a arg2 OK
great JJ great arg2 OK
asset NN asset arg2 OK
t- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN for arg2 OK
intellectuals NNS ^ ^ repeat
uh UH ^ ^ filler
learning VBG learning arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
in IN in ^ OK
your PRP your ^ OK
spare JJ spare ^ OK
time NN time ^ OK
even RB even ^ OK
away RB away ^ OK
from IN from ^ OK
the DT the ^ OK
classroom NN classroom ^ OK
just RB just ^ OK
to TO to ^ OK
study VB study ^ OK
and CC ^ ^ repeat
and CC and ^ OK
um UH ^ ^ filler
improve VB improve ^ OK
on IN on ^ OK
yourself PRP yourself ^ OK
and CC and ^ OK
um UH ^ ^ filler
probably RB probably ^ OK
get VB get ^ OK
ahead RB ahead ^ OK
in IN in ^ OK
class NN class ^ OK
also RB also ^ OK

improve VB improve ^ OK
in IN in ^ OK
math NN math ^ OK
eh UH ^ ^ filler

the DT the arg1 OK
computer NN computer arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
a DT a arg2 OK
great JJ great arg2 OK
asset NN asset arg2 OK
in IN in arg2 OK
so RB so arg2 OK
many JJ many arg2 OK
areas NNS areas arg2 OK

it PRP ^ ^ false_start
especially RB ^ ^ false_start
ah UH ^ ^ filler
the DT the arg0 false_start
it PRP ^ ^ false_start
public JJ public arg0 false_start
it PRP ^ ^ false_start
school NN school arg0 false_start
it PRP ^ ^ false_start
system NN system arg0 false_start
has VBZ has predicate OK
a DT a arg1 OK
great JJ great arg1 OK
need NN need arg1 OK
for IN for arg1 OK
them PRP them arg1 OK
here RB ^ ^ repeat
in IN ^ ^ repeat
this DT ^ ^ repeat
school NN ^ ^ repeat
system NN ^ ^ repeat

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
great JJ great arg2 OK
especially RB especially argM_tmp OK
when WRB when argM_tmp OK
the DT the arg0 OK
computers NNS computers arg0 OK
are VBP are argM_tmp OK
donated VBN donated argM_tmp OK
to TO to arg2 OK
help VB help arg2 OK
these DT these arg1 OK
kids NNS kids arg1 OK

and CC ^ ^ false_start
improving VBG improving ^ OK
in IN in ^ OK
their PRP their ^ OK
reading NN reading ^ OK
um UH ^ ^ filler
and CC and ^ OK
math NN math ^ OK
skills NNS skills ^ OK
um UH ^ ^ filler
especially RB especially ^ OK

and CC ^ ^ filler
uh UH ^ ^ filler
i PRP i arg0 OK
along IN along arg0 false_start
with IN with arg0 false_start
the DT the arg0 false_start
teachers NNS teachers arg0 false_start
think VBP think predicate OK
that IN that arg1 OK
they PRP ^ ^ repeat
they PRP they arg0 OK
aid VB aid arg1 OK
the DT the arg1 OK
children NNS children arg1 OK
in IN in arg1 OK
a DT a arg1 OK
great JJ great arg1 OK
way NN way arg1 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
just RB ^ ^ repeat
enjoy VBP enjoy predicate OK
going VBG going arg1 OK
to IN to arg4 OK
the DT the arg4 OK
movies NNS movies arg4 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
like VBP ^ ^ repeat
like VBP like predicate OK
the DT the arg1 OK
sound NN sound arg1 OK
sound NN and arg1 false_start
big JJ big arg1 OK
screen NN screen arg1 OK

the DT ^ ^ repeat
the DT the arg1 OK
best JJS ^ ^ repeat
best JJS best arg1 OK
time NN time arg1 OK
is VBZ is predicate OK
like UH ^ ^ filler
around RB around arg2 OK
noon NN noon arg2 OK

so UH ^ ^ repeat
so UH ^ ^ false_start
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg1 OK
like VB like predicate OK
going VBG going arg1 OK
to IN to arg4 OK
the DT the arg4 OK
movies NNS movies arg4 OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
definitely RB ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
like VB like predicate OK
watching VBG watching arg1 OK
movies NNS movies arg1 OK

well UH well ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
jus- RB ^ ^ repeat
do VBP do argM_neg OK
n't RB n't argM_neg OK
really RB really ^ OK
like VB like predicate OK
watching VBG watching arg1 OK
them PRP them arg1 OK
at IN at argM_loc OK
home NN home argM_loc OK
like UH ^ ^ filler
not RB not ^ OK
even RB even ^ OK
half NN half ^ OK
as RB ^ ^ repeat
as RB as ^ OK
much RB ^ ^ repeat
much RB much ^ OK

it PRP it arg2 OK
does VBZ does argM_neg OK
n't RB n't argM_neg OK
really RB really ^ OK
matter VB matter predicate OK
to IN to arg2 OK
me PRP me arg2 OK
like UH ^ ^ filler
w- IN ^ ^ repeat
like UH ^ ^ filler
whether IN whether ^ repeat
it PRP it arg1 OK
's BES 's arg1 OK
rainy JJ rainy arg2 OK
or CC ^ ^ repeat
or CC ^ ^ false_start
like UH ^ ^ filler
what WP ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
weather NN ^ ^ false_start

i PRP ^ ^ repeat
like VBP ^ ^ filler
i PRP i arg0 OK
just RB ^ ^ repeat
just RB just ^ OK
think VBP think predicate OK
like UH ^ ^ filler
you PRP you arg0 OK
get VBP get arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
more RBR more arg1 OK
into IN into arg1 OK
it PRP it arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ filler
like UH ^ ^ filler
i PRP i arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
ever RB ever ^ OK
get VB get predicate OK
up RP up arg1 OK
or CC or arg1 OK
leave VB leave arg1 OK
or CC ^ arg1 false_start
anything NN ^ arg1 false_start

i PRP ^ ^ repeat
i PRP i arg1 OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
jus- RB ^ ^ repeat
just RB just ^ OK
go VB go predicate OK
with IN with argM_other OK
like UH ^ ^ filler
a DT a argM_other OK
girl NN girl argM_other OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

actually RB actually ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
a DT a arg1 OK
good JJ good arg1 OK
set NN set arg1 OK
up RP up arg1 OK
to TO to arg1 OK
watch VB watch arg1 OK
movies NNS movies arg1 OK

so UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
like VBP like predicate OK
watching VBG watching arg1 OK
movies NNS movies arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
dorm NN dorm argM_loc OK

but CC but ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
definitely RB definitely ^ OK
stuff NN ^ ^ repeat
movies NNS movies arg1 OK
like IN ^ ^ repeat
like IN like arg1 OK
lord NNP lord arg1 OK
of IN of arg1 OK
the DT the arg1 OK
rings NNPS rings arg1 OK
and CC ^ arg1 false_start
stuff NN ^ arg1 false_start
like IN ^ arg1 false_start
that DT ^ arg1 false_start
are VBP are predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
lot NN ^ ^ repeat
lot NN lot arg2 OK
better JJR better arg2 OK
in IN in arg2 OK
the DT the arg2 OK
theater NN theater arg2 OK

and CC ^ ^ false_start
that DT ^ ^ repeat
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
at IN at argM_loc OK
home NN home argM_loc OK
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
not RB not arg2 OK
the DT the arg2 OK
same JJ same arg2 OK

like UH ^ ^ filler
aft- IN ^ ^ repeat
after IN after ^ OK
you PRP you ^ OK
see VBP see ^ OK
a DT a ^ OK
movie NN movie ^ OK
in IN in ^ OK
the DT the ^ OK
theater NN theater ^ OK
and CC and ^ OK
then RB then ^ OK
you PRP you ^ OK
see VBP see ^ OK
it PRP it ^ OK
a IN at ^ false_start
home NN home ^ OK
you PRP you ^ OK
're VBP 're ^ OK
like RP ^ ^ filler
yeah UH ^ ^ filler

i PRP ^ ^ repeat
like VBP ^ ^ filler
i PRP i arg0 OK
just RB just ^ OK
watched VBD watched predicate OK
the DT the arg1 OK
texas NNP texas arg1 OK
chainsaw NN chainsaw arg1 OK
massacre NN massacre arg1 OK
uh UH ^ ^ filler
the DT the argM_tmp OK
other JJ other argM_tmp OK
day NN day argM_tmp OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
really RB really arg2 OK
scary JJ scary arg2 OK

yeah UH ^ ^ filler
because IN because ^ OK
she PRP she ^ OK
'll MD 'll ^ OK
be VB be ^ OK
freaking VBG freaking ^ OK
out RP out ^ OK

or CC or ^ OK
m- JJ ^ ^ repeat
mine PRP mine ^ OK
was VBD was ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
star NNP star ^ OK
wars NNPS wars ^ OK
type NN type ^ OK

but CC but ^ OK
more RBR more ^ OK
towards IN towards ^ OK
something NN something ^ false_start
like IN like ^ false_start
like UH ^ ^ filler
drama NN drama ^ OK
that DT ^ ^ false_start
or CC or ^ OK
comedy NN comedy ^ OK
that DT ^ ^ false_start

bad NNP bad ^ OK
boys NNPS boys ^ OK
two CD two ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP i arg0 OK
just RB ^ ^ repeat
just RB ^ ^ repeat
did VBD ^ ^ repeat
did VBD did argM_neg OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
want VB ^ ^ repeat
really RB really ^ OK
like VB like predicate OK
that DT ^ ^ repeat
that DT that arg1 OK
very RB very ^ OK
much RB much ^ OK

i PRP ^ ^ repeat
mean VBP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
like VBP like predicate OK
the DT the arg1 OK
action NN action arg1 OK

but CC but ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
i PRP i arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
really RB really arg1 OK
like VB like arg1 OK
action NN action arg1 OK
movies NNS movies arg1 OK
as RB as arg1 OK
much RB much arg1 OK

are VBP ^ ^ false_start
you PRP ^ ^ false_start
oh UH ^ ^ filler
so UH ^ ^ filler
you PRP you arg1 OK
're VBP 're predicate OK
fairly RB fairly arg2 OK
uh UH ^ ^ filler
limited JJ limited arg2 OK
uh UH ^ ^ filler
be- XX ^ ^ false_start
how WRB ^ ^ repeat
how WRB how ^ OK
your PRP your arg1 OK
personal JJ personal arg1 OK
views NNS views arg1 OK
can MD can ^ OK
be VB be ^ OK
expressed VBN expressed predicate OK
in IN in ^ OK
your PRP your ^ OK
teaching NN teaching ^ OK

i PRP i arg0 OK
end VBP end predicate OK
up RP up arg_particl OK
uh UH ^ ^ filler
cause VB cause ^ OK
difficulty NN difficulty ^ OK
at IN ^ ^ repeat
at IN at ^ OK
work NN work ^ OK
situations NNS situations ^ OK
uh UH ^ ^ filler
because IN because ^ OK
i PRP i arg1 OK
a- VBP ^ ^ repeat
am VBP am predicate OK
more RBR more arg2 OK
pointed JJ pointed arg2 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
if IN if ^ OK
people NNS people arg0 OK
will MD will ^ OK
draw VB draw predicate OK
me PRP me arg1 OK
out RB out arg1 OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not arg2 OK
uh UH ^ ^ filler
as RB ^ ^ repeat
as RB as arg2 OK
hesitant JJ hesitant arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
pe- NNS ^ ^ repeat
you PRP ^ ^ false_start
know VBP ^ ^ false_start
then RB ^ ^ false_start
p- NNS ^ ^ repeat
and CC ^ ^ false_start
people NNS people arg0 OK
can MD can ^ OK
read VB read predicate OK
uh UH ^ ^ filler
direct JJ direct arg1 OK
answers NNS answers arg1 OK
the DT the arg3 OK
wrong JJ wrong arg3 OK
way NN way arg3 OK

eh UH ^ ^ filler
it PRP it ^ OK
just RB ^ ^ false_start
depends VBZ depends predicate OK
on IN on arg1 OK
how WRB how arg2 OK
they PRP they arg1 OK
're VBP 're arg1 OK
raised VBN raised arg1 OK
and ADVP-MNR- 1 and ^ OK
what CC ^ ^ repeat
what PRP what arg2 OK
their WP ^ ^ repeat
the WP the arg1 OK
tolerance DT tolerance arg1 OK
is NN is predicate OK
for PP-4 for arg2 OK
somebody VBZ somebody arg2 OK
else IN else arg2 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
onl- XX ^ ^ false_start
lived VBN lived predicate OK
where WRB where argM_loc OK
i PRP i argM_loc OK
've VBP 've argM_loc OK
been VBN been argM_loc OK
for ADVP-LOC- PRD-1 for argM_tm OK
about IN about argM_tmp OK
little RB little argM_tmp OK
over JJ over argM_tmp OK
two IN two argM_tmp OK
months CD months argM_tmp OK
though NNS ^ ^ false_start

i PRP i arg0 OK
hardly RB hardly ^ OK
know VBP know predicate OK
anybody NN anybody arg1 OK
and CC ^ ^ repeat
s- XX ^ ^ false_start
and CC and ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have predicate OK
any DT any arg1 OK
real JJ real arg1 OK
reason NN reason arg1 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
in IN in arg2 OK
another DT another arg2 OK
part NN part arg2 OK
of IN of arg2 OK
florida NNP florida arg2 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
moved VBD moved predicate OK
in RP in arg2 OK
to IN ^ ^ false_start
a DT ^ ^ false_start
closer RBR closer arg2 OK
to IN to arg2 OK
a DT a arg2 OK
college NN college arg2 OK
campus NN campus arg2 OK
uh UH ^ ^ filler
about RB about ^ OK
two CD two ^ OK
months NNS months ^ OK
ago RB ago ^ OK

i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
in IN in arg2 OK
the DT the arg2 OK
state NN state arg2 OK
for IN ^ ^ false_start
since IN since arg2 OK
the DT the arg2 OK
first JJ first arg2 OK
of IN of arg2 OK
the DT the arg2 OK
year NN year arg2 OK
but CC but ^ OK
was VBD was predicate OK
basically RB basically arg2 OK
isolated VBN isolated arg2 OK
in IN in arg2 OK
a DT a arg2 OK
very RB very arg2 OK
small JJ small arg2 OK
town NN town arg2 OK
uh UH ^ ^ filler
the DT the ^ OK
first JJ first ^ OK
half NN half ^ OK
of IN of ^ OK
the DT the ^ OK
year NN year ^ OK

i PRP ^ ^ repeat
'm VBP ^ ^ repeat
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not arg2 OK
li- XX ^ ^ false_start
exactly RB exactly arg2 OK
originally RB originally arg2 OK
from IN from arg2 OK
there RB there arg2 OK

and CC ^ ^ false_start
some DT some arg0 OK
people NNS people arg0 OK
find VBP find predicate OK
that DT that arg1 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
neat JJ neat arg1 OK
and CC and ^ OK
fascinating JJ fascinating ^ OK
that IN that ^ OK
i PRP ^ ^ false_start
get VBP ^ ^ false_start
to TO ^ ^ false_start
th- XX ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
ah UH ^ ^ filler
uh UH ^ ^ filler
you PRP you arg0 OK
get VBP get predicate OK
to TO to arg1 OK
to TO _VERB_ arg1 false_start

well UH ^ ^ filler
what WP ^ ^ false_start
the DT the arg1 OK
way NN way arg1 OK
i PRP i arg0 OK
look VBP look predicate OK
at IN at arg1 OK
it PRP it arg1 OK
is ADVP-MNR- 1 is ^ OK
w- VBZ ^ ^ false_start
uh XX ^ ^ filler
i UH i arg0 OK
did PRP did ^ OK
n't VBD n't ^ OK
get RB get predicate OK
to VB to arg1 OK
choose TO choose arg1 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
if IN if ^ OK
i PRP i arg0 OK
had VBD had ^ OK
it PRP it ^ OK
to TO to ^ OK
choose VB choose predicate OK
from IN from arg1 OK
the DT the arg1 OK
beginning NN beginning arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would ^ OK
've VB ^ ^ repeat
've VB 've ^ OK
had VBN ^ ^ repeat
to TO ^ ^ repeat
ha- VB ^ ^ repeat
had VBN had predicate OK
like UH ^ ^ filler
parallel JJ parallel arg1 OK
lives NNS lives arg1 OK

i PRP i arg0 OK
would MD would ^ OK
've VBP 've ^ OK
had VBN had predicate OK
an DT an arg1 OK
opportunity NN opportunity arg1 OK
to TO to arg1 OK
go VB go arg1 OK
and CC and ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
have VB have predicate OK
this DT this arg1 OK
kind RB kind arg1 OK
of RB of arg1 OK
vagabond JJ vagabond arg1 OK
life NN life arg1 OK
and CC ^ ^ repeat
and CC and ^ OK
have VBP have predicate OK
new JJ new arg1 OK
situations NNS situations arg1 OK
like IN like ^ OK
b. NNP b. ^ OK
j. NNP j. ^ OK
and CC and ^ OK
the DT the ^ OK
bear NNP bear ^ OK
kind NN kind ^ OK
of IN of ^ OK
thing NN thing ^ OK

and CC ^ ^ false_start
at IN at ^ OK
the DT the ^ OK
same JJ same ^ OK
time NN time ^ OK
i PRP i arg0 OK
would MD would ^ OK
've VBP 've ^ OK
had VBN had predicate OK
a DT a arg0 OK
life NN life arg0 OK
that WDT that ^ OK
would MD would ^ OK
've VBP 've ^ OK
had VBN had predicate OK
some DT some arg1 OK
continu- NN ^ ^ repeat
continuity NN continuity arg1 OK
to IN to arg1 OK
it PRP it arg1 OK
and CC and ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
being VBG being predicate OK
consistent JJ consistent arg1 OK
in IN ^ ^ repeat
in IN ^ ^ repeat
in IN in arg1 OK
one CD ^ ^ repeat
one CD one arg1 OK
place NN place arg1 OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
could MD ^ ^ false_start
go VB ^ ^ false_start
back RB ^ ^ false_start
to IN ^ ^ false_start
i PRP i arg0 OK
just RB ^ ^ false_start
tried VBD tried predicate OK
to TO to arg1 OK
contact VB contact arg1 OK
somebody NN somebody arg1 OK
from IN from ^ OK
high JJ high ^ OK
school NN school ^ OK
i- XX ^ ^ false_start
just RB ^ ^ false_start
the DT the ^ OK
other JJ other ^ OK
day NN day ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's SBAR-1 's ^ OK
amazing BES amazing predicate OK
you JJ ^ ^ false_start
know PRP ^ ^ false_start
that VBP that arg0 OK
it IN ^ ^ false_start
fifteen PRP fifteen arg1 OK
something CD something arg1 OK
years NN years arg1 OK
has NNS have arg0 false_start
gone VBZ gone arg0 OK
by VBN by arg2 OK
already RB already ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
can MD can ^ OK
hardly RB hardly ^ OK
keep VB keep predicate OK
track NN track arg1 OK
of IN of arg1 OK
anybody NN anybody arg0 OK
uh UH ^ ^ filler
that WDT that ^ OK
was VBD was ^ OK
there RB there ^ OK
um UH ^ ^ filler
ye- XX ^ ^ false_start
uh UH ^ ^ repeat
eh UH ^ ^ repeat
moving VBG moving predicate OK
as RB as ^ OK
much RB much ^ OK
as IN as ^ OK
i PRP i ^ OK
have VBP have ^ OK

uh UH uh ^ OK
i- XX ^ ^ false_start

well UH ^ ^ filler
i PRP i ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
was VBD was predicate OK
div- JJ ^ ^ repeat
divorced JJ divorced arg2 OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP i arg0 OK
got VBD got predicate OK
married VBN married arg1 OK
too RB too argM_tmp OK
early RB early argM_tmp OK

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
the DT the arg1 OK
only JJ only arg1 OK
thing NN thing arg1 OK
is VBZ is arg1 OK
it PRP it arg0 OK
makes VBZ makes arg2 OK
some DT some arg0 OK
pe- NN ^ ^ repeat
people NNS people arg0 OK
maybe RB ^ ^ filler
not RB not argM_neg OK
think VBP ^ ^ false_start
take VB take arg1 OK
marriage NN marriage arg1 OK
as RB as argM_adverb OK
seriously RB seriously argM_adverb OK
as IN as argM_adverb OK
they PRP they arg0 OK
would MD would argM_mod OK
have VB have arg1 OK
otherwise RB otherwise argM_adverb OK

do VBP ^ ^ false_start
are VBP are predicate OK
most JJS most arg0 OK
of IN of arg0 OK
your PRP your arg0 OK
friends NNS friends arg0 OK
' POS ' arg0 OK
parents NNS parents arg0 OK
not RB not argM_neg OK
divorced JJ divorced arg2 OK

a DT a ^ OK
l- JJ ^ ^ repeat
little JJ little ^ OK
trend NN trend ^ OK
there RB there ^ OK

w- XX ^ ^ false_start
yeah UH yeah ^ OK

in IN in argM_tmp OK
my PRP ^ ^ repeat
my PRP my argM_tmp OK
parents NNS parents argM_tmp OK
' POS ' argM_tmp OK
generation NN generation argM_tmp OK
hardly RB hardly arg0 OK
anybody NN anybody arg0 OK
got VBD got predicate OK
divorced VBN divorced arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
remem- VB ^ ^ repeat
remember VBP remember predicate OK
when WRB when argM_tmp OK
i PRP i argM_tmp OK
was VBD was argM_tmp OK
growing VBG growing argM_tmp OK
up RB up argM_tmp OK
there ADVP-1 there arg1 OK
was EX was arg1 OK
one VBD one arg0 OK
divorced CD divorced arg0 OK
woman JJ woman arg0 OK
up NN up arg0 OK
the IN the arg0 OK
street DT street arg0 OK
who NN who arg0 OK
had WP had arg2 OK
a VBD a arg1 OK
daughter DT daughter arg1 OK
my NN my arg1 OK
age PRP age arg1 OK

the DT the arg2 OK
way NN way arg1 OK
the DT the arg0 OK
rest NN rest arg0 OK
of IN of arg0 OK
the DT the arg0 OK
neighborhood NN neighborhood arg0 OK
acted VBD acted predicate OK
you ADVP-1 ^ ^ false_start
'd PRP ^ ^ false_start
as- MD ^ ^ false_start
you XX ^ ^ filler
know PRP ^ ^ filler
you VBP you arg0 OK
would PRP would argM_mod OK
think MD think predicate OK
that VB that arg1 OK
there IN there arg1 OK
'd EX 'd argM_mod OK
be MD be arg1 OK
something VB something arg2 OK
really NN really arg2 OK
different RB different arg2 OK
about JJ about arg2 OK
their IN their arg2 OK
house PRP house arg2 OK
that NN that arg1 OK
there IN there arg1 OK
's EX 's arg1 OK
something BES something arg2 OK
really NN really arg2 OK
weird RB weird arg2 OK
about JJ about arg2 OK
this IN this arg2 OK
person DT person arg2 OK
because NN because argM_cause OK
it IN it arg1 OK
was PRP was argM_cause OK
so VBD so arg2 OK
^ ^ unusual ^ OK

the DT ^ ^ repeat
the DT the arg1 OK
one CD one arg1 OK
thing NN thing arg1 OK
that WDT that arg1 OK
i PRP i arg1 OK
regret VBP regret arg1 OK
when WRB when argM_tmp OK
i PRP i argM_tmp OK
think VBP think argM_tmp OK
back RB back argM_tmp OK
on IN on argM_tmp OK
my PRP my argM_tmp OK
first JJ first argM_tmp OK
marriage NN marriage argM_tmp OK
is ADVP-TMP- 3 is predicate OK
that VBZ that arg2 OK
i IN i arg0 OK
did PRP did arg2 OK
n't VBD n't argM_neg OK
realize RB realize arg2 OK
how VB how argM_extent OK
much WRB much argM_extent OK
it RB it arg0 OK
affected PRP affected arg1 OK
other VBD other arg1 OK
people JJ people arg1 OK
besides NNS besides arg1 OK
just IN just arg1 OK
us RB us arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
realize VB realize predicate OK
that IN ^ ^ repeat
that IN ^ ^ false_start
our PRP ^ ^ false_start
bo- NN ^ ^ false_start
that IN that arg1 OK
his PRP his arg1 OK
parents NNS parents arg1 OK
and CC and arg1 OK
my PRP my arg1 OK
parents NNS parents arg1 OK
would MD would argM_mod OK
just RB just argM_adverb OK
be VB be arg1 OK
completely RB completely argM_adverb OK
devastated VBN devastated arg1 OK
because IN because argM_cause OK
it PRP it arg1 OK
was VBD was argM_cause OK
such PDT such arg2 OK
a DT a arg2 OK
different JJ different arg2 OK
thing NN thing arg2 OK
for IN for arg2 OK
them PRP them arg2 OK

my PRP ^ ^ repeat
my PRP my arg0 OK
husband NN husband arg0 OK
was VBD was ^ OK
divorced VBN divorced ^ OK
also RB ^ predicate false_start

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
she PRP ^ ^ repeat
she PRP she arg1 OK
seems VBZ seems predicate OK
all RB all arg2 OK
right JJ right arg2 OK

she PRP ^ ^ repeat
she PRP she arg1 OK
was VBD was predicate OK
five CD five arg2 OK
when WRB when argM_tmp OK
they PRP they arg0 OK
got VBD got argM_tmp OK
divorced VBN divorced arg1 OK

or CC ^ ^ false_start
four CD four ^ OK
i PRP i ^ OK
guess VBP guess ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
about RB about arg0 OK
half PDT half arg0 OK
her PRP her arg0 OK
friends NNS friends arg0 OK
had VBD had predicate OK
divorced VBN divorced arg1 OK
parents NNS parents arg1 OK

so UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
she PRP she arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
anything NN anything arg1 OK
of IN of arg1 OK
it PRP it arg1 OK
really RB really argM_adverb OK

it PRP it arg1 OK
does VBZ does ^ OK
n't RB n't argM_neg OK
seem VB seem predicate OK
like IN like arg2 OK
anybody NN anybody arg0 OK
would MD would argM_mod OK
say VB say arg2 OK
well UH ^ ^ filler
let VB let arg1 OK
's PRP 's arg0 OK
see VB see arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
think VB think arg1 OK
i PRP i arg0 OK
want VBP want arg1 OK
to TO to arg1 OK
get VB get arg1 OK
divorced VBN divorced arg1 OK
when WRB ^ ^ repeat
when WRB when argM_tmp OK
i PRP ^ ^ repeat
i PRP i arg0 OK
get VBP get argM_tmp OK
older JJR older arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
everybody NN ^ ^ repeat
everybody NN everybody arg0 OK
must MD must argM_mod OK
hope VB hope predicate OK
their PRP their arg1 OK
marriage NN marriage arg1 OK
is VBZ is arg1 OK
going VBG going argM_mod OK
to TO to argM_mod OK
last VB last arg1 OK

i PRP ^ arg1 repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
if IN if arg1 OK
you PRP you ^ OK
you PRP have arg0 false_start
ever RB ever arg1 OK
seen VBN seen arg1 OK
that DT that arg1 OK
elimidate NNP elimidate arg1 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
some DT some arg1 OK
of IN of arg1 OK
it PRP it arg1 OK
was VBD was predicate OK
pretty RB ^ ^ false_start
what WP what arg1 OK
i PRP i arg0 OK
consider VBP consider arg2 OK
vulgar ADJP-PRD- 3 vulgar arg1 OK
and JJ and arg1 OK
stuff CC stuff arg1 OK
that NN that arg1 OK
you WDT you arg0 OK
just PRP just arg1 OK
should RB should arg1 OK
not MD not arg1 OK
do RB do arg1 OK
in VB in argM_loc OK
public IN public argM_loc OK

and CC ^ ^ false_start
they PRP they arg0 OK
put VBD put predicate OK
this DT this arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
programming NN programming arg1 OK
on RB on arg1 OK
in IN in argM_tmp OK
the DT the argM_tmp OK
afternoon NN afternoon argM_tmp OK
after IN after argM_tmp OK
school NN school argM_tmp OK

um UH ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
seven CD seven arg1 OK
year NN year arg1 OK
old JJ old arg1 OK

she PRP she ^ OK
'll MD 'll ^ OK
well UH well ^ OK
no UH no ^ OK

and CC ^ ^ false_start
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
two CD two arg1 OK
year NN year arg1 OK
old JJ old arg1 OK

but CC but ^ OK
i PRP i arg0 OK
even RB even ^ false_start
noticed VBD noticed predicate OK
some DT some arg1 OK
of IN of arg1 OK
the DT the arg1 OK
nickelodeon NNP nickelodeon arg1 OK
programming NN programming arg1 OK
is VBZ is arg1 OK
not RB not arg2 OK
that RB that arg2 OK
great JJ great arg2 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
violence NN violence arg2 OK
wise RB wise arg2 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
there EX ^ ^ false_start
they PRP they arg0 OK
really RB really arg1 OK
need VBP need arg1 OK
to TO to arg1 OK
do VB do arg1 OK
something NN something arg1 OK

well UH ^ ^ filler
actually RB actually ^ OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
it PRP it arg1 OK
should MD should arg1 OK
be VB be arg1 OK
up IN up arg2 OK
to IN to arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
t. NN t. arg2 OK
v. NN v. arg2 OK
censors NNS censors arg2 OK

m- XX ^ ^ filler
exactly UH exactly ^ OK

and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do predicate OK
my PRP ^ ^ false_start
thei- PRP ^ ^ repeat
well UH ^ ^ filler
my PRP ^ ^ repeat
their PRP their arg1 OK
hom- NN ^ ^ repeat
homework NN ^ ^ repeat
homework NN homework arg1 OK

and CC ^ ^ false_start
if IN if ^ OK
there EX there ^ OK
was VBD was predicate OK
a DT a arg1 OK
show NN show arg1 OK
on SBAR-1 on arg2 OK
she RP she arg0 OK
thought PRP thought arg1 OK
we VBD we arg0 OK
should PRP should arg1 OK
n't MD n't arg1 OK
be RB be arg1 OK
watching VB watching arg1 OK
we VBG we arg2 OK
were NP-2 were ^ OK
you PRP ^ ^ filler
know VBD ^ ^ filler
told PRP told predicate OK
to VBP to arg1 OK
turn VBN turn arg1 OK
it TO it arg1 OK

i PRP ^ ^ repeat
do VBP ^ ^ false_start
n't RB ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
they PRP ^ ^ repeat
they PRP they arg0 OK
do VBP do arg1 OK
need VB need arg1 OK
to TO to arg1 OK
do VB do arg1 OK
something NN something arg2 OK

i PRP ^ ^ false_start
know VBP ^ ^ false_start
our PRP ^ ^ false_start
we PRP we arg0 OK
have VBP have predicate OK
a DT a arg1 OK
s- NN ^ ^ repeat
satellite NN satellite arg1 OK
system NN system arg1 OK

like UH ^ ^ repeat
if IN ^ ^ false_start
we PRP we arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
them PRP them arg0 OK
watching VBG watching arg1 OK
lifetime NNP lifetime arg1 OK
because IN because ^ OK
sometimes RB sometimes ^ OK
some DT ^ ^ repeat
some DT some arg1 OK
movies NNS movies arg1 OK
on IN on arg1 OK
there RB there arg1 OK
are VBP are ^ OK
geared VBN geared predicate OK
towards IN towards arg2 OK
violence NN violence arg2 OK

i PRP i arg1 OK
think VBP think predicate OK
t. NN t. arg0 OK
v. NN v. arg0 OK
shows VBZ shows arg0 OK
have VB have arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
to TO to arg1 OK
do VB do arg1 OK
with IN with arg1 OK
that DT that arg1 OK
though RB though arg1 OK
too RB too arg1 OK
because IN because ^ OK
i PRP i arg0 OK
know VBP know predicate OK
they PRP they arg1 OK
have VBP have arg1 OK
cartoons NNS cartoons arg1 OK
that WDT in ^ false_start
that WDT which arg1 false_start
the DT the arg1 OK
guys NNS guys arg0 OK
carry VB carry arg1 OK
weapons NNS weapons arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
got VBD ^ ^ repeat
got VBD got predicate OK
sun NN sun arg1 OK
poisons NNS poison arg1 false_start

so RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
know VBP know predicate OK

it PRP it ^ OK
's BES 's predicate OK
just RB just ^ OK
they PRP that ^ false_start
they PRP they arg2 OK
were VBD were arg1 OK
born VBN born arg1 OK
closer RBR closer argM_loc OK
to IN to argM_loc OK
the DT the argM_loc OK
equator NN equator argM_loc OK
than IN than argM_loc OK
we PRP we argM_loc OK
were VBD were argM_loc OK

and CC ^ ^ false_start
then RB then ^ OK
they PRP they arg1 OK
end VBP end predicate OK
up RP up arg_particl OK
getting VBG getting arg2 OK
darker JJR darker arg2 OK
and CC ^ ^ repeat
darker JJR ^ ^ repeat
and CC ^ ^ repeat
darker JJR ^ ^ repeat

than IN than ^ OK

it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler

there EX there ^ OK
's BES 's predicate OK
dark JJ dark arg1 OK
skinned NNP skinned arg1 OK
mexicans NNPS mexicans arg1 OK
and CC ^ ^ repeat
and CC and ^ OK
white JJ ^ ^ false_start
there EX there ^ OK
's BES 's predicate OK
white JJ white arg1 OK
mexicans NNPS mexicans arg1 OK
and CC and arg1 OK
black JJ black arg1 OK
mexicans NNPS mexicans arg1 OK
too RB too arg1 OK

the DT the arg0 OK
light NN light arg0 OK
skinned VBD skinned arg0 OK
mexicans NNPS mexicans arg0 OK
they PRP ^ ^ false_start
look VBP look predicate OK
white JJ white arg1 OK

and CC ^ ^ false_start
they PRP they ^ OK
got VBN got ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
see VBP ^ ^ filler
um UH ^ ^ filler
chinese JJ chinese arg0 OK
and CC and arg0 OK
japanese JJ japanese arg0 OK
w- NNS ^ ^ repeat
women NNS women arg0 OK
have VBP have predicate OK
smaller JJR smaller arg1 OK
feet NNS feet arg1 OK
because IN because ^ OK
they PRP they arg0 OK
tie VBP tie predicate OK
their PRP their arg1 OK
shoes NNS shoes arg1 OK
and CC and arg1 OK
their PRP their arg1 OK
feet NNS feet arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

only JJ only ^ OK
thing NN thing ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
like VB like ^ OK
right RB right ^ OK
no- RB ^ ^ repeat
now RB now ^ OK
in IN in ^ OK
this DT this ^ OK
day NN day ^ OK
and CC and ^ OK
time NN time ^ OK
is VBZ is ^ OK
because IN because ^ OK
of IN of ^ OK
nine CD nine ^ OK
eleven CD eleven ^ OK
all PDT all ^ OK
the DT the ^ OK
mixed JJ mixed ^ OK
children NNS children ^ OK
and CC and ^ OK
all PDT all ^ OK
the DT the ^ OK
oriental JJ oriental ^ OK
children NNS children ^ OK
are VBP are ^ OK
being VBG being ^ OK
treated VBN treated ^ OK
different RB different ^ OK
because IN because ^ OK
they PRP they ^ OK
think VBP think ^ OK
they PRP they ^ OK
're VBP 're ^ OK
from IN from ^ OK
over IN over ^ OK
there RB there ^ OK
with IN with ^ OK
what WP what ^ OK
happened VBD happened ^ OK
on IN on ^ OK
nine CD nine ^ OK
eleven CD eleven ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
like VB ^ ^ false_start
m- PRP ^ ^ false_start
plus CC ^ ^ false_start
my PRP my arg1 OK
son NN son arg1 OK
he PRP ^ ^ repeat
he PRP ^ ^ false_start
c- VBZ ^ ^ repeat
comes VBZ comes predicate OK
up IN up arg4 OK
to IN to arg4 OK
me PRP me arg4 OK

he PRP he arg0 OK
's BES ^ ^ false_start
like RP says predicate false_start
mommy NNP mommy arg1 OK
what WDT what arg2 OK
color NN color arg2 OK
am VBP am arg1 OK
i PRP i arg1 OK
because NP-PRD-1 ^ ^ repeat
because IN because ^ OK
he IN he arg1 OK
's PRP 's predicate OK
not BES not argM_neg OK
like RB like arg2 OK
his IN his arg2 OK
daddy PRP daddy arg2 OK

he PRP he arg0 OK
's BES ^ ^ false_start
like RP says predicate false_start
what WP what arg2 OK
am VBP am arg1 OK
i PRP i arg1 OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like RP ^ ^ false_start
i PRP i arg0 OK
ca- XX ^ ^ false_start
tell VBP tell predicate OK
him PRP him arg2 OK
biracial JJ biracial arg1 OK

i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP said predicate false_start
well UH ^ ^ filler
you PRP you arg1 OK
're VBP 're arg1 OK
a DT a arg2 OK
little JJ little arg2 OK
bit NN bit arg2 OK
of IN of arg2 OK
mommy NN mommy arg2 OK

he PRP he arg0 OK
's BES ^ ^ false_start
like RP says predicate false_start
w- WRB ^ ^ repeat
why WRB why arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he arg0 OK
has VBZ has predicate OK
this DT ^ ^ filler
this DT this arg1 OK
conversation NN conversation arg1 OK
that WDT that arg1 OK
you PRP you arg0 OK
ca MD ca arg1 OK
n't RB n't argM_neg OK
answer VB answer arg1 OK

well UH ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
say VB say ^ OK
had VBD that ^ false_start
if IN if ^ OK
i PRP i ^ OK
had VBD had ^ OK
all PDT all ^ OK
the DT the ^ OK
money NN money ^ OK
though RB ^ ^ false_start
i PRP i ^ OK
might MD might ^ OK
open VB open ^ OK
a DT a ^ OK
nightclub NN nightclub ^ OK
just RB just ^ OK
because IN because ^ OK
it PRP it ^ OK
would MD would ^ OK
be VB be ^ OK
less JJR less ^ OK
work NN work ^ OK
for IN for ^ OK
me PRP me ^ OK

just RB just ^ OK
because IN because ^ OK
like UH ^ ^ filler
well UH ^ ^ filler
if IN if ^ OK
i PRP i ^ OK
owned VBD owned ^ OK
a DT a ^ OK
restaurant NN restaurant ^ OK
i PRP i ^ OK
would MD would ^ OK
want VB want ^ OK
to TO to ^ OK
be VB be ^ OK
the DT the ^ OK
chef NN chef ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
so RB ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
really RB really ^ OK
hard JJ hard ^ OK
backbreaking VBG backbreaking ^ OK
work NN ^ ^ repeat
work NN work ^ OK

so RB ^ ^ false_start
i PRP i ^ OK
'd VBD 'd ^ OK
always RB always ^ OK
thought VBN thought ^ OK
it PRP it ^ OK
would S-1 would ^ OK
be MD be ^ OK
good VB good ^ OK
to JJ to ^ OK
open TO open ^ OK
um VB ^ ^ filler
a UH a ^ OK
vegetarian DT vegetarian ^ OK
restaurant JJ restaurant ^ OK
that NN that ^ OK
had WDT had ^ OK
like VBD ^ ^ filler
really UH ^ ^ repeat
really RB really ^ OK
really RB really ^ OK
good RB good ^ OK
uh JJ ^ ^ filler
dinner UH dinner ^ OK
entrees NN entrees ^ OK
and NNS ^ ^ false_start
things CC ^ ^ false_start

like UH ^ ^ filler
whether IN whether ^ OK
to TO to ^ OK
be VB be ^ OK
open JJ open ^ OK
for IN for ^ OK
breakfast NN breakfast ^ OK
lunch NN lunch ^ OK
and CC and ^ OK
dinner NN dinner ^ OK
and CC ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
a DT ^ ^ repeat
um UH ^ ^ filler
a DT a ^ OK
hard JJ ^ ^ repeat
hard JJ hard ^ OK
industry NN industry ^ OK
industry NN ^ ^ false_start
business NN and ^ false_start
a DT a ^ OK
hard JJ hard ^ OK
business NN business ^ OK
to TO to ^ OK
get VB get ^ OK
into IN into ^ OK
and NP-1 and ^ OK
make CC make ^ OK
it VB it ^ OK
successful PRP successful ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
had VBD had ^ OK
done VBN done ^ OK
some DT some ^ OK
research NN research ^ OK
into IN into ^ OK
it PRP it ^ OK
like UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
maybe RB maybe ^ OK
ten CD ten ^ OK
years NNS years ^ OK
ago RB ago ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start

i PRP i ^ OK
think VBP think ^ OK
you PRP you ^ OK
'd MD 'd ^ OK
have VB have ^ OK
to TO to ^ OK
delegate VB delegate ^ OK
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
work NN work ^ OK
and CC and ^ OK
maybe RB maybe ^ OK
just RB just ^ OK
be VB be ^ OK
the DT the ^ OK
manager NN manager ^ OK
that DT ^ ^ false_start
eh UH ^ ^ filler
or CC ^ ^ false_start
s- NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
at IN at ^ OK
some DT some ^ OK
point NN point ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
a DT a ^ OK
friend NN friend ^ OK
who WP who ^ OK
does VBZ does ^ OK
catering NN catering ^ OK
sometimes RB sometimes ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
like UH ^ ^ filler
i PRP i ^ OK
learn VBP learn ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
um UH ^ ^ filler
really RB really ^ OK
good JJ good ^ OK
things NNS things ^ OK
to TO to ^ OK
cook VB cook ^ OK
things NNS ^ ^ false_start
desserts UH like ^ false_start
eh NP-1 ^ ^ filler
desserts UH desserts ^ OK
and NNS ^ ^ false_start
stuff CC ^ ^ false_start

it PRP it ^ OK
was VBD was ^ OK
like UH ^ ^ filler
a DT a ^ OK
sit VB sit ^ OK
down RP down ^ OK
dinner NN dinner ^ OK
for IN for ^ OK
fifteen CD fifteen ^ OK
people NNS people ^ OK
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
really RB really ^ OK
's BES ^ ^ repeat
is VBZ is ^ OK
like UH ^ ^ filler
fun JJ fun ^ OK

i UNK i ^ OK
'd UNK 'd ^ OK
want UNK want ^ OK
it UNK it ^ OK
to UNK to ^ OK
be UNK be ^ OK
like UNK ^ ^ filler
a UNK a ^ OK
cool UNK cool ^ OK
place UNK place ^ OK
where UNK where ^ OK
people UNK people ^ OK
would UNK would ^ OK
want UNK want ^ OK
to UNK to ^ OK
come UNK come ^ OK
and UNK and ^ OK
hang UNK hang ^ OK
out UNK out ^ OK
too UNK too ^ OK
because UNK because ^ OK
i UNK i ^ OK
think UNK think ^ OK
it UNK it ^ OK
would UNK would ^ OK
be UNK be ^ OK
cool UNK cool ^ OK
to UNK to ^ OK
have UNK have ^ OK
like UNK ^ ^ filler
the UNK the ^ OK
restaurant UNK restaurant ^ OK
part UNK part ^ OK
but UNK but ^ OK
then UNK then ^ OK
like UNK like ^ OK
a UNK a ^ OK
cafe UNK cafe ^ OK
part UNK part ^ OK
on UNK on ^ OK
the UNK the ^ OK
outside UNK outside ^ OK
for UNK for ^ OK
like UNK ^ ^ filler
sandwiches UNK sandwiches ^ OK
and UNK and ^ OK
like UNK ^ ^ filler
breakfast UNK breakfast ^ OK
and UNK ^ ^ false_start
stuff UNK ^ ^ false_start
like UNK ^ ^ false_start
that UNK ^ ^ false_start

so UH ^ ^ false_start
but CC ^ ^ repeat
but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
then RB then ^ OK
again RB again ^ OK
i PRP i ^ OK
guess VBP guess ^ OK
if IN if ^ OK
we PRP we ^ OK
had VBD had ^ OK
all PDT all ^ OK
the DT the ^ OK
money NN money ^ OK
that IN that ^ OK
you PRP you ^ OK
can MD can ^ OK
do VB do ^ OK
whatever WP whatever ^ OK
you PRP you ^ OK
want VBP want ^ OK

and CC ^ ^ false_start
then RB then ^ OK
move VB move ^ OK
on RB on ^ OK
to IN to ^ OK
whatever NN whatever ^ OK
else RB else ^ OK
if IN if ^ OK
i PRP i ^ OK
was VBD was ^ OK
successful JJ successful ^ OK
at IN ^ ^ false_start
it PRP ^ ^ false_start

and CC ^ arg1 false_start
i PRP i arg0 OK
think VBP think predicate OK
we PRP we arg0 OK
're VBP 're arg1 OK
um UH ^ ^ filler
less RBR less argM_extent OK
likely JJ likely argM_adverb OK
to TO to arg2 OK
believe VB believe arg2 OK
in IN in arg1 OK
the DT the arg1 OK
future NN future arg1 OK
of IN of arg1 OK
such JJ such arg1 OK
things NNS things arg1 OK
and CC ^ ^ repeat
and CC and arg1 OK
in IN in arg1 OK
um UH the ^ false_start
um UH ^ ^ filler
future NN future arg1 OK
of IN of arg1 OK
uh UH ^ ^ filler
current JJ current arg1 OK
investments NNS investments arg1 OK
particularly RB particularly arg1 OK
in IN in arg1 OK
retirement NN retirement arg1 OK
funding NN funding arg1 OK

well UH ^ ^ filler
per- RB ^ ^ repeat
personally RB personally argM_adverb OK
i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
sixty-two CD sixty-two arg2 OK

so RB ^ ^ filler
i PRP i arg0 OK
had VBD had predicate OK
my PRP my arg1 OK
uh UH ^ ^ filler
eh UH ^ ^ filler
retirement NN retirement arg1 OK
um UH ^ ^ filler
in IN in argM_loc OK
an DT an argM_loc OK
i. NNP i. argM_loc OK
r. NNP r. argM_loc OK
a. NNP a. argM_loc OK
and CC and argM_loc OK
uh UH ^ ^ filler
pretty RB ^ ^ false_start
much RB ^ ^ false_start
socked VBD socked argM_loc OK
away RB away argM_loc OK
before IN before argM_tmp OK
it PRP ^ ^ false_start
r- XX ^ ^ false_start
m- XX ^ ^ false_start
eh UH ^ ^ filler
this DT this arg1 OK
s- NN ^ ^ repeat
sort NN sort arg1 OK
of IN of arg1 OK
thing NN thing arg1 OK
started VBD started argM_tmp OK

but CC but argM_discou OK
it PRP it arg0 OK
certainly RB certainly argM_adverb OK
has VBZ has ^ OK
affected VBN affected predicate OK
my PRP my arg1 OK
um UH ^ ^ filler
belief NN belief arg1 OK
system NN system arg1 OK

and CC ^ ^ false_start
um UH ^ ^ filler
a- CC ^ ^ repeat
and CC ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
because IN because argM_cause OK
i PRP i argM_cause OK
'm VBP 'm argM_cause OK
of IN of argM_cause OK
retirement NN retirement argM_cause OK
age NN age argM_cause OK
i PRP i arg1 OK
'm VBP 'm predicate OK
much RB much arg2 OK
more RBR more arg2 OK
um UH ^ ^ filler
afraid JJ afraid arg2 OK
of IN of arg2 OK
what WP what arg1 OK
's BES 's arg2 OK
going VBG going argM_mod OK
to TO to argM_mod OK
happen VB happen arg2 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD ^ ^ repeat
was VBD was ^ OK
y- XX ^ ^ repeat
heavily RB heavily argM_adverb OK
funded VBN funded predicate OK
in IN in arg2 OK
stocks NNS stocks arg2 OK
because IN because argM_cause OK
things NNS things arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
looked VBD looked argM_cause OK
pretty RB pretty arg2 OK
cheerful JJ cheerful arg2 OK

so UH ^ ^ filler
i PRP i arg0 OK
'm VBP 'm ^ OK
going VBG going argM_mod OK
to TO to argM_mod OK
change VB change predicate OK
my PRP my arg1 OK
investment NN investment arg1 OK
um UH ^ ^ filler
picture NN picture arg1 OK
as RB ^ ^ false_start
soo- RB ^ ^ false_start
i- XX ^ ^ false_start
a- XX ^ ^ false_start
if IN if argM_adverb OK
things NNS things arg1 OK
do VBP do ^ OK
in IN in argM_discou OK
fact NN fact argM_discou OK
stabilize VB stabilize predicate OK

and CC ^ arg1 false_start
they PRP ^ ^ false_start
have VBP ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
constantly RB constantly arg2 OK
afraid JJ afraid arg2 OK
i PRP i arg0 OK
'm VBP 'm arg2 OK
going VBG going argM_mod OK
to TO to argM_mod OK
get VB get arg2 OK
a DT a arg1 OK
phone NN phone arg1 OK
^ ^ call ^ OK
and CC and arg1 OK
one CD ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
one CD one arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
them PRP ^ ^ repeat
them PRP them arg1 OK

tha- DT ^ ^ false_start
right UH right ^ OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
something NN something arg1 OK
that WDT that arg1 OK
is VBZ is arg2 OK
so RB so arg2 OK
different JJ different arg2 OK
from IN from arg2 OK
whe- WRB ^ ^ repeat
when WRB when argM_tmp OK
i PRP i arg1 OK
was VBD was arg2 OK
their PRP their arg2 OK
age NN age arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
things NNS things arg1 OK
were VBD were predicate OK
so RB so arg2 OK
much RB much arg2 OK
more RBR more arg2 OK
stable JJ stable arg2 OK

um UH ^ ^ filler
well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
a DT a arg2 OK
liberal JJ liberal arg2 OK
democrat NNP democrat arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
really RB ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
fear VBP fear predicate OK
that IN that arg1 OK
um UH ^ ^ filler
the DT the arg0 OK
way NN way arg0 OK
things NNS things arg0 OK
have VBP have arg1 OK
gone VBN gone arg1 OK
where WRB ^ ^ false_start
e- RB ^ ^ repeat
economically RB economically argM_adverb OK
um UH ^ ^ filler
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ false_start
're VBP ^ ^ false_start
so RB ^ ^ false_start
eh UH ^ ^ filler
uh UH ^ ^ filler
w- PRP ^ ^ repeat
we PRP we arg1 OK
have VBP have arg1 OK
gone VBN gone arg1 OK
way RB way arg2 OK
back RB back arg2 OK
into IN into arg4 OK
debt NN debt arg4 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
wish VBP wish predicate OK
that IN that arg1 OK
we PRP we arg0 OK
had VBD had arg1 OK
n't RB n't ^ OK
n't RB _ARG_ argM_neg false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
wish VBP wish predicate OK
that IN that arg1 OK
mm UH ^ ^ filler
we PRP we arg1 OK
were VBD were arg1 OK
not RB not argM_neg OK
in IN in arg2 OK
a DT ^ ^ repeat
um UH ^ ^ filler
a DT a arg2 OK
spending NN spending arg2 OK
and CC and arg2 OK
an DT an arg2 OK
indebted JJ indebted arg2 OK
economy NN economy arg2 OK

i PRP ^ ^ false_start
d- VBP ^ ^ false_start
i PRP i arg0 OK
wish VBP wish predicate OK
that IN that arg1 OK
um UH ^ ^ filler
we PRP we arg1 OK
were VBD were arg1 OK
not RB not argM_neg OK
so RB so arg2 OK
heavily RB heavily arg2 OK
dependent JJ dependent arg2 OK
on IN on arg2 OK
petroleum NN petroleum arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
would MD would argM_mod OK
like VB like predicate OK
to TO to arg1 OK
see VB see arg1 OK
us PRP us arg1 OK
uh UH ^ ^ filler
be VB be arg1 OK
less RBR less arg2 OK
so RB so arg2 OK

and CC ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm ^ OK
very RB very argM_adverb OK
concerned VBN concerned predicate OK
u UH ^ ^ filler
about IN about arg0 OK
the DT the arg0 OK
situation NN situation arg0 OK
in IN in arg0 OK
the DT the arg0 OK
middle NNP middle arg0 OK
east NNP east arg0 OK
right RB right argM_tmp OK
now RB now argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
w- MD ^ ^ false_start
i PRP ^ ^ false_start
oh UH ^ ^ filler
dear UH ^ ^ filler
could MD could argM_mod OK
i PRP i arg0 OK
go VB go predicate OK
on RB on arg4 OK

what WP ^ ^ false_start
because IN because argM_cause OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
want VB want predicate OK
to TO to arg1 OK
stray VB stray arg1 OK
too RB too arg1 OK
far RB far arg1 OK
from IN from arg1 OK
that DT that arg1 OK

i PRP i ^ OK
think VBP think ^ OK
um UH ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK
really RB really ^ OK
going VBG going ^ OK
to TO to ^ OK
lose VB lose ^ OK
out RP out ^ OK
on IN on ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
great JJ great ^ OK
artistic JJ artistic ^ OK
works NNS works ^ OK
if IN if ^ OK
we PRP we ^ OK
censor VBP censor ^ OK
ourselves PRP ourselves ^ OK
or CC or ^ OK
censor VBP censor ^ OK
our PRP our ^ OK
artists NNS artists ^ OK

we PRP we ^ OK
're VBP 're ^ OK
totally RB totally ^ OK
desensitized JJ desensitized ^ OK
as IN as ^ OK
a DT a ^ OK
society NN society ^ OK

i PRP i ^ OK
think VBP think ^ OK
uh UH ^ ^ filler
i PRP i ^ OK
actually RB actually ^ OK
had VBD had ^ OK
a DT a ^ OK
class NN class ^ OK
with IN with ^ OK
the DT the ^ OK
person NN person ^ OK
who WP who ^ OK
's BES 's ^ OK
doing VBG doing ^ OK
this DT this ^ OK
study NN study ^ OK
at RB ^ ^ false_start
all RB ^ ^ false_start
which WDT which ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
before IN before ^ OK
i PRP i ^ OK
signed VBD signed ^ OK
up RP up ^ OK
for IN for ^ OK
it PRP it ^ OK

uh UH ^ ^ filler
i PRP i ^ OK
and CC ^ ^ false_start
was VBD was ^ OK
like RP like ^ OK
wow UH wow ^ OK

i PRP i ^ OK
've VBP 've ^ OK
a DT a ^ OK
nokia NNP nokia ^ OK
six CD six ^ OK
in IN in ^ OK
the DT the ^ OK
six CD ^ ^ repeat
one CD ^ ^ repeat
sixty-one CD sixty-one ^ OK
eight CD ^ ^ repeat
hundred CD ^ ^ repeat
hundred CD hundred ^ OK
series NNP series ^ OK
which WDT which ^ OK
is VBZ is ^ OK
a DT a ^ OK
good JJ good ^ OK
phone NN phone ^ OK

but CC but ^ OK
it PRP it ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
have VB have ^ OK
one CD one ^ OK
of IN of ^ OK
the DT the ^ OK
antennas NNS antennas ^ OK
that WDT ^ ^ repeat
uh UH ^ ^ filler
that WDT that ^ OK
uh UH ^ ^ filler
extend VB extend ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
have VBP have ^ OK
a DT a ^ OK
friend NN friend ^ OK
who WP who ^ OK
took VBD took ^ OK
a DT a ^ OK
toxicology NN toxicology ^ OK
class NN class ^ OK
who WP who ^ OK
said VBD said ^ OK
uh UH ^ ^ filler
cell NN cell ^ OK
phones NNS phones ^ OK
are VBP are ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
like UH ^ ^ filler
th- DT the ^ false_start
cigarettes NNS cigarettes ^ OK
of IN of ^ OK
this DT this ^ OK
generation NN generation ^ OK
like UH ^ ^ false_start
in IN ^ ^ false_start
terms NNS ^ ^ false_start
of IN ^ ^ false_start

but CC but ^ OK
all PDT all ^ OK
the DT the ^ OK
published VBN published ^ OK
information NN information ^ OK
on IN ^ ^ repeat
on IN on ^ OK
web NN web ^ OK
sites NNS sites ^ OK
and CC and ^ OK
scholarly JJ scholarly ^ OK
studies NNS studies ^ OK
that WDT that ^ OK
have VBP have ^ OK
been VBN been ^ OK
done VBN done ^ OK
say NP-1 say ^ OK
that RB that ^ OK
it IN it ^ OK
actually PRP actually ^ OK
has RB has ^ OK
no VBZ no ^ OK
otherwise VB ^ ^ false_start
effect DT effect ^ OK

but CC but ^ OK
i PRP i ^ OK
heard VBD heard ^ OK
next JJ next ^ OK
year NN year ^ OK
they PRP they ^ OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
c- VB ^ ^ repeat
uh UH ^ ^ filler
come VB come ^ OK
out RB out ^ OK
with IN with ^ OK
like UH ^ ^ filler
some DT some ^ OK
sort NN sort ^ OK
of IN of ^ OK
a DT a ^ OK
rating NN rating ^ OK
system NN system ^ OK
that WDT that ^ OK
'll MD 'll ^ OK
be VB be ^ OK
on IN on ^ OK
the DT the ^ OK
boxes NNS boxes ^ OK
of IN of ^ OK
all PDT all ^ OK
the DT the ^ OK
new JJ new ^ OK
cell NN cell ^ OK
phones NNS phones ^ OK

no UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
think VBP ^ ^ repeat
think VB think ^ OK
the DT the ^ OK
pros NNS pros ^ OK
of IN of ^ OK
cell NN cell ^ OK
phones NNS phones ^ OK
outweigh VBP outweigh ^ OK
the DT the ^ OK
cons NNS cons ^ OK

like UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
so RB so ^ OK
convenient JJ convenient ^ OK

it PRP it ^ OK
's BES 's ^ OK
my PRP ^ ^ false_start
eh UH ^ ^ filler
just RB just ^ OK
a DT a ^ OK
convenience NN convenience ^ OK

it PRP it ^ OK
definitely RB definitely ^ OK
is VBZ is ^ OK
a DT a ^ OK
must NN must ^ OK
if IN if ^ OK
you PRP you ^ OK
drive VBP drive ^ OK

i PRP i ^ OK
did VBD ^ ^ repeat
did VBD did ^ OK

bunch NN ^ ^ false_start
of IN ^ ^ false_start
americans NNPS ^ ^ false_start
um UH ^ ^ filler
we PRP we arg0 OK
a DT ^ ^ false_start
bunch NN ^ ^ false_start
a DT ^ ^ false_start
were VBD ^ ^ repeat
were VBD were ^ OK
pretty RB pretty ^ OK
focused JJ focused predicate OK
on IN on arg2 OK
finding VBG finding arg2 OK
a DT a arg1 OK
place NN place arg1 OK
to TO to arg1 OK
just RB ^ ^ false_start
sit VB sit arg1 OK
down RP down argM_loc OK
and CC and arg1 OK
have VB have arg1 false_start
turkey NN turkey arg1 false_start

which WDT ^ ^ repeat
which WDT which ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
nice JJ nice ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
bet VBP ^ ^ repeat
bet VBP bet predicate OK
they PRP they arg1 OK
were VBD were arg2 OK
n't RB n't argM_neg OK
as RB as arg2 OK
big JJ big arg2 OK
as IN as arg2 OK
they PRP they arg1 OK
are VBP are arg2 OK
here RB here arg2 OK

ah UH ^ ^ filler
nice JJ nice ^ OK

and CC ^ arg1 false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
just RB ^ ^ false_start
mm UH ^ ^ filler
bu- XX ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
gone VBN gone predicate OK
up RB up argM_other OK
to TO to ^ OK
visit VB visit predicate OK
visit VB _NOUN_ ^ false_start
uh UH ^ ^ filler
a DT a argM_other OK
couple NN couple argM_other OK
of IN of argM_other OK
times NNS times argM_other OK
in IN in argM_loc OK
the DT the argM_loc OK
summer NN summer argM_loc OK

and CC ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm ^ OK
going VBG going ^ OK
go VB to ^ false_start
go VB go predicate OK
visit VB visit predicate OK
visit VB _NOUN_ arg1 false_start
this DT this argM_tmp OK
christmas NNP christmas argM_tmp OK
holiday NN holiday argM_tmp OK
because IN because ^ OK
um UH ^ ^ filler
i PRP i arg1 OK
've VBP 've ^ OK
never RB never ^ OK
been VBN been predicate OK
there RB there arg2 OK
in IN in argM_tmp OK
the DT the argM_tmp OK
winter NN winter argM_tmp OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ false_start
want VBP want predicate OK
to TO to arg1 OK
see VB see arg1 OK
them PRP them arg1 OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
th- VBP ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
as RB as arg2 OK
cold JJ cold arg2 OK
as IN as arg2 OK
people NNS people arg0 OK
th- VBP ^ ^ repeat
think VBP think arg2 OK

n- XX ^ ^ repeat
j- XX ^ ^ repeat
yeah UH yeah ^ OK

now UH ^ ^ false_start
will MD ^ ^ repeat
will MD will ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
d- VBP ^ ^ repeat
do VB do predicate OK
all PDT all arg1 OK
the DT the arg1 OK
cooking NN cooking arg1 OK

that DT ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
you PRP you arg0 OK
may MD may ^ OK
find VB find predicate OK
it PRP it arg1 OK
different JJ different ^ OK
if IN if ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
hosting VBG hosting ^ OK
though RB ^ predicate false_start

well UH ^ ^ filler
in IN in argM_loc OK
new NNP new argM_loc OK
york NNP york argM_loc OK
i PRP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'd MD ^ ^ false_start
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
imagine VB ^ ^ repeat
sure JJ sure arg2 OK
people NNS people arg0 OK
call VB call arg2 OK
up RP ^ predicate false_start
and CC and arg2 OK
order VB order arg2 OK
stuff NN stuff arg1 OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK
too RB too arg2 false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
they PRP they arg0 OK
go VBP go arg2 OK
to IN to arg2 OK
the DT the arg4 OK
grocery NN grocery arg4 OK
store NN store arg4 OK
and CC and arg2 OK
cook VBP cook arg2 OK
at IN at argM_loc OK
home NN home argM_loc OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
always RB always argM_tmp OK
imagined VBD imagined predicate OK
that IN that arg1 false_start
in IN in argM_loc OK
the DT the argM_loc OK
city NN city argM_loc OK
people NNS people arg0 OK
they PRP ^ ^ false_start
'll MD ^ ^ false_start
just RB just arg1 OK
just RB ^ ^ OK
deliver VB deliver arg1 false_start
a DT ^ ^ repeat
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
the DT the arg1 OK
stuff NN stuff arg1 OK
it PRP ^ ^ false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
who WP who arg1 OK
was VBD was arg1 OK
in IN in arg2 OK
it PRP it arg2 OK

but CC ^ ^ false_start
it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it arg1 OK
was VBD ^ ^ repeat
's BES 's predicate OK
good JJ good arg2 OK

maybe RB ^ ^ repeat
maybe RB ^ ^ repeat
ha UH ^ ^ filler
maybe RB maybe ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
can MD ^ ^ repeat
can MD can ^ OK
rent VB rent predicate OK
it PRP it arg1 OK
when WRB when ^ OK
you PRP you arg0 OK
go VBP go ^ OK
see VB see predicate OK
your PRP your arg1 OK
grandparents NNS grandparents arg1 OK

farmer NNP the arg0 false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
well UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
also RB ^ ^ false_start
farmer NNP farmer arg0 OK
's POS 's arg0 OK
almanac NNP almanac arg0 OK
says VBZ says predicate OK
it PRP there arg1 false_start
's BES 's arg1 OK
supposed VBN ^ ^ repeat
supposed VBN supposed arg1 OK
to TO ^ ^ repeat
to TO to arg1 OK
be VB ^ ^ repeat
be VB be arg1 OK
a DT a arg1 OK
very RB ^ ^ repeat
very RB very arg1 OK
cold JJ cold arg1 OK
winter NN winter arg1 OK

so UH ^ ^ false_start
there EX there ^ OK
'll MD will ^ false_start
probably RB probably ^ OK
be VB be predicate OK
plenty NN plenty arg1 OK
of IN of arg1 OK
snow NN snow arg1 OK
and CC and arg1 OK
very RB ^ ^ false_start
much RB ^ ^ false_start
a DT ^ ^ repeat
a DT ^ ^ repeat
new NNP ^ ^ repeat
england NNP ^ ^ repeat
a DT a arg1 OK
true JJ true arg1 OK
new NNP new arg1 OK
england NNP england arg1 OK
winter NN winter arg1 OK

i PRP ^ ^ OK
i PRP i ^ OK
do VBP do ^ OK
too RB too ^ OK

i PRP i arg0 OK
always RB always argM_tmp OK
thought VBD thought predicate OK
th- XX ^ ^ false_start
that DT that arg2 false_start
half PDT half arg1 OK
the DT the arg1 OK
stuff NN stuff arg1 OK
was VBD was arg2 OK
made VBN made arg2 OK
up RP up arg_particl OK

because UNK because ^ OK
uh UNK ^ ^ filler

it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
that IN that arg2 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do arg2 OK
n't RB n't arg2 OK
usually RB ^ ^ repeat
usually RB usually arg2 OK
ah UH ^ ^ filler
open VB open arg2 OK
up RP up arg2 OK
other RB ^ ^ repeat
other RB other arg2 OK
th- XX ^ ^ repeat
than IN ^ ^ repeat
than IN than arg2 OK
in IN ^ ^ repeat
in IN in arg2 OK
generalities NNS generalities arg2 OK

bu- XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
've VBP ^ ^ false_start
i PRP i arg0 OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
open VB open predicate OK
up RP up ^ OK
in IN ^ ^ repeat
in IN in ^ OK
specifics NNS specifics ^ OK
ah UH ^ ^ filler
with IN with ^ OK
people NNS people ^ OK
other RB other ^ OK
than IN than ^ OK
those DT those arg1 OK
that WDT that ^ OK
i PRP i arg0 OK
know VBP know predicate OK
well RB well ^ OK
and CC and ^ OK
uh UH ^ ^ filler
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
say VB ^ ^ false_start
trust S trust ^ OK

but CC but ^ OK
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not arg2 OK
sure JJ sure arg2 OK
if IN ^ ^ repeat
if IN if arg2 OK
i PRP ^ ^ repeat
that DT that arg1 OK
's BES 's arg2 OK
the DT the arg2 OK
correct JJ correct arg2 OK
word NN word arg1 OK
to TO to arg2 OK
use VB use arg2 OK

but CC but ^ OK
um UH ^ ^ filler
when WRB when ^ OK
i PRP i arg0 OK
know VBP know predicate OK
a DT a arg1 OK
person NN person arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
the- PRP ^ ^ false_start
and CC and ^ OK
get VBP get predicate OK
the DT the arg1 OK
feeling NN feeling arg1 OK
for IN for arg1 OK
them PRP them arg1 OK
and CC ^ ^ repeat
th- PRP ^ ^ false_start
and CC ^ ^ repeat
and CC and ^ OK
vice FW vice ^ OK
versa FW versa ^ OK
they PRP they arg0 OK
understand VBP understand predicate OK
me PRP me arg1 OK
and CC and ^ OK
get VB get predicate OK
a DT a arg1 OK
feeling NN feeling arg1 OK
for IN for arg1 OK
me PRP me arg1 OK

and CC ^ ^ false_start
i ADVP-TMP- 5 i arg0 OK
feel PRP feel predicate OK
that DT ^ ^ repeat
that VBP that arg1 OK
i IN i arg0 OK
can PRP can arg1 OK
open MD open arg1 OK
up VB up arg1 OK
and RP and arg1 OK
communicate CC communicate arg1 OK
with VB with arg2 OK
them IN them arg2 OK
m- PRP ^ ^ repeat
more RBR more arg2 OK
and RBR and arg1 OK
that CC that arg1 OK
they IN they arg0 OK
care PRP care arg1 OK
more VB more arg1 OK
as RBR ^ ^ false_start
far RB ^ ^ false_start
as RB ^ ^ false_start
about IN about arg1 OK
what IN what arg1 OK
i WP i arg0 OK
'm PRP 'm arg1 OK
saying VBP saying arg1 OK
as VBG as arg1 OK
opposed NP-4 opposed arg1 OK
to IN to arg1 OK
uh VBN ^ ^ filler
just IN just arg1 OK
talking UH talking arg1 OK
to RB to arg2 OK
somebody VBG somebody arg1 OK
that IN that arg2 OK
i NN i arg0 OK
see WDT see arg2 OK
occasionally PRP occasionally arg2 OK
and VBP ^ ^ repeat
that RB ^ ^ false_start
and CC and arg1 OK
trying DT try arg1 false_start
to CC to arg1 OK
uh VBG ^ ^ filler
ex- TO ^ ^ repeat
express UH express arg1 OK
or VB or arg1 OK
give VB give arg1 OK
my PP-2 my arg1 OK
ideas CC ideas arg1 OK
ideas CC to arg1 false_start

uh VB ^ ^ filler
mo- PRP ^ ^ false_start
i UH i ^ OK
guess IN guess ^ OK
you XX you ^ OK
could IN could ^ OK
say PRP say ^ OK
in PP-2 ^ ^ repeat
in NNS ^ ^ repeat
uh VBP ^ ^ filler
in PRP ^ ^ repeat
in MD in ^ OK
detail VB detail ^ OK
and PP-SEZ-2 and ^ OK
that UH that ^ OK

i PRP ^ arg2 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
a- XX ^ ^ false_start
they PRP they arg0 OK
ask VBP ask predicate OK
^ ^ me ^ OK
like UH ^ ^ filler
how WRB how arg1 OK
things NNS things arg0 OK
are VBP ^ ^ repeat
are VBP are arg1 OK
going VBG going arg1 OK
at IN at argM_loc OK
work NN work argM_loc OK

and CC ^ ^ false_start
then RB then ^ OK
i PRP i arg0 OK
'll MD 'll ^ OK
say VB say predicate OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
things NNS things arg0 OK
are VBP are arg1 OK
going VBG going arg1 OK
fine RB fine arg1 OK

but CC but arg1 OK
if IN ^ ^ repeat
if IN if ^ OK
i- PRP ^ ^ repeat
it PRP it ^ OK
's BES 's predicate OK
a DT a arg0 OK
person NN person arg0 OK
that WDT that arg1 OK
i PRP i arg0 OK
ah UH ^ ^ filler
know VBP know arg1 OK
an- NP-1 ^ ^ repeat
and CC and arg1 OK
knows CC that ^ false_start
knows CC knows arg1 OK
me VBZ me arg1 OK
better PRP better arg1 OK
than RBR than arg1 OK
that IN that arg1 OK
then DT then ^ OK
i RB ^ ^ repeat
i MD ^ ^ repeat
i RB i arg0 OK
k- PRP ^ ^ repeat
kind PRP kind ^ OK
of RB of ^ OK
w- PRP ^ ^ repeat
would RB would ^ OK
go MD go predicate OK
into VB into arg1 OK
detail IN detail arg1 OK
as NN as arg1 OK
far RB far arg1 OK
as RB as arg1 OK
uh IN ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
what VBP what arg1 OK
it WP it arg1 OK
was PRP was arg1 OK
that VBD that arg1 OK
that WDT ^ ^ repeat
that WDT ^ ^ repeat
's WDT 's arg2 OK
going BES going arg2 OK
on VBG on arg2 OK
that RP that arg1 OK
's WDT 's arg2 OK
great BES great arg2 OK
work JJ work arg2 OK

or CC or ^ OK
if IN if ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
having VBG having ^ OK
difficulties NNS difficulties ^ OK
or CC or ^ OK
problems NNS problems ^ OK
and CC and ^ OK
that DT ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ repeat
i PRP ^ ^ false_start
should MD ^ ^ false_start
uh UH ^ ^ filler
m- XX ^ ^ false_start
what WP what ^ OK
i PRP i ^ OK
think VBP think ^ OK

or CC ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ repeat
w- XX ^ ^ false_start
or CC ^ ^ false_start
i PRP i arg0 OK
m- XX ^ ^ repeat
might MD might ^ OK
even RB even ^ OK
ask VB ask predicate OK
for IN for arg1 OK
uh UH ^ ^ filler
advice NN advice arg1 OK
or CC or arg1 OK
an DT an arg1 OK
opinion NN opinion arg1 OK
from IN from arg2 OK
them PRP them arg2 OK

whereas IN whereas ^ OK
i- PRP ^ ^ false_start
as IN ^ ^ repeat
it PRP if ^ false_start
it PRP it ^ OK
's BES 's predicate OK
just RB just arg1 OK
someone NN someone arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK
know VB know arg1 OK
that RB that arg1 OK
well RB well arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
b- CC ^ ^ repeat
but CC but arg1 OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're arg1 OK
acquaintances NNS acquaintances arg2 OK
i PRP i arg0 OK
guess VBP guess predicate OK
you PRP you arg0 OK
could MD could arg1 OK
say VB say arg1 OK
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do arg1 OK
n't RB ^ ^ repeat
n't RB n't arg1 OK
open VB open arg1 OK
up RP up arg1 OK
that RB that arg1 OK
much RB much arg1 OK
to IN to arg1 OK
them PRP them arg1 OK

an- CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
seek VB seek predicate OK
their PRP their arg1 OK
uh UH ^ ^ filler
advice NN advice arg1 OK
or CC or arg1 OK
their PRP their arg1 OK
ah UH ^ ^ filler
thoughts NNS thoughts arg1 OK
on IN on arg1 OK
the DT the arg1 OK
ideas NNS ideas arg1 OK
that RB ^ ^ repeat
that RB that arg1 OK
much RB much arg1 OK

were VBD ^ ^ false_start
you PRP ^ ^ false_start
from IN ^ ^ false_start
or UH or ^ OK
ah UH ^ ^ filler
was VBD was ^ OK
it PRP it ^ OK
virginia NNP ^ ^ repeat
virginia NNP virginia ^ OK
you PRP you ^ OK
say VBP say ^ OK
you PRP you ^ OK
were VBD were ^ OK
going VBG going ^ OK
to TO to ^ OK
see VB see ^ OK
about IN about ^ OK
possibly RB possibly ^ OK
going VBG going ^ OK
to IN to ^ OK

and CC ^ ^ false_start
you PRP ^ ^ repeat
're VBP ^ ^ repeat
you PRP ^ ^ false_start
're VBP ^ ^ false_start
un- RB ^ ^ repeat
unfortunately RB ^ ^ false_start
you PRP ^ ^ false_start
're VBP ^ ^ false_start
from IN ^ ^ false_start
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
different JJ ^ ^ false_start
pl- NNS ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
mean VB mean predicate OK
that DT that arg1 OK
in IN in arg1 OK
a DT a arg1 OK
bad JJ bad arg1 OK
way NN way arg1 OK

ah UH ^ ^ filler
uh UH ^ ^ filler
but CC but ^ OK
d- XX ^ ^ false_start
you PRP you arg0 OK
never RB never ^ OK
had VBD had predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
roots NNS roots arg1 OK
set VBN set arg1 OK
down RP down argM_loc OK
for IN for arg1 OK
the DT the arg1 OK
most JJS most arg1 OK
part NN part arg1 OK

it PRP it arg0 OK
depends VBZ depends predicate OK
on IN ^ ^ repeat
on IN ^ ^ repeat
on IN on arg1 OK
how WRB how arg1 OK
you PRP you arg0 OK
feel VBP feel arg1 OK
about IN about arg2 OK
your PRP your arg2 OK
it PRP ^ ^ false_start
personality NN personality arg2 OK

but CC but ^ OK
if IN if ^ OK
you PRP you ^ OK

it PRP it arg1 OK
's HVS 's ^ OK
been VBN been predicate OK
longer JJR longer arg2 OK
than IN than arg2 OK
that DT that arg2 OK
even RB even arg2 false_start
for IN for arg2 false_start
myself PRP myself arg2 false_start

but CC but ^ OK
there EX there ^ OK
are VBP are predicate OK
some DT ^ ^ repeat
some DT some arg1 OK
ah UH ^ ^ filler
friends NNS friends arg1 OK
that WDT ^ ^ repeat
uh UH ^ ^ filler
that WDT that arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've arg1 OK
had VBN had arg1 OK
in IN in arg1 OK
high JJ high arg1 OK
it PRP ^ ^ repeat
school NN school arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK
keep VB keep arg1 OK
real RB real arg1 OK
close RB close arg1 OK
in IN in arg1 OK
touch NN touch arg1 OK
with IN with arg1 OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
every DT every ^ OK
few JJ few ^ OK
years NNS years ^ OK
ah UH ^ ^ filler
i PRP i arg0 OK
'll MD 'll ^ OK
give VB give predicate OK
somebody NN somebody arg2 OK
a DT a arg1 OK
call NN call arg1 OK
and CC and ^ OK
see VB see predicate OK
how WRB how arg1 OK
things NNS things arg0 OK
are VBP are arg1 OK
going VBG going arg1 OK
and ADVP-MNR- 1 ^ ^ false_start
that CC ^ predicate false_start

or CC ^ ^ repeat
or CC or ^ OK
t- PRP ^ ^ repeat
they PRP they arg0 OK
'll MD 'll ^ OK
give VB give predicate OK
me PRP me arg2 OK
a DT a arg1 OK
call NN call arg1 OK
and CC ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
ah UH ^ ^ filler
once RB once ^ OK
in IN in ^ OK
a DT a ^ OK
while NN while ^ OK
i PRP i arg0 OK
do VBP do ^ OK
see VB see predicate OK
people NNS people arg1 OK
that DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that arg1 OK
i PRP i arg1 OK
did VBD did arg1 OK
go VB go arg1 OK
to IN to arg2 OK
school NN school arg2 OK
with IN with arg2 OK
and NP-1 ^ ^ false_start
that CC ^ ^ false_start

e- XX ^ ^ filler
but CC but ^ OK
ah UH ^ ^ filler

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
seems VBZ seems ^ OK
like IN like ^ OK
our PRP our ^ OK
l- NNS ^ ^ repeat
uh UH ^ ^ filler
li- NNS ^ ^ repeat
lives NNS lives ^ OK
today NN today ^ OK
and CC and ^ OK
e- XX ^ ^ false_start
in IN ^ ^ false_start
so- DT ^ ^ false_start
to IN to ^ OK
some DT some ^ OK
degree NN degree ^ OK
even RB even ^ OK
like UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
you PRP you ^ OK
could MD could ^ OK
say VB say ^ OK
friendships NP-1 friendships ^ OK
today NNS today ^ OK

ah UH ^ ^ filler
the- DT ^ ^ repeat
uh UH ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
these DT these arg1 OK
are VBP are predicate OK
ones NNS ones arg2 OK
that WDT that arg2 OK
we PRP we arg1 OK
are VBP ^ ^ repeat
're VBP 're arg2 OK
n- RB ^ ^ repeat
not RB not arg2 OK
necessarily RB necessarily arg2 OK
real RB real arg2 OK
close JJ close arg2 OK
to IN to arg2 OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
try VB ^ ^ false_start
to TO ^ ^ false_start
keep VB ^ ^ false_start
and CC ^ ^ false_start
even RB even ^ OK
sometimes RB sometimes ^ OK
with IN with ^ OK
family NN family ^ OK
and CC ^ ^ false_start
that WDT ^ ^ false_start
ah UH ^ ^ filler
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
hear VB hear predicate OK
from IN from arg2 OK
peop- NNS ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
aunts NNS aunts arg2 OK
uncles NNS uncles arg2 OK
or CC or arg2 OK
cousins NNS cousins arg2 OK
and CC ^ ^ false_start
that DT ^ ^ false_start
in IN in arg2 OK
the DT the arg2 OK
family NN family arg2 OK

but CC ^ ^ false_start
i- PRP ^ ^ false_start
i- PRP ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
every- NN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
's S-1 's ^ OK
kind BES ^ ^ filler
of RB ^ ^ filler
hard RB hard ^ OK
to JJ to ^ OK
stay TO stay ^ OK
in VB in ^ OK
boundaries IN boundaries ^ OK
you NNS ^ ^ filler
know PRP ^ ^ filler
with VBP with ^ OK
the IN ^ ^ false_start
so DT so ^ OK
much RB much ^ OK
stuff JJ stuff ^ OK
that NN that ^ OK
's WDT 's ^ OK
out BES out ^ OK
now RB now ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
yeah UH ^ ^ filler
everybody NN everybody ^ OK
can MD can ^ OK
look VBP look ^ OK
at IN at ^ OK
it PRP it ^ OK
and CC and ^ OK
then RB then ^ OK
say VBP say ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
well UH ^ ^ filler
let VB let ^ OK
's PRP 's ^ OK
take VB take ^ OK
a DT a ^ OK
look NN look ^ OK

um UH ^ ^ filler
what WP ^ ^ false_start
's BES ^ ^ false_start
that DT ^ ^ false_start
w- XX ^ ^ false_start
what WP what ^ OK
's BES 's ^ OK
the DT the ^ OK
book NN book ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
everybody NN everybody ^ OK
could MD could ^ OK
find VB find ^ OK
like UH ^ ^ filler

you PRP ^ ^ filler
know VBP ^ ^ filler
oh UH ^ ^ filler
definitely RB definitely ^ OK
too RB ^ ^ filler

they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
taking VBG taking ^ OK
hallucinogens NNS hallucinogens ^ OK

j- RB ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
just RB just ^ OK
coming VBG coming ^ OK
out RP out ^ OK

but CC ^ ^ false_start
another DT another ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
p- VBP ^ ^ repeat
pay VBP pay ^ OK
for IN for ^ OK
these DT these ^ OK
things NNS things ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ filler
if IN ^ ^ repeat
um UH ^ ^ false_start
to TO ^ ^ false_start
buy VB ^ ^ false_start
it PRP ^ ^ false_start
you PRP ^ ^ false_start
should MD ^ ^ false_start
n't RB ^ ^ false_start
go VB ^ ^ false_start
see VB ^ ^ false_start
it PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
want VB ^ ^ repeat
want VB want ^ OK
to TO ^ ^ repeat
to TO ^ ^ repeat
to TO to ^ OK
see VB see ^ OK
it PRP it ^ OK
you PRP you ^ OK
should MD should ^ OK
n't RB n't ^ OK
go VB go ^ OK
pay VB pay ^ OK
for IN for ^ OK
it PRP it ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
was VBD ^ ^ repeat
wa- VBD ^ ^ repeat
was VBD was ^ OK
just RB just ^ OK
watching VBG watching ^ OK
wrestling NN wrestling ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he ^ OK
's BES 's ^ OK
up IN up ^ OK
there RB there ^ OK
cursing VBG cursing ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

yeah UH ^ ^ filler
oh UH ^ ^ filler
my UH ^ ^ false_start
goo- UH ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK

he PRP ^ ^ repeat
he PRP ^ ^ repeat
he PRP ^ ^ repeat
h- PRP ^ ^ repeat
he PRP he ^ OK
hit VBD hit ^ OK
somebody NN somebody ^ OK
in IN in ^ OK
the DT the ^ OK
head NN head ^ OK
with IN with ^ OK
a DT a ^ OK
beer NN beer ^ OK
can NN can ^ OK

it PRP ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
he PRP he ^ OK
gets VBZ gets ^ OK
up RB up ^ OK

i PRP i ^ OK
could MD could ^ OK
tell VB tell ^ OK

eh UH ^ ^ filler
yeah UH ^ ^ filler
eh UH ^ ^ filler
yeah UH ^ ^ filler
kids NNS kids ^ OK
d- VBP ^ ^ repeat
do VBP do ^ OK
get VB get ^ OK
a DT a ^ OK
s- XX s- ^ OK

and CC ^ ^ false_start
if IN if ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
someone NN someone ^ OK
says VBZ says ^ OK
something NN something ^ OK
to IN to ^ OK
them PRP them ^ OK
do VBP it ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
do VBP does ^ false_start
n't RB n't ^ OK
matter VB matter ^ OK
much RB much ^ false_start
how WRB how ^ OK
big JJ big ^ OK
they PRP they ^ OK
are VBP are ^ OK
you ADJP-PRD- 2 ^ ^ filler
know PRP ^ ^ filler
giving VBP giving ^ OK
salute NN a ^ false_start
stone VBG stone ^ OK
cold NNP cold ^ OK
one NNP one ^ OK
finger CD finger ^ OK
salute NN salute ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
eh UH ^ ^ filler
really RB ^ ^ filler
it PRP it ^ OK
's S-1 's ^ OK
kind BES ^ ^ filler
of RB ^ ^ filler
hard RB hard ^ OK
to JJ to ^ OK
say TO say ^ OK
if VB if ^ OK
eh IN ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
like VBP ^ ^ filler
say UH ^ ^ filler
marilyn UH marilyn ^ OK
manson NNP manson ^ OK
or NNP or ^ OK
eminem CC eminem ^ OK
and NNP ^ ^ false_start
all CC ^ ^ false_start
those PDT ^ ^ false_start
like DT ^ ^ false_start
characters UH ^ ^ false_start
make NNS make ^ OK
people VB people ^ OK
go NNS go ^ OK
out VB out ^ OK
and RB and ^ OK
kill CC kill ^ OK
people VB people ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
want VB ^ ^ false_start
to TO ^ ^ false_start
talk VB ^ ^ false_start
these DT these ^ OK
people NNS people ^ OK
um UH ^ ^ filler
must MD must ^ OK
have VB have ^ OK
some DT some ^ OK
kind NN ^ ^ filler
of IN ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
other JJ other ^ OK
issues NNS issues ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
yeah UH ^ ^ filler
it PRP there ^ false_start
's BES are ^ false_start
definitely RB definitely ^ OK
other JJ other ^ OK
issues NNS issues ^ OK
in IN in ^ OK
that DT that ^ OK

eh UH ^ ^ filler
they PRP they ^ OK
just RB just ^ OK
may MD may ^ OK
have VB have ^ OK
been VBN been ^ OK
listening VBG listening ^ OK
to IN to ^ OK
something NN something ^ OK
eh UH ^ ^ filler
like IN like ^ OK
that DT that ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
just RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
happen VB happen ^ OK

d- XX ^ ^ false_start
uh UH ^ ^ filler
you PRP you ^ OK
're VBP 're ^ OK
calling VBG calling ^ OK
me PRP me ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
in IN in ^ OK
brigantine NNP brigantine ^ OK
new NNP new ^ OK
jersey NNP jersey ^ OK

i PRP ^ ^ repeat
mm UH ^ ^ filler
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
like UH ^ ^ filler
up RB up ^ OK
bit NN a ^ false_start
little JJ little ^ OK
bit NN bit ^ OK
more RBR more ^ OK
on IN on ^ OK
the DT the ^ OK
west JJ west ^ OK
end NN end ^ OK

but CC but ^ OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
nice JJ nice ^ OK

it PRP ^ ^ false_start
uh UH ^ ^ filler
very RB ^ ^ false_start
it PRP it ^ OK
's BES ^ ^ false_start
's BES 's ^ OK
nice JJ nice ^ OK
now RB now ^ OK
because IN because ^ OK
no DT no ^ OK
one NN one ^ OK
's BES 's ^ OK
like UH ^ ^ filler
really RB really ^ OK
here RB here ^ OK

it PRP it ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
just RB just ^ OK
was VBD was ^ OK
n't RB n't ^ OK
familiar JJ familiar ^ OK

you PRP you ^ OK
know VBP know ^ OK
like UH like ^ OK
um UH um ^ OK
yeah UH yeah ^ OK

and CC and ^ OK
i PRP i ^ OK

i PRP ^ ^ false_start
wa- VBZ ^ ^ false_start
no UH no ^ OK
he PRP he ^ OK
works VBZ works ^ OK
for IN for ^ OK
all PDT all ^ OK
the DT the ^ OK
casinos NNS casinos ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
not RB not ^ OK
that RB as ^ false_start
great JJ great ^ OK
as IN as ^ OK
it PRP it ^ OK
used VBD used ^ OK
to TO to ^ OK
be VB be ^ OK
though ADJP-PRD though ^ OK

and CC and ^ OK
a- XX a- ^ OK

and CC ^ ^ false_start
the DT the ^ OK
they PRP ^ ^ repeat
doormen NNS doormen ^ OK
were VBD ^ ^ repeat
were VBD were ^ OK
ma- VBG ^ ^ repeat
making VBG making ^ OK
so RB so ^ OK
much JJ much ^ OK
money NN money ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
an- CC ^ ^ repeat
and CC ^ ^ false_start
everybody NN ^ ^ repeat
everybody NN everybody ^ OK
was VBD was ^ OK
making VBG making ^ OK
so RB so ^ OK
much JJ much ^ OK
money NN money ^ OK

it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
like IN like ^ OK
no DT no ^ OK
one NN one ^ OK
has VBZ has ^ OK
anymore JJR anymore ^ OK
money NN money ^ OK

but CC but ^ OK
they PRP they ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ false_start
still RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
still RB still ^ OK
get VBP ^ ^ repeat
get VBP get ^ OK
the DT the ^ OK
little JJ little ^ OK
old JJ old ^ OK
la- NN _ARG_ ^ false_start

how WRB how ^ OK
do VBP do ^ OK
you PRP you ^ OK
like VB like ^ OK
being VBG being ^ OK
a DT a ^ OK
professor NN professor ^ OK

w- NN ^ ^ repeat
what WP what ^ OK
do VBP do ^ OK
you PRP you ^ OK
profess VB profess ^ OK

uh UH ^ ^ filler
d- XX do ^ false_start
e- XX ^ ^ false_start
you PRP you ^ OK
teach VBP teach ^ OK
students NNS students ^ OK
germanic JJ germanic ^ OK
languages NNS languages ^ OK

well UH ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB ^ ^ repeat
know VB know ^ OK
w- WP ^ ^ repeat
what WP what ^ OK
they PRP they ^ OK
pay VBP pay ^ OK
professors NNS professors ^ OK
these DT these ^ OK
days NNS days ^ OK

bu- CC ^ ^ repeat
but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
sure JJ sure ^ OK
y- XX ^ ^ false_start
living VBG living ^ OK
it PRP ^ ^ false_start
out IN out ^ OK
in IN in ^ OK
city NNP a ^ false_start
uh UH ^ ^ filler
university NNP university ^ OK
city NNP city ^ OK
gets VBZ gets ^ OK
e- XX ^ ^ repeat
expensive JJ expensive ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
only RB only ^ OK
for IN for ^ OK
what UH ^ ^ filler
eighteen CD eighteen ^ OK
days NNS days ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

so UH ^ ^ false_start
are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
married JJ ^ ^ repeat
married VBN married ^ OK
david NNP david ^ OK

but CC but ^ OK
they PRP they ^ OK
nev- RB nev- ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
it PRP it ^ OK
just RB just ^ OK
makes VBZ makes ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
wonder VB wonder ^ OK
like UH ^ ^ filler
how WRB how ^ OK
you PRP ^ ^ repeat
people NNS people ^ OK
get VBP ^ ^ repeat
stay VBP stay ^ OK
in IN in ^ OK
business NN business ^ OK
when WRB when ^ OK
they PRP they ^ OK
're VBP 're ^ OK
not RB not ^ OK
getting VBG getting ^ OK
paid VBN paid ^ OK

um UH ^ ^ filler
not RB not ^ OK
andre NNP andre ^ OK
's POS 's ^ OK
um UH ^ ^ filler

andre NNP at ^ false_start
andre NNP andre ^ OK
there RB ^ ^ false_start
's BES 's ^ OK
they PRP they ^ OK
have VBP have ^ OK
the DT the ^ OK
great JJ great ^ OK
like UH ^ ^ filler
rosemary NN rosemary ^ OK
pizza NN pizza ^ OK

it PRP it ^ OK
's BES 's ^ OK

eh UH eh ^ OK
regardless RB regardless ^ OK

because IN because ^ OK
i PRP i arg0 OK
've VBP 've ^ OK
had VBN had predicate OK
these DT these arg1 OK
friends NNS friends arg1 OK
for IN for ^ OK
a DT a ^ OK
long JJ ^ ^ repeat
long JJ long ^ OK
time NN time ^ OK
and CC and ^ OK
i PRP i arg0 OK
'm VBP 'm ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
risk VB risk predicate OK
loosing VBG loosing arg1 OK
them PRP them arg1 OK
because IN because arg1 OK
of IN of arg1 OK
uh UH ^ ^ filler
a DT ^ ^ repeat
a DT a arg1 OK
million CD ^ ^ repeat
dol- NNS ^ ^ repeat
millionaire NN millionaire arg1 OK
or CC or arg1 OK
whatever WDT whatever arg1 OK

eh UH eh ^ OK
ah UH ah ^ OK
s- XX s- ^ OK
yeah UH yeah ^ OK

and CC ^ arg1 false_start
look VB ^ ^ repeat
ah UH ^ ^ filler
l- VB ^ ^ repeat
look VB look predicate OK
look VB at ^ false_start
how WRB ^ ^ repeat
how WRB how arg1 OK
many JJ ^ ^ repeat
many JJ many arg1 OK
of IN of arg1 OK
our PRP our arg1 OK
men NNS men arg1 OK
are VBP are arg1 OK
dying VBG dying arg1 OK
in IN in argM_loc OK
iraq NNP iraq argM_loc OK

and CC ^ ^ false_start
ah UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
w- PRP ^ ^ repeat
wh- XX ^ ^ repeat
we PRP we arg0 OK
're VBP 're ^ OK
loosing VBG loosing predicate OK
our PRP our arg1 OK
men NNS men arg1 OK
one CD one arg1 OK
by IN by arg1 OK
one CD one arg1 OK

and CC ^ ^ false_start
is VBZ is predicate OK
it PRP it arg1 OK
worth JJ worth arg2 OK
it PRP it arg2 OK

is VBZ is predicate OK
it PRP it arg1 OK
really PRP really arg2 false_start
worth SBAR-1 worth arg2 OK
it JJ it arg2 OK
for RB for arg2 OK
our IN our arg0 OK
men PRP men arg0 OK
to NNS to arg2 OK
go TO go arg2 OK
there VB there arg2 OK
and RB and arg2 OK
help CC help arg2 OK
them VB them arg0 OK
to PRP to arg1 OK
rebuild TO rebuild arg1 OK

they PRP they ^ OK
eh UH eh ^ OK

and CC ^ ^ false_start
now RB now argM_tmp OK
this DT this arg1 OK
paul NNP paul arg1 OK
he PRP ^ ^ false_start
the DT ^ ^ false_start
one CD ^ ^ false_start
that WDT ^ ^ false_start
brennan NNP brennan arg1 OK
he PRP ^ ^ false_start
the DT ^ ^ false_start
one CD ^ ^ false_start
that WDT ^ ^ false_start
's BES ^ ^ repeat
's BES 's predicate OK
in IN in arg2 OK
iraq NNP iraq arg2 OK

i PRP i arg0 OK
just RB just ^ OK
seen VBN saw predicate false_start
him PRP him arg1 OK
on IN on arg1 OK
the DT the arg1 OK
news NN news arg1 OK
with IN with arg1 OK
president NNP president arg1 OK
bush NNP bush arg1 OK
today NN today arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
s- VBD ^ ^ repeat
he PRP he arg0 OK
he PRP ^ ^ repeat
claims VBZ claims predicate OK
oh UH ^ ^ filler
they PRP they arg1 OK
're VBP 're arg1 OK
getting VBG getting arg1 OK
better JJR better arg2 OK
and CC and arg2 OK
better JJR better arg2 OK
and CC and arg2 OK
better JJR better arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
bull NN bull arg2 OK

that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
way NN way arg2 OK
i PRP i arg0 OK
put VBP put arg2 OK
it PRP it arg1 OK

uh-huh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all argM_tmp OK
these DT these argM_tmp OK
years NNS years argM_tmp OK
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
without IN without arg2 OK
money NN money arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD ^ ^ repeat
had VBD had predicate OK
a DT a arg1 OK
guardian NN guardian arg1 OK
angel NN angel arg1 OK
already RB already arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
this DT this argM_tmp OK
may NNP may argM_tmp OK
i PRP i arg0 OK
took VBD took predicate OK
a DT a arg1 OK
heart NN heart arg1 OK
attack NN attack arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN like ^ OK
i PRP i arg0 OK
said VBD said predicate OK
money NN money arg1 OK
is VBZ is arg1 OK
nothing NN nothing arg2 OK

i- PRP ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
how WRB ^ ^ false_start
your PRP your arg1 OK
health NN health arg1 OK
is VBZ is predicate OK
more RBR more arg2 OK
important JJ important arg2 OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
notice VBP notice predicate OK
that IN that arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
always RB always argM_tmp OK
the DT the arg1 OK
good JJ good arg1 OK
people NNS people arg1 OK
they PRP that arg2 false_start
die VBP die arg2 OK

and CC ^ ^ false_start
the DT the arg1 OK
bad JJ bad arg1 OK
bad JJ _NOUN_ arg1 OK
are VBP are predicate OK
still RB still arg2 OK
around RB around arg2 OK

and CC ^ ^ false_start
th- DT ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
another DT another arg2 OK
thing NN thing arg2 OK

but CC but ^ OK
ah UH ^ ^ filler
li- IN ^ ^ repeat
like IN like ^ OK
i PRP i arg0 OK
said VBD said predicate OK
i PRP ^ ^ repeat
god NNP god arg0 OK
could MD could arg2 OK
have VB have arg2 OK
taken VBN taken arg2 OK
me PRP me arg1 OK
some RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
three CD three arg1 OK
times NNS times arg1 OK

and CC ^ ^ false_start
now RB now ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
goi- VBG ^ ^ repeat
supposed VBN supposed predicate OK
to TO to arg2 OK
go VB go arg2 OK
for IN for arg4 OK
a DT a arg4 OK
triple JJ triple arg4 OK
bypass NN bypass arg4 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
's BES ^ ^ repeat
a DT ^ ^ repeat
's BES ^ ^ repeat
a DT ^ ^ repeat
li- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
'm VBP 'm ^ OK
thinking VBG thinking predicate OK
about IN about arg1 OK
that DT ^ ^ repeat
that WDT ^ ^ repeat
that DT that arg1 OK

uh UH ^ ^ filler
uh UH ^ ^ filler
um UH ^ ^ filler
my PRP my ^ OK
we PRP ^ ^ repeat
i PRP ^ ^ repeat
parents NNS parents ^ OK
have VBP ^ ^ repeat
have VBP ^ ^ repeat
have VBP have ^ OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a ^ OK
house NN house ^ OK
in IN in ^ OK
brigantine NNP brigantine ^ OK

twenty-seventh JJ twenty-sevent h  ^ OK
street NN street ^ OK

d- XX ^ ^ false_start
ah UH ^ ^ filler
september NNP september ^ OK
is VBZ is ^ OK
the DT the ^ OK
awesome JJ awesome ^ OK
month NN month ^ OK
in IN in ^ OK
brigantine NNP brigantine ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
the DT ^ ^ false_start
be- XX ^ ^ false_start
uh UH ^ ^ filler
one CD one ^ OK
summer NN summer ^ OK
like UH ^ ^ filler
in IN in ^ OK
between IN between ^ OK
college NN college ^ OK
and CC and ^ OK
grad NN grad ^ OK
school NN school ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
worked VBD ^ ^ repeat
worked VBD worked ^ OK
over IN over ^ OK
in IN in ^ OK
atlantic NNP atlantic ^ OK
city NNP city ^ OK

i PRP i ^ OK
tended VBD tended ^ OK
bar NN bar ^ OK
at IN at ^ OK
uh UH ^ ^ filler
the DT the ^ OK
pittsburgh NNP pittsburgh ^ OK

there EX ^ ^ false_start
's BES ^ ^ false_start
still RB ^ ^ false_start
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
right RB ^ ^ repeat
right RB right ^ OK
across IN ^ ^ repeat
across IN across ^ OK
the DT ^ ^ repeat
the DT the ^ OK
parking NN parking ^ OK
st- NN ^ ^ repeat
lot NN lot ^ OK
from IN from ^ OK
the DT the ^ OK
irish JJ irish ^ OK
pub NN pub ^ OK

and CC and ^ OK
uh UH uh ^ OK
yeah UH yeah ^ OK

eh UH ^ ^ filler
now RB now ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
actually RB actually ^ OK
uh UH ^ ^ filler
a DT a ^ OK
uh UH ^ ^ filler
professor NN professor ^ OK
at IN at ^ OK
drexel NNP drexel ^ OK
university NNP university ^ OK

so UH ^ ^ false_start
what WP ^ ^ repeat
what WP what ^ OK
do VBP do ^ OK
you PRP you ^ OK
do VB do ^ OK

like UH ^ ^ filler
i PRP ^ ^ false_start
remember VBP ^ ^ false_start
like UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
thirty-seven CD thirty-seven ^ OK
years NNS years ^ OK
old JJ old ^ OK

there EX there ^ OK
were VBD were ^ OK
people NNS people ^ OK
who WP who ^ OK
were VBD were ^ OK
like UH ^ ^ filler
eighteen CD eighteen ^ OK
in IN in ^ OK
nineteen CD nineteen ^ OK
seventy-nine CD seventy-nine ^ OK
nineteen-eighty NN nineteen-eigh ty ^ OK
who WP who ^ OK
jumped VBD jumped ^ OK
into IN into ^ OK
the DT the ^ OK
casinos NNS casinos ^ OK
and CC and ^ OK
were VBD were ^ OK
making VBG making ^ OK
like UH like ^ OK
fifty CD fifty ^ OK
grand CD grand ^ OK

ah UH ^ ^ filler
ju- XX ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
germanic JJ germanic ^ OK
languages NNS languages ^ OK

actually UH actually ^ OK
yeah UH yeah ^ OK

basically UH basically ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
teach VBP ^ ^ repeat
teach VBP teach ^ OK
german NNP german ^ OK

i PRP i ^ OK
do VBP do ^ OK
some DT some ^ OK
dutch NNP dutch ^ OK
and CC and ^ OK
some DT some ^ OK
danish NNP danish ^ OK

so UH ^ ^ false_start
like UH ^ ^ filler
but CC but ^ OK
anything NN anything ^ OK
that DT that ^ OK
's BES 's ^ OK
upper JJ upper ^ OK
level NN level ^ OK

my PRP ^ ^ repeat
ah UH ^ ^ filler
my PRP my ^ OK
field NN field ^ OK
of IN of ^ OK
expertise NN expertise ^ OK
is VBZ is ^ OK
actually RB actually ^ OK
german NNP german ^ OK

what WP german ^ false_start
what WP is ^ false_start
what WP what ^ OK
i PRP i ^ OK
was VBD was ^ OK
trained VBN trained ^ OK
in IN in ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ filler
's BES ^ ^ filler
like IN ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
a DT a ^ OK
cell NN cell ^ OK
phone NN phone ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
like UH ^ ^ filler
these DT these ^ OK
unlimited JJ unlimited ^ OK
free JJ ^ ^ false_start
minutes NNS minutes ^ OK
nights NNS ^ ^ false_start
weekends NNS on ^ false_start
nights NNS nights ^ OK
and CC and ^ OK
weekends NNS weekends ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like RP ^ ^ false_start
well UH ^ ^ false_start
if IN if ^ OK
i PRP i ^ OK
can MD can ^ OK
turn VB turn ^ OK
that DT that ^ OK
into IN into ^ OK
two CD two ^ OK
hundred CD hundred ^ OK
dollars NNS dollars ^ OK
that DT that ^ OK
will MD will ^ OK
pay VB pay ^ OK
my PRP my ^ OK
bills NNS bills ^ OK
for IN for ^ OK
some DT some ^ OK
time NN time ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
two CD ^ ^ false_start
hundre- CD ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
look VBP look ^ OK
at IN at ^ OK
it PRP it ^ OK
as IN as ^ OK
this DT this ^ OK
way NN way ^ OK

if IN if ^ OK
i PRP i ^ OK
can MD can ^ OK
make VB make ^ OK
two CD two ^ OK
hundred CD hundred ^ OK
dollars NNS dollars ^ OK
in IN in ^ OK
eighteen CD eighteen ^ OK
days NNS days ^ OK
for IN for ^ OK
five CD five ^ OK
minutes NNS minutes ^ OK
a DT a ^ OK
day NN day ^ OK
ten CD ten ^ OK
minutes NNS minutes ^ OK
a DT a ^ OK
day NN day ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
a DT a ^ OK
worth JJ worth ^ OK

it PRP it ^ OK
's BES 's ^ OK
no- RB ^ ^ repeat
not RB not ^ OK
a DT a ^ OK
bad JJ bad ^ OK
bad JJ _ARG_ ^ false_start

we PRP ^ ^ repeat
i PRP i ^ OK
just RB ^ ^ repeat
just RB just ^ OK
g- VBD ^ ^ repeat
got VBD got ^ OK
married VBN married ^ OK
last JJ last ^ OK
year NN year ^ OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK

that DT ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
probably RB ^ ^ repeat
probably RB probably ^ OK
not RB not ^ OK
the DT the ^ OK
draw NN draw ^ OK

r- XX r- ^ OK
yeah UH yeah ^ OK

uh UH ^ ^ filler
andre NNP andre ^ OK
's POS 's ^ OK
is VBZ is ^ OK
like IN like ^ OK
the DT the ^ OK
life NN life ^ OK
blood NN blood ^ OK

um UH ^ ^ filler
but CC but ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
think VB think ^ OK
it PRP it ^ OK
has VBZ has ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
it PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
just RB just ^ OK
seems VBZ seems ^ OK
like IN like ^ OK
something NN something ^ OK
to TO to ^ OK
be VB be ^ OK
more RBR more ^ OK
aware JJ aware ^ OK
of IN of ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
that IN ^ ^ repeat
that IN that ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
feel VB feel ^ OK
like IN like ^ OK
it PRP it ^ OK
's HVS 's ^ OK
changed VBN changed ^ OK
how WRB ^ ^ repeat
how WRB how ^ OK
they PRP they ^ OK
've VBP 've ^ OK
approached VBN approached ^ OK
marriage NN marriage ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
still RB still ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
willing JJ willing ^ OK
to TO to ^ OK
risk VB risk ^ OK
it PRP it ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

i PRP i ^ OK
um UH ^ ^ filler
think VBP think ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
about RB ^ ^ repeat
about IN about ^ OK
half NN half ^ OK

but CC but ^ OK
um UH ^ ^ filler
my PRP ^ ^ repeat
my PRP my ^ OK
parents NNS parents ^ OK
are VBP are ^ OK
not RB not ^ OK
divorced JJ divorced ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
trying VBG trying ^ OK
to TO to ^ OK
think VB think ^ OK
although RB although ^ OK
most JJS most ^ OK
of IN of ^ OK
my PRP my ^ OK
married JJ married ^ OK
friends NNS friends ^ OK
' POS ' ^ OK
parents NNS parents ^ OK
did VBD did ^ OK
n't RB n't ^ OK
get VB get ^ OK
divorced JJ divorced ^ OK

so UH so ^ OK
maybe RB ^ ^ repeat
maybe RB maybe ^ OK
they PRP they ^ OK
were VBD were ^ OK
more RBR more ^ OK
likely JJ likely ^ OK
to TO to ^ OK
get VB get ^ OK
married JJ married ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
earlier RBR earlier ^ OK
than IN ^ ^ repeat
than IN than ^ OK
people NNS people ^ OK
whose WP whose ^ OK
parents NNS parents ^ OK
are VBP are ^ OK
divorced JJ divorced ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
think VBP ^ ^ repeat
think VBP think ^ OK
that IN ^ ^ repeat
that IN that ^ OK
um UH ^ ^ filler

um UH ^ ^ filler
well UH ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
having VBG having ^ OK
it PRP it ^ OK
be VB be ^ OK
more RBR more ^ OK
sociably RB sociably ^ OK
acceptable JJ acceptable ^ OK
is VBZ is ^ OK
probably RB probably ^ OK
better JJR better ^ OK
because IN because ^ OK
then RB then ^ OK
people NNS people ^ OK
are VBP are ^ OK
n't RB n't ^ OK
staying VBG staying ^ OK
in IN ^ ^ repeat
in IN in ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
bad JJ bad ^ OK
relationships NNS relationships ^ OK

um UH ^ ^ filler
actually RB actually ^ OK
most JJS ^ ^ repeat
most JJS ^ ^ repeat
most JJS most ^ OK
of IN ^ ^ repeat
of IN ^ ^ repeat
the DT ^ ^ repeat
people NNS ^ ^ repeat
of IN of ^ OK
the DT ^ ^ repeat
my PRP my ^ OK
aunts NNS aunts ^ OK
and CC and ^ OK
uncles NNS uncles ^ OK
and CC and ^ OK
everything NN everything ^ OK
have VBP have ^ OK

we PRP we ^ OK
've VBP 've ^ OK
never RB never ^ OK
really RB really ^ OK
had VBN had ^ OK
divorce NN divorce ^ OK
in IN ^ ^ repeat
in IN in ^ OK
my PRP my ^ OK
family NN family ^ OK

and CC ^ ^ false_start
i PRP ^ ^ filler
know VBP ^ ^ filler
my PRP ^ ^ repeat
my PRP my ^ OK
grandparents NNS grandparents ^ OK
really RB really ^ OK
are VBP are ^ OK
upset JJ upset ^ OK
about IN about ^ OK
it PRP it ^ OK
because IN because ^ OK
they PRP they ^ OK
have VBP have ^ OK
never RB never ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
had VBN had ^ OK
to TO to ^ OK
deal VB deal ^ OK
with IN with ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
not RB not ^ OK
necessarily RB necessarily ^ OK
for IN for ^ OK
the DT the ^ OK
better JJR better ^ OK

i PRP i ^ OK
think VBP think ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
can MD ^ ^ repeat
can MD can ^ OK
be VB ^ ^ repeat
be VB be ^ OK
hard JJ hard ^ OK
on IN on ^ OK
families NNS families ^ OK
especially RB especially ^ OK
if IN if ^ OK
there EX there ^ OK
are VBP are ^ OK
kids NNS kids ^ OK
involved VBN involved ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
sure JJ ^ ^ false_start
she PRP ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
she PRP she ^ OK
was VBD was ^ OK
n't RB n't ^ OK
aware JJ aware ^ OK
of IN of ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
problems NNS problems ^ OK
then RB then ^ OK

i PRP i ^ OK
remember VBP remember ^ OK
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
um UH ^ ^ filler
in IN in ^ OK
elementary JJ elementary ^ OK
school NN school ^ OK
my ADVP-TMP- 1 my ^ OK
best PRP best ^ OK
friend JJS friend ^ OK
's NN 's ^ OK
parents POS parents ^ OK
were NNS were ^ OK
divorced VBD divorced ^ OK

and CC ^ ^ false_start
her PRP her ^ OK
parents NNS parents ^ OK
would MD would ^ OK
kind RB kind ^ OK
of RB of ^ OK
com- VB ^ ^ repeat
compete VB compete ^ OK
for IN for ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
her PRP her ^ OK
love NN love ^ OK
and CC and ^ OK
affection NN affection ^ OK
by IN by ^ OK
um UH ^ ^ filler
seeing VBG seeing ^ OK
who WP who ^ OK
could MD could ^ OK
give VB give ^ OK
her PRP her ^ OK
the DT the ^ OK
best JJS best ^ OK
presents NNS presents ^ OK

but CC but ^ OK
um UH ^ ^ filler

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
think VB think ^ OK
it PRP it ^ OK
's HVS has ^ false_start
really RB ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
hugely RB hugely ^ OK
impacted VBN impacted ^ OK
how WRB how ^ OK
i PRP i ^ OK
think VBP think ^ OK
about IN about ^ OK
marriage NN marriage ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
and CC ^ ^ false_start
i PRP ^ ^ false_start
actually RB actually ^ OK
one CD one ^ OK
of IN of ^ OK
my PRP my ^ OK
friends NNS friends ^ OK
has VBZ has ^ OK
gotten VBN gotten ^ OK
married JJ married ^ OK
and CC and ^ OK
has VBZ has ^ OK
gotten VBN gotten ^ OK
divorced JJ divorced ^ OK
already RB already ^ OK

so UH ^ ^ false_start
we PRP ^ ^ repeat
we PRP we ^ OK
were VBD were ^ OK
n't RB n't ^ OK
that RB that ^ OK
surprised JJ surprised ^ OK
that IN that ^ OK
they PRP they ^ OK
got VBD got ^ OK
divorced JJ divorced ^ OK
actually RB actually ^ OK

the DT ^ ^ repeat
the DT the ^ OK
like UH ^ ^ filler
poor JJ poor ^ OK
people NNS people ^ OK
in IN in ^ OK
enron NNP enron ^ OK

the DT the arg1 OK
c. NN c. arg1 OK
e. NN e. arg1 OK
o.s NNS o.s arg1 OK
are VBP ^ ^ repeat
were VBD were predicate OK
way RB way arg2 OK
out IN out arg2 OK
of IN of arg2 OK
line NN line arg2 OK
with IN with arg2 OK
all PDT all arg2 OK
the DT the arg2 OK
stuff NN stuff arg2 OK
that WDT that arg2 OK
they PRP ^ ^ repeat
they PRP they arg0 OK
get VBP get arg2 OK
rewarded VBN rewarded arg1 OK
for IN for arg2 OK
for IN for arg2 OK
chopping VBG chopping arg2 OK
heads NNS heads arg1 OK

they PRP they arg0 OK
get VBP get ^ OK
rewarded VBN rewarded predicate OK
for IN for arg2 OK
making VBG making arg2 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
money NN money arg1 OK
while IN while argM_tmp OK
they PRP ^ ^ repeat
they PRP they arg0 OK
destroy VBP destroy argM_tmp OK
the DT the arg1 OK
morale NN morale arg1 OK
of IN of arg1 OK
the DT the arg1 OK
workers NNS workers arg1 OK

know VBP ^ ^ filler
most JJS most arg0 OK
you PRP ^ ^ filler
people NNS people arg0 OK
switch VBP switch predicate OK
jobs NNS jobs arg1 OK
every DT every argM_tmp OK
couple NN couple argM_tmp OK
years NNS of ^ false_start
years NNS years argM_tmp OK
nowadays RB nowadays argM_tmp OK

and CC ^ ^ repeat
and CC and ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
were VBD ^ ^ false_start
like RP ^ ^ false_start
we PRP said predicate false_start
we PRP we arg1 OK
're VBP 're arg1 OK
sorry JJ sorry arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
watched VBD watched predicate OK
them PRP them arg0 OK
fire VB fire predicate OK
uh UH ^ ^ filler
my PRP my arg1 OK
boss NN boss arg1 OK
who WP who arg1 OK
had VBD had ^ OK
been VBN been predicate OK
with IN with arg2 OK
the DT the arg2 OK
company NN company arg2 OK
for IN for argM_tmp OK
i PRP ^ ^ filler
b- XX ^ ^ filler
like UH ^ ^ filler
twenty-seven CD twenty-seven argM_tmp OK
years NNS years argM_tmp OK

and CC ^ ^ false_start
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP ^ ^ false_start
i PRP said predicate false_start
i PRP i arg0 OK
ca MD ca arg1 OK
n't RB n't arg1 OK
believe VB believe arg1 OK
this DT this arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
said VBD said predicate OK
wait VB wait arg1 OK
a DT a argM_tmp OK
minute NN minute argM_tmp OK

you PRP you arg0 OK
told VBD told predicate OK
me PRP me arg1 OK
that IN that ^ OK
this DT this arg0 OK
position NN position arg0 OK
was- JJ ^ ^ repeat
was VBD was arg2 OK
gone VBN gone arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
was VBD was ^ OK
actually RB actually ^ false_start
making VBG making predicate OK
more JJR more arg1 OK
money NN money arg1 OK
as IN than ^ false_start
the DT the ^ OK
other JJ other ^ OK
person NN person ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
cut VBD cut predicate OK
my PRP my arg1 OK
pay NN pay arg1 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
am VBP am predicate OK
on IN on arg2 OK
the DT the arg2 OK
other JJ other arg2 OK
end NN end arg2 OK

i PRP ^ ^ false_start
would MD ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
i PRP i arg0 OK
would MD would arg1 OK
n't RB n't argM_neg OK
commit VB commit arg1 OK
perjury NN perjury arg1 OK

i PRP i arg0 false_start
would MD would ^ false_start
n't RB n't argM_neg false_start
do VB do predicate false_start
it PRP it arg1 false_start
only RB ^ ^ false_start
because IN ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP ^ ^ false_start
uh UH ^ ^ filler
based VBN based predicate OK
on IN on arg2 OK
my PRP my arg2 OK
religious JJ religious arg2 OK
beliefs NNS beliefs arg2 OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
it PRP ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
i PRP i ^ OK
could MD could ^ OK
n't RB n't ^ OK
really RB really ^ OK
say VB say ^ OK
because IN because ^ OK
i PRP i ^ OK
even RB even ^ OK
just RB just ^ OK
lying VBG lying ^ OK
for IN for ^ OK
someone NN someone ^ OK
if IN if ^ OK
i PRP i ^ OK
know VBP know ^ OK
that IN that ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
lying VBG lying ^ OK
if IN if ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
taking VBG taking ^ OK
the DT the ^ OK
actual JJ actual ^ OK
initiative NN initiative ^ OK
and CC and ^ OK
lying VBG lying ^ OK
about IN about ^ OK
something NN something ^ OK
i PRP i ^ OK
i PRP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
that DT that ^ OK
's BES 's ^ OK
a DT a ^ OK
sin NN sin ^ OK
to IN to ^ OK
me PRP me ^ OK

because IN ^ ^ false_start
i PRP ^ ^ repeat
well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
not RB ^ ^ repeat
not RB ^ ^ repeat
not RB not argM_neg OK
good JJ good arg2 OK
at IN at arg2 OK
lying VBG lying arg2 OK
anyway RB anyway ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
not RB ^ ^ false_start
too RB ^ ^ false_start
like UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
even RB even arg2 OK
big JJ big arg2 OK
on IN on arg2 OK
things NNS things arg2 OK
like IN ^ ^ false_start
when WRB ^ ^ false_start
like IN like arg2 OK
if IN if arg2 OK
my PRP my arg0 OK
mom NN mom arg0 OK
lies VBZ lies arg2 OK
in IN in arg2 OK
like UH ^ ^ filler
a DT a arg1 OK
stupid JJ stupid arg1 OK
lie NN lie arg1 OK

and CC ^ ^ false_start
she PRP ^ ^ false_start
's BES ^ ^ false_start
not RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
many JJ many ^ OK
times NNS times ^ OK
has VBZ has ^ OK
she PRP she arg0 OK
done VBN done predicate OK
that DT that arg1 OK
to IN to arg2 OK
me PRP me arg2 OK
then RB then ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
many JJ many ^ OK
times NNS times ^ OK
has VBZ has ^ OK
she PRP she arg0 OK
lied VBN lied predicate OK
to IN to arg2 OK
me PRP me arg2 OK
and CC and ^ OK
then RB then ^ OK
said VBN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
said VBN said predicate OK
she PRP she arg0 OK
did VBD did arg1 OK
n't RB n't argM_neg OK
tell VB tell arg1 OK
someone NN someone arg1 OK
something NN something arg1 OK
when WRB when argM_tmp OK
she PRP she arg0 OK
did VBD did argM_tmp OK

um UH ^ ^ filler
but CC but ^ OK
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
the DT the arg0 OK
court NN court arg0 OK
system NN system arg0 OK
goes VBZ goes predicate OK
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP i arg0 OK
still RB still ^ OK
think VBP think predicate OK
i PRP ^ ^ repeat
i PRP i arg1 OK
would MD ^ ^ repeat
would MD would arg1 OK
be VB ^ ^ repeat
be VB be arg1 OK
afraid JJ afraid arg2 OK
but CC ^ ^ false_start
to XX ^ ^ false_start
of IN of arg2 OK
also RB also arg2 false_start
getting VBG getting arg2 OK
caught VBN caught arg2 OK

my PRP ^ ^ repeat
um UH ^ ^ filler
my PRP my arg0 OK
friend NN ^ ^ repeat
friend NN friend arg0 OK
melissa NNP melissa arg0 OK
caught VBD caught predicate OK
her PRP her arg0 OK
boyfriend NN boyfriend arg0 OK
cheating VBG cheating arg2 OK
on IN on arg1 OK
her PRP her arg1 OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start
and CC and ^ OK
decided VBD decided predicate OK
to TO to arg1 OK
key VB key arg1 OK
his PRP his arg1 OK
car NN car arg1 OK

and CC ^ ^ false_start
he PRP he arg0 OK
figured VBD figured predicate OK
out RP out arg_particl OK
that IN that arg1 OK
it PRP ^ ^ repeat
it PRP it arg1 OK
was VBD was arg1 OK
her PRP her arg1 OK

so RB ^ ^ false_start
he PRP he arg0 OK
was VBD was ^ OK
taking VBG taking predicate OK
her PRP her arg1 OK
to IN to arg2 OK
small JJ small arg2 OK
claims NNS claims arg2 OK
court NN court arg2 OK

and CC ^ ^ false_start
she PRP she arg0 OK
wanted VBD wanted predicate OK
me PRP me arg0 OK
to TO to arg1 OK
lie VB lie arg1 OK
saying VBG saying arg1 OK
that IN that arg1 OK
she PRP she arg0 OK
had VBD had arg1 OK
keyed VBN keyed arg1 OK
his PRP his arg1 OK
car NN car arg1 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
why WRB why arg1 OK
she PRP she arg0 OK
wanted VBD wanted arg1 OK
me PRP me arg1 OK
to TO to arg1 OK
say VB say arg1 OK
this DT this arg1 OK
in ADVP-PRP- 2 in argM_loc OK
front IN front argM_loc OK
of NN of argM_loc OK
his IN his argM_loc OK
house PRP house argM_loc OK
when NN when arg1 OK
she WRB she arg1 OK
had PRP had arg1 OK
actually VBD actually arg1 OK
done RB done arg1 OK
it VBN it arg2 OK
at PRP ^ ^ repeat
at NN at argM_loc OK
school IN ^ ^ repeat
college IN college argM_loc OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
end VB end predicate OK
up RP up arg_particl OK
going VBG going arg2 OK
for IN for arg2 OK
her PRP her arg2 OK
at RB at ^ OK
all RB all ^ OK

i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
so IN so ^ OK
that IN that ^ OK
i PRP i arg1 OK
did VBD did ^ OK
n't RB n't argM_neg OK
have VB have ^ OK
to TO to ^ OK
worry VB worry predicate OK
about IN about arg0 OK
what WP what arg1 OK
i PRP i arg0 OK
was VBD was arg0 OK
going VBG going arg0 OK
to TO to arg0 OK
say VB say arg0 OK

i PRP i arg0 OK
told VBD told predicate OK
her PRP her arg2 OK
i PRP i arg0 OK
did VBD did arg1 OK
n't RB n't argM_neg OK
think VB think arg1 OK
it PRP it arg1 OK
was SBAR-1 was arg1 OK
appropriate VBD appropriate arg1 OK
for JJ for arg2 OK
me IN me arg0 OK
to PRP to arg2 OK
lie TO lie arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
even RB even ^ OK
though IN though ^ OK
i PRP i arg0 OK
wanted VBD wanted predicate OK
to TO to arg1 OK
help VB help arg1 OK
her PRP her arg1 OK
out RP out arg1 OK
wa- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
why WRB why arg1 OK
it PRP ^ ^ false_start
where NN where arg0 false_start
it PRP ^ ^ false_start
she WRB she arg0 false_start
it PRP ^ ^ false_start
keyed PRP keyed arg0 false_start
it PRP ^ ^ false_start
the VBN the arg0 false_start
it PRP ^ ^ false_start
car DT car arg0 false_start
would SBAR-4 would arg1 OK
make MD make arg1 OK
a VB a arg1 OK
difference DT difference arg1 OK

but CC ^ ^ false_start
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
end VB end predicate OK
up RP up arg_particl OK
going VBG going arg2 OK
because IN because ^ OK
i PRP i arg0 OK
felt VBD felt predicate OK
like IN like arg1 OK
number NN ^ ^ filler
one CD ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
did VBD ^ ^ repeat
did VBD did arg1 OK
n't- RB ^ ^ repeat
n't RB n't argM_neg OK
want VB want arg1 OK
to TO to arg1 OK
get VB get arg1 OK
in IN in arg2 OK
trouble NN trouble arg2 OK
for IN for arg2 OK
it PRP it arg2 OK

i PRP i arg0 OK
guess VBP guess predicate OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
think VB think arg1 OK
i PRP i arg0 OK
would MD would arg1 OK
lie VB lie arg1 OK
about IN about arg1 OK
it PRP it arg1 OK

r- UH ^ ^ repeat
right UH right ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
being VBG being ^ OK
in IN in ^ OK
the DT the ^ OK
situation NN situation ^ OK
depending VBG depending ^ OK
on IN on ^ OK
what WP what ^ OK
it PRP it ^ OK
is VBZ is ^ OK
because NP-PRD-1 because ^ OK
i IN ^ ^ false_start
do PRP ^ ^ false_start
n't VBP ^ ^ false_start

when RB when argM_tmp OK
i WRB i arg0 OK
hear PRP hear predicate OK
the VBP the arg1 OK
word DT word arg1 OK
perjury NN perjury arg1 OK
you NN ^ ^ filler
know ADVP-TMP- 2 ^ ^ filler
i- PRP ^ ^ repeat
it VBP it arg0 OK
makes PRP makes predicate OK
me PRP me arg0 OK
think VBZ think arg1 OK
of PRP of arg1 OK
lying VB lying arg1 OK
in IN in argM_loc OK
court VBG court argM_loc OK

and CC ^ ^ false_start
also RB ^ ^ repeat
also RB also ^ OK
the DT the ^ OK
other JJ other ^ OK
person NN person ^ OK
not RB not ^ OK
like UH ^ ^ filler
even RB even ^ OK
its XX ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
because IN because ^ OK
people NNS people ^ OK
commit VBP commit ^ OK
crimes NNS crimes ^ OK
all PDT all ^ OK
the DT the ^ OK
time NN time ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
how WRB how arg1 OK
do VBP do ^ OK
their PRP their arg0 OK
family NN family arg0 OK
members NNS members arg0 OK
feel VB feel predicate OK

when WRB ^ ^ repeat
when WRB when ^ OK
is VBZ is ^ OK
there EX there ^ OK

well UH ^ ^ filler
now RB now argM_tmp OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
too RB ^ ^ repeat
too RB too arg2 OK
big JJ big arg2 OK
of IN of arg2 OK
a DT a arg2 OK
risk NN risk arg2 OK

kind RB kind ^ OK
of RB of ^ OK
a DT ^ ^ filler
loading VBG loading ^ OK
me PRP me ^ OK
upward RB upward ^ OK

that DT that arg1 OK
's BES 's predicate OK
why WRB why arg1 OK
with IN with arg1 OK
my PRP my arg1 OK
friend NN friend arg1 OK
melissa NNP melissa arg1 OK
i PRP i arg0 OK
completely RB completely arg1 OK
was VBD ^ ^ false_start
like RP said predicate false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
'm VBP 'm arg1 OK
not RB not argM_neg OK
even RB even arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
go VB go arg1 OK
with IN with arg0 OK
you PRP you arg0 OK
to IN to arg1 OK
court NN court arg1 OK
because IN because arg1 OK
i PRP i arg1 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
want VB want arg1 OK
to TO to arg1 OK
be VB be arg1 OK
put VBN put arg1 OK
in IN in arg2 OK
that DT that arg2 OK
position NN position arg2 OK

i PRP ^ arg1 repeat
'd MD ^ ^ false_start
just RB ^ ^ false_start
be VB ^ ^ false_start
like IN ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
first JJ the ^ false_start
first JJ first arg1 OK
thing NN thing arg1 OK
i PRP i arg0 OK
'd MD 'd arg1 OK
do VB do arg1 OK
like UH ^ ^ filler
if IN if arg1 OK
they PRP they arg0 OK
sit VBP sat arg1 false_start
there RB there arg2 OK
like UH ^ ^ filler
okay UH ^ ^ filler

i PRP i arg0 OK
'm VBP ^ ^ false_start
going VBG would ^ repeat
take VB take predicate OK
over RP over arg_particl OK
the DT the arg1 OK
plane NN plane arg1 OK

i PRP i arg0 OK
'd MD 'd ^ OK
probably RB probably ^ OK
just RB just ^ OK
like UH ^ ^ filler
tackle VB tackle predicate OK
them PRP them arg1 OK

but CC but ^ OK
if IN ^ ^ repeat
like UH ^ ^ filler
um UH ^ ^ filler
if IN if ^ OK
attack NN attack ^ OK
yeah UH ^ ^ filler

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
'd MD ^ ^ repeat
'd MD 'd arg1 OK
panic VB panic arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP i arg0 OK
think VBP think predicate OK
y- XX ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP i arg1 OK
'd MD 'd arg1 OK
probably RB probably arg1 OK
have VB have arg1 OK
like UH ^ ^ filler
a DT a arg1 OK
panic NN panic arg1 OK
attack NN attack arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
and CC and arg1 OK
just RB just arg1 OK
be VB be arg1 OK
like UH ^ ^ filler
stuck VBN stuck arg1 OK
frightened VBN frightened arg2 OK

it PRP it ^ OK
was VBD was ^ OK
something NN something ^ OK
like IN like ^ OK
um UH ^ ^ filler

how WRB how arg2 OK
would MD would ^ OK
you PRP you arg0 OK
react VB react predicate OK
if IN ^ ^ false_start
it PRP ^ ^ false_start
w- XX ^ ^ false_start
to IN to arg1 OK
a DT ^ ^ repeat
panic NN ^ ^ false_start
a- CC ^ ^ repeat
um UH ^ ^ filler
a DT a arg1 OK
terrorist JJ terrorist arg1 OK
attack NN attack arg1 OK

well UH ^ ^ filler
how WRB how arg2 OK
would MD would ^ OK
you PRP you arg0 OK
react VB react predicate OK
to IN to arg1 OK
a DT ^ ^ repeat
pa- NN ^ ^ false_start
a DT ^ ^ repeat
a DT a arg1 OK
terrorist JJ terrorist arg1 OK
attack NN attack arg1 OK

if IN if ^ OK
i PRP i ^ OK
got VBD got ^ OK
a- VBN ^ ^ repeat
attacked VBN attacked ^ OK
in IN in ^ OK
my PRP my ^ OK
neighborhood NN neighborhood ^ OK
what UH ^ ^ false_start
by IN by ^ OK
some DT some ^ OK
terrorists NNS terrorists ^ OK

first JJ first ^ OK
things NNS things ^ OK
first JJ first ^ OK
i PRP i arg0 OK
would MD would ^ OK
have VB have ^ OK
to TO to ^ OK
get VB get predicate OK
the DT the arg1 OK
little JJ little arg1 OK
kids NNS kids arg1 OK
as RB as arg1 OK
far RB far arg1 OK
away RB away arg1 OK
as IN as arg1 OK
possible JJ possible arg1 OK

and CC ^ ^ repeat
also RB ^ ^ false_start
if IN if ^ OK
i PRP i arg0 OK
found VBD found predicate OK
out RP out arg1 OK
there EX there arg1 OK
was VBD was arg1 OK
like UH ^ ^ filler
a DT a arg1 OK
terrorist JJ terrorist arg1 OK
attack NN attack arg1 OK
like UH ^ ^ filler
on IN on arg1 OK
the DT the arg1 OK
news NN news arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
i PRP i arg0 OK
'd MD 'd ^ OK
still RB still ^ OK
have VB have ^ OK
to TO to ^ OK
like UH ^ ^ filler
call VB call predicate OK
family NN family arg1 OK
because IN because ^ OK
i PRP i arg0 OK
know VBP know predicate OK
that IN that arg1 OK
they PRP they arg0 OK
travel VBP travel arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK

you PRP you arg0 OK
still RB still ^ OK
got VBP have ^ false_start
to TO to ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
make VB make predicate OK
sure JJ sure ^ OK
of IN of arg1 OK
st- NN ^ ^ repeat
stuff NN stuff arg1 OK
like IN like arg1 OK
that DT that arg1 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
one CD one arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
could MD could ^ OK
be VB be predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
hospital NN hospital argM_loc OK

but CC but ^ OK
um UH ^ ^ filler

well UH ^ ^ filler
he PRP he arg1 OK
comes VBZ comes predicate OK
back RB back arg4 OK
two CD two argM_tmp OK
or CC or argM_tmp OK
three CD three argM_tmp OK
times NNS times argM_tmp OK
a DT a argM_tmp OK
year NN year argM_tmp OK
if IN ^ ^ repeat
if VP if ^ OK
he PRP ^ ^ repeat
he IN he arg0 OK
can MD ^ ^ repeat
you PRP ^ ^ filler
know PRP ^ ^ filler
uh VBP ^ ^ filler
gets UH gets predicate OK
a VBZ a arg1 OK
chance DT chance arg1 OK

uh UH ^ ^ filler
what WP what ^ OK
are VBP are predicate OK
prices NNS prices arg1 OK
in IN in arg2 OK
real JJ real arg2 OK
estate NN estate arg2 OK
down IN down arg2 OK
there RB there arg2 OK
like IN ^ ^ filler

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
do VB do predicate OK
any DT any arg1 OK
flu NN flu arg1 OK
shots NNS shots arg1 OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

that- XX that- ^ OK
ye- XX ye- ^ OK

you PRP you ^ OK
never RB never ^ OK
really RB really ^ OK
kn- VBP ^ ^ repeat
know VBP know ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
act VBP act predicate OK
like IN like arg1 OK
it PRP it arg3 OK
's BES 's arg1 OK
a DT ^ ^ repeat
a DT a arg2 OK
um UH ^ ^ filler
cure VB cure arg2 OK
all RB all arg2 OK
for IN for ^ OK
all PDT all arg2 OK
these DT these arg2 OK
diseases NNS diseases arg2 OK

so UH ^ ^ false_start
you PRP ^ ^ repeat
b- XX ^ ^ repeat
b- XX ^ ^ false_start
we- UH ^ ^ false_start
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
may- RB ^ ^ false_start
in IN in arg2 OK
your PRP your arg2 OK
thirties NNS thirties arg2 OK
about RB about arg2 OK

so RB ^ ^ false_start
y- PRP ^ ^ repeat
you PRP you arg1 OK
're VBP 're predicate OK
in IN in arg2 OK
college NN college arg2 OK

about RB ^ ^ repeat
what UH ^ ^ false_start
about RB about ^ OK
a DT ^ ^ repeat
a DT a ^ OK
month NN ^ ^ repeat
month NN ^ ^ repeat
month NN month ^ OK
an- CC ^ ^ repeat
and CC and ^ OK
a DT a ^ OK
half NN half ^ OK
ago RB ^ ^ repeat
ago RB ago ^ OK

and CC and ^ OK
uh UH ^ ^ filler

well UH ^ ^ filler
i PRP ^ ^ repeat
've VBP ^ ^ repeat
got VBN ^ ^ repeat
i PRP ^ ^ false_start
've VBP ^ ^ false_start
got VBN ^ ^ false_start
um UH ^ ^ filler
they PRP they arg1 OK
're VBP 're predicate OK
eight CD eight arg2 OK
ten CD ten arg2 OK
and CC and arg2 OK
twelve CD twelve arg2 OK
now RB now arg2 OK

so UH ^ ^ false_start
we PRP we ^ OK
um UH ^ ^ filler

and CC ^ ^ false_start
i PRP i arg0 OK
have VBP have predicate OK
t- CD ^ ^ repeat
two CD two arg1 OK
grown JJ grown arg1 OK
kids NNS kids arg1 OK

and CC and ^ OK
um UH ^ ^ filler

i PRP i ^ OK
i PRP 'm ^ false_start
not RB not ^ OK
sure JJ sure ^ OK

i PRP i arg0 OK
think VBP think predicate OK
they PRP ^ ^ repeat
they PRP they arg0 OK
just RB ^ ^ repeat
just RB just arg1 OK
bring VBP bring arg1 OK
one NN one arg1 OK
up RP up arg1 OK
at IN at arg1 OK
a DT a arg1 OK
time NN time arg1 OK

um UH ^ ^ filler
i PRP i ^ OK

maybe RB ^ ^ repeat
um UH ^ ^ filler
maybe RB maybe ^ OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
the DT ^ ^ repeat
that DT that arg2 OK
mosquito JJ mosquito arg2 OK
v- NN ^ ^ repeat
virus NN virus arg2 OK
that WDT that arg0 OK
's BES 's ^ OK
heading VBG heading predicate OK
west RB west arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

i- PRP i- ^ OK

uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
think VB think predicate OK
anything NN anything arg1 OK
like IN like arg1 OK
that DT that arg1 OK
has VBZ has arg1 OK
showed VBN showed arg1 OK
up RB up arg_particl OK

and CC ^ ^ false_start
then RB then ^ OK
they PRP they arg0 OK
had VBD had predicate OK
that DT ^ ^ repeat
that DT that arg1 OK
scare NN scare arg1 OK
with IN with arg1 OK
the DT the arg1 OK
sars NN sars arg1 OK
virus NN virus arg1 OK

did VBD ^ ^ repeat
did VBD did ^ OK
you PRP you arg0 OK
you PRP ^ ^ repeat
find VB find predicate OK
anything NN anything arg1 OK

all PDT ^ ^ false_start
the DT ^ ^ false_start
th- DT ^ ^ false_start
y- XX ^ ^ false_start
st- VBG ^ ^ repeat
studying VBG studying ^ OK
abroad RB abroad ^ OK

and CC and ^ OK
like UH ^ ^ filler
uh UH ^ ^ filler

i PRP i arg0 OK
heard VBD heard predicate OK
all PDT all arg1 OK
the DT the arg1 OK
other JJ other arg1 OK
american JJ american arg1 OK
students NNS students arg0 OK
they PRP ^ ^ repeat
they PRP ^ ^ false_start
cooked VBD cooked arg1 OK
their PRP their arg1 OK
own JJ own arg1 OK
version NN version arg1 OK
of IN of arg1 OK
a DT a arg1 OK
turkey NN turkey arg1 OK

either RB during argM_tmp false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
either RB either argM_tmp OK
christmas NNP christmas argM_tmp OK
or CC or argM_tmp OK
thanksgiving NNP thanksgiving argM_tmp OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ false_start
one CD ^ ^ false_start
is VBZ ^ ^ false_start
where WRB ^ ^ false_start
the DT ^ ^ repeat
fa- NN ^ ^ repeat
my PRP my arg0 OK
family NN family arg0 OK
would MD would ^ OK
travel VB travel predicate OK
to IN to arg1 OK
uh UH the ^ false_start
uh UH ^ ^ filler
grandparents NNS grandparents arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
good JJ ^ ^ repeat
good JJ good arg2 OK
opportunity NN opportunity arg2 OK
to TO to arg2 OK
go VB ^ ^ false_start
see VB see arg2 OK
them PRP them arg1 OK

um UH ^ ^ filler
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
really RB ^ ^ false_start
care VB care predicate OK
too RB too argM_other OK
much RB much argM_other OK
about IN about arg1 OK
the DT ^ ^ false_start
gift NN ^ arg1 false_start
giving VBG gift-giving ^ false_start
part NN ^ ^ false_start
of IN ^ ^ false_start
it PRP ^ ^ false_start
because IN because ^ OK
i PRP ^ ^ repeat
uh UH ^ ^ filler
whatever UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
really RB ^ ^ false_start
expect VB expect predicate OK
much RB much arg1 OK

th- PRP ^ ^ repeat
they PRP they arg0 OK
do VBP have predicate false_start
the DT ^ ^ false_start
six CD six arg1 OK
months NNS months arg1 OK
of IN of arg1 OK
daylight NN daylight arg1 OK
and CC and arg1 OK
six CD six arg1 OK
months NNS months arg1 OK
of IN of arg1 OK
darkness NN darkness arg1 OK

so UH ^ ^ false_start
the DT the ^ OK

so UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
pretty RB ^ ^ repeat
pretty RB ^ ^ false_start
psyched JJ psyched arg2 OK
for IN for ^ OK
that DT that ^ OK

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
live VBP ^ ^ repeat
live VBP live predicate OK
in IN ^ ^ repeat
in IN in argM_loc OK
new NNP new argM_loc OK
york NNP york argM_loc OK
city NNP city argM_loc OK

and CC ^ ^ false_start
so RB ^ ^ false_start
everyone NN everyone arg0 OK
else RB else arg0 OK
is VBZ ^ ^ repeat
all DT ^ ^ repeat
from IN ^ ^ repeat
live VBP lives predicate false_start
in IN in argM_loc OK
the DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
northern JJ northern argM_loc OK
new NNP ^ ^ repeat
new NNP new argM_loc OK
england NNP ^ ^ repeat
england NNP england argM_loc OK

and CC ^ ^ false_start
so CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
're VBP 're ^ OK
excited JJ excited predicate OK
to TO to arg0 OK
come VB come arg0 OK
down RB down argM_other OK
and CC and arg0 OK
spend VB spend arg0 OK
thanksgiving NNP thanksgiving arg1 false_start
in IN in argM_loc false_start
the DT the argM_loc OK
big NNP big argM_loc OK
apple NNP apple argM_loc OK
thank- NNP ^ ^ repeat
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
for IN ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
wou- MD ^ ^ repeat
what WP ^ ^ repeat
i PRP ^ ^ repeat
mean VBP ^ ^ repeat
if IN if ^ OK
had VBD had ^ OK
a DT a ^ OK
little JJ little ^ OK

but CC ^ ^ false_start
but CC ^ ^ false_start
no UH no ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
live VBP ^ ^ false_start
in IN ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
whole JJ whole arg1 OK
house NN house arg1 OK

so UH ^ ^ false_start
i PRP i arg0 OK
live VBP live predicate OK
wi- IN ^ ^ false_start
with IN with argM_other OK
five CD five argM_other OK
other JJ other argM_other OK
guys NNS guys argM_other OK
in IN in argM_loc OK
a DT a argM_loc OK
big JJ big argM_loc OK
house NN house argM_loc OK
tons NNS with ^ false_start
so IN ^ argM_loc filler
tons NNS tons argM_loc OK
of IN of argM_loc OK
room NN room argM_loc OK

and CC ^ ^ false_start
ev- XX ev- ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
e- XX ^ ^ repeat

uh UH ^ ^ filler
i- XX i- ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't argM_neg OK
really RB ^ ^ false_start
cook VB cook predicate OK
at RB at argM_other OK
all RB all argM_other OK

i PRP i ^ OK
'd MD 'd ^ OK
probably RB probably ^ OK

i PRP i ^ OK
'll MD 'll ^ OK
just RB ^ ^ false_start

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
what WP what arg1 OK
to TO to arg1 OK
do VB do arg1 OK
really RB ^ predicate false_start

i PRP i arg0 OK
'll MD 'll ^ OK
provide VB provide predicate OK
the DT the arg1 OK
kitchen NN kitchen arg1 OK

let VB let arg0 OK
people NNS ^ ^ repeat
people NNS people ^ OK
do VB do predicate OK

i PRP i ^ OK
g- XX g- ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP ^ ^ repeat
guess VBP guess ^ OK
they PRP they ^ OK
would MD would ^ OK

it PRP ^ ^ repeat
it PRP it arg1 OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
be VB ^ ^ repeat
be VB be predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
good JJ good arg2 OK
time NN time arg2 OK

maybe RB maybe ^ OK
uh UH ^ ^ filler
because IN because ^ OK
my PRP my ^ OK
grandparents NNS grandparents ^ OK
do VBP do ^ OK
n't RB n't ^ OK
live VB live ^ OK
too RB too ^ OK
far RB far ^ OK

oh UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
a DT a arg2 OK
movie NN movie arg2 OK

just RB just ^ OK
like IN like ^ OK
the DT the ^ OK

that DT ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
get VB get predicate OK
it PRP it arg1 OK
quick RB quick ^ OK
enough RB enough ^ OK

though RB ^ ^ filler
i PRP ^ ^ false_start
will MD ^ ^ false_start
tell VB ^ ^ false_start
you PRP ^ ^ false_start
that IN ^ ^ false_start
the DT ^ ^ repeat
um UH ^ ^ filler
the DT the arg1 OK
game NN game arg1 OK
that WDT that arg1 OK
i PRP i arg1 OK
absolutely RB absolutely arg1 OK
love VBP loved arg1 false_start
was RB was predicate false_start
myst VBD myst arg2 false_start
um NP-1 and ^ false_start
um NP-1 ^ ^ filler
i UH ^ ^ repeat
i PRP i arg0 OK
got PRP got predicate OK
it VBD it arg1 OK
for PRP for ^ OK
christmas IN christmas ^ OK
a NNP ^ ^ false_start
couple DT ^ ^ false_start
of NN ^ ^ false_start
years IN ^ ^ false_start
a- NNS ^ ^ false_start
well RB ^ ^ filler
i UH ^ ^ filler
guess PRP ^ ^ filler
it VBP ^ ^ filler
's PRP ^ ^ filler
more BES more ^ OK
than JJR than ^ OK
a IN a argM_tmp OK
couple DT couple argM_tmp OK
of NN of argM_tmp OK
years IN years argM_tmp OK
ago NNS ago argM_tmp OK
now RB ^ ^ false_start

i PRP ^ ^ false_start
was VBD ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ repeat
see UH ^ ^ filler
i PRP i arg0 OK
like VBP like predicate OK
those DT those arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
games NNS games arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg1 OK
was VBD was predicate OK
just RB just argM_tmp OK
blown VBN blown arg2 OK
away RB away argM_loc OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just arg2 OK
by IN ^ ^ repeat
by IN by arg2 OK
all PDT all arg0 OK
the DT ^ ^ repeat
the DT the arg1 OK
work NN work arg1 OK
that WDT that arg2 OK
had VBD had arg2 OK
gone VBN gone arg2 OK
into IN into arg2 OK
it PRP it arg2 OK

it PRP ^ ^ false_start
wa- VBD ^ ^ false_start
i PRP i arg0 OK
just RB just ^ OK
thought VBD thought predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
awesome JJ awesome arg2 OK

the DT the ^ OK
graphics NNS graphics ^ OK
the DT the ^ OK
sound NN sound ^ OK
the DT the ^ OK
whole JJ whole ^ OK
thing NN thing ^ OK
was VBD was ^ OK
just RB just ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i- PRP ^ ^ repeat
the DT the ^ OK
music NN music ^ OK
i- PRP ^ ^ repeat
it PRP ^ ^ false_start
was VBD was ^ OK
just RB just ^ OK

it PRP ^ ^ repeat
it PRP it arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
totally RB totally arg2 OK
like IN ^ ^ repeat
like IN like arg2 OK
another DT another arg2 OK
different JJ different arg2 OK
world NN world arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP i arg1 OK
was VBD was predicate OK
on IN on arg2 OK
amazon NNP ^ ^ repeat
um UH ^ ^ filler
amazon NNP amazon arg2 OK
dot NNP dot arg2 OK
com NNP com arg2 OK
uh UH ^ ^ filler
about RB about argM_tmp OK
a DT a argM_tmp OK
week NN week argM_tmp OK
or CC or argM_tmp OK
so RB so argM_tmp OK
ago RB ago argM_tmp OK

and CC ^ argM_tmp false_start
then RB then ^ OK
i PRP i arg0 OK
remembered VBD remembered predicate OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ filler
'm VBP ^ ^ filler
telling VBG ^ ^ filler
you PRP ^ ^ filler
i PRP i arg0 OK
must MD must arg1 OK
have VB have arg1 OK
worked VBN worked arg1 OK
on IN on arg1 OK
that DT that arg1 OK
game NN game arg1 OK
for IN for argM_tmp OK
sometime RB about argM_tmp false_start
a DT a argM_tmp false_start
month NN month argM_tmp false_start
until IN and ^ false_start
until IN ^ ^ false_start
like UH ^ ^ filler
hours NNS hours argM_tmp OK
into IN into argM_tmp OK
the DT the argM_tmp OK
night NN night argM_tmp OK

i PRP ^ ^ false_start
'd MD ^ ^ false_start
just RB ^ ^ false_start
i PRP i arg0 OK
became VBD became predicate OK
obsessed JJ obsessed arg1 OK
with IN with arg1 OK
it PRP it arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
know VBP know predicate OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
hate VBP would ^ false_start
hate VBP hate predicate OK
to TO to arg1 OK
admit VB admit arg1 OK
it PRP it arg1 OK
but CC but ^ OK
i PRP i arg0 OK
actually RB actually ^ OK
did VBD did ^ OK
end VB end predicate OK
up RP up arg_particl OK
buying VBG buying arg2 OK
one CD one arg1 OK
of IN of arg1 OK
those DT those arg1 OK
little JJ little arg1 OK
cheat NN cheat arg1 OK
books NNS books arg1 OK

eh UH ^ ^ filler
it PRP it arg0 OK
's BES 's predicate OK
hard JJ hard arg1 OK

but CC ^ ^ false_start
so UH so ^ OK
i PRP i ^ OK
guess VBP guess ^ OK
that DT that ^ OK
really RB really ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
come VBN come ^ OK
under IN ^ ^ repeat
u- IN ^ ^ repeat
under IN under ^ OK
the DT ^ ^ repeat
the DT the ^ OK
heading NN heading ^ OK
of IN of ^ OK
fun NN fun ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
're VBP 're ^ OK
thinking VBG thinking ^ OK
of IN of ^ OK
games NNS games ^ OK
and ADVP-TMP- 1 ^ ^ false_start
so CC ^ ^ false_start

eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP i arg0 OK
prob- RB ^ ^ repeat
probably RB probably ^ OK
will MD will predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
probably RB probably ^ OK
will MD will predicate OK
be VB be arg1 OK
sucked VBN sucked arg1 OK
into IN into arg1 OK
it PRP it arg1 OK
again RB again ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
then RB then ^ OK
i PRP i arg0 OK
'll MD 'll ^ OK
have VB have ^ OK
to TO to ^ OK
have VB have predicate OK
one CD one arg1 OK
of IN of arg1 OK
my PRP my arg0 OK
kids NNS kids arg0 OK
come VB come arg1 OK
and CC and arg4 OK
help VB help arg4 OK
me PRP me arg1 OK
out RP out arg4 OK
because IN because ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
i PRP if arg1 false_start
they PRP they arg1 OK
're VBP 're arg1 OK
smarter JJR smarter arg2 OK
i PRP ^ ^ false_start
than IN than arg2 repeat
i PRP i arg0 OK
think VBP think arg2 OK
i PRP i arg1 OK
am VBP am arg1 OK

and CC ^ ^ false_start
that DT ^ ^ repeat
now UH ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ OK
you PRP you arg0 OK
play VBP play predicate OK
on IN on arg1 OK
that DT the arg1 false_start
computer NN computer arg1 OK
now RB now argM_tmp OK
you PRP then ^ false_start
you PRP you arg0 OK
must MD must ^ OK
also RB also ^ OK
have VB have predicate OK
x. NNP an ^ false_start
x. NNP x. arg1 OK
box NNP box arg1 OK
or CC or arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
game NNP game arg1 OK
cube NNP cube arg1 OK
or CC ^ ^ false_start
one CD ^ ^ false_start
of IN ^ ^ false_start
those DT ^ ^ false_start
things NNS ^ ^ false_start
too RB ^ ^ false_start

and CC ^ ^ repeat
and CC ^ ^ false_start
can MD can ^ OK
you PRP you arg0 OK
write VB write predicate OK
your PRP your arg1 OK
own JJ own arg1 OK
stuff NN stuff arg1 OK

an- XX ^ ^ repeat
y- XX ^ ^ repeat
an- XX ^ ^ repeat
ah UH yeah ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ repeat
like UH ^ ^ filler
you PRP you arg0 OK
were VBD were ^ OK
never RB never argM_tmp OK
allowed VBN allowed predicate OK
to TO to arg1 OK
do VB do arg1 OK
stuff NN stuff arg1 false_start
like IN like arg1 false_start
that DT that arg1 false_start
in IN ^ ^ repeat
like UH ^ ^ filler
in IN in argM_loc OK
the DT ^ ^ repeat
the DT the argM_loc OK
real JJ real argM_loc OK
apartment NN apartment argM_loc OK

but CC ^ ^ false_start
if IN ^ ^ false_start
ye- XX ^ ^ false_start
but CC ^ ^ false_start
if IN ^ ^ false_start
are VBP are ^ OK
you PRP you arg0 OK
doing VBG doing predicate OK
the DT the arg2 OK
same JJ same arg1 OK
thing NN thing arg1 OK
that WDT that arg2 OK
your PRP your arg0 OK
brother NN brother arg0 OK
is VBZ is arg2 OK
doing VBG doing arg2 OK
too RB too arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
maybe RB maybe ^ OK
if IN if ^ OK
you PRP you arg0 OK
checked VBD checked predicate OK
out RP out ^ OK
doing VBG doing arg1 OK
some DT some arg1 OK
of IN of arg1 OK
those DT those arg1 OK
things NNS things arg1 OK
or CC or ^ OK
you PRP you arg0 OK
hooked VBD hooked predicate OK
up RP up ^ OK
with IN with arg1 OK
him PRP him arg1 OK
maybe RB ^ ^ false_start
and CC ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
you PRP you arg0 OK
had VBD had predicate OK
some DT ^ ^ repeat
some DT some arg1 OK
exa- NNS ^ ^ repeat
samples NNS samples arg1 OK
to TO to arg1 OK
show VB show arg1 OK
that NP-1 then ^ OK
that NP-1 that arg0 OK
may DT may ^ OK
make MD make predicate OK
a VB a arg1 OK
difference DT difference arg1 OK

everything NN everything arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
doing VBG doing arg1 OK
i NP-1 i arg0 OK
think PRP think predicate OK
they VBP ^ ^ repeat
they VBP they arg0 OK
're PRP 're arg1 OK
're PRP ^ ^ repeat
doing VBP doing arg1 OK
out VBG out arg2 OK
of IN of arg2 OK
necessity IN necessity arg2 OK

he PRP he ^ OK
's BES 's ^ OK

the DT ^ ^ false_start
only JJ ^ ^ false_start
thing NN ^ ^ false_start
if IN if argM_purpos OK
you PRP you argM_purpos OK
're VBP 're argM_purpos OK
really RB really argM_purpos OK
that RB that argM_purpos OK
uh UH ^ ^ filler
concerned JJ concerned argM_purpos OK
about IN about argM_purpos OK
it PRP it argM_purpos OK
to IN ^ ^ false_start
that DT ^ ^ false_start
point NN ^ ^ false_start
uh UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
what WP what arg2 OK
our PRP our arg1 OK
representatives NNS representativ es arg1 OK
are VBP are arg2 OK
for IN for arg2 OK

to XX ^ ^ false_start
uh UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
really RB really argM_adverb OK
the DT the arg2 OK
only JJ only arg2 OK
thing NN thing arg2 OK

and CC ^ arg2 false_start
eh UH ^ ^ filler
th- RB ^ ^ repeat
then RB ^ ^ false_start
my PRP ^ ^ repeat
my PRP my arg1 OK
feeling NN feeling arg1 OK
too RB too argM_discou OK
is VBZ is predicate OK
i PRP that ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
appreciate VBP appreciate arg2 OK
and CC and arg2 OK
respect VBP respect arg2 OK
different JJ different arg1 OK
viewpoints NNS viewpoints arg1 OK
on IN on arg1 OK
it PRP it arg1 OK

but CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
still RB still argM_adverb OK
think VBP think predicate OK
uh UH ^ ^ filler
there EX ^ ^ repeat
there EX there arg1 OK
are VBP are arg1 OK
some DT some arg0 OK
people NNS people arg0 OK
who WP who arg0 OK
are VBP are arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
not RB not argM_neg OK
facing VBG facing arg2 OK
the DT the arg2 OK
way NN way arg2 OK
things NNS things arg1 OK
are VBP are arg1 OK

and CC ^ ^ false_start
eh UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
uh UH ^ ^ filler
to TO to arg1 OK
uh UH ^ ^ filler
hold VB hold arg1 OK
a DT a arg1 OK
descending JJ descending arg1 OK
opinion NN opinion arg1 OK
's BES 's arg1 OK
one CD one arg2 OK
thing NN thing arg2 OK

but CC ^ arg4 false_start
i PRP i arg0 OK
think VBP think predicate OK
eh UH ^ ^ filler
y- PRP ^ ^ repeat
you PRP you arg1 OK
can MD can argM_mod OK
actually RB actually argM_adverb OK
go VB go arg1 OK
to IN to arg4 OK
the DT the ^ OK
the DT _ARG_ arg4 false_start

uh UH ^ ^ filler
holding VBG holding ^ OK
us PRP us ^ OK
back RB back ^ OK
from IN from ^ OK
doing VBG doing ^ OK
what WP what ^ OK
we PRP we ^ OK
have VBP have ^ OK
to TO to ^ OK
too NP-2 too ^ OK

y- PRP ^ ^ repeat
you PRP you ^ OK
understa- VBP understand ^ false_start

but CC ^ ^ false_start
holy UH ^ ^ filler
cow UH ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
scary JJ scary arg2 OK
time NN time arg2 OK

r- UH ^ ^ repeat
right UH right ^ OK

my PRP ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm predicate OK
old JJ old arg1 OK
enough RB enough arg1 OK
to TO to arg1 OK
remember VB remember arg1 OK
um UH ^ ^ filler
well UH ^ ^ filler
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
things NNS things arg1 OK
my PRP my arg0 OK
parents NNS parents arg0 OK
told VBD told arg1 OK
me PRP me arg2 OK
about NP-2 about arg1 OK
world IN world arg1 OK
war NNP war arg1 OK
one NNP one arg1 OK
and CD and arg1 OK
two CC two arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
also RB ^ ^ false_start
am VBP ^ ^ false_start
very RB ^ ^ false_start
st- JJ ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
believe VBP ^ ^ false_start
that IN ^ ^ false_start
uh UH ^ ^ filler
if IN ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
if IN ^ ^ false_start
you PRP ^ ^ false_start
rep- VBP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
trying VBG ^ ^ false_start
to TO ^ ^ false_start
hurry VB ^ ^ false_start
here RB ^ ^ false_start
uh UH ^ ^ filler
do VBP do ^ OK
n't RB n't argM_neg OK
repeat VB repeat predicate OK
history NN history arg1 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
understand VB understand predicate OK
how WRB ^ ^ false_start
people NNS ^ ^ false_start
ca MD ^ ^ false_start
n't RB ^ ^ false_start
look VB ^ ^ false_start
at IN ^ ^ false_start
this DT ^ ^ false_start
and CC ^ ^ false_start
just RB ^ ^ false_start
say VB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
eh UH ^ ^ filler
how WRB ^ ^ false_start
they PRP ^ ^ false_start
some DT ^ ^ false_start
people NNS ^ ^ false_start
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
a S ^ ^ false_start
descending DT ^ ^ false_start
op- JJ ^ ^ false_start
opinion NN ^ ^ false_start
but NN ^ ^ false_start
how CC how argM_mnr OK
they WRB they arg0 OK
can PRP can argM_mod OK
say MD say arg1 OK
some VB some arg1 OK
of DT of arg1 OK
the IN the arg1 OK
things DT things arg1 OK
they NNS they arg0 OK
say PRP say arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ repeat
eh UH ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
like IN like arg2 OK
no DT no arg0 OK
one NN one arg0 OK
wants VBZ wants arg2 OK
this DT this arg1 OK

but CC ^ ^ false_start
uh UH ^ ^ filler
it PRP ^ ^ repeat
it PRP ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
he PRP he arg1 OK
was VBD was arg1 OK
very RB very arg2 OK
candid JJ candid arg2 OK
last JJ last arg2 false_start
night NN night arg2 false_start

uh UH ^ ^ filler
he PRP ^ ^ false_start
was VBD ^ ^ false_start
very RB ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
he PRP he arg0 OK
really RB really argM_discou OK
hit VBD hit arg1 OK
the DT the arg1 OK
nail NN nail arg1 OK
on IN on arg1 OK
the DT the arg1 OK
head NN head arg1 OK

as IN ^ ^ false_start
to IN ^ ^ false_start
and CC ^ ^ false_start
it PRP ^ ^ false_start
t- IN ^ ^ false_start
to IN to arg2 OK
me PRP me arg2 OK
it PRP it arg0 OK
looked VBD looked predicate OK
very RB very arg1 OK
genuine JJ genuine arg1 OK
and CC and arg1 OK
sincere JJ sincere arg1 OK
in IN in arg1 OK
what WP what arg1 OK
he PRP he arg0 OK
and CC and arg0 OK
the DT ^ ^ repeat
the DT the arg0 OK
others NNS others arg0 OK
were VBD were arg1 OK
saying VBG saying arg1 OK

uh UH ^ ^ filler
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK

are VBP ^ ^ false_start
you PRP ^ ^ false_start
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
in IN ^ ^ repeat
in IN in arg2 OK
florida NNP florida arg2 OK

do VBP ^ ^ false_start
n't RB ^ ^ false_start
well UH ^ ^ filler
s- XX ^ ^ false_start
mm UH ^ ^ filler
uh UH ^ ^ filler
not RB not ^ OK
much RB much ^ OK

but CC ^ ^ false_start
it PRP it arg1 OK
's HVS 's ^ OK
been VBN been predicate OK
down RB down arg2 OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
say UH ^ ^ filler
in IN in arg2 OK
the DT the arg2 OK
low JJ low arg2 OK
thirties NNS thirties arg2 OK

i PRP i arg0 OK
used VBD used argM_mod OK
to TO to argM_mod OK
talk VB talk predicate OK
to IN to arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
people NNS people arg2 OK
from IN from argM_loc OK
kentucky NNP kentucky argM_loc OK
when WRB when argM_tmp OK
i PRP ^ ^ repeat
i PRP i argM_tmp OK
w- VBD ^ ^ repeat
worked VBD worked argM_tmp OK
for IN for arg2 OK
a DT a arg1 OK
company NN company arg1 OK
called VBN called arg2 OK
volaris NNP volaris arg2 OK

do VBP ^ ^ false_start
w- XX ^ ^ repeat
what WP what ^ OK
about IN about ^ OK
your PRP your ^ OK
friends NNS friends ^ OK

well UH ^ ^ filler
there EX there arg1 OK
's BES 's predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
people NNS people arg2 OK
who WP ^ ^ false_start
're VBP ^ ^ false_start
s- XX ^ ^ false_start
whose WP whose arg2 OK
kids NNS kids arg1 OK
are VBP are arg2 OK
going VBG going arg2 OK
too RB too argM_discou OK

uh UH ^ ^ filler
as RB as argM_extent false_start
far RB far argM_extent false_start
as IN as argM_extent false_start
being VBG being predicate false_start
a DT ^ ^ repeat
a DT a arg2 false_start
vietnam NNP vietnam arg2 false_start
veteran NN veteran arg2 false_start
uh UH ^ ^ filler
i PRP i arg0 OK
know VBP know predicate OK
when WRB when argM_tmp OK
i PRP i arg1 OK
was VBD was arg1 OK
in IN in arg2 OK
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like IN ^ ^ false_start
i PRP i arg0 OK
just RB just argM_adverb OK
missed VBD missed arg1 OK
the DT the arg1 OK
vietnam NNP vietnam arg1 OK
era NN era arg1 OK
by IN by argM_tmp OK
like UH ^ ^ filler
two CD two argM_tmp OK
or CC or argM_tmp OK
three CD three argM_tmp OK
months NNS months argM_tmp OK

and CC ^ ^ repeat
and CC ^ ^ false_start
back RB back argM_tmp OK
then RB then argM_tmp OK
it PRP ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
we PRP we arg0 OK
had VBD had predicate OK
it PRP it arg1 OK
pretty RB pretty argM_mnr OK
easy RB easy argM_mnr OK

they PRP ^ ^ false_start
called VBD ^ ^ false_start
it PRP ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
after IN after argM_tmp OK
nam NNP nam argM_tmp OK
it PRP it arg1 OK
was VBD was ^ OK
like RP called predicate false_start
take VB take arg2 OK
it PRP it arg1 OK
easy RB easy argM_mnr OK

you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
they PRP they arg0 OK
called VBD called predicate OK
it PRP it arg1 OK
a DT ^ ^ repeat
an DT an arg2 OK
inspection NN inspection arg2 OK
navy NNP navy arg2 OK

but CC ^ ^ false_start
still RB ^ ^ false_start
at IN at argM_tmp OK
the DT the argM_tmp OK
same JJ same argM_tmp OK
time NN time argM_tmp OK
i PRP i arg0 OK
was VBD was predicate OK
able JJ able arg2 OK
to TO to arg2 OK
go VB go arg2 OK
overseas RB overseas arg4 OK
and CC ^ ^ repeat
and CC and arg2 OK
see VB see arg2 OK
things NNS things arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
way NN ^ ^ repeat
way NN way arg1 OK
other JJ other arg0 OK
people NNS people arg0 OK
live VBP live arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
uh UH ^ ^ filler
some DT some arg0 OK
other JJ other arg0 OK
people NNS people arg0 OK
that WDT that arg0 OK
i PRP i arg0 OK
've VBP 've arg0 OK
talked VBN talked arg0 OK
to IN to arg0 OK
recently NP-1 recently arg0 OK
even RB even argM_adverb OK
agree RB agree predicate OK
that VBP that arg1 OK
i- IN ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it arg1 OK
's PRP 's arg1 OK
too BES too arg2 OK
bad RB bad arg2 OK

i PRP i arg0 false_start
'm VBP 'm arg0 false_start
sure JJ sure arg0 false_start
it PRP ^ ^ false_start
would MD ^ ^ false_start
um UH ^ ^ filler
they PRP they arg0 OK
wo MD wo argM_mod OK
n't RB n't argM_neg OK
do VB do arg2 OK
it PRP it arg1 OK

but CC ^ ^ false_start
every DT every arg0 OK
kid NN kid arg0 OK
out IN out arg0 OK
of IN of arg0 OK
high JJ high arg0 OK
school NN school arg0 OK
ought MD ought argM_mod OK
to TO to argM_mod OK
spend VB spend predicate OK
two CD two arg1 OK
years NNS years arg1 OK
overseas RB overseas argM_loc OK
and CC and arg2 OK
see VB see arg2 OK
what WP what arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
really RB ^ ^ repeat
really RB really arg2 OK
like IN like arg2 OK

it PRP it ^ OK
r- RB ^ ^ false_start

that DT ^ ^ false_start
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i- IN ^ ^ repeat
if IN ^ ^ false_start
uh UH ^ ^ filler
there EX there arg1 OK
's BES 's predicate OK
always RB always arg2 OK
the DT the arg2 OK
ugly JJ ugly arg2 OK
american NNP american arg2 OK
the DT the arg2 OK
good JJ good arg2 OK
american NNP american arg2 OK
the DT the arg2 OK
ugly JJ ugly arg2 OK
th- DT ^ ^ false_start
uh UH ^ ^ filler
greek JJ greek arg2 OK
or CC or arg2 OK
the DT the arg2 OK
good JJ good arg2 OK
greek NN greek arg2 OK

if IN if argM_adverb OK
you PRP you argM_adverb OK
were VBD were argM_adverb OK
the DT ^ ^ repeat
the DT the argM_adverb OK
good JJ good argM_adverb OK
american NNP american argM_adverb OK
you PRP you argM_adverb OK
did VBD did argM_adverb OK
n't RB n't argM_adverb OK
uh UH ^ ^ filler
pop VB pop argM_adverb OK
off RP off argM_adverb OK
and CC and argM_adverb OK
you PRP you argM_adverb OK
respected VBD respected argM_adverb OK
them PRP them argM_adverb OK
and CC and argM_adverb OK
tried VBD tried argM_adverb OK
to TO to argM_adverb OK
learn VB learn argM_adverb OK
their PRP their argM_adverb OK
language NN language argM_adverb OK
they PRP they arg2 OK
would MD would argM_mod OK
sit VB sit predicate OK
you PRP you arg1 OK
in RB in arg_particl OK
especially RB especially argM_adverb OK
up IN up argM_loc OK
north NN north argM_loc OK

but CC but ^ OK
it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler

i PRP i arg0 OK
'll MD 'll argM_mod OK
bet VB bet predicate OK

so UH ^ ^ filler
i PRP i arg0 OK
'd MD 'd argM_mod OK
love VB love predicate OK
to TO to arg1 OK
go VB go arg1 OK
to IN to arg2 OK
kentucky NNP kentucky arg2 OK
and CC ^ ^ repeat
and CC and arg2 OK
tennessee NNP tennessee arg2 OK
and CC and arg1 OK
see VB see arg1 OK
that DT that arg1 OK
part NN part arg1 OK
of IN of arg1 OK
the DT the arg1 OK
world NN world arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
seen VBN seen predicate OK
a DT a arg1 OK
few JJ few arg1 OK
states NNS states arg1 OK
but CC but argM_discou OK
not RB not argM_discou OK
that DT that argM_discou OK
part NN part argM_discou OK

well UH ^ ^ filler
being VBG being ^ OK
in IN in ^ OK
the DT the ^ OK
linguistics NN linguistics ^ OK
department NN department ^ OK
um UH ^ ^ filler

but CC ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
enough JJ enough ^ OK
money NN money ^ OK
because IN because ^ OK
eh UH ^ ^ filler
where WRB where ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
from IN from ^ OK
there ADVP-1 there ^ OK
's RB 's ^ OK
a BES a ^ OK
lot DT lot ^ OK
of NN of ^ OK
um IN ^ ^ filler
mexicans UH mexicans ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
hey UH ^ ^ filler
um UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
to TO to ^ OK
teach VB teach ^ OK
your PRP your ^ OK
employees NNS employees ^ OK
english NNP english ^ OK

and CC ^ ^ false_start
then RB then ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
we PRP ^ ^ false_start
'll MD ^ ^ false_start
pay VBP pay ^ OK
me PRP me ^ OK
and CC ^ ^ false_start
money NN money ^ OK
to TO to ^ OK
do VB do ^ OK
this DT this ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
yeah UH yeah ^ OK

come VB come ^ OK
back RB back ^ OK
when WRB when ^ OK
you PRP you ^ OK
um UH ^ ^ filler
are VBP are ^ OK
able JJ able ^ OK
to TO to ^ OK
pay VB pay ^ OK
for IN for ^ OK
that DT that ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
's BES ^ ^ false_start
like RP said ^ false_start
yeah UH yeah ^ OK

so UH ^ ^ filler
but CC ^ ^ false_start
that DT that ^ OK
was VBD was ^ OK
like UH ^ ^ filler
eh UH ^ ^ filler
three CD three ^ OK
years NNS years ^ OK
ago RB ago ^ OK

me PRP me ^ OK
either RB either ^ OK

you PRP you ^ OK
'd MD 'd ^ OK
have VB have ^ OK
to TO to ^ OK
go VB go ^ OK
like UH ^ ^ filler

like IN like ^ OK
lincoln NNP lincoln ^ OK
city NNP city ^ OK
oregon NNP oregon ^ OK

um UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
my PRP my ^ OK
business NN business ^ OK
would MD would ^ OK
be VB be ^ OK
successful JJ successful ^ OK
because IN because ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
d- XX ^ ^ false_start
like UH ^ ^ filler
there EX there ^ OK
's BES are ^ false_start
tons NNS tons ^ OK
of IN of ^ OK
people NNS people ^ OK
who WP who ^ OK
have VBP have ^ OK
to TO to ^ OK
learn VB learn ^ OK
english NNP english ^ OK
that WDT that ^ OK
are VBP are ^ OK
always RB always ^ OK
looking VBG looking ^ OK
to TO to ^ OK
learn VB learn ^ OK

especially RB especially ^ OK
people NNS people ^ OK
like IN ^ ^ filler
that DT ^ ^ filler
that WDT that ^ OK
are VBP are ^ OK
working VBG working ^ OK
at IN at ^ OK
temp NN temp ^ OK
agencies NNS agencies ^ OK
which WDT which ^ OK
are VBP are ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
them PRP them ^ OK

um UH ^ ^ filler
what WP what ^ OK
else RB else ^ OK
are VBP are ^ OK
we PRP we ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
talk VB talk ^ OK
about IN about ^ OK

when WRB when ^ OK
did VBD did ^ OK
we PRP we ^ OK
start VB start ^ OK
eh UH ^ ^ filler
talking VBG talking ^ OK

that DT that ^ OK
's BES 's ^ OK
probably RB probably ^ OK
good JJ good ^ OK
because IN because ^ OK
i- IN ^ ^ false_start
like UH ^ ^ filler
if IN ^ ^ false_start
you PRP ^ ^ false_start
eh UH ^ ^ filler
sometimes RB sometimes ^ OK
if IN if ^ OK
you PRP you ^ OK
speak VBP speak ^ OK
a DT a ^ OK
language NN language ^ OK
then RB then ^ OK
they PRP they ^ OK
use VBP use ^ OK
it PRP it ^ OK
as IN as ^ OK
a DT a ^ OK
crutch NN crutch ^ OK

so UH ^ ^ filler
was VBD was ^ OK
it PRP it ^ OK
in IN in ^ OK
a DT a ^ OK

eh UH ^ ^ filler
oh UH ^ ^ filler
go VB go ^ OK
ahead RB ahead ^ OK

oh UH ^ ^ filler
i PRP i ^ OK
studied VBD studied ^ OK
french JJ french ^ OK
a DT a ^ OK
long JJ long ^ OK
t- NN ^ ^ false_start
f- XX ^ ^ false_start
time NN time ^ OK
ago RB ago ^ OK

uh UH ^ argM_tmp filler
this DT ^ ^ false_start
y- PRP ^ ^ false_start
i PRP i arg0 OK
believe VBP believe predicate OK
he PRP he arg1 OK
's BES 's arg1 OK
going VBG going argM_mod OK
to TO to argM_mod OK
wait VB wait predicate OK
wait VB ^ arg1 false_start
june NNP until ^ false_start
uh UH ^ ^ filler
next JJ next argM_tmp OK
june NNP june argM_tmp OK

they PRP ^ ^ false_start
just RB ^ ^ false_start
n- VBP ^ ^ false_start
they PRP they arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
the DT the arg1 OK
difference NN difference arg1 OK

um UH ^ ^ filler
i PRP i arg0 OK
was VBD was ^ OK
not RB not argM_neg false_start
associated VBN associated predicate OK
very RB very argM_extent OK
much RB much argM_extent OK
because IN because argM_cause OK
it PRP it arg1 OK
does VBZ does argM_cause OK
take VB take argM_cause OK
time NN time arg2 OK
after IN after argM_tmp OK
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your argM_tmp OK
work NN work argM_tmp OK
day NN day argM_tmp OK
and CC and argM_tmp OK
your PRP your argM_tmp OK
family NN family argM_tmp OK
uh UH ^ ^ filler
with IN with argM_tmp OK
scan NNP scan argM_tmp OK

it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler
's BES _ARG_ ^ false_start

uh UH ^ ^ filler
i PRP i arg0 false_start
guess VBP guess predicate false_start
it PRP it arg1 OK
's BES 's arg1 OK
an DT an arg0 OK
association NN association arg0 OK
that WDT that arg0 OK
takes VBZ takes arg2 OK
care NN care arg1 OK
of IN of arg1 OK
battered VBN battered arg1 OK
or CC or arg1 OK
neglected VBN neglected arg1 OK
more RBR ^ ^ false_start
than IN ^ ^ false_start
anything NN ^ ^ false_start
children NNS children arg1 OK

it- PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
just RB just arg2 OK
the DT the arg2 OK
children NNS children arg2 OK

it- PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
the DT the arg0 OK
parents NNS parents arg0 OK
who WP who arg0 OK
raised VBD raised arg2 OK
the DT the arg1 OK
children NNS children arg1 OK
or CC or arg2 OK
had VBD had arg2 OK
them PRP them arg1 OK

so UH ^ ^ filler
when WRB when argM_tmp OK
they PRP they argM_tmp OK
develop VBP develop argM_tmp OK
or CC ^ ^ repeat
or CC or argM_tmp OK
have VBP have argM_tmp OK
their PRP their argM_tmp OK
families NNS families argM_tmp OK
it ADVP-TMP- 1 ^ ^ repeat
um BES ^ ^ filler
it UH it arg1 OK
's PRP ^ ^ repeat
's PRP 's predicate OK
really BES really arg2 OK
sad RB sad arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
almost RB almost arg2 OK
like IN like arg2 OK
they PRP they arg0 OK
need VBP need arg2 OK
attention NN attention arg1 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
really RB ^ ^ false_start
they PRP they arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
any DT any arg1 OK
better RBR better arg1 OK

so UH ^ ^ filler
there EX there ^ OK
's BES 're predicate false_start
generations NNS generations arg0 OK
there SBAR-2 there argM_loc OK
that RB that arg0 OK
um WDT ^ ^ filler
do UH do arg1 OK
n't VBP n't argM_neg OK
have RB have arg1 OK
the VB the arg1 OK
benefit DT benefit arg1 OK
of NN of arg1 OK
what IN what arg1 OK
some WP some arg0 OK
of DT of arg0 OK
us IN us arg0 OK
had PRP had arg1 OK
with VBD with argM_mnr OK
good IN good argM_mnr OK
parents JJ parents argM_mnr OK
and NNS and argM_mnr OK
grounding CC grounding argM_mnr OK

because IN ^ ^ false_start
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
people NNS people ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
then RB ^ ^ false_start
maybe RB maybe argM_adverb OK
their PRP their arg0 OK
jobs NNS jobs arg0 OK
make VBP make predicate OK
them PRP them arg0 OK
have VB have arg1 OK
a DT a arg1 OK
longer JJR longer arg1 OK
day NN day arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
even RB even ^ OK
the DT the ^ OK
closet NN closest ^ false_start
families NNS families ^ OK
with IN with ^ OK
their PRP their ^ OK
schedules NNS schedules ^ OK
whether IN whether ^ OK
it PRP it ^ OK
's BES 's ^ OK
their PRP their ^ OK
jobs NNS jobs ^ OK
or CC or ^ OK
other JJ other ^ OK
friends NNS friends ^ OK
or CC or ^ OK
second JJ second ^ OK
jobs NNS jobs ^ OK

or CC ^ arg0 repeat
or CC ^ ^ false_start
just RB ^ ^ false_start
um UH ^ ^ filler
it PRP it arg1 OK
's SBAR-1 's predicate OK
hard BES hard arg2 OK
for JJ for arg2 OK
uh IN ^ ^ filler
cousin UH cousins ^ false_start
cousin UH ^ arg0 false_start
aunt NN and ^ false_start
aunt NN aunts arg0 false_start
to NN to arg2 OK
have TO have arg2 OK
those VB those arg1 OK
occasions DT occasions arg1 OK
and NNS and arg1 OK
get-togethers CC get-togethers arg1 OK

i PRP i arg0 OK
know VBP know predicate OK
my PRP ^ ^ false_start
aunt NN ^ ^ false_start
when WRB ^ ^ false_start
our PRP ^ ^ false_start
family NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
as IN as arg1 OK
we PRP we arg1 OK
age VBP aged arg1 false_start
um UH ^ ^ filler
one CD one arg0 OK
of IN of arg0 OK
our PRP our arg0 OK
older JJR older arg0 OK
aunts NNS aunts arg0 OK
made VBD made arg1 OK
um UH ^ ^ filler
a DT a arg1 OK
big JJ big arg1 OK
point NN point arg1 OK
to TO to arg1 OK
gather VB gather arg1 OK
up RP up argM_dir OK
like UH ^ ^ filler
once RB once argM_tmp OK
a DT a argM_tmp OK
week NN week argM_tmp OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT that arg1 OK
kind RB kind ^ OK
of RB of ^ OK
goes VBZ goes predicate OK
along IN along ^ OK
with IN with ^ OK
the DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
as RB ^ ^ repeat
eh UH ^ ^ filler
as RB as ^ OK
long RB long ^ OK
as IN as ^ OK
in IN in ^ OK
the DT the ^ OK
end NN end ^ OK
it PRP it ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
hurt VB hurt ^ OK
anybody NN anybody ^ OK

and CC ^ ^ repeat
then RB ^ ^ repeat
and CC ^ ^ false_start
then RB then ^ OK
again RB again ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
sometimes RB sometimes argM_tmp OK
lying VBG lying arg1 OK
is VBZ is predicate OK
n't RB n't argM_neg OK
really RB really arg2 OK
lying VBG lying arg2 OK

all DT all ^ OK
in IN in ^ OK
all DT all ^ OK
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
would MD would arg1 OK
have VB have arg1 OK
to TO to arg1 OK
say VB say arg1 OK
it PRP it arg0 OK
depends VBZ depends arg1 OK
on IN on arg1 OK
the DT the arg1 OK
situation NN situation arg1 OK

then RB ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
then RB then ^ OK
again RB again ^ OK
um UH ^ ^ filler
and CC ^ ^ false_start
the- RB ^ ^ false_start
uh UH ^ ^ filler
aga- RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
all RB all ^ OK
based VBN based ^ OK
on IN on ^ OK
who WP ^ ^ repeat
who WP who ^ OK
knows VBZ knows ^ OK

um UH ^ ^ filler
n- RB ^ ^ repeat
not RB ^ ^ repeat
not RB not ^ OK
to TO ^ ^ repeat
to TO to ^ OK
make VB ^ ^ repeat
make VB make ^ OK
it PRP it ^ OK
sound VB sound ^ OK
more RBR more ^ OK
illegal JJ illegal ^ OK
than IN than ^ OK
it PRP it ^ OK
really RB really ^ OK
is VBZ is ^ OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
defending VBG defending ^ OK
somebody NN somebody ^ OK
and CC and ^ OK
um UH ^ ^ filler
they PRP they ^ OK
asked VBD asked ^ OK
you PRP you ^ OK
to TO to ^ OK
bend VB bend ^ OK
the DT the ^ OK
truth NN truth ^ OK
for IN for ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN ^ ^ repeat
them PRP them ^ OK
their PRP ^ ^ repeat
own JJ ^ ^ repeat
good JJ ^ ^ repeat
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
you PRP you ^ OK
and CC and ^ OK
nobody NN nobody ^ OK
else RB else ^ OK
knows VBZ knows ^ OK
about IN about ^ OK
it PRP it ^ OK
or CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
as RB ^ ^ false_start
far RB ^ ^ false_start
as IN ^ ^ false_start
eh UH ^ ^ filler

but CC ^ ^ false_start
then RB then ^ OK
again RB again ^ OK
we PRP we arg0 OK
're VBP 're ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
keying VBG keying arg1 OK
a DT a arg1 OK
car NN car arg1 OK
rather RB rather ^ OK
than IN than ^ OK
uh UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
like UH ^ ^ filler
dealing VBG dealing predicate OK
drugs NNS drugs arg1 OK
for IN for ^ OK
your PRP your ^ OK
brother NN brother ^ OK
who WP who arg1 OK
's BES 's predicate OK
sickly RB sickly arg2 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

not RB ^ ^ repeat
no UH ^ ^ repeat
no UH ^ ^ repeat
not RB not ^ OK
that IN that ^ OK
i PRP i arg1 OK
did VBD did predicate OK
that DT that arg2 OK

it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK

and CC ^ ^ false_start
then RB then ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
putting VBG putting predicate OK
yourself PRP yourself arg1 OK
in IN ^ ^ repeat
in IN in argM_loc OK
you PRP ^ ^ filler
know VBP ^ ^ filler
jeopardy NN jeopardy argM_loc OK
there RB there argM_loc OK

i PRP ^ ^ repeat
i PRP i ^ OK
just RB ^ ^ repeat
just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
whether IN whether ^ OK
they PRP they ^ OK
're VBP 're ^ OK
working VBG working ^ OK
for IN for ^ OK
me PRP me ^ OK
at RB at ^ OK
all RB all ^ OK

uh UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ filler
know VBP ^ ^ filler
especially RB especially ^ OK
that IN that ^ OK
right RB right ^ OK
n- RB ^ ^ repeat
now RB now ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like UH ^ ^ filler
only RB ^ ^ false_start
f- XX ^ ^ false_start
why WRB ^ ^ false_start
is VBZ ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
money NN money ^ OK
for IN for ^ OK
all PDT all ^ OK
that DT that ^ OK
sitting VBG sitting ^ OK
down RB down ^ OK
and CC and ^ OK
fixing VBG fixing ^ OK
food NN food ^ OK

like UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
fast JJ fast ^ OK
stuff NN stuff ^ OK
is VBZ is ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
cheeseburger NN cheeseburger ^ OK
ninety-nine CD ninety-nine ^ OK
cent NN cent ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
wh- WP ^ ^ repeat
what WP what ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
s- VBG s- ^ OK

go VBP ^ ^ repeat
go VBP ^ ^ repeat
go VBP go ^ OK

but CC ^ ^ repeat
see UH ^ ^ repeat
they PRP ^ ^ repeat
but CC ^ ^ false_start
see UH ^ ^ filler
they PRP they ^ OK
they PRP 're ^ false_start
not RB not ^ OK
because IN because ^ OK
that DT that ^ OK
's BES 's ^ OK
how WRB how ^ OK
america NNP america ^ OK
make VBP make ^ OK
their PRP their ^ OK
money NN money ^ OK

now UH ^ ^ filler
if IN if ^ OK
they PRP they ^ OK
made VBD made ^ OK
uh UH ^ ^ filler
a DT a ^ OK
dol- NN ^ ^ false_start
ninety-nine CD ninety-nine ^ OK
cent NN cent ^ OK
veggie NN veggie ^ OK
burger NN burger ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
be VB ^ ^ false_start
like RP say ^ false_start
okay UH okay ^ OK

they PRP they ^ OK
be VB 're ^ false_start
just RB just ^ OK
selling VBG selling ^ OK
a DT a ^ OK
hamburger NN hamburger ^ OK
dripped VBN dripped ^ OK
with IN with ^ OK
um UH ^ ^ filler
flame NN flame ^ OK
broiled VBN broiled ^ OK
and CC and ^ OK
all PDT all ^ OK
this DT this ^ OK
uh UH ^ ^ filler
grease NN grease ^ OK
and CC ^ ^ repeat
and CC and ^ OK
cheese NN cheese ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

or CC ^ ^ false_start
if IN if ^ OK
i PRP i ^ OK
c- XX c- ^ OK

for IN for ^ OK
one CD one ^ OK
grapefruit NN grapefruit ^ OK
because IN because ^ OK
i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
been VBN been ^ OK
going VBG going ^ OK
to IN to ^ OK
the DT the ^ OK
gym NN gym ^ OK

i PRP i ^ OK
go VBP go ^ OK
right RB right ^ OK
to IN to ^ OK
wendy NNP wendy ^ OK
's POS 's ^ OK
and CC and ^ OK
get VB get ^ OK
me PRP ^ ^ false_start
a DT ^ ^ repeat
a DT a ^ OK
ninety-nine JJ ninety-nine ^ OK
cent NN cent ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
a NP-1 ^ ^ false_start
double DT double ^ OK
cheeseburger JJ cheeseburger ^ OK
or NN ^ ^ false_start
something CC ^ ^ false_start

and CC ^ ^ false_start
i PRP i ^ OK
i PRP ^ ^ false_start
be VB 'll ^ false_start
be VB be ^ OK
hungry JJ hungry ^ OK

but CC ^ ^ false_start
um UH um ^ OK

so UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
like UH ^ ^ filler

like UH ^ ^ filler
in IN ^ ^ repeat
like UH ^ ^ filler
in IN in ^ OK
today NN today ^ OK
's POS 's ^ OK
society NN society ^ OK
anyway RB ^ ^ false_start
the DT ^ ^ repeat
the DT the ^ OK
biggest JJS ^ ^ repeat
biggest JJS biggest ^ OK
thing NN ^ ^ repeat
fad NN fad ^ OK
is VBZ is ^ OK
like UH ^ ^ filler
all PDT all ^ OK
these DT these ^ OK
diets NNS diets ^ OK

even RB even ^ OK
looking VBG looking ^ OK
for IN for ^ OK
something NN something ^ OK
to TO to ^ OK
do VB do ^ OK
as IN ^ ^ repeat
as IN as ^ OK
a DT ^ ^ repeat
a DT a ^ OK
like UH ^ ^ filler
real RB real ^ OK
quick JJ quick ^ OK
diet NN diet ^ false_start
because IN because ^ OK
we PRP we ^ OK
want VBP want ^ OK
to TO to ^ OK
lose VB lose ^ OK
that DT that ^ OK
weight NN weight ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
actually UH ^ ^ filler
you PRP you ^ OK
know VBP know ^ OK
do VB what ^ false_start
we PRP ^ ^ repeat
we PRP we ^ OK
c- MD ^ ^ repeat
could MD could ^ OK
do VB do ^ OK

because IN ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
looking VBG looking ^ OK
for IN for ^ OK
something NN something ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
looking VBG looking ^ OK
to TO to ^ OK
work VB work ^ OK
with IN with ^ OK
me PRP me ^ OK
while IN while ^ OK
i PRP i ^ OK
'm VBP ^ ^ false_start
going VBG go ^ false_start
to IN to ^ OK
the DT the ^ OK
gym NN gym ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
as IN as ^ OK
a DT an ^ false_start
aid NN aid ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
to TO ^ ^ false_start
help VB ^ ^ false_start
me PRP ^ ^ false_start

you UNK ^ ^ filler
know UNK ^ ^ filler
what UNK ^ ^ filler
i UNK ^ ^ filler
mean UNK ^ ^ filler
just UNK just ^ OK
being UNK being ^ OK

i PRP i ^ OK
learned VBD learned ^ OK
about IN about ^ OK
that DT that ^ OK
because IN because ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
was VBD was ^ OK
like UH ^ ^ filler
the DT the ^ OK
fad NN fad ^ OK
d- NN ^ ^ repeat
diet NN diet ^ OK
queen NN queen ^ OK

like UH ^ ^ filler
oh UH ^ ^ filler
this DT this ^ OK
diet NN diet ^ OK
come VB came ^ false_start
out RB out ^ OK
out RB ^ ^ false_start
hollywood NNP of ^ false_start
oh UH ^ ^ filler
the DT the ^ OK
hollywood NNP hollywood ^ OK
diet NN diet ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
to TO to ^ OK
try VB ^ ^ repeat
try VB try ^ OK
this DT ^ ^ repeat
this DT this ^ OK
one NN one ^ OK

but CC ^ ^ false_start
nah UH ^ ^ filler
i PRP i ^ OK
grew VBD grew ^ OK
out IN out ^ OK
of IN of ^ OK
that DT that ^ OK
already RB already ^ OK
because IN because ^ OK
it PRP it ^ OK
affects VBZ affects ^ OK
your PRP your ^ OK
body NN body ^ OK
too RB too ^ OK
much RB much ^ OK

you PRP ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
think VB ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
at IN ^ ^ false_start
first RB ^ ^ false_start
my PRP my ^ OK
first JJ first ^ OK
call NN call ^ OK
was VBD was ^ OK
last JJ last ^ OK
night NN night ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ filler
the DT ^ ^ false_start
unexpec- JJ ^ ^ false_start
like UH ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK
it PRP it ^ OK
was VBD was ^ OK

i PRP i ^ OK
thought VBD thought ^ OK
maybe RB maybe ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
g- XX ^ ^ false_start
they PRP they ^ OK
prompt JJ prompt ^ OK

and CC ^ ^ false_start
this DT this ^ OK
guy NN guy ^ OK
came VBD came ^ OK
on IN on ^ OK
the DT the ^ OK
phone NN phone ^ OK
and CC and ^ OK
was VBD ^ ^ false_start
like RP asked ^ false_start
will MD will ^ OK
you PRP you ^ OK
talk VB talk ^ OK
about IN about ^ OK
this DT this ^ OK
subject NN subject ^ OK
here RB here ^ OK

i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
okay UH okay ^ OK

i PRP i ^ OK
was VBD ^ ^ false_start
like RP asked ^ false_start
um UH ^ ^ filler
how WRB how ^ OK
how WRB ^ ^ false_start
you PRP are ^ false_start
you PRP you ^ OK
doing VBG doing ^ OK

i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
oh UH ^ ^ filler
gosh UH ^ ^ filler
i PRP i ^ OK
feel VBP feel ^ OK
so RB so ^ OK
like UH ^ ^ filler
stupid JJ stupid ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
was VBD ^ ^ false_start
s- XX ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
care VB care ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
need VBP ^ ^ repeat
need VBP need ^ OK
that DT ^ ^ repeat
that DT that ^ OK
for IN for ^ OK
my PRP my ^ OK
phone NN phone ^ OK
bill NN bill ^ OK

i PRP ^ ^ false_start
h- VBP ^ ^ false_start
i PRP i ^ OK
spent VBD spent ^ OK
up IN up ^ OK
to IN to ^ OK
a DT a ^ OK
hundred CD hundred ^ OK
and CC and ^ OK
fifty CD fifty ^ OK
dollars NNS dollars ^ OK
bill NN on ^ false_start
my PRP my ^ false_start
phone NN phone ^ false_start
bill NN bill ^ false_start

but CC ^ ^ false_start
you PRP you ^ OK
know VBP know ^ OK
what WP what ^ OK
i- PRP i- ^ OK

but CC ^ ^ false_start
the DT the ^ OK
thing NN thing ^ OK
that WDT ^ ^ false_start
also RB ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
bad JJ bad ^ OK
that WDT that ^ OK
they PRP they ^ OK
just RB just ^ OK
com- VBP ^ ^ false_start
keep VBP keep ^ OK
conveying VBG conveying ^ OK
is NP-1 is ^ OK
that VBZ that ^ OK
now IN now ^ OK
they RB they ^ OK
have PRP have ^ OK
like VBP ^ ^ filler
the UH ^ ^ false_start
n- DT ^ ^ false_start
like JJ ^ ^ filler
the UH ^ ^ false_start
low DT ^ ^ false_start
calorie JJ ^ ^ false_start
the NN ^ ^ false_start
i DT ^ ^ filler
mean PRP ^ ^ filler
the VBP the ^ OK
low DT low ^ OK
carb JJ carb ^ OK
diet NN diet ^ OK

it PRP ^ ^ repeat
it PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's S-1 's ^ OK
^ ^ ^ ^ repeat
good BES good ^ OK
to TO ^ ^ repeat
to JJ to ^ OK
cut TO cut ^ OK
the VB ^ ^ repeat
the DT the ^ OK
carbs DT carbs ^ OK
out NNS out ^ OK

like UNK ^ ^ filler
you UNK ^ ^ repeat
you UNK ^ ^ repeat
ha- UNK ^ ^ repeat
you UNK ^ ^ false_start
have UNK ^ ^ false_start
to UNK ^ ^ false_start
have UNK ^ ^ false_start
everything UNK everything ^ OK
that UNK that ^ OK
you UNK you ^ OK
make UNK make ^ OK
it UNK it ^ OK
is UNK is ^ OK
what UNK what ^ OK
you UNK you ^ OK
ha- UNK just ^ false_start
ha- UNK ^ ^ false_start
cut UNK cut ^ OK
it UNK ^ ^ false_start
out UNK out ^ OK

oh UNK ^ ^ filler
what UNK ^ ^ false_start
i UNK ^ ^ false_start
was UNK ^ ^ false_start
saying UNK ^ ^ false_start
is UNK ^ ^ false_start
like UNK ^ ^ filler
the UNK ^ ^ false_start
carbs UNK ^ ^ false_start
you UNK you ^ OK
know UNK know ^ OK
how UNK how ^ OK
they UNK they ^ OK
say UNK say ^ OK
like UNK ^ ^ filler
they UNK they ^ OK
have UNK have ^ OK
the UNK the ^ OK
diets UNK diets ^ OK
now UNK now ^ OK
for UNK for ^ OK
like UNK ^ ^ filler
low UNK low ^ OK
carbs UNK carbs ^ OK
or UNK or ^ OK
no UNK no ^ OK
carbs UNK carbs ^ OK
and UNK ^ ^ repeat
and UNK and ^ OK
protein UNK protein ^ OK
everything UNK ^ ^ false_start

like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
you PRP you ^ OK
should MD should ^ OK
cut VB cut ^ OK
carbs NNS carbs ^ OK
out RP out ^ OK
period RB period ^ OK

i PRP i ^ OK
think VBP think ^ OK
you PRP you ^ OK
should MD should ^ OK
have VB have ^ OK
like UH ^ ^ filler
y- PRP ^ ^ repeat
y- PRP ^ ^ repeat
y- PRP ^ ^ repeat
your PRP your ^ OK
amount NN amount ^ OK
of IN of ^ OK
carbs NNS carbs ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
good JJ good ^ OK

april NNP april ^ OK
fool NNP fool ^ OK
's POS 's ^ OK
huh UH ^ ^ filler

well UH ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
only JJ only ^ OK
time NN time ^ OK
me PRP me ^ OK
and CC and ^ OK
my PRP my ^ OK
entire JJ entire ^ OK
family NN family ^ OK
ever RB ever ^ OK
get VBP get ^ OK
together RB together ^ OK

for IN ^ ^ false_start
all DT all ^ OK
of IN of ^ OK
us PRP us ^ OK
m- XX ^ ^ false_start
citizens NNS citizens ^ OK
that WDT that ^ OK
are VBP are ^ OK
not RB not ^ OK
politicians NNS politicians ^ OK
can MD can ^ OK
take VB take ^ OK
the DT the ^ OK
seat NN seat ^ OK
of IN of ^ OK
a DT a ^ OK
politician NN politician ^ OK
of IN ^ ^ repeat
of IN of ^ OK
a DT ^ ^ repeat
a DT a ^ OK
se- NN ^ ^ repeat
senator NN senator ^ OK
or CC or ^ OK
a DT a ^ OK
house NN house ^ OK
rep NN rep ^ OK
for IN for ^ OK
the DT the ^ OK
day NN day ^ OK

and CC ^ ^ false_start
actually RB actually ^ OK
say VB say ^ OK
yea UH yea ^ OK
or CC or ^ OK
nay UH nay ^ OK
instead IN instead ^ OK
of IN of ^ OK
letting VBG letting ^ OK
them PRP them ^ OK
make VB make ^ OK
the DT the ^ OK
decisions NNS decisions ^ OK
for IN for ^ OK
us PRP us ^ OK

and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK

well UH ^ ^ false_start
one CD one ^ OK
thing NN thing ^ OK
thing NN that ^ false_start
thing NN is ^ false_start
bad RB bad ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
a DT a ^ OK
good JJ good ^ OK
researcher NN researcher ^ OK
and CC and ^ OK
you PRP you ^ OK
know VBP know ^ OK
what WP what ^ OK
the DT the ^ OK
bills NNS bills ^ OK
are VBP are ^ OK
they NP-PRD-1 they ^ OK
're PRP 're ^ OK
already VBP already ^ OK
out RB out ^ OK
there RB there ^ OK
on RB on ^ OK
the IN the ^ OK
table DT table ^ OK
and NN and ^ OK
you CC you ^ OK
've PRP 've ^ OK
researched VBP researched ^ OK
them VBN them ^ OK
before PRP before ^ OK
that IN that ^ OK
day DT day ^ OK
comes NN comes ^ OK
then VBZ then ^ OK
you RB you ^ OK
know PRP know ^ OK
what VBP what ^ OK
you WP you ^ OK
're PRP 're ^ OK
heading VBP heading ^ OK
for VBG for ^ OK

and CC ^ ^ false_start
instead RB instead ^ OK
of IN of ^ OK
them PRP them ^ OK
bickering VBG bickering ^ OK
back RB back ^ OK
and CC and ^ OK
forth RB forth ^ OK
and CC and ^ OK
everything NN everything ^ OK
else RB else ^ OK
you PRP you ^ OK
can MD can ^ OK
actually RB actually ^ OK
get VB get ^ OK
people NNS people ^ OK
's POS 's ^ OK
viewpoints NNS viewpoints ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
and CC and ^ OK
just RB just ^ OK
write VBP write ^ OK
it PRP it ^ OK
all DT all ^ OK
down RB down ^ OK

and CC ^ ^ false_start
then RB then ^ OK
whenever WRB whenever ^ OK
the DT the ^ OK
l- NN ^ ^ repeat
legislation NN legislation ^ OK
the DT the ^ OK
senators NNS senators ^ OK
all DT all ^ OK
come VBP come ^ OK
back RB back ^ OK
and CC and ^ OK
go VBP go ^ OK
okay UH okay ^ OK

we PRP we ^ OK
can MD can ^ OK
say VB say ^ OK
yea UH yea ^ OK
or CC or ^ OK
nay UH nay ^ OK

a- XX ^ ^ false_start
seattle NNP seattle ^ OK
's HVS 's ^ OK
really RB really ^ OK
um UH ^ ^ filler
come VBN come ^ OK
in IN in ^ OK
its PRP its ^ OK
own JJ own ^ OK
over IN over ^ OK
the DT the ^ OK
last JJ last ^ OK
ten CD ten ^ OK
or CC or ^ OK
fifteen CD fifteen ^ OK
years NNS years ^ OK
in IN in ^ OK
that DT the ^ false_start
regard NN regard ^ OK
arts NNS of ^ false_start
the DT ^ ^ repeat
the DT the ^ OK
arts NNS arts ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
else RB ^ ^ false_start

i- PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
great JJ great ^ OK

um UH ^ ^ filler
let VB let ^ OK
's PRP 's ^ OK
see VB see ^ OK
what WP what ^ OK
would MD would ^ OK
i PRP i ^ OK
do VB do ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
you PRP you ^ OK
're VBP 're ^ OK
doing VBG doing ^ OK
better RBR better ^ OK
than IN than ^ OK
iowa NNP iowa ^ OK

i PRP ^ ^ false_start
like VBP ^ ^ false_start
to TO ^ ^ false_start
go VB ^ ^ false_start
a XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
j- XX ^ ^ false_start
open VB open ^ OK
up RP up ^ OK
a DT a ^ OK
bookstore NN bookstore ^ OK
like IN like ^ OK
powell NNP powell ^ OK
's POS 's ^ OK

i- IN ^ ^ repeat
if IN if ^ OK
money NN money ^ OK
's BES 's ^ OK
no DT no ^ OK
object NN object ^ OK
like IN like ^ OK
they PRP they ^ OK
said VBD said ^ OK
which RB which ^ OK
is WDT is ^ OK
pretty VBZ pretty ^ OK
uh RB ^ ^ filler
fantastical UH fantastical ^ OK
then S then ^ false_start

but CC but ^ OK
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
would MD ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
n- XX ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
just RB ^ ^ repeat
just RB just ^ OK
be VB ^ ^ repeat
worry VBP worry ^ OK
about IN about ^ OK
making VBG making ^ OK
the DT the ^ OK
payroll NN payroll ^ OK
to IN to ^ OK
the DT the ^ OK
other JJ other ^ OK
people NNS people ^ OK
or CC ^ ^ repeat
or CC or ^ OK
getting VBG getting ^ OK
the DT the ^ OK
cash NN cash ^ OK
flow NN flow ^ OK
to TO ^ ^ repeat
uh UH ^ ^ filler
to TO to ^ OK
keep VB ^ ^ repeat
keep VB keep ^ OK
the DT ^ ^ repeat
the DT the ^ OK
business NN business ^ OK
going VBG going ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
probably RB probably ^ OK
would MD would ^ OK
be VB be ^ OK
general JJ general ^ OK

um UH ^ ^ filler
n- XX ^ ^ false_start
n- XX ^ ^ false_start
uh UH ^ ^ filler
definitely UH definitely ^ OK
some DT some ^ OK
best JJS best ^ OK
sellers NNS sellers ^ OK
to TO to ^ OK
get VB get ^ OK
the DT the ^ OK
traffic NN traffic ^ OK
in RB in ^ OK

um UH ^ ^ filler
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ false_start
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
i- XX ^ ^ false_start
oh UH ^ ^ filler
maybe RB maybe ^ OK
some DT some ^ OK
a DT ^ ^ false_start
e- JJ ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
big JJ big ^ OK
eclectic JJ eclectic ^ OK
corner NN corner ^ OK
or CC or ^ OK
something NN something ^ OK

but CC but ^ OK
um UH ^ ^ filler
j- RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
something NN something ^ OK
to TO to ^ OK
generate VB generate ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT some ^ OK
people NNS people ^ OK
coming VBG coming ^ OK
in RB in ^ OK
and CC ^ ^ repeat
and CC and ^ OK
maybe RB maybe ^ OK
like UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
have VBP ^ ^ repeat
have VBP have ^ OK
like UH ^ ^ filler
a DT a ^ OK
little JJ little ^ OK
coffee NN coffee ^ OK
area NN area ^ OK
in IN in ^ OK
there RB there ^ OK
or CC ^ ^ false_start
whatever NN ^ ^ false_start

de- XX de- ^ OK
oh UH oh ^ OK

i PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i ^ OK
think VBP ^ ^ repeat
think VBP think ^ OK
those DT those ^ OK
are VBP are ^ OK
becoming VBG becoming ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN like ^ OK
telephones NNS telephones ^ OK
now NAC-1 now ^ OK
you RB ^ ^ filler
know PRP ^ ^ filler
and VBP and ^ OK
bathrooms CC bathrooms ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP you ^ OK
h- VBP ^ ^ repeat
have VBP have ^ OK
to TO to ^ OK
have VB have ^ OK
one CD one ^ OK

you PRP ^ ^ false_start
have VBP ^ ^ false_start
to TO ^ ^ false_start
have VB ^ ^ false_start
a DT ^ ^ false_start
uh UH ^ ^ filler
especially RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
two CD two ^ OK
thousand CD thousand ^ OK
two CD two ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
just RB just ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
believe VB believe ^ OK
that DT that ^ OK

tw- XX ^ ^ false_start
ten CD ten ^ OK
years NNS years ^ OK
ago RB ago ^ OK
nobody NN nobody ^ OK
knew VBD knew ^ OK
about IN about ^ OK
the DT the ^ OK
internet NN internet ^ OK

just RB ^ ^ repeat
just RB just ^ OK
am- JJ ^ ^ repeat
amazing JJ amazing ^ OK
and CC and ^ OK
uh UH ^ ^ filler
what WP what ^ OK
's BES 's ^ OK
out IN out ^ OK
there RB there ^ OK

it UNK it ^ OK
would UNK would ^ OK
have UNK have ^ OK
to UNK to ^ OK
be UNK be ^ OK
off UNK off ^ OK
someplace UNK someplace ^ OK
else UNK else ^ OK
because UNK because ^ OK
um UNK ^ ^ filler
uh UNK ^ ^ filler
d- UNK ^ ^ repeat
did UNK did ^ OK
you UNK you ^ OK
ever UNK ever ^ OK
go UNK go ^ OK
into UNK into ^ OK
a UNK a ^ OK
room UNK room ^ OK
like UNK ^ ^ filler
in UNK in ^ OK
a UNK a ^ OK
library UNK library ^ OK
where UNK where ^ OK
they UNK they ^ OK
have UNK have ^ OK
computers UNK computers ^ OK
have UNK ^ ^ false_start
can UNK and ^ false_start
all UNK all ^ OK
you UNK you ^ OK
can UNK can ^ OK
hear UNK hear ^ OK
is UNK is ^ OK
like UNK like ^ OK
the UNK the ^ OK
clacking UNK clacking ^ OK
of UNK of ^ OK
the UNK ^ ^ repeat
the UNK the ^ OK
keyb- UNK ^ ^ repeat
keys UNK keys ^ OK

maybe RB maybe ^ OK
a DT a ^ OK
little RB ^ ^ repeat
little JJ ^ ^ repeat
little JJ little ^ OK
panels NNS panels ^ OK
or CC or ^ OK
something NN something ^ OK

i PRP i ^ OK
have VBP have ^ OK
n't RB n't ^ OK
heard VBN heard ^ OK
that DT that ^ OK
word NN word ^ OK
in IN ^ ^ repeat
in IN in ^ OK
ages NNS ages ^ OK

but CC but ^ OK
um UH ^ ^ filler
like UH ^ ^ filler
during IN during ^ OK
the DT the ^ OK
summer NN summer ^ OK
um UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
little JJ little ^ OK
theaters NNS ^ ^ repeat
th- NNS ^ ^ repeat
theaters NNS theaters ^ OK
up IN up ^ OK
and CC and ^ OK
down IN down ^ OK
the DT the ^ OK
coast NN coast ^ OK
here RB here ^ OK
uh UH ^ ^ filler
in IN in ^ OK
massachusetts NNP massachusetts ^ OK

that DT ^ ^ false_start
uh UH ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX ^ ^ false_start
's BES ^ ^ false_start
some DT ^ ^ false_start
situat- NN ^ ^ false_start
n- XX ^ ^ false_start
up IN up ^ OK
and CC and ^ OK
down IN down ^ OK
the DT the ^ OK
coast NN coast ^ OK
there EX there ^ OK
's BES 's ^ OK
all PDT all ^ OK
these DT these ^ OK
little JJ little ^ OK
tiny JJ tiny ^ OK
playhouses NNS playhouses ^ OK

boston NNP ^ ^ repeat
uh UH ^ ^ filler
boston NNP boston ^ OK
ballet NNP ballet ^ OK
does VBZ does ^ OK
the DT the ^ OK
nutcracker NNP nutcracker ^ OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like UH ^ ^ filler
ye- XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
think VBP ^ ^ false_start
i PRP i ^ OK
swear VB swear ^ OK
to IN to ^ OK
god NNP god ^ OK
that IN that ^ OK
they PRP they ^ OK
get VBP get ^ OK
like UH ^ ^ filler
half PDT half ^ OK
their PRP their ^ OK
money NN money ^ OK
for IN for ^ OK
the DT the ^ OK
year NN year ^ OK
to TO to ^ OK
do VB do ^ OK
all PDT all ^ OK
the DT the ^ OK
other JJ other ^ OK
stuff NN stuff ^ OK
from IN from ^ OK
just RB just ^ OK
doing VBG doing ^ OK
the DT the ^ OK
nutcracker NNP nutcracker ^ OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
on IN ^ ^ repeat
in IN in ^ OK
the DT ^ ^ repeat
the DT the ^ OK
newspaper NN newspaper ^ OK

a- XX ^ ^ false_start
do VBP do ^ OK
you PRP you ^ OK
see VB see ^ OK
the DT ^ ^ repeat
uh UH ^ ^ filler
the DT the ^ OK
future NN future ^ OK
of IN of ^ OK
um UH ^ ^ filler
performance NN performance ^ OK
art NN art ^ OK
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
in IN ^ ^ repeat
in IN in ^ OK
the DT ^ ^ repeat
the DT the ^ OK
t. NN t. ^ OK
v. NN v. ^ OK
internet NNP internet ^ OK
age NN age ^ OK

do VBP do ^ OK
you PRP you ^ OK
see VBP see ^ OK
that DT that ^ OK
declining VBG declining ^ OK

so UH ^ ^ false_start
oh UH oh ^ OK
no UH no ^ OK

it PRP it ^ OK
had VBD had ^ OK
n't RB n't ^ OK
really RB ^ ^ false_start

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
m- NN ^ ^ repeat
media NN media ^ OK

like UH ^ ^ filler
right RB right argM_tmp OK
after IN after argM_tmp OK
nine CD nine argM_tmp OK
eleven CD eleven argM_tmp OK
happened VBD ^ ^ false_start
a DT ^ ^ repeat
of IN ^ ^ repeat
or UH ^ ^ repeat
my PRP my arg0 OK
friend NN ^ ^ repeat
friend NN friend arg0 OK
's POS 's arg0 OK
parents NNS parents arg0 OK
owned VBD owned predicate OK
a DT a arg1 OK
uh UH ^ ^ filler
deli NN deli arg1 OK

it PRP it ^ OK
seems VBZ seems ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
people NNS people ^ OK
uh UH ^ ^ filler
do VBP do ^ OK
n't RB n't ^ OK
really RB ^ ^ false_start

and CC ^ ^ false_start
like UH ^ ^ filler
they PRP they arg0 OK
searched VBD searched predicate OK
me PRP me arg1 OK
three CD three ^ OK
times NNS times ^ OK
like UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
for IN for ^ OK
d- XX ^ ^ repeat
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
looking VBG looking predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
scummy JJ scummy arg2 OK

but CC ^ ^ false_start
like UH ^ ^ filler
it PRP it ^ OK
just SBAR-1 ^ ^ false_start
seemed RB seems predicate false_start
kind VBD ^ ^ false_start
of RB ^ ^ false_start
bizarre RB bizarre arg2 OK
that JJ that arg1 OK
like IN ^ ^ filler
i UH ^ ^ false_start
do PRP ^ ^ false_start
n't VBP ^ ^ false_start
know RB ^ ^ false_start
really VB ^ ^ false_start
appearance RB appearance arg1 OK
matters NN matters arg1 OK
now VBZ now argM_tmp OK

i PRP i ^ OK

stock NN the ^ false_start
uh UH ^ ^ filler
stock NN stock ^ OK
market NN market ^ OK
really RB really ^ OK
did VBD did ^ OK
n't RB n't ^ OK
affect VB affect ^ OK
me PRP me ^ OK
at RB at ^ OK
all RB all ^ OK

i PRP ^ ^ false_start
'd MD ^ ^ false_start
m- XX ^ ^ false_start
i PRP i ^ OK
stopped VBD stopped ^ OK
investing VBG investing ^ OK
years NNS years ^ OK
ago RB ago ^ OK
personally RB personally ^ OK

we PRP ^ ^ repeat
we PRP we ^ OK
use VBP use ^ OK
m. NNP m. ^ OK
c. NNP c. ^ OK
i. NNP i. ^ OK

well UH ^ ^ false_start
see UH ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
thing NN thing ^ OK
that WDT that ^ OK
really RB really ^ OK
boggles VBZ boggles ^ OK
my PRP my ^ OK
mind NN mind ^ OK

an- XX ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
now RB now ^ OK
we PRP we ^ OK
're VBP 're ^ OK
pushing VBG pushing ^ OK
ten CD ten ^ OK
thousand CD thousand ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
have VBP have ^ OK
people NNS people ^ OK
like IN like ^ OK
bill NNP bill ^ OK
gates NNP gates ^ OK
get VBP getting ^ false_start
ninety-nine CD ninety-nine ^ OK
point NN point ^ OK
five CD five ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK
for IN for ^ OK
the DT the ^ OK
stock NN stock ^ OK
dividend NN dividend ^ OK
and CC and ^ OK
everyone NN everyone ^ OK
else RB else ^ OK
gets VBZ gets ^ OK
you PRP you ^ OK
know VBP know ^ OK
sixteen CD sixteen ^ OK
cents NNS cents ^ OK
per IN per ^ OK
share NN share ^ OK
it ADVP-TMP- 1 it ^ OK
's PRP 's ^ OK
like BES like ^ OK
okay RP okay ^ OK

what WP ^ ^ repeat
what WP what ^ OK
's BES 's ^ OK
going VBG going ^ OK
on RB on ^ OK
here RB here ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
where WRB where ^ OK
it PRP it ^ OK
seems VBZ seems ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
the DT the ^ OK
problem NN problem ^ OK
is VBZ is ^ OK
where WRB where ^ OK
the DT the ^ OK
c. NNP c. ^ OK
e. NNP e. ^ OK
o.s NNPS o.s ^ OK
are VBP are ^ OK
getting VBG getting ^ OK
multimillion JJ multimillion ^ OK
dollar NN dollar ^ OK
salaries NNS salaries ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
like RP like ^ OK
who WP who ^ OK
has VBZ has ^ OK
the DT the ^ OK
harder JJR harder ^ OK
job NN job ^ OK

who WP who ^ OK
's HVS 's ^ OK
got VBN got ^ OK
the DT the ^ OK
harder JJR harder ^ OK
job NN job ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they ^ OK
get VBP get ^ OK
the DT the ^ OK
multimillion JJ multimillion ^ OK
dollar NN dollar ^ OK
salaries NNS salaries ^ OK

and CC ^ ^ false_start
then RB then ^ OK
they PRP they ^ OK
hire VBP hire ^ OK
all PDT all ^ OK
the DT the ^ OK
outside JJ outside ^ OK
accounting NN accounting ^ OK
firms NNS firms ^ OK
to TO to ^ OK
doctor VB doctor ^ OK
the DT the ^ OK
papers NNS papers ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
do VB do ^ OK
whatever WDT whatever ^ OK
they PRP they ^ OK
need VBP need ^ OK
to TO to ^ OK
do VB do ^ OK

then RB then ^ OK
the DT the ^ OK
government NN government ^ OK
comes VBZ comes ^ OK
along RB along ^ OK
w- IN ^ ^ repeat
with IN with ^ OK
the DT the ^ OK
regulations NNS regulations ^ OK
saying VBG saying ^ OK
oh UH ^ ^ false_start
well UH ^ ^ false_start
you PRP you ^ OK
need VBP need ^ OK
to TO to ^ OK
make VB make ^ OK
stock NN stock ^ OK
declarations NNS declarations ^ OK
and CC and ^ OK
restate VB restate ^ OK
any DT any ^ OK
earnings NNS earnings ^ OK
or CC or ^ OK
losses NNS losses ^ OK
by IN by ^ OK
the DT the ^ OK
state NN state ^ OK

we PRP we ^ OK
need VBP need ^ OK
to TO to ^ OK
restate VB restate ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
wait VB wait ^ OK
a DT a ^ OK
second NN second ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
^ ^ ^ ^ false_start
is VBZ is ^ OK
there RB there ^ OK
a DT a ^ OK
way NN way ^ OK
the DT the ^ OK
government NN government ^ OK
can MD can ^ OK
actually RB actually ^ OK
control VB control ^ OK
anything NN anything ^ OK

not RB not ^ OK
any RB any ^ OK
better JJR better ^ OK
than IN than ^ OK
what WP what ^ OK
the DT the ^ OK
government NN government ^ OK
can MD can ^ OK
um UH ^ ^ filler
even RB even ^ OK
control VB control ^ OK
itself PRP itself ^ OK

they PRP they ^ OK
're VBP 're ^ OK
there RB there ^ OK
for IN for ^ OK
decoration NN decoration ^ OK
only RB only ^ OK
because IN because ^ OK
you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
enforce VB enforce ^ OK
them PRP them ^ OK

u- XX ^ ^ filler
e- XX ^ ^ filler
and CC ^ ^ false_start
truly RB truly ^ OK
have VBP have ^ OK
big JJ big ^ OK
brother NN brother ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
other RB other ^ OK
than IN than ^ OK
that DT that ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
any DT any ^ OK
way NN way ^ OK
that WDT that ^ OK
um UH ^ ^ filler
n- XX ^ ^ repeat
any DT any ^ OK
law NN law ^ OK
can MD can ^ OK
help VB help ^ OK
anything NN anything ^ OK

so UH so ^ OK
how WRB how ^ OK
did VBD did ^ OK
bethlehem NNP bethlehem ^ OK
steel NNP steel ^ OK
get VB get ^ OK
affected VBN affected ^ OK
by IN by ^ OK
uh UH ^ ^ filler
all PDT all ^ OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the ^ OK
problems NNS problems ^ OK

did VBD did ^ OK
um UH ^ ^ filler

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
they PRP they ^ OK
they PRP ^ ^ repeat
should MD should ^ OK
should MD ^ ^ repeat
check VB check ^ OK
for IN for ^ OK
arms NNS arms ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
n't RB n't ^ OK
been VBN been ^ OK
following VBG following ^ OK
it PRP it ^ OK
exactly RB exactly ^ OK

and CC ^ ^ false_start
g- XX ^ ^ false_start
they PRP they ^ OK
have VBP have ^ OK
n't RB n't ^ OK
found VBN found ^ OK
anything NN anything ^ OK

in IN in ^ OK
general JJ general ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
in IN in ^ OK
favor NN favor ^ OK
of IN of ^ OK
uh UH ^ ^ filler
war NN war ^ OK
with IN with ^ OK
iraq NNP iraq ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
true JJ true ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
to TO to ^ OK
like UH ^ ^ filler
blow VB blow ^ OK
up RP up ^ OK
the DT the ^ OK
whole JJ whole ^ OK
country NN country ^ OK
or CC or ^ OK
to TO ^ ^ false_start
g- VB ^ ^ false_start
just RB just ^ OK
get VB ^ ^ false_start
out RB ^ ^ false_start
get VB get ^ OK
saddam NNP saddam ^ OK
out IN out ^ OK
of IN of ^ OK
there RB there ^ OK

like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
really RB really ^ OK
think VB think ^ OK
he PRP he ^ OK
's BES 's ^ OK
any DT any ^ OK
kind NN kind ^ OK
of IN of ^ OK
good JJ good ^ OK
guy NN guy ^ OK
or CC or ^ OK
any DT any ^ OK
kind NN kind ^ OK
of IN of ^ OK
good JJ good ^ OK
leader NN leader ^ OK

the DT ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
the DT the ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
like UH ^ ^ filler

but CC but ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
worse JJR worse ^ OK
if IN if ^ OK
like UH ^ ^ filler
we PRP we ^ OK
do VBP do ^ OK
stuff NN stuff ^ OK
that WDT that ^ OK
ends VBZ ends ^ OK
up RB up ^ OK
killing VBG killing ^ OK
the DT the ^ OK
very JJ very ^ OK
people NNS people ^ OK
that WDT that ^ OK
he PRP he ^ OK
's BES 's ^ OK
already RB already ^ OK
causing VBG causing ^ OK
trouble NN trouble ^ OK
for IN for ^ OK

and CC ^ ^ false_start
the DT ^ ^ repeat
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
in IN in ^ OK
the DT the ^ OK
news NN news ^ OK
that WDT that ^ OK
upset VBD upset ^ OK
me PRP me ^ OK
recently RB recently ^ OK
is VBZ is ^ OK
that IN that ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
f- NNP ^ ^ repeat
france NNP france ^ OK
and CC and ^ OK
germany NNP germany ^ OK
made VBD made ^ OK
a DT a ^ OK
declaration NN declaration ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
against IN against ^ OK
the DT the ^ OK
war NN war ^ OK

and CC ^ ^ false_start
then RB ^ ^ repeat
then RB then ^ OK
the DT ^ ^ repeat
the DT the ^ OK
u- NNP ^ ^ repeat
u. NNP u. ^ OK
s. NNP s. ^ OK
like UH ^ ^ filler
started VBN started ^ OK
digging VBG digging ^ OK
on IN on ^ OK
france NNP france ^ OK
and CC and ^ OK
germany NNP germany ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
that DT ^ ^ repeat
the DT ^ ^ false_start
th- NN ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
not RB ^ ^ repeat
's BES 's ^ OK
not RB not ^ OK
the DT the ^ OK
right JJ right ^ OK
thing NN thing ^ OK
to TO to ^ OK
do VB do ^ OK

and CC ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
scary JJ scary ^ OK
thing NN thing ^ OK
when WRB when ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
is VBZ is ^ OK
like UH ^ ^ filler
stopping VBG ^ ^ false_start
no DT no ^ OK
longer RBR longer ^ OK
working VBG working ^ OK
with IN with ^ OK
the DT the ^ OK
rest NN rest ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
and CC and ^ OK
sort RB sort ^ OK
of RB of ^ OK
making VBG making ^ OK
just RB ^ ^ filler
uh UH ^ ^ filler
offensive JJ offensive ^ OK
little JJ little ^ OK
comments NNS comments ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
like RP like ^ OK
hey UH ^ ^ false_start
france NNP france ^ OK
and CC and ^ OK
germany NNP germany ^ OK
's BES 's ^ OK
a DT a ^ OK
very RB very ^ OK
modern JJ modern ^ OK
society NN society ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
in IN ^ ^ repeat
in IN in ^ OK
many JJ many ^ OK
ways NNS ways ^ OK
i PRP i ^ OK
think VBP think ^ OK
socially RB socially ^ OK
more RBR more ^ OK
advanced JJ advanced ^ OK
than IN than ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
is VBZ is ^ OK

uh UH ^ ^ filler
they PRP they ^ OK
have VBP have ^ OK
a DT a ^ OK
lot NN lot ^ OK
less JJR less ^ OK
of IN of ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
the DT the ^ OK
problems NNS problems ^ OK
that WDT that ^ OK
we PRP we ^ OK
have VBP have ^ OK

but CC but ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
make VB make ^ OK
enemies NNS enemies ^ OK
with IN with ^ OK
the DT the ^ OK
most RBS most ^ OK
powerful JJ powerful ^ OK
countries NNS countries ^ OK
in IN in ^ OK
europe NNP europe ^ OK

well UH ^ ^ false_start
you PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
the DT the ^ OK
sad JJ sad ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
that IN that ^ OK
like UH ^ ^ filler
people NNS people ^ OK
that WDT that ^ OK
have VBP have ^ OK
nothing NN nothing ^ OK
to TO to ^ OK
do VB do ^ OK
with IN with ^ OK
it PRP it ^ OK
when WRB when ^ OK
they PRP they ^ OK
get VBP get ^ OK
hurt VBN hurt ^ OK

i ADVP-TMP- 3 ^ ^ filler
mean PRP ^ ^ filler
that VBP that ^ OK
's DT 's ^ OK
not BES not ^ OK
fair RB fair ^ OK

like UH ^ ^ filler
people NNS people ^ OK
like IN like ^ OK
you PRP you ^ OK
and CC and ^ OK
me PRP me ^ OK
who WP who ^ OK
are VBP are ^ OK
n't RB n't ^ OK
making VBG making ^ OK
any DT any ^ OK
decisions NNS decisions ^ OK
who WP who ^ OK
are VBP are ^ OK
n't RB n't ^ OK
in IN in ^ OK
charge NN charge ^ OK
of IN of ^ OK
any DT any ^ OK
policies NNS policies ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
people NNS people ^ OK
like IN like ^ OK
us PRP us ^ OK
in IN in ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
and CC and ^ OK
in IN in ^ OK
north NNP north ^ OK
korea NNP korea ^ OK
and CC and ^ OK
in IN in ^ OK
iraq NNP iraq ^ OK
who WP who ^ OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
get VB get ^ OK
bombs NNS bombs ^ OK
falling VBG falling ^ OK
down RB down ^ OK
on IN on ^ OK
them PRP them ^ OK
because IN because ^ OK
of IN of ^ OK
what WP what ^ OK
the DT the ^ OK
leader NN leader ^ OK
's BES 's ^ OK
doing VBG doing ^ OK

and CC ^ ^ false_start
eh UH eh ^ OK

in IN in ^ OK
fact NN fact ^ OK
tha- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
bad JJ bad ^ OK
thing NN thing ^ OK
about IN about ^ OK
war NN war ^ OK

on IN on ^ OK
the DT the ^ OK
other JJ other ^ OK
hand NN hand ^ OK
though RB though ^ OK
like UH ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
could MD ^ ^ repeat
can MD can ^ OK
convince VB ^ ^ repeat
convince VB convince ^ OK
his PRP his ^ OK
military NN military ^ OK
to TO to ^ OK
no DT no ^ OK
longer RBR longer ^ OK
support VB support ^ OK
him PRP him ^ OK
or CC or ^ OK
like UH ^ ^ filler
his PRP his ^ OK
advisors NNS advisors ^ OK
to TO to ^ OK
turn VB turn ^ OK
against IN against ^ OK
him PRP him ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

it PRP it ^ OK
's BES 's ^ OK
still RB still ^ OK
a DT a ^ OK
pretty RB pretty ^ OK
hard JJ hard ^ OK
task NN task ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
d- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
understand VB understand ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS ^ ^ repeat
people NNS people ^ OK
only RB only ^ OK
know VBP know ^ OK
as RB as ^ OK
much RB much ^ OK
as IN as ^ OK
they PRP they ^ OK
're VBP 're ^ OK
being VBG being ^ OK
told VBN told ^ OK

you UNK ^ ^ filler
know UNK ^ ^ filler
in UNK ^ ^ repeat
in UNK in ^ OK
nineteen UNK ^ ^ repeat
nineteen UNK nineteen ^ OK
forties UNK forties ^ OK
germany UNK germany ^ OK
there UNK there ^ OK
was UNK were ^ false_start
people UNK people ^ OK
supporting UNK supporting ^ OK
hitler UNK hitler ^ OK
that UNK that ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
when UNK when ^ OK
it UNK it ^ OK
was UNK was ^ OK
all UNK all ^ OK
over UNK over ^ OK
they UNK they ^ OK
were UNK ^ ^ false_start
like UNK said ^ false_start
what UNK what ^ OK
the UNK the ^ OK
hell UNK hell ^ OK
was UNK was ^ OK
i UNK i ^ OK
doing UNK doing ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
to IN ^ ^ repeat
uh UH ^ ^ filler
to IN to ^ OK
japan NNP japan ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
went VBD went ^ OK
to IN to ^ OK
the DT ^ ^ repeat
the DT the ^ OK
hiroshima NNP hiroshima ^ OK
memorial NNP memorial ^ OK
there RB there ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
really RB really ^ OK
surprised JJ surprised ^ OK
to TO to ^ OK
learn VB learn ^ OK
that IN that ^ OK
like UH ^ ^ filler
the DT the ^ OK
people NNS people ^ OK
in IN in ^ OK
japan NNP japan ^ OK
had VBD had ^ OK
no DT no ^ OK
idea NN idea ^ OK
what WP what ^ OK
was VBD was ^ OK
going VBG going ^ OK
on RB on ^ OK
during IN ^ ^ false_start
the DT ^ ^ false_start
worl- NN ^ ^ false_start
eh UH ^ ^ filler
during IN during ^ OK
the DT the ^ OK
war NN war ^ OK

and CC ^ ^ false_start
if IN if ^ OK
they PRP they ^ OK
knew VBD knew ^ OK
that IN that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
had VBD had ^ OK
a DT a ^ OK
very RB very ^ OK
desperate JJ desperate ^ OK
position NN position ^ OK
and CC and ^ OK
that IN that ^ OK
it PRP it ^ OK
probably RB probably ^ OK
was VBD was ^ OK
n't RB n't ^ OK
worth JJ worth ^ OK
fighting VBG fighting ^ OK
anymore RB anymore ^ OK
they PRP they ^ OK
would MD would ^ OK
n't RB n't ^ OK
have VB have ^ OK
kept VBD kept ^ OK
fighting VBG fighting ^ OK

and UNK ^ ^ false_start
so UNK so ^ OK
in UNK ^ ^ repeat
in UNK in ^ OK
a UNK ^ ^ repeat
a UNK a ^ OK
war UNK war ^ OK
situation UNK situation ^ OK
it UNK it ^ OK
's UNK 's ^ OK
uh UNK ^ ^ filler

and CC ^ arg1 false_start
what WDT what arg0 OK
kind NN kind arg0 OK
of IN of arg0 OK
situation NN situation arg0 OK
do VBP do ^ OK
you PRP you arg0 OK
think VBP think predicate OK
would MD would ^ OK
like UH ^ ^ filler
would MD _ARG_ argM_mod false_start

i PRP ^ arg1 filler
mean VBP ^ ^ filler
that DT ^ ^ false_start
's BES ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
i PRP i arg0 OK
understand VBP understand predicate OK
the DT the ^ OK
the DT _ARG_ arg1 false_start

i PRP ^ arg1 filler
mean VBP ^ ^ filler
it PRP ^ ^ false_start
'd MD ^ ^ false_start
be VB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
um UH ^ ^ filler
unless IN unless argM_discou OK
you PRP you arg1 OK
were VBD were predicate OK
there RB there arg2 OK
it PRP it arg1 OK
would S-1 would argM_mod OK
be MD be predicate OK
kind VB kind argM_extent OK
of RB of argM_extent OK
hard RB hard argM_extent OK
to JJ ^ ^ repeat
to TO to arg2 OK
understand TO understand arg2 OK
that VB that arg2 OK
you IN ^ ^ filler
know PRP ^ ^ filler
i VBP ^ ^ filler
mean PRP ^ ^ filler
you VBP ^ ^ repeat
that VBG ^ ^ false_start
or POS ^ ^ false_start
you CC ^ ^ filler
know PRP ^ ^ filler
you VBP you arg0 OK
're PRP ^ ^ repeat
're PRP 're arg2 OK
just VBP ^ ^ repeat
sort RB ^ ^ repeat
of RB ^ ^ repeat
taking RB ^ ^ repeat
just VBP ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
taking RB taking arg2 OK
your IN ^ ^ repeat
your PRP your ^ false_start
friend PRP ^ ^ false_start
their VBG friend ^ false_start
or NN 's ^ false_start
or NN or ^ false_start
your CC your ^ false_start
brother PRP ^ ^ false_start
their VBG brother ^ false_start
's NN 's ^ false_start
word PRP word arg1 OK
that NN ^ ^ repeat
that IN that arg1 OK
they IN they arg1 OK
are PRP are arg1 OK
n't VBP n't argM_neg OK
responsible RB responsible arg2 OK

and CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg1 OK
comes VBZ comes arg1 OK
to IN to arg1 OK
an DT an arg1 OK
issue NN issue arg1 OK
of IN of arg1 false_start
do VBP ^ ^ false_start
you PRP ^ ^ false_start
i- IN ^ ^ repeat
if IN ^ ^ repeat
if IN ^ ^ false_start
someone NN someone arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
was VBD ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
being VBG being arg1 OK
put VBN put arg1 OK
on IN on arg2 OK
trial NN trial arg2 OK
for IN for argM_cause OK
something NN something argM_cause OK
ee- XX ^ ^ false_start
that DT ^ ^ repeat
that WDT that argM_cause OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
you PRP you arg0 OK
knew VBD knew argM_cause OK
a DT a arg1 OK
little JJ little arg1 OK
bit NN bit arg1 OK
about IN about arg1 OK
but NP-1 but arg1 OK
not CC not arg1 OK
a RB a arg1 OK
whole DT whole arg1 OK
l- JJ ^ ^ repeat
lot NN lot arg1 OK
about NN about arg1 OK

at RB ^ ^ false_start
least RBS ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
what WP ^ ^ false_start
well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
would MD ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if argM_adverb OK
i PRP i arg0 OK
knew VBD knew predicate OK
about IN about arg1 OK
out RB ^ ^ false_start
it PRP it arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
really RB really argM_adverb OK
would MD would argM_mod OK
n't RB n't argM_neg OK
have VB have predicate OK
any DT any arg1 OK
other JJ other arg1 OK
choice NN choice arg1 OK

but CC ^ ^ repeat
but CC ^ ^ false_start
to IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ false_start
i PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would argM_mod OK
n't RB ^ ^ repeat
never RB never argM_neg OK
protect VB protect predicate OK
him PRP him arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ repeat
if IN if argM_adverb OK
he PRP he arg0 OK
did VBD did arg2 OK
something NN something arg1 OK
like IN like arg1 OK
that DT that arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
about RB about arg2 OK
the DT the arg1 OK
worst JJS worst arg1 OK
thing NN thing arg1 OK
you PRP you arg0 OK
can MD can argM_mod OK
do VB do arg2 OK

e XX ^ arg2 false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
a DT ^ ^ false_start
the DT the arg2 OK
horrible JJ horrible arg2 OK
situation NN situation arg2 OK
that WDT that ^ OK
that WDT _ARG_ arg2 false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
had VBN had predicate OK
a DT a arg1 OK
family NN family arg1 OK
member NN member arg1 OK
that WDT that arg0 OK
's HVS 's arg1 OK
actually RB actually argM_adverb OK
done VBN done arg1 OK
that DT that arg1 OK

like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
ha- VBD ^ ^ repeat
had VBD had predicate OK
a DT a arg0 OK
cousin NN cousin arg0 OK
who WP who arg0 OK
killed VBD killed arg1 OK
his PRP his arg1 OK
own JJ own arg1 OK
sister NN sister arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
definitely RB ^ ^ false_start
a DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
an DT an arg2 OK
awful JJ awful arg2 OK
situation NN situation arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if argM_adverb OK
that DT that arg1 OK
had VBD had ^ OK
ever RB ever argM_adverb OK
happened VBN happened predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
if IN if argM_adverb OK
i PRP i arg1 OK
was VBD was predicate OK
there RB there arg2 OK
or CC or ^ OK
if IN if argM_adverb OK
i PRP i arg0 OK
knew VBD knew predicate OK
anything NN anything arg1 OK
about IN about arg1 OK
it PRP it arg1 OK
then RB then argM_adverb OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
would MD would argM_mod OK
n't RB n't argM_neg OK
have VB have ^ OK
lied VBN lied predicate OK
for IN for argM_purpos OK
him PRP him argM_purpos OK

well UH ^ arg2 filler
that DT ^ ^ false_start
's BES ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there arg1 OK
are VBP are predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of ^ OK
of IN _ARG_ arg2 false_start

that DT ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
such PDT such arg2 OK
a DT a arg2 OK
tough JJ tough arg2 OK
situation NN situation arg2 OK

you UNK ^ arg2 filler
know UNK ^ ^ filler
anything UNK ^ ^ false_start
like UNK ^ ^ false_start
that UNK ^ ^ false_start
it UNK it arg1 false_start
would UNK would argM_mod OK
be UNK be predicate OK
really UNK really argM_adverb OK
hard UNK hard arg2 OK
to UNK ^ ^ false_start
to UNK ^ ^ false_start
i UNK ^ ^ filler
mean UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
because UNK ^ ^ false_start
you UNK ^ ^ false_start
just UNK ^ ^ false_start
basically UNK ^ ^ false_start
have UNK ^ ^ false_start
to UNK ^ ^ false_start
i UNK ^ ^ filler
mean UNK ^ ^ filler
you UNK ^ ^ false_start
have UNK ^ ^ false_start
to UNK to arg2 OK
make UNK make arg2 OK
a UNK a arg1 OK
decision UNK decision arg1 OK
i UNK ^ ^ filler
mean UNK ^ ^ filler
th- UNK ^ ^ false_start
e- UNK ^ ^ repeat
e- UNK ^ ^ repeat
especially UNK especially argM_adverb false_start
if UNK ^ ^ repeat
i UNK ^ ^ filler
mean UNK ^ ^ filler
if UNK if argM_adverb false_start
it UNK ^ ^ repeat
it UNK it arg1 false_start
's UNK ^ ^ repeat
's UNK 's arg2 false_start
something UNK something arg2 false_start
major UNK major arg2 false_start
that UNK that arg1 false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
would UNK would argM_mod false_start
be UNK be arg2 false_start
life UNK life arg2 false_start
impacting UNK impacting arg2 false_start
to UNK to arg2 false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
i UNK ^ ^ filler
mean UNK ^ ^ filler
not UNK not arg2 false_start
just UNK just arg2 false_start
your UNK your arg2 false_start
brother UNK brother arg2 false_start
but UNK but arg2 false_start
parents UNK to ^ false_start
your UNK your arg2 false_start
parents UNK parents ^ false_start
parents UNK ^ arg2 false_start
siblings UNK and ^ false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
an- UNK ^ ^ repeat
any UNK any arg2 false_start
other UNK other arg2 false_start
siblings UNK siblings arg2 false_start

and CC ^ arg2 false_start
then RB ^ ^ false_start
you PRP you arg0 OK
're VBP 're ^ OK
going VBG going argM_mod OK
to TO to argM_mod OK
have VB have argM_mod OK
to TO to argM_mod OK
deal VB deal predicate OK
with IN with arg1 OK
it PRP it arg1 OK
pretty RB ^ ^ false_start
much RB ^ ^ false_start
for IN for argM_tmp OK
the DT the argM_tmp OK
rest NN rest argM_tmp OK
of IN of argM_tmp OK
your PRP your argM_tmp OK
life NN life argM_tmp OK
if IN if argM_adverb OK
your PRP your arg1 OK
brother NN brother arg1 OK
's BES 's predicate OK
in IN in arg2 OK
jail NN jail arg2 OK
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if argM_adverb OK
they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
free JJ free arg2 OK
and CC and ^ OK
they PRP they arg0 OK
're VBP 're ^ OK
walking VBG walking predicate OK
around RB around arg1 OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that ^ OK
somebody NN somebody arg1 OK
else RB else arg1 OK
's BES 's arg1 OK
family NN family arg1 OK
is VBZ is predicate OK
devastated VBN devastated arg2 OK
because IN because argM_cause OK
they PRP they ^ OK
they PRP _ARG_ arg0 false_start

i PRP ^ arg2 filler
mean VBP ^ ^ filler
if IN if argM_adverb OK
you PRP you arg0 OK
know VBP know predicate OK
that IN that arg1 OK
he PRP he arg0 OK
did VBD did arg1 OK
it PRP it arg1 OK
or CC or ^ OK
if IN if argM_adverb OK
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
i VP ^ ^ filler
mean PRP ^ ^ filler
it VBP it arg1 OK
's PRP 's predicate OK
just BES ^ ^ false_start
sort RB sort arg2 OK
of RB of ^ OK
of RB _ARG_ arg2 false_start

uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
the DT the arg1 OK
same JJ same arg1 OK
thing NN thing arg1 OK
that DT ^ ^ repeat
that WDT that arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT some arg0 OK
members NNS members arg0 OK
of IN of arg0 OK
like UH ^ ^ filler
juries NNS juries arg0 OK
have VBP have argM_mod OK
to TO to argM_mod OK
do VB do arg2 OK
and NP-2 ^ ^ false_start
stuff CC ^ predicate false_start

i PRP ^ arg1 filler
mean VBP ^ ^ filler
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
if IN if argM_adverb OK
you PRP you arg1 OK
were VBD were ^ OK
in IN ^ ^ false_start
the DT ^ ^ false_start
called VBN called predicate OK
to IN to argM_loc OK
jury NN jury argM_loc OK
duty NN duty argM_loc OK
for IN for argM_purpos OK
a DT a arg1 OK
friend NN friend arg1 OK
that WDT that arg1 OK
you PRP you arg0 OK
knew VBD knew argM_purpos OK
and NP-1 ^ ^ false_start
would CC ^ ^ repeat
would PRP would argM_mod OK
you MD ^ ^ repeat
you MD you arg0 OK
say PRP say predicate OK
that VB that arg1 OK
you IN you arg1 OK
knew PRP knew arg1 OK
them VBD him ^ false_start
them VBD or ^ false_start
them VBD her arg1 false_start
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just argM_adverb OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
say VB say predicate OK
oh UH oh arg1 OK
no UH no arg1 OK

i PRP ^ ^ false_start
do- VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
this DT this arg1 OK
case NN case arg1 OK

i- PRP i- ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
thought VBD thought predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
great JJ great arg2 OK

um UH ^ ^ filler
just RB ^ ^ false_start
as RB ^ ^ false_start
far RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
be VB be arg1 OK
eating VBG eating arg1 OK
and CC and ^ OK
have VB have predicate OK
somebody NN somebody arg0 OK
smoking VBG smoking arg1 OK
right RB right argM_loc OK
next RB next argM_loc OK
to IN to argM_loc OK
you PRP you argM_loc OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

because IN because ^ OK
then RB then ^ OK

well UH ^ ^ filler
i PRP i arg0 OK
understand VBP understand predicate OK
what WP what arg1 OK
you PRP you arg0 OK
're VBP 're arg1 OK
saying VBG saying arg1 OK
as RB as arg1 OK
far RB far arg1 OK
as IN as arg1 OK
the DT the arg1 OK
smoker NN smoker arg0 OK
feeling VBG feeling arg1 OK
um UH ^ ^ filler
alienated JJ alienated arg1 OK
i PRP ^ ^ filler
guess VBP ^ ^ filler
because IN because ^ OK
his PRP his arg0 OK
rights NNS rights arg0 OK
are VBP are ^ OK
being VBG being ^ OK
impinged VBN infringed predicate false_start
upon IN upon ^ OK
as NP-2 as ^ OK
far RB far ^ OK
as RB as ^ OK
you IN ^ ^ filler
know PRP ^ ^ filler
his VBP his arg0 OK
right PRP right arg0 OK
to NN to ^ OK
smoke TO smoke ^ OK
i VB ^ ^ false_start
suppose PRP ^ predicate false_start

i- IN ^ ^ repeat
in IN in ^ OK
europe NNP europe ^ OK

but CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate false_start
things NNS things arg1 false_start
in IN in arg1 OK
europe NNP europe arg1 OK
in IN in arg1 false_start
general JJ general arg1 false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
do- VBZ ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
people NNS people arg1 OK
are VBP are arg1 OK
necessarily RB necessarily arg2 false_start
chain NN chain arg2 OK
smokers NNS smokers arg2 OK

i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
're VBP 're ^ OK
m- RB ^ ^ filler
much RB much ^ OK
m- RBR ^ ^ filler

i PRP i arg0 OK
think VBP think predicate OK
they PRP they arg1 OK
're VBP 're arg1 OK
much RB much arg2 OK
more RBR more arg2 OK
moderate JJ moderate arg2 OK
in IN in arg2 OK
their PRP their arg2 OK
drinking NN drinking arg2 OK
habits NNS habits arg2 OK
as NAC-1 as arg2 OK
well RB well arg2 OK
and RB ^ ^ repeat
and CC ^ ^ false_start
all CC ^ ^ false_start
sorts DT ^ ^ false_start
of NNS ^ ^ false_start
things IN ^ ^ false_start

eh UH ^ ^ filler
ha- XX ^ ^ filler
were VBD were ^ OK
n- IN n't ^ false_start
near IN near ^ OK
the DT the ^ OK
fires NNS fires ^ OK
at RB at ^ OK
all RB all ^ OK

eh UH ^ ^ filler
not RB not ^ OK
related JJ related ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
tri- VBD ^ ^ repeat
tried VBD tried predicate OK
once RB once arg1 OK
too RB too arg1 OK

and CC ^ ^ false_start
it PRP it arg1 OK
was VBD was predicate OK
just RB just arg2 OK
no UH ^ ^ repeat
no DT not arg2 false_start
fun NN fun arg2 OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

it PRP ^ ^ false_start
'd MD ^ ^ false_start
be VB ^ ^ false_start
bad JJ ^ ^ false_start
if IN ^ ^ false_start
we PRP ^ ^ false_start
were VBD ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
maybe RB ^ ^ filler
it PRP it arg1 OK
would MD would ^ OK
be VB be predicate OK
good JJ good arg2 OK
if IN if arg2 OK
we PRP we arg1 OK
were VBD were arg2 OK
both DT ^ ^ repeat
both DT both arg1 OK
in IN in arg2 OK
opposition NN opposition arg2 OK
to IN to arg2 OK
each DT each arg2 OK
other JJ other arg2 OK

i PRP i arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
write VB write predicate OK
it PRP it arg1 OK
down RP down ^ OK
either RB either ^ OK
because IN because ^ OK
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP ^ ^ false_start
whoa UH said predicate false_start
whoa UH whoa arg1 OK

um UH ^ ^ filler
because IN ^ ^ false_start
they PRP ^ ^ repeat
t- PRP ^ ^ repeat
they PRP they arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
called VBN ^ ^ repeat
called VBN called predicate OK
me PRP me arg1 OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
other JJ other ^ OK
times NNS times ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ false_start
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
participate VB participate arg1 OK
so RB so ^ OK
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP ^ ^ false_start
whatever WDT said predicate false_start
whatever WDT whatever arg1 OK

it PRP it ^ OK
's BES 's ^ OK
hard JJ hard ^ OK
to TO ^ ^ OK
with IN ^ ^ repeat
with IN ^ ^ false_start
you PRP ^ ^ false_start
're VBP to ^ false_start
supposed VBN ^ ^ OK
eat VB eat ^ OK
all PDT all ^ OK
the DT the ^ OK
vegetables NNS vegetables ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
you PRP you ^ OK
got VBN got ^ OK
to TO to ^ OK
cook VB cook ^ OK
the DT ^ ^ repeat
the DT the ^ OK
greens NNS greens ^ OK
and CC and ^ OK
the DT the ^ OK
string NN string ^ OK
beans NNS beans ^ OK

we PRP ^ ^ repeat
we PRP we ^ OK
on IN on ^ OK
the DT the ^ OK
run NN run ^ OK

we PRP ^ ^ repeat
we PRP we ^ OK
go VBP go ^ OK
go VBP go ^ OK
go VBP go ^ OK

eh UH eh ^ OK
yeah UH yeah ^ OK

eh UH ^ ^ filler
for IN for ^ OK
one CD one ^ OK
grapefruit NN grapefruit ^ OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ false_start
the DT the ^ OK
fast JJ fast ^ OK
food NN food ^ OK
be VB is ^ false_start
filling VBG filling ^ OK
you PRP you ^ OK
up RP up ^ OK
more RBR more ^ OK
even RB even ^ OK
though IN though ^ OK
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
nutritional JJ nutritional ^ OK
or CC ^ ^ false_start
whatever WP ^ ^ false_start
for IN ^ ^ false_start
your PRP ^ ^ filler
body NN ^ ^ false_start

you PRP you ^ OK
be VB are ^ false_start
feeling VBG feeling ^ OK
so RB so ^ OK
empty JJ empty ^ OK
like UH ^ ^ filler
thirty CD thirty ^ OK
minutes NNS minutes ^ OK
later RBR later ^ OK
you PRP and ^ false_start
you PRP you ^ OK
be VB are ^ OK
hungry JJ hungry ^ OK
again RB again ^ OK

it PRP it ^ OK
's BES 's ^ OK
so RB so ^ OK
weird JJ weird ^ OK

just RB just ^ OK
talk VB talk ^ OK
to IN to ^ OK
me PRP me ^ OK

so RB ^ ^ false_start
was VBD was ^ OK
i ADVP-PRD- 1 i ^ OK
for PRP for ^ OK
school IN school ^ OK
or NN or ^ OK
whatever CC whatever ^ OK

i PRP i ^ OK
h- VBP h- ^ OK

well UH ^ ^ false_start
in IN in ^ OK
getting VBG getting ^ OK
back RB back ^ OK
to IN to ^ OK
the DT the ^ OK
nutritional JJ nutritional ^ OK
thing NN thing ^ OK
what WP what ^ OK
i PRP i ^ OK
was VBD was ^ OK
saying VBG saying ^ OK
about IN about ^ OK
the DT the ^ OK
carbohydrates NNS carbohydrates ^ OK

if IN with ^ false_start
if IN ^ ^ filler
you PRP ^ ^ filler
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all ^ OK
the DT the ^ OK
starchy JJ starchy ^ OK
foods NNS foods ^ OK
like IN like ^ OK
pasta NN pasta ^ OK
and CC and ^ OK
bread NN bread ^ OK
it PRP it ^ OK
's SBAR-1 's ^ OK
almost BES almost ^ OK
inevitable RB inevitable ^ OK
for JJ for ^ OK
you IN you ^ OK
to PRP to ^ OK
eat TO eat ^ OK
bread VB bread ^ OK
everyday NN everyday ^ OK
like RB ^ ^ filler
with UH with ^ OK
a IN a ^ OK
sandwich DT sandwich ^ OK
or NN or ^ OK
with CC with ^ OK
a IN a ^ OK
burger DT burger ^ OK
or NN ^ ^ false_start
whatever CC ^ ^ false_start
you WP ^ ^ false_start
eat PRP ^ ^ false_start
bread VBP ^ ^ false_start

or CC ^ ^ false_start
even RB even ^ OK
egg NN egg ^ OK
roll NN rolls ^ false_start
if IN if ^ OK
you PRP you ^ OK
like VBP like ^ OK
chinese JJ chinese ^ OK
food NN food ^ OK

it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
bunch NN bunch ^ OK
of IN of ^ OK
starch NN starch ^ OK
because IN because ^ OK
starch NN starch ^ OK
is VBZ is ^ OK
what WP what ^ OK
fills VBZ fills ^ OK
you PRP you ^ OK
up RP up ^ OK
fast RB fast ^ OK

i- XX ^ ^ false_start
what WP what ^ OK
'd VBD 'd ^ OK
you PRP you ^ OK
say VB say ^ OK

but CC ^ ^ repeat
yet RB yet ^ OK
we PRP we arg0 OK
're VBP 're ^ OK
getting VBG getting predicate OK
off IN off arg1 OK
topic NN topic arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
we PRP we arg1 OK
're VBP 're arg1 OK
supposed VBN supposed arg1 OK
to TO to arg1 OK
stay VB stay arg1 OK
on IN on arg3 OK
topic NN topic arg3 OK
here RB here argM_loc OK

like IN like ^ OK
gossiping NN gossiping ^ OK

i PRP i ^ OK
don- VBP don- ^ OK

and CC ^ ^ false_start
like UH ^ ^ filler
everybody NN everybody arg0 OK
just RB just ^ OK
made VBN made predicate OK
stereotypes NNS stereotypes arg1 OK
of IN of ^ OK
me PRP me arg1 OK
of IN of ^ OK
being VBG being predicate OK
like UH ^ ^ filler
a DT a arg2 OK
thief NN thief arg2 OK
whenever WRB whenever arg2 OK
and CC and arg2 OK
like UH ^ ^ filler
a DT a arg2 OK
pervert NN pervert arg2 OK
because IN because ^ OK
they PRP ^ ^ repeat
they PRP they arg0 OK
thought VBD thought predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
st- VBD ^ ^ repeat
s- VBD ^ ^ repeat
stole VBD stole arg1 OK
these DT these arg1 OK
pictures NNS pictures arg1 OK

and CC ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
like UH like ^ OK

it PRP it ^ OK
's BES 's ^ OK
like UH like ^ OK

well UH ^ ^ filler
if IN if ^ OK
it PRP ^ ^ repeat
you PRP you arg1 OK
's BES ^ ^ repeat
're VBP 're predicate OK
like UH ^ ^ filler
damaged JJ damaged arg2 OK
mentally RB ^ ^ repeat
mentally RB mentally arg2 OK
then RB then ^ OK
probably RB probably ^ false_start
it PRP it arg0 OK
affects VBZ affects predicate OK
you PRP you arg1 OK
physically RB physically arg1 OK
too RB too arg1 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
exercise VBP ^ ^ repeat
exercise VBP exercise predicate OK
all PDT ^ ^ repeat
fairly RB fairly argM_tmp OK
th- DT ^ ^ repeat
often RB often argM_tmp OK

i PRP ^ ^ repeat
i PRP i arg0 OK
th- XX ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
smoke VB smoke predicate OK
cigarettes NNS cigarettes arg1 OK

but CC but ^ OK
i PRP i arg0 OK
know VBP know predicate OK
a DT ^ ^ repeat
lot NN ^ ^ repeat
most JJS most arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
all PDT all arg0 OK
my PRP my arg0 OK
friends NNS ^ ^ repeat
friends NNS friends arg0 OK
smoke VBP smoke arg1 OK
cigarettes NNS cigarettes arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
way RB ^ ^ repeat
too RB ^ ^ repeat
very RB very arg2 OK
ex- JJ ^ ^ repeat
expensive JJ expensive arg2 OK

and CC ^ ^ false_start
i- XX ^ ^ repeat
what WP what arg1 OK
are VBP are ^ OK
they PRP they arg0 OK
really RB really ^ OK
doing VBG doing predicate OK

it- PRP ^ ^ repeat
to IN to ^ OK
an DT an ^ OK
extent NN extent ^ OK

i PRP i arg0 OK
think VBP think predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
get VBP ^ ^ repeat
get VBP get arg1 OK
more JJR more arg1 OK
out IN out arg1 OK
of IN of arg1 OK
drinking NN drinking arg1 OK
than IN than arg1 OK
i PRP i arg1 OK
do VBP do arg1 OK
out IN out arg1 OK
of IN of arg1 OK
smoking NN smoking arg1 OK

in IN in ^ OK
terms NNS terms ^ OK
of IN of ^ OK
cost NN cost ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
drink VB drink predicate OK
like UH ^ ^ filler
every DT every argM_tmp OK
day NN day argM_tmp OK

i PRP i arg0 OK
only RB only ^ OK
drink VBP drink predicate OK
like UH ^ ^ filler
once RB once argM_tmp OK
a DT a argM_tmp OK
week NN week argM_tmp OK
i PRP ^ ^ repeat
if IN if ^ OK
m- XX ^ ^ repeat
that DT that ^ OK

maybe RB maybe ^ OK
even RB even ^ OK
once RB once ^ OK
every DT every ^ OK
two CD two ^ OK
weeks NNS weeks ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
heard VBN heard predicate OK
about IN about arg1 OK
that DT that arg1 OK
too RB too ^ OK

it PRP ^ ^ repeat
i PRP i ^ OK
was VBD ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

it PRP ^ ^ false_start
was VBD ^ ^ false_start
some DT ^ ^ false_start
yo- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
know VB know predicate OK
where WRB where arg1 OK
they PRP they arg0 OK
get VBP get arg1 OK
that DT that arg1 OK
from IN from arg1 OK

gossiping NN gossiping ^ OK

well UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS people ^ OK
who WP who ^ OK
have VBP have ^ OK
nothing NN nothing ^ OK
better RBR better ^ OK
to SBAR-3 to ^ OK
do TO do ^ OK
than VB ^ ^ repeat
than NP-2 than ^ OK
to IN to ^ OK
gossi- IN gossip ^ false_start

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
sometimes RB sometimes argM_tmp OK
you ADVP-TMP- 2 you arg0 OK
gossip RB gossip predicate OK
when WRB ^ ^ repeat
when WRB when argM_tmp OK
then NP-1 ^ ^ false_start
you PRP you arg0 OK
have VBP have argM_tmp OK
nothing NN nothing arg1 OK
better RBR better arg1 OK
to TO to arg1 OK
do VB do arg1 OK

and CC ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
a DT a arg2 OK
way NN way arg2 OK
of IN of ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
makin- VBG ^ ^ repeat
making VBG making ^ OK
yourself PRP yourself arg0 OK
feel VB feel predicate OK
like IN like arg1 OK
you PRP you arg1 OK
're VBP 're arg1 OK
better JJR better arg2 OK
than IN than arg2 OK
someone NN someone arg2 OK
such CC ^ ^ false_start
thing JJ ^ ^ false_start
else RB else arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
because NP-1 ^ ^ false_start
they IN ^ ^ false_start
did PRP ^ ^ false_start
so VBD ^ ^ false_start
and RB ^ ^ false_start
so CC ^ ^ false_start
and RB ^ ^ false_start
such CC ^ ^ false_start
and JJ ^ ^ false_start

you PRP you arg1 OK
're VBP 're predicate OK
probably RB probably ^ OK
a DT a arg2 OK
hypocrite NN hypocrite arg2 OK
even RB ^ ^ false_start
though IN ^ ^ false_start
most JJS most argM_tmp OK
of IN of argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK
when WRB ^ ^ false_start
you PRP you arg0 OK
gossip VBP gossip argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
just RB ^ ^ repeat
makes VBZ ^ ^ repeat
a DT ^ ^ repeat
pers- NN ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ false_start
think VBP think predicate OK
it PRP it arg0 OK
makes VBZ makes arg1 OK
a DT a arg0 OK
person NN person arg0 OK
feel VB feel arg1 OK
really RB ^ ^ false_start
awful JJ awful arg1 OK

so UH ^ ^ false_start
but CC ^ ^ false_start
have VBP ^ ^ repeat
you PRP ^ ^ repeat
d- VBP ^ ^ repeat
ha- VBP ^ ^ repeat
do VBP ^ ^ repeat
you PRP ^ ^ repeat
have VB have ^ OK
you PRP you arg0 OK
done VBN done predicate OK
all DT all arg1 OK
of IN of arg1 OK
those DT those arg1 OK
other JJ other arg1 OK
things NNS things arg1 OK
on IN on arg1 OK
the DT the arg1 OK
list NN list arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
but CC ^ ^ false_start
unless IN unless ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
buy VB buy ^ OK
them PRP them ^ OK
cheaply RB cheaply ^ OK
like UH ^ ^ filler
on IN on ^ OK
the DT the ^ OK
internet NN internet ^ OK

i PRP ^ ^ repeat
mm UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
true JJ true arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
at RB ^ ^ false_start
least RBS ^ ^ false_start
in IN ^ ^ repeat
in IN in argM_loc false_start
new NNP new argM_loc false_start
york NNP york argM_loc false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ false_start
you PRP ^ ^ false_start
think VBP ^ ^ false_start
about IN ^ ^ false_start
it PRP ^ ^ false_start
drinking NN drinking arg1 OK
costs VBZ costs predicate OK
more JJR more arg2 OK
than IN ^ ^ repeat
than IN than arg2 OK
smoking NN smoking arg2 OK
in- IN ^ ^ repeat

whereas RB ^ ^ false_start
if IN ^ ^ repeat
you PRP ^ ^ repeat
're VBP ^ ^ repeat
if IN if ^ OK
you PRP you arg0 OK
're VBP ^ ^ false_start
smoking VBG smoke predicate false_start
cigarettes NNS cigarettes arg1 OK
and CC and ^ OK
you PRP you arg0 OK
get VBP get predicate OK
them PRP them arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
intern NN ^ argM_loc false_start
et NN internet ^ false_start
for IN for arg3 OK
two CD two arg3 OK
dollars NNS dollars arg3 OK
a DT a arg3 OK
pack NN pack arg3 OK
then RB then ^ OK
that DT that arg1 OK
's BES 's predicate OK
like UH ^ ^ filler
fifteen CD fifteen arg2 OK
bucks NNS bucks arg2 OK

well UH ^ ^ filler
how WRB how arg3 OK
much JJ much arg3 OK
do VBP do ^ OK
you PRP you arg0 OK
spend VB spend predicate OK
a DT a ^ OK
week NN week ^ OK
on IN ^ ^ repeat
on IN on arg1 OK
drinking NN drinking arg1 OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
went VBD went predicate OK
to IN to arg1 OK
oberlin NNP oberlin arg1 OK

but CC ^ ^ false_start
um UH ^ ^ filler
so RB ^ ^ false_start
anyways UH ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
we PRP we arg1 OK
're VBP 're arg1 OK
off IN off arg2 OK
topic NN topic arg2 OK
again RB again argM_tmp OK

um UH ^ ^ filler
um UH ^ ^ filler
what WP what arg2 OK
were VBD were predicate OK
the DT the arg1 OK
other JJ other arg1 OK
things NNS things arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
list NN list argM_loc OK

see UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what arg2 OK
i PRP i arg2 OK
heard VBD heard arg2 OK
about IN about ^ OK
um UH ^ ^ filler
overeating NN overeating ^ OK
is VBZ ^ ^ repeat
that IN ^ ^ repeat
or CC ^ ^ repeat
or CC or ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
obesity NN obesity ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
just RB ^ ^ false_start
in IN in ^ OK
general JJ general ^ OK
is VBZ is predicate OK
that IN that arg1 OK
um UH ^ ^ filler
right RB right ^ OK
now RB now ^ OK
smoking NN smoking arg1 OK
is VBZ is predicate OK
the DT the arg2 OK
number NN number arg2 OK
one CD one arg2 OK
cause NN cause arg2 OK
of IN of arg2 OK
death NN death arg2 OK
in IN in argM_loc OK
the DT the argM_loc OK
country NN country argM_loc OK

but CC ^ ^ false_start
then RB ^ ^ false_start
pretty RB ^ ^ false_start
soon RB soon argM_tmp OK
it PRP it arg1 OK
's BES 's predicate OK
going VBG going arg2 OK
switch VB to ^ false_start
at- XX ^ ^ repeat
um UH ^ arg2 filler
switch VB switch arg2 OK
over RP over arg2 OK
to IN to arg2 OK
obesity NN obesity arg2 OK

because IN because ^ OK

and CC ^ ^ false_start
what WDT what ^ OK
kind NN kind ^ OK
of IN of ^ OK
situation NN situation ^ OK
do VBP do ^ OK
you PRP you ^ OK
think VBP think ^ OK
would MD would ^ OK
like UH ^ ^ filler

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ false_start
's BES ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
i PRP i ^ OK
understand VBP understand ^ OK
the DT the ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
um UH ^ ^ filler
unless IN unless ^ OK
you PRP you ^ OK
were VBD were ^ OK
there RB there ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
'd MD ^ ^ repeat
would S-1 would ^ OK
be VB ^ ^ repeat
be MD be ^ OK
kind RB ^ ^ repeat
kind VB kind ^ OK
of RB ^ ^ repeat
of RB of ^ OK
hard RB hard ^ OK
to JJ ^ ^ repeat
to TO to ^ OK
understand TO understand ^ OK
that VB that ^ OK

you IN ^ ^ filler
know PRP ^ ^ filler
i VBP ^ ^ filler
mean PRP ^ ^ filler
you VBP ^ ^ repeat
or POS ^ ^ false_start
you CC ^ ^ filler
know PRP ^ ^ filler
you VBP you ^ OK
're PRP ^ ^ repeat
're PRP 're ^ OK
just VBP ^ ^ repeat
just VBP just ^ OK
sort RB ^ ^ repeat
sort RB sort ^ OK
of RB ^ ^ repeat
of RB of ^ OK
taking RB ^ ^ repeat
that VBG ^ ^ false_start
taking RB taking ^ OK
your IN ^ ^ repeat
your PRP ^ ^ false_start
their VBG your ^ false_start
friend PRP ^ ^ false_start
their VBG friend ^ false_start
or NN ^ ^ false_start
their VBG or ^ false_start
your CC ^ ^ false_start
their VBG your ^ false_start
brother PRP ^ ^ false_start
their VBG brother ^ false_start
's NN ^ ^ false_start
their VBG 's ^ false_start
word PRP word ^ OK
that NN ^ ^ repeat
that IN that ^ OK
they IN they ^ OK
are PRP are ^ OK
n't VBP n't ^ OK
responsible RB responsible ^ OK

and CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP guess ^ OK
it PRP it ^ OK
comes VBZ comes ^ OK
to IN to ^ OK
an DT an ^ OK
issue NN issue ^ OK
of IN of ^ OK
do VBP ^ ^ false_start
you PRP ^ ^ false_start
i- IN ^ ^ repeat
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
someone NN someone ^ OK
was VBD was ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
being VBG being ^ OK
put VBN put ^ OK
on IN on ^ OK
trial NN trial ^ OK
for IN for ^ OK
something NN something ^ OK
ee- XX ^ ^ false_start
that DT ^ ^ repeat
that WDT that ^ OK
i PRP ^ ^ filler
guess VBP ^ ^ filler
you PRP you ^ OK
knew VBD knew ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
about IN about ^ OK
but NP-1 but ^ OK
not CC not ^ OK
a RB a ^ OK
whole DT whole ^ OK
l- JJ ^ ^ repeat
lot NN lot ^ OK
about NN about ^ OK

at RB at ^ OK
least RBS least ^ OK
that DT that ^ OK
's BES 's ^ OK
what WP what ^ OK

well UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
would MD ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
i PRP i ^ OK
knew VBD knew ^ OK
about IN about ^ OK
out RB ^ ^ repeat
it PRP it ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
really RB really ^ OK
would MD would ^ OK
n't RB n't ^ OK
have VB have ^ OK
any DT any ^ OK
other JJ other ^ OK
choice NN choice ^ OK

but CC ^ ^ repeat
but CC but ^ OK
to IN to ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ filler

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
would MD ^ ^ repeat
would MD would ^ OK
n't RB ^ ^ repeat
never RB never ^ OK
protect VB protect ^ OK
him PRP him ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
he PRP he ^ OK
did VBD did ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
about RB about ^ OK
the DT the ^ OK
worst JJS worst ^ OK
thing NN thing ^ OK
you PRP you ^ OK
can MD can ^ OK
do VB do ^ OK

e XX ^ ^ filler
it PRP ^ ^ repeat
's BES ^ ^ repeat
just RB ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
a DT ^ ^ repeat
the DT the ^ OK
horrible JJ horrible ^ OK
situation NN situation ^ OK
that WDT that ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
had VBN had ^ OK
a DT a ^ OK
family NN family ^ OK
member NN member ^ OK
that WDT that ^ OK
's HVS 's ^ OK
actually RB actually ^ OK
done VBN done ^ OK
that DT that ^ OK

like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
ha- VBD ^ ^ repeat
had VBD had ^ OK
a DT a ^ OK
cousin NN cousin ^ OK
who WP who ^ OK
killed VBD killed ^ OK
his PRP his ^ OK
own JJ own ^ OK
sister NN sister ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
definitely RB ^ ^ false_start
a DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
an DT an ^ OK
awful JJ awful ^ OK
situation NN situation ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
that DT that ^ OK
had VBD had ^ OK
ever RB ever ^ OK
happened VBN happened ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
if IN if ^ OK
i PRP i ^ OK
was VBD was ^ OK
there RB there ^ OK
or CC or ^ OK
if IN if ^ OK
i PRP i ^ OK
knew VBD knew ^ OK
anything NN anything ^ OK
about IN about ^ OK
it PRP it ^ OK
then RB then ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
have VB have ^ OK
lied VBN lied ^ OK
for IN for ^ OK
him PRP him ^ OK

well UH ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there ^ OK
are VBP are ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK

that DT ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
such PDT such ^ OK
a DT a ^ OK
tough JJ tough ^ OK
situation NN situation ^ OK

i UNK ^ ^ filler
mean UNK ^ ^ filler
th- UNK ^ ^ false_start
e- UNK ^ ^ repeat
e- UNK ^ ^ repeat
especially UNK especially ^ OK
if UNK ^ ^ repeat
i UNK ^ ^ filler
mean UNK ^ ^ filler
if UNK if ^ OK
it UNK ^ ^ repeat
it UNK it ^ OK
's UNK ^ ^ repeat
's UNK 's ^ OK
something UNK something ^ OK
major UNK major ^ OK
that UNK that ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
would UNK would ^ OK
be UNK be ^ OK
life UNK life ^ OK
impacting UNK impacting ^ OK
to UNK to ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
i UNK ^ ^ filler
mean UNK ^ ^ filler
not UNK not ^ OK
just UNK just ^ OK
your UNK your ^ OK
brother UNK brother ^ OK
but UNK but ^ OK
your UNK your ^ OK
parents UNK parents ^ OK
parents UNK ^ ^ false_start
siblings UNK and ^ false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
an- UNK ^ ^ repeat
any UNK any ^ OK
other UNK other ^ OK
siblings UNK siblings ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
anything UNK ^ ^ false_start
like UNK ^ ^ false_start
that UNK ^ ^ false_start

it UNK it ^ OK
would UNK would ^ OK
be UNK be ^ OK
really UNK really ^ OK
hard UNK hard ^ OK
to UNK ^ ^ repeat
to UNK to ^ OK
i UNK ^ ^ filler
mean UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
because UNK because ^ OK
you UNK ^ ^ repeat
just UNK ^ ^ false_start
basically UNK ^ ^ false_start
i UNK ^ ^ filler
mean UNK ^ ^ filler
you UNK you ^ OK
have UNK ^ ^ repeat
have UNK have ^ OK
to UNK ^ ^ repeat
to UNK to ^ OK
make UNK make ^ OK
a UNK a ^ OK
decision UNK decision ^ OK

and CC ^ ^ false_start
then RB then ^ OK
you PRP you ^ OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
have VB have ^ OK
to TO to ^ OK
deal VB deal ^ OK
with IN with ^ OK
it PRP it ^ OK
pretty RB ^ ^ false_start
much RB ^ ^ false_start
for IN for ^ OK
the DT the ^ OK
rest NN rest ^ OK
of IN of ^ OK
your PRP your ^ OK
life NN life ^ OK
if IN if ^ OK
your PRP your ^ OK
brother NN brother ^ OK
's BES 's ^ OK
in IN in ^ OK
jail NN jail ^ OK
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
free JJ free ^ OK
and CC and ^ OK
they PRP they ^ OK
're VBP 're ^ OK
walking VBG walking ^ OK
around RB around ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that ^ OK
somebody NN somebody ^ OK
else RB else ^ OK
's BES 's ^ OK
family NN family ^ OK
is VBZ is ^ OK
devastated VBN devastated ^ OK
because IN because ^ OK
they PRP they ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
know VBP know ^ OK
that IN that ^ OK
he PRP he ^ OK
did VBD did ^ OK
it PRP it ^ OK
or CC or ^ OK
if IN if ^ OK
you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
i VP ^ ^ filler
mean PRP ^ ^ filler
it VBP it ^ OK
's PRP 's ^ OK
just BES just ^ OK
sort RB sort ^ OK
of RB of ^ OK

uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
it PRP it ^ OK
's BES 's ^ OK
the DT the ^ OK
same JJ same ^ OK
thing NN thing ^ OK
that DT ^ ^ repeat
that WDT that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT some ^ OK
members NNS members ^ OK
of IN of ^ OK
like UH ^ ^ filler
juries NNS juries ^ OK
have VBP have ^ OK
to TO to ^ OK
do VB do ^ OK
and NP-2 ^ ^ false_start
stuff CC ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
were VBD were ^ OK
in IN ^ ^ false_start
the DT ^ ^ false_start
called VBN called ^ OK
to IN to ^ OK
jury NN jury ^ OK
duty NN duty ^ OK
for IN for ^ OK
a DT a ^ OK
friend NN friend ^ OK
that WDT that ^ OK
you PRP you ^ OK
knew VBD knew ^ OK
and NP-1 ^ ^ false_start
would CC ^ ^ repeat
would PRP would ^ OK
you MD ^ ^ repeat
you MD you ^ OK
say PRP say ^ OK
that VB that ^ OK
you IN you ^ OK
knew PRP knew ^ OK
them VBD them ^ OK

or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
sort RB sort ^ OK
of RB of ^ OK
say VB say ^ OK
oh UH ^ ^ filler
no UH no ^ OK

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
do- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
this DT this ^ OK
case NN case ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
really RB really ^ OK
about IN about ^ OK
it PRP it ^ OK
i PRP i ^ OK
can MD can ^ OK
think VB think ^ OK
of IN of ^ OK

and CC ^ ^ false_start
what WP what ^ OK
about IN about ^ OK
you PRP you ^ OK

i- UNK i- ^ OK
g- UNK ^ ^ repeat
see UNK see ^ OK

well UH ^ ^ false_start
and CC ^ ^ false_start
see UH ^ ^ false_start
and CC ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
that DT that ^ OK
inside RB inside ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
have VBP ^ ^ repeat
got VBD got ^ OK
a DT a ^ OK
treadmill NN treadmill ^ OK

so UH ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK

well UH ^ ^ false_start
and CC ^ ^ false_start
the DT the ^ OK
weather NN weather ^ OK
restricts VBZ restricts ^ OK
you PRP you ^ OK
too RB too ^ OK
because IN because ^ OK
i PRP i ^ OK
used VBD used ^ OK
to TO to ^ OK
walk VB walk ^ OK
outside RB outside ^ OK
with IN with ^ OK
my PRP my ^ OK
daughter NN daughter ^ OK
at IN at ^ OK
six CD six ^ OK
a. NN a. ^ OK
m. NNP m. ^ OK
in IN in ^ OK
the DT the ^ OK
morning NN morning ^ OK
when WRB when ^ OK
she PRP she ^ OK
was VBD was ^ OK
in IN in ^ OK
high JJ high ^ OK
school NN school ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
the DT the ^ OK
weather NN weather ^ OK
is VBZ is ^ OK
just RB just ^ OK
so RB so ^ OK
unpredictable JJ unpredictable ^ OK
and CC and ^ OK
can MD can ^ OK
be VB be ^ OK
so RB so ^ OK
hot JJ hot ^ OK
and CC and ^ OK
sticky JJ sticky ^ OK
or CC or ^ OK
cold JJ cold ^ OK
and CC and ^ OK
rainy JJ rainy ^ OK

so UH ^ ^ false_start
and CC ^ ^ false_start
on IN on ^ OK
days NNS days ^ OK
that WDT that ^ OK
i PRP i ^ OK
have VBP have ^ OK
happened VBN happened ^ OK
to TO to ^ OK
miss VB miss ^ OK
i NP-1 ^ ^ repeat
i PRP i ^ OK
make PRP make ^ OK
it VBP it ^ OK
up PRP up ^ OK
on RP on ^ OK
one IN one ^ OK
of CD of ^ OK
the IN the ^ OK
other DT other ^ OK
days JJ days ^ OK
and NNS and ^ OK
go CC go ^ OK
longer VBP longer ^ OK
on RBR on ^ OK
the IN the ^ OK
treadmill DT treadmill ^ OK

so UH ^ ^ false_start
well UH ^ ^ false_start
that DT ^ ^ repeat
's BES ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
where WRB where ^ OK
i PRP i ^ OK
squeeze VBP squeeze ^ OK
it PRP it ^ OK
in RP in ^ OK
too RB too ^ OK
though RB though ^ OK
is VBZ is ^ OK
that DT that ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
my PRP my ^ OK
end NN end ^ OK
of IN of ^ OK
the DT the ^ OK
day NN day ^ OK

and CC ^ ^ false_start
just RB ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
how WRB how ^ OK
i PRP i ^ OK
fit VBP fit ^ OK
it PRP it ^ OK
in RB in ^ OK
because ADVP-1 because ^ OK
i IN i ^ OK
tape PRP tape ^ OK
all VBP all ^ OK
my PDT my ^ OK
programs PRP programs ^ OK
so NNS so ^ OK
that IN that ^ OK
you IN you ^ OK
know PRP know ^ OK
i VBP i ^ OK
'm PRP 'm ^ OK
doing VBP doing ^ OK
it VBG it ^ OK
th- PRP ^ ^ repeat
that DT that ^ OK
time DT time ^ OK
when NN when ^ OK
i WRB ^ ^ repeat
i PRP i ^ OK
get PRP get ^ OK
to VBP to ^ OK
watch TO watch ^ OK
two VB two ^ OK
two-and-a-half CD two-and-a-hal f  ^ OK
hours CD hours ^ OK
in NNS in ^ OK
the IN the ^ OK
hour DT hour ^ OK
and NN and ^ OK
forty CC forty ^ OK
minute CD minute ^ OK
time NN time ^ OK
frame NN frame ^ OK
because NN because ^ OK
you IN you ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
have RB have ^ OK
the VB the ^ OK
commercials DT commercials ^ OK

i PRP i ^ OK
mean VBP mean ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
is S-1 is ^ OK
difficult VBZ difficult ^ OK
to JJ to ^ OK
do TO do ^ OK
in VB in ^ OK
and CC ^ ^ false_start
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
the DT the ^ OK
way NN way ^ OK
i PRP i ^ OK
do VBP do ^ OK
it PRP it ^ OK
i ADVP-1 ^ ^ false_start
because PRP ^ ^ false_start
it IN ^ ^ false_start

i PRP ^ ^ repeat
i PRP i ^ OK
remember VBP ^ ^ repeat
remember VBP remember ^ OK
when WRB when ^ OK
we PRP we ^ OK
were VBD were ^ OK
both DT both ^ OK
working VBG working ^ OK
and ADVP-TMP- 1 and ^ OK
a. CD at ^ false_start
um CC ^ ^ filler
six UH six ^ OK
a. CD a. ^ OK
m. NNP m. ^ OK
in NNP in ^ OK
the IN the ^ OK
morning DT morning ^ OK
you NN you ^ OK
know PRP know ^ OK
we VBP we ^ OK
'd PRP 'd ^ OK
be MD be ^ OK
at VB at ^ OK
the IN the ^ OK
uh DT ^ ^ filler
bally UH bally ^ OK
workout NNP workout ^ OK
center NN center ^ OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's S-NOM-1 's ^ OK
a BES a ^ OK
lot DT lot ^ OK
nicer NN nicer ^ OK
having JJR having ^ OK
it VBG it ^ OK
in PRP in ^ OK
your IN your ^ OK
house PRP house ^ OK
and NN and ^ OK
having CC having ^ OK
a VBG a ^ OK
little DT little ^ OK
flexibility JJ flexibility ^ OK
of NN ^ ^ false_start
you IN ^ ^ filler
know PRP ^ ^ filler
if VBP if ^ OK
i IN i ^ OK
get PRP get ^ OK
there VBP there ^ OK
a RB a ^ OK
little DT little ^ OK
bit JJ bit ^ OK
later NN later ^ OK
than RBR than ^ OK
i IN i ^ OK
normally PRP normally ^ OK
do RB do ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
or CC ^ ^ false_start
sometimes RB sometimes ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
we PRP we ^ OK
go VBP go ^ OK
out RB out ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
twelve CD twelve ^ OK
midnight NN midnight ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
on IN on ^ OK
the DT the ^ OK
treadmill NN treadmill ^ OK
at IN at ^ OK
twelve CD twelve ^ OK
midnight NN midnight ^ OK

so UH ^ ^ false_start
you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
do VB do ^ OK
that DT that ^ OK
when WRB when ^ OK
you PRP you ^ OK
're VBP 're ^ OK
you PRP you ^ OK
know VBP know ^ OK
restricted VBN restricted ^ OK
either RB either ^ OK
outside RB outside ^ OK
or CC or ^ OK
restricted VBN restricted ^ OK
going VBG going ^ OK
to IN to ^ OK
a DT ^ ^ repeat
um UH ^ ^ filler
a DT a ^ OK
workout NN workout ^ OK
center NN center ^ OK

we PRP we ^ OK
do VBP do ^ OK
th- DT ^ ^ repeat
those DT those ^ OK
on IN on ^ OK
vacation NN vacation ^ OK
in IN in ^ OK
the DT the ^ OK
car NN car ^ OK

so UH ^ ^ false_start
so UH ^ ^ false_start
p- XX ^ ^ repeat
did VBD did ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
said VBD ^ ^ repeat
say VB say ^ OK
football NN football ^ OK

or CC ^ ^ false_start
or CC ^ ^ false_start
we PRP we ^ OK
do VBP do ^ OK
board NN board ^ OK
games NNS games ^ OK

we PRP we ^ OK
have VBP have ^ OK
table NN an ^ false_start
air NN air ^ OK
hockey NN hockey ^ OK
table NN table ^ OK

but CC but ^ OK
if IN ^ ^ repeat
if IN if ^ OK
inside IN inside ^ OK
your PRP your ^ OK
home NN home ^ OK
a- IN a- ^ OK
although IN although ^ OK
i PRP i ^ OK
g- VBP g- ^ OK
think VBP think ^ OK
inside RB inside ^ OK
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
necessarily RB necessarily ^ OK
mean VB mean ^ OK
in IN in ^ OK
your PRP your ^ OK
home NN home ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
could MD could ^ OK
mean VB mean ^ OK
going VBG going ^ OK
out RB out ^ OK
to IN to ^ OK
say UH ^ ^ filler
like UH ^ ^ filler
a DT a ^ OK
roller NN roller ^ OK
skating NN skating ^ OK
rink NN rink ^ OK
or CC or ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK
where WRB where ^ OK
you PRP you ^ OK
're VBP 're ^ OK
inside RB inside ^ OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
wi- IN ^ ^ repeat
with IN with ^ OK
you PRP you ^ OK
on IN on ^ OK
that DT that ^ OK

um UH ^ ^ filler
so RB ^ ^ repeat
so RB so ^ OK
that DT that ^ OK
answers VBZ answers ^ OK
the DT the ^ OK
first JJ first ^ OK
question NN question ^ OK

um UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
second JJ second ^ OK
question NN question ^ OK
was VBD was ^ OK
uh UH ^ ^ filler
why WRB why ^ OK
does VBZ does ^ OK
everyone NN everyone ^ OK
else RB else ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK
too RB too ^ OK
mu- JJ mu- ^ OK

well UH ^ ^ false_start
so UH ^ ^ false_start
eh UH ^ ^ filler
uh UH ^ ^ filler
to IN to ^ OK
my PRP my ^ OK
mind NN mind ^ OK
there EX ^ ^ repeat
there RB ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
a DT a ^ OK
couple NN couple ^ OK
pieces NNS pieces ^ OK

one CD one ^ OK
of IN of ^ OK
which WDT which ^ OK
is VBZ is ^ OK
there EX ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
um UH ^ ^ filler
there EX there ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a ^ OK
ki- XX ^ ^ repeat
prurient JJ prurient ^ OK
uh UH ^ ^ filler
interest NN interest ^ OK
um UH ^ ^ filler
in IN in ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
them PRP them ^ OK

a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
them PRP them ^ OK
have VBP have ^ OK
to TO to ^ OK
do VB do ^ OK
with IN with ^ OK
people NNS people ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
getting VBG getting ^ OK
together RB together ^ OK
uh UH ^ ^ filler
intimately RB intimately ^ OK
and CC ^ ^ repeat
um UH ^ ^ filler
and CC and ^ OK
then RB then ^ OK
uh UH ^ ^ filler
fighting VBG fighting ^ OK
about IN about ^ OK
it PRP it ^ OK
huh UH ^ ^ filler
if IN ^ ^ false_start
you PRP ^ ^ false_start
will MD ^ ^ false_start

tha- DT ^ ^ repeat
that- DT ^ ^ repeat
th- DT ^ ^ repeat
that DT ^ ^ repeat
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
how WRB how ^ OK
they PRP they ^ OK
started VBD started ^ OK
if ADVP-MNR- 1 if ^ OK
you IN you ^ OK
remember PRP remember ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
'd MD ^ ^ false_start
y- PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
so RB ^ ^ false_start
into IN ^ ^ false_start
the DT ^ ^ false_start
there EX there ^ OK
'd MD 'd ^ OK
be VB be ^ OK
like UH ^ ^ filler

and CC ^ ^ false_start
eh UH ^ ^ filler
eh UH ^ ^ filler
well UH ^ ^ filler
what WP ^ ^ repeat
what WP what ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
then RB then ^ OK
added VBD added ^ OK
on RP on ^ OK
was VBD was ^ OK
disgusting JJ disgusting ^ OK
stuff NN stuff ^ OK
like IN like ^ OK
uh UH ^ ^ filler
eating VBG eating ^ OK
worms NNS worms ^ OK
and CC and ^ OK
putting VBG putting ^ OK
your PRP your ^ OK
head NN head ^ OK
into IN into ^ OK
a DT a ^ OK
bowl NN bowl ^ OK
full JJ full ^ OK
of IN of ^ OK
beetles NNS beetles ^ OK
and CC ^ ^ false_start
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
garbage NN ^ ^ false_start

but CC but ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's S-1 's ^ OK
kind BES kind ^ OK
of RB of ^ OK
interesting RB interesting ^ OK
i JJ ^ ^ false_start
guess PRP ^ ^ false_start
watch- VBP watch- ^ OK

and CC ^ ^ repeat
uh UH ^ ^ filler
a- CC ^ ^ repeat
and CC ^ ^ false_start
then RB then ^ OK
you PRP you ^ OK
go VBP go ^ OK
from IN from ^ OK
there RB there ^ OK
to IN to ^ OK
the DT ^ ^ repeat
the DT the ^ OK
dangerous JJ dangerous ^ OK
ones NNS ones ^ OK
where WRB where ^ OK
somebody NN somebody ^ OK
could MD could ^ OK
theoretically RB theoretically ^ OK
actually RB actually ^ OK
get VB get ^ OK
hurt JJ hurt ^ OK

um UH ^ ^ filler
which WDT ^ ^ repeat
which WDT which ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
always RB always ^ OK
popular JJ popular ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
to TO to ^ OK
watch VB watch ^ OK
the DT the ^ OK

so RB so ^ OK
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT a ^ OK
basic JJ basic ^ OK
human JJ human ^ OK
nature NN nature ^ OK
uh UH ^ ^ filler
r- NN ^ ^ repeat
r- NN ^ ^ repeat
uh UH ^ ^ filler
rubber NN rubber ^ false_start
necking NN necking ^ false_start
element NN element ^ OK
uh UH ^ ^ filler
the DT ^ ^ repeat
the DT ^ ^ false_start
element NN ^ ^ repeat
i PRP ^ ^ false_start
think VBP ^ ^ false_start

you- PRP ^ ^ repeat
your PRP your ^ OK
thoughts NNS thoughts ^ OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
basically RB basically ^ OK
what WP what ^ OK
it PRP it ^ OK
is VBZ is ^ OK
is NP-PRD-1 is ^ OK
voyeurism VBZ voyeurism ^ OK
as NN as ^ OK
far RB far ^ OK
as RB as ^ OK
i IN i ^ OK
'm PRP 'm ^ OK
concerned VBP concerned ^ OK

well UH ^ ^ false_start
i PRP i ^ OK
actually RB actually ^ OK
kind RB kind ^ OK
of RB of ^ OK
like VBP like ^ OK
the DT ^ ^ false_start
wheel NNP wheel ^ OK
of IN of ^ OK
fortune NNP fortune ^ OK
because IN ^ ^ false_start

uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
good JJ good ^ OK
at IN at ^ OK
it PRP it ^ OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
good JJ ^ ^ repeat
good JJ good ^ OK
at IN ^ ^ repeat
at IN at ^ OK
word NN word ^ OK
games NNS games ^ OK

eh UH eh ^ OK

eh UH ^ ^ filler
well UH ^ ^ false_start
they PRP they ^ OK
're VBP 're ^ OK
not RB not ^ OK

um UH ^ ^ filler
they PRP they ^ OK
're VBP 're ^ OK

well UH well ^ OK
eh UH eh ^ OK
no UH no ^ OK

they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP ^ ^ repeat
're VBP 're ^ OK
game NN game ^ OK
shows NNS shows ^ OK

and CC ^ ^ repeat
y- PRP ^ ^ repeat
and CC ^ ^ false_start
you PRP you ^ OK
get VBP get ^ OK
a DT a ^ OK
prize NN prize ^ OK

eh UH ^ ^ filler
eh UH ^ ^ filler
a- RB ^ ^ repeat
actually RB actually ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'd MD ^ ^ repeat
would MD ^ ^ repeat
would MD would ^ OK
liken VB liken ^ OK
it PRP it ^ OK
more RBR more ^ OK
to IN to ^ OK
uh UH ^ ^ filler
wrestling NN wrestling ^ OK

where WRB ^ ^ repeat
where WRB where ^ OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
scrip- VBN scrip- ^ OK

i PRP i ^ OK

eh UH ^ ^ filler
eh UH ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'd MD ^ ^ repeat
i PRP i ^ OK
suppose VBP suppose ^ OK
so RB so ^ OK

um UH ^ ^ filler
eh UH ^ ^ filler
my PRP ^ ^ repeat
my PRP my ^ OK
suspicion NN suspicion ^ OK
is VBZ is ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
highly RB highly ^ OK
scripted JJ scripted ^ OK

i PRP i ^ OK
eh UH eh ^ OK

uh UH ^ ^ filler
and CC ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
w- UH ^ ^ repeat
well UH ^ ^ false_start
for IN for ^ OK
example NN example ^ OK
the DT ^ ^ repeat
uh UH ^ ^ filler
they PRP they ^ OK
mentioned VBD mentioned ^ OK
uh UH ^ ^ filler
joe NNP joe ^ false_start
millionaire NNP millionaire ^ false_start
on IN ^ ^ repeat
the DT ^ ^ repeat
on IN on ^ OK
the DT the ^ OK
tape NN tape ^ OK
here RB here ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
you PRP you ^ OK
've VBP 've ^ OK
seen VBN seen ^ OK
any DT any ^ OK
of IN of ^ OK
the DT the ^ OK
commercials NNS commercials ^ OK
for IN for ^ OK
it PRP it ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
some DT ^ ^ repeat
some DT some ^ OK
con- NN ^ ^ repeat
construction NN construction ^ OK
guy NN guy ^ OK
from IN from ^ OK
new NNP new ^ OK
jersey NNP jersey ^ OK

so UH so ^ OK
fine UH fine ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
unlimited JJ unlimited ^ OK
cash NN cash ^ OK
stores NNS stores ^ OK

bills NNS bills ^ OK
would MD would ^ OK
n't RB n't ^ OK
be VB be ^ OK
an DT an ^ OK
iss- NN issue ^ false_start

someone NN someone ^ OK
to TO to ^ OK
pay VB pay ^ OK
my PRP my ^ OK
bills NNS bills ^ OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
like UH ^ ^ repeat
an DT ^ ^ repeat
like UH ^ ^ filler
an DT an ^ OK
hour NN hour ^ OK
drive NN drive ^ OK

um UH ^ ^ filler
actually RB actually ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
work VBP work ^ OK
in IN in ^ OK
health NN health ^ OK
services NNS services ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
check VBP check ^ OK
out RP out ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
like UH ^ ^ filler
different JJ different ^ OK
clinics NNS clinics ^ OK
and CC and ^ OK
lots NNS lots ^ OK
of IN of ^ OK
different JJ different ^ OK
centers NNS centers ^ OK
and CC and ^ OK
see VB see ^ OK
how WRB how ^ OK
they PRP they ^ OK
're VBP 're ^ OK
running VBG running ^ OK

bring VB bring ^ OK
them PRP them ^ OK
information NN information ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB kind ^ OK
of RB of ^ OK
help VB help ^ OK
them PRP them ^ OK
out RP out ^ OK
when WRB when ^ OK
they PRP they ^ OK
're VBP 're ^ OK
like UH ^ ^ filler
short-staffed JJ short-staffed ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP you ^ OK
get VBP ^ ^ repeat
get VBP get ^ OK
to TO ^ ^ repeat
to TO to ^ OK
s- VB ^ ^ repeat
see VB see ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
different JJ different ^ OK
people NNS people ^ OK

right UH ^ ^ filler
right UH ^ ^ filler
e- DT ^ ^ repeat
every DT every ^ OK
once RB once ^ OK
in IN in ^ OK
a DT a ^ OK
while NN while ^ OK
it PRP it ^ OK
does VBZ does ^ OK
get VB get ^ OK
a DT a ^ OK
little RB little ^ OK
stressful JJ stressful ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
pretty RB pretty ^ OK
good JJ good ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
thought VBD thought ^ OK
i PRP i ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
move VB move ^ OK
to IN ^ ^ repeat
to IN to ^ OK
uh UH ^ ^ filler
washington NNP washington ^ OK
d. NNP d. ^ OK
c. NNP c. ^ OK

so UH ^ ^ false_start
but CC but ^ OK
i PRP i ^ OK
just RB just ^ OK
sent VBD sent ^ OK
it PRP it ^ OK
to IN to ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT ^ ^ repeat
all PDT all ^ OK
the DT ^ ^ repeat
the DT the ^ OK
different JJ different ^ OK
cities NNS cities ^ OK
and CC and ^ OK
it PRP it ^ OK
got VBD got ^ OK
picked VBN picked ^ OK
up RP up ^ OK
here RB here ^ OK

i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
here RB here ^ OK
a DT a ^ OK
year NN year ^ OK

um UH ^ ^ filler
it PRP ^ ^ false_start
's HVS ^ ^ false_start
got VBN ^ ^ false_start
s- RB ^ ^ false_start
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
so RB so ^ OK
much JJ much ^ OK

like UH ^ ^ filler
in IN in ^ OK
comparison NN comparison ^ OK
to IN to ^ OK
baltimore NNP baltimore ^ OK
which WDT which ^ OK
just RB ^ ^ false_start
is VBZ ^ ^ repeat
a DT ^ ^ false_start
r- XX ^ ^ false_start
it PRP ^ ^ repeat
's BES ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
's BES is ^ OK
a DT a ^ OK
big JJ big ^ OK
city NN city ^ OK

um UH um ^ OK
so UH so ^ OK
it PRP it ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
definitely RB ^ ^ repeat
definitely RB definitely ^ OK
like VBP like ^ OK
philadelphia NNP philadelphia ^ OK
better RBR better ^ OK

and CC ^ ^ false_start
there EX ^ ^ repeat
the DT ^ ^ repeat
the DT the ^ OK
people NNS people ^ OK
's HVS ^ ^ repeat
are VBP are ^ OK
more RBR ^ ^ repeat
di- NN ^ ^ repeat
mi- XX ^ ^ repeat
more RBR more ^ OK
diverse JJ diverse ^ OK

mean VBP mean ^ OK
not RB not ^ OK
i PRP i ^ OK
mean VBP mean ^ OK
it PRP it ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
being VBG being ^ OK
stereotypical JJ stereotypical ^ OK

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
comfortable JJ comfortable ^ OK
city NN city ^ OK

it PRP it ^ OK
's BES 's ^ OK
like UH ^ ^ filler
a DT a ^ OK
great JJ great ^ OK
place NN place ^ OK
to TO to ^ OK
settle VB settle ^ OK
down RP down ^ OK
and CC and ^ OK
raise VB raise ^ OK
a DT a ^ OK
family NN family ^ OK
um ADVP-LOC- 1 ^ ^ filler
like UH ^ ^ filler
because UH because ^ OK
it IN it ^ OK
's PRP 's ^ OK
got HVS got ^ OK
a VBN a ^ OK
lot DT lot ^ OK
of NN of ^ OK
resources IN resources ^ OK
that NNS that ^ OK
s- WDT ^ ^ false_start
cities XX cities ^ OK
have NNS have ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
bit NN bit ^ OK
t- JJR ^ ^ repeat
tamer JJR tamer ^ OK
like UH ^ ^ filler
than IN than ^ OK
philadelphia NNP philadelphia ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
not RB ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
the DT the ^ OK
pace NN pace ^ OK
is VBZ is ^ OK
slower JJR slower ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
does VBZ does ^ OK
wonders NNS wonders ^ OK

m- JJS ^ ^ repeat
m- JJS ^ ^ repeat
most JJS most arg0 OK
of IN of arg0 OK
my PRP my arg0 OK
family NN family arg0 OK
does VBZ does ^ OK
live VB live predicate OK
in IN in argM_loc OK
new NNP new argM_loc OK
york NNP york argM_loc OK

and CC ^ ^ repeat
and CC ^ ^ false_start
may- RB ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
w- WRB ^ ^ repeat
where WRB where arg1 OK
your PRP your arg2 OK
family NN family arg2 OK
is VBZ is arg1 OK

if ADVP-LOC- PRD-1 if ^ OK
they IN they ^ OK
're PRP 're ^ OK
all VBP all ^ OK
in DT in ^ OK
connecticut IN connecticut ^ OK
or NNP or ^ OK
if CC if ^ OK
they IN they ^ OK
live PRP live ^ OK
in VBP in ^ OK
other IN other ^ OK
places JJ places ^ OK

but CC but ^ OK
if IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
they PRP ^ ^ repeat
they PRP they arg0 OK
live VBP live predicate OK
in IN in argM_loc OK
connecticut NNP connecticut argM_loc OK
the- XX ^ ^ false_start
you PRP you arg0 OK
probably RB probably ^ OK
get VBP get ^ OK
to TO to ^ OK
see VB see predicate OK
all DT all arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
at IN at argM_tmp OK
christmas NNP christmas argM_tmp OK
time NN time argM_tmp OK

they PRP they arg0 OK
say VBP say predicate OK
it PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg1 false_start
it PRP ^ ^ false_start
country NN country arg1 false_start
's BES 's arg1 OK
really RB really arg2 OK
beautiful JJ beautiful arg2 OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
you NP-1 ^ ^ filler
know PRP ^ ^ filler
the VB ^ ^ false_start
w- DT ^ ^ false_start
you XX ^ ^ filler
know PRP ^ ^ filler
everything VBP everything ^ OK
about NN about ^ OK
it IN it ^ OK

you PRP ^ ^ false_start
know PRP ^ ^ false_start
what VBP ^ ^ false_start
i WP ^ ^ false_start
'm PRP ^ ^ false_start
saying VBP ^ ^ false_start
the VBG the ^ OK
land NP-2 land ^ OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
they NP-1 they arg0 OK
say PRP say predicate OK
that VBP that arg1 OK
it IN it arg1 OK
's PRP 's arg1 OK
such BES such arg2 OK
a PDT a arg2 OK
pretty DT pretty arg2 OK
you JJ ^ ^ filler
know PRP ^ ^ filler
and VBP and arg2 OK
beautiful CC beautiful arg2 OK
place JJ place arg4 OK
to NN to arg2 OK
go TO go arg2 OK

so UH ^ ^ false_start
i PRP i arg0 OK
know VBP know predicate OK
we PRP we arg0 OK
have VBP have arg1 OK
to TO to arg1 OK
talk VB talk arg1 OK
more RBR more arg1 OK
about IN about arg1 OK
christmas NNP christmas arg1 OK
for IN for argM_tmp OK
the DT the argM_tmp OK
rest NN rest argM_tmp OK
of IN of argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

neither RB neither ^ OK
do VBP do ^ OK
i VP i ^ OK

both DT both arg0 OK
of IN of arg0 OK
us PRP us arg0 OK
do VBP do ^ OK
like VP like predicate OK
and UH ^ ^ false_start
you CC ^ ^ filler
know PRP ^ ^ filler
christmas VBP christmas arg1 OK

i- NNP ^ ^ false_start
that XX that arg1 OK
's DT 's predicate OK
our BES our arg2 OK
favorite PRP favorite arg2 OK
holiday JJ holiday arg2 OK

um UH ^ ^ filler
mhm UH ^ ^ filler
jul- NNP jul- ^ OK

but CC but ^ OK
christmas NNP christmas arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
holiday NN holiday arg2 OK
where WRB where ^ OK
people NNS people arg0 OK
usually RB usually ^ OK
give VB give predicate OK
presents NNS presents arg1 OK
or CC ^ ^ repeat
a XX ^ ^ false_start
g- XX ^ ^ repeat
g- XX ^ ^ false_start
or CC or ^ OK
receive VB receive predicate OK
presents NNS presents arg1 OK

so RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
usually RB usually ^ OK
more RBR more ^ OK
fun JJ fun ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
j- NP-1 ^ ^ false_start
because XX because ^ OK
you IN you ^ OK
g- PRP ^ ^ false_start

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
everybody NP-1 everybody arg0 OK
's NN 's ^ OK
r- BES ^ ^ repeat
running VBG running predicate OK
around VBG around arg1 OK
looking RB looking predicate OK
for VBG for arg1 OK
a IN a arg1 OK
christmas DT christmas arg1 OK
gift NNP gift arg1 OK
especially NN especially ^ OK
at RB at argM_tmp OK
the IN the argM_tmp OK
last DT last argM_tmp OK
moment JJ moment argM_tmp OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
if NP-1 if ^ OK
they IN they arg1 OK
wait PRP wait predicate OK
it VBP ^ ^ false_start
's PRP ^ ^ false_start
the RB the arg1 OK
stores DT stores arg1 OK
get NNS get ^ OK
so BES ^ ^ repeat
s- VBP ^ ^ repeat
really RB ^ ^ false_start
so RB so ^ OK
jam RB jam ^ OK
packed NN packed predicate OK

s- XX ^ ^ repeat
right UH right ^ OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
i- NP-1 ^ ^ false_start
you XX ^ ^ false_start
know PRP ^ ^ false_start
what VBP ^ ^ false_start
i WP ^ ^ false_start
'm PRP ^ ^ false_start
saying VBP ^ ^ false_start
so VBG ^ ^ false_start
that NP-2 ^ ^ false_start
the RB the arg1 OK
city IN city arg1 OK
is DT is predicate OK
so NN so arg2 OK
busy VBZ busy arg2 OK
during RB during argM_tmp OK
that JJ that argM_tmp OK
season IN season argM_tmp OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
and NP-1 ^ ^ false_start
i CC i arg0 OK
like PRP like predicate OK
it VBP it arg1 OK
because PRP because ^ OK
i IN i arg1 OK
'm PRP 'm predicate OK
a VBP a arg2 OK
new DT new arg2 OK
yorker NNP yorker arg2 OK

but CC but ^ OK
you PRP you arg1 OK
're VBP 're predicate OK
from IN from arg2 OK
connecticut NNP connecticut arg2 OK
which WDT which arg1 OK
is VBZ is predicate OK
probably RB probably arg2 OK
a DT a arg2 OK
quieter JJ quieter arg2 OK
state NN state arg2 OK
than IN than arg2 OK
new NNP new arg2 OK
york NNP york arg2 OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
so NP-1 ^ ^ false_start
you RB you ^ OK
know PRP know ^ OK
that VBP that ^ OK
even IN even ^ OK
if RB if ^ OK
you IN you ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
go RB ^ ^ false_start
in VB ^ ^ false_start
or IN ^ ^ false_start
come UH come ^ OK
into VBP into ^ OK
manhattan IN manhattan ^ OK
with NNP with ^ OK
a IN a ^ OK
car DT car ^ OK
even NN even ^ OK
to RB to ^ OK
walk TO walk ^ OK
around VB around ^ OK
is RB is ^ OK
so VBZ so ^ OK
un- RB ^ ^ false_start
so VBZ _ARG_ ^ false_start

i PRP i arg0 OK
would MD would ^ OK
just RB just ^ OK
say VB say predicate OK
a DT ^ ^ repeat
c- XX ^ ^ false_start
a DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
festive JJ ^ ^ repeat
festive JJ festive arg1 OK
holiday NN ^ ^ repeat
holiday NN holiday arg1 OK
where WRB where arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
get VBP get arg1 OK
to TO to arg1 OK
see VB see arg1 OK
your PRP your arg1 OK
relatives NNS relatives arg1 OK
and CC and arg1 OK
your PRP your arg1 OK
friends NNS friends arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
would MD would ^ OK
say VB say predicate OK
something NN something arg1 OK
where WRB where arg1 OK
you PRP you arg0 OK
also RB also arg1 OK
give VBP give arg1 OK
gifts NNS gifts arg1 OK
or CC or arg1 OK
get VBP get arg1 OK
gifts NNS gifts arg1 OK

because ADVP-TMP- 1 because ^ OK
it IN it arg1 OK
's PRP 's predicate OK
always S-2 always arg2 OK
nice BES nice arg2 OK
to RB to ^ OK
get JJ get predicate OK
something TO something arg1 OK
you VB ^ ^ false_start
know NN ^ ^ false_start
what PRP ^ ^ false_start
i VBP ^ ^ false_start
'm WP ^ ^ false_start
saying PRP ^ ^ false_start
that VBP that ^ OK
you VBG you arg0 OK
've NP-3 've ^ OK
always WDT always argM_tmp OK
wanted PRP wanted predicate OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
and NP-1 ^ ^ false_start
you CC ^ ^ filler
know PRP at argM_tmp filler
christmas VBP christmas argM_tmp OK
time NNP time argM_tmp OK
you RB you arg0 OK
usually NN usually ^ false_start
get PRP get predicate OK
things VBP things arg1 OK
that NNS that arg1 OK
you WDT ^ ^ repeat
you PRP you arg0 OK
need PRP need arg1 OK
or VBP or arg1 OK
you NP-2 you arg0 OK
're CC ^ arg1 false_start
really PRP really arg1 OK
wanted VBP wanted arg1 OK

so RB ^ ^ false_start
i PRP i arg0 OK
would MD would ^ OK
make VB make predicate OK
a DT a arg1 OK
holiday NN holiday arg1 OK
where WRB where arg2 OK
people NNS people arg0 OK
get VBP get arg2 OK
to TO to arg2 OK
s- VB ^ ^ false_start
come VB come arg2 OK
together RB together arg4 OK
and ADVP-TMP- 2 and arg2 OK
be CC ^ ^ false_start
spend VB spend arg2 OK
time VB time arg1 OK
with NN with arg2 OK
each IN each arg2 OK
other DT other arg2 OK
and JJ and arg2 OK
exchange ADVP-TMP- 2 exchange arg2 OK
gifts CC gifts arg1 OK
also VB also arg2 OK

i UNK ^ ^ repeat
i UNK i arg0 OK
would UNK ^ ^ repeat
would UNK would ^ OK
say UNK say predicate OK
it UNK it arg2 OK
just UNK ^ ^ repeat
just UNK ^ ^ repeat
just UNK just ^ OK
to UNK to ^ OK
celebrate UNK celebrate ^ OK
um UNK ^ predicate filler

it PRP it ^ OK
's BES 's ^ OK
hard JJ hard ^ OK
with IN ^ ^ repeat
with IN ^ ^ filler
you PRP you ^ OK
're VBP 're ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
eat VB eat ^ OK
all PDT all ^ OK
the DT the ^ OK
vegetables NNS vegetables ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
you PRP you ^ OK
got VBN have ^ false_start
to TO to ^ OK
cook VB cook ^ OK
the DT ^ ^ repeat
the DT the ^ OK
greens NNS greens ^ OK
and CC and ^ OK
the DT the ^ OK
string NN string ^ OK
beans NNS beans ^ OK

we PRP ^ ^ repeat
we PRP we ^ OK
we PRP ^ ^ false_start
on IN are ^ false_start
on IN on ^ OK
the DT the ^ OK
run NN run ^ OK

we PRP ^ ^ false_start
we PRP we ^ OK
go VBP ^ ^ repeat
go VBP ^ ^ repeat
go VBP go ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

eh UH ^ ^ filler
for IN for ^ OK
one CD one ^ OK
grapefruit NN grapefruit ^ OK

and CC ^ ^ false_start
it PRP ^ ^ filler
's BES ^ ^ filler
like IN ^ ^ filler
the DT the ^ OK
fast JJ fast ^ OK
food NN food ^ OK
be VB is ^ false_start
filling VBG filling ^ OK
you PRP you ^ OK
up RP up ^ OK
more RBR more ^ OK
even RB even ^ OK
though IN though ^ OK
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
nutritional JJ nutritional ^ OK
or CC ^ ^ false_start
whatever WP ^ ^ false_start
for IN for ^ OK
your PRP your ^ OK
body NN body ^ OK

you PRP you ^ OK
be VB are ^ OK
feeling VBG feeling ^ OK
so RB so ^ OK
empty JJ empty ^ OK
empty JJ ^ ^ false_start
hungry JJ and ^ false_start
like UH ^ ^ filler
thirty CD thirty ^ OK
minutes NNS minutes ^ OK
later RBR later ^ OK
you PRP you ^ OK
be VB are ^ OK
hungry JJ hungry ^ OK
again RB again ^ OK

it PRP it ^ OK
's BES 's ^ OK
just RB just ^ false_start
so RB so ^ OK
weird JJ weird ^ OK
talk VB to ^ false_start
talk VB talk ^ OK
to IN to ^ OK
me PRP me ^ OK

so RB ^ ^ filler
was VBD was ^ OK
i ADVP-PRD- 1 i ^ OK
for PRP for ^ OK
school IN school ^ OK
or NN ^ ^ false_start
whatever CC ^ ^ false_start

i PRP i ^ OK
h- VBP h- ^ OK

well UH ^ ^ filler
in IN ^ ^ filler
getting VBG getting ^ OK
back RB back ^ OK
to IN to ^ OK
the DT the ^ OK
nutritional JJ nutritional ^ OK
thing NN thing ^ OK
what WP what ^ OK
i PRP i ^ OK
was VBD was ^ OK
saying VBG saying ^ OK
about IN about ^ OK
the DT the ^ OK
carbohydrates NNS carbohydrates ^ OK

if IN ^ ^ false_start
you PRP ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all ^ OK
the DT the ^ OK
starchy JJ starchy ^ OK
foods NNS foods ^ OK
like IN like ^ OK
pasta NN pasta ^ OK
and CC and ^ OK
bread NN bread ^ OK
it PRP it ^ OK
's SBAR-1 's ^ OK
almost BES almost ^ OK
inevitable RB inevitable ^ OK
for JJ for ^ OK
you IN you ^ OK
to PRP to ^ OK
eat TO eat ^ OK
bread VB bread ^ OK
everyday NN everyday ^ OK
like RB ^ ^ filler
with UH with ^ OK
a IN a ^ OK
sandwich DT sandwich ^ OK
or NN or ^ OK
with CC with ^ OK
a IN a ^ OK
burger DT burger ^ OK
or NN ^ ^ false_start
whatever CC ^ ^ false_start
you WP ^ ^ false_start
eat PRP ^ ^ false_start
bread VBP ^ ^ false_start

or CC or ^ OK
even RB ^ ^ filler
egg NN egg ^ OK
roll NN roll ^ OK
if IN if ^ OK
you PRP you ^ OK
like VBP like ^ OK
chinese JJ chinese ^ OK
food NN food ^ OK

it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
bunch NN bunch ^ OK
of IN of ^ OK
starch NN starch ^ OK
because IN because ^ OK
starch NN starch ^ OK
is VBZ is ^ OK
what WP what ^ OK
fills VBZ fills ^ OK
you PRP you ^ OK
up RP up ^ OK
fast RB fast ^ OK

i- XX ^ ^ false_start
what WP what ^ OK
'd VBD 'd ^ OK
you PRP you ^ OK
say VB say ^ OK

a UNK a ^ OK

so RB ^ ^ false_start
christmas NNP christmas ^ OK
thanksgiving NNP thanksgiving ^ OK
are VBP are ^ OK
h- NNS ^ ^ repeat
holidays NNS holidays ^ OK
but CC but ^ OK
really RB really ^ OK
they PRP they ^ OK
're VBP 're ^ OK
more RBR more ^ OK
family NN family ^ OK
oriented JJ oriented ^ OK

whereas IN whereas ^ OK
july NNP july ^ OK
fourth JJ fourth ^ OK
is VBZ is ^ OK
more JJR more ^ OK
friends NNS friends ^ OK
oriented NAC-1 oriented ^ OK
and JJ and ^ OK
family CC family ^ OK

though RB though ^ OK
you PRP you ^ OK
might MD might ^ OK
get VB get ^ OK

and CC ^ ^ false_start
well RB ^ ^ filler
not RB not ^ OK
lately RB lately ^ OK
especially RB especially ^ OK

where WRB ^ ^ repeat
where WRB where ^ OK
do VBP do ^ OK
you PRP you ^ OK
reside VB reside ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
how WRB how ^ OK
long RB long ^ OK
are VBP are ^ OK
these DT these ^ OK
little JJ little ^ OK
interviews NNS interviews ^ OK
discussions NNS discussions ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK

or CC ^ ^ repeat
or CC or ^ OK
a DT a ^ OK
li- JJ ^ ^ repeat
little JJ little ^ OK
bell NN bell ^ OK
goes VBZ goes ^ OK
off RB off ^ OK
or CC or ^ OK
some DT some ^ OK
such JJ such ^ OK

i PRP i ^ OK
think VBP think ^ OK
that DT that ^ OK
's BES 's ^ OK
's BES _ARG_ ^ false_start

well UH ^ ^ filler
we PRP we ^ OK
teachers NNS teachers ^ OK
' POS ' ^ OK
day NN day ^ OK

how WRB how ^ OK
about IN about ^ OK
a DT a ^ OK
legal JJ legal ^ OK
holiday NN holiday ^ OK
in IN in ^ OK
terms NNS terms ^ OK
of IN of ^ OK
business NN business ^ OK
because IN because ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
the DT the ^ OK
economic JJ economic ^ OK
repercussions NNS repercussions ^ OK
of IN of ^ OK
w- XX ^ ^ false_start
yet RB yet ^ OK
one CD one ^ OK
more JJR more ^ OK
paid VBN paid ^ OK
holiday NN holiday ^ OK
on IN on ^ OK
the DT the ^ OK
economy NN economy ^ OK

so RB ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
how WRB how ^ OK
would MD would ^ OK
you PRP you ^ OK
celebrate VB celebrate ^ OK
it PRP it ^ OK

i PRP i ^ false_start
suppose VBP suppose ^ false_start
thank VBP thank ^ OK
that DT that ^ OK
one CD one ^ OK
teacher NN teacher ^ OK
that WDT that ^ OK
gave VBD gave ^ OK
you PRP you ^ OK
the DT the ^ OK
inspiration NN inspiration ^ OK
to TO to ^ OK
finish VB finish ^ OK
school NN school ^ OK

or CC ^ ^ false_start
i PRP i ^ OK
remember VBP remember ^ OK
i PRP i ^ OK
had VBD had ^ OK
a DT a ^ OK
teacher NN teacher ^ OK
like IN like ^ OK
that DT that ^ OK
who WP who ^ OK

well UH ^ ^ false_start
without IN without ^ OK
him PRP him ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB ^ ^ repeat
know VB know ^ OK
what WP what ^ OK
might MD might ^ OK
've VBP 've ^ OK
happened VBN happened ^ OK

but CC but ^ OK
he PRP he ^ OK
did VBD did ^ OK
sort RB sort ^ OK
of RB of ^ OK
kindle VB kindle ^ OK
that DT that ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
inquisitive JJ inquisitive ^ OK
mind NN mind ^ OK

that DT ^ ^ repeat
that DT that ^ OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
really RB really ^ OK
create VB create ^ OK
chaos NN chaos ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
like VBP like ^ OK
the DT the ^ OK
idea NN idea ^ OK

but CC ^ ^ false_start
oh UH ^ ^ filler
a DT ^ ^ repeat
a DT a ^ OK
lot NN ^ ^ repeat
lot NN lot ^ OK
of IN ^ ^ repeat
of IN of ^ OK
places NNS places ^ OK
and CC and ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
political JJ political ^ OK
offices NNS offices ^ OK
have VBP have ^ OK
mayor NN a ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
mayor NN mayor ^ OK
for IN for ^ OK
a DT a ^ OK
day NN day ^ OK
mayor NN ^ ^ false_start
thing NN and ^ false_start
kind NN kind ^ OK
of IN of ^ OK
a DT a ^ OK
thing NN thing ^ OK

but CC but ^ OK
if IN if ^ OK
you PRP you ^ OK
could MD could ^ OK
actually RB actually ^ OK
actually RB ^ ^ false_start
sit VB sit ^ OK
down RP down ^ OK
and CC and ^ OK
participate VB participate ^ OK
in IN in ^ OK
a DT a ^ OK
vote NN vote ^ OK
that WDT that ^ OK
counted VBN counted ^ OK
for IN for ^ OK
real JJ real ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
ho- WRB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
many JJ many ^ OK
political JJ political ^ OK
people NNS people ^ OK
would MD would ^ OK
strategize VB strategize ^ OK
and CC and ^ OK
try VB try ^ OK
to TO to ^ OK
stack VB stack ^ OK
the DT the ^ OK
deck NN deck ^ OK
for IN for ^ OK
that DT that ^ OK
one CD one ^ OK
day NN day ^ OK

but CC ^ ^ false_start
uh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP guess ^ OK
if IN if ^ OK
the DT the ^ OK
people NNS people ^ OK
could MD could ^ OK
actually RB ^ ^ repeat
actually UH actually ^ OK

if IN if ^ OK
their PRP their ^ OK
voices NNS voices ^ OK
could MD could ^ OK
actually RB actually ^ OK
be VB be ^ OK
heard VBN heard ^ OK
and NP-1 and ^ OK
the CC the ^ OK
vote DT vote ^ OK
actually NN actually ^ OK
be RB be ^ OK
based VB based ^ OK
on VBN on ^ OK
what IN what ^ OK
the WP the ^ OK
constituency DT constituency ^ OK
wants NN wants ^ OK

i- PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
sorry JJ sorry ^ OK
because IN because ^ OK
now RB now ^ OK
it PRP it ^ OK
's BES 's ^ OK
all RP ^ ^ false_start
well UH ^ ^ false_start
i PRP i ^ OK
'll MD 'll ^ OK
vote VB vote ^ OK
for IN for ^ OK
this DT this ^ OK
if IN if ^ OK
you PRP you ^ OK
'll MD 'll ^ OK
vote VB vote ^ OK
for IN for ^ OK
that DT that ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
well UH ^ ^ false_start
i PRP i ^ OK
'll MD 'll ^ OK
vote VB vote ^ OK
for IN for ^ OK
this DT this ^ OK
bill NN bill ^ OK

yeah UH yeah ^ OK
eh UH ^ ^ filler

um UH ^ ^ filler
it PRP ^ ^ false_start
was VBD ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
nerve NN nerve arg2 OK
wracking VBG wracking arg2 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
still RB ^ ^ repeat
still RB still arg2 OK
scared JJ scared arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
nerve NN nerve arg2 OK
wracking VBG wracking arg2 OK

it PRP ^ ^ false_start
like UH ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
far RB ^ ^ repeat
far RB far arg2 OK
away RB away arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
n- VBP ^ ^ repeat
know VBP know predicate OK
from IN from arg2 OK
seeing VBG seeing arg2 OK
people NNS people arg1 OK
here RB here arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
definitely RB definitely ^ OK
think VBP think predicate OK
people NNS people arg0 false_start
here RB here arg1 OK
would MD would arg1 OK
panic VB panic arg1 OK
if IN if arg1 OK
there EX there arg1 OK
was VBD was arg1 OK
any DT any arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
attack NN attack arg2 OK
anywhere RB anywhere arg2 OK
only RB only ^ OK
because IN because ^ OK
we PRP we arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
the DT the arg2 OK
center NN center arg2 OK
in IN of arg2 false_start
the DT the arg2 OK
target NN target arg2 OK
of IN of arg2 OK
so RB so arg2 OK
many JJ many arg2 OK
things NNS things arg2 OK
so RB so arg2 OK
far RB far arg2 OK

which WDT which ^ OK
was VBD was ^ OK
really RB really ^ OK
surprising JJ surprising ^ OK
to IN to ^ OK
me PRP me ^ OK

see UH see ^ OK
i PRP i arg0 OK
know VBP know predicate OK
me PRP ^ ^ false_start
i PRP i arg0 OK
panicked VBD panicked arg1 OK
myself PRP myself arg0 false_start

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
extremely RB extremely arg2 OK
nervous JJ nervous arg2 OK
about IN about arg2 OK
everything NN everything arg2 OK
since IN since arg2 OK
september NNP september arg2 OK
eleventh JJ eleventh arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
have VBP have ^ OK
n't RB n't ^ OK
really RB really ^ OK
got VBN gotten predicate false_start
past IN past arg1 OK
it PRP it arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
flown VBN ^ ^ repeat
flown VBN flown predicate OK
since RB since argM_tmp OK

but CC ^ argM_tmp false_start
i PRP ^ ^ repeat
i PRP ^ ^ filler
guess VBP ^ ^ filler
i PRP i arg0 OK
feel VBP feel predicate OK
safer JJR safer arg1 OK
that IN now ^ false_start
that IN that argM_tmp OK
they PRP they arg0 OK
're VBP 're argM_tmp OK
doing VBG doing argM_tmp OK
that DT that arg1 OK
instead IN instead argM_tmp OK
of IN of argM_tmp OK
slacking VBG slacking argM_tmp OK
off RP off argM_tmp OK
and CC and argM_tmp OK
just RB just argM_tmp OK
letting VBG letting argM_tmp OK
things NNS things arg0 OK
fly VB fly argM_tmp OK

and CC ^ ^ false_start
that DT that ^ OK
college NN college ^ OK
student NN student ^ OK
with IN with ^ OK
the DT the ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
if IN ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
box NN box ^ OK
cutters NNS cutters ^ OK
or CC or ^ OK
bombs NNS bombs ^ OK
or CC ^ ^ repeat
or CC ^ ^ false_start
what WP ^ ^ false_start
he PRP ^ ^ false_start
brought VBD ^ ^ false_start
on RB ^ ^ false_start
but CC ^ ^ false_start
it PRP ^ ^ false_start
was VBD was ^ OK
that DT ^ ^ false_start
was VBD ^ ^ false_start
eye NN eye ^ OK
opening VBG opening ^ OK

which WDT which ^ OK
they PRP they ^ OK
should MD should ^ OK
have VB have ^ OK

i PRP i arg0 OK
think VBP think predicate OK
definitely RB definitely arg1 OK

eh UH ^ ^ filler
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
even RB even ^ OK
know VB know predicate OK
about IN about arg1 OK
it PRP it arg1 OK

i PRP ^ ^ repeat
i PRP i ^ OK
watch VBP watch ^ OK
it PRP it ^ OK

um UH ^ ^ filler
not RB not ^ OK
as RB as ^ OK
much RB much ^ OK
as IN as ^ OK
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
watch VBP watch ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
real NNP real ^ OK
world NNP world ^ OK
road NNP road ^ OK
rules NNP rules ^ OK
um UH ^ ^ filler
lately RB lately ^ OK

uh UH ^ ^ filler
uh UH ^ ^ filler
the DT the ^ OK
bachelor NNP bachelor ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
stuff NN stuff ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
more RBR more ^ OK

just RB just ^ OK
because IN because ^ OK
uh UH ^ ^ filler
um UH ^ ^ filler
uh UH ^ ^ filler
survivor NNP survivor ^ OK
's BES 's ^ OK
always RB always ^ OK
on RB on ^ OK
when WRB when ^ OK
friends NNPS friends ^ OK
is VBZ is ^ OK

where WRB ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
wher- WRB ^ ^ false_start
just RB just ^ OK
out IN out ^ OK
of IN of ^ OK
curiosity NN curiosity ^ OK
where WRB where ^ OK
's BES 's ^ OK
lodi NNP lodi ^ OK

because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
actually RB actually ^ OK
originally RB originally ^ OK
from IN from ^ OK
uh UH ^ ^ filler
oregon NNP oregon ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
just RB ^ ^ repeat
just RB just ^ OK
moved VBD moved ^ OK
to IN to ^ OK
texas NNP texas ^ OK

so UH so ^ OK
is VBZ is ^ OK
uh UH ^ ^ filler
survivor NNP survivor ^ OK
like UH ^ ^ filler
your PRP your ^ OK
favorite JJ favorite ^ OK
reality NN reality ^ OK
show NN show ^ OK
then RB ^ ^ false_start
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

um UH ^ ^ filler
the DT ^ ^ repeat
eh UH ^ ^ filler
the DT the ^ OK
bachelorette NNP bachelorette ^ OK

i PRP ^ ^ false_start
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP ^ ^ repeat
've VBP 've ^ OK
caught VBN caught ^ OK
a DT a ^ OK
litle JJ litle ^ OK
bit NN bit ^ OK
of IN of ^ OK
uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
um UH ^ ^ filler
american NNP american ^ OK
idol NNP idol ^ OK

i PRP i ^ OK
've VBP 've ^ OK
probably RB probably ^ OK
seen VBN seen ^ OK
almost RB almost ^ OK
all PDT all ^ OK
the DT the ^ OK
um UH ^ ^ filler

but CC but ^ OK
i PRP i ^ OK
missed VBD missed ^ OK
the DT the ^ OK
one NN one ^ OK
where WRB ^ ^ false_start
like UH ^ ^ filler
uh UH ^ ^ filler
last JJ last ^ OK
night NN night ^ OK
or CC or ^ OK
the DT the ^ OK
night NN night ^ OK
before RB before ^ OK
just RB just ^ OK
because IN because ^ OK
of IN of ^ OK
uh UH ^ ^ filler
work NN work ^ OK
commitments NNS commitments ^ OK

but CC but ^ OK
i PRP i ^ OK
actually RB actually ^ OK
do VBP do ^ OK
n't RB n't ^ OK
watch VB watch ^ OK
it PRP it ^ OK
eh UH ^ ^ filler
so RB so ^ OK
much RB much ^ OK

as IN ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
interest NN ^ ^ false_start
just RB just ^ OK
to TO to ^ OK
kind RB kind ^ OK
of RB of ^ OK
make VB make ^ OK
fun NN fun ^ OK
of IN of ^ OK
the DT the ^ OK
guy NN guy ^ OK
because IN because ^ OK
he PRP ^ ^ false_start
's BES ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
a DT ^ ^ false_start
he PRP he ^ OK
reminds VBZ reminds ^ OK
me PRP me ^ OK
of IN of ^ OK
puddy NNP puddy ^ OK
a PP-1 a ^ OK
lot DT lot ^ OK
from NN from ^ OK
seinfeld IN seinfeld ^ OK

so UH so ^ OK
just RB ^ ^ repeat
just RB just ^ OK
kind RB ^ ^ repeat
of RB ^ ^ repeat
kind RB ^ ^ filler
of RB ^ ^ filler
eh UH ^ ^ filler
one CD one ^ OK
of IN of ^ OK
those DT those ^ OK
things NNS things ^ OK
i PRP i ^ OK
like VBP like ^ OK
to TO to ^ OK
watch VB watch ^ OK
with IN with ^ OK
friends NNS friends ^ OK
and CC and ^ OK
just RB just ^ OK
eh UH ^ ^ filler
kind RB ^ ^ filler
of RB ^ ^ filler
rip VB rip ^ OK
on IN on ^ OK
him PRP him ^ OK
the DT the ^ OK
whole JJ whole ^ OK
time NN time ^ OK

and UNK ^ ^ false_start
plus UNK plus ^ OK
it UNK ^ ^ repeat
it UNK it ^ OK
's UNK ^ ^ repeat
's UNK 's ^ OK
always UNK always ^ OK
nice UNK nice ^ OK
to UNK to ^ OK
see UNK see ^ OK
kind UNK ^ ^ filler
of UNK ^ ^ filler
like UNK ^ ^ filler
average UNK average ^ OK
people UNK people ^ OK
um UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
eh UNK ^ ^ filler
starring UNK starring ^ OK
in UNK in ^ OK
something UNK something ^ OK
rather UNK rather ^ OK
than UNK than ^ OK
uh UNK ^ ^ filler
some UNK some ^ OK
celebrities UNK celebrities ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
always RB ^ ^ false_start
it PRP it ^ OK
's S-1 's ^ OK
nice BES nice ^ OK
to JJ to ^ OK
see TO see ^ OK
them VB them ^ OK
kind PRP ^ ^ filler
of RB ^ ^ filler
adapt RB adapt ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
kind RB ^ ^ filler
of RB ^ ^ filler
like VBP like ^ OK
how WRB how ^ OK
the DT ^ ^ repeat
the DT the ^ OK
realism NN realism ^ OK

eh UH eh ^ OK
you PRP you ^ OK
know VBP know ^ OK

he PRP he ^ OK
says VBZ says ^ OK
something NN something ^ OK
about IN about ^ OK
like UH ^ ^ filler
this DT this ^ OK
reminds VBZ reminds ^ OK
me PRP me ^ OK
of IN of ^ OK
eh UH ^ ^ filler
driving VBG driving ^ OK
bulldozers NNS bulldozers ^ OK

it PRP ^ ^ repeat
like UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
wrap VB wrapped ^ false_start
up RP up ^ OK
eh UH ^ ^ filler
here RB here ^ OK
like UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
next JJ next ^ OK
week NN week ^ OK
or CC or ^ OK
two CD two ^ OK
i PRP i ^ OK
think VBP think ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
feel VBP feel ^ OK
sorry JJ sorry ^ OK
for IN for ^ OK
half PDT half ^ OK
those DT those ^ OK
girls NNS girls ^ OK
there RB there ^ OK
on IN on ^ OK
the DT the ^ OK
show NN show ^ OK

they PRP ^ ^ false_start
always RB ^ ^ false_start
have VBP ^ ^ false_start
eh UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
cool JJ cool ^ OK
with IN with ^ OK
survivors NNPS survivors ^ OK

how WRB ^ ^ false_start
they PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
never RB never ^ OK
like UH like ^ OK
with IN ^ ^ false_start
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
shows NNS shows ^ OK

like UH ^ ^ filler
especially RB especially ^ OK
with IN with ^ OK
sit-coms NNS sit-coms ^ OK
they PRP they ^ OK
run VBP run ^ OK
from IN from ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
october NNP october ^ OK
to IN to ^ OK
may NNP may ^ OK

and CC ^ ^ false_start
the- PRP ^ ^ repeat
they PRP they ^ OK
're VBP 're ^ OK
done VBN done ^ OK
for IN for ^ OK
like UH ^ ^ filler
four CD four ^ OK
or CC or ^ OK
five CD five ^ OK
months NNS months ^ OK

with IN with ^ OK
survivor NNP survivor ^ OK
seems VBZ it ^ false_start
seems VBZ seems ^ OK
like IN like ^ OK
they PRP ^ ^ repeat
eh UH ^ ^ filler
they PRP they ^ OK
run VBP run ^ OK
it PRP it ^ OK
for IN for ^ OK
three CD three ^ OK
four CD four ^ OK
months NNS months ^ OK

they PRP they ^ OK
take VBP take ^ OK
like UH ^ ^ filler
a DT a ^ OK
month NN month ^ OK
or CC or ^ OK
two CD two ^ OK
off RP off ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
ha- VBP have ^ false_start
a DT a ^ OK
new JJ ^ ^ repeat
new JJ new ^ OK
episode NN episode ^ OK
or CC or ^ OK
a DT ^ ^ repeat
uh UH ^ ^ filler
a DT a ^ OK
new JJ ^ ^ repeat
new JJ new ^ OK
run NN run ^ OK
going VBG going ^ OK

and CC ^ ^ false_start
also RB also ^ OK
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
lot NN lot ^ OK
more JJR more ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
obviously RB obviously ^ OK
the DT the ^ OK
other JJ other ^ OK
ones NNS ones ^ OK
make VBP make ^ OK
it PRP it ^ OK
they PRP they ^ OK
're VBP 're ^ OK
in IN in ^ OK
the DT ^ ^ repeat
the DT the ^ OK
swahili NNP swahili ^ OK
's POS 's ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
jungle NN jungle ^ OK
and CC and ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
stuff NN stuff ^ OK
before RB before ^ OK

that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
one NN one ^ OK
i PRP i ^ OK
most RBS most ^ OK
identify VBP identify ^ OK
with IN with ^ OK
the DT the ^ OK
show NN show ^ OK
too RB too ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
and CC ^ ^ false_start
uh UH ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK

i PRP i ^ OK
was VBD was ^ OK
kind RB kind ^ OK
of RB of ^ OK
pulling VBG pulling ^ OK
for IN for ^ OK
rudy NNP rudy ^ OK
uh UH ^ ^ filler
even RB even ^ OK
though IN though ^ OK
he PRP he ^ OK
got VBN got ^ OK
bumped VBD bumped ^ OK
off RP off ^ OK
because IN because ^ OK
he PRP he ^ OK
uh UH ^ ^ filler
just RB just ^ OK
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden NN sudden ^ OK
out IN out ^ OK
of IN of ^ OK
nowhere RB nowhere ^ OK
just RB ^ ^ false_start
took VBD took ^ OK
his PRP his ^ OK
hand NN hand ^ OK
off IN off ^ OK
that DT that ^ OK
pole NN pole ^ OK
or CC or ^ OK
whatever WP whatever ^ OK

i PRP i arg0 OK
i PRP ^ ^ repeat
have VBP have ^ OK
have VBP ^ predicate repeat
a DT a arg1 OK
a DT ^ ^ repeat
lot NN lot arg1 OK
of IN of arg1 OK
friends NNS friends arg1 OK

i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP i arg0 OK
like VBP like predicate OK
all DT all arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
people NNS people arg1 OK

but CC ^ ^ false_start
my PRP my arg1 OK
kids NNS kids arg1 OK
are VBP are predicate OK
my PRP my arg2 OK
best JJS best arg2 OK
friends NNS friends arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
teach VBP teach predicate OK
them PRP them arg1 OK
not RB not argM_neg OK
to TO to arg1 OK
be VB be arg1 OK
judgmental JJ judgmental arg2 OK
of IN of arg2 OK
other JJ other arg2 OK
people NNS people arg2 OK

my PRP my arg1 OK
youngest JJS youngest arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
one-year JJ one-year arg2 OK
old JJ old arg2 OK

but CC ^ ^ false_start
my PRP my arg1 OK
twelve-year JJ twelve-year arg1 OK
old NN old arg1 OK
he PRP he arg1 OK
's BES 's predicate OK
r- RB ^ ^ repeat
right RB right arg2 OK
in IN in arg2 OK
with IN with arg2 OK
the DT the arg2 OK
good JJ good arg2 OK
kids NNS kids arg2 OK

the DT ^ ^ false_start
th- DT ^ ^ false_start
high JJ ^ ^ false_start
um UH ^ ^ false_start
high JJ ^ ^ false_start
eh UH ^ ^ filler
well UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
how WRB how argM_mnr OK
to TO to arg1 OK
say VB say arg1 OK
it PRP it arg1 OK

the DT the ^ OK
kids NNS kids ^ OK
who WP who ^ OK
are VBP are ^ OK
um UH ^ ^ filler
achieve VB ^ ^ false_start
highly RB highly ^ OK
achieved VBD achieved ^ OK
in IN in ^ OK
school NN school ^ OK

sometimes UNK sometimes argM_tmp OK
the UNK the arg0 OK
things UNK things arg0 OK
they UNK they arg0 OK
learn UNK learn arg0 OK
and UNK and arg0 OK
the UNK the arg0 OK
lessons UNK lessons arg0 OK
they UNK they arg0 OK
have UNK have arg0 OK
to UNK to arg0 OK
go UNK go arg0 OK
through UNK through arg0 OK
make UNK make predicate OK
them UNK them arg1 OK
better UNK better arg1 OK
people UNK people arg1 OK

my PRP ^ ^ repeat
my PRP my arg1 OK
kids NNS ^ ^ repeat
kids NNS kids arg1 OK
have VBP have ^ OK
n't RB n't argM_neg OK
been VBN been predicate OK
in IN in ^ OK
too RB too arg2 OK
much JJ much arg2 OK
trouble NN trouble arg2 OK
except IN except arg2 OK
for IN for arg2 OK
with IN with arg2 OK
me PRP me arg2 OK

my PRP my arg0 OK
oldest JJS oldest arg0 OK
he PRP he arg0 OK
has VBZ has predicate OK
some DT some arg1 OK
really RB really arg1 OK
good JJ good arg1 OK
friends NNS friends arg1 OK

his PRP his arg1 OK
one CD ^ ^ false_start
friend NN friend arg1 OK
's POS 's arg1 OK
dad NN dad arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
lawyer NN lawyer arg2 OK

and CC ^ ^ false_start
he PRP he arg1 OK
's BES 's predicate OK
just RB just arg2 OK
right JJ right arg2 OK
up IN up arg2 OK
there RB there arg2 OK
with IN with arg2 OK
the DT the arg2 OK
good JJ good arg2 OK
kids NNS kids arg2 OK

she PRP she arg0 OK
would MD would argM_mod OK
just RB just argM_adverb OK
take VB take predicate OK
take VB ^ ^ false_start
and CC and ^ OK
take VB take predicate OK
and CC and ^ OK
not RB not argM_neg OK
even RB even argM_adverb OK
appreciate VB appreciate predicate OK
it PRP it arg1 OK

and CC ^ ^ false_start
she PRP ^ ^ repeat
she PRP she arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
up IN up arg2 OK
here RB here arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
've VBP ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm ^ OK
going VBG going predicate OK
through IN through ^ OK
everything NN everything arg1 OK
to TO to argM_purpos OK
give VB give argM_purpos OK
her PRP her arg2 OK
what WP ^ ^ false_start
she PRP ^ ^ false_start
can MD ^ ^ false_start
what WP what arg1 OK
i PRP i arg0 OK
think VBP think arg1 OK
she PRP she arg0 OK
can MD can argM_mod OK
use VB use arg1 OK
because NP-2 because argM_cause OK
she IN she arg0 OK
wo PRP wo argM_mod OK
n't MD n't argM_neg OK
ask RB ask argM_cause OK

and CC ^ ^ false_start
she PRP she arg0 OK
appreciates VBZ appreciates predicate OK
appreciates VBZ _ARG_ ^ false_start
even RB even argM_adverb OK
if IN if argM_adverb OK
you PRP you arg0 OK
gave VBD gave predicate OK
her PRP her arg2 OK
some DT some arg1 OK
used JJ used arg1 OK
dishes NNS dishes arg1 OK
or CC ^ arg1 false_start
anything NN ^ ^ false_start

i PRP i arg0 OK
see VBP see predicate OK
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
that WDT that arg1 OK
um UH ^ ^ filler
definitely RB definitely arg1 OK
take VBP take arg1 OK
advantage NN advantage arg1 OK
of IN of arg1 OK
the DT the arg1 OK
money NN money arg1 OK
that WDT that arg1 OK
they PRP they arg2 OK
're VBP 're arg1 OK
given VBN given arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
've VBP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
know VBP know predicate OK
that IN that arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
times NNS times arg1 OK
people NNS ^ ^ false_start
will MD ^ ^ false_start
they PRP they arg0 OK
'll MD 'll arg1 OK
have VB have arg1 OK
more JJR more arg1 OK
children NNS children arg1 OK
just RB ^ ^ false_start
so IN so ^ OK
that IN that ^ OK
they PRP they arg0 OK
can MD can ^ OK
get VB get predicate OK
a DT a arg1 OK
bigger JJR bigger arg1 OK
welfare NN welfare arg1 OK
check NN check arg1 OK

that DT that ^ OK
's BES 's predicate OK
definitely RB definitely arg1 OK
not RB ^ ^ repeat
not RB not arg1 OK
how WRB how arg4 OK
it PRP it arg1 OK
should MD should arg1 OK
work VB work arg1 OK

and CC ^ arg1 false_start
then RB ^ ^ false_start
there EX there ^ OK
's BES 's predicate OK
no DT ^ ^ false_start
one PRP ^ ^ false_start
n- NN ^ ^ repeat
nothing NN nothing arg0 OK
that WDT that arg0 OK
regulates VBZ regulates predicate OK
it PRP it arg1 OK
regulates VBZ ^ arg1 false_start
says VBZ or ^ false_start
that WDT that arg1 OK
says VBZ says arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if arg1 OK
you PRP you arg0 OK
have VBP have arg1 OK
two CD two arg1 OK
kids NNS kids arg1 OK
then RB then arg1 OK
we PRP we arg0 OK
'll MD 'll arg1 OK
give VB give arg1 OK
you PRP you arg2 OK
the DT the arg1 OK
x. NN x. arg1 OK
amount NN amount arg1 OK
of IN of arg1 OK
dollars NNS dollars arg1 OK
for IN ^ ^ false_start
that DT ^ ^ false_start
much JJ ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN ^ ^ repeat
for IN for arg1 OK
what WP what arg1 OK
you PRP you arg0 OK
need VBP need arg1 OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
you PRP you arg0 OK
have VBP have predicate OK
ten CD ten arg1 OK
more JJR more arg1 OK
kids NNS kids arg1 OK
it PRP it ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
mean VB mean predicate OK
that IN that arg1 OK
you PRP you arg0 OK
can MD can arg1 OK
now RB now arg1 OK
have VB have arg1 OK
that DT that arg1 OK
many JJ many arg1 OK
children NNS children arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
st- XX ^ ^ false_start
and CC and ^ OK
not RB not ^ OK
support VB support predicate OK
them PRP them arg1 OK

but CC but ^ OK
then RB then ^ OK
d- XX ^ ^ false_start
in IN ^ ^ repeat
in IN in ^ OK
that DT that ^ OK
type NN type ^ OK
of IN of ^ OK
um UH ^ ^ filler
of IN _ARG_ ^ false_start

i PRP i argM_loc OK
think VBP think predicate OK
areas NNS ^ ^ false_start
concerned RB in ^ false_start
a DT a argM_loc OK
lot NN lot argM_loc OK
of IN of argM_loc OK
the DT the argM_loc OK
type NN ^ ^ repeat
types NNS types argM_loc OK
o- IN ^ ^ repeat
of IN of argM_loc OK
areas NNS areas argM_loc OK
that WDT that argM_loc OK
people NNS people argM_loc OK
like IN like argM_loc OK
that DT that argM_loc OK
live VBP live argM_loc OK
in IN in argM_loc OK
they NP-1 they arg1 OK
're PRP 're arg1 OK
not VBP not argM_neg OK
really RB really argM_extent OK
too RB too argM_extent OK
concerned RB concerned arg1 OK
about JJ about arg0 OK
birth IN birth arg0 OK
control NN control arg0 OK
p- NN ^ ^ false_start
and XX and arg0 OK
things CC things arg0 OK
like NNS like arg0 OK
that IN that arg0 OK

now RB ^ ^ false_start
on IN on argM_discou OK
the DT the argM_discou OK
other JJ other argM_discou OK
end NN end argM_discou OK
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
there EX there arg1 OK
are VBP are arg1 OK
many JJ many arg0 OK
people NNS people arg0 OK
that WDT that arg1 OK
do VBP do arg1 OK
deserve VB deserve arg1 OK
it PRP it arg1 OK
for IN for arg1 OK
u UH ^ ^ filler
certain JJ certain arg1 OK
reasons NNS reasons arg1 OK

where WRB ^ ^ false_start
eh UH ^ ^ filler
like IN ^ ^ filler
say UH ^ ^ false_start
with IN ^ ^ false_start
people NNS people arg0 OK
they PRP ^ ^ false_start
that WDT that arg0 OK
collect VBP collect arg0 OK
unemployment NN unemployment arg0 OK
can MD can ^ OK
only RB only ^ OK
do VB do predicate OK
it PRP it arg1 OK
for IN for argM_tmp OK
a DT a argM_tmp OK
certain JJ certain argM_tmp OK
amount NN amount argM_tmp OK
of IN of argM_tmp OK
time NN time argM_tmp OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's predicate OK
's BES _ARG_ arg1 false_start

but CC but ^ OK
i PRP ^ ^ false_start
st- XX ^ ^ false_start
i PRP i arg0 OK
also RB ^ ^ false_start
think VBP think predicate OK
that IN that arg1 OK
no DT no arg1 OK
matter NN matter arg1 OK
what WDT what arg1 OK
new JJ new arg1 OK
rules NNS rules arg1 OK
they PRP they arg0 OK
put VBP put arg1 OK
on IN on arg2 OK
it PRP it arg2 OK
and CC and arg1 OK
m- XX ^ ^ false_start
all PDT all arg1 OK
the DT the arg1 OK
different JJ ^ ^ repeat
different JJ different arg1 OK
things NNS things arg1 OK
that WDT that arg1 OK
they PRP they arg0 OK
could MD could arg1 OK
possibly RB possibly arg1 OK
do VB do arg1 OK
there NP-2 ^ ^ repeat
there BES there arg1 OK
's EX ^ ^ repeat
will EX will arg1 OK
still MD still arg1 OK
be RB be arg1 OK
some VB some arg1 OK
type DT type arg1 OK
of NN of arg1 OK
issue IN issue arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
th- DT ^ ^ repeat
the DT the arg1 OK
system NN system arg1 OK
is VBZ is predicate OK
already RB already arg2 OK
in IN in arg2 OK
place NN place arg2 OK

unless IN unless ^ OK
they PRP they arg1 OK
completely RB completely arg1 OK
knock VBP knock arg1 OK
everything NN everything arg1 OK
out RP out arg1 OK
and CC and arg1 OK
start VBP start arg1 OK
from IN from arg1 OK
the DT the arg1 OK
beginning NN beginning arg1 OK
which WDT which ^ OK
will MD will argM_mod OK
never RB never argM_neg OK
happen VB happen predicate OK
then RB then ^ OK
i- XX ^ ^ false_start
there EX there ^ OK
's BES 's predicate OK
always RB always arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
some DT ^ ^ repeat
c- XX ^ ^ false_start
some DT some arg1 OK
problem NN problem arg1 OK
that WDT that ^ OK
someone NN someone arg0 OK
has VBZ has predicate OK
with IN with arg1 OK
it PRP it arg1 OK

i PRP i arg0 OK
guess VBP guess predicate OK
because IN ^ ^ false_start
they PRP ^ ^ false_start
u- XX ^ ^ false_start
tended VBD ^ ^ false_start
i- PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK
know VB know arg1 OK
how WRB how arg1 OK
long RB long arg1 OK

i PRP i arg0 OK
'm VBP 'm ^ OK
assuming VBG assuming predicate OK
m- XX ^ ^ false_start
a DT a arg1 OK
very RB very arg1 OK
long JJ long arg1 OK
time NN time arg1 OK

but CC but ^ OK
that DT ^ ^ false_start
i- VBZ ^ ^ false_start
it PRP ^ ^ false_start
has VBZ ^ ^ false_start
always RB ^ ^ false_start
been VBN ^ ^ false_start
th- DT ^ ^ false_start
like UH ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
how WRB how arg1 OK
e- RB ^ ^ repeat
everyone NN everyone arg0 OK
lives VBZ lives arg1 OK

n XX ^ ^ false_start
and CC and ^ OK
even RB even ^ OK

well UH ^ ^ filler
even RB ^ ^ false_start
just RB ^ ^ false_start
today NN today ^ OK
they PRP they arg0 OK
just RB ^ ^ false_start
passed VBD passed predicate OK
that DT ^ ^ repeat
that DT that arg1 OK
new JJ new arg1 OK
law NN law arg1 OK
on IN on arg1 OK
the DT the arg1 OK
medicare NNP medicare arg1 OK
and CC ^ ^ false_start
with IN with ^ OK
the DT the ^ OK
prescription NN prescription ^ OK
drugs NNS drugs ^ OK
and CC and ^ OK
everything NN everything ^ OK

that IN ^ ^ false_start
uh UH ^ ^ filler
prescription NN ^ ^ false_start
drugs NNS ^ ^ false_start
are VBP ^ ^ false_start
now RB ^ ^ false_start
g- NNS ^ ^ false_start
or CC ^ ^ false_start
a DT ^ ^ false_start
or UH ^ ^ false_start
at RB at ^ OK
least RBS least ^ OK
generics NNS generics arg1 OK
are VBP are ^ OK
included VBN included predicate OK
under IN under arg2 OK
medicare NNP medicare arg2 OK
plans NNS plans arg2 OK

and CC ^ ^ false_start
u XX ^ ^ false_start
b XX ^ ^ false_start
e XX ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
e XX ^ ^ false_start
the DT the arg0 OK
government NN government arg0 OK
should MD should arg1 OK
focus VB focus arg1 OK
more RBR more arg1 OK
on IN on arg2 OK
something NN something arg2 OK
like IN like arg2 OK
that DT that arg2 OK

someone NN someone arg0 OK
that WDT that ^ OK
's HVS 's ^ OK
put VBN put predicate OK
their PRP their arg1 OK
time NN time arg1 OK
in RB ^ ^ repeat
in RB in arg2 OK
working VBG working arg2 OK
their PRP their arg4 OK
whole JJ whole arg4 OK
lives NNS lives arg4 OK

a- CC ^ ^ repeat
and CC ^ ^ false_start
then RB then ^ OK
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden JJ sudden ^ OK
you PRP you arg0 OK
know VBP know predicate OK
they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're arg1 OK
elderly JJ elderly arg1 OK

they PRP ^ ^ repeat
they PRP ^ ^ repeat
're VBP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the- PRP ^ ^ repeat
they PRP they arg0 OK
need VBP need predicate OK
th- XX ^ ^ false_start
medical JJ medical arg1 OK
help NN help arg1 OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
n- VBP ^ ^ repeat
need VBP need predicate OK
prescriptions NNS prescriptions arg1 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
they PRP they arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
get VB get predicate OK
it PRP it arg1 OK
because IN because ^ OK
money NN money arg0 OK
is VBZ is ^ OK
going VBG going ^ OK
to TO to ^ OK
buy VB buy predicate OK
somebody NN somebody arg2 OK
d- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
new JJ new arg1 OK
sneakers NNS sneakers arg1 OK

but CC and ^ repeat
and CC ^ ^ OK
when WRB when ^ OK
they PRP they arg0 OK
're VBP 're ^ OK
not RB not ^ OK
even RB even ^ OK
working VBG working predicate OK

it PRP it ^ OK
ju- RB ^ ^ repeat
just RB ^ ^ false_start
came VBD came predicate OK
out RP out arg_particl OK
a DT a argM_tmp OK
little JJ little argM_tmp OK
while NN while argM_tmp OK
ago RB ago argM_tmp OK

y- PRP ^ ^ false_start
you PRP ^ ^ false_start
mean VBP ^ ^ false_start
in IN ^ ^ false_start
uh UH ^ ^ filler
in IN in ^ OK
other JJ other ^ OK
words NNS words ^ OK
um UH ^ ^ filler
also RB ^ ^ filler
ploy- XX ^ ^ false_start
employers NNS employers ^ OK
would MD would ^ OK
n't RB n't ^ OK
be VB be ^ OK
able JJ able ^ OK
to TO to ^ OK
hire VB hire ^ OK
as RB as ^ OK
many JJ many ^ OK
workers NNS workers ^ OK

or CC ^ ^ false_start
or- CC or- ^ OK

but CC ^ ^ false_start
do VBP do ^ OK
n't RB n't ^ OK
you PRP you ^ OK
think VB think ^ OK
we PRP we ^ OK
need VBP need ^ OK
an DT an ^ OK
increase NN increase ^ OK
because IN because ^ OK
it PRP it ^ OK
would MD would ^ OK
um UH ^ ^ filler
motivate VB motivate ^ OK
people NNS people ^ OK
to TO to ^ OK
work VB work ^ OK
better RBR better ^ OK
if IN ^ ^ false_start
they PRP ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
working VBG working ^ OK
for IN for ^ OK
five CD five ^ OK
something NN something ^ OK
an DT an ^ OK
hour NN hour ^ OK
my UH ^ ^ filler
god UH ^ ^ filler
by IN by ^ OK
the DT the ^ OK
time NN time ^ OK
the DT the ^ OK
hour NN hour ^ OK
's BES 's ^ OK
up RB up ^ OK
you ADVP-TMP- 1 you ^ OK
're PRP 're ^ OK
like VBP like ^ OK
well RP well ^ OK
i UH i ^ OK
made PRP made ^ OK
my VBD my ^ OK
five PRP five ^ OK
bucks CD bucks ^ OK

but CC ^ ^ false_start
i PRP i ^ OK
know VBP know ^ OK
i PRP i ^ OK
made VBD made ^ OK
nine CD nine ^ OK
dollars NNS dollars ^ OK
here RB here ^ OK
w- XX ^ ^ false_start
doing VBG doing ^ OK
um UH ^ ^ filler
nursing NN ^ ^ false_start
something NN ^ ^ false_start
not RB ^ ^ false_start
really RB ^ ^ false_start
nursing NN ^ ^ false_start
more RBR ^ ^ false_start
like IN ^ ^ false_start
home NN home ^ OK
health NN health ^ OK
care NN care ^ OK

i PRP i ^ OK
was VBD was ^ OK
m- XX ^ ^ false_start
so RB so ^ OK
glad JJ glad ^ OK
to TO to ^ OK
get VB get ^ OK
that DT that ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
hard JJ hard ^ OK
work NN work ^ OK

um UH ^ ^ filler
i PRP i ^ OK
just RB just ^ OK
think VBP think ^ OK
they PRP they ^ OK
should MD should ^ OK
m- XX ^ ^ false_start
if IN ^ ^ false_start
for IN ^ ^ false_start
no DT ^ ^ false_start
other JJ ^ ^ false_start
reason NN ^ ^ false_start
push VB push ^ OK
it PRP it ^ OK
up RP up ^ OK
because IN because ^ OK
of IN of ^ OK
cost NN cost ^ OK
of IN of ^ OK
living NN living ^ OK
or CC or ^ OK
just RB just ^ OK
to TO to ^ OK
boost VB boost ^ OK
in- XX ^ ^ false_start
uh UH ^ ^ filler
people NNS people ^ OK
's POS 's ^ OK
egos NNS egos ^ OK

w- PRP ^ ^ false_start
we PRP we ^ OK
have VBP have ^ OK
it PRP it ^ OK
split JJ split ^ OK

i- PRP ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
it PRP ^ ^ false_start
was VBD ^ ^ false_start
they PP-LOC-PR D they ^ OK
're PRP 're ^ OK
making VBP making ^ OK
nine VBG nine ^ OK
at IN at ^ false_start
burger NNP burger ^ false_start
king NNP king ^ false_start
jersey NNP in ^ false_start
but CC ^ ^ false_start
um UH ^ ^ filler
north NNP north ^ false_start
jersey NNP jersey ^ false_start

not RB not ^ OK
that IN that ^ OK
that DT that ^ OK
's BES 's ^ OK
minimum JJ minimum ^ OK
wage NN wage ^ OK

so UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
sure JJ sure ^ OK
our PRP our ^ OK
employers NNS employers ^ OK
are VBP are ^ OK
glad JJ glad ^ OK
to TO to ^ OK
have VB have ^ OK
the DT the ^ OK
minimum JJ minimum ^ OK
wage NN wage ^ OK
like IN ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
at IN at ^ OK
five CD five ^ OK
something NN something ^ OK
because IN because ^ OK
e- XX ^ ^ false_start
u- XX ^ ^ false_start
if IN if ^ OK
for IN for ^ OK
no DT no ^ OK
other JJ other ^ OK
reason NN reason ^ OK
th- DT ^ ^ false_start
the DT the ^ OK
tourists NNS tourists ^ OK
do VBP do ^ OK
n't RB n't ^ OK
come VB come ^ OK
down RB down ^ OK

w- WP ^ ^ false_start
are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK

an- CC an- ^ OK

are VBP are ^ OK
you PRP you ^ OK
a- DT ^ ^ repeat
a DT a ^ OK
student NN student ^ OK

um UH ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
get VB get ^ OK
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
actually RB ^ ^ false_start
college NN college ^ OK

i PRP i ^ OK
've VBP 've ^ OK
^ ^ ^ ^ false_start
done VBN done ^ OK
all DT all ^ OK
tech NN tech ^ OK
schools NNS schools ^ OK
after IN after ^ OK
high JJ high ^ OK
school NN school ^ OK

but CC ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
uh UH ^ ^ filler
we PRP we ^ OK
had VBD had ^ OK
programs NNS programs ^ OK
where WRB where ^ OK
that DT ^ ^ false_start
th- DT ^ ^ repeat
uh UH ^ ^ filler
the DT the ^ OK
cost NN cost ^ OK
of IN of ^ OK
living NN living ^ OK
was VBD was ^ OK
offset VBN offset ^ OK
by IN by ^ OK
maybe RB ^ ^ false_start
like IN ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
free JJ free ^ OK
school NN school ^ OK
or CC or ^ OK
something NN something ^ OK
free JJ free ^ OK
even RB even ^ OK
though IN though ^ OK
some DT some ^ OK
people NNS people ^ OK
get VBP get ^ OK
minimum JJ minimum ^ OK
wage NN wage ^ OK

i PRP i ^ OK
think VBP think ^ OK
our PRP our ^ OK
waitresses NNS waitresses ^ OK
down IN down ^ OK
here RB here ^ OK
get VBP get ^ OK
two CD two ^ OK
thirty-five CD thirty-five ^ OK
plus CC plus ^ OK
tips NNS tips ^ OK

but CC ^ ^ false_start
they PRP ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
bar NN bar ^ OK
restaurant NN restaurant ^ OK

and UNK ^ ^ false_start
as UNK as ^ OK
far UNK far ^ OK
as UNK as ^ OK
what UNK what ^ OK
you UNK you ^ OK
said UNK said ^ OK
about UNK about ^ OK
whether UNK whether ^ OK
i UNK i ^ OK
would UNK would ^ OK
do UNK do ^ OK
what UNK what ^ OK
i UNK i ^ OK
'm UNK 'm ^ OK
doing UNK doing ^ OK
for UNK for ^ OK
nine UNK nine ^ OK
dollars UNK dollars ^ OK
and UNK an ^ false_start
hour UNK hour ^ OK
or UNK or ^ OK
work UNK work ^ OK
at UNK at ^ OK
a UNK a ^ OK
burger UNK burger ^ OK
king UNK king ^ OK
or UNK or ^ OK
wendy UNK wendy ^ OK
's UNK 's ^ OK

i PRP i arg0 OK
think VBP think predicate OK
eight CD eight arg1 OK
bucks NNS bucks arg1 OK
is VBZ is arg1 OK
the DT the arg2 OK
minimum NN minimum arg2 OK
that WDT that arg2 OK
you PRP you arg0 OK
can MD can arg2 OK
survive VB survive arg2 OK
on IN on arg2 OK

god UH ^ arg2 filler
like UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when argM_tmp OK
i PRP i argM_tmp OK
was VBD was argM_tmp OK
young JJ young argM_tmp OK
it PRP ^ ^ repeat
it ADVP-TMP- 1 it arg1 OK
was VBD ^ ^ repeat
was PRP was predicate OK
only RB ^ ^ repeat
only VBD only arg2 OK
like RB ^ ^ filler
four UH four arg2 OK
seventy-five CD seventy-five arg2 OK
an CD an arg2 OK
hour DT hour arg2 OK
four NN or ^ false_start
four NN four arg2 OK
fifty CD fifty arg2 OK
an CD an arg2 OK
hour DT hour arg2 OK
or NN ^ ^ false_start
something CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

um UH ^ ^ filler
eh UH ^ ^ filler
um UH ^ ^ filler
just RB just ^ OK
how WRB how ^ OK
we PRP we ^ OK
settle VB settle ^ OK
at IN at ^ OK
the DT the ^ OK
rate NN rate ^ OK
of IN of ^ OK
five CD five ^ OK
fifteen CD fifteen ^ OK

do VBP do predicate OK
they PRP they arg0 OK
base VBP base arg1 OK
your PRP your arg1 OK
pay NN pay arg1 OK
on IN on arg2 OK
what WP what arg1 OK
you PRP you arg0 OK
talk VBP talk arg2 OK
about IN about arg1 OK
um UH ^ ^ filler
now RB now argM_tmp false_start

do VBP do predicate OK
they PRP they arg0 OK
base VBP base arg1 OK
like UH ^ ^ filler
this DT this arg1 OK
like UH ^ ^ filler
on IN ^ ^ repeat
on IN on arg2 OK
what WP what arg1 OK
you PRP you arg0 OK
talk VBP talk arg2 OK
about IN about arg1 OK

meaning VBG ^ ^ filler
like UH ^ ^ filler
if IN ^ ^ repeat
if IN ^ ^ false_start
you PRP ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
wasted VBD wasted ^ OK
the DT the ^ OK
entire JJ entire ^ OK
time NN time ^ OK
not RB not ^ OK
talking VBG talking ^ OK
about IN about ^ OK
it PRP it ^ OK
would MD would ^ OK
they PRP they ^ OK

well UH ^ ^ filler
it PRP ^ ^ false_start
was VBD ^ ^ false_start
a DT ^ ^ false_start
small JJ ^ ^ false_start
it PRP it arg1 OK
was VBD was predicate OK
a DT a arg2 OK
short JJ short arg2 OK
question NN question arg2 OK

but CC ^ ^ false_start
now RB now argM_tmp OK
i PRP i arg0 OK
have VBP have predicate OK
a DT ^ ^ repeat
another DT another arg1 OK
question NN question arg1 OK

is VBZ ^ ^ false_start
this DT ^ ^ false_start
they PRP they arg0 OK
say VBP say predicate OK
you PRP you arg0 OK
can MD can arg1 OK
call VB call arg1 OK
up IN up arg1 OK
to IN to arg1 OK
three CD three arg1 OK
times NNS times arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP you arg0 OK
definitely RB definitely ^ OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your arg0 OK
doctor NN doctor arg0 OK
or CC or arg0 OK
somebody NN somebody arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
where WRB with arg0 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your arg0 OK
life NN life arg0 OK
is VBZ ^ ^ false_start
in IN in arg0 OK
their PRP their arg0 OK
hands NNS hands arg0 OK
to ADVP-1 to arg1 OK
be TO be arg1 OK
doing VB doing arg1 OK
that VBG that arg1 OK

so RB ^ ^ repeat
so RB ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
does VBZ ^ ^ repeat
's BES 's arg1 OK
kind RB kind arg2 OK
of RB of arg2 OK
dependent JJ dependent arg2 OK
on IN on arg2 OK
your PRP your arg2 OK
job NN job arg2 OK
as RB as arg1 OK
well RB well arg1 OK

or CC or ^ OK
like IN like ^ OK
you PRP you ^ OK
were VBD were ^ OK
saying VBG saying ^ OK
even RB even ^ OK
like UH ^ ^ filler
truck NN truck ^ OK
drivers NNS drivers ^ OK
an- CC ^ ^ repeat
and CC ^ ^ false_start
all DT ^ ^ false_start
of IN ^ ^ false_start
that DT ^ ^ false_start

well UH ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
if IN if arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
like UH ^ ^ filler
incorporated VBN incorporated arg1 OK
as IN as arg2 OK
a DT a arg2 OK
regular JJ regular arg2 OK
part NN part arg2 OK
of IN of arg2 OK
the DT the arg2 OK
job NN job arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
driving VBG driving predicate OK
trucks NNS trucks arg1 OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK
then RB then ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
every DT every ^ OK
week NN week ^ OK
maybe RB maybe ^ OK
you PRP you arg0 OK
would MD would ^ OK
have VB have predicate OK
one CD one arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

but CC but ^ OK
if IN if ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
oh UH ^ ^ filler
we PRP we arg0 OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
have VB have predicate OK
a DT a arg1 OK
drug NN drug arg1 OK
test NN test arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
then RB then ^ OK
you PRP ^ ^ false_start
're VBP ^ ^ false_start
like RP ^ ^ false_start
i PRP ^ ^ false_start
don- VBP ^ ^ repeat
d- XX ^ ^ false_start
it PRP it ^ OK
feels VBZ feels predicate OK
feels VBZ like arg1 false_start
more JJR more arg1 OK
of IN of arg1 OK
an DT an arg1 OK
invasion NN invasion arg1 OK
that DT that ^ OK
way NN way ^ OK

it PRP it arg0 OK
does VBZ does ^ OK
ka- XX ^ ^ repeat
kind RB kind ^ OK
of RB of ^ OK
give VB give predicate OK
you PRP you arg2 OK
some DT some arg1 false_start
security NN security arg1 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
from IN from ^ false_start
another DT another ^ OK
standpoint NN standpoint ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
everyone NN everyone arg1 OK
's BES 's ^ OK
been VBN been ^ OK
tested VBN tested predicate OK
then NP-1 ^ ^ repeat
then RB then ^ OK
i RB ^ ^ filler
do PRP ^ ^ filler
n't VBP ^ ^ filler
know RB ^ ^ filler
you VB you arg0 OK
kind PRP kind ^ OK
of RB of ^ OK
have RB have predicate OK
a VBP a arg1 OK
little DT little arg1 OK
bit JJ bit arg1 OK
of NN of arg1 OK
a IN a arg1 OK
feeling DT feeling arg1 OK
of NN of arg1 OK
security IN security arg1 OK
that NN that ^ OK
people IN people arg0 OK
are NNS are ^ OK
n't VBP n't ^ OK
doing RB doing predicate OK
drugs VBG drugs arg1 OK
in NNS in argM_loc OK
your IN your argM_loc OK
work PRP work argM_loc OK
place NN place argM_loc OK
type NN ^ ^ false_start
thing NN ^ ^ false_start

they PRP they arg0 OK
do VBP do ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
drug NN drug arg2 OK
testing NN testing predicate OK
here RB here argM_loc OK
actually RB actually ^ OK
as RB as ^ OK
well RB well ^ OK

the DT the ^ OK

um UH ^ ^ filler
eh UH ^ ^ filler
the DT the arg1 OK
only JJ only arg1 OK
one CD one arg1 OK
i PRP i arg0 OK
've VBP 've ^ OK
had VBN had predicate OK
is NP-1 ^ ^ repeat
is VBZ is predicate OK
the VBZ the arg2 OK
one DT one arg2 OK
for CD for arg2 OK
the IN the arg2 OK
company DT company arg2 OK
that NN that arg2 OK
i WDT i arg0 OK
work PRP work arg2 OK
for VBP for arg2 OK
now IN now arg2 OK

um UH ^ ^ filler
but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
do- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
hear VBP hear predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
about IN about arg1 OK
it PRP it arg1 OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
just RB just arg2 OK
a DT a arg2 OK
standard JJ standard arg2 OK
part NN part arg2 OK
of IN ^ ^ repeat
of IN ^ ^ repeat
of IN of arg2 OK
getting VBG getting arg2 OK
hired VBN hired arg2 OK
here RB here arg2 OK

and CC ^ ^ false_start
mine PRP mine arg1 OK
see UH ^ ^ filler
are VBP are predicate OK
eleven CD eleven arg2 OK
and CC and arg2 OK
fourteen CD fourteen arg2 OK
stil- RB ^ ^ false_start

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
never RB never argM_neg OK
really RB really argM_adverb OK
sat VBD sat predicate OK
and CC and ^ OK
thought VBD thought predicate OK
about IN about arg1 OK
what WP what arg1 OK
i PRP i arg0 OK
would MD would argM_mod OK
do VB do arg1 OK

technology NN technology argM_mnr false_start
wise RB wise argM_mnr false_start
it PRP it arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
a DT a arg2 OK
real RB real arg2 OK
up IN up arg2 OK
to IN to arg2 OK
date NN date arg2 OK
town NN town arg2 OK

originally RB originally argM_adverb OK
but CC ^ ^ false_start
my PRP ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
from IN from arg2 OK
chicago NNP chicago arg2 OK

i PRP i arg0 OK
got VBD got predicate OK
my PRP my arg1 OK
kids NNS kids arg1 OK
out IN out arg1 OK
of IN of arg1 OK
there RB there arg1 OK
and CC and ^ OK
give VB gave predicate false_start
my PRP my arg1 OK
kids NNS kids arg1 OK
half PDT half arg1 OK
a DT a arg1 OK
chance NN chance arg1 OK
to TO to arg1 OK
not RB not argM_neg OK
grow VB grow arg1 OK
up RB up arg_particl OK
like IN like argM_mnr OK
that DT that argM_mnr OK

i PRP i arg0 OK
got VBD have predicate false_start
a DT a arg1 OK
fourteen CD fourteen arg1 OK
year NN year arg1 OK
old JJ old arg1 OK

and CC ^ ^ false_start
every DT every argM_tmp OK
day NN day argM_tmp OK
the DT ^ ^ repeat
the DT the arg1 OK
biggest JJS biggest arg1 OK
thing NN thing arg1 OK
on IN on arg1 OK
my PRP my arg1 OK
mind NN mind arg1 OK
is VBZ is predicate OK
is VBZ is arg2 OK
she PRP she arg1 OK
going VBG going argM_mod OK
to TO to argM_mod OK
come VB come arg2 OK
home RB home arg4 OK
pregnant JJ pregnant argM_mnr OK
or CC or argM_mnr OK
on IN on argM_mnr OK
drugs NNS drugs argM_mnr OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
eh UH ^ ^ filler
well UH well ^ OK

you PRP you arg1 OK
got VBN got predicate OK
to TO to arg1 OK
be VB be arg1 OK
scared JJ scared arg1 OK
about IN about arg0 OK
stuff NN stuff arg0 OK
like IN like arg0 OK
that DT that arg0 OK

i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
base NN base arg1 OK
not RB not arg1 OK
far RB far arg1 OK
from IN from arg1 OK
too NP ^ ^ false_start
fort RB fort arg1 OK
mccoy NNP mccoy arg1 OK

i PRP ^ ^ false_start
never RB ^ ^ false_start
thought VBD ^ ^ false_start
abou- IN ^ ^ false_start
well UH ^ ^ filler
i PRP i arg0 OK
did VBD did ^ OK
think VB think predicate OK
about IN about arg1 OK
it PRP it arg1 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
like IN like argM_extent OK
i PRP i arg0 OK
says VBZ said predicate false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
insi- JJ ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm arg1 OK
in IN in arg2 OK
a DT ^ ^ repeat
a DT a arg2 OK
sma- NN ^ ^ repeat
small JJ small arg2 OK
town NN town arg2 OK

and CC ^ ^ false_start
if IN if argM_adverb OK
anything NN anything argM_adverb OK
were VBD were argM_adverb OK
to TO to argM_adverb OK
happen VB happen argM_adverb OK
it PRP it arg1 OK
's BES 's ^ OK
going VBG going argM_mod OK
to TO to argM_mod OK
go VB go predicate OK
to IN to arg4 OK
the DT the arg4 OK
bigger JJR bigger arg4 OK
cities NNS cities arg4 OK
before IN before argM_tmp OK
me PRP me argM_tmp OK

it PRP it arg0 OK
w- MD ^ ^ repeat
would MD would argM_mod OK
n't RB n't argM_neg OK
even RB even argM_adverb OK
take VB take predicate OK
that DT that arg1 OK
much JJ much arg1 OK
because IN because argM_cause OK
our PRP our arg1 OK
grocery NN grocery arg1 OK
store NN store arg1 OK
's BES 's argM_cause OK
so RB so arg2 OK
little JJ little arg2 OK

it PRP ^ ^ repeat
it PRP it arg0 OK
only RB only argM_adverb OK
takes VBZ takes predicate OK
a DT a arg1 OK
saturday NNP saturday arg1 OK
by IN by argM_loc OK
us PRP us argM_loc OK

did VBD ^ ^ repeat
eh UH ^ ^ filler
did VBD ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you arg0 OK
ever RB ^ ^ repeat
ever RB ever argM_adverb OK
think VB think predicate OK
you PRP you arg0 OK
'd MD 'd argM_mod OK
ever RB ever argM_adverb OK
have VB have argM_mod OK
to TO to argM_mod OK
use VB use arg1 OK
that DT that arg1 OK
stuff NN stuff arg1 OK
down IN down argM_loc OK
there RB there argM_loc OK

well UH ^ ^ false_start
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ false_start
maybe RB maybe ^ OK
they PRP they ^ OK
know VBP know ^ OK
something NN something ^ OK
about IN about ^ OK
what WP what ^ OK
happened VBD happened ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
iraq NNP iraq ^ OK
is VBZ is ^ OK
a DT ^ ^ repeat
a DT a ^ OK
very RB very ^ OK
w- JJ ^ ^ repeat
weird JJ weird ^ OK
place NN place ^ OK

so UH so ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
so RB so ^ OK
sure JJ sure ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
that IN that ^ OK
there EX there ^ OK
is VBZ is ^ OK
n't RB n't ^ OK
something NN something ^ OK
of IN of ^ OK
benefit NN benefit ^ OK
for IN for ^ OK
uh UH ^ ^ filler
disarming VBG disarming ^ OK
them PRP them ^ OK
because IN because ^ OK
the DT the ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
they PRP ^ ^ repeat
were VBD ^ ^ repeat
among IN among ^ OK
other JJ other ^ OK
things NNS things ^ OK
uh UH ^ ^ filler
they PRP they ^ OK
were VBD were ^ OK
uh UH ^ ^ filler
giving VBG giving ^ OK
twenty-five CD twenty-five ^ OK
thousand CD thousand ^ OK
uh UH ^ ^ filler
dollars NNS dollars ^ OK
to IN to ^ OK
uh UH ^ ^ filler
families NNS families ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
of IN ^ ^ repeat
uh UH ^ ^ filler
of IN of ^ OK
people NNS people ^ OK
that WDT that ^ OK
bombed VBN bombed ^ OK
people NNS people ^ OK

so UH so ^ OK
uh UH ^ ^ filler
that DT that ^ OK
alone RB alone ^ OK
uh UH ^ ^ filler
makes VBZ makes ^ OK
the DT the ^ OK
guy NN guy ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
a DT a ^ OK
nasty JJ nasty ^ OK
son NN son ^ OK
of IN of ^ OK
a DT a ^ OK
bitch NN bitch ^ OK
and CC and ^ OK
very RB very ^ OK
untrustworthy JJ untrustworthy ^ OK

and CC ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
could MD could ^ OK
control VB control ^ OK
iraq NNP iraq ^ OK
and CC ^ ^ repeat
uh UH ^ ^ filler
and CC and ^ OK
iraq NNP ^ ^ repeat
iran NNP iran ^ OK
uh UH ^ ^ filler
from IN ^ ^ repeat
uh UH ^ ^ filler
from IN from ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
t- XX ^ ^ false_start
arming VBG arming ^ OK
the DT ^ ^ repeat
uh UH ^ ^ filler
the DT the ^ OK
terrorist JJ terrorist ^ OK
groups NNS groups ^ OK
that WDT that ^ OK
refuse VBP refuse ^ OK
to TO ^ ^ repeat
uh UH ^ ^ filler
to TO to ^ OK
enforce VB enforce ^ OK
a DT a ^ OK
settlement NN settlement ^ OK
you PRP you ^ OK
could MD could ^ OK
uh UH ^ ^ filler
get VB get ^ OK
a DT a ^ OK
peace NN peace ^ OK
settlement NN settlement ^ OK
there RB there ^ OK

because UH because ^ OK
on IN on ^ OK
the DT the ^ OK
palestinian JJ palestinian ^ OK
sides NNS sides ^ OK

i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
in IN in ^ OK
israel NNP israel ^ OK
and CC and ^ OK
i PRP i ^ OK
know VBP know ^ OK
plenty NN plenty ^ OK
of IN of ^ OK
palestinians NNPS palestinians ^ OK

they PRP they ^ OK
can MD can ^ OK
not RB not ^ OK
talk VB talk ^ OK
in IN ^ ^ repeat
in IN in ^ OK
uh UH _ARG_ ^ false_start
uh UH ^ ^ filler
because IN because ^ OK
they PRP they ^ OK
will MD will ^ OK
be VB be ^ OK
killed VBN killed ^ OK

probably RB probably ^ OK
the DT the ^ OK
reasons NNS reasons ^ OK
being VBG being ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
actually RB actually ^ OK
afraid JJ afraid ^ OK
that IN that ^ OK
iraq NNP ^ ^ repeat
i- NNP ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
iraq NNP ^ ^ false_start
uh UH iraq ^ filler
because IN because ^ OK
of IN of ^ OK
the DT the ^ OK
huge JJ huge ^ OK
oil NN oil ^ OK
revenues NNS revenues ^ OK
uh UH ^ ^ filler
could MD could ^ OK
uh UH do ^ false_start
uh UH ^ ^ filler
the DT ^ ^ repeat
eh UH ^ ^ filler
the DT the ^ OK
same JJ same ^ OK
as IN as ^ OK
khadafi NNP khadafi ^ OK
has VBZ has ^ OK
tried VBN tried ^ OK
to TO to ^ OK
do VB do ^ OK

bec- IN ^ ^ false_start
but CC ^ ^ false_start
he PRP ^ ^ false_start
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
ha- VB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he ^ OK
's BES 's ^ OK
away RB away ^ OK
from IN ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
from IN from ^ OK
the DT the ^ OK
critical JJ critical ^ OK
area NN area ^ OK
and CC and ^ OK
the DT the ^ OK
other JJ other ^ OK
players NNS players ^ OK
in IN in ^ OK
the DT the ^ OK
oil NN oil ^ OK
business NN business ^ OK

but CC but ^ OK
they PRP they ^ OK
have VBP have ^ OK
n't RB n't ^ OK
gotten VBN gotten ^ OK
any DT any ^ OK
better JJR better ^ OK

but CC but ^ OK
with IN with ^ OK
the DT the ^ OK
kind NN kind ^ OK
of IN of ^ OK
oil NN oil ^ OK
revenues NNS revenues ^ OK
they PRP they ^ OK
had VBD had ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in ^ OK
the DT the ^ OK
interim NN interim ^ OK
um UH ^ ^ filler
would MD would ^ OK
n't RB n't ^ OK
it PRP it ^ OK
be SBAR-2 be ^ OK
very VB very ^ OK
easy RB easy ^ OK
for JJ for ^ OK
them IN them ^ OK
to PRP to ^ OK
re-arm TO re-arm ^ OK
and VB and ^ OK
be CC be ^ OK
re- VB ^ ^ false_start
more XX more ^ OK
in RBR in ^ OK
advanced IN advanced ^ OK
position JJ position ^ OK
than NN than ^ OK
they IN they ^ OK
were PRP were ^ OK
before VBD before ^ OK

that DT ^ ^ repeat
eh UH ^ ^ filler
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
your PRP ^ ^ repeat
your PRP your ^ OK
problem NN problem ^ OK

eh UH ^ ^ filler
because IN because ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
intelligence NN intelligence ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
talk VB talk ^ OK
to IN to ^ OK
the DT the ^ OK
american JJ american ^ OK
people NNS people ^ OK

if IN ^ ^ repeat
if IN if ^ OK
i- NNP ^ ^ repeat
iran NNP iran ^ OK
was VBD was ^ OK
n't RB n't ^ OK
such PDT such ^ OK
a DT a ^ OK
nasty JJ nasty ^ OK
cou- NN ^ ^ repeat
uh UH ^ ^ filler
country NN country ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
be VB be ^ OK
in IN in ^ OK
favor NN favor ^ OK
of IN of ^ OK
going VBG going ^ OK
after IN after ^ OK
them PRP them ^ OK

well UH ^ ^ false_start
they PRP ^ ^ false_start
've VBP ^ ^ false_start
k- VBN ^ ^ false_start
he PRP he ^ OK
's HVS 's ^ OK
killed VBN killed ^ OK
over IN over ^ OK
a DT a ^ OK
million CD million ^ OK
of IN of ^ OK
his PRP his ^ OK
own JJ own ^ OK
people NNS people ^ OK

we- PRP ^ ^ repeat
heh UH ^ ^ filler
we PRP ^ ^ repeat
we- PRP ^ ^ repeat
heh UH ^ ^ filler
we PRP ^ ^ repeat
uh UH ^ ^ filler
we PRP ^ ^ repeat
we PRP we ^ OK
destroyed VBD destroyed ^ OK
the DT the ^ OK
taliban NNP taliban ^ OK
because IN because ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
destroyed VBD destroyed ^ OK
all PDT all ^ OK
the DT the ^ OK
national JJ national ^ OK
monuments NNS monuments ^ OK

he PRP ^ ^ repeat
he PRP ^ ^ repeat
uh UH ^ ^ filler
he PRP he ^ OK
destroyed VBN ^ ^ repeat
destroyed VBD destroyed ^ OK
uh UH ^ ^ filler
an DT ^ ^ repeat
arm- NN ^ ^ false_start
uh UH ^ ^ filler
an DT an ^ OK
area NN area ^ OK
bigger JJR bigger ^ OK
than IN than ^ OK
the DT the ^ OK
everglades NNPS everglades ^ OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
environmentally RB environmental ly ^ OK

uh UH ^ ^ filler
huh UH ^ ^ filler
huh UH ^ ^ filler
and CC ^ ^ false_start
treads VBZ treads ^ OK
tremendous JJ tremendous ^ OK
damage NN damage ^ OK
to IN to ^ OK
uh UH ^ ^ filler
lots NNS lots ^ OK
of IN of ^ OK
species NNS species ^ OK
of IN ^ ^ repeat
of IN of ^ OK
unique JJ unique ^ OK
fish NN fish ^ OK
birds NNS birds ^ OK
and CC and ^ OK
animals NNS animals ^ OK
that WDT that ^ OK
live VBP live ^ OK
there RB there ^ OK

well UH ^ ^ false_start
possibly RB possibly ^ OK
because IN because ^ OK
of IN of ^ OK
what WP what ^ OK
happened VBD happened ^ OK
in IN in ^ OK
nine CD nine ^ OK
eleven CD eleven ^ OK

they PRP ^ ^ repeat
're VBP ^ ^ repeat
they PRP ^ ^ repeat
're VBP ^ ^ repeat
they PRP ^ ^ false_start
're VBP ^ ^ false_start
they PRP ^ ^ false_start
if IN ^ ^ false_start
they PRP ^ ^ false_start
ta- VBP ^ ^ false_start
if IN if ^ OK
they PRP they ^ OK
scare VBP scare ^ OK
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
other JJ other ^ OK
players NNS players ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
you PRP you ^ OK
may MD may ^ OK
end VB end ^ OK
up RP up ^ OK
uh UH ^ ^ filler
with IN with ^ OK
less JJR less ^ OK
problems NNS problems ^ OK
like IN like ^ OK
that DT that ^ OK

in IN in ^ OK
the DT the ^ OK
eh UH ^ ^ filler
eh UH ^ ^ filler
heh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler

i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
so RB so ^ OK
sure JJ sure ^ OK
about IN about ^ OK
that DT that ^ OK

eh UH ^ ^ filler
uh UH ^ ^ filler
they PRP they ^ OK
said VBD said ^ OK
the DT the ^ OK
same JJ same ^ OK
things NNS things ^ OK
about IN about ^ OK
afghanistan NNP afghanistan ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
did VBD did ^ OK
n't RB n't ^ OK
destabilize VB destabilize ^ OK
the DT the ^ OK
region NN region ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
uh UH ^ ^ filler
you PRP you ^ OK
've VBP 've ^ OK
got VBN got ^ OK
t- XX ^ ^ false_start
s- NN ^ ^ false_start
tremendous JJ tremendous ^ OK
stability NN stability ^ OK
uh UH ^ ^ filler
in IN ^ ^ repeat
uh UH ^ ^ filler
in IN in ^ OK
iraq NNP iraq ^ OK
and CC and ^ OK
syria NNP syria ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
where WRB where ^ OK
very RB very ^ OK
small JJ small ^ OK
minorities NNS minorities ^ OK
uh UH ^ ^ filler
of IN of ^ OK
like IN ^ ^ filler
six CD six ^ OK
or CC or ^ OK
eight CD eight ^ OK
percent NN percent ^ OK
of IN of ^ OK
the DT the ^ OK
population NN population ^ OK
sits VBZ sits ^ OK
on IN on ^ OK
top NN top ^ OK
of IN of ^ OK
the DT the ^ OK
other JJ other ^ OK
population NN population ^ OK
and CC and ^ OK
abuses VBZ abuses ^ OK
them PRP them ^ OK

syria NNP syria ^ OK
is VBZ is ^ OK
not RB not ^ OK
a DT ^ ^ repeat
a DT a ^ OK
great JJ ^ ^ repeat
great JJ great ^ OK
place NN place ^ OK
either RB either ^ OK
in IN in ^ OK
terms NNS terms ^ OK
of IN of ^ OK
uh UH ^ ^ filler
human JJ human ^ OK
rights NNS rights ^ OK

but CC but ^ OK
they PRP they ^ OK
're VBP 're ^ OK
a DT a ^ OK
little JJ little ^ OK
quieter NN quieter ^ OK
under SBAR-1 under ^ OK
the IN the ^ OK
son DT son ^ OK
than NN than ^ OK
they IN they ^ OK
were PRP were ^ OK
und- VBD ^ ^ repeat
under IN under ^ OK
the IN the ^ OK
father DT father ^ OK

it PRP it ^ OK
seems VBZ seems ^ OK
like IN ^ ^ false_start
the DT the ^ OK
th- DT ^ ^ repeat
person NN person ^ OK
with IN with ^ OK
the DT the ^ OK
most JJS most ^ OK
money NN money ^ OK
and CC ^ ^ repeat
or CC or ^ OK
who WP who ^ OK
has VBZ has ^ OK
the DT ^ ^ repeat
the DT the ^ OK
best JJS ^ ^ repeat
best JJS best ^ OK
lawyer NN ^ ^ repeat
lawyer NN lawyer ^ OK

that IN ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
about IN about arg2 OK
justice NN justice arg2 OK

well UH ^ ^ filler
i PRP ^ ^ false_start
wonder VBP ^ ^ false_start
if IN ^ ^ false_start
being VBG ^ ^ false_start
televised VBN ^ ^ false_start
i PRP i arg0 OK
know VBP know predicate OK
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
do VBP ^ ^ false_start
get VB get arg1 OK
into IN into arg1 OK
it PRP it arg1 OK
and CC and arg1 OK
like VBP like arg1 OK
to TO to arg1 OK
watch VB watch arg1 OK
it PRP it arg1 OK

and CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
like IN like arg2 OK
a DT a arg2 OK
soap NN soap arg2 OK
opera NN opera arg2 OK

i PRP i arg0 OK
wonder VBP wonder predicate OK
if IN if arg1 OK
it PRP it arg0 OK
helps VBZ helps arg1 OK
anybody NN anybody arg0 OK
stay VBP ^ ^ repeat
steer VB steer arg1 OK
away RB away arg_particl OK
from IN from arg1 OK
it PRP it arg1 OK

like IN ^ ^ filler
other JJ ^ ^ false_start
celebrities NNS celebrities arg0 OK
that WDT that arg0 OK
do VBP do arg0 OK
n't RB n't arg0 OK
want VB want arg0 OK
to TO to arg0 OK
be VB be arg0 OK
televised VBN televised arg0 OK
in IN in arg0 OK
a DT a arg0 OK
court NN court arg0 OK
case NN case arg0 OK
think VB think predicate OK
twice RB twice ^ OK
about IN about arg1 OK
doing VBG doing arg1 OK
something NN something arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
always RB ^ ^ false_start
heard VBN heard predicate OK
that IN that arg1 OK
good JJ good arg0 false_start
or CC or arg0 false_start
bad JJ bad arg0 false_start
uh UH ^ ^ filler
publicity NN publicity arg0 OK
whether IN ^ ^ false_start
is VBZ is arg1 OK
still RB still arg2 OK
publicity NN publicity arg2 OK
and CC and arg1 OK
keeps VBZ keeps arg1 OK
you PRP you arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
public NN public argM_loc OK
's POS 's argM_loc OK
eye NN eye argM_loc OK

but CC ^ ^ repeat
but CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
we PRP we arg0 OK
do VBP ^ ^ false_start
judge VB judge arg1 OK
uh UH ^ ^ filler
celebrities NNS celebrities arg1 OK
on IN on arg1 OK
bad JJ bad arg1 OK
events NNS events arg1 OK

so UH ^ ^ false_start
it PRP it arg1 OK
was VBD was predicate OK
just RB just arg2 OK
m- JJR ^ ^ repeat
more JJR more arg2 OK
rumors NNS rumors arg2 OK
of IN ^ ^ false_start
what WP ^ ^ false_start
was VBD ^ ^ false_start
being VBG ^ ^ false_start
said VBN ^ ^ false_start
and CC ^ ^ false_start
done VBN ^ ^ false_start

it PRP it arg1 OK
was VBD was predicate OK
n't RB n't argM_neg OK
the DT the arg2 OK
same JJ same arg2 OK
as IN as arg2 OK
watching VBG watching arg2 OK
a DT a arg1 OK
trial NN trial ^ OK
trial NN ^ arg1 false_start
and CC where arg1 false_start
it PRP it arg1 OK
being VBG is arg1 false_start
all DT all arg2 false_start
drug VBN dragged arg2 false_start
out RB out arg2 OK
and CC ^ ^ false_start

and CC ^ ^ false_start
then RB then ^ OK
i PRP i ^ OK
would MD would ^ OK
see VB see ^ OK
what WP ^ ^ false_start
we PRP ^ ^ false_start
had VBD ^ ^ false_start
in IN ^ ^ false_start
what WP what ^ OK
we PRP we ^ OK
would MD would ^ OK
have VB have ^ OK
in IN in ^ OK
our PRP our ^ OK
carry NN carry ^ OK
on RP on ^ OK
bags NNS bags ^ OK
that WDT that ^ OK
you PRP you ^ OK
carry VBP carry ^ OK
on IN on ^ OK
the DT the ^ OK
plane NN plane ^ OK
that WDT that ^ OK
we PRP we ^ OK
could MD could ^ OK
use VB use ^ OK
for IN for ^ OK
a DT a ^ OK
little JJ little ^ OK
while NN while ^ OK

anywhere RB ^ ^ false_start
you PRP ^ ^ false_start
're VBP ^ ^ false_start
you PRP you ^ OK
travel VBP travel ^ OK
anywhere RB anywhere ^ OK
you PRP you ^ OK
always RB always ^ OK
got VBN get ^ false_start
something NN something ^ OK
to TO to ^ OK
eat VB eat ^ OK

so UH so ^ OK
uh UH ^ ^ filler
we PRP we ^ OK
take VBP take ^ OK
the DT ^ ^ repeat
uh UH ^ ^ filler
the DT the ^ OK
uh UH ^ ^ filler

so UH so ^ OK
we PRP we ^ OK
take VBP take ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
those DT those ^ OK
uh UH ^ ^ filler
s- NN ^ ^ repeat
seat NN seat ^ OK
covers VBZ covers ^ OK
they PRP they ^ OK
have VBP have ^ OK
on IN on ^ OK
the DT the ^ OK
back NN back ^ OK

so RB so ^ OK
the DT the ^ OK
baby NN baby ^ OK
will MD will ^ OK
survive VB survive ^ OK
and CC and ^ OK
not RB not ^ OK
be VB be ^ OK
pee NN pee ^ OK
pee NN pee ^ OK

but CC but ^ OK
really RB ^ ^ false_start
our PRP ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
uh UH ^ ^ filler
go VB go ^ OK
around RB around ^ OK
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
to IN to ^ OK
everybody NN everybody ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
a DT a ^ OK
really RB really ^ OK
out RB out ^ OK
person NN person ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
a DT a ^ OK
really RB really ^ OK
outgoing JJ outgoing ^ OK

oh UH ^ ^ filler
and CC ^ ^ false_start
they PRP they ^ OK
probably RB probably ^ OK
'd MD ^ ^ repeat
would MD would ^ OK
send VB send ^ OK
me PRP me ^ OK
up RP up ^ OK
and CC ^ ^ repeat
and CC and ^ OK
uh UH ^ ^ filler
check VB check ^ OK
on IN on ^ OK
the DT the ^ OK
pilot NN pilot ^ OK

ah UH ^ ^ filler
the DT the ^ OK
sight NN sight ^ OK
of IN of ^ OK
it PRP it ^ OK
just RB just ^ OK
f- XX f- ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
say VBP say ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
sometimes RB sometimes ^ OK
a DT a ^ OK
plane NN plane ^ OK
is VBZ is ^ OK
just RB just ^ OK
up IN up ^ OK
in IN in ^ OK
the DT the ^ OK
sky NN sky ^ OK
and CC and ^ OK
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden JJ sudden ^ OK
it PRP it ^ OK
just RB just ^ OK
booms UH ^ ^ filler
drops VBZ drops ^ OK
down RB down ^ OK

or CC or ^ OK
or CC ^ ^ repeat
they PRP they ^ OK
uh UH ^ ^ filler
get VBP get ^ OK
in IN in ^ OK
conversation NN conversation ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
get VBP get ^ OK
to IN to ^ OK
chit-chatting NN ^ ^ repeat
chatting NN chatting ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
the DT the ^ OK
next JJ next ^ OK
thing NN thing ^ OK
you PRP you ^ OK
know VBP know ^ OK
it NP-1 it ^ OK
's PRP 's ^ OK
down BES down ^ OK
in RB in ^ OK
the IN the ^ OK
sea DT sea ^ OK
or NN or ^ OK
no- CC ^ ^ false_start
in XX in ^ OK
your IN your ^ OK
trees PRP trees ^ OK
or NNS or ^ OK
in CC in ^ OK
somebody IN somebody ^ OK
's NN 's ^ OK
yard BES yard ^ OK
or NN or ^ OK
on CC on ^ OK
their IN their ^ OK
house PRP house ^ OK
or NN or ^ OK
some CC some ^ OK
way DT way ^ OK

f- RB ^ ^ repeat
forever RB forever ^ OK
oh UH ^ ^ filler

you PRP you ^ OK
thinking VBG thinking ^ OK
like UH ^ ^ filler
t- XX ^ ^ false_start
on IN on ^ OK
the DT the ^ OK
survivors NNS survivors ^ OK
were VBD were ^ OK
it PRP it ^ OK
w- XX w- ^ OK

y- XX ^ ^ false_start
right UH right ^ OK

but CC but ^ OK
w- XX ^ ^ false_start
b- XX ^ ^ false_start
you PRP ^ ^ repeat
you PRP you ^ OK
brought VBD brought ^ OK
up RP up ^ OK
a DT a ^ OK
good JJ good ^ OK
point NN point ^ OK
out IN out ^ OK
there RB there ^ OK

the DT ^ ^ repeat
the DT the ^ OK
planes NNS planes ^ OK
are VBP are ^ OK
not RB not ^ OK
maintained VBN maintained ^ OK

any DT any ^ OK
time NN time ^ OK
you PRP you ^ OK
take VBP take ^ OK
a DT a ^ OK
plane NN plane ^ OK
from IN from ^ OK
one CD one ^ OK
s- NN ^ ^ repeat
uh UH ^ ^ filler
side NN side ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK
almost RB almost ^ OK
to IN to ^ OK
the DT the ^ OK
other JJ other ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
sitting VBG sitting ^ OK
down RP down ^ OK
on IN on ^ OK
the DT the ^ OK
ground NN ground ^ OK
for IN for ^ OK
two CD two ^ OK
hours NNS hours ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
back RB back ^ OK
up RB up ^ OK
doing VBG doing ^ OK
the DT the ^ OK
same JJ same ^ OK
thing NN thing ^ OK
back RB back ^ OK
and CC and ^ OK
forth RB forth ^ OK

and CC ^ ^ false_start
this DT this ^ OK
is VBZ is ^ OK
a DT a ^ OK
twenty-four CD twenty-four ^ OK
hour NN hour ^ OK
ritual NN ritual ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
sitting VBG sitting ^ OK
on IN on ^ OK
the DT the ^ OK
ground NN ground ^ OK
long RB long ^ OK
enough RB enough ^ OK
for IN for ^ OK
n- DT ^ ^ repeat
no DT a ^ false_start
real JJ real ^ OK
mechanic NN mechanic ^ OK
to TO to ^ OK
put VB put ^ OK
any DT any ^ OK
real JJ real ^ OK
parts NNS parts ^ OK
or CC or ^ OK
do VBP do ^ OK
any DT any ^ OK
real JJ real ^ OK
work NN work ^ OK
to IN to ^ OK
it PRP it ^ OK

you ADVP-1 ^ ^ false_start
're PRP ^ ^ false_start
you VBP you ^ OK
got PRP got ^ OK
a VBN a ^ OK
point DT point ^ OK
there NN there ^ OK

you PRP you ^ OK
got VBN got ^ OK
a DT a ^ OK

um UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
ban VB ban ^ OK
books NNS books ^ OK
like IN like ^ OK
eh UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
huckleberry NNP huckleberry ^ OK
finn NNP finn ^ OK
things NNS ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

i- PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
know VB know ^ OK

but CC ^ ^ false_start
um UH ^ ^ filler
i PRP i ^ OK
know VBP know ^ OK
that IN that ^ OK
um UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
some DT some ^ OK
people NNS people ^ OK
think VBP think ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
li- XX ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
political JJ political ^ OK
correctness NN correctness ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
then RB then ^ OK
um UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
i- PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
who WP who ^ OK
wants VBZ wants ^ OK
to TO to ^ OK
b- VB ^ ^ repeat
eh UH ^ ^ filler
ban VB ban ^ OK
books NNS books ^ OK

i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's BES 's ^ OK
mainly RB mainly ^ OK
like UH ^ ^ filler
conservatives NNS conservatives ^ OK
that WDT ^ ^ false_start
want VBP ^ ^ false_start
to TO ^ ^ false_start
eh UH ^ ^ filler
that WDT that ^ OK
ar- VBP ^ ^ repeat
are VBP are ^ OK
worried JJ worried ^ OK
about IN about ^ OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
non JJ non ^ OK
family NN family ^ OK
values NNS values ^ OK
in IN in ^ OK
books NNS books ^ OK

is VBZ ^ ^ false_start
n't RB ^ ^ false_start
it PRP ^ ^ false_start
is VBZ is ^ OK
that DT that ^ OK
true JJ true ^ OK

or CC ^ ^ false_start
is VBZ ^ ^ false_start
it PRP ^ ^ false_start
also RB ^ ^ false_start
it PRP it ^ OK
may MD may ^ OK
also RB also ^ OK
be VB be ^ OK
eh UH ^ ^ filler
sort RB ^ ^ false_start
of RB ^ ^ false_start
liberals NNS liberals ^ OK
who WP who ^ OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want ^ OK
like UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
the DT the ^ OK
racism NN racism ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
in IN ^ ^ repeat
in IN in ^ OK
older JJR older ^ OK
books NNS books ^ OK

figure VB figure ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
sure JJ sure ^ OK
you PRP you ^ OK
could MD could ^ OK
n't RB n't ^ OK
come VB come ^ OK
up RP up ^ OK
with IN with ^ OK
that DT that ^ OK
without IN without ^ OK
some DT some ^ OK
sig- XX sig- ^ OK

right UH ^ ^ filler
de- UH ^ ^ false_start
defi- UH ^ ^ false_start
the DT the ^ OK
mad JJ mad ^ OK
hatter NN hatter ^ OK
and CC and ^ OK
um UH ^ ^ filler

i PRP ^ ^ false_start
d- XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
thought VBD ^ ^ repeat
thought VBD thought ^ OK
they PRP they ^ OK
said VBD said ^ OK
something NN something ^ OK
about IN about ^ OK
the DT the ^ OK
media NN media ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
of IN ^ ^ false_start
course NN ^ ^ false_start
with IN ^ ^ false_start
internet NNP ^ ^ false_start
there EX ^ ^ repeat
there EX there ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
that RB ^ ^ repeat
really RB really ^ OK
much JJ ^ ^ repeat
much JJ much ^ OK
i- NN ^ ^ repeat
internet NN internet ^ OK
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
in IN in ^ OK
high JJ high ^ OK
school NN school ^ OK

so UH ^ ^ filler
are VBP are ^ OK
you PRP you ^ OK
older JJR older ^ OK
or CC or ^ OK
younger JJR younger ^ OK

oh UH ^ ^ filler
okay UH ^ ^ filler
so UH ^ ^ filler
you- PRP ^ ^ repeat
you PRP you ^ OK
're VBP 're ^ OK
a DT a ^ OK
little RB little ^ OK
closer RBR closer ^ OK
to IN to ^ OK
high JJ high ^ OK
school NN school ^ OK

we PRP ^ ^ repeat
we PRP ^ ^ repeat
we PRP we ^ OK
b- RB ^ ^ repeat
barely RB ^ ^ repeat
barely RB barely ^ OK
had VBD had ^ OK
it PRP it ^ OK

ninety CD ^ ^ repeat
well UH ^ ^ filler
ninety-three CD ninety-three ^ OK
is VBZ is ^ OK
when WRB when ^ OK
i PRP i ^ OK
graduated VBD graduated ^ OK

so UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
n't RB n't ^ OK
really RB really ^ OK
an DT an ^ OK
issue NN issue ^ OK
then RB then ^ OK

but CC ^ ^ false_start
now RB now ^ OK
it PRP it ^ OK
's BES 's ^ OK
^ ^ ^ ^ filler
definitely RB definitely ^ OK
a DT ^ ^ repeat
a DT a ^ OK
big JJ ^ ^ repeat
big JJ big ^ OK
issue NN issue ^ OK

the DT ^ ^ false_start
eh UH ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
uh UH ^ ^ filler
talk VB talk ^ OK
about IN about ^ OK
media NN media ^ OK
censorship NN censorship ^ OK

but CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
what WP what ^ OK
do VBP do ^ OK
you PRP you ^ OK
think VB think ^ OK
about IN about ^ OK

well UNK ^ ^ filler
i UNK i ^ OK
think UNK think ^ OK
the UNK ^ ^ false_start
eh UNK ^ ^ filler
i UNK ^ ^ filler
mean UNK ^ ^ filler
the UNK the ^ OK
current UNK current ^ OK
issue UNK issue ^ OK
is UNK ^ ^ false_start
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
for UNK for ^ OK
at UNK at ^ OK
least UNK least ^ OK
with UNK with ^ OK
the UNK the ^ OK
presidential UNK presidential ^ OK
thing UNK thing ^ OK
is UNK is ^ OK
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
uh UNK ^ ^ filler
saying UNK saying ^ OK
there UNK there ^ OK
's UNK 's ^ OK
too UNK too ^ OK
much UNK much ^ OK
violence UNK violence ^ OK
in UNK in ^ OK
i UNK ^ ^ false_start
think UNK ^ ^ false_start
it UNK ^ ^ false_start
's UNK ^ ^ false_start
mainly UNK mainly ^ OK
mo- UNK ^ ^ repeat
movies UNK movies ^ OK
movies UNK ^ ^ false_start
t. UNK and ^ false_start
t. UNK t. ^ OK
v. UNK v. ^ OK
things UNK ^ ^ false_start
like UNK ^ ^ false_start
that UNK ^ ^ false_start

i PRP ^ ^ repeat
i PRP i ^ OK
think VBP ^ ^ repeat
think VBP think ^ OK
tha- IN ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
eh UH ^ ^ filler
pretty RB pretty ^ OK
much RB much ^ OK
the DT the ^ OK
best JJS best ^ OK
point NN point ^ OK

that IN ^ ^ filler
um UH ^ ^ filler
the DT ^ ^ false_start
uh UH ^ ^ filler
the DT the ^ OK
argument NN argument ^ OK
is VBZ is ^ OK
something NN something ^ OK
uh UH ^ ^ filler
like IN like ^ OK
like IN _ARG_ ^ false_start

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
're VBP 're ^ OK
worried JJ worried ^ OK
about IN about ^ OK
kids NNS kids ^ OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
do VBP do ^ OK
you PRP you ^ OK
think VB think ^ OK
this DT this ^ OK
really RB really ^ OK
affects VBZ affects ^ OK
kids NNS kids ^ OK
or CC ^ ^ false_start
not RB ^ ^ false_start

i PRP ^ ^ repeat
i PRP i ^ OK
gue- VBP ^ ^ repeat
guess VBP guess ^ OK
that DT that ^ OK
's BES 's ^ OK
true JJ true ^ OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
do VBP ^ ^ repeat
eh UH ^ ^ filler
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
thin- VBP ^ ^ repeat
think VB think ^ OK
it PRP it ^ OK
just RB just ^ OK
makes VBZ makes ^ OK
them PRP them ^ OK
like UH ^ ^ filler
wres- VB ^ ^ false_start
uh UH ^ ^ filler
mess VB mess ^ OK
around RB around ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
horseplay VB horseplay ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's S-1 's ^ OK
they PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
they PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
uh UH ^ ^ filler
probably RB probably ^ false_start
too BES too ^ OK
much RB much ^ OK
of JJ of ^ OK
a IN a ^ OK
hassle DT hassle ^ OK
to NN to ^ OK
make TO make ^ OK
a VB a ^ OK
law DT law ^ OK
about NN about ^ OK
it IN it ^ OK

it PRP it ^ OK
's BES 's ^ OK
really RB really ^ OK
quite PDT quite ^ OK
a DT a ^ OK

eh UH ^ ^ filler
probably RB probably ^ OK
government NN government ^ OK
should MD should ^ OK
not RB not ^ OK
be VB be ^ OK
in IN in ^ OK
it PRP it ^ OK
i PRP i ^ OK
think VBP think ^ OK

he PRP he arg1 OK
kicks VBZ ^ ^ repeat
kicks VBZ kicks predicate OK
back RB ^ ^ repeat
back RB back argM_dir OK
and CC and ^ OK
relaxes VBZ relaxes predicate OK
a DT a argM_extent OK
little JJ little argM_extent OK
bit NN bit argM_extent OK
with IN with arg0 OK
a DT a arg0 OK
cigarette NN cigarette arg0 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
very RB very arg2 OK
sensitive JJ sensitive arg2 OK
to IN to arg2 OK
the DT the arg2 OK
smell NN smell arg2 OK
and CC ^ ^ repeat
and CC and arg2 OK
i- XX ^ ^ false_start
to IN to arg2 OK
all PDT all arg2 OK
that DT that arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
stuff NN stuff arg2 OK

so UH ^ arg1 false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
can MD ^ ^ false_start
if IN if argM_adverb OK
i PRP i arg0 OK
can MD get predicate false_start
whiff VB a ^ false_start
whiff VB whiff arg1 OK
of IN of arg1 OK
it PRP it arg1 OK
in IN in argM_loc OK
a DT a argM_loc OK
restaurant NN restaurant argM_loc OK
it PRP it arg0 OK
really RB really argM_adverb OK
bothers VBZ bothers predicate OK
me PRP me arg1 OK
and CC and ^ OK
bothers VBZ bothers predicate OK
my PRP my arg1 OK
eyes NNS eyes arg1 OK

at IN at ^ OK

uh UH ^ ^ filler
my PRP ^ ^ false_start
g- XX ^ ^ false_start
yeah UH yeah ^ OK

i PRP i arg0 OK
work VBP work predicate OK
at IN at arg2 OK
a DT ^ ^ repeat
a DT a arg2 OK
large JJ large arg2 OK
m- NN ^ ^ repeat
mortgage NN mortgage arg2 OK
company NN company arg2 OK

and CC and ^ OK
uh UH ^ ^ filler

and CC ^ ^ false_start
if IN if argM_adverb OK
you PRP you arg0 OK
walk VBP walk predicate OK
out IN out arg1 OK
the DT the arg1 OK
door NN door arg1 OK
and CC and ^ OK
you PRP ^ ^ false_start
just RB just argM_adverb OK
walk VBP walk predicate OK
through IN through arg1 OK
it PRP it arg1 OK
it PRP it arg0 OK
's BES 's ^ OK
just RB just argM_adverb OK
like IN like predicate OK
walking VBG walking arg1 OK
through IN through arg1 OK
clouds NNS clouds arg1 OK
of IN of arg1 OK
smoke NN smoke arg1 OK
to TO to argM_purpos OK
get VB get argM_purpos OK
to IN to arg2 OK
your PRP your arg2 OK
car NN car arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i- XX ^ ^ false_start
they PRP they arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
any DT any arg1 OK
rights NNS rights arg1 OK

uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
what NN ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg0 OK
's BES ^ ^ repeat
causes VBZ causes predicate OK
cancer NN cancer arg1 OK

my PRP ^ ^ repeat
my PRP my arg0 OK
father NN father arg0 OK
had VBD had predicate OK
cancer NN cancer arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
i- PRP ^ ^ false_start
they PRP ^ ^ false_start
i- PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- XX ^ ^ false_start
they PRP they arg0 OK
know VBP know predicate OK
that IN that arg1 OK
eh UH ^ ^ filler
it PRP it arg0 OK
causes VBZ causes arg1 OK
bladder NN bladder arg1 OK
cancer NN cancer arg1 OK
and CC and arg1 OK
different JJ different arg1 OK
types NNS types arg1 OK
of IN of arg1 OK
things NNS things arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if argM_adverb OK
you PRP you arg0 OK
're VBP 're ^ OK
breathing VBG breathing predicate OK
it PRP it arg1 OK
in RB in arg2 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
your PRP your arg1 OK
rights NNS rights arg1 OK
stop VBP stop arg1 OK
when WRB when argM_tmp OK
you PRP you arg0 OK
're VBP 're argM_tmp OK
affecting VBG affecting argM_tmp OK
other JJ other arg1 OK
people NNS people arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
see VBP see predicate OK
your PRP your arg1 OK
point NN point arg1 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
life NN ^ ^ repeat
life NN life arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
gray JJ gray arg2 OK
areas NNS areas arg2 OK

and CC ^ ^ false_start
life NN life arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
m- NN ^ ^ repeat
matter NN matter arg2 OK
of IN of arg2 OK
choices NNS choices arg2 OK

i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg1 OK
is VBZ is arg1 OK
more RBR ^ ^ repeat
more RBR more arg2 OK
of IN of arg2 OK
a DT a arg2 OK
complicated JJ ^ ^ repeat
complicated JJ complicated arg2 OK
issue NN issue arg2 OK
than IN than argM_extent OK
it PRP it arg1 OK
seems VBZ seems arg2 OK
to TO to arg2 OK
be VB be arg2 OK
at IN at arg2 false_start
first RB first arg2 false_start

but CC ^ ^ false_start
we PRP ^ ^ repeat
we PRP we arg0 OK
t- VBD ^ ^ repeat
talked VBD talked predicate OK
a DT a argM_extent OK
little JJ little argM_extent OK
about IN about arg1 OK
the DT the arg1 OK
topic NN topic arg1 OK

i PRP ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
funny JJ funny arg2 OK

um UH ^ ^ filler
and CC ^ ^ false_start
i PRP i arg0 OK
just RB just argM_adverb OK
keep VBP keep predicate OK
hearing VBG hearing arg1 OK
about IN about arg1 OK
california NNP california arg1 OK
san NNP san arg1 OK
diego NNP diego arg1 OK
san NNP san arg1 OK
francisco NNP francisco arg1 OK

and CC ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm ^ OK
just RB just argM_adverb OK
toying VBG toying predicate OK
around RB around arg1 OK
with IN with arg1 OK
the DT the arg1 OK
idea NN idea arg1 OK
of IN of arg1 OK
possibly RB possibly argM_adverb OK
relocating VBG relocating arg1 OK

just RB ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
heard VBD heard predicate OK
that IN that arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
just RB just argM_adverb OK
more RBR more argM_extent OK
naturally RB naturally arg1 OK
beautiful JJ beautiful arg1 OK
and CC and arg2 OK
just RB just argM_adverb OK
a DT a arg1 OK
nicer JJR nicer arg1 OK
way NN way arg1 OK
of IN of arg2 OK
living NN living arg2 OK
out IN out argM_loc OK
there RB there argM_loc OK

what WP ^ ^ false_start
i- XX ^ ^ false_start
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
think VB think predicate OK

well UH ^ ^ filler
what WP ^ ^ repeat
what WP what arg1 OK
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
have VB have argM_mod OK
to TO to argM_mod OK
say VB say predicate OK
about IN about arg3 OK
l. NNP l. arg3 OK
a. NNP a. arg3 OK
and CC and arg3 OK
that DT that arg3 OK
area NN area arg3 OK

the DT ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
the DT the ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
w- XX ^ ^ false_start
over IN over argM_tmp OK
the DT the argM_tmp OK
weekend NN weekend argM_tmp OK
i PRP i arg1 OK
was VBD was predicate OK
up RB up arg2 OK
in IN in arg2 OK
manhattan NNP manhattan arg2 OK
at IN at arg2 OK
the DT the arg2 OK
san NNP san arg2 OK
gennaro NNP gennaro arg2 OK
festival NNP festival arg2 OK
the DT the arg2 OK
big JJ big arg2 OK
italian JJ italian arg2 OK
festival NN festival arg2 OK

and CC ^ arg1 false_start
just RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
can MD can argM_mod OK
drive VB drive predicate OK
to IN to arg1 OK
the DT the arg1 OK
shore NN shore arg1 OK
to IN to arg1 OK
philly NNP philly arg1 OK
to IN to arg1 OK
new NNP new arg1 OK
york NNP york ^ OK
york NNP ^ arg1 false_start
d. NNP or ^ false_start
to IN to arg1 OK
d. NNP d. arg1 OK
c. NNP c. arg1 OK

so UNK ^ ^ false_start
that UNK that arg1 OK
's UNK 's predicate OK
the UNK ^ ^ repeat
the UNK the arg1 OK
only UNK only arg1 OK
thing UNK thing arg1 OK
i UNK i arg1 OK
was UNK was arg1 OK
kind UNK kind arg1 OK
of UNK of arg1 OK
concerned UNK concerned arg1 OK
about UNK about arg1 OK
is UNK is arg2 OK
that UNK that arg2 OK
i UNK ^ ^ false_start
d- UNK ^ ^ false_start
i UNK i arg0 OK
just UNK ^ ^ false_start
heard UNK heard arg2 OK
that UNK that arg1 OK
there UNK there arg1 OK
's UNK 's arg1 OK
just UNK just argM_adverb OK
i UNK ^ ^ filler
guess UNK ^ ^ filler
less UNK less arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
def- RB ^ ^ false_start
i PRP i arg0 OK
see VBP see predicate OK
the DT the arg1 OK
pros NNS pros arg1 OK
and CC and arg1 OK
the DT the arg1 OK
cons NNS cons arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
if IN if arg1 OK
we PRP we arg0 OK
had VBD had arg1 OK
a DT ^ ^ repeat
uh UH ^ ^ filler
a DT a arg1 OK
perfect JJ perfect arg1 OK
society NN society arg1 OK
where WRB where arg1 OK
if IN if arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
fill VBP fill arg1 OK
fill VBP out arg1 false_start
applications NNS applications arg1 OK
you PRP then ^ false_start
you PRP you arg0 OK
would MD would arg1 OK
n't RB n't arg1 OK
even RB even arg1 OK
put VB put arg1 OK
your PRP your arg1 OK
race NN race arg1 OK
on IN on arg2 OK
there EX there arg2 OK
and CC so arg1 false_start
just RB they ^ false_start
just RB ^ arg1 filler
go VB go arg1 OK
strictly RB strictly argM_other OK
by IN by argM_other OK
uh UH ^ ^ filler
the DT the argM_other OK
qualifications NNS qualification s  argM_other OK
and CC and arg1 OK
hire VB hire arg1 OK
somebody NN somebody arg1 OK
off IN off arg1 OK
of IN of arg1 OK
that DT that arg1 OK
you ADVP-LOC- 3 then ^ false_start
you ADVP-LOC- 3 ^ ^ filler
know PRP ^ ^ filler
eh VBP ^ ^ filler
i UH i arg0 OK
would PRP would arg1 OK
be MD be arg1 OK
really VB ^ ^ repeat
really RB really arg2 OK
interested RB interested arg2 OK
to JJ to arg2 OK
see TO see arg2 OK
how VB how arg1 OK
that WRB that arg0 OK
turned DT turned arg1 OK
out VBD out arg1 OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
in IN ^ ^ false_start
the DT ^ ^ false_start
spirit NN ^ ^ false_start
that WDT ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
created VBN ^ ^ false_start
back RB ^ ^ false_start
in IN ^ ^ false_start
was VBD was predicate OK
it PRP it arg1 OK
kennedy NNP kennedy arg2 OK
who WP who arg0 OK
u- XX ^ ^ false_start
started VBD started predicate OK
it PRP it arg1 OK

but CC ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
that IN ^ ^ repeat
it PRP it arg1 OK
was VBD was arg1 OK
kennedy NNP kennedy arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
you PRP you arg0 OK
have VBP have predicate OK
some DT some arg1 OK
people NNS people arg1 OK
who WP who arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just arg1 OK
w- XX ^ ^ repeat
want VB want arg1 OK
certain JJ certain arg1 OK
people NNS people arg1 OK
in IN in arg1 OK
there RB there arg1 OK

and CC ^ ^ false_start
this DT ^ ^ false_start
guy NN ^ ^ false_start
is VBZ ^ ^ false_start
y- XX ^ ^ false_start
uh UH ^ ^ filler
they PRP they arg0 OK
're VBP 're ^ OK
doing VBG doing predicate OK
the DT the arg1 OK
same JJ same arg1 OK
thing NN thing arg1 OK

and CC ^ arg1 false_start
then RB ^ ^ false_start
eh UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
in IN in arg1 OK
ninety-eight NNP ninety-eight arg1 OK
when WRB or ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
either RB either ^ OK
eight CD eight ^ OK
or CC or ^ OK
n- XX ^ ^ repeat
ninety-nine CD ninety-nine ^ OK
when WRB when ^ OK
they PRP they arg0 OK
were VBD were ^ OK
looking VBG looking predicate OK
at IN at arg1 OK
the DT the arg1 OK
whole JJ whole arg1 OK
school NN school arg1 OK
um UH and ^ false_start
um UH ^ ^ filler
the DT the arg1 OK
admission NN admission arg1 OK
policies NNS policies arg1 OK
as ADVP-TMP- 1 as arg1 OK
far RB far arg1 OK
as RB as arg1 OK
schools IN schools arg1 OK
are NNS are arg1 OK
concerned VBP concerned arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
have VBP ^ ^ false_start
every DT ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
like UH ^ arg2 filler
a DT a arg2 OK
whole JJ whole arg2 OK
nother JJ other arg2 false_start
w- XX ^ ^ false_start
country NN country arg2 OK
over IN over arg2 OK
there RB there arg2 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
got VBN have predicate false_start
a- XX ^ ^ repeat
l- XX ^ ^ repeat
lu- XX ^ ^ repeat
uh UH ^ ^ filler
laws NNS laws arg1 OK
and CC and arg1 OK
ru- XX ^ ^ repeat
rules NNS rules arg1 OK
that WDT that arg1 OK
nobody NN nobody arg0 OK
else RB else arg0 OK
has VBZ has arg1 false_start

it PRP it arg1 OK
was VBD was predicate OK
the DT the arg2 OK
supreme NNP supreme arg2 OK
court NNP court arg2 OK
um UH ^ ^ filler
i- PRP ^ ^ false_start
because IN because ^ OK
it PRP it arg0 OK
went VBD went predicate OK
all PDT all arg4 OK
the DT the arg4 OK
way NN way arg4 OK
up IN up arg4 OK
there RB there arg4 OK

they PRP they arg0 OK
said VBD said predicate OK
that IN that arg1 OK
universities NNS universities arg0 OK
could MD could arg1 OK
use VB use arg1 OK
race NN race arg1 OK
as IN as arg1 OK
a DT a arg1 OK
factor NN factor arg1 OK
ah UH ^ ^ filler
with IN when argM_tmp false_start
selecting VBG selecting argM_tmp OK
students NNS students arg1 OK
for IN for arg3 OK
admission NN admission arg3 OK

n- XX ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
the DT the arg1 OK
specifics NNS specifics arg1 OK
behind IN behind arg1 OK
you PRP ^ ^ filler
know VB ^ ^ filler
that DT that arg1 OK
as RB as arg1 OK
far RB far arg1 OK
as IN as arg1 OK
why WRB why arg1 OK
they PRP they arg0 OK
ruled VBD ruled arg1 OK
that IN that arg1 OK
they PRP they arg0 OK
had VBD had arg1 OK
to TO to arg1 OK
or VP ^ ^ repeat
or ADVP-2 or arg1 OK
what CC what arg0 OK
even CC even arg1 OK
led WP led arg1 OK
to RB to arg4 OK
them VBD them arg1 OK
coming IN coming arg4 OK
up PRP up arg4 OK
to VBG with arg4 false_start
that RP that arg4 OK
because IN ^ ^ false_start
you DT ^ ^ filler
know IN ^ ^ filler
th- PRP ^ ^ false_start
a- VBP ^ ^ false_start

and CC ^ ^ false_start
then RB ^ ^ false_start
and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
remember VB remember predicate OK
when RB when arg1 OK
because IN because ^ OK
i ADVP-TMP- 1 ^ ^ filler
mean PRP ^ ^ filler
that VBP that arg1 OK
was DT was predicate OK
a VBD a arg2 OK
factor DT factor arg2 OK
when WRB when argM_tmp false_start
i PRP i arg1 false_start
was VBD was argM_tmp false_start
in IN in arg2 false_start
school NN school arg2 false_start

it PRP it arg0 OK
and CC ^ ^ false_start
then RB then ^ false_start
came VBD came predicate OK
back RB back arg1 OK
this DT this argM_tmp OK
year NN year argM_tmp OK
saying VBG saying predicate OK
that IN that ^ OK
uh UH ^ ^ filler
y- XX ^ ^ false_start
they PRP they arg0 OK
could MD could arg1 OK
use VB use arg1 OK
that DT that arg1 OK
as IN as arg1 OK
a DT a arg1 OK
factor NN factor arg1 OK
to IN to arg1 OK
um UH ^ ^ filler
selecting VBG select arg1 false_start
students NNS students arg1 OK
for IN for arg3 OK
admission NN admission arg3 OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
w- XX ^ ^ false_start
hey UH ^ ^ filler
what WP what arg1 OK
did VBD did ^ OK
you PRP you arg0 OK
make VB get predicate false_start
on IN on argM_loc OK
the DT the argM_loc OK
a. NN a. argM_loc OK
c. NN c. argM_loc OK
t. NN t. argM_loc OK

i PRP ^ ^ filler
guess VBP ^ ^ filler
eh UH ^ ^ filler
i PRP i ^ OK

and CC ^ ^ false_start
that DT that arg0 OK
can MD can ^ OK
make VB make predicate OK
a DT a arg1 OK
big JJ big arg1 OK
difference NN difference arg1 OK
because IN because ^ OK
you PRP you arg0 OK
would MD would ^ OK
n't RB n't argM_neg OK
want VB want predicate OK
to TO to arg1 OK
react VB ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
freak VB freak arg1 OK
out RP out arg_particl OK

i PRP ^ ^ repeat
just RB ^ ^ false_start
i PRP i arg0 OK
was VBD was ^ OK
amazed VBN amazed predicate OK
how WRB ^ ^ repeat
the DT ^ ^ repeat
calm NN ^ ^ repeat
was VBD ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ false_start
you PRP ^ ^ false_start
oof UH ^ ^ filler
how WRB how arg1 OK
calm JJ calm arg2 OK
people NNS people arg1 OK
were VBD were arg1 OK

um UH ^ ^ filler
i PRP ^ ^ repeat
eh UH ^ ^ filler
i PRP i arg0 OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
say VB ^ ^ repeat
say VB say predicate OK
that IN that arg1 OK
i PRP i arg1 OK
w- XX ^ ^ repeat
maybe RB ^ ^ false_start
w- MD ^ ^ repeat
would MD would arg1 OK
be VB be arg1 OK
that RB that arg2 OK
calm JJ calm arg2 OK

i PRP ^ ^ false_start
'd MD ^ ^ false_start
be VB ^ ^ false_start
maybe RB ^ ^ repeat
maybe RB maybe ^ OK
they PRP they arg1 OK
were VBD were predicate OK
frozen JJ frozen arg2 OK
in IN in arg2 OK
fear NN fear arg2 OK
too RB too ^ OK

i PRP i ^ OK

probably RB ^ ^ repeat
maybe RB maybe ^ OK
i PRP ^ ^ repeat
i PRP i arg1 OK
'd MD ^ ^ repeat
would MD would ^ OK
be VB be predicate OK
hm UH ^ ^ filler
frozen JJ frozen arg2 OK
in IN in arg2 OK
fear NN fear arg2 OK

but CC ^ ^ false_start
you PRP ^ ^ repeat
y- PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
right JJ right arg2 OK
in IN about arg2 false_start
the DT the arg1 OK
magnitude NN magnitude arg1 OK
of IN ^ ^ repeat
the DT ^ ^ repeat
um UH ^ ^ filler
of IN of arg1 OK
who WP people arg1 false_start
it PRP it arg0 OK
's BES 's arg2 OK
going VBG going arg2 OK
to TO to arg2 OK
affect VB affect arg2 OK

well UH ^ ^ filler
i PRP i arg0 OK
would MD would ^ OK
certainly RB ^ ^ repeat
probably SBAR-2 probably ^ false_start
react VB react predicate OK
differently RB differently argM_other OK
if IN if ^ false_start
it PRP it arg0 false_start
's BES would ^ false_start
just RB just ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
affect VB affect predicate false_start
yourself PRP yourself arg1 false_start
than RB than ^ OK
if IN if ^ OK
there IN there arg1 OK
was EX were predicate false_start
a VBD a arg2 OK
lot DT lot arg2 OK
of NN of arg2 OK
people IN people arg2 OK

and CC ^ ^ false_start
i PRP i ^ OK
probably RB probably ^ OK
would MD would ^ OK
have VB have ^ OK
reacted VBN reacted ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
fight VB fight ^ OK
fight VB fight ^ OK

in IN in ^ false_start
that DT that ^ false_start
situation NN situation ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
just RB ^ ^ false_start
eh UH ^ ^ filler
fighting VBG ^ ^ false_start
down IN ^ ^ false_start
the DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
y- PRP ^ ^ repeat
you PRP ^ ^ OK
you PRP you ^ OK
know VBP know arg1 OK
you PRP you arg0 OK
're VBP 're arg1 OK
probably RB probably arg1 false_start
going VBG going arg1 OK
to TO to arg1 OK
die VB die arg1 OK
if IN if arg1 OK
you PRP you arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
get VB get arg1 OK
out RB out argM_loc OK

eh UH ^ ^ filler
i PRP i arg0 OK
can MD can ^ OK
see VB see predicate OK
myself PRP myself arg1 OK
probably RB probably arg1 OK
just RB ^ ^ false_start
pushing VBG pushing arg1 OK
people NNS people arg1 OK
out IN out arg2 OK
of IN of arg2 OK
the DT the arg2 OK
way NN way arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
think VB think predicate OK
i PRP i arg0 OK
would MD ^ ^ repeat
would MD ^ arg1 OK
would MD would arg1 OK
n't RB ^ ^ repeat
n't RB n't arg1 false_start
want VB want arg1 OK
to TO to arg1 OK
do VB do arg1 OK
that DT that arg1 OK

but CC but ^ OK
in IN in argM_loc false_start
that DT that argM_loc false_start
situation NN situation argM_loc false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
well UH ^ ^ filler
i PRP i arg0 OK
'm VBP 'm arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
die VB die arg1 OK
if IN if arg1 OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
leave VB leave arg1 OK

i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP think predicate false_start
heather NNP heather arg1 OK
heather NNP heather arg1 OK
heather NNP heather arg1 OK

tha- DT tha- ^ OK
eh UH ^ ^ filler

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
amazing JJ amazing arg2 OK

i PRP ^ ^ repeat
ca MD ^ ^ false_start
n't RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

eh UH ^ ^ filler
i PRP i arg0 OK
think VB think predicate OK
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would arg1 OK
want VB want arg1 OK
to TO to arg1 OK
do VB do arg1 OK
that DT that arg1 OK

but CC ^ ^ false_start
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
you PRP you ^ OK
know VBP know ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
die VB die ^ OK
and CC and ^ OK
the DT the ^ OK
place NN place ^ OK
is VBZ is ^ OK
coming VBG coming ^ OK
down RB down ^ OK
uh UH ^ ^ filler

r- UH ^ ^ repeat
right UH right ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
ah UH ^ ^ filler
y- UH ^ ^ repeat

that IN ^ ^ false_start
they PRP they arg0 OK
not VP not argM_neg false_start
necessarily RB necessarily argM_other false_start
do VBP do predicate OK
that RB that arg1 OK

but CC ^ ^ false_start
they PRP ^ ^ repeat
do VBP ^ ^ false_start
hm VP ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
they VBP they ^ OK
help PRP help ^ OK
save VB save ^ OK
people VB people ^ OK
and NNS ^ ^ repeat
and CC ^ ^ false_start
stuff CC ^ ^ false_start

you UNK ^ ^ filler
know UNK ^ ^ filler
other UNK other ^ OK
countries UNK countries ^ OK
that UNK that ^ OK
can UNK can ^ OK
change UNK change ^ OK
on UNK on ^ OK
a UNK a ^ OK
whim UNK whim ^ OK
as UNK as ^ OK
to UNK to ^ OK
what UNK what ^ OK
you UNK you ^ OK
can UNK can ^ OK
and UNK and ^ OK
ca UNK ca ^ OK
n't UNK n't ^ OK
do UNK do ^ OK

i PRP i ^ OK
just RB just ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler

so RB so ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
would MD would ^ OK
be VB be ^ OK
that DT that ^ OK
your PRP your ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
unless IN unless ^ OK
you PRP you ^ OK
could MD could ^ OK
h- VB ^ ^ repeat
have VB have ^ OK
enough RB enough ^ OK
to TO to ^ OK
bring VB bring ^ OK
them PRP them ^ OK
over RB over ^ OK
all PDT all ^ OK
the DT the ^ OK
time NN time ^ OK

but CC ^ ^ false_start
so RB so ^ OK
it PRP it ^ OK
might MD might ^ OK
not RB not ^ OK
be VB be ^ OK
as RB ^ ^ repeat
as RB as ^ OK
ea- JJ ^ ^ repeat
effective JJ effective ^ OK
for IN for ^ OK
you PRP you ^ OK

but CC but ^ OK
like UH ^ ^ filler
my PRP my ^ OK
husband NN husband ^ OK
has VBZ has ^ OK
seven CD seven ^ OK
siblings NNS siblings ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
all DT all ^ OK
have VBP have ^ OK
children NNS children ^ OK
who WP who ^ OK
have VBP have ^ OK
children NNS children ^ OK

i PRP i ^ OK
and CC ^ ^ false_start
have VBP have ^ OK
three CD three ^ OK
siblings NNS siblings ^ OK

and CC ^ ^ false_start
there EX there ^ OK
is VBZ is ^ OK
n't RB n't ^ OK
a DT a ^ OK
whole JJ whole ^ OK
lot NN lot ^ OK
that WDT that ^ OK
's BES 's ^ OK
worth JJ worth ^ OK
that DT that ^ OK

your PRP your ^ OK

because IN because ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
like IN ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
with IN with ^ OK
your PRP your ^ OK
own JJ own ^ OK
children NNS children ^ OK

it PRP ^ ^ false_start
eh UH ^ ^ filler
they PRP ^ ^ false_start
're VBP ^ ^ false_start
everything NN everything ^ OK
's BES 's ^ OK
changing VBG changing ^ OK
so RB so ^ OK
quickly RB quickly ^ OK

and CC ^ ^ false_start
seeing VBG seeing ^ OK
them PRP them ^ OK
every DT every ^ OK
few JJ few ^ OK
months NNS months ^ OK
or CC or ^ OK
ev- XX ^ ^ false_start
once RB once ^ OK
a DT a ^ OK
year NN year ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
just RB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK
a DT a ^ OK
very RB very ^ OK
close-knit JJ close-knit ^ OK
family NN family ^ OK

who WP ^ ^ false_start
's BES ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
thirty-three CD thirty-three ^ OK

well UH ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
doing VBG doing ^ OK
well RB well ^ OK
thank VB thank ^ OK
god NNP god ^ OK

so UH so ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
do VB do ^ OK
it PRP it ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
me- VBP ^ ^ false_start
i PRP i ^ OK
'd MD 'd ^ OK
be VB be ^ OK
tempted VBN tempted ^ OK

na- XX ^ ^ false_start
i- XX ^ ^ false_start
sure RB sure ^ OK
does VBZ does ^ OK
n't RB n't ^ OK

well UH ^ ^ false_start
you PRP you ^ OK
figure VBP figure ^ OK
when WRB when ^ OK
you PRP you ^ OK
get VBP get ^ OK
uh UH ^ ^ filler
a DT a ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK
what ADVP-TMP- 1 what ^ OK
do WP do ^ OK
you VBP you ^ OK
end PRP end ^ OK
up VB up ^ OK
clearing RP clearing ^ OK
out VBG out ^ OK
of IN of ^ OK
it IN it ^ OK

so RB so ^ OK
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
not RB not ^ OK
a DT a ^ OK
whole JJ whole ^ OK
lot NN lot ^ OK
of IN of ^ OK
money NN money ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
hopefully RB ^ ^ false_start
what WP what ^ OK
you PRP you ^ OK
'll MD 'll ^ OK
be VB be ^ OK
making VBG making ^ OK

that DT ^ ^ repeat
that DT that ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
the DT the ^ OK
biggie NN biggie ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that ^ OK
would MD would ^ OK
mean VB mean ^ OK
giving VBG giving ^ OK
up RP up ^ OK
your PRP your ^ OK
citizenship NN citizenship ^ OK
basically RB basically ^ OK

an- XX ^ ^ false_start
uh UH ^ ^ filler
we PRP we ^ OK
've VBP 've ^ OK
been VBN been ^ OK
to IN to ^ OK
alaska NNP alaska ^ OK

and CC ^ ^ false_start
we PRP we ^ OK
went VBD went ^ OK
to IN to ^ OK
um UH ^ ^ filler
uh UH ^ ^ filler
turkey NNP turkey ^ OK
and CC and ^ OK
athens NNP athens ^ OK
and CC and ^ OK
greece NNP greece ^ OK

on IN on ^ OK
the DT the ^ OK
twenty-ninth NN twenty-ninth ^ OK
we PRP we ^ OK
're VBP 're ^ OK
going VBG going ^ OK
on IN on ^ OK
a DT a ^ OK
cruise NN cruise ^ OK
to IN to ^ OK
barcelona NNP barcelona ^ OK
and CC and ^ OK
venice NNP venice ^ OK
and CC and ^ OK
paris NNP paris ^ OK
and CC and ^ OK
rome NNP rome ^ OK
and CC and ^ OK
sicily NNP sicily ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
say VB say ^ OK
yeah UH ^ ^ filler

well UH ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
what WP what ^ OK
we PRP ^ ^ repeat
we PRP we ^ OK
did VBD ^ ^ repeat
did VBD did ^ OK
with IN with ^ OK
renaissance NNP renaissance ^ OK

we PRP we ^ OK
went VBD went ^ OK
on IN on ^ OK
a DT a ^ OK
two CD two ^ OK
for IN for ^ OK
one CD one ^ OK

but CC but ^ OK
even RB even ^ OK
at IN at ^ OK
that DT that ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
was VBD was ^ OK
n't RB n't ^ OK
that RB that ^ OK
bad JJ bad ^ OK

it PRP it ^ OK
's BES 's ^ OK
seven CD seven ^ OK
thousand CD thousand ^ OK
dollars NNS dollars ^ OK
for IN for ^ OK
two CD two ^ OK
people NNS people ^ OK
f- IN ^ ^ repeat
for IN for ^ OK
fifteen CD fifteen ^ OK
days NNS days ^ OK

meals NNS meals ^ OK
and CC and ^ OK
everything NN everything ^ OK
is VBZ are ^ false_start
included VBN included ^ OK

so UH so ^ OK
it PRP it ^ OK
's BES 's ^ OK
like IN ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler

it PRP ^ ^ false_start
leav- XX ^ ^ false_start
yeah UH yeah ^ OK

so UH so ^ OK
i PRP i ^ OK
figure VBP figure ^ OK
i PRP i ^ OK
can MD can ^ OK
go VB go ^ OK
other JJ other ^ OK
places NNS places ^ OK
and CC and ^ OK
not RB not ^ OK
have VB have ^ OK
to TO to ^ OK
give VB give ^ OK
up RP up ^ OK
my PRP my ^ OK
citizenship NN citizenship ^ OK

so UH so ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK
would MD would ^ OK
be VB be ^ OK
the DT the ^ OK
big JJ big ^ OK
kicker NN kicker ^ OK

so RB so ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
would MD would ^ OK
be VB be ^ OK
a DT ^ ^ false_start
l- XX ^ ^ false_start
a DT a ^ OK
big JJ big ^ OK
change NN change ^ OK
from IN from ^ OK
you PRP you ^ OK

uh UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's BES 's ^ OK
because IN because ^ OK
i PRP i ^ OK
get VBP get ^ OK
to TO to ^ OK
be VB be ^ OK
something NN something ^ OK
that WDT that ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK

i PRP i ^ OK
really RB really ^ OK
like VBP like ^ OK
um UH ^ ^ filler
to TO to ^ OK
see VB see ^ OK
other JJ other ^ OK
people NNS people ^ OK
on IN on ^ OK
halloween NNP halloween ^ OK

so UH ^ ^ false_start
it PRP ^ ^ false_start
we PRP we ^ OK
thought VBD thought ^ OK
that DT that ^ OK
was VBD was ^ OK
pretty RB pretty ^ OK
funny JJ funny ^ OK

i PRP i ^ OK
think VBP think ^ OK
christmas NNP christmas ^ OK
would MD would ^ OK
be VB be ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
second RB second ^ OK
favorite JJ favorite ^ OK
holiday NN holiday ^ OK

as RB ^ ^ false_start
far RB ^ ^ false_start
as IN ^ ^ false_start
are VBP are ^ OK
you PRP you ^ OK
a DT a ^ OK
religious JJ religious ^ OK
person NN person ^ OK

do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
like VB like ^ OK
it PRP it ^ OK
for IN for ^ OK
religious JJ religious ^ OK
reasons NNS reasons ^ OK
as RB as ^ OK
well RB well ^ OK

we- XX ^ ^ false_start
wel- XX ^ ^ false_start
my PRP my ^ OK
girlfriend NN girlfriend ^ OK
and CC and ^ OK
i PRP i ^ OK
went VBD went ^ OK
to IN to ^ OK
a DT a ^ OK
wedding NN wedding ^ OK
this DT this ^ OK
weekend NN weekend ^ OK
at IN at ^ OK
the DT the ^ OK
beach NN beach ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
we PRP we ^ OK
were VBD were ^ OK
talking VBG talking ^ OK
about IN about ^ OK
how WRB how ^ OK
at IN at ^ OK
the DT the ^ OK
beach NN beach ^ OK
for IN for ^ OK
some DT some ^ OK
reason NN reason ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
seem VBP seem ^ OK
to TO to ^ repeat
to TO ^ ^ OK
really RB really ^ false_start
play VB play ^ OK
up RP up ^ OK
the DT the ^ OK
santa NNP santa ^ OK
claus NNP claus ^ OK
aspect NN aspect ^ OK
of IN of ^ OK
christmas NNP christmas ^ OK

and CC ^ ^ false_start
there EX there ^ OK
's BES 's ^ OK
just RB just ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP guess ^ OK

and CC ^ ^ false_start
we PRP ^ ^ false_start
're VBP ^ ^ false_start
we PRP we ^ OK
decided VBD decided ^ OK
that IN that ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
because IN because ^ OK
the DT ^ ^ repeat
th- EX ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there ^ OK
are VBP are ^ OK
just RB just ^ OK
so RB so ^ OK
many JJ many ^ OK
souvenir NN souvenir ^ OK
shops NNS shops ^ OK
at IN at ^ OK
the DT the ^ OK
beach NN beach ^ OK

and CC ^ ^ false_start
we PRP we ^ OK
figured VBD figured ^ OK
that IN that ^ OK
santa NNP santa ^ OK
claus NNP claus ^ OK
was VBD was ^ OK
the DT the ^ OK
ultimate JJ ultimate ^ OK
cliche NN cliche ^ OK
for IN for ^ OK
christmas NNP christmas ^ OK
in IN in ^ OK
a DT a ^ OK
consumer NN consumer ^ OK
culture NN culture ^ OK
etcetera FW etcetera ^ OK
etcetera FW etcetera ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
um UH um ^ OK

so UH ^ ^ false_start
we PRP we ^ OK
just RB just ^ OK
decided VBD decided ^ OK
that IN that ^ OK
that DT that ^ OK
's BES 's ^ OK
why WRB why ^ OK
there EX there ^ OK
were VBD were ^ OK
so RB so ^ OK
many JJ many ^ OK
santa NNP santa ^ OK
decorations NNS decorations ^ OK
at IN at ^ OK
the DT the ^ OK
beach NN beach ^ OK

um UH ^ ^ filler
so UH ^ ^ false_start
well UH ^ ^ filler
another DT another ^ OK
thing NN thing ^ OK
i PRP i ^ OK
like VBP like ^ OK
about IN about ^ OK
christmas NNP christmas ^ OK
is VBZ is ^ OK
the DT ^ ^ repeat
um UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
family NN family ^ OK
aspect NN aspect ^ OK
of IN of ^ OK
it PRP it ^ OK
and CC and ^ OK
just RB just ^ OK
not RB not ^ OK
doing VBG doing ^ OK
anything NN anything ^ OK
for IN for ^ OK
a DT a ^ OK
whole JJ whole ^ OK
day NN day ^ OK
but CC but ^ OK
getting VBG getting ^ OK
to TO to ^ OK
hang VB hang ^ OK
out RP out ^ OK
with IN with ^ OK
my PRP my ^ OK
family NN family ^ OK

um UH ^ ^ filler
so UH ^ ^ false_start
for IN for ^ OK
the DT the ^ OK
second JJ second ^ OK
part NN part ^ OK
which WDT which ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP guess ^ OK
you PRP you ^ OK
did VBD did ^ OK
n't RB n't ^ OK
hear VB hear ^ OK
i PRP ^ ^ repeat
i NP-1 i ^ OK
'm VBP ^ ^ repeat
'm PRP 'm ^ OK
thinking VBG ^ ^ repeat
thinking VBP thinking ^ OK
the VBG ^ ^ false_start
if IN if ^ OK
i IN i ^ OK
had PRP had ^ OK
to VBD to ^ OK
make TO make ^ OK
up VB up ^ OK
a RP a ^ OK
holiday DT holiday ^ OK
it NN it ^ OK
would PRP would ^ OK
combine MD combine ^ OK
halloween VB halloween ^ OK
and NNP and ^ OK
christmas CC christmas ^ OK
kind NNP kind ^ OK
of RB of ^ OK
like RB like ^ OK
a IN a ^ OK
nightmare DT nightmare ^ OK
before NNP before ^ OK
christmas IN christmas ^ OK

if IN if ^ OK
you PRP you ^ OK
could MD could ^ OK
dress VB dress ^ OK
up RP up ^ OK
and CC and ^ OK
be VB be ^ OK
something NN something ^ OK
that WDT that ^ OK
your PRP you're ^ false_start
not RB not ^ OK

that DT ^ ^ repeat
that DT that ^ OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
be VB ^ ^ repeat
be VB be ^ OK
pretty RB pretty ^ OK
neat JJ neat ^ OK

and CC ^ ^ false_start
nobody NN ^ ^ repeat
and CC ^ ^ false_start
nobody NN nobody ^ OK
gets VBZ ^ ^ repeat
makes VBZ makes ^ OK
a DT ^ ^ repeat
a DT a ^ OK
big JJ big ^ OK
turkey NN turkey ^ OK
or CC or ^ OK
ham NN ham ^ OK
or CC or ^ OK
anything NN anything ^ OK
for IN for ^ OK
halloween NNP halloween ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
see VBP see predicate OK
from IN from arg1 false_start
where WRB where arg1 OK
you PRP you arg1 OK
're VBP 're arg1 OK
coming VBG coming arg1 OK

i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
really RB really ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
just RB ^ ^ repeat
i PRP i arg0 OK
have VBP have predicate OK
tons NNS tons arg1 OK
of IN of arg1 OK
them PRP them arg1 OK

i PRP i arg1 OK
am VBP am ^ OK
and CC ^ ^ filler
i PRP ^ ^ repeat
actually RB ^ ^ repeat
am VBP ^ ^ repeat
like UH ^ ^ filler
right RB ^ ^ false_start
now RB ^ ^ false_start
applying VBG applying predicate OK
for IN for arg_particl OK
video NN video arg1 OK
game NN game arg1 OK
jobs NNS jobs arg1 OK
because IN because ^ OK
i PRP i arg0 OK
just RB ^ ^ OK
play VBP play predicate OK
them PRP video ^ false_start
them PRP games arg1 false_start
so RB so ^ OK
much RB much ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
could MD could ^ OK
talk VB talk predicate OK
about IN about ^ OK
it PRP it arg1 OK
all DT all argM_tmp OK
day NN day argM_tmp OK

so UH ^ ^ false_start
are VBP ^ ^ repeat
you PRP ^ ^ repeat
are VBP are ^ OK
you PRP you arg0 OK
going VBG going ^ OK
to TO to ^ OK
get VB get predicate OK
those DT the arg1 false_start
sequels NNS sequels arg1 OK
to IN to arg1 OK
myst NNP myst arg1 OK

i PRP i arg1 OK
'm VBP 'm predicate OK
definitely RB definitely ^ false_start
into IN into arg2 OK
the DT the arg2 OK
game NNP game arg2 OK
cube NNP cube arg2 OK

uh UH ^ ^ filler
my PRP my arg0 OK
little JJ little arg0 OK
brother NN brother arg0 OK
he PRP ^ ^ false_start
actually RB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
creates VBZ creates predicate OK
his PRP his arg1 OK
own JJ own arg1 OK
things NNS things arg1 OK
for IN for arg1 OK
the DT ^ ^ repeat
like UH ^ ^ filler
the DT the arg1 OK
p. NN p. arg1 OK
c. NN c. arg1 OK
games NNS games arg1 OK

the DT the arg1 false_start
like UH ^ ^ filler
like UH ^ ^ filler
in IN ^ ^ false_start
the DT ^ ^ false_start
three CD ^ arg1 false_start
d. NN three-dimensi onal ^ false_start
games NNS games arg1 OK
the DT ^ ^ repeat
games NNS ^ ^ false_start
come VBP come predicate OK
with IN with arg2 OK
pre-packaged JJ pre-packaged arg2 OK
worlds NNS worlds arg2 OK
in IN in arg2 false_start
that WDT which arg2 false_start
you PRP you arg0 OK
can MD can arg2 OK
walk VB walk arg2 OK
around RB around arg2 OK

but CC ^ ^ OK
my PRP my arg0 OK
little JJ little arg0 OK
brother NN brother arg0 OK
knows VBZ knows predicate OK
three CD ^ arg1 false_start
d. NN three-dimensi onal ^ false_start
stuff NN stuff arg1 OK

so RB ^ ^ false_start
he PRP ^ ^ repeat
he PRP he arg0 OK
can MD can ^ OK
make VB make predicate OK
your PRP his arg1 false_start
own JJ own arg1 OK
world NN world arg1 OK
in IN in ^ false_start
to TO which ^ OK
to TO to ^ OK
walk VB walk predicate OK
around RB around ^ OK

it PRP it arg1 OK
's BES 's predicate OK
really RB really arg2 OK
cool JJ cool arg2 OK
because IN because ^ OK
like UH ^ ^ filler
they PRP they arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
a DT an arg1 OK
action NN action arg1 OK
game NN game arg1 OK
called VBN called arg1 OK
quake NN quake arg1 OK

and CC ^ ^ false_start
he PRP ^ ^ repeat
created VBN ^ ^ repeat
he PRP he arg0 OK
recreated VBD recreated predicate OK
that DT ^ ^ repeat
is VBZ ^ ^ repeat
ah UH ^ ^ filler
the DT the arg1 OK
apartment NN apartment arg1 OK
where WRB where arg1 OK
we PRP we arg0 OK
used VBD used arg1 OK
to TO to arg1 OK
live VB live arg1 OK

we PRP ^ ^ repeat
we PRP we arg0 OK
put VBP put predicate OK
guns NNS guns arg1 OK
in IN in arg2 OK
the DT the arg2 OK
apartment NN apartment arg2 OK

to TO ^ ^ repeat
get VB ^ ^ repeat
a DT ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
how WRB ^ ^ false_start
can MD ^ ^ false_start
you PRP ^ ^ false_start
get VB ^ ^ false_start
experience NN ^ ^ false_start
without IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
's BES a arg2 false_start
that DT ^ ^ false_start
catch NNP catch arg2 OK
twenty-two NNP twenty-two arg2 OK

a- XX ^ ^ repeat
so- DT ^ ^ repeat
some DT some arg1 OK
of IN of arg1 OK
my PRP my arg1 OK
family NN family arg1 OK
members NNS members arg1 OK
are VBP are predicate OK
my PRP my arg2 OK
best JJS best arg2 OK
friends NNS friends arg2 OK
um UH ^ ^ filler
to IN to ^ false_start
me PRP me ^ false_start

h- WRB ^ ^ filler
how WRB how ^ OK
about IN about ^ OK
you PRP you ^ OK

where WRB ^ ^ false_start
so RB ^ ^ false_start
y- PRP ^ ^ false_start
do VB ^ ^ false_start
y- PRP ^ ^ false_start
so RB ^ ^ false_start
is VBZ ^ ^ repeat
is VBZ is predicate OK
she PRP she arg1 OK
distant JJ distant arg2 OK
from IN from arg2 OK
you PRP you arg2 OK
then RB then ^ OK
um UH ^ ^ filler
l- RB ^ ^ repeat
location NN location ^ OK
wise RB wise ^ OK

where WRB ^ ^ repeat
where WRB where argM_loc OK
d- VBP ^ ^ repeat
do VBP do ^ OK
you PRP you arg0 OK
live VB live predicate OK
right RB right argM_tmp OK
now RB now argM_tmp OK

so RB ^ ^ repeat
mos- JJ ^ ^ repeat
so UH ^ ^ repeat
so UH ^ ^ false_start
most RBS ^ ^ false_start
so UH so ^ OK
your PRP your arg1 OK
sister NN sister arg1 OK
's BES 's predicate OK
in IN in arg2 OK
california NNP california arg2 OK

and CC ^ ^ repeat
and CC and ^ OK
everyo- NN everyo- ^ OK

how WRB how ^ OK
about IN about ^ OK
kids NNS kids ^ OK
or CC or ^ OK
nieces NNS nieces ^ OK
or CC or ^ OK
nephews NNS nephews ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
two CD two arg1 OK
year NN year arg1 OK
old JJ old arg1 OK
child NN child arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
married JJ married arg2 OK

and CC ^ ^ false_start
my PRP my arg1 OK
parents NNS parents arg1 OK
are VBP are predicate OK
still RB still arg2 OK
i- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
very RB very arg2 OK
m- JJ ^ ^ repeat
maternal JJ maternal arg2 OK
and CC and arg2 OK
paternal JJ paternal arg2 OK

they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
definitely RB ^ ^ repeat
definitely RB definitely arg2 OK
more RBR more arg2 OK
lenient JJ lenient arg2 OK

and CC ^ ^ filler
he PRP he arg0 OK
says VBZ says predicate OK
remember VB remember arg1 OK
when WRB when argM_tmp OK
you PRP you argM_tmp OK
were VBD were argM_tmp OK
growing VBG growing argM_tmp OK
up RP up argM_tmp OK
i ADVP-TMP- 1 i arg0 OK
told PRP told arg1 OK
you VBD you arg2 OK
i PRP i arg0 OK
was PRP was arg1 OK
going VBD going arg1 OK
to VBG to arg1 OK
get TO get arg1 OK
you VB you arg1 OK
back PRP back arg_particl OK
with RP ^ ^ false_start
your IN ^ ^ false_start
gr- PRP ^ ^ false_start
when NN when argM_tmp OK
you WRB you arg0 OK
had PRP had argM_tmp OK
kids VBD kids arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
um UH ^ ^ filler
children NNS children arg1 OK
definitely RB definitely arg1 false_start
are VBP ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
are VBP are arg1 OK
a DT a arg2 OK
blessing NN blessing arg2 OK

but CC ^ ^ false_start
it PRP it ^ OK
's BES 's predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
work NN work arg1 OK
e- XX ^ ^ filler
when WRB when argM_tmp OK
it PRP it arg1 OK
's BES 's argM_tmp OK
your PRP your arg2 OK
own JJ own arg2 OK
child NN child arg2 OK

but CC ^ ^ false_start
when WRB ^ ^ repeat
when WRB when ^ OK
you PRP you ^ OK
're VBP 're ^ OK
a DT a ^ OK
grandparent NN grandparent ^ OK
or CC or ^ OK
th- XX th- ^ OK
say UH say ^ OK
nephews NNS nephews ^ OK
and CC and ^ OK
nieces NNS nieces ^ OK
you ADVP-TMP- 1 you ^ OK
get PRP get ^ OK
all VBP ^ ^ repeat
all DT all ^ OK
^ ^ ^ ^ repeat
of DT of ^ OK
the IN ^ ^ repeat
the IN the ^ OK
benefits DT benefits ^ OK

but CC but ^ OK
none NN none ^ OK
of IN of ^ OK
th- XX th- ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler

like UH ^ ^ false_start
for IN for ^ OK
instance NN instance ^ OK
my PRP my arg0 OK
husband NN husband arg0 OK
and CC and arg0 OK
i PRP i arg0 OK
we PRP ^ ^ false_start
were VBD ^ ^ false_start
recently RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
ha- XX ^ ^ false_start
were VBD were ^ OK
recently RB recently argM_tmp OK
going VBG going predicate OK
through IN through arg2 OK
financial JJ financial arg2 OK
hardship NN hardship arg2 OK
and CC and ^ OK
um UH ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
were VBD were ^ OK
moving VBG moving predicate OK

and CC ^ ^ false_start
um UH ^ ^ filler
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
my PRP ^ ^ repeat
my PRP ^ ^ repeat
my PRP my arg1 OK
f- NN ^ ^ repeat
f- NN ^ ^ repeat
family NN family arg1 OK
is VBZ is predicate OK
within IN within arg2 OK
driving NN driving arg2 OK
distance NN distance arg2 OK

so RB ^ ^ false_start
it PRP it ^ OK
's S-1 's predicate OK
just HVS just arg1 OK
been RB been arg1 OK
such VBN such arg1 OK
a PDT a arg1 OK
blessing DT blessing arg1 OK
to NN to arg1 OK
have TO have arg1 OK
them VB them arg1 OK
near PRP near argM_loc OK
because RB because ^ OK
like IN ^ ^ filler
say UH ^ ^ filler
my UH my arg0 OK
sister PRP sister arg0 OK
was NN was predicate OK
able VBD able arg2 OK
to JJ to arg2 OK
babysit TO babysit arg2 OK
my VB my arg1 OK
son PRP son arg1 OK
for NN for argM_tmp OK
a IN ^ ^ repeat
a DT a argM_tmp OK
day DT day argM_tmp OK
or NN or argM_tmp OK
two CC two argM_tmp OK

so RB so ^ OK
it PRP it ^ OK
's BES 's ^ OK
e- XX e- ^ OK
um UH ^ ^ filler

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
ha- VBP ha- ^ OK

so RB ^ ^ false_start
do VBP do ^ OK
you PRP you arg0 OK
see VB see predicate OK
your PRP ^ ^ repeat
your PRP your arg1 OK
sister NN sister arg1 OK
's POS 's arg1 OK
kids NNS kids arg1 OK
a DT a ^ OK
lot NN lot ^ OK

or CC ^ ^ false_start
are VBP ^ ^ repeat
are VBP are predicate OK
you PRP ^ ^ repeat
they PRP they arg1 OK
all DT all arg2 OK
in IN in arg2 OK
california NNP california arg2 OK

that DT that arg1 OK
's BES 's predicate OK
really RB really arg2 OK
uh UH ^ ^ filler
tough JJ tough arg2 OK
when WRB when argM_tmp OK
it PRP it arg1 OK
comes VBZ comes argM_tmp OK
to IN to arg4 OK
death NN death arg4 OK
and ADVP-TMP- 1 and ^ OK
if CC if ^ OK
there IN there ^ OK
's EX 's predicate OK
like BES ^ ^ filler
an UH an arg0 OK
estate DT estate arg0 OK
left NN left arg1 OK
behind VBN behind arg2 OK
because RP because ^ OK
my IN ^ ^ repeat
my PRP my arg1 OK
grandfather PRP grandfather arg1 OK
recently NN recently argM_tmp OK
died RB died predicate OK

and CC ^ ^ false_start
some DT ^ ^ repeat
some DT some ^ OK
of IN ^ ^ repeat
of IN of ^ OK
u- PRP ^ ^ repeat
us PRP us ^ OK
like IN like ^ OK
me PRP me ^ OK
um UH ^ ^ filler
i PRP i ^ OK
do- VBZ do- ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
just RB ^ ^ repeat
like UH ^ ^ filler
we PRP ^ ^ repeat
we PRP ^ ^ repeat
just RB ^ ^ repeat
we PRP we arg0 OK
kind RB kind ^ OK
of RB of ^ OK
have VBP ^ ^ repeat
have VBP ^ ^ repeat
have VBP ^ ^ repeat
of RB have predicate false_start
an DT an arg1 OK
issue NN issue arg1 OK
going VBG going arg1 OK

and CC ^ ^ false_start
how WRB how ^ OK
so RB so ^ OK

are VBP are ^ OK
eh UH ^ ^ false_start
l- XX ^ ^ false_start

and CC ^ ^ false_start
but CC but ^ OK
have VBP have ^ OK
you PRP you ^ OK
done VBN done ^ OK
like UH ^ ^ filler
any DT any ^ OK
special JJ special ^ OK
training NN training ^ OK
or CC or ^ OK
anything NN anything ^ OK
like IN like ^ OK
that DT that ^ OK

and CC ^ ^ false_start
would MD would ^ OK
you PRP you ^ OK
be VB be ^ OK
one CD one ^ OK
of IN of ^ OK
these DT these ^ OK
people NNS people ^ OK
to TO to ^ OK
be VB ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
n- XX ^ ^ false_start
receive VB receive ^ OK
the DT the ^ OK
smallpox JJ smallpox ^ OK
vaccine NN vaccine ^ OK

um UH ^ ^ filler
how WRB ^ ^ repeat
has VBZ ^ ^ repeat
has ADVP-1 has ^ OK
it PRP ^ ^ repeat
it VBZ it ^ OK
changed VBN ^ ^ repeat
changed PRP changed ^ OK
anything VBN anything ^ OK
that NN that ^ OK
we WDT we ^ OK
've PRP 've ^ OK
done VBP done ^ OK

come VBP ^ ^ false_start
out RP ^ ^ false_start
with IN ^ ^ false_start
a DT ^ ^ false_start
warning NN ^ ^ false_start
n- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
and CC ^ ^ false_start
whenever WRB ^ ^ false_start
they PRP ^ ^ false_start
were VBD were ^ OK
c- VBG ^ ^ repeat
coming VBG coming ^ OK
out RP out ^ OK
with IN with ^ OK
a DT a ^ OK
warning NN warning ^ OK
about IN about ^ OK
trains NNS trains ^ OK
and CC ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
like UH ^ ^ repeat
like UH ^ ^ filler
a DT a ^ OK
month NN month ^ OK
ago RB ago ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
m- XX ^ ^ false_start
b- XX ^ ^ false_start
w- XX ^ ^ false_start
ah UH ^ ^ filler
oh UH ^ ^ filler
after IN after ^ OK
the DT the ^ OK
warning NN warning ^ OK
came VBD came ^ OK
out RP out ^ OK
we PRP we ^ OK
just RB just ^ OK
sort RB sort ^ OK
of RB of ^ OK
said VBD said ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
why WRB why ^ OK
do VBP do ^ OK
n't RB n't ^ OK
you PRP you ^ OK
just RB just ^ OK
like UH ^ ^ filler
drive VB drive ^ OK
tomorrow NN tomorrow ^ OK
instead IN instead ^ OK
of IN of ^ OK
taking VBG taking ^ OK
the DT the ^ OK
train NN train ^ OK

eh UH ^ ^ filler
in IN ^ ^ repeat
in IN in ^ OK
what WDT what ^ OK
way NN way ^ OK

and CC ^ ^ false_start
in IN ^ ^ repeat
in IN in ^ OK
th- DT ^ ^ repeat
that DT that ^ OK
sense NN sense ^ OK
it PRP it ^ OK
's HVS has ^ false_start
changed VBN changed ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
for IN for ^ OK
me PRP me ^ OK
because IN because ^ OK
it PRP it ^ OK
was VBD was ^ OK
really RB really ^ OK
cheap JJ cheap ^ OK

for IN for ^ OK
the DT the ^ OK
immediate JJ immediate ^ OK
time NN time ^ OK
period NN period ^ OK
after IN after ^ OK
the DT the ^ OK
terrorist JJ terrorist ^ OK
attacks NNS attacks ^ OK
all PDT all ^ OK
the DT the ^ OK
prices NNS prices ^ OK
went VBD went ^ OK
down RB down ^ OK

and CC ^ ^ false_start
so RB so ^ OK
i PRP i ^ OK
got VBD got ^ OK
on IN on ^ OK
a DT ^ ^ repeat
to IN ^ ^ repeat
to IN to ^ OK
a DT ^ ^ repeat
a DT a ^ OK
plane NN plane ^ OK
probably RB probably ^ OK
when WRB when ^ OK
i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
have VB have ^ OK
because ADVP-TMP- 1 because ^ OK
it IN it ^ OK
was PRP was ^ OK
just VBD just ^ OK
so RB so ^ OK
incredibly RB incredibly ^ OK
cheap RB cheap ^ OK

how WRB how ^ OK
about IN about ^ OK
any DT any ^ OK
members NNS members ^ OK
of IN of ^ OK
your PRP your ^ OK
family NN family ^ OK

have VBP have ^ OK
they PRP they ^ OK
changed VBN changed ^ OK
anything NN anything ^ OK

anybody NN anybody ^ OK
that WDT that ^ OK
you PRP you ^ OK
know VBP know ^ OK
personally RB personally ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
in IN in ^ OK

whenever UNK whenever ^ OK
i UNK i ^ OK
read UNK read ^ OK
in UNK in ^ OK
popular UNK popular ^ OK
media UNK media ^ OK
about UNK about ^ OK
how UNK how ^ OK
it UNK it ^ OK
's UNK 's ^ OK
making UNK making ^ OK
everybody UNK everybody ^ OK
think UNK think ^ OK
and UNK and ^ OK
do UNK do ^ OK
things UNK things ^ OK
differently UNK differently ^ OK
and UNK and ^ OK
celebrate UNK celebrate ^ OK
holidays UNK holidays ^ OK
differently UNK differently ^ OK
and UNK and ^ OK
do UNK do ^ OK
this UNK this ^ OK
differently UNK differently ^ OK
i UNK ^ ^ false_start
did UNK ^ ^ false_start
n't UNK ^ ^ false_start
really UNK ^ ^ false_start
i UNK i ^ OK
never UNK never ^ OK
really UNK really ^ OK
felt UNK felt ^ OK
that UNK that ^ OK

i PRP i ^ OK
bet VBP bet ^ OK
that IN ^ ^ repeat
that DT that ^ OK
would MD would ^ OK
be VB be ^ OK

they PRP they ^ OK
were VBD were ^ OK
lucky JJ lucky ^ OK
that IN that ^ OK
they PRP they ^ OK
were VBD were ^ OK
stuck VBN stuck ^ OK
at IN ^ ^ repeat
at IN at ^ OK
at IN a ^ false_start
friend NN friend ^ OK
's POS 's ^ OK
house NN house ^ OK
as IN as ^ OK
opposed VBN opposed ^ OK
to IN to ^ OK
a DT a ^ OK
terrible JJ terrible ^ OK
hotel NN hotel ^ OK
or CC or ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

my PRP my ^ OK
parents NNS parents ^ OK
were VBD were ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
fly VB fly ^ OK
out RB out ^ OK
to IN to ^ OK
europe NNP europe ^ OK
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
following VBG following ^ OK
september NNP september ^ OK
twelfth JJ twelfth ^ OK

so UH ^ ^ false_start
a DT ^ ^ repeat
a DT a ^ OK
lot NN ^ ^ repeat
lot NN lot ^ OK
of IN ^ ^ repeat
of IN of ^ OK
things NNS things ^ OK
that WP that ^ OK
involved VBD involved ^ OK
travel NN travel ^ OK
obviously RB obviously ^ OK
changed VBN changed ^ OK
immediately RB immediately ^ OK
in IN in ^ OK
our PRP our ^ OK
work NN work ^ OK
place NN place ^ OK

and CC ^ ^ false_start
all DT all ^ OK
of IN of ^ OK
that DT that ^ OK
got VBD got ^ OK

and CC ^ ^ false_start
then RB then ^ OK
the DT ^ ^ repeat
the DT the ^ OK
economic JJ economic ^ OK
changes NNS changes ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
wi- XX ^ ^ false_start
had VBD had ^ OK
a DT ^ ^ repeat
an DT an ^ OK
immediate JJ immediate ^ OK
moratorium NN moratorium ^ OK
on IN on ^ OK
travel NN travel ^ OK
and CC and ^ OK
things NNS things ^ OK
like IN like ^ OK
that DT that ^ OK

so UH so ^ OK
that DT ^ ^ repeat
that DT that ^ OK
's HVS ^ ^ repeat
's HVS 's ^ OK
pretty RB pretty ^ OK
much RB much ^ OK
changed VBN changed ^ OK
things NNS things ^ OK

wow UH wow ^ OK
how WRB how ^ OK
come VB come ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
um UH ^ ^ filler
few JJ few arg1 OK
friends NNS friends arg1 OK

where WRB ^ ^ false_start
i PRP ^ ^ false_start
people NNS people arg1 OK
i PRP i arg0 OK
call VBP call predicate OK
friends NNS friends arg2 OK

i PRP ^ ^ false_start
stay VBP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
real RB real ^ OK
close RB close ^ OK
with IN with ^ OK
do NP do ^ OK
anything VB anything ^ OK
for NN for ^ OK

got VBD i arg1 false_start
got VBD have predicate false_start
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
acquaintances NNS acquaintances arg2 OK
where WRB where argM_loc OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
'll MD 'll arg1 OK
talk VB talk predicate OK
to IN to arg2 OK
them PRP them arg2 OK
talk VB ^ arg1 false_start
socialize ADVP-1 and ^ false_start
socialize ADVP-1 socialize arg1 OK
with VBP with arg2 OK
them IN them arg2 OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
kind RB ^ ^ filler
of RB ^ ^ filler
hard JJ hard arg2 OK
when WRB when argM_tmp OK
you PRP you arg0 OK
get VBP get arg2 OK
so RB so arg1 OK
close JJ close arg1 OK
to IN to arg1 OK
people NNS people arg1 OK

and UNK ^ ^ false_start
then UNK then argM_adverb OK
all UNK all argM_tmp OK
of UNK of argM_tmp OK
a UNK a argM_tmp OK
sudden UNK sudden argM_tmp OK
uh UNK ^ ^ filler
you UNK ^ ^ false_start
uh UNK ^ ^ filler
something UNK something arg0 OK
something UNK ^ ^ repeat
they UNK they arg0 OK
they UNK ^ ^ repeat
do UNK do arg0 OK
or UNK or arg0 OK
say UNK say arg0 OK
c- UNK ^ ^ false_start
bothers UNK bothers predicate OK
you UNK you arg1 OK
then UNK then argM_adverb OK
you UNK you arg1 OK
have UNK have argM_mod OK
to UNK to argM_mod OK
feel UNK feel predicate OK
obligated UNK obligated arg1 OK

th- XX ^ ^ false_start
you PRP you arg0 OK
're VBP 're predicate OK
afraid JJ afraid arg2 OK
to TO to arg2 OK
hurt VB hurt arg2 OK
their PRP their arg1 OK
feelings NNS feelings arg1 OK
if IN if argM_adverb OK
you PRP you arg0 OK
speak VBP speak arg2 OK
what WP what arg1 OK
's BES 's arg1 OK
on IN on arg2 OK
your PRP your arg2 OK
mind NN mind arg2 OK
and CC and arg2 OK
are VBP are arg2 OK
afraid JJ afraid arg2 OK
to TO to arg2 OK
f- XX ^ ^ false_start
lose VB lose arg2 OK
that DT that arg1 OK
friendship NN friendship arg1 OK
that WDT that arg1 OK
you PRP you arg0 OK
value VBP value arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
um UH ^ ^ filler
used VBD used argM_mod OK
to TO to argM_mod OK
when VP _ARG_ predicate false_start
when VP when argM_tmp OK
i WRB i arg1 OK
was PRP was argM_tmp OK
younger VBD younger arg2 OK

and CC ^ ^ repeat
they PRP ^ ^ repeat
and CC ^ ^ false_start
they PRP they arg0 OK
start VBP start predicate OK
asking VBG asking arg1 OK

and CC ^ ^ false_start
then RB then argM_adverb OK
before IN before argM_tmp OK
you PRP you arg0 OK
know VBP know predicate OK
it PRP it arg1 OK
you PRP you arg0 OK
ask VBP ask predicate OK
them PRP them arg2 OK
for IN for arg1 OK
help NN help arg1 OK

and CC ^ arg1 false_start
they PRP they arg0 OK
're VBP ^ ^ false_start
like RP say predicate false_start
well UH ^ ^ filler
you PRP you arg0 OK
ca MD ca argM_mod OK
n't RB n't ^ OK
n't RB _ARG_ argM_neg false_start

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
uh UH ^ ^ filler
as IN as argM_tmp OK
i PRP i argM_tmp OK
get VBP get argM_tmp OK
older JJR older argM_tmp OK
i PRP i arg0 OK
'm VBP 'm ^ OK
finding VBG finding predicate OK
that IN that arg1 OK
uh UH ^ ^ filler
having VBG ^ ^ repeat
having VBG having arg1 OK
friends NNS friends arg1 OK
is VBZ is arg1 OK
important JJ important arg2 OK

i PRP i arg0 OK
call VBP call predicate OK
my PRP my arg1 OK
wife NN wife arg1 OK
my PRP my arg2 OK
best JJS best arg2 OK
friend NN friend arg2 OK

because IN ^ ^ false_start
if IN if argM_adverb OK
i PRP i arg0 OK
have VBP have predicate OK
anything NN anything arg1 OK
that WDT that arg1 OK
i PRP ^ ^ false_start
can MD ^ ^ false_start
i PRP i arg0 OK
have VBP have arg1 OK
on IN on argM_loc OK
my PRP my argM_loc OK
mind NN mind argM_loc OK
or CC or arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
have VBP have argM_mod OK
to TO to argM_mod OK
do VB do arg1 OK
i NP-3 i arg0 OK
can PRP can argM_mod OK
call MD call predicate OK
her VB her arg1 OK
or PRP or ^ OK
talk CC talk predicate OK
to VB to arg2 OK
her IN her arg2 OK
and PRP and ^ OK
she CC she arg1 OK
's PRP 's predicate OK
there BES there arg2 OK
for RB for arg2 OK
me IN me arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
that WDT that ^ OK
means VBZ means ^ OK
that IN that ^ OK
uh UH ^ ^ filler
you PRP you ^ OK
bond VBP bond ^ OK
with IN with ^ OK
them PRP them ^ OK
beyond IN beyond ^ OK
um UH ^ ^ filler
what WP what ^ OK
w- XX ^ ^ false_start
some DT some ^ OK
people NNS people ^ OK
call VBP call ^ OK
um UH ^ ^ filler

children NNS ^ ^ false_start
raise VB ^ ^ false_start
children NNS ^ ^ false_start
children NNS children arg0 OK
are VBP are predicate OK
there RB there arg2 OK
just RB just arg2 OK
to TO to arg2 OK
help VB help arg2 OK
them PRP them arg2 OK
out RP out arg1 OK
around IN around arg1 OK
the DT the arg1 OK
house NN house arg1 OK
doing VBG doing arg1 OK
chores NNS chores arg1 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

and CC ^ ^ false_start
she PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
told VBN told predicate OK
her PRP her arg2 OK
since IN since argM_tmp OK
day NN day argM_tmp OK
one CD one argM_tmp OK
i PRP i arg1 OK
'll MD 'll arg1 OK
never RB never argM_neg OK
be VB be arg1 OK
your PRP your arg2 OK
dad NN dad arg2 OK

and CC ^ ^ false_start
that IN ^ ^ filler
you PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
you PRP you arg1 OK
're VBP 're predicate OK
not RB not argM_neg OK
selfish JJ selfish arg2 OK
with IN with arg2 OK
your PRP your arg2 OK
friends NNS friends arg2 OK

with IN ^ ^ false_start
if IN if argM_adverb OK
they PRP they argM_adverb OK
bring VBP bring argM_adverb OK
a DT a argM_adverb OK
toy NN toy argM_adverb OK
she PRP she arg0 OK
wants VBZ wants predicate OK
to TO to arg1 OK
play VB play arg1 OK
with IN with arg1 OK
it PRP it arg1 OK
and CC and ^ OK
wo MD ^ ^ false_start
n't RB ^ ^ false_start
let VB ^ ^ false_start
her PRP ^ ^ false_start
wo MD wo ^ OK
n't RB n't argM_neg OK
let VB let predicate OK
them PRP them arg0 OK
play VB play arg1 OK
with IN with arg1 OK
her PRP her arg1 OK
toys NNS toys arg1 OK

so UH ^ ^ false_start
i PRP ^ ^ false_start
tell VBP ^ ^ false_start
her PRP ^ ^ false_start
i PRP i arg0 OK
try VBP try predicate OK
to TO to arg1 OK
preach VBP preach arg1 OK
on IN on arg1 OK
her PRP her arg1 OK
just RB just argM_adverb OK
how WRB how argM_extent OK
much JJ much argM_extent OK
you PRP you arg0 OK
value VB value arg1 OK
friends NNS friends arg1 OK
and ADVP-1 and arg1 OK
how CC ^ ^ false_start
ch- WRB ^ ^ false_start
how XX how argM_extent OK
much WRB much argM_extent OK
you JJ you arg0 OK
should PRP should argM_mod OK
cherish MD cherish arg1 OK
it VB it arg1 OK

unfortunately UNK unfortunately argM_adverb OK
the UNK the arg2 OK
way UNK way arg2 OK
that UNK that arg2 OK
people UNK people arg1 OK
are UNK are predicate OK
though UNK ^ ^ false_start
and UNK and ^ OK
when UNK when argM_tmp OK
i UNK i arg0 OK
see UNK see predicate OK
these UNK these arg1 OK
commercials UNK commercials arg1 OK
they UNK they arg0 OK
think UNK think predicate OK
friendship UNK friendship arg1 OK
's UNK 's arg1 OK
all UNK all arg2 OK
about UNK about arg2 OK
partying UNK partying arg2 OK

that IN ^ ^ filler
if IN if argM_adverb OK
you PRP you arg0 OK
have VBP have predicate OK
a DT ^ ^ false_start
friend NN ^ ^ false_start
that WDT ^ ^ false_start
you PRP ^ ^ false_start
someone NN someone arg0 OK
in IN in arg0 OK
your PRP your arg0 OK
life NN life arg0 OK
you PRP you arg0 OK
do VBP do arg1 OK
call VB call arg1 OK
a DT a arg2 OK
friend NN friend arg2 OK
that WDT that ^ OK
that WDT ^ arg1 false_start
something NN 's predicate false_start
you PRP ^ ^ false_start
should MD ^ ^ false_start
something NN something arg1 OK
to TO to arg2 OK
be VB be arg2 OK
valued VBN valued arg2 OK
not NP-2 not argM_neg OK
just RB just argM_adverb OK
to RB to ^ OK
go TO go predicate OK
out VB out arg_particl OK
and RB and ^ OK
have CC have predicate OK
fun VB fun arg1 OK
with NN with arg1 OK

that DT ^ ^ repeat
that DT ^ ^ repeat
's BES ^ ^ repeat
that DT ^ ^ false_start
's BES ^ ^ false_start
they PRP they arg0 OK
need VBP need predicate OK
that DT that arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg0 OK
have VBP have predicate OK
a DT a arg1 OK
nephew NN nephew arg1 OK
who WP who arg1 OK
um UH ^ ^ filler
hung VBD hung arg1 OK
around RB around arg2 OK
with IN with arg2 OK
the DT the arg2 OK
wrong JJ wrong arg2 OK
crowd NN crowd arg2 OK

but CC ^ ^ false_start
now RB ^ ^ false_start
he PRP ^ ^ false_start
's BES ^ ^ false_start
o- XX ^ ^ false_start
he PRP he arg1 OK
's BES 's predicate OK
nineteen CD nineteen arg2 OK
now RB now arg2 OK

i PRP i ^ OK

i PRP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
good JJ good arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
y- XX ^ ^ false_start
i PRP i arg0 OK
can MD can argM_mod OK
tell VB tell predicate OK
you PRP you arg2 OK
that DT that arg1 OK
's BES 's arg1 OK
something NN something arg1 OK
that WDT that arg1 OK
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
all DT all arg0 OK
of IN of arg0 OK
us PRP us arg0 OK
sh- MD ^ ^ repeat
uh UH ^ ^ filler
should MD should argM_mod OK
learn VB learn arg2 OK
to TO ^ ^ false_start
value VB ^ ^ false_start
to TO to arg1 OK
have VB have arg1 OK
that NP-1 ^ predicate false_start

um UH ^ arg0 filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN ^ ^ filler
i PRP i ^ OK
say VBP say predicate OK
i PRP i ^ OK
have VBP have predicate OK
a DT ^ ^ repeat
a DT a ^ OK
few JJ few ^ OK
friends NNS friends ^ OK
people UNK people arg2 OK
you UNK you arg0 OK
talk UNK talk predicate OK
to UNK to argM_tmp OK
on UNK on argM_tmp OK
a UNK a argM_tmp OK
daily UNK daily argM_tmp OK
basis UNK basis argM_tmp OK
but UNK but argM_discou OK
you UNK you arg0 OK
wo UNK wo ^ OK
n't UNK n't argM_neg OK
go UNK go predicate OK
out UNK out arg1 OK
of UNK of arg1 OK
your UNK your arg1 OK
way UNK way arg1 OK
for UNK for arg1 OK
on UNK ^ ^ false_start
a UNK ^ ^ false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
on UNK ^ ^ false_start
a UNK ^ ^ false_start
r- UNK ^ ^ false_start
on UNK on arg1 OK
a UNK a arg1 OK
limb UNK limb arg1 OK

you PRP ^ ^ false_start
would MD ^ ^ false_start
never RB ^ ^ false_start
but CC ^ ^ false_start
the DT the arg1 OK
people NNS people arg1 OK
i PRP i arg1 OK
do VBP do arg1 OK
call VB call arg1 OK
friends NNS friends arg1 OK
i PRP i arg0 OK
cherish VBP cherish predicate OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
ag- RB ^ ^ repeat
again RB ^ ^ filler
i PRP i arg0 OK
could MD could argM_mod OK
tell VB tell predicate OK
you PRP you arg2 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
well RB ^ ^ filler
my PRP ^ ^ false_start
wife NN ^ ^ false_start
has VBZ ^ ^ false_start
a DT ^ ^ false_start
friend NN ^ ^ false_start
that WDT ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
she PRP ^ ^ false_start
's BES ^ ^ false_start
my PRP my arg1 OK
wife NN wife arg1 OK
is VBZ is arg1 OK
a DT ^ ^ repeat
a DT a arg2 OK
divorced JJ divorced arg2 OK
woman NN woman arg2 OK
with IN with arg2 OK
a DT a arg2 OK
child NN child arg2 OK
before IN before argM_tmp OK
i PRP i argM_tmp OK
came VBD came argM_tmp OK
around RB around argM_tmp OK
ha- XX ^ ^ false_start
she PRP she arg0 OK
had VBD had arg2 OK
a DT a arg1 OK
friend NN friend arg1 OK
whose WP whose arg1 OK
child NN child arg1 OK
's BES 's arg1 OK
like UH ^ ^ filler
a DT a arg2 OK
year NN year arg2 OK
and CC and arg2 OK
a DT a arg2 OK
half NN half arg2 OK
younger JJR younger arg2 OK
than IN than arg2 OK
ours PRP ours arg2 OK

but UNK ^ ^ false_start
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
she UNK she ^ OK
um UNK ^ ^ filler

everything NN everything ^ OK
they PRP they ^ OK
're VBP 're ^ OK
doing VBG doing ^ OK
i NP-1 i ^ OK
think PRP think ^ OK
they VBP ^ ^ repeat
they VBP they ^ OK
're PRP 're ^ OK
're PRP ^ ^ repeat
doing VBP doing ^ OK
out VBG out ^ OK
of IN of ^ OK
necessity IN necessity ^ OK

he PRP he ^ OK
's BES 's ^ OK

the DT ^ ^ false_start
only JJ ^ ^ false_start
thing NN ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
really RB really ^ OK
that RB that ^ OK
uh UH ^ ^ filler
concerned JJ concerned ^ OK
about IN about ^ OK
it PRP it ^ OK
to IN to ^ OK
that DT that ^ OK
point NN point ^ OK
uh UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
what WP what ^ OK
our PRP our ^ OK
representatives NNS representativ es ^ OK
are VBP are ^ OK
for IN for ^ OK

to XX ^ ^ false_start
uh UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
really RB really ^ OK
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK

and CC ^ ^ false_start
eh UH ^ ^ filler
th- RB ^ ^ repeat
then RB then ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
feeling NN feeling ^ OK
too RB ^ ^ false_start
is VBZ is ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
appreciate VBP appreciate ^ OK
and CC and ^ OK
respect VBP respect ^ OK
different JJ different ^ OK
viewpoints NNS viewpoints ^ OK
on IN on ^ OK
it PRP it ^ OK

but CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
still RB still ^ OK
think VBP think ^ OK
uh UH ^ ^ filler
there EX ^ ^ repeat
there EX there ^ OK
are VBP are ^ OK
some DT some ^ OK
people NNS people ^ OK
who WP who ^ OK
are VBP are ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
not RB not ^ OK
facing VBG facing ^ OK
the DT the ^ OK
way NN way ^ OK
things NNS things ^ OK
are VBP are ^ OK

and CC ^ ^ false_start
eh UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
uh UH ^ ^ filler
to TO to ^ OK
uh UH ^ ^ filler
hold VB hold ^ OK
a DT a ^ OK
descending JJ descending ^ OK
opinion NN opinion ^ OK
's BES 's ^ OK
one CD one ^ OK
thing NN thing ^ OK

but CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
eh UH ^ ^ filler
y- PRP ^ ^ repeat
you PRP you ^ OK
can MD can ^ OK
actually RB actually ^ OK
go VB go ^ OK
to IN to ^ OK
the DT ^ ^ false_start
uh UH ^ ^ filler
holding VBG holding ^ OK
us PRP us ^ OK
back RB back ^ OK
from IN from ^ OK
doing VBG doing ^ OK
what WP what ^ OK
we PRP we ^ OK
have VBP have ^ OK
to TO to ^ OK
too NP-2 too ^ OK

y- PRP ^ ^ repeat
you PRP you ^ OK
understa- VBP understa- ^ OK

but CC ^ ^ false_start
holy UH ^ ^ filler
cow UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
scary JJ scary ^ OK
time NN time ^ OK

r- UH ^ ^ repeat
right UH right ^ OK

my PRP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
old JJ old ^ OK
enough RB enough ^ OK
to TO to ^ OK
remember VB remember ^ OK
um UH ^ ^ filler
well UH ^ ^ filler
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
things NNS things ^ OK
my PRP my ^ OK
parents NNS parents ^ OK
told VBD told ^ OK
me PRP me ^ OK
about NP-2 about ^ OK
world IN world ^ OK
war NNP war ^ OK
one NNP one ^ OK
and CD and ^ OK
two CC two ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
also RB ^ ^ false_start
am VBP ^ ^ false_start
very RB ^ ^ false_start
st- JJ ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
believe VBP believe ^ OK
believe VBP ^ ^ false_start
repeat VB in ^ false_start
that IN ^ ^ filler
uh UH ^ ^ filler
if IN ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
if IN ^ ^ false_start
you PRP ^ ^ false_start
rep- VBP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
trying VBG ^ ^ false_start
to TO ^ ^ false_start
hurry VB ^ ^ false_start
here RB ^ ^ false_start
uh UH ^ ^ filler
do VBP ^ ^ false_start
n't RB not ^ false_start
repeat VB repeating ^ false_start
history NN history ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
understand VB understand ^ OK
how WRB ^ ^ false_start
people NNS ^ ^ false_start
ca MD ^ ^ false_start
n't RB ^ ^ false_start
look VB ^ ^ false_start
at IN ^ ^ false_start
this DT ^ ^ false_start
and CC ^ ^ false_start
just RB ^ ^ false_start
say VB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
eh UH ^ ^ filler
how WRB ^ ^ false_start
they PRP ^ ^ false_start
some DT ^ ^ false_start
people NNS ^ ^ false_start
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
a S ^ ^ false_start
descending DT ^ ^ false_start
op- JJ ^ ^ false_start
opinion NN ^ ^ false_start
but NN ^ ^ false_start
how CC how ^ OK
they WRB they ^ OK
can PRP can ^ OK
say MD say ^ OK
some VB some ^ OK
of DT of ^ OK
the IN the ^ OK
things DT things ^ OK
they NNS they ^ OK
say PRP say ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ repeat
eh UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
like IN like ^ OK
no DT no ^ OK
one NN one ^ OK
wants VBZ wants ^ OK
this DT this ^ OK

but CC ^ ^ false_start
uh UH ^ ^ filler
it PRP ^ ^ repeat
it PRP ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
last JJ last ^ OK
night NN night ^ OK
he PRP he ^ OK
was VBD was ^ OK
very RB very ^ OK
candid JJ candid ^ OK

uh UH ^ ^ filler
he PRP ^ ^ false_start
was VBD ^ ^ false_start
very RB ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
he PRP he ^ OK
really RB really ^ OK
hit VBD hit ^ OK
the DT the ^ OK
nail NN nail ^ OK
on IN on ^ OK
the DT the ^ OK
head NN head ^ OK

as IN ^ ^ false_start
to IN ^ ^ false_start
and CC ^ ^ false_start
it PRP ^ ^ false_start
t- IN ^ ^ false_start
to IN to ^ OK
me PRP me ^ OK
it PRP it ^ OK
looked VBD looked ^ OK
very RB very ^ OK
genuine JJ genuine ^ OK
and CC and ^ OK
sincere JJ sincere ^ OK
in IN in ^ OK
what WP what ^ OK
he PRP he ^ OK
and CC and ^ OK
the DT ^ ^ repeat
the DT the ^ OK
others NNS others ^ OK
were VBD were ^ OK
saying VBG saying ^ OK

uh UH ^ ^ filler
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

are VBP ^ ^ false_start
you PRP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
in IN ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
in IN in ^ OK
florida NNP florida ^ OK

do VBP ^ ^ false_start
n't RB ^ ^ false_start
well UH ^ ^ filler
s- XX ^ ^ false_start
mm UH ^ ^ false_start
uh UH ^ ^ filler
not RB not ^ OK
much RB much ^ OK

but CC ^ ^ false_start
it PRP it ^ OK
's HVS 's ^ OK
been VBN been ^ OK
down RB down ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
say UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
low JJ low ^ OK
thirties NNS thirties ^ OK

i PRP i ^ OK
used VBD used ^ OK
to TO to ^ OK
talk VB talk ^ OK
to IN to ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
people NNS people ^ OK
from IN from ^ OK
kentucky NNP kentucky ^ OK
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
w- VBD ^ ^ repeat
worked VBD worked ^ OK
for IN for ^ OK
a DT a ^ OK
company NN company ^ OK
called VBN called ^ OK
volaris NNP volaris ^ OK

do VBP ^ ^ false_start
w- XX ^ ^ false_start
what WP what ^ OK
about IN about ^ OK
your PRP your ^ OK
friends NNS friends ^ OK

well UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
people NNS people ^ OK
who WP ^ ^ false_start
're VBP ^ ^ false_start
s- XX ^ ^ false_start
whose WP whose ^ OK
kids NNS kids ^ OK
are VBP are ^ OK
going VBG going ^ OK
too RB too ^ OK

uh UH ^ ^ filler
i PRP i ^ OK
know VBP know ^ OK
when WRB ^ ^ false_start
i PRP ^ ^ false_start
was VBD ^ ^ false_start
in IN ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like IN ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
missed VBD missed ^ OK
the DT the ^ OK
vietnam NNP vietnam ^ OK
era NN era ^ OK
by IN by ^ OK
like UH ^ ^ filler
two CD two ^ OK
or CC or ^ OK
three CD three ^ OK
months NNS months ^ OK
uh UH ^ ^ filler
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
being VBG being ^ OK
a DT ^ ^ repeat
a DT a ^ OK
vietnam NNP vietnam ^ OK
veteran NN veteran ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
back RB back ^ OK
then RB then ^ OK
it PRP ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
we PRP we ^ OK
had VBD had ^ OK
it PRP it ^ OK
pretty RB pretty ^ OK
easy RB easy ^ OK

they PRP ^ ^ false_start
called VBD ^ ^ false_start
it PRP ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
after IN after ^ OK
nam NNP nam ^ OK
it PRP it ^ OK
was VBD was ^ OK
like RP like ^ OK
take VB take ^ OK
it PRP it ^ OK
easy RB easy ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
they PRP they ^ OK
called VBD called ^ OK
it PRP it ^ OK
a DT ^ ^ repeat
an DT an ^ OK
inspection NN inspection ^ OK
navy NNP navy ^ OK

but CC ^ ^ false_start
still RB still ^ OK
at IN at ^ OK
the DT the ^ OK
same JJ same ^ OK
time NN time ^ OK
i PRP i ^ OK
was VBD was ^ OK
able JJ able ^ OK
to TO to ^ OK
go VB go ^ OK
overseas RB overseas ^ OK
and CC ^ ^ repeat
and CC and ^ OK
see VB see ^ OK
things NNS ^ ^ false_start
the DT ^ ^ repeat
the DT the ^ OK
things NNS ^ ^ false_start
way NN ^ ^ repeat
way NN way ^ OK
things NNS ^ ^ false_start
other JJ other ^ OK
things NNS ^ ^ false_start
people NNS people ^ OK
things NNS ^ ^ false_start
live VBP live ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
uh UH uh ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
some DT some ^ OK
other JJ other ^ OK
people NNS people ^ OK
that WDT that ^ OK
i PRP i ^ OK
've VBP 've ^ OK
talked VBN talked ^ OK
to IN to ^ OK
recently NP-1 recently ^ OK
even RB even ^ OK
agree RB agree ^ OK
that VBP that ^ OK
i- IN ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it ^ OK
's PRP 's ^ OK
too BES too ^ OK
bad RB bad ^ OK

it PRP ^ ^ false_start
would MD ^ ^ false_start
um UH ^ ^ filler
they PRP they ^ OK
wo MD wo ^ OK
n't RB n't ^ OK
do VB do ^ OK
it PRP it ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
sure JJ sure ^ OK

but CC ^ ^ false_start
every DT every ^ OK
kid NN kid ^ OK
out IN out ^ OK
of IN of ^ OK
high JJ high ^ OK
school NN school ^ OK
ought MD ought ^ OK
to TO to ^ OK
spend VB spend ^ OK
two CD two ^ OK
years NNS years ^ OK
overseas RB overseas ^ OK
and CC and ^ OK
see VB see ^ OK
what WP what ^ OK
it PRP it ^ OK
's BES 's ^ OK
really RB ^ ^ repeat
really RB really ^ OK
like IN like ^ OK

it PRP it ^ OK
r- RB r- ^ OK

that DT ^ ^ false_start
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i- IN ^ ^ repeat
if IN ^ ^ false_start
uh UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
always RB always ^ OK
the DT the ^ OK
ugly JJ ugly ^ OK
american NNP american ^ OK
american NNP ^ ^ false_start
american NNP or ^ false_start
the DT the ^ OK
good JJ good ^ OK
american NNP american ^ OK
american NNP ^ ^ false_start
american NNP ^ ^ false_start
greek JJ ^ ^ false_start
greek NN and ^ false_start
the DT the ^ OK
th- DT ^ ^ repeat
ugly JJ ugly ^ OK
uh UH ^ ^ filler
greek JJ greek ^ OK
or CC or ^ OK
the DT the ^ OK
good JJ good ^ OK
greek NN greek ^ OK

if IN if ^ OK
you PRP you ^ OK
were VBD were ^ OK
the DT ^ ^ repeat
the DT the ^ OK
good JJ good ^ OK
american NNP american ^ OK
you PRP you ^ OK
did VBD did ^ OK
n't RB n't ^ OK
uh UH ^ ^ filler
pop VB pop ^ OK
off RP off ^ OK
and CC and ^ OK
you PRP you ^ OK
respected VBD respected ^ OK
them PRP them ^ OK
and CC and ^ OK
tried VBD tried ^ OK
to TO to ^ OK
learn VB learn ^ OK
their PRP their ^ OK
language NN language ^ OK

they PRP they ^ OK
would MD would ^ OK
sit VB sit ^ OK
you PRP you ^ OK
in RB in ^ OK
especially RB especially ^ OK
up IN up ^ OK
north NN north ^ OK

but CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler

i PRP i ^ OK
'll MD 'll ^ OK
bet VB bet ^ OK

so UH ^ ^ filler
i PRP i ^ OK
'd MD 'd ^ OK
love VB love ^ OK
to TO to ^ OK
go VB go ^ OK
to IN to ^ OK
kentucky NNP kentucky ^ OK
and CC ^ ^ repeat
and CC and ^ OK
tennessee NNP tennessee ^ OK
and CC and ^ OK
see VB see ^ OK
that DT that ^ OK
part NN part ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
seen VBN seen ^ OK
a DT a ^ OK
few JJ few ^ OK
states NNS states ^ OK
but CC but ^ OK
not RB not ^ OK
that DT that ^ OK
part NN part ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's SBAR-1 's ^ OK
interesting BES interesting ^ OK
that JJ that ^ OK
you IN you ^ OK
say PRP say ^ OK
easter VBP easter ^ OK
because NNP because ^ OK
i IN ^ ^ repeat
i VBP i ^ OK
r- PRP ^ ^ repeat
remember PRP remember ^ OK
as VBP ^ ^ repeat
as DT as ^ OK
a IN ^ ^ repeat
a IN a ^ OK
child DT child ^ OK
i NN i ^ OK
used PRP used ^ OK
to VBD to ^ OK
really TO ^ ^ false_start
really RB really ^ OK
like RB like ^ OK
easter VBP easter ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
've VBP ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP guess ^ OK
as IN as ^ OK
the DT the ^ OK
kids NNS kids ^ OK
were VBD were ^ OK
younger JJR younger ^ OK
and CC and ^ OK
growing VBG growing ^ OK
up RB up ^ OK
liked VBD _ARG_ ^ false_start
uh UH ^ ^ filler
really RB really ^ OK
liked VBD liked ^ OK
it PRP it ^ OK

an- CC ^ ^ repeat
and CC ^ ^ false_start
now RB now ^ OK
easter NNP easter ^ OK
has VBZ has ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
has VBZ _ARG_ ^ false_start

i PRP ^ ^ repeat
i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
say VB say ^ OK
it PRP it ^ OK
's HVS 's ^ OK
fallen VBN fallen ^ OK
into IN into ^ OK
the DT the ^ OK
background NN background ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
seem VB seem ^ OK
to TO to ^ OK
be VB be ^ OK
quite RB ^ ^ repeat
quite RB quite ^ OK
as RB ^ ^ repeat
as RB as ^ OK
big JJ big ^ OK
a DT a ^ OK
holiday NN holiday ^ OK
as IN ^ ^ repeat
as IN as ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
was VBD was ^ OK
uh UH ^ ^ filler
years NNS years ^ OK
ago RB ago ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
uh UH ^ ^ filler
guess VBP guess ^ OK
when WRB when ^ OK
i PRP i ^ OK
think VBP think ^ OK
of IN of ^ OK
easter NNP easter ^ OK
i ADVP-TMP- 1 i ^ OK
think PRP think ^ OK
of VBP of ^ OK
uh IN ^ ^ filler
easter UH easter ^ OK
vigil NNP vigil ^ OK
because NN because ^ OK
i IN ^ ^ false_start
we PRP we ^ OK
attend PRP attend ^ OK
the VBP the ^ OK
catholic DT catholic ^ OK
church JJ church ^ OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
associate VB associate ^ OK
it PRP it ^ OK
with IN with ^ OK
the DT the ^ OK
holiday NN holiday ^ OK

a UNK ^ ^ false_start
it UNK ^ ^ repeat
that DT that ^ OK
's UNK ^ ^ repeat
's BES 's ^ OK
an DT an ^ OK
interesting JJ interesting ^ OK
way NN way ^ OK
to TO to ^ OK
put VB put ^ OK
it PRP it ^ OK

i PRP ^ ^ false_start
oh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
find VBP find ^ OK
that DT that ^ OK
very RB very ^ OK
interesting JJ interesting ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler
's BES _ARG_ ^ false_start

eh UNK ^ ^ repeat
eh UNK eh ^ OK

you PRP ^ ^ false_start
we PRP we ^ OK
really RB really ^ OK
should MD should ^ OK
celebrate VB celebrate ^ OK
winter NN winter ^ OK

gee UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP ^ ^ false_start
if IN if ^ OK
i PRP i ^ OK
were VBD were ^ OK
going VBG going ^ OK
to TO to ^ OK
create VB create ^ OK
a DT a ^ OK
holiday NN holiday ^ OK
i PRP i ^ OK
think VBP think ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
create VB create ^ OK
a DT a ^ OK
holiday NN holiday ^ OK
that WDT that ^ OK
was VBD was ^ OK
national JJ a ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ repeat
of RB ^ ^ false_start
national JJ national ^ OK
celebrate VB celebrate ^ OK
having VBG having ^ OK
kids NNS kids ^ OK
day NN day ^ OK

just RB ^ ^ false_start
sort RB ^ ^ repeat
of RB ^ ^ repeat
a DT ^ ^ repeat
sort RB ^ ^ false_start
of RB ^ ^ false_start
a DT a ^ OK
holiday NN holiday ^ OK
that WDT that ^ OK
families NNS families ^ OK
could MD could ^ OK
be VB be ^ OK
together RB together ^ OK

an- CC ^ ^ repeat
and CC ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
celebrate VB celebrate ^ OK
the DT the ^ OK
ti- XX ti- ^ OK

i PRP ^ ^ repeat
'm VBP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
gettin- VB ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
somewhat RB somewhat ^ OK
nostalgic JJ nostalgic ^ OK
about IN about ^ OK
that DT that ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

our PRP ^ ^ repeat
our PRP ^ ^ repeat
our PRP our ^ OK
son NN ^ ^ repeat
daughter NN daughter ^ OK
's HVS 's ^ OK
been VBN been ^ OK
gone VBN gone ^ OK
for IN for ^ OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
years NNS years ^ OK
off IN off ^ OK
to IN to ^ OK
college NN college ^ OK

so UH ^ ^ filler
w- NN ^ ^ repeat
we PRP we ^ OK
're VBP 're ^ OK
empty JJ empty ^ OK
nesters NNS nesters ^ OK
uh UH ^ ^ filler
for IN for ^ OK
the DT the ^ OK
first JJ first ^ OK
time NN time ^ OK

but CC ^ ^ false_start
it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it ^ OK
is VBZ is ^ OK
different JJ different ^ OK

because IN ^ ^ false_start
i- VBZ ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
they PRP they ^ OK
probably RB probably ^ OK
should MD should ^ OK
n't RB n't ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

but CC ^ ^ false_start
so RB so ^ OK
much RB much ^ OK
has PP-2 has ^ OK
been VBZ been ^ OK
commercialized VBN commercialize d  ^ OK
about VBN about ^ OK
so IN so ^ OK
many RB many ^ OK
things JJ things ^ OK

and CC ^ ^ false_start
here RB ^ ^ false_start
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden JJ sudden ^ OK
you PRP you ^ OK
have VBP have ^ OK
organizations NNS organizations ^ OK
trying VBG trying ^ OK
to TO to ^ OK
pass VB pass ^ OK
things NNS things ^ OK
off RP off ^ OK
as IN as ^ OK
holidays NNS holidays ^ OK
to TO to ^ OK
celebrate VB celebrate ^ OK

and CC ^ ^ false_start
what WP what ^ OK
they PRP they ^ OK
really RB really ^ OK
are VBP are ^ OK
is NP-PRD-1 is ^ OK
an VBZ an ^ OK
excuse DT excuse ^ OK
to NN to ^ OK
sell TO sell ^ OK
you VB you ^ OK
more PRP more ^ OK
greeting JJR greeting ^ OK
cards VBG cards ^ OK
or NNS ^ ^ repeat
or CC or ^ OK
candy CC candy ^ OK
or NN or ^ OK
what CC what ^ OK
have WP have ^ OK
you VBP you ^ OK

i PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
my PRP my ^ OK
wife NN wife ^ OK
is VBZ is ^ OK
from IN from ^ OK
detroit NNP detroit ^ OK

and CC ^ ^ false_start
when WRB ^ ^ repeat
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
first RB first ^ OK
moved VBD moved ^ OK
up IN up ^ OK
there RB there ^ OK
i ADVP-TMP- 3 i ^ OK
found PRP found ^ OK
it VBD it ^ OK
very PRP very ^ OK
curious SBAR-2 curious ^ OK
that RB that ^ OK
they JJ they ^ OK
celebrate IN celebrate ^ OK
something PRP something ^ OK
in VBP ^ ^ repeat
in NNP ^ ^ repeat
in VBN in ^ OK
detroit NN detroit ^ OK
or IN or ^ OK
that CC that ^ OK
area IN ^ ^ false_start
part IN part ^ OK
of DT of ^ OK
the NN the ^ OK
country NN country ^ OK
called VP-1 ^ ^ repeat
called IN called ^ OK
sweetest DT sweetest ^ OK
day NN day ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
had VBD had ^ OK
never RB never ^ OK
heard VBN heard ^ OK
of IN of ^ OK
sweetest NNP sweetest ^ OK
day NNP day ^ OK
before RB before ^ OK

oh UH ^ ^ filler
you PRP you ^ OK
have VBP have ^ OK
n't RB n't ^ OK
heard VBN heard ^ OK
of IN of ^ OK
sweetest NNP sweetest ^ OK
day NNP day ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
big JJ ^ ^ repeat
big JJ big ^ OK
holiday NN holiday ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
well UH ^ ^ filler
i PRP i ^ OK
've VBP 've ^ OK
lived VBN lived ^ OK
uh UH ^ ^ filler
a DT a ^ OK
number NN number ^ OK
of IN of ^ OK
different JJ different ^ OK
places NNS places ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
never RB never ^ OK
heard VBN heard ^ OK
of IN of ^ OK
it PRP it ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you- PRP ^ ^ repeat
y- PRP ^ ^ false_start
people NNS people ^ OK
take VBP take ^ OK
out RP out ^ OK
ads NNS ads ^ OK
in IN in ^ OK
the DT the ^ OK
paper NN paper ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
this DT this ^ OK
big JJ big ^ OK
deal NN deal ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
kind SBAR-1 ^ ^ false_start
^ ^ ^ ^ false_start
spoils RB spoils ^ OK
the VBZ the ^ OK
whole DT whole ^ OK
concept JJ concept ^ OK
of NN of ^ OK
holidays IN holidays ^ OK
for NNS for ^ OK
me IN me ^ OK
to PRP to ^ OK
see TO see ^ OK
things VB things ^ OK
like NNS like ^ OK
that IN that ^ OK
happen DT happen ^ OK

one CD ^ ^ repeat
one CD one ^ OK
of IN ^ ^ repeat
of IN of ^ OK
the DT ^ ^ repeat
the DT the ^ OK
firs- JJ ^ ^ repeat
first JJ first ^ OK
things NNS things ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
to TO to ^ OK
do VB do ^ OK
is NP-1 is ^ OK
say VBZ say ^ OK
bill VB bill ^ OK
has NN has ^ OK
never VBZ never ^ OK
heard RB heard ^ OK
of VBN of ^ OK
sweetest IN sweetest ^ OK
day NNP day ^ OK
either NNP either ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
local JJ local ^ OK
celebration NN celebration ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
fine JJ fine ^ OK

everybody NN everybody ^ OK
looks VBZ looks ^ OK
at IN at ^ OK
you PRP you ^ OK
like UH like ^ OK
whoa UH whoa ^ OK
wait VB wait ^ OK
a DT a ^ OK
minute NN minute ^ OK

wh- WRB ^ ^ repeat
why WRB ^ ^ repeat
why WRB why ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
looking VBG looking ^ OK
forward RB forward ^ OK
to IN to ^ OK
bunker NNP bunker ^ OK
hill NNP hill ^ OK
day NN day ^ OK

yeah UNK yeah ^ OK
but UNK but ^ OK
that UNK that ^ OK
's UNK 's ^ OK
uh UNK ^ ^ filler
's UNK _ARG_ ^ false_start

mm UH mm ^ OK
mm UH mm ^ OK

um UH ^ ^ filler
do VBP do ^ OK
you PRP you arg0 OK
have VB have predicate OK
a DT a arg1 OK
dollar NN dollar arg1 OK
theater NN theater arg1 OK
where WRB where argM_loc OK
you PRP you arg0 OK
live VBP live argM_loc OK

do VBP do ^ OK
you PRP you arg0 OK
have VB have predicate OK
a DT a arg1 OK
dollar NN dollar arg1 OK
theater NN theater arg1 OK
where WRB where argM_loc OK
you PRP you arg0 OK
live VBP live argM_loc OK

you PRP you arg0 OK
you PRP ^ ^ repeat
definitely RB definitely ^ false_start
have VBP ^ ^ repeat
have VBP have ^ OK
to TO ^ ^ repeat
to TO to ^ OK
judge VB judge predicate OK
which WDT which arg1 OK
ones NNS ones arg1 OK
are VBP are arg1 OK
worth JJ worth arg2 OK
it PRP it arg2 OK
and CC and arg1 OK
which WDT which arg1 OK
ones NNS ones arg1 OK
are VBP are arg1 OK
n't RB n't arg2 OK

w- XX ^ ^ false_start
how WRB how arg2 OK
much JJ much arg2 OK
is VBZ is predicate OK
a DT a arg1 OK
ticket NN ticket arg1 OK

they PRP they arg1 OK
used VBD used argM_tmp OK
to TO to argM_tmp OK
be VB be predicate OK
real RB really arg2 false_start
nasty JJ nasty arg2 OK
and CC and arg2 OK
dirty JJ dirty arg2 OK

but CC ^ ^ false_start
yeah UH yeah ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
like UH ^ ^ filler
when WRB when ^ OK
um UH ^ ^ filler
the DT the arg1 OK
blair NNP blair arg1 OK
witch NNP witch arg1 OK
project NNP project arg1 OK
came VBD came predicate OK
out RB out arg4 OK

i PRP ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg1 OK
've VBP ^ ^ false_start
'm VBP 'm predicate OK
a DT a arg2 OK
business NN business arg2 OK
graduate NN graduate arg2 OK
from IN from arg2 OK
uh UH ^ ^ filler
university NNP university arg2 OK
of IN of arg2 OK
houston NNP houston arg2 OK

and CC ^ ^ false_start
so RB so argM_adverb OK
i PRP ^ ^ repeat
i PRP i arg0 OK
thought VBD thought predicate OK
that DT that arg1 OK
was VBD was arg2 OK
kind RB kind arg2 OK
of RB of arg2 OK
silly JJ silly arg2 OK
because IN because argM_cause OK
if IN if argM_cause OK
you PRP you arg0 OK
were VBD were argM_cause OK
doing VBG doing argM_cause OK
a DT a arg1 OK
job NN job arg1 OK
you PRP you arg0 OK
'd MD 'd argM_cause OK
have VB have argM_cause OK
the DT the arg1 OK
formulas NNS formulas arg1 OK

well UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
feel VBP feel predicate OK
much RB much arg1 OK
the DT the arg1 OK
same JJ same arg1 OK
about IN about arg2 OK
computers NNS computers arg2 OK

i PRP i arg0 OK
've VBP 've ^ OK
heard VBN heard predicate OK
some DT some arg0 OK
folks NNS folks arg0 OK
say VBP say arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that IN that arg1 OK
they PRP ^ ^ false_start
're VBP ^ ^ false_start
not RB ^ ^ false_start
they PRP they arg0 OK
kind RB kind argM_extent OK
of RB of argM_extent OK
uh UH ^ ^ filler
take VB take arg1 OK
the DT the arg1 OK
thinking NN thinking arg1 OK
away RP away arg1 OK
for IN for arg2 OK
you PRP you arg2 OK

so RB ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
kind RB kind argM_extent OK
of RB of argM_extent OK
what WP what arg2 OK
i PRP i arg0 OK
think VBP think arg2 OK
about IN about arg1 OK
it PRP it arg1 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

i PRP i ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
this DT this arg1 OK
happened VBD happened predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
metroplex NNP metroplex argM_loc OK

and CC ^ ^ false_start
have VBP have ^ OK
you PRP you arg0 OK
heard VBN heard predicate OK
and CC and ^ OK
maybe RB maybe argM_adverb OK
you PRP you arg0 OK
feel VBP feel predicate OK
the DT the arg1 OK
same JJ same arg1 OK
way NN way arg1 OK
i PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
sometimes VP sometimes argM_tmp OK
the RB the arg1 OK
kids DT kids arg0 OK
ca NNS ca argM_mod OK
n't MD n't argM_neg OK
give RB give arg1 OK
change VB change arg1 OK
uh NN ^ ^ filler
if UH if argM_cause OK
the IN the argM_cause OK
machine DT machine arg1 OK
is NN is argM_cause OK
down VBZ down arg2 OK

by IN ^ ^ repeat
by IN by argM_discou OK
that DT ^ ^ repeat
that DT that argM_discou OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
they PRP they arg0 OK
only RB only argM_adverb OK
can MD can argM_mod OK
look VB look predicate OK
at IN ^ ^ false_start
and CC and ^ OK
say VB say predicate OK
what WP what arg1 OK

and CC ^ ^ false_start
so UH ^ ^ false_start
i PRP ^ ^ false_start
wonder VBP ^ ^ false_start
now RB ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
doing VBG ^ ^ false_start
devils NNS ^ ^ false_start
advocate NN ^ ^ false_start
but CC but argM_adverb OK
i PRP ^ ^ repeat
i PRP i arg0 OK
wonder VBP wonder predicate OK
if IN if arg1 OK
the DT the arg0 OK
u- NN ^ ^ repeat
use NN use arg0 OK
of IN of arg0 OK
computers NNS computers arg0 OK
big JJ big argM_extent OK
time NN time argM_extent OK
has VBZ has arg1 OK
some DT some arg1 OK
bad JJ bad arg1 OK
effect NN effects arg1 false_start
uh UH ^ ^ filler
on IN on arg1 OK
the DT the arg1 OK
ability NN ability arg1 OK
to TO to arg1 OK
reason VB reason arg1 OK

i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not arg2 OK
sure JJ sure arg2 OK
where WRB what arg2 false_start
i PRP i arg0 OK
meant VBD meant arg2 OK
with IN with arg1 OK
that DT ^ ^ repeat
that DT that arg1 OK
statement NN statement arg1 OK

but CC ^ ^ repeat
but CC but argM_adverb OK
it PRP it arg0 OK
does VBZ does predicate OK
kind RB kind argM_extent OK
of RB of argM_extent OK
make VB make arg1 OK
you PRP you arg1 OK
feel VB feel arg2 OK
funny JJ funny arg2 OK
when WRB when argM_tmp OK
somebody NN somebody arg0 OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
do VB make argM_tmp false_start
change NN change arg1 OK
for IN for arg1 OK
a DT a arg1 OK
dollar NN dollar arg1 OK
but CC but arg1 OK
knows VBZ knows arg1 OK
that IN that arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
twenty-three CD twenty-three arg2 OK
cents NNS cents arg2 OK

it PRP ^ ^ repeat
it PRP it arg0 OK
does VBZ ^ ^ repeat
does VBZ does predicate OK
almost RB almost arg1 OK
make VB make arg1 OK
sense NN sense arg1 OK
does VBZ does predicate OK
n't RB n't argM_neg OK
it PRP it arg0 OK

and CC and ^ OK
i PRP i ^ OK

that DT that ^ OK
may MD may ^ OK
you PRP you ^ OK
know VBP know ^ OK
it PRP it ^ OK
's BES 's ^ OK

now RB now argM_tmp OK
i PRP i arg0 OK
'm VBP 'm ^ OK
pumping VBG pumping predicate OK
up RP up arg_particl OK
college NN college arg1 OK
graduate NN graduate arg1 OK
shit NN shit arg1 OK

what WP ^ arg2 false_start
i PRP ^ ^ false_start
find VBP ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
a DT a argM_extent OK
little JJ little argM_extent OK
bit NN bit argM_extent OK
older JJR of ^ false_start
older JJR an ^ false_start
older JJR older arg2 OK
guy NN guy arg2 OK

so UNK ^ ^ false_start
for UNK ^ ^ false_start
me UNK ^ ^ false_start
the UNK the ^ OK
things UNK things ^ OK
that UNK that ^ OK
i UNK i ^ OK
used UNK used ^ OK
to UNK to ^ OK
know UNK know ^ OK
about UNK about ^ OK
algebra UNK algebra ^ OK
that UNK that ^ OK
's UNK 's ^ OK
all UNK all ^ OK
i UNK i ^ OK
can UNK can ^ OK
really UNK really ^ OK
think UNK think ^ OK
of UNK of ^ OK
at UNK at ^ OK
the UNK the ^ OK
moment UNK moment ^ OK
as UNK as ^ OK
an UNK an ^ OK
example UNK example ^ OK
it UNK it ^ OK
really UNK really ^ OK
is UNK is ^ OK
a UNK a ^ OK
strain UNK strain ^ OK
to UNK to ^ OK
get UNK get ^ OK
back UNK back ^ OK
and UNK and ^ OK
do UNK do ^ OK

uh UH ^ ^ filler
what WP what arg1 OK
i PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
r- VBP ^ ^ repeat
remember VBP ^ ^ false_start
used VBD used arg1 OK
to TO to arg1 OK
be VB be arg1 OK
were VBD ^ predicate repeat
fairly RB fairly arg1 OK
simple JJ simple arg1 OK
uh UH ^ ^ filler
mathematical JJ mathematical arg1 false_start
uh UH ^ ^ filler
tasks NNS tasks arg1 OK
is VBZ is predicate OK
what WP what arg2 OK
i PRP i arg0 OK
'm VBP 'm arg2 OK
saying VBG saying arg2 OK
uh NP-3 ^ ^ filler
i- UH ^ ^ repeat
it PRP ^ ^ false_start
's PRP ^ ^ false_start
like BES ^ ^ filler
i UH i arg0 OK
sort PRP ^ ^ false_start
of RB ^ ^ false_start
have RB have arg1 OK
forgotten VBP forgotten arg1 OK
uh VBN ^ ^ filler
how UH ^ ^ false_start
to WRB ^ ^ false_start
do TO ^ ^ false_start
those VB ^ ^ false_start
things DT ^ predicate false_start

just RB just arg0 OK
mainly RB mainly ^ OK
because IN because ^ OK
i PRP i ^ OK
either RB either ^ OK
have VBP have ^ OK
n't RB n't ^ OK
used VBN used predicate OK
them PRP them ^ OK
which WDT which ^ OK
kind RB kind ^ OK
of RB of ^ OK
must MD must ^ OK
complicate VB complicate predicate OK
the DT the ^ OK
question NN question ^ OK
or CC or ^ OK
that IN that ^ OK
i PRP i ^ OK
've VBP 've ^ OK
forgotten VBN forgotten predicate OK
the DT the ^ OK
formulas NNS formulas ^ OK
and CC ^ ^ false_start
those DT ^ ^ false_start
things NNS ^ ^ false_start
uh UH ^ ^ filler
that WDT that ^ OK
you PRP you arg0 OK
used VBD used argM_mod OK
to TO to argM_mod OK
know VB know predicate OK
pretty RB pretty argM_extent OK
cold RB cold argM_extent OK

i PRP i ^ OK
'm VBP 'm ^ OK
thinking VBG thinking ^ OK
uh UH ^ ^ filler
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
different JJ different ^ OK

eh UH ^ ^ filler
maybe RB maybe ^ OK
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
live VB live ^ OK
in IN in ^ OK
japan NNP japan ^ OK

which WDT ^ ^ repeat
which WDT which ^ OK
i PRP i ^ OK
've VBP 've ^ OK
never RB never ^ OK
seen VBN seen ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
d- XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP ^ ^ repeat
've VBP 've ^ OK
seen VBN seen ^ OK
crazy JJ crazy ^ OK
shows NNS shows ^ OK
that WDT that ^ OK
are VBP are ^ OK
supposedly RB supposedly ^ OK
from IN from ^ OK
japan NNP japan ^ OK
where WRB where ^ OK
they PRP they ^ OK
show VBP show ^ OK
excerpts NNS excerpts ^ OK

i PRP i ^ OK
saw VBD saw ^ OK
a DT a ^ OK
few JJ few ^ OK
episodes NNS episodes ^ OK
where WRB where ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
tended VBD ^ ^ repeat
tended VBD tended ^ OK
to TO to ^ OK
do VB ^ ^ false_start
uh UH ^ ^ filler
create VB create ^ OK
conflicting JJ ^ ^ false_start
or UH ^ ^ false_start
conflict NN conflict ^ OK
and CC and ^ OK
put VB put ^ OK
people NNS people ^ OK
into IN into ^ OK
the DT the ^ OK
situations NNS situations ^ OK

they PRP they ^ OK
started VBD started ^ OK
to TO to ^ OK
add VB ^ ^ repeat
uh UH ^ ^ filler
add VB add ^ OK
more RBR more ^ OK
uh UH ^ ^ filler
sexual JJ sexual ^ OK
tension NN tension ^ OK
as IN as ^ OK
the DT the ^ OK
time NN time ^ OK
went VBD went ^ OK
on RP on ^ OK

but CC but ^ OK
uh UH ^ ^ filler

or CC ^ ^ repeat
or CC or ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
pull VBP pull ^ OK
over RB over ^ OK
on IN on ^ OK
the DT the ^ OK
side NN side ^ OK
of IN of ^ OK
the DT the ^ OK
road NN road ^ OK
to TO to ^ OK
watch VB watch ^ OK
an DT an ^ OK
accident NN accident ^ OK

i PRP i ^ OK

eh UH ^ ^ filler
uh UH ^ ^ filler
yeah UH yeah ^ OK

but CC but ^ OK
um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
maybe RB maybe ^ OK
it PRP it ^ OK
's BES 's ^ OK
the DT the ^ OK
quality NN quality ^ OK
that WDT that ^ OK
has VBZ has ^ OK
n't RB n't ^ OK
really RB really ^ OK
attracted VBN attracted ^ OK
me PRP me ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
wondering VBG wondering ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
in IN ^ ^ repeat
in IN in ^ OK
the DT ^ ^ repeat
my PRP my ^ OK
fifties NNS fifties ^ OK

uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
young JJ young ^ OK
eh ADVP-TMP- 1 ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
the VBP the ^ OK
shows DT shows ^ OK
that NNS that ^ OK
were WDT were ^ OK
really VBD really ^ OK
popular RB popular ^ OK
that JJ that ^ OK
people WDT people ^ OK
watched NNS watched ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
c- MD ^ ^ repeat
c- MD ^ ^ repeat
ca- MD ^ ^ repeat
can MD can ^ OK
honestly RB honestly ^ OK
remember VB remember ^ OK
that IN that ^ OK
the DT the ^ OK
wheel NNP wheel ^ OK
of IN of ^ OK
fortune NNP fortune ^ OK
was VBD was ^ OK
extremely RB extremely ^ OK
popular JJ popular ^ OK
for IN for ^ OK
some DT some ^ OK
reason NN reason ^ OK

but CC but ^ OK
then RB then ^ OK
people NNS people ^ OK
were VBD were ^ OK
in IN in ^ OK
bars NNS bars ^ OK
and CC and ^ OK
drinking VBG drinking ^ OK
and CC and ^ OK
smoking VBG smoking ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
remember VBP remember ^ OK
that IN ^ ^ repeat
that DT that ^ OK
was VBD was ^ OK
when WRB when ^ OK
it PRP it ^ OK
was VBD was ^ OK

jeopardy NNP ^ ^ repeat
i PRP ^ ^ false_start
jeopardy NNP jeopardy ^ OK
challenges VBZ challenges ^ OK
you PRP you ^ OK

but CC but ^ OK
uh UH ^ ^ filler

and CC ^ ^ false_start
why WRB why ^ OK
are VBP are ^ OK
n't RB n't ^ OK
they PRP they ^ OK
called VBN called ^ OK
reality NN reality ^ OK
shows NNS shows ^ OK
i PRP i ^ OK
wonder VBP wonder ^ OK

but CC but ^ OK
th- XX ^ ^ false_start
so RB so ^ OK
are VBP are ^ OK
the ADVP-PRD- 1 the ^ OK
other DT other ^ OK
ones JJ ones ^ OK

and CC ^ ^ false_start
what WP what ^ OK
's BES 's ^ OK
more RBR more ^ OK
real JJ real ^ OK
than IN than ^ OK
that DT that ^ OK

but CC but ^ OK
what WDT what ^ OK
game NN game ^ OK
shows NNS shows ^ OK
or CC or ^ OK
the DT ^ ^ false_start
sh- NNS ^ ^ false_start
the DT the ^ OK
reality NN reality ^ OK
shows NNS shows ^ OK

well UH ^ ^ false_start
but CC but ^ OK
they PRP they ^ OK
're VBP 're ^ OK
scripted VBN scripted ^ OK
by IN by ^ OK
ar- XX ar- ^ OK

well UH ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i UNK i ^ OK
was UNK was ^ OK
under UNK under ^ OK
the UNK the ^ OK
impression UNK impression ^ OK
that UNK that ^ OK
they UNK they ^ OK
may UNK may ^ OK
be UNK be ^ OK
scripted UNK scripted ^ OK
and UNK and ^ OK
controlled UNK controlled ^ OK
but UNK ^ ^ repeat
but UNK but ^ OK
controlled UNK controlled ^ OK
by UNK by ^ OK
outside UNK outside ^ OK
parties UNK parties ^ OK
not UNK not ^ OK
the UNK the ^ OK
parties UNK parties ^ OK
involved UNK involved ^ OK
themselves UNK themselves ^ OK

they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they ^ OK
put VBP put ^ OK
people NNS people ^ OK
together RB together ^ OK
in IN ^ ^ repeat
in IN in ^ OK
anticipated JJ anticipated ^ OK
conflict NN conflict ^ OK
or CC or ^ OK
an DT an ^ OK
anticipated JJ anticipated ^ OK
situation NN situation ^ OK

a- CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
then RB then ^ OK
they PRP they ^ OK
edit VB edit ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
then RB then ^ OK
of IN of ^ OK
course NN course ^ OK
at IN at ^ OK
the DT the ^ OK
end NN end ^ OK
you PRP you ^ OK
get VBP get ^ OK
a DT a ^ OK
prize NN prize ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they ^ OK
eh UH ^ ^ filler
do VBP do ^ OK
n't RB n't ^ OK
seem VB seem ^ OK
to TO to ^ OK
be VB be ^ OK
talking VBG talking ^ OK

for IN for ^ OK

th- XX ^ ^ false_start
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
hear VB hear ^ OK
them PRP them ^ OK
mention VB mention ^ OK
that DT that ^ OK
on IN on ^ OK
the DT the ^ OK
tape NN tape ^ OK
they PRP they ^ OK
sent VBD sent ^ OK
me PRP me ^ OK
with IN with ^ OK

but CC ^ ^ repeat
but CC ^ ^ repeat
eh UH ^ ^ filler
but CC but ^ OK
uh UH ^ ^ filler

and CC ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
apparently RB apparently ^ OK
uh UH ^ ^ filler
v- XX ^ ^ false_start
poor JJ poor ^ OK

it PRP ^ ^ repeat
's BES ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's predicate OK
all RB all arg1 OK
free JJ free arg1 OK

and CC ^ ^ false_start
they PRP they arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
solitaire NNP solitaire arg1 OK
and CC and arg1 OK
blackjack NNP blackjack arg1 OK
and CC and ^ OK
n- XX ^ ^ false_start
just RB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
different JJ different ^ OK
fun JJ fun ^ OK
kind NN kinds ^ false_start
of IN of ^ OK
games NNS games ^ OK

for IN for ^ OK
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
games NNS games ^ OK
like UH ^ ^ filler
there EX there ^ OK
's BES 's predicate OK
hearts NNS hearts arg1 OK
and CC and arg1 OK
spades NNS spades arg1 OK
you PRP you arg0 OK
can MD can ^ OK
set VB set predicate OK
up RP up arg_particl OK
the DT ^ ^ repeat
the DT the arg1 OK
room NN room arg1 OK
so RB so ^ OK
that IN that ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
playing VBG playing predicate OK
against IN against arg1 OK
the DT the arg1 OK
computer NN computer arg1 OK
if IN if ^ OK
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
play VB play arg1 OK
with IN with arg1 OK
other JJ other arg1 OK
people NNS people arg1 OK

that DT that ^ OK
was VBD was predicate OK
a DT a arg1 OK
little JJ little arg1 OK
personal JJ personal arg1 OK
information NN information arg1 OK
that WDT that ^ OK
the DT the arg0 OK
rest NN rest arg0 OK
of IN of arg0 OK
the DT the arg0 OK
group NN group arg0 OK
probably RB probably ^ false_start
did VBD did ^ OK
n't RB n't ^ OK
need VB need predicate OK
to TO to arg1 OK
know VB know arg1 OK

so UH ^ ^ false_start
it PRP it ^ OK
's SBAR-1 's predicate OK
kind BES ^ ^ false_start
of RB ^ ^ false_start
funny RB funny arg1 OK
what JJ what arg1 OK
people WP people arg0 OK
will NNS will ^ OK
uh MD ^ ^ filler
share UH share predicate OK
anonymously VB anonymously ^ OK

they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
everywhere RB everywhere arg2 OK

so UH ^ ^ filler
that DT that ^ OK
's BES 's predicate OK
kind RB kind arg1 OK
of RB of arg1 OK
fun JJ fun arg1 OK
to TO to arg1 OK
to TO _VERB_ arg1 false_start

there EX there arg1 OK
was VBD was arg1 OK
somebody NN somebody arg1 OK
who WP who arg1 OK
was VBD was arg1 OK
from IN from arg1 OK
australia NNP australia arg1 OK
who WP who ^ OK
i PRP i arg0 OK
actually RB actually ^ OK
d- XX ^ ^ false_start
chatted VBD chatted predicate OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
with IN with arg1 OK
because NP-2 because ^ OK
they IN they ^ OK
were PRP were ^ OK
in VBD ^ ^ repeat
near DT near arg2 OK
a IN ^ ^ repeat
a RB a arg2 OK
city DT city arg2 OK
b- NN ^ ^ false_start
where XX where ^ OK
i WRB i arg1 OK
had PRP had ^ OK
been VBD been predicate OK
last VBN last ^ OK
year JJ year ^ OK

but CC but ^ OK
i PRP i arg1 OK
was VBD was ^ OK
wondering VBG wondering predicate OK
how WRB how arg4 OK
the DT the arg0 OK
call VB call arg0 OK
in RP in arg0 OK
thing NN thing arg0 OK
works VBZ works arg2 OK

and CC ^ ^ false_start
do VBP ^ ^ false_start
your PRP ^ ^ false_start
call NN ^ ^ false_start
as IN ^ ^ false_start
a DT ^ ^ false_start
oh UH ^ ^ filler
that DT that ^ OK
's BES 's predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
cool JJ cool arg1 OK

um UH ^ ^ filler
mine PRP mine ^ OK
was VBD was predicate OK
would MD would arg1 OK
you PRP you arg0 OK
take VB take arg1 OK
a DT a arg1 OK
million CD million arg1 OK
dollars NNS dollars arg1 OK
and CC and ^ OK
then RB then ^ OK
never RB never ^ OK
s- VB s- ^ OK

and CC ^ ^ false_start
never RB never ^ OK
s- VB s- ^ OK

to TO ^ ^ false_start
um UH ^ ^ filler
and CC ^ ^ false_start
never RB never ^ OK
speak VB speak predicate OK
to IN to arg1 OK
your PRP your arg1 OK
best JJS best arg1 OK
friend NN friend arg1 OK
again RB again argM_tmp OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
a- CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
was VBD ^ ^ repeat
would MD would argM_mod OK
like VB like predicate OK
to TO to arg1 OK
thinking VBG ^ ^ repeat
think VB think arg1 OK
that IN that arg1 OK
i PRP i arg0 OK
would MD would argM_mod OK
n't RB n't argM_neg OK
do VB do arg1 OK
that DT that arg1 OK

so RB ^ ^ false_start
i PRP i arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
said VBD said predicate OK
well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD would arg1 OK
like VB like arg1 OK
to TO to arg1 OK
think VBP ^ ^ repeat
think VB think arg1 OK
that IN ^ ^ repeat
that IN that arg1 OK
i- PRP ^ ^ repeat
i PRP i arg0 OK
would MD would arg1 OK
n't RB n't arg1 OK
do VB do arg1 OK
that DT that arg1 OK
um UH ^ ^ filler
because IN because ^ OK
a DT a ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK
w- IN ^ ^ repeat
while IN while ^ OK
it PRP it ^ OK
's BES 's predicate OK
not RB not arg1 OK
small JJ small arg1 OK
peanuts NNS peanuts arg1 OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
not RB ^ ^ repeat
not RB not ^ OK
going VBG going predicate OK
to TO to arg1 OK
take VB take arg1 OK
care NN care arg_particl OK
of IN of arg1 OK
you PRP you arg1 OK
for IN for arg1 OK
the DT the arg1 OK
rest NN rest arg1 OK
of IN of arg1 OK
your PRP your arg1 OK
life NN life arg1 OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
she PRP ^ ^ false_start
thought VBD ^ ^ false_start
i PRP ^ ^ false_start
was VBD ^ ^ false_start
she PRP she arg0 OK
's BES ^ ^ false_start
like RP said predicate false_start
well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
certainly RB certainly arg1 OK
would MD would arg1 OK
n't RB n't ^ OK
n't RB _VERB_ arg1 false_start

like UH ^ ^ filler
it PRP it arg0 OK
would SBAR-1 would ^ OK
n't MD n't ^ OK
even RB ^ ^ false_start
i- RB ^ ^ false_start
cross XX cross predicate OK
her VB her arg1 OK
mind PRP mind arg1 OK
that NN ^ ^ false_start

and CC ^ ^ false_start
then RB then ^ OK
i PRP i ^ OK

well UH ^ ^ filler
and CC ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
feel VBP feel predicate OK
the DT the arg1 OK
same JJ same arg1 OK
way NN way arg1 OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
probably RB probably arg1 OK
the DT the arg1 OK
way NN way arg1 OK
i PRP i arg1 OK
would MD would arg1 OK
go VB go arg1 OK

and CC ^ ^ false_start
y- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
they PRP ^ ^ false_start
'd MD ^ ^ false_start
probably RB ^ ^ false_start
figure VB ^ ^ false_start
out RP ^ ^ false_start
or UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
're VBP 're arg2 OK
trying VBG trying arg2 OK
to TO to arg1 OK
determine VB determine arg1 OK
how WRB ^ ^ repeat
how WRB how arg0 OK
much JJ much arg0 OK
people NNS ^ ^ repeat
people NNS people arg0 OK
will MD will arg1 OK
disclose VB disclose arg1 OK
or NP-2 or ^ OK
not CC not ^ OK
disclose RB disclose predicate OK
or VB or ^ OK
um NP-2 ^ ^ filler
whatever CC whatever ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
i- PRP ^ ^ repeat
i- PRP ^ ^ false_start
when WRB ^ ^ false_start
i PRP ^ ^ false_start
used VBD ^ ^ false_start
to TO ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
had VBD had predicate OK
a DT a arg1 OK
couple NN couple arg1 OK
computer NN computer arg1 OK
games NNS games arg1 OK

um UNK ^ ^ filler
but UNK but ^ OK

the DT the ^ OK
what WDT what ^ OK
factor NN factor ^ OK

i PRP ^ ^ false_start
just RB ^ ^ false_start
oh UH ^ ^ filler
i PRP i arg0 OK
could MD could argM_mod OK
n't RB n't argM_neg OK
believe VB believe predicate OK
it PRP it arg1 OK

it PRP it ^ OK
just RB just ^ OK
gets VBZ gets ^ OK

like IN like ^ OK
you PRP you arg0 OK
said VBD said predicate OK
y- PRP ^ ^ false_start
when WRB when argM_tmp OK
you PRP you arg0 OK
wince VBP wince argM_tmp OK
it ADVP-TMP- 1 it arg1 OK
's PRP 's arg1 OK
time BES time arg2 OK
to NN to arg2 OK
turn TO turn arg2 OK
the VB the arg1 OK
channel DT channel arg1 OK

i PRP ^ ^ false_start
w- XX ^ ^ false_start
i PRP i arg1 OK
fall VBP fall predicate OK
asleep RB asleep arg2 OK
to IN to arg2 OK
that DT that arg2 OK
too RB too argM_discou OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP like predicate OK
the DT ^ ^ false_start
um UH ^ ^ filler
oh UH ^ ^ filler
when WRB when argM_tmp OK
he PRP he arg0 OK
does VBZ does arg1 OK
the DT the arg1 OK
headlines NNS headlines arg1 OK

but CC ^ ^ false_start
there EX there arg1 OK
's BES 's predicate OK
a DT a arg1 OK
few JJ few arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
i- XX ^ ^ false_start
even RB even argM_adverb OK
he PRP he arg0 OK
does VBZ does arg2 OK
n't RB n't argM_neg OK
say VB say arg2 OK
out RB out argM_mnr OK
loud RB loud argM_mnr OK
that WDT that arg1 OK
you PRP you arg0 OK
have VBP have argM_mod OK
to TO to argM_mod OK
read VB read arg1 OK

a- CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
the DT the arg1 OK
line NN line arg1 OK
gets VBZ gets arg1 OK
moved VBN moved arg1 OK
a DT a argM_extent OK
little JJ little argM_extent OK
bit NN bit argM_extent OK
further RBR further arg2 OK
and CC and arg2 OK
further RBR further arg2 OK
away RB away arg2 OK

i PRP ^ ^ false_start
n- XX ^ ^ false_start
i PRP i arg0 OK
have VBP have predicate OK
five CD five arg1 OK
children NNS children arg1 OK

y- PRP ^ ^ false_start
we PRP ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
we PRP we arg0 OK
draw VBP draw predicate OK
the DT the arg1 OK
line NN line arg1 OK
before IN before argM_tmp OK
that DT that argM_tmp OK
and CC and ^ OK
explain VBP explain predicate OK

we PRP we ^ OK
no UH no ^ OK

that DT that ^ OK
's BES 's ^ OK

they PRP they ^ OK
just RB just ^ OK

we PRP we arg0 OK
have VBP have predicate OK
w- XX ^ ^ false_start
um UH ^ ^ filler
something NN something arg0 OK
on IN on arg0 OK
our PRP our arg0 OK
t. NN t. arg0 OK
v. NN v. arg0 OK
that WDT that arg0 OK
cuts VBZ cuts arg1 OK
that DT that arg2 OK
out RP out arg_particl OK

so UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
really RB really arg2 OK
good JJ good arg2 OK

um UH ^ ^ filler
i PRP i arg0 OK
like VBP like predicate OK
um UH ^ ^ filler
whose WP whose arg2 OK
line NN line arg2 OK
is VBZ is arg1 OK
it PRP it arg1 OK
anyway RB anyway argM_discou OK

i PRP i arg1 OK
just RB just argM_adverb OK
bust VB bust predicate OK
up RP up arg_particl OK

and CC ^ arg1 false_start
it PRP it arg0 OK
just RB just argM_adverb OK
blocks VBZ blocks predicate OK
^ ^ it ^ OK
out RP out argM_dir OK

and CC ^ ^ false_start
you PRP you arg0 OK
can MD can argM_mod OK
still RB still argM_adverb OK
laugh VB laugh predicate OK
at IN at arg2 OK
it PRP it arg2 OK
w- IN ^ ^ repeat
without IN without arg2 OK
the DT the arg2 OK
bad JJ bad arg2 OK
language NN language arg2 OK

uh UH ^ ^ filler
w- XX ^ ^ false_start
w- XX ^ ^ false_start
i PRP ^ ^ filler
guess VBP ^ ^ filler
for IN for ^ OK
us PRP us ^ OK
uh UH ^ ^ filler
having VBG having ^ OK
the DT the ^ OK
same JJ same ^ OK
eh UH ^ ^ filler
life NN life ^ OK
goals NNS goals ^ OK
and CC and ^ OK
uh UH ^ ^ filler
things NNS things ^ OK
that WDT that ^ OK
are VBP are ^ OK
important JJ important ^ OK
to IN to ^ OK
you PRP you ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
and CC ^ ^ false_start
eh UH ^ ^ filler
so UH ^ ^ false_start
those DT ^ ^ false_start
it- XX ^ ^ false_start
uh UH ^ ^ filler
strength NN strength ^ OK
and CC and ^ OK
faith NN faith ^ OK
are VBP are ^ OK
eh UH ^ ^ filler
things NNS things ^ OK
that WDT that ^ OK
guide VB guide ^ OK
us PRP us ^ OK
or CC or ^ OK
uh UH ^ ^ filler
help VB help ^ OK
us PRP us ^ OK
link VB link ^ OK
together RB together ^ OK

w- XX ^ ^ false_start
uh UH ^ ^ filler
one CD one ^ OK
thing NN thing ^ OK
w- PRP ^ ^ repeat
uh UH ^ ^ filler
we PRP we ^ OK
try VBP try ^ OK
uh UH ^ ^ filler
eh UH ^ ^ filler
started VBD started ^ OK
early RB early ^ OK
e- XX was ^ false_start
e- XX ^ ^ false_start
uh UH ^ ^ filler
never RB never ^ OK
to TO to ^ OK
use VB use ^ OK
the DT the ^ OK
word NN word ^ OK
divorce NN divorce ^ OK
uh UH ^ ^ filler
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
once IN once ^ OK
you PRP you ^ OK
say VBP say ^ OK
it PRP it ^ OK
it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK
you PRP you ^ OK
like UH ^ ^ filler
kind RB kind ^ OK
of RB of ^ OK
encourage VB encourage ^ OK
it PRP it ^ OK
to TO to ^ OK
come VBN come ^ OK
up RP up ^ OK
again RB again ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
the DT the ^ OK
mutual JJ mutual ^ OK
uh UH ^ ^ filler
aim NN aim ^ OK
to TO to ^ OK
not RB not ^ OK
just RB just ^ OK
be VB be ^ OK
partners NNS partners ^ OK
but CC but ^ OK
to TO to ^ OK
work VB work ^ OK
on IN on ^ OK
your PRP your ^ OK
relationship NN relationship ^ OK
and CC ^ ^ false_start
uh UH ^ ^ filler
as IN as ^ OK
friends NNS friends ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
as RB ^ ^ repeat
as IN ^ ^ repeat
w- XX ^ ^ false_start
as IN as ^ OK
kids NNS kids ^ OK
come VBP come ^ OK
along RB along ^ OK
we PRP we ^ OK
have VBP have ^ OK
six CD six ^ OK

ri- UH ^ ^ false_start
yeah UH yeah ^ OK

sometimes RB sometimes ^ OK
you PRP you ^ OK
feel VBP feel ^ OK
like IN like ^ OK
well UH ^ ^ false_start
what WP what ^ OK
do VBP do ^ OK
we PRP we ^ OK
do VB do ^ OK
now RB now ^ OK

we PRP ^ ^ false_start
got VBD ^ ^ false_start
we PRP ^ ^ false_start
w- PRP ^ ^ false_start
u- XX ^ ^ false_start
d- XX ^ ^ false_start
we PRP we ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
any DT any ^ OK
kids NNS kids ^ OK
to TO to ^ OK
do VB do ^ OK

eh UH ^ ^ filler
uh UH ^ ^ filler
where WRB where ^ OK
do VBP do ^ OK
you PRP you ^ OK
live VB live ^ OK

in IN ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
uh UH ^ ^ filler
up RB ^ ^ false_start
in IN ^ ^ false_start
n- RB ^ ^ repeat
north RB north ^ OK
from IN ^ ^ repeat
from IN from ^ OK
chattanooga NNP chattanooga ^ OK

uh UH ^ ^ filler
we PRP ^ ^ false_start
ha- VBP ^ ^ false_start
we PRP we ^ OK
bought VBD bought ^ OK
a DT ^ ^ repeat
a DT a ^ OK
seventeen CD seventeen ^ OK
foot NN foot ^ OK
canoe NN canoe ^ OK

so UH so ^ OK
we PRP we ^ OK
can MD can ^ OK
all DT all ^ OK
g- XX ^ ^ false_start
ride VB ride ^ OK
in IN in ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
especially RB especially ^ OK
weight-wise RB weight-wise ^ OK

uh UH ^ ^ filler
we PRP we ^ OK
usually RB usually ^ OK
u- XX ^ ^ false_start
have VBP have ^ OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
the DT the ^ OK
mini JJ mini ^ OK
lounge NN lounge ^ OK
chairs NNS chairs ^ OK
that WDT that ^ OK
we PRP we ^ OK
put VBP put ^ OK
in IN in ^ OK
there RB there ^ OK
or CC or ^ OK
recli- NNS ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
lawn NN lawn ^ OK
chairs NNS chairs ^ OK
they PRP they ^ OK
call VBP call ^ OK
them PRP them ^ OK

oh UH ^ ^ filler
we PRP we ^ OK
sent VBD ^ ^ false_start
eh UH ^ ^ filler
set VBD set ^ OK
a DT a ^ OK
couple NN couple ^ OK
low JJ low ^ OK
rider NN rider ^ OK
types NNS types ^ OK
in IN in ^ OK
the DT the ^ OK
s- XX ^ ^ false_start
uh UH ^ ^ filler
bottom NN bottom ^ OK
of IN of ^ OK
the DT the ^ OK
canoe NN canoe ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
usually RB usually ^ OK
my PRP my ^ OK
wife NN wife ^ OK
eh UH ^ ^ filler
she PRP ^ ^ false_start
's BES ^ ^ false_start
eh UH ^ ^ filler
uh UH ^ ^ filler
she PRP ^ ^ false_start
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
she PRP ^ ^ false_start
's BES 's ^ OK
not RB not ^ OK
a DT a ^ OK
real JJ real ^ OK
water NN water ^ OK
person NN person ^ OK

but CC but ^ OK
she PRP she ^ OK
usually RB usually ^ OK
sits VBZ sits ^ OK
up RB up ^ OK
on IN on ^ OK
the DT the ^ OK
bank NN bank ^ OK
and CC and ^ OK
r- VBZ ^ ^ repeat
reads VBZ reads ^ OK
a DT a ^ OK
book NN book ^ OK
or CC or ^ OK
eh UH ^ ^ filler
something NN something ^ OK
while IN while ^ OK
we PRP we ^ OK
canoe VBP canoe ^ OK
back RB back ^ OK
and CC and ^ OK
forth RB forth ^ OK

and CC ^ ^ false_start
we PRP we ^ OK
usually RB usually ^ OK
go VBP go ^ OK
um UH ^ ^ filler
paddle VB paddle ^ OK
down IN down ^ OK
the DT the ^ OK
river NN river ^ OK

we PRP we ^ OK
live VBP live ^ OK
a DT ^ ^ false_start
m- NN ^ ^ false_start
um UH ^ ^ filler
about RB about ^ OK
a DT a ^ OK
mile NN mile ^ OK
half PDT half ^ OK
a DT a ^ OK
mile NN mile ^ OK
from IN from ^ OK
the DT the ^ OK
tennessee NNP tennessee ^ OK
river NNP river ^ OK

from IN from ^ OK
five CD five ^ OK
to IN to ^ OK
nineteen CD nineteen ^ OK

and CC ^ ^ false_start
we PRP we ^ OK
had VBD had ^ OK
uh UH ^ ^ filler
two CD two ^ OK
miscarriages NNS miscarriages ^ OK
in IN in ^ OK
there RB there ^ OK
also RB also ^ OK

and CC ^ ^ false_start
w- PRP ^ ^ false_start
so UH so ^ OK
we PRP we ^ OK
had VBD had ^ OK
the DT the ^ OK
first JJ first ^ OK
two CD two ^ OK

then RB then ^ OK
we PRP we ^ OK
have VBP have ^ OK
a DT ^ ^ repeat
a DT a ^ OK
seventeen CD seventeen ^ OK
year NN year ^ OK
old JJ old ^ OK
girl NN girl ^ OK

a DT a ^ OK
boy NN boy ^ OK
that WDT that ^ OK
turned VBD turned ^ OK
eleven CD eleven ^ OK
in IN in ^ OK
oc- NNP ^ ^ false_start
no UH ^ ^ false_start
uh UH ^ ^ filler
november NNP november ^ OK

and CC ^ ^ false_start
then RB then ^ OK
a DT a ^ OK
nine CD nine ^ OK
year NN year ^ OK
old JJ old ^ OK
in IN in ^ OK
august NNP august ^ OK

and CC ^ ^ false_start
then RB then ^ OK
we PRP we ^ OK
had VBD had ^ OK
a DT a ^ OK
miscarriage NN miscarriage ^ OK
between IN between ^ OK
her PRP her ^ OK
and CC and ^ OK
the DT the ^ OK
five CD five ^ OK
year NN year ^ OK
old JJ old ^ OK
eh UH ^ ^ filler
that WDT that ^ OK
turned VBD turned ^ OK
five CD five ^ OK
in IN in ^ OK
au- NNP ^ ^ false_start
uh UH ^ ^ filler
april NNP april ^ OK

w- PRP ^ ^ false_start
so UH so ^ OK
we PRP ^ ^ false_start
uh UH ^ ^ filler
like UH ^ ^ filler
we PRP ^ ^ false_start
uh UH ^ ^ filler
when WRB when ^ OK
we PRP we ^ OK
can MD can ^ OK
a- XX ^ ^ false_start
m- JJS ^ ^ repeat
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
time NN time ^ OK
we PRP we ^ OK
eh UH ^ ^ filler
scrunch VB scrunch ^ OK
in RP in ^ OK
instead IN instead ^ OK
of IN of ^ OK
going VBG going ^ OK
out RB out ^ OK
to TO to ^ OK
eat VB eat ^ OK
on IN on ^ OK
friday NNP friday ^ OK
nights NNS nights ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

and CC ^ ^ false_start
we PRP ^ ^ false_start
just RB ^ ^ false_start
make VBP ^ ^ false_start
a DT ^ ^ false_start
w- XX ^ ^ false_start
a DT ^ ^ false_start
w- XX ^ ^ false_start
a DT ^ ^ false_start
h- XX ^ ^ false_start
eh UH ^ ^ filler
bread NN bread ^ OK
recipe NN recipe ^ OK
makes VBZ makes ^ OK
two CD two ^ OK
loaves NNS loaves ^ OK
of IN of ^ OK
bread NN bread ^ OK

but CC but ^ OK
we PRP ^ ^ repeat
uh UH ^ ^ filler
we PRP we ^ OK
make VBP make ^ OK
homemade JJ homemade ^ OK
pizza NN pizza ^ OK
just RB just ^ OK
about RB about ^ OK
every DT every ^ OK
friday NNP friday ^ OK
night NN night ^ OK

and CC ^ ^ false_start
my PRP my arg1 OK
father NN father arg1 OK
died VBD died predicate OK
what UH ^ ^ filler
about RB about argM_tmp OK
two CD two argM_tmp OK
years NNS years argM_tmp OK
ago RB ago argM_tmp OK

i PRP i arg0 OK
have VBP have predicate OK
my PRP my arg1 OK
sister NN sister arg1 OK
who WP who arg1 OK
's BES 's predicate OK
in IN in arg2 OK
california NNP california arg2 OK

for IN ^ ^ repeat
for IN for argM_tmp OK
about RB about argM_tmp OK
forty CD forty argM_tmp OK
years NNS years argM_tmp OK
she PRP she arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
talk VB talk predicate OK
to IN to arg2 OK
me PRP me arg2 OK

so RB ^ ^ false_start
now RB now argM_tmp OK
she PRP she arg0 OK
talks VBZ talks predicate OK
to IN to arg2 OK
me PRP me arg2 OK

like IN ^ ^ repeat
w- XX ^ ^ false_start
like IN ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
old JJ old arg2 OK
home NN home arg2 OK
week NN week arg2 OK

sh- PRP ^ ^ false_start
yeah UH yeah ^ OK

she PRP she arg1 OK
's BES 's predicate OK
in IN in arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
biggest JJS biggest arg2 OK
dust NN dust arg2 OK
bowl NN bowl arg2 OK
in IN in arg2 OK
the DT the arg2 OK
west NNP west arg2 OK
bakersfield NNP bakersfield arg2 OK

so RB ^ ^ false_start
then RB then ^ OK
you PRP you ^ OK
're VBP 're ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler

me PRP me arg1 OK
and CC and arg1 OK
my PRP my arg1 OK
mother NN mother arg1 OK
was VBD were predicate false_start
okay JJ okay arg2 false_start
when WRB ^ ^ false_start
an- XX ^ ^ false_start
before IN before argM_tmp OK
she PRP she arg1 OK
died VBD died argM_tmp OK

they PRP ^ ^ repeat
they PRP they arg0 OK
uh UH ^ ^ filler
kind RB ^ ^ false_start
of RB ^ ^ false_start
have VBP have predicate OK
a DT a arg1 OK
mate- JJ ^ ^ repeat
maternali- JJ ^ ^ repeat
um UH ^ ^ filler
m- JJ ^ ^ repeat
maternal JJ maternal arg1 OK
instinct NN instinct arg1 OK

l- IN ^ ^ false_start
oh UH ^ ^ filler
like IN ^ ^ filler
the DT the ^ OK
mo- NN ^ ^ repeat
mother NN mother ^ OK
bird NN bird ^ OK
who WP who ^ OK
took VBD took ^ OK
care NN care ^ OK
of IN of ^ OK
her PRP her ^ OK
birdlets NNS birdlets ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

well UH ^ ^ filler
see UH ^ ^ filler
when WRB ^ ^ repeat
when WRB when arg0 OK
you PRP ^ ^ repeat
they PRP they arg0 OK
g- VBP ^ ^ repeat
get VBP get arg0 OK
older JJR older arg0 OK
and ADVP-TMP- 1 and arg0 OK
they CC they arg0 OK
become PRP become arg0 OK
grandparents VBP grandparents arg0 OK
and NNS ^ ^ false_start
then ADVP-TMP- 1 ^ ^ repeat
the CC ^ ^ repeat
then RB ^ ^ false_start
the DT ^ ^ repeat
the RB the arg1 OK
game DT game arg1 OK
changes DT changes predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VB ^ ^ filler
as IN as ^ OK
you PRP you ^ OK
well RB well ^ OK
know VBP know ^ OK

the DT ^ ^ repeat
the DT the arg1 OK
sho- XX ^ ^ repeat
shoe NN shoe arg1 OK
's BES 's predicate OK
on IN on arg2 OK
the DT the arg2 OK
other JJ other arg2 OK
foot NN foot arg2 OK
now RB ^ ^ repeat
now RB now argM_tmp OK

now UH ^ ^ false_start
if IN ^ ^ repeat
if IN ^ ^ false_start
you PRP ^ ^ false_start
became VBD ^ ^ false_start
or UH ^ ^ false_start
when WRB when ^ OK
y- XX ^ ^ repeat
your PRP your arg0 OK
kid NN kid arg0 OK
has VBZ has predicate OK
a DT a arg1 OK
kid NN kid arg1 OK
then ADVP-TMP- 1 then ^ OK
you RB you arg1 OK
become PRP become predicate OK
a VBP a arg2 OK
grandparent DT grandparent arg2 OK

well UH ^ ^ filler
that- PRP ^ ^ repeat
that DT that arg2 OK
's BES 's predicate OK
where WRB where arg2 OK
the DT the arg1 OK
family NN family arg1 OK
thing NN thing arg1 OK
comes VBZ comes arg2 OK
in RB in arg_particl OK

you PRP ^ ^ filler
know VBP ^ ^ filler
because UH ^ ^ false_start
how WRB ^ ^ false_start
what WP what arg1 OK
does VBZ does ^ OK
family NN family arg1 OK
mean VB mean predicate OK
to IN to ^ OK
you PRP you arg0 OK

and CC ^ arg1 false_start
they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they arg0 OK
can MD ^ ^ repeat
can MD can ^ OK
kick VB ^ ^ repeat
kick VB kick predicate OK
in RP in ^ OK
their PRP their arg1 OK
two CD two arg1 OK
bits NNS bits arg1 OK
worth NN worth arg1 OK
and CC and ^ OK
hopefully RB hopefully ^ OK
help VB help predicate OK
out RP out ^ OK
when WRB ^ ^ repeat
when WRB when arg1 OK
you PRP ^ ^ repeat
you PRP you arg0 OK
're VBP ^ ^ repeat
're VBP 're arg1 OK
moving VBG moving arg1 OK

whether IN ^ ^ repeat
whether IN whether ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
aw JJ ^ ^ repeat
aware JJ aware ^ OK
of IN of ^ OK
it PRP it ^ OK
or CC or ^ OK
not RB not ^ OK

from IN from ^ OK
that DT that ^ OK
point NN point ^ OK
of IN of ^ OK
view NN view ^ OK

actually RB actually ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP ^ ^ repeat
've VBP 've ^ OK
ne- RB ^ ^ repeat
never RB never ^ OK
met VBN met predicate OK
my PRP my arg1 OK
sister NN sister arg1 OK
's POS 's arg1 OK
kids NNS kids arg1 OK
except IN except ^ OK
one CD one ^ OK

so RB ^ ^ false_start
ver- RB ^ ^ repeat
very RB very ^ OK
soon RB soon ^ OK
hopefully RB hopefully ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
c- MD ^ ^ repeat
can MD can ^ OK

we PRP ^ ^ repeat
we PRP we arg0 OK
have VBP have predicate OK
something NN something arg1 OK
coming VBG coming arg1 OK

without IN without ^ OK
getting VBG getting ^ OK
too RB too ^ OK
uh UH ^ ^ filler
in- IN ^ ^ repeat
into IN into ^ OK
it PRP it ^ OK

w- XX ^ ^ repeat
w- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX there arg1 OK
's BES 's predicate OK
an DT an arg2 OK
old JJ old arg2 OK
saying NN saying arg2 OK

where WRB where ^ OK
there EX there arg1 OK
's BES 's predicate OK
a DT a arg2 OK
will NN will arg2 OK
there ADVP-LOC- 1 there arg1 OK
's EX 's predicate OK
relatives BES relatives arg2 OK
l- NNS ^ ^ false_start
like IN like arg2 OK
vultures IN vultures arg2 OK
on NNS on argM_loc OK
the IN the argM_loc OK
back DT back argM_loc OK
fence JJ fence argM_loc OK

and CC ^ ^ false_start
i PRP i arg0 OK
may MD may ^ OK
ha- XX ^ ^ false_start
in IN in ^ OK
fact NN fact ^ OK
take VB take predicate OK
a DT a arg1 OK
trip NN trip arg1 OK
out IN out argM_loc OK
there RB there argM_loc OK
somehow RB somehow ^ OK

whether IN whether arg1 OK
they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
see VB see arg1 OK
me PRP me arg1 OK
or CC or ^ OK
not RB not ^ OK
not RB I ^ false_start
not RB 'll ^ false_start
just RB just ^ OK
show VB show predicate OK
up RP up arg_particl OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
kind RB ^ ^ repeat
of RB ^ ^ repeat
we- VBD ^ ^ repeat
kind RB ^ ^ false_start
of RB ^ ^ false_start
welcome VBP welcome predicate OK
them PRP them arg1 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD ^ ^ repeat
'm VBP 'm predicate OK
not RB ^ ^ repeat
not RB not arg2 OK
like IN like arg2 OK
the DT the arg2 OK
vulture NN vulture arg2 OK
on IN on argM_loc OK
the DT the argM_loc OK
back JJ back argM_loc OK
fence NN fence argM_loc OK

they PRP they ^ OK

you UNK ^ ^ filler
know UNK ^ ^ filler
yeah UNK ^ ^ filler
like UNK ^ ^ filler
with UNK with ^ OK
the UNK the ^ OK
greedy UNK greedy ^ OK
ones UNK ones ^ OK
is- UNK ^ ^ false_start

s- JJ ^ ^ repeat
same JJ same ^ OK
here RB here ^ OK

th- DT ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
my PRP my arg2 OK
preference NN preference arg2 OK

a- IN ^ ^ repeat
although IN although argM_discou OK
i PRP ^ ^ false_start
've VBP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
really RB really argM_adverb false_start
up IN up arg2 OK
for IN for arg2 OK
ah UH ^ ^ filler
about RB about arg2 OK
uh UH ^ ^ filler
anything NN anything arg2 OK

bu- RB ^ ^ repeat
basically RB basically argM_adverb OK
tha- DT ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
right JJ right arg2 OK

uh UH ^ ^ filler
n- XX ^ ^ false_start
you PRP you ^ OK
know VBP know ^ OK

uh UH ^ ^ filler
e- XX ^ ^ false_start
oh UH oh ^ OK

sa- JJ ^ ^ repeat
same JJ same ^ OK
here RB here ^ OK

y- PRP ^ ^ repeat
you PRP you ^ OK
know VBP know ^ OK

uh UH ^ ^ filler
yeah UH ^ ^ filler
uh UH ^ ^ filler
well UH ^ ^ filler
i- IN ^ ^ repeat
i- IN ^ ^ repeat
if IN if argM_adverb OK
it PRP it arg1 OK
's BES 's ^ OK
prepared VBN prepared predicate OK
correctly RB correctly argM_adverb OK
i- PRP ^ ^ repeat
it PRP it arg1 OK
should MD should argM_mod OK
n't RB n't argM_neg OK
be VB be predicate OK
overbearing VBG overbearing arg2 OK

i- PRP ^ ^ repeat
it PRP it arg0 OK
does VBZ does predicate OK

but CC but argM_discou OK
um UH ^ ^ filler
i- PRP ^ ^ false_start
it PRP ^ ^ false_start
again RB ^ ^ false_start
n- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i- IN ^ ^ repeat
if IN if argM_adverb OK
it PRP it arg1 OK
's BES 's ^ OK
prepared VBN prepared predicate OK
correctly RB correctly argM_adverb OK
uh UH ^ ^ filler
th- DT ^ ^ repeat
the DT the arg1 OK
garlic NN garlic arg1 OK
should MD should argM_mod OK
not RB not argM_neg OK
be VB be arg2 OK
know VBP ^ ^ filler
strong JJ strong arg2 OK
n- XX ^ ^ false_start
you PRP ^ ^ filler

i- PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
should MD should argM_mod OK
just RB just argM_adverb OK
be VB be predicate OK
a DT a arg2 OK
uh UH ^ ^ filler
mild JJ mild arg2 OK
uh UH ^ ^ filler
background NN background arg2 OK
ki- NN ^ ^ repeat
kind NN ^ ^ false_start
of IN ^ ^ false_start
a DT ^ ^ false_start
taste NN taste arg2 OK

i- XX ^ ^ false_start
exactly UH exactly ^ OK

y- PRP ^ ^ repeat
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
a DT a ^ OK
little JJ little ^ OK
dash NN dash ^ OK
more JJR more ^ OK
or CC or ^ OK
less JJR less ^ OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

um UH ^ ^ filler
b- VBG ^ ^ repeat
beings VBG being predicate false_start
tha- IN ^ ^ repeat
that IN that arg1 OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
a DT a arg2 OK
non JJ non arg2 OK
drinker NN drinker arg2 OK
i PRP i arg0 OK
ah UH ^ ^ filler
ty- RB ^ ^ repeat
typically RB typically argM_adverb false_start
do VBP do ^ OK
n't RB n't argM_neg OK
drink VB drink predicate OK
wine NN wine arg1 OK

uh UH ^ ^ filler
it PRP ^ ^ false_start
uh UH ^ ^ filler
only RB only ^ OK
on IN on ^ OK
very RB very ^ OK
rare JJ rare ^ OK
occasions NNS occasions ^ OK

n- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i- IN ^ ^ repeat
if IN if argM_adverb OK
i PRP i arg0 OK
eat VBP eat predicate OK
dinner NN dinner arg1 OK
at IN ^ ^ false_start
e- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
ah UH ^ ^ filler
a- IN ^ ^ repeat
at IN at argM_loc OK
a DT a argM_loc OK
wedding NN wedding argM_loc OK
or CC ^ ^ false_start
uh UH ^ ^ filler
what WP ^ ^ false_start
have VBP ^ ^ false_start
you PRP ^ ^ false_start
will NP-1 will argM_mod OK
i MD i arg0 OK
have PRP have predicate OK
a VBP a arg1 OK
uh DT ^ ^ filler
glass UH glass arg1 OK
of NN of arg1 OK
wine IN wine arg1 OK
or NN or arg1 OK
champagne CC champagne arg1 OK

e- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but argM_discou OK
t- RB ^ ^ repeat
typically RB typically argM_adverb OK
um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
a DT a arg2 OK
wine NN wine arg2 OK
person NN person arg2 OK

ah UH ^ ^ filler
for IN ^ ^ repeat
for IN for ^ OK
ten CD ten ^ OK
minutes NNS minutes ^ OK

ah UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
from IN from arg2 OK
ah UH ^ ^ filler
pittsburgh NNP pittsburgh arg2 OK
pennsylvania NNP pennsylvania arg2 OK

but CC ^ ^ false_start
basically RB ^ ^ false_start
uh UH ^ ^ filler
p- JJ ^ ^ repeat
penn NNP penn arg1 OK
state NNP state ^ OK
state NNP 's arg1 false_start
the DT ^ ^ repeat
the DT ^ arg1 OK
main JJ main arg1 OK
campus NN campus arg1 OK
is VBZ is predicate OK
roughly RB ^ ^ repeat
mm UH ^ ^ filler
ah UH ^ ^ filler
uh UH ^ ^ filler
we- XX ^ ^ false_start
oh UH ^ ^ filler
ro- XX ^ ^ false_start
roughly RB roughly arg2 OK
about RB about arg2 OK
a DT a arg2 OK
hundred CD hundred arg2 OK
miles NNS miles arg2 OK
away RB away arg2 OK
from IN from arg2 OK
me PRP me arg2 OK

s- XX ^ ^ repeat
so UH ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
in IN in arg2 OK
the DT the arg2 OK
ball NN ball arg2 OK
park NN park arg2 OK

e- XX ^ ^ false_start
oh UH oh ^ OK

th- DT ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
great JJ great arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP have predicate OK
some DT some arg1 OK
family NN family arg1 OK
down IN down argM_loc OK
in IN in argM_loc OK
houston NNP houston argM_loc OK

and CC ^ ^ false_start
uh UH ^ ^ filler
a- RB ^ ^ repeat
also RB also argM_discou OK
i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
couple NN couple arg1 OK
relatives NNS relatives arg1 OK
in IN in argM_loc OK
stafford NNP stafford argM_loc OK
texas NNP texas argM_loc OK
as RB ^ ^ false_start
well RB ^ ^ false_start

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
down IN down arg2 OK
there RB there arg2 OK
eh UH ^ ^ filler
a DT a arg2 OK
couple NN couple arg2 OK
times NNS times arg2 OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
like VB like predicate OK
texas NNP texas arg1 OK

ho- RB ^ ^ false_start
however RB however argM_discou OK
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
sure JJ sure arg2 OK
if IN if argM_adverb OK
i PRP i arg0 OK
would MD would argM_mod OK
want VB want arg2 OK
i PRP ^ ^ false_start
've VBP ^ ^ false_start
ne- RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
to TO to arg1 repeat
to TO ^ ^ OK
live VB ^ arg1 false_start
do VB ^ ^ false_start
that DT live predicate false_start
there RB ^ argM_loc false_start
that DT there ^ false_start

y- XX ^ ^ false_start
oh UH oh ^ OK

a- CC ^ ^ repeat
and CC ^ ^ false_start
th- DT ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
about RB about arg2 OK
it PRP it arg2 OK

hot JJ hot ^ OK
and CC and ^ OK
muggy JJ muggy ^ OK
y- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
v- RB ^ ^ repeat
very RB very ^ OK
humid JJ humid ^ OK
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler

um UH um ^ OK
eh UH eh ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
uh UH ^ ^ filler
making VBG ^ ^ false_start
fun NN ^ ^ false_start
of IN ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i- IN ^ ^ repeat
if IN ^ ^ repeat
if IN if ^ OK
i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
say VB say ^ OK
something NN something ^ OK
to IN to ^ OK
the DT the ^ OK
person NN person ^ OK
's POS 's ^ OK
face NN face ^ OK
then RB then ^ OK
i PRP i ^ OK
might MD might ^ OK
not RB not ^ OK
say VB say ^ OK
it PRP it ^ OK

but CC but ^ OK
even RB even ^ OK
as IN as ^ OK
i PRP i ^ OK
was VBD was ^ OK
saying VBG saying ^ OK
that DT that ^ OK
i PRP i ^ OK
was VBD was ^ OK
thinking VBG thinking ^ OK
that IN that ^ OK
i PRP i ^ OK
uh UH ^ ^ filler
very RB very ^ OK
often RB often ^ OK
laugh VBD laugh ^ OK
at IN at ^ OK
comedians NNS comedians ^ OK
that WDT that ^ OK
are VBP are ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
mocking VBG mocking ^ OK
the DT the ^ OK
hell NN hell ^ OK
out IN out ^ OK
of IN of ^ OK
uh UH ^ ^ filler
um UH ^ ^ filler
politicians NNS politicians ^ OK
and CC and ^ OK
things NNS things ^ OK
like IN like ^ OK
that DT that ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
i PRP i ^ OK
were VBD were ^ OK
to TO to ^ OK
say VB say ^ OK
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
things NNS things ^ OK
that WDT that ^ OK
have VBP have ^ OK
been VBN been ^ OK
said VBD said ^ OK
about IN about ^ OK
george NNP george ^ OK
bush NNP bush ^ OK
to IN to ^ OK
his PRP his ^ OK
face NN face ^ OK
he PRP he ^ OK
'd MD 'd ^ OK
probably RB probably ^ OK
be VB be ^ OK
quite RB quite ^ OK
hurt JJ hurt ^ OK

well UH ^ ^ false_start
when WRB when ^ OK
you PRP you ^ OK
were VBD were ^ OK
saying VBG saying ^ OK
that DT that ^ OK
i ADVP-TMP- 1 i ^ OK
was PRP was ^ OK
trying VBD trying ^ OK
to VBG to ^ OK
think TO think ^ OK
th- VB that ^ false_start
because XX because ^ OK
i IN i ^ OK
agree PRP agree ^ OK
with VBP with ^ OK
you IN you ^ OK
that PRP that ^ OK
like IN ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
um VBP ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
the VBP the ^ OK
common DT common ^ OK
phrase JJ phrase ^ OK
is NN is ^ OK
there VBZ there ^ OK
's EX 's ^ OK
a BES a ^ OK
lady DT lady ^ OK
present NN present ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
is VBZ is ^ OK
acceptable JJ acceptable ^ OK
within IN within ^ OK
men NNS men ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
like UH ^ ^ filler
in IN in ^ OK
a DT a ^ OK
sort NN sort ^ OK
of IN of ^ OK
trivial JJ trivial ^ OK
thing NN thing ^ OK
eh UH ^ ^ filler
w- NNS ^ ^ repeat
women NNS women ^ OK
tend VBP tend ^ OK
to TO to ^ OK
mock VB mock ^ OK
men NNS men ^ OK
out RB out ^ OK
a DT a ^ OK
lot NN lot ^ OK

but CC but ^ OK
that DT that ^ OK
's BES 's ^ OK
not RB not ^ OK
really RB really ^ OK
in IN in ^ OK
poor JJ poor ^ OK
taste NN taste ^ OK

it PRP ^ ^ repeat
's SBAR-1 ^ ^ repeat
it NNS it ^ OK
interesting BES ^ ^ repeat
seems PRP seems ^ OK
that JJ ^ ^ repeat
like VBZ like ^ OK
the IN ^ ^ repeat
the IN the ^ OK
patterns DT ^ ^ repeat
patterns DT patterns ^ OK
of NNS of ^ OK
interaction IN interaction ^ OK
with NN with ^ OK
women IN women ^ OK
that NNS that ^ OK
um WDT ^ ^ filler
like UH ^ ^ filler
do UH do ^ OK
n't VBP n't ^ OK
take RB take ^ OK
place VB place ^ OK
with NN with ^ OK
men IN men ^ OK
like NNS like ^ OK
talking IN talking ^ OK
about VBG about ^ OK
clothes IN clothes ^ OK
talking NNS talking ^ OK
about VBG about ^ OK
weight IN weight ^ OK
talking NN talking ^ OK
about VBG about ^ OK
things IN things ^ OK
like NNS like ^ OK
that IN that ^ OK
they DT they ^ OK
're PRP 're ^ OK
not VBP not ^ OK
in RB in ^ OK
poor IN poor ^ OK
taste JJ taste ^ OK
with NN with ^ OK
men IN men ^ OK

like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
an DT an ^ OK
attractive JJ attractive ^ OK
man NN man ^ OK
would MD would ^ OK
have VB have ^ OK
nice JJ nice ^ OK
eyes NNS eyes ^ OK
and CC and ^ OK
nice JJ a ^ false_start
nice JJ nice ^ OK
smile NN smile ^ OK

yet RB yet ^ OK
an DT an ^ OK
attractive JJ attractive ^ OK
women NNS woman ^ false_start
would MD would ^ OK
have VB have ^ OK
nice JJ nice ^ OK
well UH well ^ OK
not RB not ^ OK
eyes NNS eyes ^ OK
and CC and ^ OK
not RB not ^ OK
smile NN smile ^ OK

like UH ^ ^ filler
say UH say predicate OK
your PRP your arg0 OK
brother NN brother arg0 OK
kills VBZ kills arg1 OK
somebody NN somebody arg1 OK
in IN in arg2 OK
a DT a arg1 OK
manner NN manner arg1 OK
that WDT that arg1 OK
's BES 's arg2 OK
completely RB completely arg2 OK
not RB not arg2 OK
his PRP his arg2 OK
fault NN fault arg2 OK
but CC but argM_discou OK
will MD will argM_mod OK
appear VB appear arg2 OK
as IN as arg1 OK
if IN if argM_adverb OK
it PRP it arg1 OK
were VBD were arg1 OK
his PRP his arg2 OK
fault NN fault arg2 OK
in IN in arg2 OK
the DT the arg2 OK
court NN court arg2 OK
of IN of arg2 OK
law NN law arg2 OK

i PRP ^ ^ repeat
'm VBP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
trying VBG ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg1 OK
'd MD 'd argM_mod OK
be VB be arg1 OK
easier JJR easier arg2 OK
to TO to arg2 OK
deal VB deal arg2 OK
with IN ^ ^ repeat
like UH ^ ^ filler
with IN with arg2 OK
as NP as argM_recipr OK
an IN an argM_recipr OK
example DT example argM_recipr OK

what WP ^ ^ repeat
what WP what arg2 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT a arg1 OK
tough JJ tough arg1 OK
decision NN decision arg1 OK

what WP what arg1 OK
like UH ^ ^ filler
because IN ^ ^ false_start
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
on IN ^ ^ false_start
the DT ^ ^ false_start
one CD ^ ^ false_start
hand NN ^ ^ false_start
would MD would argM_mod OK
you PRP you arg0 OK
be VB be ^ OK
doing VBG doing predicate OK
by IN ^ arg3 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
well UH by ^ filler
telling VBG telling arg3 false_start
the DT the arg1 false_start
truth NN truth arg1 false_start

but CC but argM_discou OK
like UH ^ ^ filler
if IN if argM_adverb OK
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
n't RB _ARG_ predicate false_start
you VP ^ ^ filler
know PRP ^ ^ filler
like VBP ^ ^ filler
like UH ^ ^ filler
the UH the arg0 OK
dead DT dead arg0 OK
person JJ person arg0 OK
's NN 's arg0 OK
family POS family arg0 OK
wants NN wants predicate OK
to VBZ to arg1 OK
know TO know arg1 OK
what VB what arg1 OK
happened WP happened arg1 OK
or VBD or arg1 OK
who CC who arg1 OK
's WP 's arg1 OK
responsible BES responsible arg2 OK

or CC ^ ^ false_start
what WP what ^ false_start
if IN if argM_adverb false_start
what WP ^ ^ false_start
if IN ^ ^ false_start
your PRP ^ ^ false_start
brother NN ^ ^ false_start
they PRP they arg0 OK
ask VBP ask predicate OK
did VBD did arg1 OK
your PRP ^ ^ repeat
like UH ^ ^ filler
your PRP your arg0 false_start
brother NN ^ ^ repeat
brother NN brother arg0 false_start
commit VB commit arg1 OK
murder NN murder arg1 OK

it PRP ^ ^ repeat
it PRP it arg0 OK
ma- VBZ ^ ^ repeat
makes VBZ ^ ^ repeat
makes VBZ makes predicate OK
me PRP me arg0 OK
think VB think predicate OK
though RB though argM_discou OK
just RB ^ ^ false_start
because RB ^ ^ false_start
yeah UH ^ ^ false_start

well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
ah UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
unbiased JJ unbiased arg2 OK
honesty NN honesty arg2 OK

but CC but argM_discou OK
then RB then argM_discou OK
again RB again argM_discou OK
i PRP ^ ^ repeat
i PRP ^ ^ false_start
ju- RB ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm predicate OK
really RB really arg2 OK
wary JJ wary arg2 OK
of IN of arg2 OK
talking VBG talking arg2 OK
about IN about arg1 OK
how WRB how arg1 OK
morally RB morally arg1 OK
upright RB upright arg1 OK
i PRP i arg1 OK
'd MD 'd argM_mod OK
be VB be argM_mod OK
able JJ able argM_mod OK
to TO to argM_mod OK
be VB be arg1 OK
in IN in arg2 OK
a DT a arg2 OK
tough JJ tough arg2 OK
situation NN situation arg2 OK

like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
'd MD 'd argM_mod OK
like VB like predicate OK
to TO to arg1 OK
think VB think arg1 OK
i PRP i arg0 OK
'd MD 'd argM_mod OK
do VB do arg1 OK
the DT the arg1 OK
right JJ right arg1 OK
thing NN thing arg1 OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

or CC ^ ^ false_start
but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
p- XX ^ ^ false_start
thinking VBG thinking arg1 OK
about IN about arg1 OK
it PRP it arg1 OK
sitting VBG sitting arg1 OK
around RB around arg1 OK
on IN on arg1 OK
the DT the arg1 OK
couch NN couch arg1 OK
is VBZ is predicate OK
one CD one arg2 OK
thing NN thing arg2 OK

but CC ^ ^ false_start
like UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
because UH because ^ OK
well UH ^ ^ filler
once IN ^ ^ false_start
you PRP ^ ^ false_start
get VBP ^ ^ false_start
into IN ^ ^ false_start
like UH ^ ^ filler
what WP what ^ OK
if IN if ^ OK
you PRP you ^ OK
start VBP start ^ OK
thinking VBG thinking ^ OK
like UH ^ ^ filler

i PRP i arg0 OK
know VBP know predicate OK
he PRP ^ ^ false_start
'll MD ^ ^ false_start
like UH ^ ^ filler
he PRP he arg1 OK
's BES 's arg1 OK
smart JJ smart arg2 OK

or CC ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i- PRP ^ ^ repeat
it PRP it arg1 OK
was VBD was predicate OK
wrong JJ wrong arg2 OK

but CC ^ ^ false_start
like UH ^ ^ filler
how WRB how ^ OK
is VBZ is ^ OK
my PRP my arg0 OK
brother NN brother arg0 OK
going VBG going arg0 OK
to IN to arg0 OK
jail NN jail arg0 OK
and CC and arg0 OK
me PRP me arg0 OK
betraying VBG betraying arg0 OK
my PRP my arg0 OK
own JJ own arg0 OK
brother NN brother arg0 OK
and CC and arg0 OK
living VBG living arg0 OK
with IN with arg0 OK
that DT that arg0 OK
and CC ^ ^ false_start
like UH ^ ^ filler
how WRB ^ ^ false_start
is VBZ ^ ^ false_start
that DT ^ ^ false_start
going VBG going argM_mod OK
to TO to argM_mod OK
make VB make predicate OK
it PRP it arg1 OK
better RBR better arg2 OK

your PRP ^ ^ false_start
f- NN ^ ^ false_start
the DT the ^ OK
whole JJ whole ^ OK
family NN family ^ OK

i PRP i arg1 OK
guess VBP guess predicate OK
you PRP you arg0 OK
have VBP have argM_mod OK
to TO to argM_mod OK
examine VB examine ^ OK
like UH ^ predicate filler
examine VB _ARG_ arg1 false_start

i PRP i arg0 OK
guess VBP guess predicate OK
you PRP ^ ^ false_start
'd MD ^ ^ false_start
have VB ^ ^ false_start
this DT ^ ^ false_start
this DT ^ ^ repeat
that DT ^ ^ repeat
this DT this arg1 OK
is VBZ ^ ^ repeat
's BES ^ ^ repeat
is VBZ is arg1 OK
a DT ^ ^ repeat
like UH ^ ^ filler
a DT a argM_tmp OK
time NN time argM_tmp OK
when WRB when argM_tmp OK
you PRP you arg0 OK
really RB really argM_adverb OK
examined VBD examine arg2 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how arg1 OK
willing JJ willing arg2 OK
a DT a arg2 OK
member NN member arg2 OK
you PP-3 you arg1 OK
are PRP are arg1 OK
of VBP of arg2 OK
the IN the arg2 OK
society DT society arg2 OK
in NN in argM_mnr OK
a- IN ^ ^ repeat
almost RB almost argM_mnr OK
a RB a argM_mnr OK
lockian DT lockian argM_mnr OK
sense JJ sense argM_mnr OK

are VBP are ^ OK
you PRP you arg0 OK
going VBG going argM_mod OK
to TO to argM_mod OK
sack VB ^ ^ false_start
it PRP ^ ^ false_start
up RP ^ ^ false_start
and CC ^ ^ false_start
accept VB accept predicate OK
everything NN everything arg1 OK
that WDT that arg1 OK
goes VBZ goes arg1 OK
with IN with arg2 OK
it PRP it arg2 OK
now RB now argM_tmp false_start

always RB always ^ OK

so UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
police NN police ^ OK
presence NN presence ^ OK

and CC ^ ^ false_start
ah UH ^ ^ filler
do VBP do ^ OK
you PRP you ^ OK
think VB think ^ OK
they PRP they ^ OK
could MD could ^ OK
do VB do ^ OK
anything NN anything ^ OK
else RB else ^ OK
to TO to ^ OK
help VB help ^ OK
cut VB cut ^ OK
down RP down ^ OK
on IN on ^ OK
crime NN crime ^ OK

they PRP they ^ OK

i PRP i ^ OK
hope VBP hope ^ OK
not RB not ^ OK

number NN number ^ OK
ten CD ten ^ OK
's BES 's ^ OK
the DT the ^ OK
one CD one ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
they PRP ^ ^ false_start
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
see VB see ^ OK
when WRB when ^ OK
they PRP they ^ OK
mailed VBD mailed ^ OK
it PRP it ^ OK

i PRP i ^ OK
know VBP know ^ OK
number NN number ^ OK
ten CD ten ^ OK
is VBZ is ^ OK
worth JJ worth ^ OK
thirty CD thirty ^ OK
dollars NNS dollars ^ OK

then RB then ^ OK
it PRP it ^ OK
'll MD 'll ^ OK
be VB be ^ OK
worth JJ worth ^ OK
it PRP it ^ OK

so UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
um UH ^ ^ filler
going VBG going ^ OK
on RB on ^ OK
with IN with ^ OK
the DT the ^ OK
topic NN topic ^ OK
here RB here ^ OK
town NN ^ ^ repeat
town NN town ^ OK
watch NN ^ ^ repeat
watch NN watch ^ OK
would MD would ^ OK
be VB be ^ OK
a DT ^ ^ repeat
a DT a ^ OK
good JJ good ^ OK
vehicle NN vehicle ^ OK
f- XX ^ ^ false_start
to TO to ^ OK
bring VB bring ^ OK
together RB together ^ OK
people NNS people ^ OK
in IN in ^ OK
the DT the ^ OK
community NN community ^ OK
as RB as ^ OK
well RB well ^ OK
as IN as ^ OK
a DT a ^ OK
safety NN safety ^ OK
precaution NN precaution ^ OK

eh UH ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
would MD would ^ OK
make VB make ^ OK
people NNS people ^ OK
feel VB feel ^ OK
a DT a ^ OK
lot RB lot ^ OK
safer JJR safer ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
feels VBZ feels ^ OK
as IN as ^ OK
though IN though ^ OK
you PRP you ^ OK
got VBD got ^ OK
a DT ^ ^ repeat
a DT a ^ OK
piece NN piece ^ OK
of IN of ^ OK
the DT the ^ OK
rock NN rock ^ OK
there RB there ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
then RB then ^ OK
in IN in ^ OK
turn NN turn ^ OK
you PRP ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
we PRP ^ ^ false_start
would MD ^ ^ false_start
have VB ^ ^ false_start
a DT ^ ^ false_start
du- NN ^ ^ false_start
if IN if ^ OK
we PRP we ^ OK
had VBD had ^ OK
a DT a ^ OK
um UH ^ ^ filler

so UH ^ ^ filler
um UH ^ ^ filler
if IN if ^ OK
they PRP they ^ OK
had VBD had ^ OK
then VP then ^ OK
i RB i ^ OK
would PRP would ^ OK
feel MD feel ^ OK
a VB a ^ OK
little DT little ^ OK
more RB more ^ OK
safer RBR safer ^ OK
with JJR with ^ OK
a IN a ^ OK
town DT town ^ OK
watch NN watch ^ OK
in NN in ^ OK
addition IN addition ^ OK
to NN to ^ OK
the IN ^ ^ repeat
um DT ^ ^ filler
the UH the ^ OK
strong DT strong ^ OK
police JJ police ^ OK
presence NN presence ^ OK
that NN that ^ OK
we WDT we ^ OK
have PRP have ^ OK
here VBP here ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
um UH ^ ^ filler
we PRP we ^ OK
live VBP live ^ OK
on IN on ^ OK
campus NN campus ^ OK

the DT the ^ OK
little JJ little ^ OK
vandalism NN vandalism ^ OK
and CC and ^ OK

and CC ^ ^ false_start
um UH um ^ OK

a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
times NNS times ^ OK
um UH ^ ^ filler
the DT the ^ OK
littering NN littering ^ OK
and CC ^ ^ false_start
things NNS ^ ^ false_start
is VBZ is ^ OK
n't RB n't ^ OK
curbed VBN curbed ^ OK
by IN by ^ OK
the DT the ^ OK
police NN police ^ OK

and CC ^ ^ false_start
in IN in ^ OK
addition NN addition ^ OK
to IN to ^ OK
making VBG making ^ OK
me PRP me ^ OK
feel VB feel ^ OK
safer JJR safer ^ OK
make VB it ^ false_start
would MD would ^ OK
make VB make ^ OK
me PRP me ^ OK
feel VB feel ^ OK
good JJ good ^ OK
a- CC ^ ^ repeat
and CC and ^ OK
make VB make ^ OK
life NN life ^ OK
a DT a ^ OK
little RB little ^ OK
prettier JJR prettier ^ OK

so UH ^ ^ filler
m- XX ^ ^ false_start
what WP what ^ OK
else RB else ^ OK

ew UH ^ ^ filler
ew UH ew ^ OK

if IN if ^ OK
that DT that ^ OK
happened VBD happened ^ OK
i PRP i ^ OK
'd MD ^ ^ false_start
definitely RB definitely ^ OK
would MD would ^ OK
've VB 've ^ OK
called VBN called ^ OK
the DT the ^ OK
police NN police ^ OK

so UH ^ ^ filler
you PRP you ^ OK
have VBP have ^ OK
n't RB n't ^ OK
gotten VBN gotten ^ OK
a DT a ^ OK
check NN check ^ OK
either RB either ^ OK
huh UH ^ ^ filler

so UH ^ ^ filler
you PRP you ^ OK
're VBP 're ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
living VBG living ^ OK
on IN on ^ OK
campus NN campus ^ OK
when WRB when ^ OK
you PRP you ^ OK
go VBP go ^ OK
to IN to ^ OK
art NNP art ^ OK
institute NNP institute ^ OK

gossiping NN gossiping ^ OK

well UH well ^ OK
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS people arg0 OK
who WP who arg2 OK
have VBP have arg2 OK
nothing NN nothing arg1 OK
better RBR better arg1 OK
to SBAR-3 to arg1 OK
do TO do arg1 OK
than VB ^ ^ repeat
than NP-2 than arg1 OK
to IN to arg1 OK
gossi- IN gossi- arg1 OK

and CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
sometimes RB sometimes arg2 OK
when WRB ^ ^ repeat
when WRB when arg2 OK
you PRP you arg0 OK
have VBP have arg2 OK
nothing NN nothing arg1 OK
better RBR better arg1 OK
to TO to arg1 OK
do VB do arg1 OK
then NP-1 then arg2 OK
you ADVP-TMP- 2 you arg0 OK
gossip RB gossip arg1 OK

and CC ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
a DT a arg2 OK
way NN way arg2 OK
of IN of arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
makin- VBG ^ ^ repeat
making VBG making arg2 OK
yourself PRP yourself arg0 OK
feel VB feel arg1 OK
like IN like arg1 OK
you PRP you arg1 OK
're VBP 're arg1 OK
better JJR better arg2 OK
than IN than arg2 OK
someone NN someone arg2 OK
else RB else arg2 OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
because NP-1 because arg2 OK
they IN they arg0 OK
did PRP did arg2 OK
so VBD so arg1 OK
and RB and arg1 OK
so CC so arg1 OK
and RB and arg1 OK
such CC such arg1 OK
and JJ and arg1 OK
such CC such arg1 OK
thing JJ thing arg1 OK

even RB even ^ OK
though IN though ^ OK
most JJS most argM_tmp false_start
of IN of argM_tmp false_start
the DT the argM_tmp false_start
time NN time argM_tmp false_start
you PRP you arg1 OK
're VBP 're predicate OK
probably RB probably ^ OK
a DT a arg2 OK
hypocrite NN hypocrite arg2 OK
when WRB when arg2 OK
you PRP you arg0 OK
gossip VBP gossip arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
just RB just ^ OK
think VBP think predicate OK
it PRP it arg0 OK
makes VBZ ^ ^ repeat
makes VBZ makes arg1 OK
a DT ^ ^ repeat
a DT a arg0 OK
pers- NN ^ ^ repeat
person NN person arg0 OK
feel VB feel arg1 OK
really RB really arg1 OK
awful JJ awful arg1 OK

so UH ^ ^ false_start
but CC but ^ OK
have VBP ^ ^ repeat
d- VBP ^ ^ repeat
ha- VBP ^ ^ repeat
do VBP ^ ^ repeat
have VB have ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you arg0 OK
done VBN done predicate OK
all DT all arg1 OK
of IN of arg1 OK
those DT those arg1 OK
other JJ other arg1 OK
things NNS things arg1 OK
on IN on arg1 OK
the DT the arg1 OK
list NN list arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
but CC but ^ OK
unless IN unless ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
buy VB buy ^ OK
them PRP them ^ OK
cheaply RB cheaply ^ OK
like UH like ^ OK
on IN on ^ OK
the DT the ^ OK
internet NN internet ^ OK

i PRP ^ ^ repeat
mm UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
true JJ true arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
you PRP you arg0 OK
think VBP think predicate OK
about IN about arg1 OK
it PRP it arg1 OK
drinking NN drinking arg1 OK
costs VBZ costs predicate OK
more JJR more arg2 OK
than IN ^ ^ repeat
than IN than arg2 OK
smoking NN smoking arg2 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
at RB at argM_loc OK
least RBS least argM_loc OK
in- IN ^ ^ repeat
in IN ^ ^ repeat
in IN in argM_loc OK
new NNP new argM_loc OK
york NNP york argM_loc OK

whereas RB whereas ^ OK
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're arg0 OK
smoking VBG smoking predicate OK
cigarettes NNS cigarettes arg1 OK
and CC and ^ OK
you PRP you arg0 OK
get VBP get predicate OK
them PRP them arg1 OK
on IN on ^ OK
the DT the ^ OK
intern NN ^ ^ false_start
et NN internet ^ false_start
for IN for ^ OK
two CD two ^ OK
dollars NNS dollars ^ OK
a DT a ^ OK
pack NN pack ^ OK
then RB then ^ OK
that DT that arg1 OK
's BES 's predicate OK
like UH ^ ^ filler
fifteen CD fifteen arg2 OK
bucks NNS bucks arg2 OK

well UH well ^ OK
how WRB how ^ OK
much JJ much ^ OK
do VBP do ^ OK
you PRP you arg0 OK
spend VB spend predicate OK
a DT a argM_tmp OK
week NN week argM_tmp OK
on IN ^ ^ repeat
on IN on arg1 OK
drinking NN drinking arg1 OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg1 OK
went VBD went predicate OK
to IN to arg4 OK
oberlin NNP oberlin arg4 OK

but CC but ^ OK
um UH ^ ^ filler
so RB so ^ OK
anyways UH anyways ^ OK

i PRP i arg0 OK
guess VBP guess predicate OK
we PRP we arg1 OK
're VBP 're arg1 OK
off IN off arg2 OK
topic NN topic arg2 OK
again RB again arg2 OK

um UH ^ ^ filler
um UH ^ ^ filler
what WP what arg1 OK
were VBD were predicate OK
the DT the arg2 OK
other JJ other arg2 OK
things NNS things arg2 OK
on IN on arg2 OK
the DT the arg2 OK
list NN list arg2 OK

see UH see ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what ^ OK
i PRP i ^ OK
heard VBD heard ^ OK
about IN about ^ OK
um UH ^ ^ filler
overeating NN overeating ^ OK
or CC ^ ^ repeat
or CC or ^ OK
just RB just ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
obesity NN obesity ^ OK
in IN in ^ OK
general JJ general ^ OK
and CC and ^ OK
everything NN everything ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
that IN ^ ^ repeat
that IN that ^ OK

um UH ^ ^ filler
right RB right ^ OK
now RB now ^ OK
smoking NN smoking arg1 OK
is VBZ is predicate OK
the DT the arg2 OK
number NN number arg2 OK
one CD one arg2 OK
cause NN cause arg2 OK
of IN of arg2 OK
death NN death arg2 OK
in IN in arg2 OK
the DT the arg2 OK
country NN country arg2 OK

but CC but ^ OK
then RB then ^ OK
pretty RB pretty ^ OK
soon RB soon ^ OK
it PRP it arg1 OK
's BES 's ^ OK
going VBG going ^ OK
going VBG to ^ false_start
at- XX ^ ^ repeat
um UH ^ ^ filler
switch VB switch predicate OK
over RP over ^ OK
to IN to ^ OK
obesity NN obesity arg2 OK

because IN because ^ OK

it PRP ^ ^ repeat
's BES ^ ^ repeat
really RB ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
really RB really ^ OK
um UH ^ ^ filler

well UH ^ arg1 filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know predicate OK
if IN if arg1 OK
there EX there arg1 OK
's BES 's arg1 OK
um UH ^ predicate filler
um UH _NOUN_ ^ false_start

e- XX ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
seen VBN seen predicate OK
people NNS people arg1 OK
from IN from arg1 OK
india NNP india arg1 OK
that WDT ^ ^ repeat
that WDT that arg1 OK
um UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP i arg1 OK
taught VBD taught arg1 OK
tennis NN tennis arg1 OK
with IN with arg1 OK
that NP-1 that ^ OK
were DT were predicate OK
much VBD much arg2 OK
darker RB darker arg2 OK
than JJR than arg2 OK
most IN most arg2 OK
of JJS of arg2 OK
the IN the arg2 OK
blacks DT blacks arg2 OK
in NNS in arg2 OK
the IN the arg2 OK
part DT part arg2 OK
of NN of arg2 OK
mississippi IN mississippi arg2 OK
i NNP i arg1 OK
grew PRP grew arg2 OK
up VBD up arg_particl OK
in RB in arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
then RB then ^ OK
i PRP i arg0 OK
found VBD found predicate OK
out RP out arg_particl OK
that DT that arg1 OK
's BES ^ ^ false_start
t- XX ^ ^ false_start
um UH ^ ^ filler
dark JJ dark arg0 OK
skinned JJ skinned arg0 OK
blacks NNS blacks arg0 OK
are VBP are arg1 OK
treated VBN treated arg1 OK
worse RBR worse arg1 OK
by IN by arg1 OK
light JJ light arg1 OK
skinned JJ skinned arg1 OK
blacks NNS blacks arg1 OK
which WDT which ^ OK
was VBD was ^ OK
shocking JJ shocking predicate OK
to IN to arg1 OK
me PRP me arg1 OK

well UH ^ arg1 filler
i PRP ^ ^ repeat
i PRP i arg0 OK
know VBP ^ ^ repeat
know VBP know predicate OK
in IN in arg1 OK
africa NNP africa arg1 OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
you PRP you arg0 OK
've VBP 've arg1 OK
got VBN got arg1 OK
like UH ^ ^ filler
um UH ^ predicate filler
um UH _NOUN_ ^ false_start

and CC ^ ^ false_start
others NNS others arg1 OK
are VBP are predicate OK
um UH ^ ^ filler
extrem- RB ^ ^ false_start
incredibly RB incredibly arg2 OK
short JJ short arg2 OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
the DT ^ ^ repeat
the DT the arg2 OK
average JJ average arg2 OK
height NN height arg2 OK

really RB ^ ^ false_start
t- XX ^ ^ false_start
like UH ^ ^ filler
the DT the arg1 OK
maasai NNPS maasai arg1 OK
uh UH ^ ^ filler
the DT ^ ^ false_start
average JJ average arg1 OK
height NN height arg1 OK
is VBZ is predicate OK
seven CD seven arg2 OK
feet NNS feet arg2 OK
tall JJ tall arg2 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
so RB ^ ^ filler
that DT that ^ OK
means VBZ means predicate OK
they PRP they arg0 OK
got VBD got arg1 OK
a DT a arg1 OK
bunch NN bunch arg1 OK
of IN of arg1 OK
people NNS people arg1 OK
over IN over arg1 OK
seven CD seven arg1 OK
feet NNS feet arg1 OK
eh UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
um UH ^ ^ filler
to TO ^ ^ repeat
to TO to ^ OK
have VB have predicate OK
that DT that arg1 OK
average NN average arg1 OK
be VB be arg1 OK
that RB that arg1 OK
high JJ high arg1 OK

uh UH in ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
ta- XX ^ ^ false_start
and CC ^ ^ false_start
and CC ^ ^ false_start
like UH ^ ^ filler
um UH ^ ^ filler
certain JJ certain ^ OK
parts NNS parts ^ OK
in IN in ^ OK
africa NNP africa ^ OK
th- DT ^ ^ repeat
you PRP ^ ^ false_start
know VBP ^ ^ false_start
the DT the arg1 OK
average JJ average arg1 OK
height NN height arg1 OK
's BES 's predicate OK
seven CD seven arg2 OK
feet NNS feet arg2 OK
tall JJ tall arg2 OK

which WDT ^ ^ repeat
which WDT which ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
i- VBZ ^ ^ repeat
i- VBZ ^ ^ repeat
is VBZ ^ ^ repeat
is VBZ is predicate OK
a DT ^ ^ repeat
just RB just arg1 OK
as RB as arg1 OK
big JJ big arg1 OK
a DT a arg1 OK
difference NN difference arg1 OK
in IN in arg1 OK
color NN color arg1 OK
of IN of arg1 OK
skin NN skin arg1 OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
um UH ^ ^ filler
there- EX ^ ^ repeat
there EX there ^ OK
's BES 's predicate OK
all DT all arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
um UH ^ ^ filler
variations NNS variations arg1 OK
of IN of arg1 OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
height NN height arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and arg1 OK
colors NNS colors arg1 OK
of IN of arg1 OK
skin NN skin arg1 OK
and CC ^ ^ repeat
and CC and ^ OK
um UH ^ ^ filler
uh UH ^ ^ filler
of IN of ^ OK
course NN course ^ OK
the DT ^ ^ repeat
the DT the ^ OK
asian JJ asian ^ OK
um UH ^ ^ filler
thing NN thing ^ OK
with IN with ^ OK
the DT the arg1 OK
eyes NNS eyes arg1 OK
being VBG being predicate OK
um UH ^ ^ filler
slanted JJ slanted arg2 OK

i- PRP ^ ^ repeat
i PRP i ^ OK
just RB ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
um UH ^ ^ filler

d- XX ^ ^ false_start
eh UH ^ ^ filler
mm UH ^ ^ filler
d- XX ^ ^ false_start
uh UH ^ ^ filler
why WRB ^ ^ false_start
would MD ^ ^ false_start
s- NN ^ ^ false_start
how WRB ^ ^ repeat
how WRB how arg1 OK
would MD would arg0 OK
somebody NN somebody arg0 OK
's POS 's arg0 OK
eyes NNS eyes arg0 OK
get VB get predicate OK
slanted JJ slanted arg1 OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
ho- WRB ^ ^ false_start
where WRB ^ ^ false_start
wou- MD ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
where WRB ^ ^ false_start
would MD ^ ^ false_start
that DT ^ ^ false_start
come VB ^ ^ false_start
fr- IN ^ ^ false_start
and CC ^ ^ false_start
how WRB how arg1 OK
did VBD did ^ OK
that DT that ^ OK
happen VB happen predicate OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i arg0 OK
can MD can ^ OK
understand VB understand predicate OK
pigmentation NN pigmentation arg1 OK
of IN of arg1 OK
skin NN skin arg1 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
like UH ^ ^ repeat
like RP ^ ^ false_start
who WP ^ ^ repeat
who WP who arg0 OK
decided VBD decided predicate OK
oh UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
we PRP we arg0 OK
need VBP need arg1 OK
to TO to arg1 OK
start VB start arg1 OK
bounding VBG bounding arg1 OK
people NNS people arg1 OK
's POS 's arg1 OK
feet NNS feet arg1 OK

um UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
who- JJ ^ ^ false_start
who- NN ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
y- XX ^ ^ false_start
was VBD ^ ^ false_start
it PRP ^ ^ false_start
a DT ^ ^ false_start
k- XX ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
you PRP you arg0 OK
know VBP know predicate OK
like UH ^ ^ filler
the DT the arg1 OK
reason NN reason arg1 OK
men NNS men arg1 OK
have VBP have arg1 OK
to TO to arg1 OK
wear VB wear arg1 OK
neckties NNS neckties arg1 OK
to TO to arg1 OK
be VB be arg1 OK
dressed JJ dressed arg1 OK
up RP up arg1 OK
is ADVP-3 is predicate OK
because VBZ because arg2 OK
uh IN ^ ^ filler
some UH some arg0 OK
uh DT ^ ^ filler
king UH king arg0 OK
w- NNP ^ ^ false_start
w- XX ^ ^ false_start
forgot XX forgot arg2 OK
to VBD to arg1 OK
take TO take arg1 OK
his VB his arg1 OK
bib PRP bib arg1 OK
off NN off arg1 OK
after RP after argM_tmp OK
a IN a argM_tmp OK
feast DT feast argM_tmp OK

otherwise RB otherwise ^ OK
the DT the arg0 OK
king NNP king arg0 OK
woul- MD ^ ^ repeat
would MD would ^ OK
look VB look predicate OK
foolish JJ foolish arg1 OK
if IN if ^ OK
everybody NN everybody arg0 OK
else RB else arg0 OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
had VBD had ^ OK
taken VBN taken predicate OK
their PRP their arg1 OK
napkin NN napkin arg1 OK
off RP off arg1 OK

and CC ^ ^ false_start
so RB ^ ^ filler
r- XX ^ ^ false_start
to TO ^ ^ false_start
in IN in ^ OK
order NN order ^ OK
to TO ^ ^ repeat
to TO to ^ OK
not RB not ^ OK
make VB make predicate OK
the DT the arg0 OK
king NN king arg0 OK
look VB look arg1 OK
foolish JJ foolish arg1 OK
everyone NN everyone arg0 OK
left VBD left predicate OK
their PRP their arg1 OK
napkin NN napkin arg1 OK
on IN on arg1 OK
their PRP their arg1 OK
neck NN neck arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
it PRP it ^ OK
became VBD became predicate OK
a DT a arg1 OK
fashion NN fashion arg1 OK
thing NN thing arg1 OK

and CC ^ ^ false_start
so RB ^ ^ filler
now RB now ^ OK
you PRP you arg0 OK
know VBP know predicate OK
or UH ^ ^ false_start
for IN for arg1 OK
hundreds NNS hundreds arg1 OK
of IN of arg1 OK
years NNS years arg1 OK
now RB now arg1 OK
men NNS men arg0 OK
have VBP have arg1 OK
had VBN had arg1 OK
to TO to arg1 OK
wear VB wear arg1 OK
ties NNS ties arg1 OK
because IN because arg1 OK
some DT some arg0 OK
m- NN ^ ^ repeat
monarch NN monarch arg0 OK
made VBD made arg1 OK
a DT a arg1 OK
mistake NN mistake arg1 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
tha- DT ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
history NN history arg1 OK
's BES 's predicate OK
full JJ full arg2 OK
of IN of arg2 OK
just RB ^ ^ false_start
w- JJ ^ ^ repeat
weird JJ weird arg2 OK
uh UH ^ ^ filler
quirks NNS quirks arg2 OK

it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
like UH ^ ^ filler
um UH ^ ^ filler

well UH ^ ^ filler
from IN from ^ OK
a DT a ^ OK
standpoint NN standpoint ^ OK
of IN ^ ^ repeat
of IN of ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
like UH ^ ^ filler
um UH ^ ^ filler
um UH _NOUN_ ^ false_start

my PRP ^ ^ repeat
uh UH ^ ^ filler
obviously RB obviously ^ OK
my PRP ^ ^ repeat
b- NN ^ ^ repeat
my PRP my arg0 OK
brother NN brother arg0 OK
and CC and arg0 OK
his PRP his arg0 OK
wife NN wife arg0 OK
's BES 's arg0 false_start
uh UH ^ ^ filler
adopted VBN adopted arg0 OK
baby NN baby arg0 OK
is VBZ is ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
growing VBG growing predicate OK
up RB up arg_particl OK
at IN at ^ OK
some DT some ^ OK
point NN point ^ OK
and CC and ^ OK
realize VB realize predicate OK
that IN that arg1 OK
hey UH ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP i arg0 OK
have VBP have arg1 OK
straight JJ straight arg1 OK
black JJ black arg1 OK
hair NN hair arg1 OK

and CC ^ ^ false_start
mine PRP mine ^ OK
see UH ^ ^ filler
are VBP are ^ OK
eleven CD eleven ^ OK
and CC and ^ OK
fourteen CD fourteen ^ OK
stil- RB ^ ^ filler

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
never RB never ^ OK
really RB really ^ OK
sat VBD sat ^ OK
and CC and ^ OK
thought VBD thought ^ OK
about IN about ^ OK
what WP what ^ OK
i PRP i ^ OK
would MD would ^ OK
do VB do ^ OK

it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
a DT a ^ OK
real RB real ^ OK
up IN up ^ OK
to IN to ^ OK
date NN date ^ OK
technology NN technology ^ OK
wise RB wise ^ OK
town NN town ^ OK

originally RB originally ^ OK
but CC ^ ^ false_start
my PRP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
from IN from ^ OK
chicago NNP chicago ^ OK

i PRP i ^ OK
got VBD got ^ OK
my PRP my ^ OK
kids NNS kids ^ OK
out IN out ^ OK
of IN of ^ OK
there RB there ^ OK
and CC and ^ OK
give VB gave ^ false_start
my PRP my ^ OK
kids NNS kids ^ OK
half PDT half ^ OK
a DT a ^ OK
chance NN chance ^ OK
to TO to ^ OK
not RB not ^ OK
grow VB grow ^ OK
up RB up ^ OK
like IN like ^ OK
that DT that ^ OK

i PRP i ^ OK
got VBD have ^ false_start
a DT a ^ OK
fourteen CD fourteen ^ OK
year NN year ^ OK
old JJ old ^ OK

and CC ^ ^ false_start
every DT every ^ OK
day NN day ^ OK
the DT ^ ^ repeat
the DT the ^ OK
biggest JJS biggest ^ OK
thing NN thing ^ OK
on IN on ^ OK
my PRP my ^ OK
mind NN mind ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
she PRP she ^ OK
going VBG going ^ OK
to TO to ^ OK
come VB come ^ OK
home RB home ^ OK
pregnant JJ pregnant ^ OK
or CC or ^ OK
on IN on ^ OK
drugs NNS drugs ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
eh UH ^ ^ filler
well UH well ^ OK

you PRP you ^ OK
got VBN have ^ false_start
to TO to ^ OK
be VB be ^ OK
scared JJ scared ^ OK
about IN about ^ OK
stuff NN stuff ^ OK
like IN like ^ OK
that DT that ^ OK

i PRP i ^ OK
have VBP have ^ OK
a DT a ^ OK
base NN base ^ OK
not RB not ^ OK
far RB far ^ OK
from IN from ^ OK
too NP ^ ^ false_start
fort RB fort ^ OK
mccoy NNP mccoy ^ OK

i PRP ^ ^ false_start
never RB ^ ^ false_start
thought VBD ^ ^ false_start
abou- IN ^ ^ false_start
well UH ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
think VB think ^ OK
about IN about ^ OK
it PRP it ^ OK

like IN like ^ OK
but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP i ^ OK
says VBZ said ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
insi- JJ ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
in IN in ^ OK
a DT ^ ^ repeat
a DT a ^ OK
sma- NN ^ ^ repeat
small JJ small ^ OK
town NN town ^ OK

and CC ^ ^ false_start
if IN if ^ OK
anything NN anything ^ OK
were VBD were ^ OK
to TO to ^ OK
happen VB happen ^ OK
it PRP it ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
go VB go ^ OK
to IN to ^ OK
the DT the ^ OK
bigger JJR bigger ^ OK
cities NNS cities ^ OK
before IN before ^ OK
me PRP me ^ OK

it PRP it ^ OK
w- MD ^ ^ repeat
would MD would ^ OK
n't RB n't ^ OK
even RB even ^ OK
take VB take ^ OK
that DT that ^ OK
much JJ much ^ OK
because IN because ^ OK
our PRP our ^ OK
grocery NN grocery ^ OK
store NN store ^ OK
's BES 's ^ OK
so RB so ^ OK
little JJ little ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
only RB only ^ OK
takes VBZ takes ^ OK
a DT a ^ OK
saturday NNP saturday ^ OK
by IN for ^ false_start
us PRP us ^ OK

did VBD ^ ^ repeat
eh UH ^ ^ filler
did VBD ^ ^ repeat
do VBP did ^ false_start
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
ever RB ^ ^ repeat
ever RB ever ^ OK
think VB think ^ OK
you PRP you ^ OK
'd MD 'd ^ OK
ever RB ever ^ OK
have VB have ^ OK
to TO to ^ OK
use VB use ^ OK
that DT that ^ OK
stuff NN stuff ^ OK
down IN down ^ OK
there RB there ^ OK

has VBZ has ^ OK
that DT that ^ OK
affected VBD affected ^ OK
you PRP you ^ OK
in IN in ^ OK
anyway NN anyway ^ OK

um UH ^ ^ filler
not RB not ^ OK
personally RB personally ^ OK
except IN except ^ OK
for IN for ^ OK
the DT the ^ OK
stock NN stock ^ OK
market NN market ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
uh UH uh ^ OK
i PRP i ^ OK
think VBP think ^ OK
personally RB personally ^ OK
actually UH actually ^ OK
but CC but ^ OK
you PRP you ^ OK
know VBP know ^ OK
what WP what ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
wo- VBP ^ ^ repeat
work VBP work ^ OK
for IN for ^ OK
bethlehem NNP bethlehem ^ OK
steel NNP steel ^ OK

does VBZ it ^ false_start
does VBZ does ^ OK
n't RB n't ^ OK
seem VB seem ^ OK
right JJ right ^ OK
does VBZ does ^ OK
it PRP it ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
um UH ^ ^ filler
more JJR more ^ OK
and CC and ^ OK
more JJR more ^ OK
regulation NN ^ ^ false_start
regulation NN regulation ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
th- DT ^ ^ repeat
that DT that ^ OK
causes VBZ causes ^ OK
as RB as ^ OK
many JJ many ^ OK
problems NNS problems ^ OK

y- UNK y- ^ OK
y- UNK y- ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ filler
's BES ^ ^ filler
like RP ^ ^ filler
e- RB ^ ^ repeat
even RB even ^ OK
if IN if ^ OK
i PRP i arg0 OK
wanted VBD wanted predicate OK
to TO to arg1 OK
panic VB panic arg1 OK
m- XX ^ ^ false_start
how WRB how ^ OK
would MD would ^ OK
i PRP i arg0 OK
react VB react predicate OK

would MD would ^ OK
i PRP i arg0 OK
leave VB leave predicate OK
town NN town arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there arg1 OK
's BES are predicate false_start
so RB so arg2 OK
many JJ many arg2 OK
different JJ different arg2 OK
types NNS types arg2 OK
of IN of arg2 OK
attacks NNS attacks arg2 OK
that IN that arg2 OK
a- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do arg2 OK
n't RB n't arg2 OK
think VB think arg2 OK
y- PRP ^ ^ repeat
you PRP you arg0 OK
can MD can arg1 OK
really RB ^ arg1 filler
adequately RB adequately arg1 OK
prepare VB prepare arg1 OK
yourself PRP yourself arg1 OK
yourself PRP for arg1 false_start
uh UH ^ ^ filler
other RB other arg1 OK
than IN than arg1 OK
common JJ common arg1 OK
sense NN sense arg1 OK
stuff NN types arg1 false_start

yeah UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
w- PRP ^ ^ repeat
we PRP we arg0 OK
probably RB probably arg1 OK
have VBP have arg1 OK
a DT ^ ^ repeat
an DT an arg1 OK
exaggerated JJ exaggerated arg1 OK
sense NN sense arg1 OK
of IN of arg1 OK
uh UH ^ ^ filler
risk NN risk arg1 OK
when WRB when arg1 OK
it PRP it arg1 OK
comes VBZ comes arg1 OK
to IN to arg4 OK
terrorist JJ terrorist arg4 OK
attacks NNS attacks arg4 OK

i PRP i arg0 OK
think VBP think predicate OK
we PRP we arg0 OK
mm UH ^ ^ filler
're VBP 're arg1 OK
probably RB probably arg2 OK
more RBR more arg2 OK
likely JJ likely arg2 OK
to TO to arg2 OK
die VB die arg2 OK
of IN of arg1 OK
of IN a arg1 false_start
snake NN snake arg1 OK
bite NN bite arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg1 OK
're VBP 're predicate OK
scared JJ scared arg2 OK
of IN of arg2 OK
snakes NNS snakes arg2 OK
too RB too arg2 OK

ah UH ^ ^ filler
right UH right ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
almost RB ^ ^ false_start
had VBD ^ ^ false_start
a DT ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
a- XX ^ ^ false_start
i PRP i arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
hesitate VBP hesitate predicate OK
to TO to ^ OK
think VB think predicate OK
it PRP ^ arg1 false_start
's BES ^ arg1 false_start
a DT ^ arg1 false_start
i PRP i arg0 OK
want VBP want arg1 OK
to TO to arg1 OK
finish VB finish arg1 OK
what WP what arg1 OK
my PRP my arg0 OK
fa- NN ^ ^ repeat
father NN father arg0 OK
did VBD did arg1 OK
sort NP-2 ^ arg1 false_start
of NN ^ arg1 false_start
thing IN ^ arg1 false_start

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
r- VB ^ ^ repeat
remember VB remember predicate OK
we PRP we arg0 OK
created VBD created arg1 OK
osama NNP osama arg1 OK
at IN at argM_tmp false_start
the DT the argM_tmp false_start
same JJ same argM_tmp false_start
time NN time argM_tmp false_start

when WRB ^ ^ repeat
when WRB when ^ OK
saddam NNP saddam arg0 OK
invaded VBD invaded predicate OK
iran NNP iran arg1 OK
it ADVP-TMP- 1 it arg1 OK
was PRP was predicate OK
because VBD because arg2 OK
a IN a arg1 OK
religious DT religious arg1 OK
leader JJ leader arg1 OK
had NN had arg2 OK
overtaken NP-2 overtaken arg2 OK
iran VBD ^ ^ false_start
er VBN ^ ^ filler
the NNP the arg1 OK
ayatollah UH ayatollah arg1 OK
khomenei DT khomenei arg1 OK
and NN and arg2 OK
was NNP was arg2 OK
reversing CC reversing arg2 OK
the VBD the arg1 OK
westernization VBG westernizatio n  arg1 OK
of DT of arg1 OK
their NN their arg1 OK
culture IN culture arg1 OK
and PRP and arg2 OK
was NN was arg2 OK
less CC less arg2 OK
friendly VBD friendly arg2 OK
to RBR to arg2 OK
us JJ us arg2 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
uh UH ^ ^ filler
at IN at ^ OK
the DT the ^ OK
same JJ same ^ OK
time NN time ^ OK
w- PRP ^ ^ repeat
we PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
und- XX ^ ^ false_start
we PRP we arg0 OK
were VBD were ^ OK
giving VBG giving predicate OK
weapons NNS weapons ^ OK
behind IN behind ^ false_start
the DT the ^ false_start
scenes NNS scenes ^ false_start
to SBAR-1 to ^ OK
iran IN iran arg0 OK
to NNP to ^ OK
fight TO fight predicate OK
iraq VB iraq arg1 OK
with NNP with ^ OK

you PRP ^ ^ repeat
know VBP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
like RP like arg2 OK
wait VB wait arg2 OK
a DT a arg1 OK
minute NN minute arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ repeat
we PRP we arg1 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
playing VBG playing predicate OK
both DT both arg1 OK
sides NNS sides arg1 OK
of IN of arg1 OK
it PRP it arg1 OK
and CC ^ ^ repeat
and CC and ^ OK
trying VBG trying predicate OK
to TO to arg1 OK
be VB be arg1 OK
the DT the arg2 OK
moral JJ moral arg2 OK
crusaders NNS crusaders arg2 OK
at IN at argM_tmp OK
the DT the argM_tmp OK
same JJ same argM_tmp OK
time NN time argM_tmp OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
the DT the arg0 OK
rest NN rest arg0 OK
of IN of arg0 OK
the DT the arg0 OK
world NN world arg0 OK
kind RB ^ ^ filler
of RB ^ ^ filler
sees VBZ sees predicate OK
our PRP ^ ^ repeat
our PRP our arg1 OK
duplicity NN duplicity arg1 OK
but CC ^ ^ repeat
but CC but ^ OK
most JJS most arg0 OK
americans NNPS americans arg0 OK
do VBP do predicate OK
n't RB n't ^ OK

i PRP i arg1 OK
was VBD was predicate OK
astonished VBN astonished arg2 OK
at IN at arg2 OK
the DT the arg0 OK
poll NN poll arg0 OK
that WDT that arg2 OK
came VBD came arg2 OK
out RP out arg1 OK
that WDT that arg2 OK
said VBD said arg2 OK
that IN that arg1 OK
people NNS people arg0 OK
that WDT who arg0 false_start
watched VBD watched arg1 OK
fox NNP fox arg1 OK
news NNP news arg1 OK
believed VBD believed arg1 OK
that IN that arg1 OK
n- XX ^ ^ false_start
the DT the arg1 OK
terrorists NNS terrorists arg0 OK
i- XX ^ ^ false_start
w- XX ^ ^ false_start
from IN from arg0 OK
nine CD nine arg0 OK
eleven CD eleven arg0 OK
came VBD came arg1 OK
from IN from arg1 OK
iraq NNP iraq arg1 OK
that IN and ^ false_start
that IN that arg1 OK
saddam NNP saddam arg0 OK
was VBD was arg1 OK
supporting VBG supporting arg1 OK
them PRP them arg1 OK
that IN and ^ false_start
that IN that arg1 OK
al NNP al arg1 OK
qaeda NNP qaeda arg1 OK
's BES 's arg1 OK
based VBN based arg2 OK
there RB there arg2 OK

that IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
like UH ^ arg2 filler
all PDT all arg2 OK
this DT this arg2 OK
stuff NN stuff arg2 OK
that WDT that arg1 OK
's BES 's arg2 OK
patently RB patently arg2 OK
false JJ false arg2 OK

i VBZ i arg1 false_start
think NP-PRD think predicate false_start
they PRP they arg0 OK
're VBP 're arg1 OK
all DT all arg1 OK
just RB just arg1 false_start
trying VBG trying arg1 OK
to TO to arg1 OK
make VB make arg1 OK
more JJR more arg1 OK
out SBAR-2 out arg1 OK
of IN of arg1 OK
it IN it arg1 OK
than PRP than arg1 OK
it IN what ^ false_start
it IN it arg1 OK
is PRP really ^ false_start
is PRP is arg1 OK

and CC ^ ^ repeat
tha- XX ^ ^ false_start
e- XX ^ ^ false_start
a- CC ^ ^ false_start
an- CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's SBAR-1 's arg1 OK
a BES a arg2 OK
little DT little arg2 OK
weird RB weird arg2 OK
that JJ that arg2 OK
we IN we arg0 OK
're PRP 're arg2 OK
going VBP going arg2 OK
to VBG to arg2 OK
cough TO cough arg2 OK
up VB up arg2 OK
millions RP millions arg1 OK
of NNS of arg1 OK
dollars IN dollars arg1 OK
you NNS ^ ^ filler
know PRP ^ ^ filler
each VBP each arg1 OK
for RB for arg1 OK
p- IN ^ ^ repeat
people NNS people arg1 OK
that NNS that arg0 OK
died WDT died arg1 OK
there VBD there argM_loc OK

but CC ^ ^ filler
i- IN ^ ^ repeat
i- IN ^ ^ repeat
in IN in ^ OK
all DT all ^ OK
of IN of ^ OK
these DT these ^ OK
other JJ other ^ OK
events NNS events ^ OK
where WRB where ^ OK
we PRP we ^ OK
've VBP 've ^ OK
been VBN been ^ OK
attacked VBN attacked ^ OK
by IN ^ ^ repeat
by IN by ^ OK
suicide NN suicide ^ OK
bombers NNS bombers ^ OK
you ADVP-1 ^ ^ filler
know PRP ^ ^ filler
the VBP the ^ OK
marines DT marines ^ OK
you NNS ^ ^ filler
know PRP ^ ^ filler
over VBP over ^ OK
in IN in ^ OK
the IN the ^ OK
middle DT middle ^ OK
east NNP east ^ OK
and NNP ^ ^ false_start
stuff CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK

d- XX ^ ^ false_start
right UH right ^ OK

if IN if ^ OK
you PRP you arg0 OK
die VBP die predicate OK
in IN ^ ^ false_start
the DT ^ ^ false_start
e- XX ^ ^ false_start
e- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
as IN as arg1 OK
a DT a arg1 OK
result NN result arg1 OK
of IN of arg1 OK
a DT ^ ^ repeat
a DT a arg1 OK
street NN street arg1 OK
crime NN crime arg1 OK
or CC then ^ false_start
or CC ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
you PRP you arg0 OK
get VBP get predicate OK
nothing NN nothing arg1 OK

ah UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
you PRP you arg0 OK
work VBP work predicate OK
hard RB hard argM_other OK
all PDT all argM_tmp OK
your PRP your argM_tmp OK
life NN life argM_tmp OK
but CC but ^ OK
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have predicate OK
health NN health arg1 OK
insurance NN insurance arg1 OK
tough JJ then ^ false_start
tough JJ tough ^ OK
luck NN luck ^ OK

i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP ^ ^ repeat
d- VBP ^ ^ repeat
i PRP ^ ^ false_start
did VBD ^ ^ false_start
see VB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
feel VB feel predicate OK
any DT any arg1 OK
safer JJR safer arg1 OK
at IN at argM_loc OK
the DT the argM_loc OK
airports NNS airports argM_loc OK

i PRP ^ arg1 repeat
i- PRP ^ ^ repeat
i PRP i arg0 OK
was VBD ^ ^ repeat
was VBD was ^ OK
wearing VBG ^ ^ repeat
wearing VBG wearing predicate OK
a DT a arg1 OK
really RB really arg1 OK
^ ^ soft ^ OK
p- XX ^ ^ repeat
pair NN pair arg1 OK
of IN of arg1 OK
shoes NNS shoes arg1 OK
with IN with arg1 OK
no DT no arg1 OK
socks NNS socks arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
like RP like arg2 OK
g- XX ^ ^ false_start
they PRP they arg1 OK
were VBD were arg2 OK
almost RB almost arg2 OK
almost RB ^ ^ repeat
like IN ^ ^ filler
moccasins NNS moccasins arg2 OK

um UH ^ ^ filler
eh UH eh ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
uh UH ^ ^ filler
making VBG ^ ^ false_start
fun NN ^ ^ false_start
of IN ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK

i- IN ^ ^ repeat
if IN ^ ^ repeat
if IN if argM_adverb OK
i PRP i arg0 OK
would MD would argM_mod OK
n't RB n't argM_neg OK
say VB say predicate OK
something NN something arg1 OK
to IN to arg2 OK
the DT the arg2 OK
person NN person arg2 OK
's POS 's arg2 OK
face NN face arg2 OK
then RB then argM_adverb OK
i PRP i arg0 OK
might MD might argM_mod OK
not RB not argM_neg OK
say VB say predicate OK
it PRP it arg1 OK

but CC ^ ^ false_start
even RB even argM_adverb OK
as IN as argM_adverb OK
i PRP i arg0 OK
was VBD was ^ OK
saying VBG saying predicate OK
that DT that arg1 OK
i PRP i arg0 OK
was VBD was ^ OK
thinking VBG thinking predicate OK
that IN that arg1 OK
i PRP i arg0 OK
uh UH ^ ^ filler
very RB very argM_tmp OK
often RB often argM_tmp OK
laugh VBD laugh arg1 OK
at IN at arg1 OK
comedians NNS comedians arg0 OK
that WDT that arg1 OK
are VBP are arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
mocking VBG mocking arg1 OK
the DT the argM_other OK
hell NN hell argM_other OK
out IN out argM_other OK
of IN of argM_other OK
uh UH ^ ^ filler
um UH ^ ^ filler
politicians NNS politicians arg1 OK
and CC ^ ^ false_start
things NNS ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if argM_adverb OK
i PRP i arg0 OK
were VBD were ^ OK
to TO to ^ OK
say VB say predicate OK
some DT some arg1 OK
of IN of arg1 OK
the DT the arg1 OK
things NNS things arg1 OK
that WDT that arg1 OK
have VBP have arg1 OK
been VBN been arg1 OK
said VBD said arg1 OK
about IN about arg3 OK
george NNP george arg3 OK
bush NNP bush arg3 OK
to IN to arg2 OK
his PRP his arg2 OK
face NN face arg2 OK
he PRP he arg1 OK
'd MD 'd argM_mod OK
probably RB probably argM_adverb OK
be VB be predicate OK
quite RB quite argM_extent OK
hurt JJ hurt arg2 OK

well UH ^ ^ filler
when WRB when argM_tmp OK
you PRP you argM_tmp OK
were VBD were argM_tmp OK
saying VBG saying argM_tmp OK
that DT that argM_tmp OK
i ADVP-TMP- 1 i arg0 OK
was PRP was ^ OK
trying VBD trying predicate OK
to VBG to arg1 OK
think TO think arg1 OK
th- VB ^ ^ false_start
because XX because argM_cause OK
i IN i arg0 OK
agree PRP agree argM_cause OK
with VBP with arg2 OK
you IN you arg2 OK
that PRP that arg1 OK
like IN ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
um VBP ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
the VBP the arg1 OK
common DT common arg1 OK
phrase JJ phrase arg1 OK
is NN is arg1 OK
there VBZ there arg1 OK
's EX 's arg2 OK
a BES a arg2 OK
lady DT lady arg2 OK
present NN present arg2 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
is VBZ is predicate OK
acceptable JJ acceptable arg2 OK
within IN within arg2 OK
men NNS men arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
like UH ^ ^ filler
in IN in arg1 OK
a DT a arg1 OK
sort NN sort arg1 OK
of IN of arg1 OK
trivial JJ trivial arg1 OK
thing NN thing arg1 OK
eh UH ^ ^ filler
w- NNS ^ ^ repeat
women NNS women arg0 OK
tend VBP tend arg1 OK
to TO to arg1 OK
mock VB mock arg1 OK
men NNS men arg1 OK
out RB out argM_dir OK
a DT a argM_extent OK
lot NN lot argM_extent OK

but CC ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
really RB really argM_adverb OK
in IN in arg2 OK
poor JJ poor arg2 OK
taste NN taste arg2 OK

it PRP ^ arg1 false_start
's SBAR-1 ^ ^ false_start
interesting BES ^ ^ false_start
that JJ ^ ^ false_start
the IN ^ ^ false_start
patterns DT ^ ^ false_start
it NNS it arg1 OK
seems PRP seems predicate OK
like VBZ like arg2 OK
the IN the arg1 OK
patterns DT patterns arg1 OK
of NNS of arg1 OK
interaction IN interaction arg1 OK
with NN with arg1 OK
women IN women arg1 OK
that NNS that arg1 OK
um WDT ^ ^ filler
like UH ^ ^ filler
do UH do arg2 OK
n't VBP n't argM_neg OK
take RB take arg2 OK
place VB place arg2 OK
with NN with argM_mnr OK
men IN men argM_mnr OK
like NNS like arg2 OK
talking IN talking arg2 repeat
talking NNS ^ ^ OK
they DT ^ arg1 false_start
about VBG about arg1 repeat
about VBG ^ ^ OK
clothes IN clothes ^ false_start
clothes IN ^ arg1 false_start
weight IN and ^ false_start
weight IN weight arg1 OK
talking NN ^ ^ false_start
about VBG ^ ^ false_start
things IN ^ ^ false_start
like NNS ^ ^ false_start
that IN ^ arg1 false_start
're PRP is arg2 false_start
not VBP not argM_neg OK
in RB in arg2 OK
poor IN poor arg2 OK
taste JJ taste arg2 OK
with NN with arg2 OK
men IN men arg2 OK

like UH ^ arg1 filler
you PRP ^ ^ filler
know VBP ^ ^ filler
an DT an arg0 OK
attractive JJ attractive arg0 OK
man NN man arg0 OK
would MD would argM_mod OK
have VB have predicate OK
nice JJ nice arg1 OK
eyes NNS eyes arg1 OK
and CC and arg1 OK
smile NN a ^ false_start
nice JJ nice arg1 OK
smile NN smile arg1 OK

yet RB ^ ^ filler
an DT an ^ OK
attractive JJ attractive ^ OK
women NNS women ^ OK
would MD would ^ OK
have VB have ^ OK
nice JJ nice ^ OK
well UH ^ ^ filler
not RB not ^ OK
eyes NNS eyes ^ OK
and CC and ^ OK
not RB not ^ OK
smile NN smile ^ OK

so UH ^ ^ false_start
um UH ^ ^ filler
you PRP you arg1 OK
always RB always argM_adverb OK
planned VBD planned predicate OK
on IN on arg1 OK
moving VBG moving arg1 OK
into IN to arg2 false_start
florida NNP florida arg2 OK
when WRB when argM_tmp OK
you PRP you arg0 OK
retired VBD retired argM_tmp OK
or ADVP-TMP- 2 ^ ^ false_start
something CC ^ predicate false_start

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
nice JJ nice arg2 OK

so UH ^ ^ false_start
your PRP your arg0 OK
kids NNS kids arg0 OK
are VBP are predicate OK
all DT all arg0 OK
like UH ^ ^ filler
off RB off argM_loc OK
doing VBG doing arg2 OK
their PRP their arg1 OK
thing NN thing arg1 OK

so UH ^ ^ false_start
you PRP you arg0 OK
had VBD had predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
new NNP new arg1 OK
yorkers NNPS yorkers arg1 OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

actually UH ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
am VBP ^ ^ false_start
a DT ^ ^ false_start
i PRP i arg0 OK
just RB just argM_adverb OK
work VBP work predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
city NN city argM_loc OK

i PRP i arg0 OK
live VBP live predicate OK
in IN in argM_loc OK
center NNP center argM_loc OK
city NNP city argM_loc OK

and CC ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
my PRP my arg0 OK
friend NN friend arg0 OK
showed VBD showed predicate OK
me PRP me arg2 OK
this DT this arg1 OK
ad NN ad arg1 OK
because IN because argM_cause OK
i PRP i arg1 OK
'm VBP 'm argM_cause OK
always RB always arg2 OK
on IN on arg2 OK
my PRP my arg2 OK
phone NN phone arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
wow UH ^ ^ filler
two CD two arg1 OK
hundred CD hundred arg1 OK
dollars NNS dollars arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
yeah UH yeah arg1 OK

all DT all arg1 OK
i PRP i arg0 OK
got VBD have arg1 false_start
to TO to arg1 OK
do VB do arg1 OK
is NP-1 is predicate OK
talk VBZ talk arg2 OK
to VB to arg2 OK
somebody IN somebody arg1 OK
i NN i arg0 OK
do PRP do arg2 OK
n't VBP n't argM_neg OK
know RB know arg2 OK

o- UH ^ ^ repeat
oh UH oh ^ OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
kn- XX ^ ^ false_start
do VBP ^ ^ false_start
yo- PRP ^ ^ false_start
how WRB how arg1 OK
many JJ many arg1 OK
participants NNS participants arg1 OK
did VBD did ^ OK
they PRP they arg0 OK
have VB have predicate OK
last JJ last argM_tmp OK
year NN year argM_tmp OK

um UH ^ ^ filler
so UH ^ ^ false_start
is VBZ is predicate OK
it PRP it arg1 OK
sunny JJ sunny arg2 OK
over IN over arg2 OK
there RB there arg2 OK
in IN in arg2 OK
florida NNP florida arg2 OK

well UH ^ ^ filler
it PRP it arg0 OK
's BES 's predicate OK
uh UH ^ ^ filler
foggy JJ foggy arg2 OK
humid JJ humid arg2 OK
and CC and arg2 OK
raining VBG raining arg2 OK

it PRP it arg1 OK
's HVS 's ^ OK
been VBN been predicate OK
like IN like arg2 OK
this DT this arg2 OK
all DT all arg2 false_start
weekend NN weekend arg2 false_start
actually RB actually arg2 OK

i PRP i arg0 false_start
guess VBP guess predicate false_start
i PRP ^ ^ false_start
m- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
watch VB watch arg1 OK
the DT the arg1 OK
news NN news arg1 OK
too RB too argM_extent OK
much RB much argM_extent OK

i PRP i arg1 OK
'm VBP 'm predicate OK
either RB either arg2 OK
uh UH ^ ^ filler
in IN in arg2 OK
my PRP my arg2 OK
office NN office arg2 OK
or CC or ^ OK
i PRP i arg1 OK
'm VBP 'm predicate OK
like UH ^ ^ filler
on IN on arg2 OK
the DT the arg2 OK
phone NN phone arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
hav- VBP ^ ^ false_start
really RB ^ ^ false_start
have VBP ^ ^ false_start
n't RB ^ ^ false_start
watched VBN ^ ^ false_start
the DT ^ ^ false_start
new- NN ^ ^ false_start
actually RB actually argM_adverb OK
today NN today arg1 OK
was VBD was predicate OK
actually RB actually argM_adverb OK
the DT the arg2 OK
first JJ first arg2 OK
time NN time arg2 OK
i PRP i arg0 OK
've VBP 've arg2 OK
watched VBN watched arg2 OK
the DT the arg2 OK
news NN news arg2 OK
in IN in argM_tmp OK
a DT a argM_tmp OK
while NN while argM_tmp OK

and CC ^ arg1 false_start
i PRP i arg0 OK
was VBD was ^ OK
hearing VBG hearing predicate OK
all PDT of ^ false_start
all PDT all arg1 OK
these DT these arg1 OK
deaths NNS deaths arg1 OK
and CC and arg1 OK
all PDT ^ ^ false_start
this DT ^ ^ false_start
like UH ^ ^ filler
nat- XX ^ ^ false_start
like UH ^ ^ filler
all PDT all arg1 OK
these DT these arg1 OK
disasters NNS disasters arg1 OK

it PRP ^ ^ false_start
just RB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
do- VBZ ^ ^ false_start
uh UH ^ ^ filler
it PRP it arg0 OK
kind RB kind argM_extent OK
of RB of argM_extent OK
just RB just argM_adverb OK
brings VBZ brings predicate OK
me PRP me arg1 OK
down RB down arg_particl OK
with IN with argM_mnr OK
the DT the argM_mnr OK
weather NN weather argM_mnr OK
and CC ^ ^ false_start
all DT ^ ^ false_start

i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
uh UH ^ ^ filler
th- XX ^ ^ false_start
people NNS people arg0 OK
do VBP do arg2 OK
n't RB n't argM_neg OK
get VB get arg2 OK
sick JJ sick arg1 OK
down IN down argM_loc OK
there RB there argM_loc OK
huh UH ^ ^ filler

that DT that arg1 OK
's BES 's predicate OK
eh UH ^ ^ filler
something NN something arg2 OK
interesting JJ interesting arg2 OK

well UH ^ ^ false_start
i PRP i arg0 OK
hope VBP hope predicate OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
as RB as arg2 OK
lucky JJ lucky arg2 OK
as IN as arg2 OK
you PRP you arg2 OK
when WRB when argM_tmp OK
i PRP i arg0 OK
retire VBP retire arg2 OK

me PRP me ^ OK
either RB either ^ OK

i PRP ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg1 OK
've VBP ^ ^ false_start
'm VBP 'm predicate OK
a DT a arg2 OK
business NN business arg2 OK
graduate NN graduate arg2 OK
from IN from arg2 OK
uh UH ^ ^ filler
university NNP university arg2 OK
of IN of arg2 OK
houston NNP houston arg2 OK

and CC ^ ^ false_start
so RB so argM_adverb OK
i PRP ^ ^ repeat
i PRP i arg0 OK
thought VBD thought predicate OK
that DT that arg1 OK
was VBD was arg2 OK
kind RB kind arg2 OK
of RB of arg2 OK
silly JJ silly arg2 OK
because IN because argM_cause OK
if IN if argM_cause OK
you PRP you arg0 OK
were VBD were argM_cause OK
doing VBG doing argM_cause OK
a DT a arg1 OK
job NN job arg1 OK
you PRP you arg0 OK
'd MD 'd argM_cause OK
have VB have argM_cause OK
the DT the arg1 OK
formulas NNS formulas arg1 OK

well UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
feel VBP feel predicate OK
much RB much arg1 OK
the DT the arg1 OK
same JJ same arg1 OK
about IN about arg2 OK
computers NNS computers arg2 OK

i PRP i arg0 OK
've VBP 've ^ OK
heard VBN heard predicate OK
some DT some arg0 OK
folks NNS folks arg0 OK
say VBP say arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that IN that arg1 OK
they PRP ^ ^ false_start
're VBP ^ ^ false_start
not RB ^ ^ false_start
they PRP they arg0 OK
kind RB kind argM_extent OK
of RB of argM_extent OK
uh UH ^ ^ filler
take VB take arg1 OK
the DT the arg1 OK
thinking NN thinking arg1 OK
away RP away arg1 OK
for IN for arg2 OK
you PRP you arg2 OK

so RB ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
kind RB kind argM_extent OK
of RB of argM_extent OK
what WP what arg2 OK
i PRP i arg0 OK
think VBP think arg2 OK
about IN about arg1 OK
it PRP it arg1 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

i PRP i ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
this DT this arg1 OK
happened VBD happened predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
metroplex NNP metroplex argM_loc OK

and CC ^ ^ false_start
have VBP have ^ OK
you PRP you arg0 OK
heard VBN heard predicate OK
and CC and ^ OK
maybe RB maybe argM_adverb OK
you PRP you arg0 OK
feel VBP feel predicate OK
the DT the arg1 OK
same JJ same arg1 OK
way NN way arg1 OK
i PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
sometimes VP sometimes argM_tmp OK
the RB the arg1 OK
kids DT kids arg0 OK
ca NNS ca argM_mod OK
n't MD n't argM_neg OK
give RB give arg1 OK
change VB change arg1 OK
uh NN ^ ^ filler
if UH if argM_cause OK
the IN the argM_cause OK
machine DT machine arg1 OK
is NN is argM_cause OK
down VBZ down arg2 OK

by IN ^ ^ repeat
by IN by argM_discou OK
that DT ^ ^ repeat
that DT that argM_discou OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
they PRP they arg0 OK
only RB only argM_adverb OK
can MD can argM_mod OK
look VB look predicate OK
at IN ^ ^ false_start
and CC and ^ OK
say VB say predicate OK
what WP what arg1 OK

and CC ^ ^ false_start
so UH ^ ^ false_start
i PRP ^ ^ false_start
wonder VBP ^ ^ false_start
now RB ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
doing VBG ^ ^ false_start
devils NNS ^ ^ false_start
advocate NN ^ ^ false_start
but CC but argM_adverb OK
i PRP ^ ^ repeat
i PRP i arg0 OK
wonder VBP wonder predicate OK
if IN if arg1 OK
the DT the arg0 OK
u- NN ^ ^ repeat
use NN use arg0 OK
of IN of arg0 OK
computers NNS computers arg0 OK
big JJ big argM_extent OK
time NN time argM_extent OK
has VBZ has arg1 OK
some DT some arg1 OK
bad JJ bad arg1 OK
effect NN effects arg1 false_start
uh UH ^ ^ filler
on IN on arg1 OK
the DT the arg1 OK
ability NN ability arg1 OK
to TO to arg1 OK
reason VB reason arg1 OK

i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not arg2 OK
sure JJ sure arg2 OK
where WRB what arg2 false_start
i PRP i arg0 OK
meant VBD meant arg2 OK
with IN with arg1 OK
that DT ^ ^ repeat
that DT that arg1 OK
statement NN statement arg1 OK

but CC ^ ^ repeat
but CC but argM_adverb OK
it PRP it arg0 OK
does VBZ does predicate OK
kind RB kind argM_extent OK
of RB of argM_extent OK
make VB make arg1 OK
you PRP you arg1 OK
feel VB feel arg2 OK
funny JJ funny arg2 OK
when WRB when argM_tmp OK
somebody NN somebody arg0 OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
do VB make argM_tmp false_start
change NN change arg1 OK
for IN for arg1 OK
a DT a arg1 OK
dollar NN dollar arg1 OK
but CC but arg1 OK
knows VBZ knows arg1 OK
that IN that arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
twenty-three CD twenty-three arg2 OK
cents NNS cents arg2 OK

it PRP ^ ^ repeat
it PRP it arg0 OK
does VBZ ^ ^ repeat
does VBZ does predicate OK
almost RB almost arg1 OK
make VB make arg1 OK
sense NN sense arg1 OK
does VBZ does predicate OK
n't RB n't argM_neg OK
it PRP it arg0 OK

and CC and ^ OK
i PRP i ^ OK

that DT that ^ OK
may MD may ^ OK
you PRP you ^ OK
know VBP know ^ OK
it PRP it ^ OK
's BES 's ^ OK

now RB now argM_tmp OK
i PRP i arg0 OK
'm VBP 'm ^ OK
pumping VBG pumping predicate OK
up RP up arg_particl OK
college NN college arg1 OK
graduate NN graduate arg1 OK
shit NN shit arg1 OK

what WP ^ arg2 false_start
i PRP ^ ^ false_start
find VBP ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
a DT a argM_extent OK
little JJ little argM_extent OK
bit NN bit argM_extent OK
older JJR of ^ false_start
older JJR an ^ false_start
older JJR older arg2 OK
guy NN guy arg2 OK

so UNK ^ ^ false_start
for UNK ^ ^ false_start
me UNK ^ ^ false_start
the UNK the ^ OK
things UNK things ^ OK
that UNK that ^ OK
i UNK i ^ OK
used UNK used ^ OK
to UNK to ^ OK
know UNK know ^ OK
about UNK about ^ OK
algebra UNK algebra ^ OK
that UNK that ^ OK
's UNK 's ^ OK
all UNK all ^ OK
i UNK i ^ OK
can UNK can ^ OK
really UNK really ^ OK
think UNK think ^ OK
of UNK of ^ OK
at UNK at ^ OK
the UNK the ^ OK
moment UNK moment ^ OK
as UNK as ^ OK
an UNK an ^ OK
example UNK example ^ OK
it UNK it ^ OK
really UNK really ^ OK
is UNK is ^ OK
a UNK a ^ OK
strain UNK strain ^ OK
to UNK to ^ OK
get UNK get ^ OK
back UNK back ^ OK
and UNK and ^ OK
do UNK do ^ OK

uh UH ^ ^ filler
what WP what arg1 OK
i PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
r- VBP ^ ^ repeat
remember VBP ^ ^ false_start
used VBD used arg1 OK
to TO to arg1 OK
be VB be arg1 OK
were VBD ^ predicate repeat
fairly RB fairly arg1 OK
simple JJ simple arg1 OK
uh UH ^ ^ filler
mathematical JJ mathematical arg1 false_start
uh UH ^ ^ filler
tasks NNS tasks arg1 OK
is VBZ is predicate OK
what WP what arg2 OK
i PRP i arg0 OK
'm VBP 'm arg2 OK
saying VBG saying arg2 OK
uh NP-3 ^ ^ filler
i- UH ^ ^ repeat
it PRP ^ ^ false_start
's PRP ^ ^ false_start
like BES ^ ^ filler
i UH i arg0 OK
sort PRP ^ ^ false_start
of RB ^ ^ false_start
have RB have arg1 OK
forgotten VBP forgotten arg1 OK
uh VBN ^ ^ filler
how UH ^ ^ false_start
to WRB ^ ^ false_start
do TO ^ ^ false_start
those VB ^ ^ false_start
things DT ^ predicate false_start

just RB just arg0 OK
mainly RB mainly ^ OK
because IN because ^ OK
i PRP i ^ OK
either RB either ^ OK
have VBP have ^ OK
n't RB n't ^ OK
used VBN used predicate OK
them PRP them ^ OK
which WDT which ^ OK
kind RB kind ^ OK
of RB of ^ OK
must MD must ^ OK
complicate VB complicate predicate OK
the DT the ^ OK
question NN question ^ OK
or CC or ^ OK
that IN that ^ OK
i PRP i ^ OK
've VBP 've ^ OK
forgotten VBN forgotten predicate OK
the DT the ^ OK
formulas NNS formulas ^ OK
and CC ^ ^ false_start
those DT ^ ^ false_start
things NNS ^ ^ false_start
uh UH ^ ^ filler
that WDT that ^ OK
you PRP you arg0 OK
used VBD used argM_mod OK
to TO to argM_mod OK
know VB know predicate OK
pretty RB pretty argM_extent OK
cold RB cold argM_extent OK

and CC ^ ^ false_start
so UH ^ ^ filler
how WRB how ^ OK
long RB long ^ OK
have VBP have ^ OK
you PRP you ^ OK
been VBN been ^ OK
with IN with ^ OK
the DT ^ ^ repeat
the DT the ^ OK
boyfriend NN boyfriend ^ OK
you PRP you ^ OK
're VBP 're ^ OK
with IN with ^ OK
now NP-1 now ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
a DT a ^ OK

course NN of ^ false_start
course NN course ^ OK
we PRP we ^ OK
were VBD were ^ OK
both DT both ^ OK
at IN at ^ OK
weird JJ weird ^ OK
t- NNS ^ ^ repeat
times NNS times ^ OK
in IN in ^ OK
our PRP our ^ OK
life NN life ^ OK
too RB too ^ OK

what WP ^ ^ repeat
what WP what ^ OK
d- VBP ^ ^ repeat
do VBP do ^ OK
you PRP you ^ OK
look VB look ^ OK
for IN for ^ OK
in NP-1 in ^ OK
a IN a ^ OK
life DT life ^ OK
partner NN partner ^ OK
cause NN because ^ false_start
i- IN ^ ^ repeat
i PRP i ^ OK
had PRP had ^ OK
never VBD never ^ OK
really RB really ^ OK
given RB given ^ OK
it VBN it ^ OK
any PRP any ^ OK
thought DT thought ^ OK

i PRP i ^ OK
just RB just ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP ^ ^ repeat
did VBD ^ ^ repeat
n't RB ^ ^ repeat
i PRP ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
really RB ^ ^ false_start
loo- VB ^ ^ false_start
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
have VB have ^ OK
any DT any ^ OK
specifications NNS specification s  ^ OK
he PRP he ^ OK
had VBD had ^ OK
to TO to ^ OK
meet VB meet ^ OK
or NP-2 ^ ^ false_start
anything CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

why WRB ^ ^ false_start
this RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
know VB know ^ OK
that IN that ^ OK
there EX there ^ OK
was VBD was ^ OK
anything NN anything ^ OK
specific JJ specific ^ OK
to TO to ^ OK
look VB look ^ OK
for IN for ^ OK

and CC ^ ^ false_start
if IN if ^ OK
we PRP we ^ OK
'd VBD 'd ^ OK
had VBN had ^ OK
him PRP him ^ OK
first JJ first ^ OK
in IN in ^ OK
our PRP our ^ OK
relationship NN relationship ^ OK

i NN i ^ false_start
think PRP think ^ false_start
it PRP it ^ OK
's S-1 's ^ OK
real BES real ^ OK
hard RB hard ^ OK
to JJ to ^ OK
consider TO consider ^ OK
spending VB spending ^ OK
the VBG the ^ OK
rest DT rest ^ OK
of NN of ^ OK
your IN your ^ OK
life PRP life ^ OK
with NN with ^ OK
somebody IN somebody ^ OK
if NN ^ ^ repeat
if IN ^ ^ repeat
y- IN ^ ^ repeat
if XX ^ ^ repeat
if NN if ^ OK
they IN ^ ^ repeat
you IN you ^ OK
do PRP ^ ^ repeat
do PRP do ^ OK
n't VBP ^ ^ repeat
n't VBP n't ^ OK
have RB ^ ^ repeat
have RB have ^ OK
faith VB ^ ^ repeat
faith VB faith ^ OK
in NN in ^ OK
god IN god ^ OK
because NNP because ^ OK
then IN then ^ OK
it RB ^ ^ false_start
just PRP ^ ^ false_start
becomes RB ^ ^ false_start
you VBZ you ^ OK
become PRP become ^ OK
a VBP a ^ OK
statistic DT statistic ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
had VBD ^ ^ repeat
had VBD had ^ OK
just RB ^ ^ false_start
grown VBN grown ^ OK
up RP up ^ OK
in IN in ^ OK
a DT a ^ OK
christian JJ christian ^ OK
home NN home ^ OK
and CC and ^ OK
he PRP he ^ OK
had VBD had ^ OK
n't RB n't ^ OK
basically RB ^ ^ false_start

and CC ^ ^ false_start
uh UH ^ ^ filler
he PRP ^ ^ false_start
is VBZ ^ ^ false_start
just RB ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
something NN something ^ OK
he PRP ^ ^ repeat
he PRP ^ ^ repeat
he PRP he ^ OK
had VBD ^ ^ repeat
'd VBD ^ ^ repeat
had VBD had ^ OK
never RB ^ ^ repeat
never RB never ^ OK
been VBN been ^ OK
taught VBN taught ^ OK

had VBD _ARG_ ^ false_start
never RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
never RB never ^ OK
really RB ^ ^ repeat
really RB really ^ OK
had VBD ^ ^ repeat
had VBD had ^ OK
any DT any ^ OK
real RB real ^ OK
good JJ good ^ OK
role NN role ^ OK
models NNS models ^ OK
for IN for ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
thing NN thing ^ OK

uh UH ^ ^ filler
really RB ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
surprised JJ ^ ^ false_start
our PRP ^ ^ repeat
our PRP ^ ^ false_start
he PRP he ^ OK
did VBD did ^ OK
n't RB n't ^ OK
really RB really ^ OK
have VB have ^ OK
eh UH ^ ^ filler
views NNS views ^ OK
one CD one ^ OK
way NN way ^ OK
or CC or ^ OK
the DT the ^ OK
other JJ other ^ OK

he PRP he ^ OK
was VBD was ^ OK
n't RB n't ^ OK
anti JJ anti ^ OK
christian JJ christian ^ OK
but CC but ^ OK
he PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he ^ OK
just RB just ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
a DT a ^ OK
believer NN believer ^ OK

it PRP ^ ^ false_start
was VBD ^ ^ false_start
and CC ^ ^ false_start
we PRP we ^ OK
did VBD did ^ OK
n't RB n't ^ OK
really RB really ^ OK
fuss VB fuss ^ OK
and CC and ^ OK
fight VB fight ^ OK
about IN about ^ OK
it PRP it ^ OK
either RB either ^ OK

it PRP ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
really RB ^ ^ false_start
a DT ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
knew VBD knew ^ OK
where WRB where ^ OK
i PRP i ^ OK
was VBD was ^ OK
with IN with ^ OK
my PRP my ^ OK
faith NN faith ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
d- VBD ^ ^ false_start
at IN at ^ OK
the DT the ^ OK
time NN time ^ OK
i PRP ^ ^ false_start
really RB ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
um UH ^ ^ filler
it PRP it ^ OK
did SBAR-1 did ^ OK
n't VBD n't ^ OK
bother RB bother ^ OK
me VB me ^ OK
that PRP that ^ OK
he IN he ^ OK
did PRP did ^ OK
n't VBD n't ^ OK
have RB have ^ OK
a VB a ^ OK
lot DT lot ^ OK
of NN of ^ OK
faith IN faith ^ OK

uh UNK ^ ^ filler
d- UNK d- ^ false_start

i- PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
do- VBZ ^ ^ repeat
does VBZ does ^ OK
any DT any ^ OK
of IN of ^ OK
your PRP your ^ OK
fa- NN ^ ^ repeat
family NN family ^ OK
members NNS members ^ OK

i PRP ^ ^ repeat
mean VBP ^ ^ repeat
do VBP ^ ^ false_start
you PRP ^ ^ false_start
i- VBZ ^ ^ repeat
is VBZ is predicate OK
there EX there arg1 OK
that DT that arg2 OK
aspect NN aspect arg2 OK
of IN of arg2 OK
christmas NNP christmas arg2 OK

does VBZ does ^ OK
that DT that arg0 OK
appeal VB appeal predicate OK
to IN to arg1 OK
you PRP you arg1 OK
j- XX ^ ^ false_start
as RB as ^ OK
well RB well ^ OK

see UH ^ ^ filler
i PRP i ^ OK

um UH ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ repeat
just RB ^ ^ false_start
i PRP i arg0 OK
e- XX ^ ^ false_start
really RB really ^ OK
have VBP have ^ OK
come VBN come ^ OK
to TO to ^ OK
hate VB hate predicate OK
christmas NNP christmas arg1 OK

it PRP it arg1 OK
's BES 's predicate OK
like UH ^ ^ filler
my PRP my arg2 OK
least RBS least arg2 OK
favorite JJ favorite arg2 OK
holiday NN holiday arg2 OK
um UH ^ ^ filler
j- XX ^ ^ false_start
largely RB largely ^ OK
because IN because ^ OK
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not arg2 OK
religious JJ religious arg2 OK

and CC ^ ^ false_start
for IN for ^ OK
the DT the ^ OK
most JJS most ^ OK
part NN part ^ OK
i PRP i arg0 OK
guess VBP guess predicate OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
kind RB kind arg2 OK
of RB of arg2 OK
cynical JJ cynical arg2 OK

because IN because ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
think VB think ^ OK
very RB very ^ OK
many JJ many ^ OK
other JJ other ^ OK
people NNS people ^ OK
are VBP are ^ OK

like UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
that IN that arg1 OK
they PRP they arg0 OK
're VBP 're arg1 OK
celebrating VBG celebrating arg1 OK
like UH ^ ^ filler
christmas NNP christmas arg1 OK
um UH ^ ^ filler
you PRP ^ ^ repeat
know VBP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
theoretically RB theoretically arg2 OK
as IN ^ ^ repeat
as IN as arg2 OK
being VBG ^ ^ repeat
being VBG being arg2 OK
the DT the arg2 OK
birth NN birth arg2 OK
of IN of arg2 OK
christ NNP christ arg2 OK

and CC ^ ^ false_start
stuff NN ^ ^ false_start
because IN because ^ OK

and CC ^ ^ false_start
that DT ^ ^ repeat
that DT that arg1 OK
sounds VBZ sounds predicate OK
a- DT ^ ^ repeat
a DT a arg2 OK
lot NN lot arg2 OK
cooler JJR cooler arg2 OK
to PP-1 to arg3 OK
me IN me arg3 OK
than PRP ^ ^ repeat
than IN than ^ OK
the IN the ^ OK
other DT other ^ OK
stuff JJ stuff ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
that XX ^ ^ filler
y- XX ^ ^ repeat
you PRP ^ ^ false_start
like UH ^ ^ filler
see VBP ^ ^ filler
these DT these arg0 OK
parents NNS parents arg0 OK
y- XX ^ ^ repeat
that WDT ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
go VB go predicate OK
into IN into arg4 OK
like UH ^ ^ filler
this DT these arg4 false_start
almost RB almost arg4 OK
crazed JJ crazed arg4 OK
mobs NNS mobs arg4 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
at IN at ^ OK
the DT the ^ OK
shopping NN shopping ^ OK
m- NNS ^ ^ repeat
malls NNS malls ^ OK
trying VBG trying predicate OK
to TO to arg1 OK
pick VB ^ ^ repeat
out RP ^ ^ false_start
or UH ^ ^ false_start
pick VB pick arg1 OK
up RP up arg_particl OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg1 OK
latest JJS latest arg1 OK
fashionable JJ fashionable arg1 OK
toys NNS toys arg1 OK
or CC ^ ^ false_start
whatever WP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
their PRP their arg0 OK
kids NNS kids arg0 OK
absolutely RB absolutely ^ OK
have VBP have ^ OK
to TO to ^ OK
have VB have predicate OK

because UNK because ^ OK
i UNK i ^ OK
'm UNK 'm ^ OK
of UNK of ^ OK
like UNK ^ ^ filler
these UNK these ^ OK

whatever WDT whatever ^ OK
th- DT ^ ^ false_start

remember VB remember ^ false_start
some DT some arg1 OK
lady NN lady arg1 OK
her PRP ^ ^ false_start
got VBD got ^ OK
trampled VBN trampled predicate OK
a DT a argM_tmp OK
couple NN couple argM_tmp OK
years NNS years argM_tmp OK
ago RB ago argM_tmp OK
because IN because ^ OK
they PRP they arg0 OK
had VBD had predicate OK
that DT that arg1 OK
tickle VB tickle arg1 OK
me PRP me arg1 OK
elmo NNP elmo arg1 OK
doll NN doll arg1 OK

^ ^ ^ ^ false_start
i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP said predicate false_start
hang VB hang arg1 OK
on RP on arg1 OK
people NNS people arg1 OK

that DT that arg1 OK
's BES 's predicate OK
interesting JJ interesting arg2 OK
because IN because ^ OK
i- PRP ^ ^ false_start
i PRP ^ ^ repeat
like UH ^ ^ filler
i PRP i arg0 OK
remember VBP ^ ^ repeat
remember VBP remember predicate OK
saying VBG saying arg1 OK
something NN something arg1 OK
similar JJ similar arg1 OK
to IN to arg1 OK
that DT that arg1 OK
like UH ^ ^ filler
probably RB probably argM_tmp OK
like UH ^ ^ filler
almost RB almost argM_tmp OK
twenty CD twenty argM_tmp OK
years NNS ^ ^ repeat
years NNS years argM_tmp OK
ago RB ^ ^ repeat
ago RB ago argM_tmp OK

and CC ^ ^ false_start
my PRP ^ ^ repeat
my PRP my arg0 OK
stepmother NN stepmother arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
every DT every arg1 OK
holiday NN holiday arg1 OK
is VBZ is arg1 OK
about IN about arg2 OK
children NNS children arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
except IN except arg1 OK
for IN for arg1 OK
mother NN ^ ^ repeat
mother NN mother arg1 OK
's POS ^ ^ repeat
's POS 's arg1 OK
day NN day arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and arg1 OK
father NN father arg1 OK
's POS 's arg1 OK
day NN day arg1 OK

but CC but ^ OK
she PRP ^ ^ repeat
she PRP she ^ OK
's BES ^ ^ repeat
like RP ^ ^ repeat
was VBD ^ ^ false_start
like RP said ^ false_start

sh- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
she PRP she arg0 OK
insisted VBD insisted predicate OK
that IN that arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
every DT every arg1 OK
holiday NN holiday arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kids NNS kids arg0 OK
got VBD got arg1 OK
a DT a arg1 OK
whole JJ whole arg1 OK
bunch NN bunch arg1 OK
of IN of arg1 OK
candy NN candy arg1 OK
and CC ^ ^ false_start
or CC or arg1 OK
fireworks NNS fireworks arg1 OK
or CC ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
or CC or arg1 OK
presents NNS presents arg1 OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start
and CC ^ ^ false_start
stuff NN ^ ^ false_start

i PRP i ^ OK
think VBP think ^ OK
ev- XX ^ ^ false_start
or CC ^ ^ false_start
sh- PRP ^ ^ false_start

i PRP i arg0 OK
wish VBP wish predicate OK
they PRP ^ ^ false_start
that IN that arg1 OK
we PRP we arg0 OK
co- MD ^ ^ repeat
could MD could arg1 OK
have VB have arg1 OK
more JJR ^ ^ repeat
of IN ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
more RBR ^ ^ false_start
e- XX ^ ^ false_start
like UH ^ ^ filler
an DT an arg1 OK
international JJ international arg1 OK
peace NN peace arg1 OK
day NN day arg1 OK

and CC ^ ^ false_start
stuff NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN ^ ^ filler
an DT ^ ^ repeat
i- JJ ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
an DT an ^ OK
international JJ international ^ OK
cease VB cease ^ OK
fire NN fire ^ OK
week NN week ^ OK
or CC or ^ OK
month NN month ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

that DT that ^ OK
would MD would ^ OK
be VB be ^ OK
hm UH ^ ^ filler

s- XX ^ ^ false_start
i PRP i arg0 OK
would MD would ^ OK
vote VB vote predicate OK
for IN for arg1 OK
the DT the arg1 OK
president NN president arg1 OK
that WDT that arg0 OK
enacted VBN enacted predicate OK
that DT that arg1 OK

i PRP i arg0 OK
heard VBD heard predicate OK
that DT that arg1 OK
this DT this argM_tmp OK
morning NN morning argM_tmp OK
too RB too argM_adverb OK
on IN on argM_loc OK
the DT the argM_loc OK
news NN news argM_loc OK

um UH ^ ^ filler
so UH ^ ^ false_start
um UH ^ ^ filler
yeah UH ^ ^ filler
basically RB basically argM_adverb OK
m- XX ^ ^ false_start
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
definitely RB definitely argM_extent OK
a DT a arg2 OK
threat NN threat arg2 OK

um UH ^ ^ filler
do VBP do ^ OK
you PRP you arg0 OK
think VB think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
something NN something arg2 OK
the IN the arg0 false_start
u. DT u. arg0 false_start
we PRP ^ ^ false_start
s. NNP s. arg0 false_start
should MD should argM_mod OK
be VB be argM_mod OK
uh UH ^ ^ filler
participating VBG participating arg2 OK
in IN in arg_particl OK
as NP-1 ^ ^ false_start

eh UH ^ ^ filler
trying VBG trying ^ OK
to TO to ^ OK
stop VB stop ^ OK
them PRP them ^ OK

i PRP ^ ^ repeat
guess VBP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
it PRP it arg2 OK
for IN for argM_other OK
south NNP south argM_other OK
korea NNP korea argM_other OK

yeah UH ^ ^ filler
um UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
obviously RB obviously ^ OK
iraq NNP iraq ^ OK

um UH ^ ^ filler
usually RB usually ^ OK
a DT a ^ OK
big JJ big ^ OK
one NN one ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
that IN that arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
understand VBP understand arg1 OK
the DT the arg1 OK
terrorist JJ terrorist arg1 OK
threat NN threat arg1 OK

but CC but arg2 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VBP ^ ^ repeat
think VB think predicate OK
that IN ^ ^ repeat
that IN that arg1 OK
iraq NNP iraq arg1 OK
is VBZ is arg1 OK
the DT the arg2 OK
one NN one arg2 OK
so RB so arg2 OK
far RB far arg2 OK
key NN as ^ false_start
being VBG being arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
key NN key arg2 OK
to IN to arg2 OK
that DT that arg2 OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
that DT there ^ false_start
's BES are predicate false_start
uh UH ^ ^ filler
different JJ different arg0 OK
g- XX ^ ^ repeat
groups NNS groups arg0 OK
that WDT that arg1 OK
are VBP are arg1 OK
doing VBG doing arg1 OK
that DT that arg1 OK

um UH ^ ^ filler
but CC but argM_adverb OK
at IN at argM_tmp OK
the DT the argM_tmp OK
same JJ same argM_tmp OK
time NN time argM_tmp OK
like IN ^ ^ false_start
foreign JJ ^ ^ false_start
uh UH ^ ^ filler
wha- UH ^ ^ false_start
we PRP we arg0 OK
might MD might argM_mod OK
not RB not argM_neg OK
just RB just argM_adverb OK
be VB be ^ OK
hearing VBG hearing predicate OK
about IN about arg_particl OK
it PRP it arg1 OK
but CC but argM_adverb OK
iraq NNP ^ ^ false_start
they PRP ^ ^ false_start
they PRP they arg0 OK
does VBZ ^ ^ false_start
do VBP do ^ OK
n't RB ^ ^ false_start
n't RB n't argM_neg OK
seem VB ^ ^ false_start
seem VB seem predicate OK
to TO to arg2 OK
're VBP ^ ^ false_start
be VB be arg2 OK
having VBG ^ ^ false_start
having VBG having arg2 OK
any DT ^ ^ false_start
any DT any arg1 OK
terrorists NNS terrorists arg1 OK
in IN in argM_loc OK
their PRP their argM_loc OK
country NN country argM_loc OK

all RB all argM_adverb OK
though IN though argM_adverb OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
we PRP ^ ^ repeat
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
w- PRP ^ ^ repeat
we PRP we arg0 OK
might MD ^ ^ repeat
might MD might argM_mod OK
have VB ^ ^ repeat
have VB have predicate OK
some DT some arg1 OK
of IN of arg1 OK
our PRP ^ ^ repeat
uh UH ^ ^ filler
our PRP our arg1 OK
s- XX ^ ^ repeat
people NNS people arg1 OK
over IN over arg1 OK
there RB there arg1 OK
um UH ^ ^ filler
probably RB probably argM_adverb OK

i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES are predicate false_start
some DT some arg1 OK
agents NNS agents arg1 OK
over IN over argM_mnr OK
probably RB ^ ^ repeat
over IN ^ ^ repeat
there RB ^ ^ repeat
there RB there argM_mnr OK
that WDT that arg1 OK
they PRP they arg0 OK
would MD would argM_mod OK
call VB call arg1 OK
e- XX ^ ^ filler
m- XX ^ ^ filler
terrorists NNS terrorists arg2 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

neither RB neither ^ OK
do VBP do ^ OK
i PRP i ^ OK

oh UH ^ ^ false_start
yeah UH ^ ^ false_start
actually UH actually argM_adverb OK
i PRP i arg1 OK
'm VBP 'm predicate OK
originally RB originally argM_extent OK
from IN from arg2 OK
minnesota NNP minnesota arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
we PRP ^ ^ false_start
in IN ^ ^ false_start
at IN at argM_loc OK
the DT the argM_loc OK
mall NNP mall argM_loc OK
of IN of argM_loc OK
america NNP america argM_loc OK
they PRP they arg0 OK
have VBP have predicate OK
uh UH ^ ^ filler
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
people NNS people arg1 OK
uh UH who arg1 filler
who WP ^ ^ OK
come VBN come arg1 OK
over RB over arg1 OK
from IN from arg1 OK
japan NNP japan arg1 OK
and CC and arg1 OK
other JJ other arg1 OK
countries NNS countries arg1 OK
um UH ^ ^ filler
with IN with arg1 OK
s- JJ ^ ^ repeat
such JJ such arg1 OK
prices NNS prices arg1 OK
as IN as arg1 OK
japan NNP japan arg0 OK
does VBZ does arg1 OK

and CC ^ ^ false_start
they PRP they arg0 OK
actually RB actually argM_adverb OK
will MD will ^ OK
travel VB travel predicate OK
over RB over arg1 OK
to IN to arg1 OK
the DT the arg1 OK
mall NN mall arg1 OK
of IN of arg1 OK
america NNP america arg1 OK
travel VB ^ ^ false_start
buy VB and ^ false_start
get VB ^ ^ repeat
um UH ^ ^ filler
uh UH ^ ^ filler
get VB ^ ^ repeat
buy VB buy predicate OK
their PRP ^ ^ repeat
m- XX ^ ^ repeat
m- XX ^ ^ repeat
things NNS things arg1 OK
over IN over ^ OK
in IN in argM_loc OK
america NNP america argM_loc OK
n- XX and ^ OK
travel VB travel predicate OK
back RB back arg1 false_start

there EX there ^ OK
's BES are predicate false_start
mm UH ^ ^ filler
mm UH ^ ^ filler
too RB ^ ^ repeat
yeah UH ^ ^ filler
too RB too arg1 OK
many JJ ^ ^ repeat
many JJ many arg1 OK
people NNS people arg1 OK
in IN in argM_loc OK
between IN between argM_loc OK
the DT the argM_loc OK
steps NNS steps argM_loc OK

wow UH wow argM_discou OK
tha- DT ^ ^ repeat
that DT that arg0 OK
makes VBZ makes predicate OK
sense NN sense arg1 OK
i PRP ^ ^ false_start
suppose VBP ^ ^ false_start

i PRP ^ arg2 false_start
suppose VBP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
where WRB where arg2 OK
internet NNP the ^ false_start
internet NNP internet arg1 OK
is VBZ is arg2 OK
really RB really argM_extent OK
great JJ great arg2 OK
for IN for arg2 OK
our PRP our arg2 OK
companies NNS companies arg2 OK
because ADVP-1 because arg2 OK
then IN then arg2 OK
they RB they arg0 OK
can PRP can argM_mod OK
go MD go arg2 OK
over VB over arg4 OK
and RB and arg2 OK
n- CC ^ ^ repeat
buy XX buy arg2 OK
it VB it arg1 OK
from PRP from arg2 OK
us IN us arg2 OK

but CC ^ ^ repeat
but CC but argM_adverb OK
then RB ^ ^ false_start
again RB ^ ^ false_start
we PRP we arg0 OK
're VBP 're ^ OK
buying VBG buying predicate OK
all PDT all arg1 OK
the DT the arg1 OK
japanese JJ japanese arg1 OK
cars NNS cars arg1 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
how WRB how arg1 OK
much JJ much arg1 OK
of IN of arg1 OK
the DT the arg1 OK
parts NNS parts arg1 OK
are VBP are arg1 OK
really RB really argM_extent OK
there RB there arg2 OK

okay UH ^ ^ filler
well UH ^ ^ false_start
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
what WP what arg1 OK
else RB else arg1 OK
to TO to arg1 OK
say VB say arg1 OK

and CC ^ ^ false_start
my PRP my arg1 OK
father NN father arg1 OK
died VBD died predicate OK
what UH ^ ^ filler
about RB about argM_tmp OK
two CD two argM_tmp OK
years NNS years argM_tmp OK
ago RB ago argM_tmp OK

i PRP i arg0 OK
have VBP have predicate OK
my PRP my arg1 OK
sister NN sister arg1 OK
who WP who arg1 OK
's BES 's predicate OK
in IN in arg2 OK
california NNP california arg2 OK

she PRP she arg0 false_start
did VBD did ^ false_start
n't RB n't argM_neg false_start
talk VB talk predicate false_start
to IN to arg2 false_start
me PRP me arg2 false_start
for IN ^ ^ filler
for IN for argM_tmp OK
about RB about argM_tmp OK
forty CD forty argM_tmp OK
years NNS years argM_tmp OK

so RB ^ ^ false_start
now RB now argM_tmp OK
she PRP she arg0 OK
talks VBZ talks predicate OK
to IN to ^ OK
me PRP me arg2 OK
like IN ^ ^ false_start
w- XX ^ ^ false_start
like IN like ^ OK
it PRP it ^ OK
's BES 's predicate OK
old JJ old arg1 OK
home NN home arg1 OK
week NN week arg1 OK

sh- PRP ^ ^ repeat
yeah UH yeah ^ OK

she PRP she arg1 OK
's BES 's predicate OK
in IN in arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
biggest JJS biggest arg2 OK
dust NN dust arg2 OK
bowl NN bowl arg2 OK
in IN in argM_loc OK
the DT the argM_loc OK
west NNP west argM_loc OK
bakersfield NNP bakersfield argM_loc OK

so RB ^ ^ false_start
then RB then ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
like UH thinking predicate false_start
you PRP you arg1 OK
know VBP know arg1 OK

me PRP me ^ OK
and CC and ^ OK
my PRP my ^ OK
mother NN mother ^ OK
when WRB ^ ^ false_start
an- XX ^ ^ false_start
before IN before ^ OK
she PRP she ^ OK
died VBD died ^ OK
was VBD was ^ OK
okay JJ okay ^ OK

they PRP ^ ^ repeat
they PRP they arg0 OK
uh UH ^ ^ filler
kind RB kind ^ OK
of RB of ^ OK
mate- JJ ^ ^ false_start
have VBP have predicate OK
a DT a arg1 OK
maternali- JJ ^ ^ repeat
um UH ^ ^ filler
m- JJ ^ ^ repeat
maternal JJ maternal arg1 OK
instinct NN instinct arg1 OK

l- IN ^ ^ filler
oh UH ^ ^ filler
like IN like ^ OK
the DT the ^ OK
mo- NN ^ ^ repeat
mother NN mother ^ OK
bird NN bird ^ OK
who WP who ^ OK
took VBD took ^ OK
care NN care ^ OK
of IN of ^ OK
her PRP her ^ OK
birdlets NNS birdlets ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

well UH ^ ^ filler
see UH ^ ^ filler
when WRB ^ ^ repeat
when WRB when argM_tmp OK
you PRP ^ ^ repeat
they PRP they argM_tmp OK
they CC ^ ^ false_start
g- VBP ^ ^ repeat
get VBP get argM_tmp OK
older JJR older argM_tmp OK
and ADVP-TMP- 1 and argM_tmp OK
become PRP become argM_tmp OK
grandparents VBP grandparents argM_tmp OK
and NNS ^ ^ filler
then ADVP-TMP- 1 ^ ^ repeat
then RB then ^ OK
the CC ^ ^ repeat
the DT ^ ^ repeat
the RB the arg0 OK
game DT game arg0 OK
changes DT changes predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VB ^ ^ filler
as IN as ^ OK
you PRP you ^ OK
well RB well ^ OK
know VBP know ^ OK

the DT ^ ^ repeat
the DT the arg1 OK
shoe NN shoe arg1 OK
sho- XX ^ ^ repeat
's BES 's predicate OK
on IN on arg2 OK
the DT the arg2 OK
other JJ other arg2 OK
foot NN foot arg2 OK
now RB ^ ^ repeat
now RB now argM_tmp OK

now UH ^ ^ false_start
if IN ^ ^ repeat
if IN ^ ^ false_start
you PRP ^ ^ false_start
became VBD ^ ^ false_start
or UH ^ ^ false_start
y- XX ^ ^ false_start
when WRB when argM_tmp OK
your PRP your argM_tmp OK
kid NN kid argM_tmp OK
has VBZ has argM_tmp OK
a DT a argM_tmp OK
kid NN kid argM_tmp OK
then ADVP-TMP- 1 then ^ OK
you RB you arg1 OK
become PRP become predicate OK
a VBP a arg2 OK
grandparent DT grandparent arg2 OK

well UH ^ ^ filler
that- PRP ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
where WRB where arg2 OK
the DT the arg1 OK
family NN family arg1 OK
thing NN thing arg1 OK
comes VBZ comes arg2 OK
in RB in arg4 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
because UH ^ ^ false_start
how WRB ^ ^ repeat
what WP what ^ OK
does VBZ does ^ OK
family NN family arg0 OK
mean VB mean predicate OK
to IN to ^ OK
you PRP you ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they arg0 OK
can MD ^ ^ repeat
can MD can ^ OK
kick VB ^ ^ repeat
kick VB kick predicate OK
in RP in arg_particl OK
their PRP their arg1 OK
two CD two arg1 OK
bits NNS bits arg1 OK
worth NN worth arg1 OK
and CC and ^ OK
hopefully RB hopefully ^ OK
help VB help predicate OK
out RP out ^ OK
when WRB ^ ^ repeat
when WRB when argM_tmp OK
you PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're argM_tmp OK
moving VBG moving argM_tmp OK

whether IN ^ ^ repeat
whether IN whether ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
aw JJ ^ ^ repeat
aware JJ aware ^ OK
of IN of ^ OK
it PRP it ^ OK
or CC or ^ OK
not RB not ^ OK

from IN from ^ OK
that DT that ^ OK
point NN point ^ OK
of IN of ^ OK
view NN view ^ OK

i PRP ^ ^ false_start
've VBP ^ ^ false_start
actually RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
ne- RB ^ ^ repeat
never RB never argM_neg OK
met VBN met predicate OK
my PRP my arg1 OK
sister NN sister arg1 OK
's POS 's arg1 OK
kids NNS kids arg1 OK
except IN except ^ OK
except IN for ^ false_start
one CD one ^ OK

so RB so ^ OK
hopefully RB hopefully ^ OK
i PRP ^ ^ filler
i PRP i ^ OK
c- MD ^ ^ filler
can MD can ^ OK
ver- RB ^ ^ repeat
very RB very ^ false_start
soon RB soon ^ false_start

we PRP ^ ^ repeat
we PRP we arg0 OK
have VBP have predicate OK
something NN something arg1 OK
coming VBG coming arg1 OK
without IN without ^ OK
getting VBG getting predicate OK
too RB too arg1 OK
uh UH ^ ^ filler
in- IN ^ ^ repeat
into IN into arg1 OK
it PRP it arg1 OK

w- XX ^ ^ repeat
w- XX ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX there ^ OK
's BES 's predicate OK
an DT an arg1 OK
old JJ old arg1 OK
saying NN saying arg1 OK

where WRB where argM_loc OK
there EX there argM_loc OK
's BES 's argM_loc OK
a DT a argM_loc OK
will NN will argM_loc OK
there ADVP-LOC- 1 there ^ OK
's EX 's predicate OK
relatives BES relatives arg1 OK
l- NNS ^ ^ repeat
like IN like arg1 OK
vultures IN vultures arg1 OK
on NNS on arg1 OK
the IN the arg1 OK
back DT back arg1 OK
fence JJ fence arg1 OK

and CC ^ ^ false_start
i PRP i arg1 OK
may MD may ^ OK
ha- XX ^ ^ false_start
in IN ^ ^ false_start
fact NN ^ ^ false_start
take VB take predicate OK
a DT a arg1 OK
trip NN trip arg1 OK
out IN out arg1 OK
there RB there arg1 OK
somehow RB somehow arg1 OK
just RB and ^ false_start
just RB just ^ false_start
show VB show predicate false_start
up RP up arg_particl OK
whether IN whether ^ OK
they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
see VB see arg1 OK
me PRP me arg1 OK
or CC or arg1 OK
not RB not arg1 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
kind RB ^ ^ repeat
kind RB kind ^ OK
of RB ^ ^ repeat
of RB of ^ OK
we- VBD ^ ^ repeat
welcome VBP welcome predicate OK
them PRP them arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD ^ ^ repeat
'm VBP 'm predicate OK
not RB ^ ^ repeat
not RB not argM_neg OK
like IN like arg2 OK
the DT the arg2 OK
vulture NN vulture arg2 OK
on IN on arg2 OK
the DT the arg2 OK
back JJ back arg2 OK
fence NN fence arg2 OK

they PRP they ^ OK

you UNK ^ ^ filler
know UNK ^ ^ filler
yeah UNK ^ ^ filler
like UNK like ^ OK
with UNK with ^ OK
the UNK the ^ OK
greedy UNK greedy ^ OK
ones UNK ones ^ OK
is- UNK is- ^ OK

i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
buyer NN buyer arg1 OK
in IN ^ ^ false_start
uh UH ^ ^ filler
up RB up argM_loc OK
in IN in argM_loc OK
seattle NNP seattle argM_loc OK
washington NNP washington argM_loc OK

so UH ^ ^ filler
that IN ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
ship VBP ship predicate OK
them PRP them arg1 OK
out RP out argM_dir OK

it PRP ^ ^ false_start
was VBD ^ ^ false_start
nice JJ ^ ^ false_start
tod- RB ^ ^ false_start
it PRP it arg1 OK
was VBD was predicate OK
just RB just arg2 OK
jacket NN jacket arg2 OK
weather NN weather arg2 OK
here RB here arg2 OK
today RB today arg2 OK

snow NN snow ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
sleet NN sleet ^ OK
something NN something ^ OK

but CC ^ ^ repeat
but CC ^ ^ false_start
i PRP i arg0 OK
hate VBP hate predicate OK
it PRP it arg1 OK

because IN because argM_cause OK
it PRP it argM_cause OK
's BES 's argM_cause OK
not RB not argM_cause OK
year RB year argM_cause OK
round RB round argM_cause OK
we PRP we arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
drive VB drive predicate OK
well RB well argM_mnr OK
in IN in arg1 OK
it PRP it arg1 OK
here RB ^ ^ false_start

and CC ^ ^ false_start
see UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
grow VB grow predicate OK
up RP up arg_particl OK
with IN with argM_mnr OK
it PRP it argM_mnr OK

i PRP i arg1 OK
was VBD was ^ OK
raised VBN raised predicate OK
in IN in argM_loc OK
lodi NNP lodi argM_loc OK
california NNP california argM_loc OK
and CC ^ ^ repeat
a- CC ^ ^ repeat
and CC and ^ OK
then RB then argM_adverb OK
came VBD came predicate OK
to IN to arg4 OK
oklahoma NNP oklahoma arg4 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
like VB like predicate OK
oklahoma NNP oklahoma arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
good JJ good arg2 OK
place NN place arg2 OK
to TO to arg2 OK
have VB have arg2 OK
a DT a arg1 OK
family NN family arg1 OK

well UH ^ ^ filler
my PRP my arg1 OK
daughter NN daughter arg1 OK
was VBD was predicate OK
a DT a arg2 OK
flag NN flag arg2 OK
girl NN girl arg2 OK
in IN in arg2 OK
the DT the arg2 OK
band NN band arg2 OK
on IN ^ ^ false_start
the DT ^ ^ false_start
for IN for arg2 OK
football NN football arg2 OK

so RB ^ ^ filler
we PRP we arg1 OK
were VBD were predicate OK
outside RB outside arg2 OK
at IN at arg2 OK
the DT the arg2 OK
football NN football arg2 OK
games NNS games arg2 OK
at IN at arg2 OK
night NN night arg2 OK
in IN in arg2 OK
freezing JJ freezing arg2 OK
weather NN weather arg2 OK

i UNK i ^ OK
i- UNK ^ ^ repeat
would UNK would ^ OK
n't UNK n't ^ OK
n- UNK ^ ^ repeat
no UNK ^ ^ repeat
let UNK let ^ OK
my UNK my ^ OK
kid UNK kid ^ OK

and CC ^ ^ repeat
n- RB ^ ^ repeat
and CC ^ ^ false_start
not RB not ^ OK
just RB just ^ OK
that DT that ^ OK
but CC but ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
the DT the ^ OK
other JJ other ^ OK
cartoons NNS cartoons ^ OK
and CC ^ ^ repeat
and CC and ^ OK
children NNS children ^ OK
programs NNS programs ^ OK
that WDT that ^ OK
's BES 're ^ false_start
out IN out ^ OK
here RB here ^ OK
too RB too ^ OK

i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
seven CD seven arg1 OK
year NN year arg1 OK
old JJ old arg1 OK

uh UH ^ ^ filler
that DT that ^ OK
's BES 's predicate OK
because IN because arg2 OK
they PRP they arg0 OK
're VBP 're arg2 OK
probably RB probably arg2 OK
not RB ^ ^ repeat
not RB not arg2 OK
parents NNS parents arg2 OK
or CC or arg2 OK
not RB not arg2 OK
seein- VBG ^ ^ repeat
seeing VBG seeing arg2 OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the arg1 OK
point NN point arg1 OK

we- UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
so IN ^ ^ false_start
that IN ^ ^ false_start
th- DT ^ ^ repeat
the DT ^ ^ false_start
kid NN ^ ^ false_start
's POS ^ ^ false_start
eyes NNS ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
well UH ^ ^ filler
how WRB how ^ OK
is VBZ is ^ OK
it PRP it arg0 OK
affecting VBG affecting predicate OK
them PRP them arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
like UH ^ ^ filler
uh UH ^ ^ filler
because IN because ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
get VBP get predicate OK
u- XX ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
this DT ^ ^ repeat
the DT ^ ^ repeat
the DT the arg1 OK
same JJ same arg1 OK
thing NN thing arg1 OK
with IN with arg1 OK
these DT these arg1 OK
movies NNS movies arg1 OK
one CD one ^ OK
thousand CD thousand ^ OK
and CC and ^ OK
one CD one ^ OK
dalmatians NNS dalmatians ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
then RB then ^ OK
i PRP i arg0 OK
get VBP get predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
w- XX ^ ^ repeat
a DT a arg1 OK
kickback NN kickback arg1 OK
from IN from arg1 OK
their PRP their arg1 OK
friends NNS friends arg1 OK
' POS ' arg1 OK
parents NNS parents arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
well UH ^ ^ filler
your PRP your arg0 OK
daughter NN daughter arg0 OK
's BES 's ^ OK
teaching VBG teaching predicate OK
m- PRP ^ ^ repeat
my PRP my arg2 OK
daughter NN daughter arg2 OK
this DT this arg1 OK
word NN word arg1 OK

but CC but ^ OK
then RB then ^ OK
again RB again ^ OK
when WRB ^ ^ false_start
cartoons NNS ^ ^ false_start
were VBD ^ ^ false_start
nowadays RB ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
how WRB how arg2 OK
old JJ old arg2 OK
you PRP you arg1 OK
are VBP are arg1 OK

but UNK but ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
i UNK i ^ OK
'm UNK 'm ^ OK
back UNK back ^ OK
in UNK in ^ OK
the UNK the ^ OK

and CC ^ ^ false_start
nowadays RB nowadays ^ OK
it PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
seems VBZ seems predicate OK
like IN ^ ^ repeat
like IN like arg2 OK
all PDT all arg0 OK
these DT these arg0 OK
video NN video arg0 OK
games NNS games arg0 OK
and CC and arg0 OK
things NNS things arg0 OK
it NP-1 ^ ^ false_start
kids NNS kids arg0 OK
watch VBP watch arg0 OK
takes PRP take arg2 false_start
effect VBZ effect arg1 OK
on NN on arg1 OK
them IN them arg1 OK

and CC ^ arg1 false_start
they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
do VB do arg1 OK
some DT some arg1 OK
crazy JJ crazy arg1 OK
stuff NN stuff arg1 OK
or CC or arg1 OK
re- VBD ^ ^ repeat
reacted VBN react arg1 false_start
in IN in arg2 OK
a DT a arg2 OK
awful JJ awful arg2 OK
way NN way arg2 OK
^ ^ when ^ false_start
somebody NN somebody arg1 OK
's BES 's arg1 OK
getting VBG getting arg1 OK
hurt VBN hurt arg2 OK

and CC and ^ OK
uh UH ^ ^ filler

i PRP i ^ OK
really RB really ^ OK

uh UH ^ ^ filler
of IN of ^ OK
course NN course ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
kids NNS kids arg1 OK
're VBP ^ ^ repeat
are VBP are predicate OK
interest- JJ ^ ^ repeat
interested JJ interested arg2 OK
in IN in arg2 OK
learning VBG learning arg2 OK

a- CC ^ ^ repeat
and CC ^ ^ false_start
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler

say UH ^ ^ false_start
and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
do VBP ^ ^ repeat
do VB do arg1 OK
it PRP it arg1 OK
even RB even arg1 OK
more RBR more arg1 OK

and CC and ^ OK
uh UH ^ ^ filler

what WP what ^ OK
during IN during ^ OK
the DT the ^ OK
daytime NN daytime ^ OK

well UH ^ ^ false_start
then RB then ^ OK
again RB again ^ OK
well UH ^ ^ filler
if IN ^ ^ false_start
you PRP ^ ^ false_start
look VBP ^ ^ false_start
at IN ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
if IN if arg1 OK
you PRP you arg0 OK
have VBP have arg1 OK
uh UH ^ ^ filler
f. NNP f. arg1 OK
x. NNP x. arg1 OK
x. NNP x. arg1 OK
out IN out arg1 OK
there RB there arg1 OK

and CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
they PRP they arg1 OK
get VBP get predicate OK
pretty RB pretty arg2 OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
into IN into arg2 OK
some DT some arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
scenes NNS scenes arg1 OK
th- XX ^ ^ repeat
that IN that arg2 OK
uh UH ^ ^ filler
where WRB ^ ^ false_start
it PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
should MD should arg2 OK
be VB be arg2 OK
on IN on arg2 OK
h. NNP h. arg2 OK
b. NNP b. arg2 OK
o. NNP o. arg2 OK

that WDT ^ ^ repeat
that WDT ^ ^ false_start
n- VBD ^ ^ repeat
needed VBD ^ ^ false_start
her PRP ^ ^ false_start
uh UH ^ ^ filler
to TO ^ ^ false_start
have VB ^ ^ false_start
uh UH ^ ^ filler
she PRP she arg1 OK
was VBD was predicate OK
in IN in arg2 OK
her PRP her arg2 OK
ninth JJ ninth arg2 OK
month NN month arg2 OK

and CC ^ ^ false_start
she PRP she arg0 OK
needed VBD needed predicate OK
her PRP her arg0 OK
husband NN husband arg0 OK
to TO to arg1 OK
have VB have arg1 OK
sex NN sex arg1 OK
with IN with arg1 OK
her PRP her arg1 OK
in IN in ^ OK
order NN order ^ OK
for IN for ^ OK
her PRP her arg0 OK
to TO to ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
m- XX ^ ^ filler
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
bring VB bring predicate OK
down RP down arg2 OK
the DT the arg1 OK
child NN child arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

and CC ^ ^ false_start
here RB here ^ OK
they PRP they arg0 OK
were VBD were ^ OK
showing VBG showing predicate OK
all PDT ^ ^ repeat
all PDT all arg1 OK
these DT ^ ^ repeat
these DT these arg1 OK
positions NNS ^ ^ repeat
positions NNS positions arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
until IN until ^ OK
she PRP she arg0 OK
a- XX ^ ^ repeat
orgasm NN orgasmed predicate false_start

uh UH ^ arg2 filler
f. NNP f. arg1 OK
x. NNP x. arg1 OK
x. NNP x. arg1 OK
is VBZ is ^ OK
getting VBG becoming predicate false_start
kind RB kind arg2 OK
of RB of arg2 OK
porno JJ like ^ false_start
porno JJ porno arg2 OK
here RB here arg2 OK

well UH ^ ^ filler
i PRP i arg0 OK
was VBD was ^ OK
going VBG going argM_mod OK
to TO to argM_mod OK
say VB say predicate OK
if IN if argM_adverb OK
i PRP i arg0 OK
had VBD had arg1 OK
all PDT all arg1 OK
the DT the arg1 OK
money NN money arg1 OK
though RB ^ ^ false_start
i PRP i arg0 OK
might MD might argM_mod OK
open VB open arg1 OK
a DT a arg1 OK
nightclub NN nightclub arg1 OK
just RB just argM_adverb OK
because IN because argM_cause OK
it PRP it arg1 OK
would MD would argM_mod OK
be VB be argM_cause OK
less JJR less argM_extent OK
work NN work arg2 OK
for IN for arg2 OK
me PRP me arg2 OK

just RB ^ ^ false_start
because IN ^ ^ false_start
like UH ^ ^ filler
well UH ^ ^ filler
if IN if argM_adverb OK
i PRP i arg0 OK
owned VBD owned predicate OK
a DT a arg1 OK
restaurant NN restaurant arg1 OK
i PRP i arg1 OK
would MD would argM_mod OK
want VB want predicate OK
to TO to arg1 OK
be VB be arg1 OK
the DT the arg2 OK
chef NN chef arg2 OK

um UH ^ ^ filler
and CC ^ ^ false_start
so RB ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
just RB just argM_adverb OK
really RB really argM_adverb OK
hard JJ hard arg2 OK
work NN work arg2 OK
backbreaking VBG backbreaking arg2 OK
work NN work arg2 OK

so RB ^ ^ false_start
i PRP i arg0 OK
'd VBD 'd ^ OK
always RB always argM_tmp OK
thought VBN thought predicate OK
it PRP it arg1 OK
would S-1 would argM_mod OK
be MD be arg1 OK
good VB good arg2 OK
to JJ to arg2 OK
open TO open arg2 OK
um VB ^ ^ filler
a UH a arg0 OK
vegetarian DT vegetarian arg0 OK
restaurant JJ restaurant arg0 OK
that NN that arg0 OK
had WDT had arg1 OK
like VBD ^ ^ filler
really UH ^ ^ false_start
really RB ^ ^ false_start
really RB really arg1 OK
good RB good arg1 OK
uh JJ ^ ^ filler
dinner UH dinner arg1 OK
entrees NN entrees arg1 OK
and NNS ^ ^ false_start
things CC ^ ^ false_start

like UH ^ ^ filler
whether IN whether ^ OK
to TO to ^ OK
be VB be ^ OK
open JJ open ^ OK
for IN for ^ OK
breakfast NN breakfast ^ OK
lunch NN lunch ^ OK
and CC and ^ OK
dinner NN dinner ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because argM_cause OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
a DT ^ ^ repeat
um UH ^ ^ filler
a DT a arg1 OK
hard JJ ^ ^ repeat
hard JJ hard arg1 OK
industry NN industry arg1 OK
a DT a arg1 OK
hard JJ hard arg1 OK
business NN business arg1 OK
to TO to arg2 OK
get VB get arg2 OK
into IN into argM_loc OK
and NP-1 and arg2 OK
make CC make arg2 OK
it VB it arg1 OK
successful PRP successful arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD had ^ OK
done VBN done predicate OK
some DT some arg1 OK
research NN research arg1 OK
into IN into arg1 OK
it PRP it arg1 OK
like UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
maybe RB maybe argM_discou OK
ten CD ten argM_tmp OK
years NNS years argM_tmp OK
ago RB ago argM_tmp OK
or CC ^ ^ false_start
something NN ^ ^ false_start

i PRP i arg0 OK
think VBP think predicate OK
you PRP you arg1 OK
'd MD 'd argM_mod OK
have VB have argM_mod OK
to TO to argM_mod OK
delegate VB delegate arg1 OK
some DT some arg1 OK
of IN of arg1 OK
the DT the arg1 OK
work NN work arg1 OK
and CC and arg1 OK
maybe RB maybe argM_discou OK
just RB just argM_adverb OK
be VB be arg1 OK
the DT the arg2 OK
manager NN manager arg2 OK
that DT ^ ^ false_start
eh UH ^ ^ filler
or CC ^ ^ false_start
s- NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
at IN at argM_tmp OK
some DT some argM_tmp OK
point NN point argM_tmp OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg0 OK
friend NN friend arg0 OK
who WP who arg0 OK
does VBZ does arg1 OK
catering NN catering arg1 OK
sometimes RB sometimes argM_tmp OK

um UH ^ arg1 filler
and CC ^ ^ false_start
like UH ^ ^ filler
i PRP i arg0 OK
learn VBP learn predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
um UH ^ ^ filler
really RB really arg1 OK
good JJ good arg1 OK
things NNS things arg1 OK
to TO to arg1 OK
cook VB cook arg1 OK
desserts UH like ^ false_start
eh NP-1 ^ ^ filler
desserts UH desserts arg1 OK
and NNS ^ ^ false_start
stuff CC ^ ^ false_start

it PRP it arg1 OK
was VBD was predicate OK
like UH ^ ^ filler
a DT a arg2 OK
sit VB sit arg2 OK
down RP down arg2 OK
dinner NN dinner arg2 OK
for IN for arg2 OK
fifteen CD fifteen arg2 OK
people NNS people arg2 OK
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
really RB really argM_adverb OK
's BES ^ ^ repeat
is VBZ is predicate OK
like UH ^ ^ filler
fun JJ fun arg2 OK

i UNK i arg0 OK
'd UNK 'd argM_mod OK
want UNK want predicate OK
it UNK it arg1 OK
to UNK to arg1 OK
be UNK be arg1 OK
like UNK ^ ^ filler
a UNK a arg2 OK
cool UNK cool arg2 OK
place UNK place arg2 OK
where UNK where argM_loc OK
people UNK people arg0 OK
would UNK would argM_mod OK
want UNK want arg2 OK
to UNK to arg1 OK
come UNK come arg1 OK
and UNK and arg1 OK
hang UNK hang arg1 OK
out UNK out arg_particl OK
too UNK too argM_discou OK
because UNK because argM_cause OK
i UNK i arg0 OK
think UNK think predicate OK
it UNK it arg1 OK
would UNK would argM_mod OK
be UNK be arg1 OK
cool UNK cool arg2 OK
to UNK to arg2 OK
have UNK have arg2 OK
like UNK ^ ^ filler
the UNK the arg1 OK
restaurant UNK restaurant arg1 OK
part UNK part arg1 OK
but UNK but arg1 OK
then UNK then arg1 OK
like UNK ^ ^ filler
a UNK a arg1 OK
cafe UNK cafe arg1 OK
part UNK part arg1 OK
on UNK on arg1 OK
the UNK the arg1 OK
outside UNK outside arg1 OK
for UNK for arg1 OK
like UNK ^ ^ filler
sandwiches UNK sandwiches arg1 OK
and UNK and arg1 OK
like UNK ^ ^ filler
breakfast UNK breakfast arg1 OK
and UNK ^ ^ false_start
stuff UNK ^ ^ false_start
like UNK ^ ^ false_start
that UNK ^ ^ false_start

so UH ^ ^ filler
but CC ^ ^ repeat
but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
then RB ^ ^ false_start
again RB ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
if IN if argM_adverb OK
we PRP we arg0 OK
had VBD had arg1 OK
all PDT all arg1 OK
the DT the arg1 OK
money NN money arg1 OK
that IN that arg1 OK
you PRP you arg0 OK
can MD can argM_mod OK
do VB do arg1 OK
whatever WP whatever arg1 OK
you PRP you arg0 OK
want VBP want arg1 OK

if IN if ^ false_start
i PRP i ^ false_start
was VBD was ^ false_start
successful JJ successful ^ false_start
at IN at ^ false_start
it PRP it ^ false_start
and CC ^ ^ false_start
then RB then ^ OK
move VB move ^ OK
on RB on ^ OK
to IN to ^ OK
whatever NN whatever ^ OK
else RB else ^ OK

wha- WDT ^ ^ repeat
what WDT what arg1 OK
type NN type arg1 OK
of IN of arg1 OK
activities NNS activities arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
like VB like predicate OK
to TO to arg1 OK
do VB do arg1 OK
outside RB outside argM_loc OK

uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'd MD ^ ^ repeat
i PRP i arg0 OK
like VBP like predicate OK
to TO to arg1 OK
play VB play arg1 OK
basketball NN basketball arg1 OK
if IN if ^ OK
i PRP i arg0 OK
can MD can ^ OK
if IN ^ ^ repeat
i PRP ^ ^ repeat
f- VBP ^ ^ repeat
fi- VBP ^ ^ repeat
find VBP find predicate OK
the DT the arg1 OK
time NN time arg1 OK

gosh UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
uh UH ^ ^ filler
an DT an arg2 OK
underrated JJ underrated arg2 OK
activity NN activity arg2 OK
that WDT that arg1 OK
people NNS ^ ^ repeat
peop- NNS ^ ^ repeat
people NNS people arg0 OK
ar- VBP ^ ^ repeat
are VBP are arg1 OK
n't RB n't arg1 OK
taking VBG taking arg1 OK
advant- NN ^ ^ repeat
advantage NN advantage arg1 OK
of IN of arg1 OK
anymore NP-1 anymore arg1 OK

tha- DT ^ ^ repeat
that DT that arg1 OK
takes VBZ takes predicate OK
some DT some arg2 OK
diligence NN diligence arg2 OK

i PRP i ^ OK
i PRP _VERB_ ^ false_start

i PRP i arg0 OK
was VBD was predicate OK
actually RB actually arg2 OK
thinking VBG thinking arg2 OK
about IN about arg2 OK
that DT that arg2 OK
today PP-1 today argM_tmp OK
like NN ^ ^ filler
about UH about ^ OK
possibly IN possibly ^ OK
like RB ^ ^ filler
exercising UH exercising predicate OK
indoors VBG indoors argM_loc OK
instead RB instead argM_loc OK
of IN of argM_loc OK
outdoors IN outdoors argM_loc OK
because RB because ^ OK
it IN ^ ^ repeat
like MD ^ ^ filler
i UH ^ ^ false_start
do PRP ^ ^ false_start
n't VBP ^ ^ false_start
know RB ^ ^ false_start
i VB i arg0 OK
might PRP ^ ^ repeat
might PRP might ^ OK
be MD be predicate OK
able VB able arg2 OK
to JJ to arg2 OK
do TO do arg2 OK
it VB it arg1 OK
since PRP since ^ OK
i IN i arg0 OK
'm PRP 'm predicate OK
not VBP not ^ OK
avai- RB ^ ^ repeat
always JJ always arg2 OK
able RB able arg2 OK
to JJ to arg2 OK
just TO just arg2 OK
go RB go arg2 OK
out VBP out arg4 OK
go RB ^ ^ repeat
go VB ^ ^ repeat
places VB places arg4 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
wish VBP wish predicate OK
i PRP i arg0 OK
had VBD had arg1 OK
that DT that arg1 OK
ability NN ability arg1 OK

so UH ^ ^ filler
i PRP ^ ^ false_start
i PRP ^ ^ false_start
i PRP i arg0 OK
'm VBP ^ ^ false_start
'm VBP ^ ^ false_start
'm VBP 'm predicate OK
alw- RB ^ ^ false_start
alw- RB ^ ^ false_start
always RB always arg2 OK
on IN on arg2 OK
the DT the arg2 OK
go NN go arg2 OK
doing VBG doing arg2 OK
stuff NN stuff arg1 OK

so RB ^ ^ filler
actually RB ^ ^ false_start
fin- VBG ^ ^ repeat
finding VBG finding arg1 OK
the DT the arg1 OK
time NN time arg1 OK
to TO to arg1 OK
exercise VB exercise arg1 OK
is ADVP-1 is predicate OK
hard VBZ hard arg2 OK

especially RB especially ^ OK
with IN with ^ OK
like UH ^ ^ filler
a DT ^ ^ repeat
a DT a ^ OK
full JJ full ^ OK
day NN day ^ OK
of IN of ^ OK
work NN work ^ OK

bally NNP bally ^ OK
's POS 's ^ OK

and CC ^ ^ false_start
actually UH ^ ^ false_start
uh UH ^ ^ filler
do VBP ^ ^ repeat
do VBP do ^ OK
like UH ^ ^ filler
an DT an ^ OK
hour NN hour ^ OK
of IN of ^ OK
bi- NN ^ ^ repeat
bicycling NN bicycling ^ OK

and CC ^ arg1 false_start
i PRP i arg0 OK
never RB never ^ OK
really RB really ^ OK
liked VBD liked predicate OK
it PRP it arg1 OK
because IN because ^ OK
there EX ^ ^ false_start
's BES ^ ^ false_start
was VBD ^ ^ false_start
n- XX ^ ^ false_start
i PRP ^ ^ false_start
n- XX ^ ^ false_start
the DT the arg1 OK
only JJ only arg1 OK
thing NN thing arg1 OK
i PRP ^ ^ false_start
i PRP i arg0 OK
co- MD ^ ^ false_start
had VBD had predicate OK
the DT the ^ OK
option NN option arg1 OK
of IN of arg1 OK
doing VBG doing arg1 OK
was NP-1 was ^ OK
listening VBD ^ ^ repeat
listening NNS listening predicate OK
to VBG ^ ^ repeat
to VBG to arg1 OK
head- IN ^ ^ repeat
headphones IN headphones arg1 OK

i PRP i ^ OK
know VBP know ^ OK
like UH ^ ^ filler
know VBP _NOUN_ ^ false_start

if UNK if ^ OK
i UNK i arg0 OK
could UNK could ^ OK
like UNK ^ ^ filler
have UNK have predicate OK
that UNK that arg1 OK
choice UNK choice arg1 OK
of UNK ^ ^ repeat
of UNK of ^ OK
uh UNK ^ ^ filler
either UNK either ^ OK
listening UNK listening predicate OK
to UNK to arg1 OK
music UNK music arg1 OK
or UNK or ^ OK
watching UNK watching predicate OK
t. UNK t. arg1 OK
v. UNK v. arg1 OK

but CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
at IN at ^ OK
the DT the ^ OK
time NN time ^ OK
when WRB when ^ OK
i PRP i arg0 OK
did VBD did predicate OK
it PRP it arg1 OK
i ADVP-TMP- 1 i arg1 OK
was PRP was predicate OK
n't VBD n't ^ OK
in RB in arg2 OK
tune IN tune arg2 OK
to NN to arg2 OK
actually IN ^ ^ false_start
audio UH audio arg2 OK
books JJ books arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP like predicate OK
to TO to arg1 OK
listen VB listen arg1 OK
to IN to arg1 OK
audio JJ audio arg1 OK
books NNS books arg1 OK
when WRB when ^ OK
i PRP i arg1 OK
'm VBP 'm predicate OK
'm VBP _VERB_ arg2 false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP like predicate OK
to TO to arg1 OK
do VB do arg1 OK
that DT that arg1 OK
in IN in ^ OK
the DT the ^ OK
car NN car ^ OK

but CC ^ ^ false_start
i PRP i arg0 OK
also RB also ^ OK
like VBP like predicate OK
to TO to arg1 OK
do VB do arg1 OK
it PRP it arg1 OK
when WRB ^ ^ repeat
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
ta- VBG ^ ^ repeat
talking VBG taking predicate false_start
a DT a arg1 OK
walk NN walk arg1 OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg0 OK
's BES ^ ^ repeat
's HVS 's ^ OK
ab- XX ^ ^ false_start
probably RB probably ^ OK
been VBN been predicate OK
a DT a arg1 OK
year NN year arg1 OK
since IN since ^ OK
i PRP i arg0 OK
've VBP 've ^ OK
played VBN played predicate OK
because IN because ^ OK
i PRP i arg0 OK
have VBP have ^ OK
n't RB n't ^ OK
had VBN had predicate OK
any DT any arg1 OK
time NN time arg1 OK

but CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
probably RB ^ ^ false_start
my PRP my ^ OK
favorite NN favorite ^ OK
outdoor JJ outdoor ^ OK
sport NN sport ^ OK
or CC or ^ OK
activity NN activity ^ OK
to TO to ^ OK
do VB do ^ OK
is NP-1 is ^ OK
just VBZ just ^ OK
play RB ^ ^ repeat
and VB ^ ^ false_start
play CC play ^ OK
like VB or ^ false_start
like VB ^ ^ filler
just UH just ^ OK
shoot-around RB shoot-around ^ OK
or VB or ^ OK
play CC play ^ OK
a VBP a ^ OK
play DT play ^ OK
a VB or ^ false_start
a VB a ^ OK
pick-up DT pick-up ^ OK
game JJ game ^ OK
with NN with ^ OK
my IN my ^ OK
friends PRP friends ^ OK

um UH ^ ^ filler
i PRP i arg0 OK
would MD would ^ OK
say VB say predicate OK
in- JJ ^ ^ repeat
inside JJ inside arg1 OK
activities NNS activities arg1 OK
like UH ^ ^ repeat
like UH like arg1 OK
actual JJ actual arg1 OK
physical JJ ^ ^ repeat
physical JJ physical arg1 OK
ac- NNS ^ ^ repeat
activities NNS activities arg1 OK

now UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
am VBP ^ ^ repeat
am VBP am predicate OK
a DT ^ ^ repeat
a NN ^ ^ repeat
a DT a ^ OK
huge JJ huge arg2 OK
air NN air arg2 OK
hockey NN hockey arg2 OK
and CC and arg2 OK
uh UH ^ ^ filler
um UH ^ ^ filler
ah UH ^ ^ filler
foosball NN foosball ^ OK
foosball NN _NOUN_ arg2 false_start

or CC ^ ^ false_start
play VB ^ ^ repeat
play VB play predicate OK
billiards NNS billiards arg1 OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
just RB ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD had predicate OK
more JJR more arg1 OK
access NN access arg1 OK
to IN to arg1 OK
those DT those arg1 OK
i PRP i arg0 OK
'd MD 'd ^ OK
probably RB probably ^ OK
play VB play predicate OK
constantly RB constantly argM_other OK

those DT ^ ^ repeat
those DT those ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
my PRP my ^ OK
my PRP _NOUN_ ^ false_start

well UH ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
i PRP ^ ^ repeat
i PRP i arg1 OK
were VBD were predicate OK
to TO to arg2 OK
go VB go arg2 OK
like UH to ^ filler
a DT ^ ^ repeat
a DT ^ ^ false_start
like UH ^ ^ filler
a DT a ^ OK
pub NN pub ^ OK
or CC or ^ OK
a DT a ^ OK
bar NN bar ^ OK
or CC or ^ OK
something NN something ^ OK
and CC and ^ OK
they PRP they arg0 OK
have VBP have predicate OK
pool NN pool arg1 OK
or CC or arg1 OK
darts NN darts arg1 OK
or CC or arg1 OK
something NN something arg1 OK
like IN like arg1 OK
that DT that arg1 OK

it PRP it ^ OK
's BES 's ^ OK
definitely RB definitely ^ OK

i PRP i ^ OK
was VBD was ^ OK
uh UH ^ ^ filler
feeling VBG feeling ^ OK
all RB all ^ OK
congested JJ congested ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
for IN for ^ OK
a DT a ^ OK
week NN week ^ OK

but CC but ^ OK
i PRP i ^ OK
think VBP think ^ OK
my PRP my ^ OK
problem NN problem ^ OK
is VBZ is ^ OK
i PRP that ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
getting VBG getting ^ OK
enough JJ enough ^ OK
sleep NN sleep ^ OK

well UH ^ ^ false_start
what WP what ^ OK
i PRP i ^ OK
did VBD did ^ OK
was NP-1 was ^ OK
i VBD i ^ OK
was PRP was ^ OK
going VBD going ^ OK
away VBG away ^ OK
for RB for ^ OK
uh IN ^ ^ filler
yesterday UH yesterday ^ OK

and CC ^ ^ false_start
she PRP she ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
give VB give ^ OK
me PRP me ^ OK
a DT a ^ false_start
something NN ^ ^ false_start
syrup NN syrup ^ false_start
that WDT that ^ OK
had VBD had ^ OK
codeine VBN codeine ^ OK
in IN in ^ OK
it PRP it ^ OK

but CC but ^ OK
i PRP i ^ OK
was VBD was ^ OK
n't RB n't ^ OK
able JJ able ^ OK
to TO to ^ OK
get VB get ^ OK
it PRP it ^ OK
because IN because ^ OK
she PRP she ^ OK
never RB never ^ OK
called VBD called ^ OK
it PRP it ^ OK
in RP in ^ OK
before IN before ^ OK
i PRP i ^ OK
left VBD left ^ OK

i PRP ^ ^ false_start
guess VBP ^ ^ false_start
she PRP she ^ OK
waited VBD waited ^ OK
until IN until ^ OK
she PRP she ^ OK
was VBD was ^ OK
done JJ done ^ OK
with IN ^ ^ repeat
with IN with ^ OK
her PRP her ^ OK
patients NNS patients ^ OK
for IN for ^ OK
the DT the ^ OK
day NN day ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
because IN because ^ OK
i PRP i ^ OK
always RB always ^ OK
thought VBD thought ^ OK
to IN to ^ OK
myself PRP myself ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
how WRB how ^ OK
people NNS people ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
could MD could ^ OK
just RB just ^ OK
die VB die ^ OK
from IN from ^ OK
being VBG being ^ OK
congested JJ congested ^ OK

i PRP i ^ OK
was VBD was ^ OK
in IN in ^ OK
the DT the ^ OK
bathroom NN bathroom ^ OK
with IN with ^ OK
these DT these ^ OK
tears NNS tears ^ OK
running VBG running ^ OK
down IN down ^ OK
my PRP my ^ OK
eyes NNS eyes ^ OK
just RB just ^ OK
from IN from ^ OK
the DT the ^ OK
constant JJ constant ^ OK
cough NN cough ^ OK
cough NN cough ^ OK
cough NN cough ^ OK
cough NN cough ^ OK
cough NN cough ^ OK

but CC but ^ OK
um UH ^ ^ filler
for IN for ^ OK
this DT this ^ OK
the DT the ^ OK
doctor NN doctor ^ OK
said VBD said ^ OK
really RB really ^ OK
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
you PRP you ^ OK
can MD can ^ OK
do VB do ^ OK
is NP-1 is ^ OK
drink VBZ drink ^ OK
the VB ^ ^ false_start
fluids DT fluids ^ OK

but CC but ^ OK
it PRP ^ ^ repeat
just RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's SBAR-1 's ^ OK
impossible BES impossible ^ OK
for JJ for ^ OK
people IN people ^ OK
to NNS to ^ OK
stay TO stay ^ OK
in VB in ^ OK
bed IN bed ^ OK
these NN these ^ OK
days DT days ^ OK

but CC but ^ OK
um UH um ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
telling VBG telling ^ OK
him PRP him ^ OK
i PRP that ^ false_start
i PRP i ^ OK
give VB give ^ OK
him PRP him ^ OK
extra JJ extra ^ OK
vitamin NN vitamin ^ OK
c. NN c. ^ OK
because IN because ^ OK
he PRP he ^ OK
's BES 's ^ OK
insulin NN insulin ^ OK
dependent JJ dependent ^ OK

i PRP ^ ^ filler
are VBP are ^ OK
you PRP you ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
afraid JJ afraid ^ OK
he PRP he ^ OK
would MD would ^ OK
get VB get ^ OK

see UH ^ ^ false_start
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
in IN in ^ OK
the DT the ^ OK
store NN store ^ OK
today NN today ^ OK
i ADVP-TMP- 1 i ^ OK
bought PRP bought ^ OK
more VBD ^ ^ repeat
more JJR more ^ OK
cough JJR cough ^ OK
drops NN drops ^ OK
at NNS at ^ OK
eckerds IN eckerds ^ OK

but CC but ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
get VB get ^ OK
them PRP them ^ OK
because IN because ^ OK
i PRP i ^ OK
know VBP know ^ OK
he PRP he ^ OK
would MD would ^ OK
n't RB n't ^ OK
eat VB eat ^ OK
them PRP them ^ OK
anyway RB anyway ^ OK

because IN because ^ OK
uh UH uh ^ OK

because IN because ^ OK
the DT the ^ OK
only JJ only ^ OK
time NN time ^ OK
he PRP he ^ OK
ever RB ever ^ OK
tried VBD tried ^ OK
them PRP them ^ OK
they ADVP-1 they ^ OK
were PRP were ^ OK
those VBD those ^ OK
when DT ^ ^ repeat
when WRB when ^ OK
they WRB they ^ OK
had PRP had ^ OK
the VBD the ^ OK
original DT original ^ OK
ones JJ ones ^ OK
that NNS that ^ OK
are WDT are ^ OK
really VBP really ^ OK
repulsive RB repulsive ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
found VBD found ^ OK
that IN that ^ OK
those DT ^ ^ repeat
those DT those ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
the DT the ^ OK
most RBS most ^ OK
effective JJ effective ^ OK

i PRP i ^ OK
was VBD was ^ OK
thinking VBG thinking ^ OK
about IN about ^ OK
going VBG going ^ OK
back RB back ^ OK
to IN to ^ OK
the DT the ^ OK
old JJ old ^ OK
vick NNP vick ^ OK
's POS 's ^ OK
vaporub NNP vaporub ^ OK
for IN for ^ OK
your PRP your ^ OK
chest NN chest ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
agree VBP agree predicate OK
in IN in arg1 OK
the DT the arg1 OK
sense NN sense arg1 OK
that IN ^ ^ repeat
that IN that arg1 OK
mo- XX ^ ^ false_start
the DT the arg0 OK
heightened JJ heightened arg0 OK
security NN security arg0 OK
just RB just argM_adverb OK
makes VBZ makes arg1 OK
it PRP it arg1 OK
harder JJR harder arg1 OK

f- XX ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
went VBD went predicate OK
through IN through arg_particl OK
the DT the arg1 OK
whole JJ whole arg1 OK
system NN system arg1 OK

and CC ^ ^ false_start
i PRP i arg1 OK
we- XX ^ ^ false_start
flew VBD flew predicate OK
from IN from argM_dir OK
uh UH ^ ^ filler
las NNP las argM_dir OK
vegas NNP vegas argM_dir OK
to IN to argM_dir OK
um UH ^ ^ filler
the DT the argM_dir OK
east NNP east argM_dir OK
coast NNP coast argM_dir OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
find VBP find predicate OK
that IN that arg1 OK
they PRP they arg0 OK
're VBP 're arg1 OK
doing VBG doing arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
better JJR better arg1 OK
job NN job arg1 OK
than IN than arg1 OK
they PRP they arg0 OK
did VBD did arg1 OK
e- RB ^ ^ false_start
actually RB ^ ^ false_start
even RB even argM_tmp OK
a DT a argM_tmp OK
year NN year argM_tmp OK
ago RB ago argM_tmp OK
because IN because argM_cause OK
uh UH ^ ^ filler
a DT a argM_tmp OK
year NN year argM_tmp OK
ago RB ago argM_tmp OK
there RB there arg1 OK
were VBD were argM_cause OK
people NNS people arg0 OK
that WDT that arg0 OK
would MD would argM_mod OK
look VB look arg2 OK
at IN at arg1 OK
my PRP my arg1 OK
ticket NN ticket arg1 OK
or CC or arg2 OK
and CC ^ ^ false_start
pretend VB pretend arg2 OK
to TO to arg1 OK
look VB look arg1 OK
at IN at arg1 OK
it PRP it arg1 OK

this DT ^ ^ repeat
this DT this argM_tmp OK
time NN time argM_tmp OK
uh UH ^ ^ filler
when WRB when argM_tmp OK
the DT the argM_tmp OK
federal JJ federal argM_tmp OK
people NNS people argM_tmp OK
took VBD took argM_tmp OK
over RP over argM_tmp OK
i- ADVP-TMP- 1 ^ ^ repeat
it PRP it arg1 OK
was PRP was predicate OK
a VBD a arg2 OK
lot DT lot arg2 OK
more NN more arg2 OK
serious RBR serious arg2 OK

uh UH ^ ^ filler
you PRP you arg0 OK
just RB just argM_adverb OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
get VB get predicate OK
through IN through arg_particl OK
security NN ^ ^ false_start
eh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
the DT the argM_mnr OK
s- NN ^ ^ repeat
security NN security argM_mnr OK
area NN area argM_mnr OK

especially RB especially ^ OK
in IN ^ ^ repeat
in IN in ^ OK
s- DT ^ ^ repeat
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
big JJ big ^ OK
places NNS places ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
well RB ^ ^ filler
they PRP ^ ^ false_start
have VBP ^ ^ false_start
n't RB ^ ^ false_start
up IN up argM_tmp OK
until IN until argM_tmp OK
now RB now argM_tmp OK
they PRP they arg0 OK
have VBP have ^ OK
n't RB n't argM_neg OK
been VBN been ^ OK
searching VBG searching predicate OK
the DT the arg1 OK
suitcases NNS suitcases arg1 OK
that WDT that arg1 OK
have VBP have arg1 OK
been VBN been arg1 OK
going VBG going arg1 OK
into IN into arg4 OK
the DT the arg4 OK
uh UH ^ ^ filler
uh UH ^ ^ filler
planes NNS planes arg4 OK

not RB because argM_cause false_start
not RB of ^ false_start
and CC ^ ^ false_start
so RB ^ ^ filler
s- VB ^ ^ repeat
s- VB ^ ^ repeat
search VB ^ ^ repeat
not RB not argM_cause OK
searching VBG searching argM_cause OK
the DT the argM_cause OK
suitcases NNS suitcases argM_cause OK
anybody NN anybody arg0 OK
could MD could argM_mod OK
put VB put predicate OK
anything NN anything arg1 OK
into IN into argM_loc OK
a DT a arg1 OK
suitcase NN suitcase arg1 OK
and CC ^ ^ repeat
and CC and ^ OK
then RB ^ ^ repeat
then RB then argM_adverb OK
n- XX ^ ^ repeat
n- XX ^ ^ false_start
take VB ^ ^ false_start
it PRP ^ ^ false_start
o- XX ^ ^ false_start
uh UH ^ ^ filler
blow VB blow predicate OK
it PRP it arg1 OK
up RP up arg_particl OK
from IN from argM_mnr OK
remote JJ remote argM_mnr OK
control NN control argM_mnr OK

so RB ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK

b- XX ^ ^ false_start
now RB now argM_tmp OK
there EX ^ ^ repeat
there EX there arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT ^ ^ false_start
very RB ^ ^ false_start
complicated JJ ^ ^ false_start
and CC ^ ^ false_start
uh UH ^ ^ filler
sniffing VBG ^ ^ false_start
and CC ^ ^ repeat
and CC ^ ^ false_start
all DT ^ ^ false_start
kinds NNS ^ ^ false_start
of IN ^ ^ false_start
this DT this arg1 OK
big JJ big arg1 OK
very RB very arg1 OK
expensive JJ expensive arg1 OK
machine NN machine arg1 OK
that WDT that arg2 OK
every DT every arg0 OK
suitcase NN suitcase arg0 OK
goes VBZ goes arg2 OK
through IN through arg2 OK

and CC ^ ^ false_start
even RB even argM_adverb OK
then RB then argM_adverb OK
if IN ^ ^ repeat
if IN if argM_adverb OK
there EX ^ ^ repeat
there EX there arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
s- NN ^ ^ repeat
something NN something arg2 OK
that WDT that arg2 OK
they PRP they arg1 OK
're VBP 're arg2 OK
not RB not argM_neg OK
sure JJ sure arg2 OK
of IN of arg2 OK
now NP-1 now arg2 OK
they RB ^ ^ false_start
ha- PRP ^ ^ false_start
they VBP they arg0 OK
tell PRP tell arg2 OK
you VBP you arg2 OK
you PRP you arg0 OK
ca PRP ca argM_mod OK
n't MD n't argM_neg OK
even RB even argM_adverb OK
lock RB lock arg1 OK
your VB your arg1 OK
suitcases PRP suitcases arg1 OK
c- NNS ^ ^ false_start
because XX because argM_cause OK
i PRP i arg0 false_start
think PRP think argM_cause false_start
uh IN ^ ^ filler
they UH they arg0 OK
want PRP want arg1 OK
to VBP to arg1 OK
be TO be arg1 OK
able VB able arg2 OK
to JJ to arg2 OK
open TO open arg2 OK
them VB them arg1 OK
without PRP without argM_mnr OK
you IN you arg0 OK
watching PRP watching argM_mnr OK
them VBG them arg1 OK

uh UH ^ ^ filler
this DT this arg1 OK
is VBZ is predicate OK
eh UH ^ ^ filler
eh UH ^ ^ filler
the DT the arg2 OK
uh UH ^ ^ filler
mccarran NNP mccarran arg2 OK
airport NNP airport arg2 OK

eh UH ^ ^ filler
eh UH ^ ^ filler
yeah UH yeah ^ OK

every DT at argM_loc false_start
and CC ^ ^ false_start
um UH ^ ^ filler
but CC ^ ^ false_start
every DT every argM_loc OK
airport NN airport argM_loc OK
the DT ^ ^ false_start
what WP ^ ^ false_start
they PRP ^ ^ false_start
've VBP ^ ^ false_start
done VBN ^ ^ false_start
in IN in argM_tmp OK
the DT the argM_tmp OK
last JJ last argM_tmp OK
year NN year argM_tmp OK
is VBZ ^ ^ false_start
they PRP ^ ^ false_start
've VBP ^ ^ false_start
bought VBN ^ ^ false_start
made VBN ^ ^ false_start
the DT the arg0 OK
federal JJ federal arg0 OK
government NN government arg0 OK
has VBZ has ^ OK
bought VBN bought predicate OK
these DT these arg0 OK
big JJ big arg0 OK
expensive JJ expensive arg0 OK
uh UH ^ ^ filler
machines NNS machines arg0 OK
that WDT that arg0 OK
's BES 're arg1 false_start
supposed VBN supposed arg1 OK
to TO to arg2 OK
detect VB detect arg2 OK
eh UH ^ ^ filler
explosives NNS explosives arg1 OK

you UNK ^ ^ false_start
know UNK ^ ^ false_start
what UNK ^ ^ false_start
i UNK ^ ^ false_start
'm UNK ^ ^ false_start
saying UNK ^ ^ false_start
but UNK but ^ OK
with UNK with ^ OK
the UNK the ^ OK
bag UNK bag ^ OK
whatever UNK ^ ^ repeat
whatever UNK whatever ^ OK
amount UNK amount ^ OK
you UNK ^ ^ repeat
you UNK you ^ OK
need UNK need ^ OK
that UNK that ^ OK
's UNK 's ^ OK
what UNK what ^ OK
's UNK 's ^ OK
in UNK in ^ OK
the UNK the ^ OK
bag UNK bag ^ OK

you PRP you ^ OK
can MD can ^ OK
keep VB keep ^ OK
it PRP it ^ OK
in IN in ^ OK
your PRP your ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
bedroom NN bedroom ^ OK
or CC or ^ OK
closet NN closet ^ OK

but CC but ^ OK
if IN if ^ OK
you PRP you ^ OK
put VBP put ^ OK
our PRP our ^ OK
hand NN hand ^ OK
in IN in ^ OK
there RB there ^ OK
and CC and ^ OK
you PRP you ^ OK
think VBP think ^ OK
of IN of ^ OK
like UH ^ ^ filler
twenty CD twenty ^ OK
thousand CD thousand ^ OK
dollars NNS dollars ^ OK
twenty CD twenty ^ OK
thousand CD thousand ^ OK
dollars NNS dollars ^ OK
will MD will ^ OK
come VB come ^ OK
out RB out ^ OK

so UH ^ ^ false_start
then RB then ^ OK
you PRP you ^ OK
have VBP have ^ OK
two CD two ^ OK
extra JJ extra ^ OK
wishes NNS wishes ^ OK

but CC but ^ OK
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN ^ ^ false_start
then RB then ^ OK
ya- PRP ^ ^ repeat
you PRP you ^ OK
could MD could ^ OK
save VB save ^ OK
those DT those ^ OK
in IN in ^ OK
case NN case ^ OK
of IN of ^ OK
an DT an ^ OK
emergency NN emergency ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ false_start
just RB ^ ^ false_start
like UH ^ ^ false_start
you PRP ^ ^ false_start
happen VBP ^ ^ false_start
like UH ^ ^ false_start
but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
feel VBP feel ^ OK
like IN like ^ OK
going VBG going ^ OK
to IN to ^ OK
aruba NNP aruba ^ OK

but CC but ^ OK
with IN with ^ OK
the DT the ^ OK
bag NN bag ^ OK
of IN of ^ OK
money NN money ^ OK
it PRP it ^ OK
was VBD was ^ OK
just RB just ^ OK
good JJ good ^ OK
because IN because ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
can MD ^ ^ repeat
can MD can ^ OK
like UH ^ ^ filler
fold VB fold ^ OK
it PRP it ^ OK
up RP up ^ OK
fold VB ^ ^ false_start
put VB and ^ false_start
put VB put ^ OK
it PRP it ^ OK
in IN in ^ OK
your PRP your ^ OK
pocket NN pocket ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP ^ ^ false_start
the DT ^ ^ false_start
what WDT what ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
money NN money ^ OK
they PRP they ^ OK
use VBP use ^ OK

so UH ^ ^ false_start
you PRP you ^ OK
ask VBP ask ^ OK
for IN for ^ OK
a DT a ^ OK
m- XX ^ ^ repeat
million CD million ^ OK
lira NNS lira ^ OK

you PRP you ^ OK
go VBP go ^ OK
to IN to ^ OK
germany NNP germany ^ OK
go VBP ^ ^ false_start
got VBN and ^ false_start
you PRP you ^ OK
got VBN got ^ OK
deutschmarks NNS deutschmarks ^ OK

you PRP you ^ OK
go VBP go ^ OK
moscow NNP to ^ false_start
moscow NNP moscow ^ OK
go VBP ^ ^ false_start
have VBP and ^ false_start
you PRP you ^ OK
have VBP have ^ OK
rubles NNS rubles ^ OK

or CC ^ ^ false_start
even RB ^ ^ false_start
it PRP it ^ OK
could MD could ^ OK
be VB be ^ OK
like IN ^ ^ filler
a DT ^ ^ false_start
stop NN ^ ^ false_start
a DT a ^ OK
shopping NN shopping ^ OK
bag NN bag ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
good JJ good ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
really RB really ^ OK
proud JJ proud ^ OK
of IN of ^ OK
that DT that ^ OK
little JJ little ^ OK
ah UH ^ ^ filler
invention NN invention ^ OK

i PRP i ^ OK
just RB just ^ OK
said VBD said ^ OK
i PRP i ^ OK
won VBD won ^ OK
the DT the ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK

something NN ^ ^ filler
like IN ^ ^ filler
like UH ^ ^ filler
a DT a ^ OK
hundred CD hundred ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK
or CC or ^ OK
something NN something ^ OK

but CC but ^ OK
then RB then ^ OK
after IN after ^ OK
it PRP it ^ OK
was VBD was ^ OK
over RB over ^ OK
i PRP ^ ^ false_start
fear VBP ^ ^ false_start
i PRP i ^ OK
realize VBP realize ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what ^ OK
if IN if ^ OK
you PRP you ^ OK
had VBD had ^ OK
a DT a ^ OK
fucked VBN fucked ^ OK
up RP up ^ OK
genie NN genie ^ OK

here RB here ^ OK
's BES 's ^ OK
a DT a ^ OK
hundred CD hundred ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK

how WRB how ^ OK
it PRP it ^ OK
came VBD came ^ OK
from IN from ^ OK

where WRB where ^ OK
're VBP are ^ false_start
you PRP you ^ OK
going VBG going ^ OK
to TO to ^ OK
put VB put ^ OK
it PRP it ^ OK

until IN until ^ OK
they PRP they ^ OK
start VBP start ^ OK
seeing VBG seeing ^ OK
you PRP you ^ OK
rolling VBG rolling ^ OK
up RB up ^ OK
in IN in ^ OK
like UH ^ ^ filler
bentleys NNPS bentleys ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
where WRB where ^ OK
'd VBD 'd ^ OK
you PRP you ^ OK
get VB get ^ OK
this DT this ^ OK
bentley NNP bentley ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
uh UH ^ ^ filler
well UH ^ ^ filler
i PRP i ^ OK
just RB just ^ OK
happened VBD happened ^ OK
to TO to ^ OK
like UH ^ ^ filler
find VB find ^ OK
it PRP it ^ OK

uh UH ^ ^ filler
eh UH ^ ^ filler
an- CC ^ ^ repeat
an- CC ^ ^ repeat
and CC and ^ OK
you PRP you ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
calling VBG calling ^ OK
me PRP me ^ OK
in IN in ^ OK
boston NNP boston ^ OK
actually RB actually ^ OK

and CC ^ ^ false_start
my PRP my ^ OK
friend NN friend ^ OK
who WP who ^ OK
works VBZ works ^ OK
there RB there ^ OK
gave VBD gave ^ OK
me PRP me ^ OK
the DT the ^ OK
heads NNS heads ^ OK
up RP up ^ OK
in IN in ^ OK
a DT a ^ OK
e-mail NN e-mail ^ OK

say UH ^ ^ false_start
hey UH ^ ^ false_start
do VBP do ^ OK
you PRP you ^ OK
want VB want ^ OK
to TO to ^ OK
participate VB participate ^ OK
in IN ^ ^ false_start
this DT ^ ^ false_start
prin- NN ^ ^ false_start
in IN in ^ OK
a DT a ^ OK
study NN study ^ OK

but CC but ^ OK
ordinarily RB ordinarily ^ OK
i PRP i ^ OK
would MD would ^ OK
have VB have ^ OK
never RB never ^ OK
known VBN known ^ OK
about IN about ^ OK
it PRP it ^ OK
unless IN unless ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
had VB have ^ false_start
a DT a ^ OK
friend NN friend ^ OK
who WP who ^ OK
works VBZ works ^ OK
at IN at ^ OK
the DT the ^ OK
l. NNP l. ^ OK
d. NNP d. ^ OK
c. NNP c. ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
like UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
f- XX ^ ^ false_start
people NNS people ^ OK
who WP who ^ OK
work VBP work ^ OK
there RB there ^ OK
have VBP have ^ OK
some DT some ^ OK
friends NNS friends ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
the DT ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
local JJ local ^ OK
thing NN thing ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
used VBD used ^ OK
to TO to ^ OK
work VB work ^ OK
there RB there ^ OK

that DT ^ ^ repeat
uh UH ^ ^ filler
that WDT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
where WRB where ^ OK
i PRP i ^ OK
went VBD went ^ OK
as IN for ^ false_start
my PRP my ^ OK
undergraduate NN undergraduate ^ OK

i PRP i arg0 OK
see VBP see predicate OK
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
that WDT that arg1 OK
um UH ^ ^ filler
definitely RB ^ ^ false_start
take VBP take arg1 OK
advantage NN advantage arg1 OK
of IN of arg1 OK
the DT the arg1 OK
money NN money arg1 OK
that WDT that arg2 OK
they PRP they arg2 OK
're VBP 're arg2 OK
given VBN given arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
've VBP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
know VBP ^ ^ false_start
that IN ^ ^ false_start
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
times NNS times ^ OK
people NNS people arg0 OK
they PRP ^ ^ false_start
will MD will ^ repeat
'll MD ^ ^ OK
have VB have predicate OK
more JJR more arg1 OK
children NNS children arg1 OK
just RB to ^ false_start
just RB ^ ^ false_start
so IN ^ ^ false_start
that IN ^ ^ false_start
they PRP ^ ^ false_start
can MD ^ ^ false_start
get VB get predicate OK
a DT a arg1 OK
bigger JJR bigger arg1 OK
welfare NN welfare arg1 OK
check NN check arg1 OK

's BES ^ argM_other false_start
how WRB ^ ^ false_start
it PRP it arg1 OK
should MD should ^ OK
not RB ^ ^ repeat
definitely RB ^ ^ false_start
not RB not argM_neg false_start
work VB work predicate OK
that DT like ^ false_start
that DT that argM_other false_start

and CC ^ ^ false_start
then RB ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
no DT ^ ^ repeat
one PRP ^ ^ repeat
n- NN ^ ^ repeat
nothing NN nothing arg0 OK
that WDT ^ ^ false_start
regulates VBZ regulating arg0 false_start
it PRP it arg0 OK
that WDT ^ ^ false_start
says VBZ says predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if arg1 OK
you PRP you arg0 OK
have VBP have arg1 OK
two CD two arg1 OK
kids NNS kids arg1 OK
then RB then arg1 OK
we PRP we arg0 OK
'll MD 'll arg1 OK
give VB give arg1 OK
you PRP you arg2 OK
the DT ^ ^ false_start
x. NN x. arg1 OK
amount NN amount arg1 OK
of IN of arg1 OK
dollars NNS dollars arg1 OK
for IN ^ ^ repeat
that DT ^ ^ repeat
much JJ ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN ^ ^ repeat
for IN for arg1 OK
what WP what arg1 OK
you PRP you arg0 OK
need VBP need arg1 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
you PRP you arg0 OK
have VBP have predicate OK
ten CD ten arg1 OK
that DT ^ ^ false_start
many JJ ^ ^ false_start
more JJR more arg1 OK
kids NNS kids arg1 OK
children NNS ^ ^ false_start
it PRP ^ ^ false_start
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
mean VB ^ ^ false_start
that IN ^ ^ false_start
you PRP you arg0 OK
can MD ^ ^ false_start
now RB ^ ^ false_start
have VB ^ ^ false_start
and CC have ^ false_start
and CC to ^ false_start
and CC ^ ^ repeat
and CC ^ ^ repeat
st- XX ^ ^ repeat
and CC ^ ^ false_start
not RB ^ ^ false_start
support VB support predicate OK
them PRP them arg1 OK

but CC ^ ^ false_start
then RB ^ ^ false_start
d- XX ^ ^ repeat
in IN ^ ^ repeat
in IN in ^ OK
that DT that ^ OK
type NN type ^ OK
of IN of ^ OK
um UH ^ ^ filler

i PRP i arg0 OK
think VBP think predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
people NNS ^ arg1 false_start
they NP-1 people ^ false_start
that WDT that arg1 false_start
like IN ^ ^ filler
that DT ^ ^ false_start
live VBP live arg1 false_start
in IN in argM_loc false_start
the DT those argM_loc OK
type NN ^ ^ repeat
types NNS types argM_loc OK
o- IN ^ ^ repeat
of IN of argM_loc OK
areas NNS areas argM_loc OK
're PRP are arg1 false_start
not VBP not argM_neg OK
really RB ^ ^ false_start
too RB too arg1 OK
concerned RB concerned arg1 OK
about JJ about arg1 OK
birth IN birth arg2 OK
control NN control arg2 OK
p- NN ^ ^ repeat
and XX ^ ^ false_start
things CC ^ ^ false_start
like NNS ^ ^ false_start
that IN ^ ^ false_start

now RB ^ ^ false_start
on IN ^ ^ false_start
the DT ^ ^ false_start
other JJ ^ ^ false_start
end NN ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
there EX ^ ^ false_start
are VBP ^ ^ false_start
many JJ many arg0 OK
people NNS people arg0 OK
that WDT ^ ^ false_start
do VBP ^ ^ false_start
deserve VB deserve arg1 OK
it PRP it arg1 OK
for IN ^ ^ false_start
u UH ^ ^ false_start
certain JJ ^ ^ false_start
reasons NNS ^ ^ false_start

where WRB ^ arg0 false_start
eh UH ^ ^ filler
like IN ^ ^ filler
say UH ^ ^ filler
with IN ^ ^ false_start
people NNS people arg0 OK
they PRP ^ ^ false_start
that WDT that arg0 OK
collect VBP collect arg0 OK
unemployment NN unemployment arg0 OK
they PRP _NOUN_ ^ false_start
can MD can ^ OK
only RB only ^ OK
do VB do predicate OK
it PRP it arg1 OK
for IN for argM_tmp OK
a DT a argM_tmp OK
certain JJ certain argM_tmp OK
amount NN amount argM_tmp OK
of IN of argM_tmp OK
time NN time argM_tmp OK

i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's BES 's ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
st- XX ^ ^ repeat
i PRP i arg0 OK
also RB ^ ^ false_start
think VBP think ^ OK
that IN ^ predicate false_start
and CC ^ ^ false_start
different JJ ^ ^ repeat
m- XX ^ ^ repeat
all PDT ^ ^ false_start
the DT ^ ^ false_start
different JJ ^ ^ false_start
things NNS ^ ^ false_start
that WDT ^ ^ false_start
they PRP ^ ^ false_start
could MD ^ ^ false_start
possibly RB ^ ^ false_start
do VB ^ ^ false_start
there NP-2 ^ ^ repeat
's EX ^ ^ false_start
there BES there arg1 OK
will EX will arg1 OK
still MD still argM_tmp OK
be RB be arg1 OK
some VB an arg1 OK
some VB ^ ^ false_start
type DT ^ ^ false_start
of NN ^ ^ false_start
issue IN issue arg1 OK
no DT no arg1 false_start
matter NN matter arg1 false_start
what WDT what arg1 false_start
new JJ new arg1 false_start
rules NNS rules arg1 false_start
they PRP they arg0 false_start
put VBP put arg1 false_start
on IN on arg2 false_start
it PRP it arg2 false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
th- DT ^ ^ repeat
the DT the arg1 OK
system NN system arg1 OK
is VBZ is predicate OK
already RB already argM_tmp OK
in IN in argM_loc OK
place NN place argM_loc OK

unless IN unless ^ OK
they PRP they arg1 OK
completely RB ^ ^ false_start
knock VBP ^ ^ false_start
everything NN ^ ^ false_start
out RP ^ ^ false_start
and CC ^ ^ false_start
start VBP start arg1 OK
from IN from arg1 OK
the DT the arg1 OK
beginning NN beginning arg1 OK
which WDT which ^ OK
will MD will ^ OK
never RB never argM_tmp OK
happen VB happen predicate OK
then RB ^ ^ false_start
i- XX ^ ^ repeat
there EX there ^ OK
's BES will ^ false_start
always RB always argM_tmp OK
going VBG ^ ^ false_start
to TO ^ ^ false_start
be VB be predicate OK
some DT ^ ^ repeat
c- XX ^ ^ repeat
some DT some arg1 OK
problem NN problem arg1 OK
that WDT ^ ^ false_start
someone NN ^ ^ false_start
has VBZ ^ ^ false_start
with IN ^ ^ false_start
it PRP ^ ^ false_start

i PRP ^ ^ false_start
guess VBP ^ ^ false_start
because IN ^ ^ false_start
they PRP ^ ^ repeat
u- XX ^ ^ repeat
tended VBD ^ ^ repeat
i- PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
how WRB how arg1 OK
long RB long arg1 OK

i PRP ^ ^ repeat
'm VBP ^ ^ repeat
assuming VBG ^ ^ repeat
m- XX ^ ^ repeat
a DT a ^ OK
very RB very ^ OK
long JJ long ^ OK
time NN time ^ OK

but CC ^ ^ false_start
that DT ^ ^ repeat
i- VBZ ^ ^ repeat
it PRP ^ ^ repeat
has VBZ ^ ^ repeat
always RB ^ ^ repeat
been VBN ^ ^ repeat
th- DT ^ ^ repeat
like UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
how WRB how argM_other OK
e- RB ^ ^ repeat
everyone NN everyone arg0 OK
lives VBZ lives arg2 OK

n XX ^ ^ repeat
and CC ^ ^ false_start
even RB even ^ OK

well UH ^ arg1 filler
even RB ^ ^ false_start
just RB ^ ^ false_start
today NN today argM_neg OK
they PRP they arg0 OK
just RB ^ ^ false_start
passed VBD passed predicate OK
that DT the ^ false_start
that DT ^ ^ false_start
that DT ^ ^ false_start
new JJ new arg1 OK
law NN law arg1 OK
on IN on arg1 OK
the DT ^ ^ false_start
medicare NNP medicare arg1 OK
and CC and arg1 OK
with IN ^ ^ false_start
the DT ^ ^ false_start
prescription NN prescription arg1 OK
drugs NNS drugs arg1 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

at RB at arg1 OK
least RBS least arg1 OK
that IN ^ ^ false_start
uh UH ^ ^ filler
prescription NN ^ ^ repeat
drugs NNS ^ ^ repeat
are VBP ^ ^ repeat
g- NNS ^ ^ repeat
or CC ^ ^ repeat
a DT ^ ^ repeat
or UH ^ ^ false_start
generics NNS generics arg1 OK
are VBP are ^ OK
now RB now argM_tmp OK
included VBN included predicate OK
under IN under ^ OK
medicare NNP medicare arg2 OK
plans NNS plans arg2 OK

and CC ^ ^ false_start
u XX ^ ^ repeat
b XX ^ ^ repeat
e XX ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
that IN ^ ^ false_start
e XX ^ ^ repeat
the DT the arg0 OK
government NN government arg0 OK
should MD should arg1 OK
focus VB focus arg1 OK
more RBR more arg1 OK
on IN on arg1 OK
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT that arg2 OK

someone NN someone ^ OK
that WDT that ^ OK
's HVS 's ^ OK
put VBN ^ ^ false_start
their PRP ^ ^ false_start
time NN ^ ^ false_start
in RB ^ ^ repeat
in RB ^ ^ false_start
working VBG worked ^ false_start
their PRP their ^ OK
whole JJ whole ^ OK
lives NNS life ^ false_start

a- CC ^ ^ repeat
and CC ^ ^ false_start
then RB ^ ^ false_start
all DT all argM_tmp OK
of IN of argM_tmp OK
a DT a argM_tmp OK
sudden JJ sudden argM_tmp OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
elderly JJ elderly arg2 OK

they PRP ^ ^ repeat
they PRP ^ ^ repeat
're VBP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the- PRP ^ ^ repeat
they PRP they arg0 OK
need VBP need predicate OK
th- XX ^ ^ repeat
medical JJ medical arg1 OK
help NN help arg1 OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
n- VBP ^ ^ repeat
need VBP need predicate OK
prescriptions NNS prescriptions arg1 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
they PRP they arg0 OK
ca MD ca ^ OK
n't RB n't argM_neg OK
get VB get predicate OK
it PRP it arg1 OK
because IN because ^ OK
money NN the arg1 OK
money NN money arg1 OK
is VBZ is predicate OK
is VBZ for arg2 false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
buy VB ^ ^ false_start
somebody NN ^ ^ false_start
d- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
new JJ new arg2 OK
sneakers NNS sneakers arg2 OK

but CC ^ ^ repeat
and CC ^ ^ false_start
when WRB when ^ OK
they PRP they ^ OK
're VBP 're ^ OK
not RB not ^ OK
even RB even ^ OK
working VBG working ^ OK

it PRP it arg1 OK
ju- RB ^ ^ repeat
just RB ^ ^ false_start
came VBD came predicate OK
out RP out arg_particl OK
a DT a argM_tmp OK
little JJ little argM_tmp OK
while NN while argM_tmp OK
ago RB ago argM_tmp OK

i PRP i arg0 OK
heard VBD heard predicate OK
that DT that arg1 OK
this DT this argM_tmp OK
morning NN morning argM_tmp OK
too RB too argM_adverb OK
on IN on argM_loc OK
the DT the argM_loc OK
news NN news argM_loc OK

um UH ^ ^ filler
so UH ^ ^ false_start
um UH ^ ^ filler
yeah UH ^ ^ filler
basically RB basically argM_adverb OK
m- XX ^ ^ false_start
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
definitely RB definitely argM_extent OK
a DT a arg2 OK
threat NN threat arg2 OK

um UH ^ ^ filler
do VBP do ^ OK
you PRP you arg0 OK
think VB think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
something NN something arg2 OK
the IN the arg0 false_start
u. DT u. arg0 false_start
we PRP ^ ^ false_start
s. NNP s. arg0 false_start
should MD should argM_mod OK
be VB be argM_mod OK
uh UH ^ ^ filler
participating VBG participating arg2 OK
in IN in arg_particl OK
as NP-1 ^ ^ false_start

eh UH ^ ^ filler
trying VBG trying ^ OK
to TO to ^ OK
stop VB stop ^ OK
them PRP them ^ OK

i PRP ^ ^ repeat
guess VBP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
it PRP it arg2 OK
for IN for argM_other OK
south NNP south argM_other OK
korea NNP korea argM_other OK

yeah UH ^ ^ filler
um UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
obviously RB obviously ^ OK
iraq NNP iraq ^ OK

um UH ^ ^ filler
usually RB usually ^ OK
a DT a ^ OK
big JJ big ^ OK
one NN one ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
that IN that arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
understand VBP understand arg1 OK
the DT the arg1 OK
terrorist JJ terrorist arg1 OK
threat NN threat arg1 OK

but CC but arg2 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VBP ^ ^ repeat
think VB think predicate OK
that IN ^ ^ repeat
that IN that arg1 OK
iraq NNP iraq arg1 OK
is VBZ is arg1 OK
the DT the arg2 OK
one NN one arg2 OK
so RB so arg2 OK
far RB far arg2 OK
key NN as ^ false_start
being VBG being arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
key NN key arg2 OK
to IN to arg2 OK
that DT that arg2 OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
that DT there ^ false_start
's BES are predicate false_start
uh UH ^ ^ filler
different JJ different arg0 OK
g- XX ^ ^ repeat
groups NNS groups arg0 OK
that WDT that arg1 OK
are VBP are arg1 OK
doing VBG doing arg1 OK
that DT that arg1 OK

um UH ^ ^ filler
but CC but argM_adverb OK
at IN at argM_tmp OK
the DT the argM_tmp OK
same JJ same argM_tmp OK
time NN time argM_tmp OK
like IN ^ ^ false_start
foreign JJ ^ ^ false_start
uh UH ^ ^ filler
wha- UH ^ ^ false_start
we PRP we arg0 OK
might MD might argM_mod OK
not RB not argM_neg OK
just RB just argM_adverb OK
be VB be ^ OK
hearing VBG hearing predicate OK
about IN about arg_particl OK
it PRP it arg1 OK
but CC but argM_adverb OK
iraq NNP ^ ^ false_start
they PRP ^ ^ false_start
they PRP they arg0 OK
does VBZ ^ ^ false_start
do VBP do ^ OK
n't RB ^ ^ false_start
n't RB n't argM_neg OK
seem VB ^ ^ false_start
seem VB seem predicate OK
to TO to arg2 OK
're VBP ^ ^ false_start
be VB be arg2 OK
having VBG ^ ^ false_start
having VBG having arg2 OK
any DT ^ ^ false_start
any DT any arg1 OK
terrorists NNS terrorists arg1 OK
in IN in argM_loc OK
their PRP their argM_loc OK
country NN country argM_loc OK

all RB all argM_adverb OK
though IN though argM_adverb OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
we PRP ^ ^ repeat
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
w- PRP ^ ^ repeat
we PRP we arg0 OK
might MD ^ ^ repeat
might MD might argM_mod OK
have VB ^ ^ repeat
have VB have predicate OK
some DT some arg1 OK
of IN of arg1 OK
our PRP ^ ^ repeat
uh UH ^ ^ filler
our PRP our arg1 OK
s- XX ^ ^ repeat
people NNS people arg1 OK
over IN over arg1 OK
there RB there arg1 OK
um UH ^ ^ filler
probably RB probably argM_adverb OK

i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES are predicate false_start
some DT some arg1 OK
agents NNS agents arg1 OK
over IN over argM_mnr OK
probably RB ^ ^ repeat
over IN ^ ^ repeat
there RB ^ ^ repeat
there RB there argM_mnr OK
that WDT that arg1 OK
they PRP they arg0 OK
would MD would argM_mod OK
call VB call arg1 OK
e- XX ^ ^ filler
m- XX ^ ^ filler
terrorists NNS terrorists arg2 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

neither RB neither ^ OK
do VBP do ^ OK
i PRP i ^ OK

oh UH ^ ^ false_start
yeah UH ^ ^ false_start
actually UH actually argM_adverb OK
i PRP i arg1 OK
'm VBP 'm predicate OK
originally RB originally argM_extent OK
from IN from arg2 OK
minnesota NNP minnesota arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
we PRP ^ ^ false_start
in IN ^ ^ false_start
at IN at argM_loc OK
the DT the argM_loc OK
mall NNP mall argM_loc OK
of IN of argM_loc OK
america NNP america argM_loc OK
they PRP they arg0 OK
have VBP have predicate OK
uh UH ^ ^ filler
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
people NNS people arg1 OK
uh UH who arg1 filler
who WP ^ ^ OK
come VBN come arg1 OK
over RB over arg1 OK
from IN from arg1 OK
japan NNP japan arg1 OK
and CC and arg1 OK
other JJ other arg1 OK
countries NNS countries arg1 OK
um UH ^ ^ filler
with IN with arg1 OK
s- JJ ^ ^ repeat
such JJ such arg1 OK
prices NNS prices arg1 OK
as IN as arg1 OK
japan NNP japan arg0 OK
does VBZ does arg1 OK

and CC ^ ^ false_start
they PRP they arg0 OK
actually RB actually argM_adverb OK
will MD will ^ OK
travel VB travel predicate OK
over RB over arg1 OK
to IN to arg1 OK
the DT the arg1 OK
mall NN mall arg1 OK
of IN of arg1 OK
america NNP america arg1 OK
travel VB ^ ^ false_start
buy VB and ^ false_start
get VB ^ ^ repeat
um UH ^ ^ filler
uh UH ^ ^ filler
get VB ^ ^ repeat
buy VB buy predicate OK
their PRP ^ ^ repeat
m- XX ^ ^ repeat
m- XX ^ ^ repeat
things NNS things arg1 OK
over IN over ^ OK
in IN in argM_loc OK
america NNP america argM_loc OK
n- XX and ^ OK
travel VB travel predicate OK
back RB back arg1 false_start

there EX there ^ OK
's BES are predicate false_start
mm UH ^ ^ filler
mm UH ^ ^ filler
too RB ^ ^ repeat
yeah UH ^ ^ filler
too RB too arg1 OK
many JJ ^ ^ repeat
many JJ many arg1 OK
people NNS people arg1 OK
in IN in argM_loc OK
between IN between argM_loc OK
the DT the argM_loc OK
steps NNS steps argM_loc OK

wow UH wow argM_discou OK
tha- DT ^ ^ repeat
that DT that arg0 OK
makes VBZ makes predicate OK
sense NN sense arg1 OK
i PRP ^ ^ false_start
suppose VBP ^ ^ false_start

i PRP ^ arg2 false_start
suppose VBP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
where WRB where arg2 OK
internet NNP the ^ false_start
internet NNP internet arg1 OK
is VBZ is arg2 OK
really RB really argM_extent OK
great JJ great arg2 OK
for IN for arg2 OK
our PRP our arg2 OK
companies NNS companies arg2 OK
because ADVP-1 because arg2 OK
then IN then arg2 OK
they RB they arg0 OK
can PRP can argM_mod OK
go MD go arg2 OK
over VB over arg4 OK
and RB and arg2 OK
n- CC ^ ^ repeat
buy XX buy arg2 OK
it VB it arg1 OK
from PRP from arg2 OK
us IN us arg2 OK

but CC ^ ^ repeat
but CC but argM_adverb OK
then RB ^ ^ false_start
again RB ^ ^ false_start
we PRP we arg0 OK
're VBP 're ^ OK
buying VBG buying predicate OK
all PDT all arg1 OK
the DT the arg1 OK
japanese JJ japanese arg1 OK
cars NNS cars arg1 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
how WRB how arg1 OK
much JJ much arg1 OK
of IN of arg1 OK
the DT the arg1 OK
parts NNS parts arg1 OK
are VBP are arg1 OK
really RB really argM_extent OK
there RB there arg2 OK

okay UH ^ ^ filler
well UH ^ ^ false_start
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
what WP what arg1 OK
else RB else arg1 OK
to TO to arg1 OK
say VB say arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
my PRP ^ ^ repeat
my PRP my arg1 OK
major JJ ^ ^ repeat
concentration NN concentration arg1 OK
was VBD was predicate OK
in IN in arg2 OK
business NN business arg2 OK

uh UH ^ ^ filler
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
wha- XX ^ ^ false_start
w- XX ^ ^ false_start
our PRP our arg1 OK
interaction NN interaction arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
primarily RB primarily argM_extent OK
formulary JJ formulary arg2 OK

and UNK ^ ^ false_start
while UNK while argM_adverb OK
it UNK it arg1 OK
's UNK 's predicate OK
definitely UNK definitely argM_extent OK
advantageous UNK advantageous arg2 OK
to UNK to arg2 OK
understand UNK understand arg2 OK
the UNK the arg1 OK
principles UNK principles arg1 OK
underlying UNK underlying arg1 OK
the UNK the arg1 OK
formula UNK formula arg1 OK
and UNK and arg1 OK
the UNK the arg1 OK
various UNK various arg1 OK
methodologies UNK methodologies arg1 OK
used UNK used arg1 OK
in UNK in arg2 OK
business UNK business arg2 OK
it UNK it arg1 OK
did UNK did arg2 OK
n't UNK n't argM_neg OK
seem UNK seem arg2 OK
to UNK to arg2 OK
me UNK me arg2 OK
to UNK to arg2 OK
make UNK make arg2 OK
a UNK a arg1 OK
whole UNK whole arg1 OK
lot UNK lot arg1 OK
of UNK of arg1 OK
sense UNK sense arg1 OK
to UNK to arg2 OK
have UNK have arg2 OK
to UNK to arg2 OK
memorize UNK memorize arg2 OK
these UNK these arg1 OK
formulas UNK formulas arg1 OK
just UNK just argM_discou OK
like UNK like argM_discou OK
you UNK you argM_discou OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP you arg0 OK
probably RB probably argM_adverb OK
carried VBD carried predicate OK
around RP around argM_loc OK
a DT a arg1 OK
scientific JJ scientific arg1 OK
calculator NN calculator arg1 OK

uh UH ^ ^ filler
we PRP we arg0 OK
certainly RB certainly argM_adverb OK
carried VBD carried predicate OK
around RP around argM_loc OK
business NN business arg0 OK
calculators NNS calculators arg0 OK
that WDT that ^ OK
performed VBD performed predicate OK
these DT these arg1 OK
functions NNS functions arg1 OK
for IN for argM_other OK
us PRP us argM_other OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
definitely RB definitely argM_adverb OK
was VBD was predicate OK
n't RB n't argM_neg OK
a DT a arg2 OK
dumbing VBG dumbing arg2 OK
down RP down arg2 OK
tool NN tool arg2 OK

it PRP it arg1 OK
was VBD was predicate OK
something NN something arg0 OK
that WDT that arg2 OK
enhanced VBD enhanced arg2 OK
our PRP our arg0 OK
ability NN ability arg1 OK
to TO to arg1 OK
perform VB perform arg1 OK
advanced JJ advanced arg1 OK
computations NNS computations arg1 OK
in IN in argM_tmp OK
a DT a argM_tmp OK
shorter JJR shorter argM_tmp OK
amount NN amount argM_tmp OK
of IN of argM_tmp OK
time NN time argM_tmp OK

in IN in ^ OK
the DT the ^ OK
same JJ same ^ OK
way NN way ^ OK
that WDT that ^ OK
cars NNS cars ^ OK
have VBP have ^ OK
outpaced VBN outpaced ^ OK
people NNS people ^ OK
traveling VBG traveling ^ OK
and CC and ^ OK
by IN by ^ OK
foot NN foot ^ OK

i PRP ^ ^ filler
think VBP ^ ^ filler
computers NNS computers arg0 OK
have VBP have ^ OK
sort RB sort argM_mod OK
of RB of argM_mod OK
out RB ^ ^ false_start
paced VBD ^ ^ false_start
allowed VBN allowed predicate OK
people NNS people arg0 OK
to TO to arg1 OK
excel VB excel arg1 OK
beyond IN beyond arg1 OK
their PRP their arg1 OK
normal JJ normal arg1 OK
capacities NNS capacities arg1 OK
for IN for arg1 OK
performing VBG performing arg1 OK
advanced JJ advanced arg1 OK
computations NNS computations arg1 OK
or CC or arg1 OK
whatever WDT whatever arg1 OK
the DT the arg1 OK
application NN application arg1 OK
might MD might arg1 OK
be VB be arg1 OK

you PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
on IN on arg2 OK
the DT the arg2 OK
money NN money arg2 OK
with IN with arg2 OK
that DT that arg2 OK
completely RB completely argM_adverb OK

it PRP it ^ OK
's BES 's ^ OK

i- IN ^ ^ repeat
in IN in argM_extent OK
many JJ many argM_extent OK
ways NNS ways argM_extent OK
there EX ^ ^ repeat
there EX ^ ^ repeat
there EX there arg1 OK
i- VBZ ^ ^ repeat
is VBZ ^ ^ repeat
is VBZ is predicate OK
an DT ^ ^ repeat
an DT an arg2 OK
over RB ^ ^ repeat
over RB over arg2 OK
reliance NN ^ ^ repeat
reliance NN reliance arg2 OK
on IN on arg2 OK
the DT the arg2 OK
convenience NN convenience arg2 OK
factor NN factor arg2 OK
of IN of arg2 OK
technology NN technology arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that DT that arg1 OK
is VBZ is predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
very RB very arg2 OK
valid JJ valid arg2 OK
argument NN argument arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
difficult JJ difficult arg2 OK
one NN one arg2 OK
because IN because argM_cause OK
you PRP you arg0 OK
could MD could argM_cause OK
look VB look argM_cause OK
at IN at arg1 OK
it PRP it arg1 OK
not RB not arg2 OK
just RB just arg2 OK
from IN from arg2 OK
computers NNS computers arg2 OK
standpoint NN standpoint arg2 OK
but CC but arg2 OK
from IN from arg2 OK
electronics NNS electronics arg2 OK

not RB not ^ OK
even RB even ^ OK
electronics NNS electronics ^ OK
in IN in ^ OK
general JJ general ^ OK
but CC but ^ OK
any DT any ^ OK
tools NNS tools ^ OK
that WDT that ^ OK
we PRP we ^ OK
used VBD used ^ OK

unfortunately RB unfortunately argM_adverb OK
our PRP our arg1 OK
whole JJ whole arg1 OK
foundation NN foundation arg1 OK
of IN of arg1 OK
society NN society arg1 OK
's HVS 's ^ OK
been VBN been ^ OK
driven VBN driven predicate OK
more RBR more arg2 OK
towards IN towards arg2 OK
a DT a arg2 OK
convenience NN convenience arg0 OK
oriented VBN oriented arg2 OK
society NN society arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
cashier NN cashier arg1 OK
at IN at argM_loc OK
a DT a argM_loc OK
cash NN cash argM_loc OK
register NN register argM_loc OK
who WP who arg1 OK
's BES 's ^ OK
scanning VBG scanning predicate OK
items NNS items arg1 OK
across RB across argM_loc OK
on IN on argM_loc OK
a DT a argM_loc OK
bar NN bar argM_loc OK
code NN code argM_loc OK
scanner NNP scanner argM_loc OK
and CC and ^ OK
you PRP is predicate false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
not RB not arg2 OK
exactly RB exactly arg2 OK
sure JJ sure arg2 OK
what WP what arg2 OK
the DT the arg1 OK
individual JJ individual arg1 OK
prices NNS prices arg1 OK
are VBP are arg2 OK

and UNK ^ ^ false_start
also UNK ^ ^ false_start
and UNK ^ ^ false_start
when UNK when argM_tmp OK
it UNK it arg0 OK
comes UNK comes predicate OK
time UNK time arg1 OK
to UNK to arg1 OK
get UNK get arg1 OK
your UNK your arg0 OK
change UNK change arg1 OK
you UNK you arg1 OK
're UNK 're predicate OK
absolutely UNK absolutely argM_adverb OK
right UNK right arg2 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
good JJ ^ ^ repeat
good JJ good ^ OK

^ ^ ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
really RB really argM_extent OK
good JJ good arg2 OK
point NN point arg2 OK

that DT that ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
kind RB ^ ^ filler
of RB ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
get VB get ^ OK
flu NN flu ^ OK
shots NNS shots ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
get VB get ^ OK
sick JJ sick ^ OK
very RB very ^ OK
often RB often ^ OK
actually RB actually ^ OK

i PRP ^ ^ false_start
have VBP ^ ^ false_start
n't RB ^ ^ false_start
been VBN ^ ^ false_start
sick JJ ^ ^ false_start
i PRP ^ ^ false_start
ha- VBP ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
've VBP 've ^ OK
had VBN had ^ OK
a DT a ^ OK
cold NN cold ^ OK
in IN in ^ OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
years NNS years ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
sinus NN sinus ^ OK
infections NNS infections ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
get VBP get ^ OK
those DT those ^ OK
instead IN instead ^ OK
of IN of ^ OK
a DT a ^ OK
cold NN cold ^ OK
because IN because ^ OK
you PRP you ^ OK
know VBP know ^ OK
how WRB how ^ OK
the DT the ^ OK
air NN air ^ OK
is VBZ is ^ OK
around IN around ^ OK
here RB here ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

it PRP it ^ OK
just RB just ^ OK
wrecks VBZ wrecks ^ OK
your PRP your ^ OK
immune JJ immune ^ OK
system NN system ^ OK

you PRP you ^ OK
get VBP get ^ OK
a DT a ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
school NN school ^ OK
jobs NNS jobs ^ OK
that DT that ^ OK
sort NN sort ^ OK
of IN of ^ OK
thing NN thing ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
one CD ^ ^ repeat
one CD one ^ OK
thing NN thing ^ OK
about IN about ^ OK
the DT ^ ^ repeat
the DT the ^ OK
w- NN ^ ^ repeat
weather NN weather ^ OK

maybe RB maybe ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
people NNS people ^ OK
get VBP get ^ OK
stressed VBN stressed ^ OK
out RP out ^ OK
over IN over ^ OK
the DT the ^ OK
holidays NNS holidays ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
the DT the ^ OK
air NN air ^ OK
's BES 's ^ OK
all RB all ^ OK
stale JJ stale ^ OK
and CC and ^ OK
dust NN dust ^ OK
and CC and ^ OK
stuff NN stuff ^ OK

i PRP ^ ^ false_start
d- VBP ^ ^ false_start
me PRP me ^ OK
neither RB neither ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
hate VBP hate ^ OK
it PRP it ^ OK

uh UH ^ ^ filler
you PRP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
try VBP try ^ OK
to TO to ^ OK
eat VB eat ^ OK
well RB well ^ OK
also RB also ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
i PRP i ^ OK
really RB really ^ OK
do VBP do ^ OK
watch VB watch ^ OK
what WP what ^ OK
i PRP i ^ OK
eat VBP eat ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ false_start
probably RB probably ^ OK
about RB about ^ OK
twenty CD twenty ^ OK
percent NN percent ^ OK
of IN of ^ OK
the DT the ^ OK
stuff NN stuff ^ OK
i PRP i ^ OK
get VBP get ^ OK
is NP-1 is ^ OK
organic VBZ organic ^ OK
food JJ food ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
buy VBP buy ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
stuff NN stuff ^ OK
at IN at ^ OK
the DT the ^ OK
grocery NN grocery ^ OK
store NN store ^ OK

but CC but ^ OK
sometimes RB sometimes ^ OK
especially RB especially ^ OK
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
stores NNS stores ^ OK
around IN around ^ OK
here RB here ^ OK
you PRP you ^ OK
can MD can ^ OK
go VB go ^ OK
to IN to ^ OK
the NP-1 ^ ^ false_start
sa- DT ^ ^ false_start
eh XX ^ ^ filler
like UH ^ ^ filler
wild IN wild ^ OK
oats NNP oats ^ OK

where WRB ^ ^ repeat
where WRB ^ ^ repeat
a- XX ^ ^ false_start
where WRB where ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK

people NNS people ^ OK
's BES 's ^ OK
republic NNP republic ^ OK
of IN of ^ OK
boulder NNP boulder ^ OK

i PRP i ^ OK
like VBP like ^ OK
boulder NNP boulder ^ OK

you PRP you ^ OK
got VBD got ^ OK
that DT that ^ OK
denver NNP ^ ^ repeat
denver NNP denver ^ OK
boulder NNP boulder ^ OK
metro NN metro ^ OK
area NN area ^ OK
air NN air ^ OK

p- XX ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
perfect JJ perfect ^ OK

but CC but ^ OK
it PRP it ^ OK
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
better JJR better ^ OK

we PRP we ^ OK
're VBP 're ^ OK
sort RB sort ^ OK
of RB of ^ OK
in IN in ^ OK
between IN between ^ OK
fort NNP fort ^ OK
collins NNP collins ^ OK
and CC and ^ OK
boulder NNP boulder ^ OK

so UH ^ ^ false_start
we PRP ^ ^ false_start
and CC ^ ^ false_start
since IN since ^ OK
the DT the ^ OK
air NN air ^ OK
comes VBZ comes ^ OK
from IN from ^ OK
the DT the ^ OK
west NNP west ^ OK
we PRP we ^ OK
have VBP have ^ OK
fresher JJR fresher ^ OK
air NN air ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
the DT the ^ OK
same JJ same ^ OK
sort NN sort ^ OK
of IN of ^ OK
thing NN thing ^ OK
only RB only ^ OK
down IN down ^ OK
there RB there ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
know VB know ^ OK
how WRB how ^ OK
to TO to ^ OK
do VB do ^ OK
winter NN winter ^ OK

has VBZ has ^ OK
that DT that arg0 OK
affected VBD affected predicate OK
you PRP you arg1 OK
in IN in argM_mnr OK
anyway NN anyway argM_mnr OK

um UH ^ ^ filler
not RB not ^ OK
personally RB personally ^ OK
except IN except ^ OK
for IN for ^ OK
the DT the ^ OK
stock NN stock ^ OK
market NN market ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
personally RB ^ ^ false_start
actually UH ^ ^ false_start
but CC but ^ OK
you PRP you ^ OK
know VBP know ^ OK
what WP what ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
wo- VBP ^ ^ repeat
work VBP work predicate OK
for IN for arg2 OK
bethlehem NNP bethlehem arg2 OK
steel NNP steel arg2 OK

does VBZ _ARG_ arg1 false_start
does VBZ does ^ OK
n't RB n't argM_neg OK
seem VB seem arg1 OK
right JJ right arg1 OK
does VBZ does predicate OK
it PRP it arg0 OK

it PRP ^ ^ repeat
it PRP it arg0 OK
's BES 's predicate OK
just RB just argM_adverb OK
um UH ^ ^ filler
more JJR more arg2 OK
regulation NN regulation arg2 OK
and CC ^ ^ false_start
more JJR ^ ^ false_start
regulation NN ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
th- DT ^ ^ repeat
that DT that arg0 OK
causes VBZ causes predicate OK
as RB as arg1 OK
many JJ many arg1 OK
problems NNS problems arg1 OK

it PRP ^ argM_tmp false_start
's BES ^ ^ false_start
they PRP they arg0 OK
play VBP play predicate OK
too RB too arg1 OK
much JJ much arg1 OK
of IN of arg1 OK
the DT the arg1 OK
same JJ same arg1 OK
stuff NN stuff arg1 OK
but CC ^ ^ false_start
sometimes RB sometimes ^ false_start

and CC ^ ^ false_start
i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP said predicate false_start
oh UH ^ ^ filler
i PRP i arg0 OK
hate VBP hate arg1 OK
that DT that arg1 OK

so RB ^ argM_other filler
i PRP i arg0 OK
just RB just ^ OK
turn VBP turn predicate OK
to IN to argM_other OK
different JJ a ^ false_start
different JJ different argM_other OK
station NN station argM_other OK

i PRP ^ ^ repeat
i PRP i ^ OK
c- XX ^ ^ repeat
c- XX c- ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP ^ ^ repeat
like VBP like predicate OK
older JJR older arg1 OK
music NN music arg1 OK

my PRP ^ ^ repeat
my PRP my arg1 OK
whole JJ whole arg1 OK
thing NN thing arg1 OK
is VBZ is predicate OK
soul NN soul arg2 OK

i PRP i ^ OK
like UH like ^ OK

i- PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
in IN in arg2 OK
college NN college arg2 OK
now RB now argM_tmp OK

i PRP ^ ^ repeat
i PRP i arg1 OK
went VBD ^ ^ repeat
went VBD went predicate OK
to- IN ^ ^ repeat
to IN to arg4 OK
an DT ^ ^ repeat
an DT ^ ^ repeat
a DT a arg4 OK
perf- JJ ^ ^ repeat
performing JJ performing arg4 OK
arts NNS ^ ^ repeat
arts NNS arts arg4 OK
high JJ high arg4 OK
school NN ^ ^ repeat
school NN school arg4 OK

i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
say VB say predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD did arg1 OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
like VB like arg1 OK
her PRP her arg1 OK

but CC ^ ^ false_start
m- JJ ^ ^ repeat
with IN ^ ^ false_start
me PRP ^ ^ false_start
i- PRP ^ ^ repeat
i PRP i arg0 OK
wo MD wo ^ OK
n't RB n't argM_neg OK
listen VB listen predicate OK
to IN to arg1 OK
her PRP her arg1 OK
c. NN c. arg1 OK
d. NN d. arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
like UH ^ ^ filler
a DT a arg2 OK
waste NN waste arg2 OK
of IN of arg2 OK
my PRP my arg2 OK
time NN time arg2 OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
like VBP like predicate OK
all DT all arg1 OK
music NN music arg1 OK

it PRP it ^ OK
's BES 's predicate OK
just RB just arg1 OK
that IN that arg1 OK
i PRP i arg0 OK
wo MD wo arg1 OK
n't RB n't argM_neg OK
buy VB buy arg1 OK
a DT a arg1 OK
whole JJ whole arg1 OK
britney NNP britney arg1 OK
spears NNP spears arg1 OK
album NN album arg1 OK

i PRP i arg0 OK
wo MD wo ^ OK
n't RB n't argM_neg OK
buy VB buy predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
whole JJ whole arg1 OK
rock NN rock arg1 OK
album NN album arg1 OK

th- EX ^ ^ false_start
maybe RB maybe ^ OK
there EX there ^ OK
'd MD 'd ^ OK
be VB be predicate OK
certain JJ certain arg0 OK
songs NNS songs arg0 OK
that WDT that arg1 OK
hit VBP hit arg1 OK
number NN number arg1 OK
one CD one arg1 OK

mm UH ^ ^ repeat
mm UH mm ^ OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
i PRP would ^ false_start
just RB just ^ OK
buy VBP buy predicate OK
it PRP it arg1 OK

i PRP i arg0 OK
've VBP 've ^ OK
called VBN called predicate OK
in RP in arg_particl OK

when WRB when argM_tmp OK
did VBD did ^ OK
i PRP i arg0 OK
call VB call predicate OK
in RP in arg_particl OK

i PRP i arg0 OK
called VBD called predicate OK
in RP in arg_particl OK
once RB once ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD ^ ^ repeat
had VBD had ^ OK
to TO ^ ^ repeat
to TO to ^ OK
leave VB leave predicate OK

it PRP it ^ OK
^ ^ 's ^ OK

so RB ^ ^ filler
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
i PRP i arg0 OK
have VBP have arg1 OK
to TO to arg1 OK
call VB call arg1 OK
you PRP you arg1 OK
guys NNS guys arg1 OK
back RB back arg1 OK

i PRP ^ ^ repeat
i PRP i ^ OK
wou- MD ^ ^ repeat
would MD would ^ OK
n't RB n't ^ OK

i PRP ^ ^ false_start
'd MD ^ ^ false_start
i PRP i ^ OK
probably RB probably ^ OK
would MD would ^ OK
n't RB n't ^ OK
either RB either ^ OK
if IN if ^ OK

so UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
might MD might ^ OK
take VB take ^ OK
it PRP it ^ OK
and CC and ^ OK
go VB go ^ OK
live VB live ^ OK
in IN in ^ OK
italy NNP italy ^ OK

but CC ^ ^ false_start
only RB only ^ OK
with IN with ^ OK
the DT the ^ OK
eh UH ^ ^ filler
stipulation NN stipulation ^ OK
that IN that ^ OK
i PRP i ^ OK
could MD could ^ OK
return VB return ^ OK
every DT every ^ OK
once RB once ^ OK
in IN in ^ OK
a DT a ^ OK
while NN while ^ OK

it PRP it ^ OK
's BES 's ^ OK
it PRP ^ ^ false_start
culture NN a ^ false_start
completely RB completely ^ OK
different JJ ^ ^ repeat
different JJ different ^ OK
culture NN culture ^ OK

and CC ^ ^ false_start
so RB ^ ^ false_start
i PRP ^ ^ false_start
that DT that ^ OK
would MD would ^ OK
be VB be ^ OK
one CD one ^ OK
thing NN thing ^ OK
that WDT that ^ OK
kept VBD kept ^ OK
me PRP me ^ OK
home RB home ^ OK

well UH ^ ^ filler
i- PRP i- ^ OK

well UH ^ ^ filler
if IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
speak VBP speak ^ OK
italian NNP italian ^ OK

so UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
so UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
that DT that ^ OK
would MD would ^ OK
n't RB n't ^ OK
be VB be ^ OK
as RB as ^ OK
hard JJ hard ^ OK

i PRP ^ ^ false_start
would MD ^ ^ false_start
uh UH ^ ^ filler
well UH ^ ^ filler
i PRP i ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
say VB say ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
miss VB ^ ^ repeat
miss VB miss ^ OK
the DT ^ ^ repeat
the DT the ^ OK
f- NN ^ ^ repeat
food NN food ^ OK

so UH ^ ^ filler
but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
would MD ^ ^ repeat
would MD would ^ OK
miss VB miss ^ OK
the DT ^ ^ false_start
uh UH ^ ^ filler
th- DT ^ ^ false_start
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
patriotism NN patriotism ^ OK

i PRP i ^ OK
'd MD 'd ^ OK
miss VB miss ^ OK
um UH ^ ^ filler
al- PDT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all ^ OK
my PRP my ^ OK
friends NNS friends ^ OK
here RB here ^ OK
friends NNS ^ ^ false_start
freedom NN and ^ false_start
but CC ^ ^ false_start
uh UH ^ ^ filler
just RB ^ ^ filler
the DT the ^ OK
freedom NN freedom ^ OK
tha- WDT ^ ^ repeat
th- WDT ^ ^ repeat
that WDT that ^ OK
's BES 's ^ OK
here RB here ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
that DT ^ ^ repeat
that DT that ^ OK
too RB too ^ OK
in IN in ^ OK
italy NNP italy ^ OK

but CC ^ ^ false_start
uh UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
quite PDT quite ^ OK
the DT the ^ OK
same JJ same ^ OK

i PRP i ^ OK
'd MD 'd ^ OK
well UH ^ ^ filler

eh UH ^ ^ filler
there EX there ^ OK
are VBP are ^ OK
n't RB n't ^ OK
very RB very ^ OK
many JJ many ^ OK
fast JJ fast ^ OK
food NN food ^ OK
restaurants NNS restaurants ^ OK
in IN in ^ OK
italy NNP italy ^ OK

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
l- XX ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
n't RB n't ^ OK
like VB like ^ OK
fast JJ fast ^ OK
food NN food ^ OK

so RB ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
w- MD ^ ^ repeat
would MD would ^ OK
n't RB n't ^ OK
miss VB miss ^ OK
that DT that ^ OK

e- VB ^ ^ repeat
explain VB explain ^ OK
what WP what ^ OK
you PRP you ^ OK
mean VBP mean ^ OK
by IN by ^ OK
hypocrisy NN hypocrisy ^ OK

i PRP i ^ OK
think VBP think ^ OK
they PRP ^ ^ false_start
have VBP ^ ^ false_start
the DT ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
the DT ^ ^ repeat
the DT the ^ OK
best JJS best ^ OK
government NN government ^ OK
that WDT that ^ OK
exists VBZ exists ^ OK
even RB even ^ OK
though IN though ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
no- RB ^ ^ repeat
not RB not ^ OK
perfect JJ perfect ^ OK

and CC ^ ^ false_start
there EX ^ ^ repeat
there EX there ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
hypocrisy NN hypocrisy ^ OK

uh UH ^ ^ filler
but CC ^ ^ false_start
i PRP i ^ OK

it PRP ^ ^ repeat
eh UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
^ ^ 's ^ OK
nice BES nice ^ OK
to JJ to ^ OK
have TO have ^ OK
uh VB ^ ^ filler
new UH new ^ OK
leadership JJ leadership ^ OK
every NN every ^ OK
four DT four ^ OK
years CD years ^ OK

or CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
at RB at ^ OK
least RB least ^ OK
a DT ^ ^ repeat
an DT an ^ OK
election NN election ^ OK
every DT every ^ OK
four CD four ^ OK
years NNS years ^ OK

and CC ^ ^ false_start
with IN with ^ OK
the DT the ^ OK
uh UH ^ ^ filler
understanding NN understanding ^ OK
that IN that ^ OK
he PRP he ^ OK
wo MD wo ^ OK
n't RB n't ^ OK
have VB have ^ OK
more JJR more ^ OK
than IN than ^ OK
eight CD eight ^ OK
years NNS years ^ OK
in IN in ^ OK
office NN office ^ OK

there RB there ^ OK
a DT 're ^ false_start
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
countries NNS countries ^ OK
tha- WDT ^ ^ repeat
that WDT that ^ OK
uh UH ^ ^ filler
either RB either ^ OK
have VB have ^ OK
dictators NNS dictators ^ OK
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
yo- XX ^ ^ false_start
eh UH ^ ^ filler
leaders NNS leaders ^ OK
that WDT that ^ OK
are VBP are ^ OK
there RB there ^ OK
for IN for ^ OK
life NN life ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
like VB like ^ OK
that DT that ^ OK

eh UH ^ ^ filler
one CD ^ ^ false_start
thing NN ^ ^ false_start
i PRP ^ ^ false_start
would MD ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
one CD one ^ OK
thing NN thing ^ OK
i PRP i ^ OK
would MD would ^ OK
like VB like ^ OK
is NP-2 is ^ OK
uh VBZ ^ ^ filler
to UH to ^ OK
have TO have ^ OK
a VB a ^ OK
direct DT direct ^ OK
say JJ say ^ OK
instead NN instead ^ OK
of IN of ^ OK
just IN just ^ OK
an RB ^ ^ repeat
an DT an ^ OK
elected DT elected ^ OK
person JJ person ^ OK
who NN who ^ OK
speaks WP speaks ^ OK
for VBZ for ^ OK
me IN me ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
sure JJ sure ^ OK
of IN ^ ^ repeat
of IN of ^ OK
a DT ^ ^ repeat
a DT a ^ OK
country NN country ^ OK
that WDT that ^ OK
has VBZ has ^ OK
exactly RB exactly ^ OK
that DT that ^ OK

but CC ^ ^ repeat
um UH ^ ^ filler
but CC but ^ OK
anyway UH ^ ^ filler

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
think VB think ^ OK
there EX there ^ OK
's BES 's ^ OK
anything NN anything ^ OK
else RB else ^ OK
that WDT that ^ OK
i PRP ^ ^ repeat
would MD ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
would MD would ^ OK
miss VB miss ^ OK

eh UH ^ ^ filler
uh UH ^ ^ filler
a- RB ^ ^ repeat
also RB also ^ OK
one CD one ^ OK
thing NN thing ^ OK
that WDT that ^ OK
i PRP i ^ OK
would MD would ^ OK
definitely RB definitely ^ OK
miss VB miss ^ OK
is NP-1 is ^ OK
the VBZ the ^ OK
fact DT fact ^ OK
that NN that ^ OK
anybody IN ^ ^ repeat
anybody NN anybody ^ OK
in NN in ^ OK
the IN the ^ OK
country DT country ^ OK
can NN can ^ OK
get MD get ^ OK
a VB a ^ OK
college DT college ^ OK
education NN education ^ OK
now NN now ^ OK

um UH ^ ^ filler
eh UH ^ ^ filler
i- XX ^ ^ false_start
ther- XX ^ ^ false_start
most JJS most ^ OK
countries NNS countries ^ OK
really RB really ^ OK
if IN if ^ OK
you PRP you ^ OK
have VBP have ^ OK
the DT the ^ OK
money NN money ^ OK
you PRP you ^ OK
can MD can ^ OK
get VB get ^ OK
an DT an ^ OK
education NN education ^ OK

if IN if ^ OK
not RB not ^ OK
there EX there ^ OK
's BES 's ^ OK
not RB not ^ OK
a- RB ^ ^ repeat
as RB as ^ OK
much JJ much ^ OK
government NN government ^ OK
assistance NN assistance ^ OK
as IN as ^ OK
there EX there ^ OK
is VBZ is ^ OK
here RB here ^ OK

they PRP they ^ OK
have VBP have ^ OK
to TO to ^ OK
choose VB choose ^ OK
by IN ^ ^ false_start
middle JJ ^ ^ false_start
age NN ^ ^ false_start
my PRP ^ ^ false_start
by IN by ^ OK
uh UH ^ ^ filler
middle JJ middle ^ OK
school NN school ^ OK
age NN age ^ OK

to TO to ^ OK
uh UH ^ ^ filler

are VBP are ^ OK
you PRP you ^ OK
from IN from ^ OK
the DT the ^ OK
east NNP east ^ OK
of CC or ^ false_start
from IN from ^ OK
the DT the ^ OK
west NNP west ^ OK

i PRP ^ ^ repeat
actually UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP ^ ^ repeat
've VBP 've ^ OK
never RB ^ ^ repeat
uh UH ^ ^ filler
never RB never ^ OK
been VBN been ^ OK
down IN down ^ OK
there RB there ^ OK

but CC ^ ^ false_start
eh UH ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
lots NNS lots ^ OK
of IN of ^ OK
friends NNS friends ^ OK
that WDT that ^ OK
are VBP are ^ OK
from IN from ^ OK
there RB there ^ OK

ginkgo NNP ^ ^ repeat
uh UH ^ ^ filler
ginkgo NNP ginkgo ^ OK
biloba NNP biloba ^ OK

i PRP i ^ OK
would MD would ^ OK
like VB like ^ OK
to TO to ^ OK
see VB see ^ OK
some DT some ^ OK
of IN of ^ OK
it PRP it ^ OK
regulated VBN regulated ^ OK
only RB only ^ OK
for IN ^ ^ false_start
in IN in ^ OK
terms NNS terms ^ OK
of IN of ^ OK
not RB not ^ OK
represis- NN ^ ^ repeat
representation NN representatio n  ^ OK
of IN of ^ OK
what WP what ^ OK
they PRP they ^ OK
do VBP do ^ OK
but NP-1 but ^ OK
hm CC ^ ^ filler
according UH according ^ OK
to VBG to ^ OK
potency IN potency ^ OK

like UH ^ ^ filler
do VBP ^ ^ false_start
when WRB when ^ OK
you PRP you ^ OK
take VBP take ^ OK
a DT a ^ OK
supplement NN supplement ^ OK
is ADVP-TMP- 1 is ^ OK
it VBZ it ^ OK
really PRP really ^ OK
thirty RB thirty ^ OK
milligrams CD milligrams ^ OK
of NNS of ^ OK
c. IN c. ^ OK
o. NN o. ^ OK
q. NN q. ^ OK
ten NN ten ^ OK
or CD or ^ OK
fifty CC fifty ^ OK
milli- CD ^ ^ false_start
something NN ^ ^ false_start
else NN ^ ^ false_start

i PRP ^ ^ false_start
i PRP ^ ^ false_start
it PRP it ^ OK
could MD could ^ OK
be VB be ^ OK

so UH ^ ^ filler
it PRP ^ ^ repeat
it PRP ^ ^ repeat
um UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
kind RB ^ ^ filler
of RB ^ ^ filler
questionable JJ questionable ^ OK

some DT some ^ OK
now UH ^ ^ filler
of IN of ^ OK
the DT the ^ OK
things NNS things ^ OK
you PRP you ^ OK
can MD can ^ OK
get VB get ^ OK
prescription NN ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
what WP ^ ^ false_start
they PRP ^ ^ false_start
call VBP ^ ^ false_start
prescription NN prescription ^ OK
grade NN grade ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
also RB also ^ OK
have VBP have ^ OK
potassium VBN potassium ^ OK
pla- XX ^ ^ false_start
uh UH ^ ^ filler
tablet NNP tablet ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
comes VBZ comes ^ OK
in IN in ^ OK
a DT a ^ OK
ninety-nine CD ninety-nine ^ OK
milligrams NNS milligrams ^ OK
because IN because ^ OK
a DT a ^ OK
hundred CD hundred ^ OK
milligrams NNS milligrams ^ OK
is VBZ is ^ OK
prescription NN prescription ^ OK

so RB ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
that DT that ^ OK
must MD must ^ OK
mean VB mean ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
have VBP have ^ OK
some DT some ^ OK
sort NN ^ ^ filler
of IN ^ ^ filler
quality NN quality ^ OK
control NN control ^ OK

i PRP i ^ OK
know VBP know ^ OK
this DT this ^ OK
soy NN soy ^ OK
thing NN thing ^ OK
that DT ^ ^ repeat
that WDT that ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
wa- VBZ ^ ^ repeat
was VBD was ^ OK
taking VBG taking ^ OK
i NP-2 i ^ OK
just PRP just ^ OK
ran RB ran ^ OK
out VBD out ^ OK
a RB a ^ OK
couple DT couple ^ OK
days NN days ^ OK
ago NNS ago ^ OK
was RB was ^ OK
clover VBD clover ^ OK
leaf NN leaf ^ OK
extract NN extract ^ OK
or NN ^ ^ false_start
something CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

but CC ^ ^ false_start
there EX there ^ OK
's BES 's ^ OK
als- RB als- ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
ever RB ever ^ OK
tried VBD tried ^ OK
pine NN pine ^ OK
bark NN bark ^ OK
because IN because ^ OK
that DT that ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
sound VB sound ^ OK
like IN like ^ OK
food NN food ^ OK
to IN to ^ OK
me PRP me ^ OK

or CC ^ ^ false_start
a DT ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like NP-1 ^ ^ filler
grape UH grape ^ OK
seed NN seed ^ OK
extrac- NN ^ ^ repeat
extract NN extract ^ OK
is NN is ^ OK
like VBZ ^ ^ filler
i IN i ^ OK
guess PRP guess ^ OK
some VBP some ^ OK
of DT of ^ OK
the IN the ^ OK
ingredients DT ingredients ^ OK
like NNS ^ ^ filler
you UH you ^ OK
'd PRP 'd ^ OK
have MD have ^ OK
in VB in ^ OK
wine IN wine ^ OK

so UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
you PRP you ^ OK
've VBP 've ^ OK
been VBN been ^ OK
doing VBG doing ^ OK
this DT this ^ OK
uh UH ^ ^ filler
ha- PDT ^ ^ repeat
um UH ^ ^ filler
half PDT half ^ OK
a DT a ^ OK
dozen NN dozen ^ OK
calls NNS calls ^ OK
already RB already ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
think VBP ^ ^ repeat
think VBP think ^ OK
it PRP ^ ^ repeat
th- DT ^ ^ repeat
this DT this ^ OK
's BES ^ ^ repeat
is VBZ is ^ OK
my PRP my ^ OK
eighth NN eighth ^ OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
was VBD ^ ^ false_start
told VBN ^ ^ false_start
no UH ^ ^ filler
actually UH ^ ^ filler
a DT a ^ OK
friend NN friend ^ OK
of IN of ^ OK
mine PRP mine ^ OK
was VBD was ^ OK
told VBN told ^ OK
after IN after ^ OK
ten CD ten ^ OK
calls NNS calls ^ OK
you PRP you ^ OK
can MD can ^ OK
start VB start ^ OK
receiving VBG receiving ^ OK
calls NNS calls ^ OK
now RB now ^ OK

on IN ^ ^ repeat
on IN on ^ OK
your PRP ^ ^ repeat
your PRP your ^ OK
c- NN ^ ^ repeat
home NN home ^ OK
phone NN phone ^ OK

i PRP ^ ^ false_start
know VBP ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
heard VBD heard ^ OK
that DT that ^ OK
also RB also ^ OK
because IN because ^ OK
i PRP i ^ OK
tried VBD tried ^ OK
to TO to ^ OK
make VB make ^ OK
a DT a ^ OK
call NN call ^ OK
on IN on ^ OK
saturday NNP saturday ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
got VBD got ^ OK
a DT a ^ OK
recording NN recording ^ OK
saying VBG saying ^ OK
you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
make VB make ^ OK
it PRP it ^ OK
within IN ^ ^ false_start
twenty-four CD ^ ^ false_start
hou- NNS ^ ^ false_start
within IN within ^ OK
a DT a ^ OK
day NN day ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
and CC ^ ^ false_start
i- PRP ^ ^ false_start
and CC ^ ^ false_start
it PRP it ^ OK
hung VBD hung ^ OK
up RP up ^ OK
on IN on ^ OK
me PRP me ^ OK

so RB so ^ OK
far RB far ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
hung VBN hung ^ OK
up RP up ^ OK
on IN on ^ OK
anybody NN anybody ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
at IN at ^ OK
the DT the ^ OK
moment NN moment ^ OK
probably RB probably ^ OK
not RB not ^ OK
a DT a ^ OK
really RB really ^ OK
really RB ^ ^ repeat
close JJ close ^ OK
friend NN friend ^ OK

but CC ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
quite RB quite ^ OK
what WP what arg2 OK
it PRP it arg1 OK
is VBZ is arg1 OK
trey NP-PRD-1 trey ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
there EX there ^ OK
's BES 's predicate OK
a DT a arg1 OK
little JJ little arg1 OK
bit NN bit arg1 OK
of IN of arg1 OK
a DT a arg1 OK
w- XX ^ ^ false_start
hold NN hold arg1 OK
back RB back arg1 OK

and CC ^ ^ false_start
the DT the arg1 OK
other JJ other arg1 OK
one NN one arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
guy NN guy arg2 OK
who WP who arg0 OK
's HVS 's arg2 OK
let VBN let arg2 OK
his PRP his arg1 OK
finances NNS finances arg1 OK
go VB go arg1 OK
pretty RB pretty arg1 OK
much RB much arg1 OK
to IN to arg4 OK
the DT the arg4 OK
dogs NNS dogs arg4 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
ye- XX ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
he PRP ^ ^ false_start
just RB ^ ^ false_start
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
seem VB ^ ^ false_start
to TO ^ ^ false_start
have VB ^ ^ false_start
he PRP he arg0 OK
never RB never argM_neg OK
has VBZ has predicate OK
any DT any arg1 OK
spending NN spending arg1 OK
money NN money arg1 OK

and UNK ^ ^ false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
its- UNK ^ ^ false_start
it UNK ^ ^ repeat
i- UNK it ^ repeat
its- UNK ^ ^ false_start
's UNK 's predicate repeat
jus- UNK ^ ^ false_start
not UNK not argM_neg OK
enough UNK enough arg1 OK

i- PRP ^ ^ false_start
because IN because ^ OK
w- UH ^ ^ repeat
well UH ^ ^ false_start
you PRP ^ ^ repeat
know VBP ^ ^ repeat
you PRP you ^ OK
just RB just ^ OK

but CC but ^ OK
um UH ^ ^ filler

but CC ^ ^ false_start
it PRP it ^ OK
just RB just ^ OK
feels VBZ feels ^ OK
like IN like ^ OK
w- XX ^ ^ false_start
f- XX ^ ^ false_start
come VBN come ^ OK
on RP on ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
necessarily RB necessarily ^ OK

and CC ^ ^ false_start
i PRP i arg0 OK
would MD would ^ OK
n't RB n't argM_neg OK
guess VB guess predicate OK
either DT either arg0 OK
one CD one arg0 OK
of IN of arg0 OK
them PRP them arg0 OK
has VBZ has arg1 OK
more JJR more arg1 OK
than IN than arg1 OK
one CD one arg1 OK
or CC or arg1 OK
two CD two arg1 OK
very RB very arg1 OK
close JJ close arg1 OK
friends NNS friends arg1 OK
and CC and arg1 OK
maybe RB maybe arg1 OK
not RB not arg1 OK
even RB even arg1 OK
that DT that arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
one CD one argM_loc false_start
time NN time argM_loc false_start
uh UH ^ ^ filler
he PRP he arg0 OK
very RB very ^ false_start
strangely RB strangely ^ false_start
borrowed VBD borrowed predicate OK
some DT some arg1 OK
rent NN rent arg1 OK
money NN money arg1 OK

we PRP we arg0 OK
used VBD used ^ OK
to TO to ^ OK
borrow VB borrow predicate OK
from IN from arg2 OK
e- XX ^ ^ repeat
each DT each arg2 OK
other JJ other arg2 OK
every DT every argM_tmp OK
once RB once argM_tmp OK
in IN in argM_tmp OK
a DT a argM_tmp OK
while NN while argM_tmp OK
if IN if ^ OK
we PRP we arg0 OK
'd MD 'd ^ OK
need VB need predicate OK
a DT a arg1 OK
little JJ little arg1 OK
float NN float arg1 OK
like IN like arg1 OK
a DT a arg1 OK
hundred CD hundred arg1 OK
dollars NNS dollars arg1 OK
here RB here argM_loc OK
and CC and argM_loc OK
there RB there argM_loc OK

but CC ^ ^ false_start
then RB ^ ^ false_start
one CD ^ ^ repeat
one CD one argM_tmp OK
t- NN ^ ^ repeat
time NN time argM_tmp OK
he PRP he arg0 OK
said VBD said predicate OK
he PRP he arg0 OK
needed VBD needed arg1 OK
to TO to arg1 OK
borrow VB borrow arg1 OK
like UH ^ ^ filler
seven CD seven arg1 OK
hundred CD hundred arg1 OK
fifty CD fifty arg1 OK
dollars NNS dollars arg1 OK
to TO to arg1 OK
pay VB pay arg1 OK
his PRP his arg3 OK
rent NN rent arg3 OK

and CC ^ ^ repeat
then RB ^ ^ repeat
and CC ^ ^ false_start
then RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
really RB really ^ OK
pursue VB pursue predicate OK
the DT the arg1 OK
repayment NN repayment arg1 OK
for IN for argM_tmp OK
probably RB probably argM_tmp OK
s- CD ^ ^ repeat
six CD six argM_tmp OK
or CC or argM_tmp OK
nine CD nine argM_tmp OK
months NNS months argM_tmp OK
because IN because ^ OK
i PRP i arg0 OK
wanted VBD wanted predicate OK
to TO to arg1 OK
give VB give arg1 OK
him PRP him arg2 OK
some DT some arg1 OK
breathing NN breathing arg1 OK
space NN space arg1 OK

but CC ^ ^ false_start
then RB ^ ^ false_start
when WRB when argM_tmp OK
i PRP i argM_tmp OK
finally RB finally argM_tmp OK
approached VBD approached argM_tmp OK
him PRP him argM_tmp OK
about IN about argM_tmp OK
it PRP it argM_tmp OK
he ADVP-TMP- 1 he arg1 OK
was PRP was predicate OK
really VBD really arg2 OK
funny RB funny arg2 OK
about JJ about arg2 OK
it IN it arg2 OK

and CC ^ ^ false_start
he PRP ^ ^ repeat
he PRP he arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
want VB want predicate OK
to TO to arg1 OK
repay VB repay arg1 OK
it PRP it arg1 OK

anyway UNK anyway ^ OK
okay UNK okay ^ OK
so UNK so ^ OK

i PRP i arg0 OK
definitely RB definitely ^ OK
think VBP think predicate OK
i PRP i arg0 OK
would MD would arg1 OK
panic VB panic arg1 OK
just RB just ^ OK
because IN because ^ OK
it PRP it arg1 OK
's SBAR-3 's predicate OK
natural BES natural arg2 OK
that JJ that arg2 OK
if IN if arg2 OK
you IN you arg1 OK
're PRP 're arg2 OK
being VBP being arg2 OK
hurt VBG hurt arg2 OK
or VBN or arg2 OK
somebody NP-1 somebody arg1 OK
around CC around arg1 OK
you NN you arg1 OK
's IN 's arg2 OK
being PRP being arg2 OK
hurt BES hurt arg2 OK
my VBG my arg1 OK
first VBN first arg1 OK
reaction NP-2 reaction arg1 OK
would PRP would arg2 OK
be JJ be arg2 OK
to NN to arg2 OK
run MD run arg2 OK
right VB ^ ^ false_start

i PRP i arg0 OK
think VBP think predicate OK
if IN if arg1 OK
i PRP i arg1 OK
was VBD was arg1 OK
in IN in arg2 OK
that DT that arg2 OK
situation NN situation arg2 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would arg1 OK
try VB try arg1 OK
to TO to arg1 OK
do VB do arg1 OK
that DT that arg1 OK

i PRP i ^ OK
g- XX g- ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP i arg0 OK
definitely RB definitely ^ OK
d- XX ^ ^ repeat
could MD could ^ OK
say VB say predicate OK
a DT a arg1 OK
lot NN lot arg1 OK

i VBD i arg0 false_start
do PRP do ^ false_start
n't VBP n't ^ false_start
know RB know predicate false_start
and CC ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
how WRB how arg1 false_start
you PRP you arg0 OK
do VBP do arg1 false_start
feel VB feel arg1 OK
was ADVP-MNR- 1 ^ predicate false_start

um UH ^ ^ filler
if IN if ^ OK
a DT a ^ OK
terrorist JJ terrorist ^ OK
t- XX ^ ^ repeat
attack NN attack ^ OK
happened VBD happened ^ OK

eh UH ^ ^ filler
it PRP it ^ OK
depends VBZ depends ^ OK
on IN on ^ OK
like UH ^ ^ filler
where WRB ^ ^ repeat
when WRB when ^ OK
like UH ^ ^ filler

if IN if ^ OK
i PRP i ^ OK
was VBD was ^ OK
at IN at ^ OK
work NN work ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP i ^ OK
'd MD 'd ^ OK
probably RB probably ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
what WP ^ ^ false_start
i PRP ^ ^ false_start
a- XX ^ ^ false_start
honestly RB honestly ^ false_start
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB ^ ^ repeat
know VB know predicate OK

now UH ^ ^ false_start
that IN ^ ^ false_start
if IN if ^ OK
it PRP it arg1 OK
was VBD was predicate OK
n't RB n't ^ OK
close RB close argM_loc OK
to IN to argM_loc OK
home NN home argM_loc OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
would MD ^ ^ repeat
would MD would ^ OK
just RB ^ ^ repeat
just RB just ^ false_start
be VB be predicate OK
sympathetic JJ sympathetic arg2 OK
if IN ^ ^ repeat
was VBD ^ ^ false_start
if IN ^ ^ repeat
if IN if arg1 OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
hurt VBD hurt arg1 OK
anybody NN anybody arg1 OK
which WDT which ^ OK
i PRP i arg0 OK
think VBP think predicate OK
's BES the ^ false_start
's BES 's arg1 OK
whole JJ whole arg2 OK
that DT ^ ^ false_start
point NN point arg2 OK
of IN of arg2 OK
a DT a arg2 OK
terrorist JJ terrorist arg2 OK
attack NN attack arg2 OK

but CC but ^ OK
no UH not ^ false_start
if IN if ^ OK
it PRP it ^ OK
happened VBD happened ^ OK
like UH ^ ^ filler
to IN to ^ OK
family NN family ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's S-1 's ^ OK
really BES really ^ OK
hard JJ ^ ^ repeat
hard RB hard ^ OK
for VB for ^ false_start
me IN me ^ false_start
to JJ to ^ OK
tell TO tell ^ OK
when PRP when ^ OK

it PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
'd MD 'd ^ OK
have VB ^ ^ repeat
have VB have ^ OK
to TO ^ ^ repeat
to TO to ^ OK
get VB get predicate OK
more JJR more arg1 OK
detail NN detail arg1 OK
about IN about arg1 OK
when WRB when arg2 OK
and CC and arg2 OK
where WRB where arg2 OK
it PRP it arg1 OK
was VBD was arg1 OK

i PRP i ^ OK
would MD would ^ OK
be VB be ^ OK
at IN at ^ OK

but CC but ^ OK
if IN if ^ OK
it PRP it arg1 OK
happened VBD happened predicate OK
to IN to arg2 OK
me PRP me arg2 OK
i PRP ^ ^ repeat
i PRP i arg1 OK
would MD would ^ OK
definitely RB ^ ^ repeat
definitely RB definitely ^ false_start
be VB be predicate OK
worried JJ worried arg2 OK

and CC ^ ^ repeat
and CC and ^ OK

anyway UH ^ ^ false_start
so UH ^ ^ false_start
what WP ^ ^ false_start
how WRB how arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
feel VB feel predicate OK
about IN about arg2 OK
the DT the arg2 OK
war NN war arg2 OK
itself PRP itself arg2 OK

i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD did predicate OK

bunch NN ^ ^ repeat
of IN ^ ^ repeat
americans NNPS ^ ^ repeat
um UH ^ ^ filler
we PRP we arg1 OK
a DT ^ ^ repeat
bunch NN ^ ^ repeat
a DT ^ ^ repeat
were VBD ^ ^ repeat
were VBD were ^ OK
pretty RB pretty ^ OK
focused JJ focused predicate OK
on IN on arg1 OK
finding VBG finding arg1 OK
a DT a arg1 OK
place NN place arg1 OK
to TO to arg1 OK
have VB have arg1 OK
turkey NN turkey arg1 OK
and CC and arg1 OK
just RB ^ ^ false_start
sit VB sit arg1 OK
down RP down argM_loc OK

which WDT ^ ^ repeat
which WDT which ^ OK
was VBD ^ ^ repeat
was VBD was predicate OK
nice JJ nice arg1 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
bet VBP ^ ^ repeat
bet VBP bet predicate OK
they PRP they arg1 OK
were VBD were arg1 OK
n't RB n't arg1 OK
as RB as arg2 OK
big JJ big arg2 OK
as IN as arg2 OK
they PRP they arg1 OK
are VBP are arg2 OK
here RB here arg2 OK

ah UH ^ ^ filler
nice JJ nice ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
just RB ^ ^ false_start
mm UH ^ ^ filler
bu- XX ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
gone VBN gone predicate OK
up RB up arg4 OK
to TO to ^ OK
visit VB visit predicate OK
uh UH ^ ^ filler
a DT a argM_tmp OK
couple NN couple argM_tmp OK
of IN of argM_tmp OK
times NNS times argM_tmp OK
in IN in argM_tmp OK
the DT the argM_tmp OK
summer NN summer argM_tmp OK

and CC ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm ^ OK
going VBG going ^ OK
go VB to ^ false_start
go VB go ^ OK
visit VB visit predicate OK
this DT this argM_tmp OK
christmas NNP christmas argM_tmp OK
holiday NN holiday argM_tmp OK
because IN because ^ OK
um UH ^ ^ filler
i PRP i arg1 OK
've VBP 've ^ OK
never RB never ^ OK
been VBN been predicate OK
there RB there arg2 OK
in IN in arg2 OK
the DT the arg2 OK
winter NN winter arg2 OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
i PRP i arg0 OK
just RB ^ ^ false_start
want VBP want predicate OK
to TO to arg1 OK
see VB see arg1 OK
them PRP them arg1 OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
th- VBP ^ ^ false_start
it PRP it ^ OK
's BES 's predicate OK
not RB not arg1 OK
as RB as arg1 OK
cold JJ cold arg1 OK
as IN as arg1 OK
people NNS people arg0 OK
th- VBP ^ ^ repeat
think VBP think arg1 OK

n- XX ^ ^ false_start
j- XX ^ ^ false_start
yeah UH yeah ^ OK

now UH ^ ^ filler
will MD ^ ^ repeat
will MD will ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
d- VBP ^ ^ repeat
do VB do predicate OK
all PDT all arg1 OK
the DT the arg1 OK
cooking NN cooking arg1 OK

that DT ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
you PRP you arg0 OK
may MD may ^ OK
find VB find predicate OK
it PRP it arg1 OK
different JJ different arg1 OK
if IN if arg1 OK
you PRP you arg0 OK
're VBP 're arg1 OK
hosting VBG hosting arg1 OK
though RB though arg1 OK

well UH ^ ^ filler
i PRP i arg0 OK
'd MD 'd ^ OK
imagine VB imagine predicate OK
in IN in arg1 OK
new NNP new arg1 OK
york NNP york arg1 OK
too RB too arg1 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
sure JJ sure arg2 OK
people NNS people arg0 OK
call VB call arg2 OK
up RP up arg_particl OK
and CC and arg2 OK
order VB order arg2 OK
stuff NN stuff arg1 OK
all PDT all arg2 OK
the DT the arg2 OK
time NN time arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
they PRP they arg0 OK
go VBP go arg2 OK
to IN to arg4 OK
the DT the arg4 OK
grocery NN grocery arg4 OK
store NN store arg4 OK
and CC and arg2 OK
cook VBP cook arg2 OK
at IN at arg2 OK
home NN home arg2 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
always RB always ^ OK
imagined VBD imagined predicate OK
in IN in arg1 OK
the DT the arg1 OK
city NN city arg1 OK
that IN that arg1 OK
people NNS ^ ^ false_start
just RB ^ ^ false_start
a DT ^ ^ repeat
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
the DT the arg1 OK
stuff NN stuff arg1 OK
they PRP they arg0 OK
'll MD 'll arg1 OK
just RB just arg1 OK
deliver VB deliver arg1 OK
it PRP it arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
who WP who arg1 OK
was VBD was arg1 OK
in IN in arg2 OK
it PRP it arg2 OK

but CC but ^ OK
it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it ^ OK
was VBD ^ ^ repeat
's BES 's predicate OK
good JJ good arg1 OK

maybe RB ^ ^ repeat
maybe RB ^ ^ repeat
maybe RB maybe ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
can MD ^ ^ repeat
can MD can ^ OK
ha UH ^ ^ repeat
rent VB rent predicate OK
it PRP it arg1 OK
when WRB when ^ OK
you PRP you arg0 OK
go VBP go predicate OK
see VB see predicate OK
your PRP your arg1 OK
grandparents NNS grandparents arg1 OK

uh UH ^ ^ filler
well UH ^ ^ filler
farmer NNP farmer arg0 OK
's POS 's arg0 OK
almanac NNP almanac arg0 OK
says VBZ says predicate OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's arg1 OK
also RB ^ ^ repeat
supposed VBN ^ ^ repeat
supposed VBN supposed arg1 OK
to TO ^ ^ repeat
to TO to arg1 OK
be VB ^ ^ repeat
be VB be arg1 OK
a DT a arg2 OK
very RB ^ ^ repeat
very RB very arg2 OK
cold JJ cold arg2 OK
winter NN winter arg2 OK

so UH ^ ^ filler
there EX there ^ OK
'll MD 'll ^ OK
probably RB probably ^ OK
be VB be predicate OK
plenty NN plenty arg1 OK
of IN of arg1 OK
snow NN snow arg1 OK
and CC and arg1 OK
very RB very arg1 OK
much RB much arg1 OK
a DT ^ ^ repeat
a DT ^ ^ false_start
a DT a arg1 OK
true JJ true arg1 OK
new NNP ^ ^ repeat
new NNP new arg1 OK
england NNP ^ ^ repeat
england NNP england arg1 OK
winter NN winter arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do predicate OK
too RB too arg1 OK

i PRP i arg0 OK
always RB always ^ OK
thought VBD thought predicate OK
th- XX ^ ^ repeat
half PDT half ^ OK
that DT ^ arg1 repeat
the DT the arg1 OK
stuff NN stuff arg1 OK
was VBD was arg1 OK
made VBN made arg1 OK
up RP up arg1 OK

because UNK because ^ OK
uh UNK ^ ^ filler

uh UH ^ ^ filler
this DT ^ ^ false_start
y- PRP ^ ^ false_start
i PRP i ^ OK
believe VBP believe ^ OK
he PRP he ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
wait VB wait ^ OK
uh UH until ^ false_start
next JJ next ^ OK
june NNP june ^ OK

they PRP ^ ^ false_start
just RB ^ ^ false_start
n- VBP ^ ^ false_start
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
the DT the ^ OK
difference NN difference ^ OK

um UH ^ ^ filler
i PRP i ^ OK
was VBD was ^ OK
associated VBN associated ^ OK
not RB not ^ OK
very RB very ^ OK
much RB much ^ OK
because IN because ^ OK
it PRP it ^ OK
does VBZ does ^ OK
take VB take ^ OK
time NN time ^ OK
after IN after ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your ^ OK
work NN work ^ OK
day NN day ^ OK
and CC and ^ OK
your PRP your ^ OK
family NN family ^ OK
uh UH ^ ^ filler
with IN with ^ OK
scan NNP scan ^ OK

it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler

it PRP it ^ OK
's BES 's ^ OK
an DT an ^ OK
association NN association ^ OK
that WDT that ^ OK
takes VBZ takes ^ OK
care NN care ^ OK
of IN of ^ OK
uh UH ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
battered VBN battered ^ OK
or CC or ^ OK
neglected VBN neglected ^ OK
more RBR ^ ^ false_start
than IN ^ ^ false_start
anything NN ^ ^ false_start
children NNS children ^ OK

it- PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
just RB just ^ OK
the DT the ^ OK
children NNS children ^ OK

it- PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
the DT the ^ OK
parents NNS parents ^ OK
who WP who ^ OK
raised VBD raised ^ OK
the DT the ^ OK
children NNS children ^ OK
or CC or ^ OK
had VBD had ^ OK
them PRP them ^ OK

so UH so ^ OK
when WRB when ^ OK
they PRP they ^ OK
develop VBP develop ^ OK
or CC ^ ^ repeat
or CC or ^ OK
have VBP have ^ OK
their PRP their ^ OK
families NNS families ^ OK
it ADVP-TMP- 1 ^ ^ repeat
um BES ^ ^ filler
it UH it ^ OK
's PRP ^ ^ repeat
's PRP 's ^ OK
really BES really ^ OK
sad RB sad ^ OK

it PRP it ^ OK
's BES 's ^ OK
almost RB almost ^ OK
like IN like ^ OK
they PRP they ^ OK
need VBP need ^ OK
attention NN attention ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
really RB ^ ^ false_start
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
any DT any ^ OK
better RBR better ^ OK

so UH so ^ OK
there EX there ^ OK
's BES 's ^ OK
generations NNS generations ^ OK
there SBAR-2 there ^ OK
that RB that ^ OK
um WDT ^ ^ filler
do UH do ^ OK
n't VBP n't ^ OK
have RB have ^ OK
the VB the ^ OK
benefit DT benefit ^ OK
of NN of ^ OK
what IN what ^ OK
some WP some ^ OK
of DT of ^ OK
us IN us ^ OK
had PRP had ^ OK
with VBD with ^ OK
good IN good ^ OK
parents JJ parents ^ OK
and NNS and ^ OK
grounding CC grounding ^ OK

because IN because ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
people NNS people ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
then RB then ^ OK
maybe RB maybe ^ OK
their PRP their ^ OK
jobs NNS jobs ^ OK
make VBP make ^ OK
them PRP them ^ OK
have VB have ^ OK
a DT a ^ OK
longer JJR longer ^ OK
day NN day ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
even RB even ^ OK
the DT the ^ OK
closet NN closest ^ false_start
families NNS families ^ OK
with IN with ^ OK
their PRP their ^ OK
schedules NNS schedules ^ OK

whether IN whether ^ OK
it PRP it ^ OK
's BES 's ^ OK
their PRP their ^ OK
jobs NNS jobs ^ OK
or CC or ^ OK
other JJ other ^ OK
friends NNS friends ^ OK
or CC or ^ OK
second JJ second ^ OK
jobs NNS jobs ^ OK

or CC ^ ^ false_start
or CC ^ ^ false_start
just RB ^ ^ false_start
um UH ^ ^ filler
it PRP it ^ OK
's SBAR-1 's ^ OK
hard BES hard ^ OK
for JJ ^ ^ false_start
uh IN ^ ^ filler
cousin UH ^ ^ false_start
aunt NN ^ ^ false_start
to NN to ^ OK
have TO have ^ OK
those VB those ^ OK
occasions DT occasions ^ OK
and NNS and ^ OK
get-togethers CC get-togethers ^ OK

i PRP i ^ OK
know VBP know ^ OK
my PRP ^ ^ false_start
aunt NN ^ ^ false_start
when WRB ^ ^ false_start
our PRP ^ ^ false_start
family NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
as IN as ^ OK
we PRP we ^ OK
age VBP age ^ OK
um UH ^ ^ filler
one CD one ^ OK
of IN of ^ OK
our PRP our ^ OK
older JJR older ^ OK
aunts NNS aunts ^ OK
made VBD made ^ OK
um UH ^ ^ filler
a DT a ^ OK
big JJ big ^ OK
point NN point ^ OK
to TO to ^ OK
gather VB gather ^ OK
up RP up ^ OK
like UH like ^ OK
once RB once ^ OK
a DT a ^ OK
week NN week ^ OK

uh UH ^ ^ filler
i PRP i arg0 OK
fund NN fund predicate OK
raise VBP raise arg_particl OK
for IN for arg1 OK
the DT the arg1 OK
arts NNP arts arg1 OK
for IN for argM_extent OK
a DT a argM_extent OK
living NN living argM_extent OK

so RB so argM_discou OK
what WP what arg1 OK
would MD would argM_mod OK
you PRP you arg0 OK
d- VB do predicate false_start

it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
really RB ^ ^ false_start
like UH ^ ^ false_start
cute JJ ^ ^ false_start
little JJ ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
completely RB completely argM_extent OK
abandoned JJ abandoned arg2 OK

n- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do predicate OK
a DT a arg1 OK
japanese JJ japanese arg0 OK
dance NN dance arg0 OK
form NN form arg0 OK
called VBN called arg1 OK
butoh NNP butoh arg1 OK

and CC ^ ^ false_start
um UH ^ ^ filler
then RB then argM_discou OK
i PRP i arg0 OK
would MD would argM_mod OK
have VB have predicate OK
a DT a arg0 OK
place NN place arg0 OK
to TO to arg1 OK
house VB house arg1 OK
all DT all arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
performances NNS performances arg1 OK
because ADVP-1 because argM_cause OK
there IN there arg1 OK
's EX 's argM_cause OK
so BES so argM_adverb OK
much RB much argM_adverb OK
wonderful RB wonderful arg0 OK
theater JJ theater arg0 OK
going NN going argM_loc OK
on VBG on arg_particl OK
in RP in argM_loc OK
this IN this argM_loc OK
town DT town argM_loc OK

and CC ^ ^ false_start
uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the arg0 OK
big JJ big arg0 OK
theaters NNS theaters arg0 OK
are VBP are ^ OK
n't RB n't argM_neg OK
necessarily RB necessarily argM_adverb OK
picking VBG picking predicate OK
it PRP it arg1 OK
up RP up argM_mnr OK

we PRP we arg0 OK
're VBP 're ^ OK
doing VBG doing predicate OK
the DT the arg1 OK
nutcracker NNP nutcracker arg1 OK
out IN out argM_loc OK
here RB here argM_loc OK
at IN at argM_loc OK
the DT ^ ^ false_start
seattle NNP ^ ^ false_start
symphony NNP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
sorry JJ ^ ^ false_start
the DT the argM_loc OK
seattle NNP seattle argM_loc OK
pacific NNP pacific argM_loc OK
northwest NNP northwest argM_loc OK
ballet NNP ballet argM_loc OK

they PRP they arg0 OK
definitely RB definitely argM_adverb OK
make VBP make predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
more JJR more arg1 OK
money NN money arg1 OK
if IN if argM_cause OK
it PRP it arg1 OK
's BES 's argM_cause OK
a DT a arg2 OK
po- XX ^ ^ false_start
more RBR more arg2 OK
familiar JJ familiar arg2 OK
name NN name arg2 OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
very RB very argM_adverb OK
prevalent JJ prevalent arg2 OK
for IN ^ ^ false_start
sure JJ ^ ^ false_start

it PRP it arg0 OK
j- XX ^ ^ false_start
goes VBZ goes predicate OK
on RB on arg1 OK
and CC and arg1 OK
on RB on arg1 OK
and CC and arg1 OK
on RB on arg1 OK

everyone NN everyone arg0 OK
does VBZ does predicate OK
the DT the arg1 OK
same JJ same arg1 OK
performance NN performance arg1 OK
art NN art arg1 OK
over RB over argM_tmp OK
and CC and argM_tmp OK
over RB over argM_tmp OK
and CC and argM_tmp OK
over RB over argM_tmp OK
again RB again argM_tmp OK

the DT the arg1 OK
fine JJ fine arg1 OK
arts NNS arts arg1 OK
are VBP are ^ OK
are VBP ^ predicate repeat
in IN in argM_extent OK
every DT every argM_extent OK
aspect NN aspect argM_extent OK
just RB just argM_discou OK
as RB as argM_discou OK
present JJ present arg2 OK

so RB so argM_discou OK
that DT that arg0 OK
's BES 's predicate OK
what WP what arg0 OK
get VBP gets arg2 false_start
sold VBN sold arg1 OK

images NNS images ^ OK
in IN in ^ OK
i- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
van NNP van ^ OK
gogh NNP gogh ^ OK
and CC and ^ OK
picasso NNP picasso ^ OK
and CC and ^ OK
matisse NNP matisse ^ OK

well UH ^ ^ filler
it PRP it arg1 OK
was VBD was predicate OK
a DT a arg2 OK
big JJ big arg2 OK
to TO ^ arg2 false_start
do VB to-do ^ false_start
here RB here argM_loc OK
when WRB when ^ OK
we PRP we arg0 OK
cut VBP cut predicate OK
it PRP it arg1 OK
out RP out arg_particl OK

i PRP ^ ^ repeat
think VBP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
really RB really ^ OK
do VBP do ^ OK
n't RB n't ^ OK
like VB like predicate OK
the DT the arg1 OK
smell NN smell arg1 OK
of IN of arg1 OK
tobacco NN tobacco arg1 OK
anymore RB anymore argM_tmp OK

uh UH ^ ^ filler
that DT ^ ^ repeat
uh UH ^ ^ filler
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
pretty RB ^ ^ repeat
uh UH ^ ^ filler
pretty RB pretty arg2 OK
good JJ good arg2 OK

gossiping NN gossiping ^ OK

i PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
that DT ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
on IN on ^ false_start
the DT the ^ false_start
other JJ other ^ false_start
hand NN hand ^ false_start
i PRP ^ ^ repeat
it PRP it arg1 OK
can MD can ^ OK
be VB be predicate OK
very RB very arg2 OK
destructive JJ destructive arg2 OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
i PRP ^ ^ false_start
ca MD ^ ^ false_start
n't RB ^ ^ false_start
i PRP i arg1 OK
have VBP have predicate OK
a DT a arg1 OK
problem NN problem arg1 OK
with IN with ^ OK
being VBG being predicate false_start
overweight JJ overweight arg2 false_start

w- WP ^ ^ repeat
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
mean VB mean predicate OK

i PRP ^ ^ repeat
do- VBZ ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
never RB ^ ^ repeat
i PRP i arg0 OK
never RB never ^ OK
had VBD had ^ OK
really RB ^ predicate false_start
a DT a arg1 OK
problem NN problem arg1 OK
with IN with ^ OK
my PRP my ^ OK
weight NN weight ^ OK
until IN until ^ OK
i PRP i arg1 OK
was VBD was predicate OK
about RB about arg2 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
forty CD forty arg2 OK
five CD five arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
then RB ^ ^ false_start
i PRP ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
had VBD ^ ^ false_start
had VBD had ^ OK
never RB ^ ^ false_start
never RB never ^ OK
of IN ^ ^ false_start
course NN ^ ^ false_start
in IN ^ ^ false_start
my PRP ^ ^ false_start
life NN ^ ^ false_start
been VBN been predicate OK
to IN to arg2 OK
a DT a arg2 OK
gym NN gym arg2 OK
to TO to ^ OK
workout VB work predicate false_start
workout VB out arg_particl false_start
or CC or ^ OK
uh UH ^ ^ filler
used VBD used predicate OK
a DT a arg1 OK
treadmill NN treadmill arg1 OK
or CC ^ ^ false_start
anything NN ^ ^ false_start
except IN except ^ false_start
for IN for arg2 false_start
sports NNS sports arg1 false_start
that WDT that ^ false_start
i PRP i arg0 false_start
played VBD played predicate false_start
over IN over argM_tmp false_start
the DT the argM_tmp false_start
years NNS ^ argM_tmp false_start
not RB ^ ^ false_start
much RB years ^ false_start

and CC ^ ^ false_start
uh UH ^ ^ filler
the DT the ^ OK
doctor NN doctor ^ OK
basically RB ^ ^ false_start
told VBD told ^ OK
me PRP me ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
said VBD said predicate OK
well UH ^ ^ filler
these DT these arg1 OK
medications NNS medications arg1 OK
are VBP are arg1 OK
a DT a arg2 OK
pain NN pain arg2 OK
in IN ^ ^ false_start
the DT ^ ^ false_start
ass NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler

and CC ^ ^ false_start
he PRP he arg0 OK
said VBD said predicate OK
well UH ^ ^ filler
lose VB lose arg1 OK
weight NN weight arg2 OK

which WDT ^ ^ repeat
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
p- JJ ^ ^ repeat
i PRP i arg0 OK
'm VBP 'm predicate OK
pretty RB pretty arg2 OK
good JJ good arg2 OK
about IN about ^ OK
going VBG going predicate OK
to IN to arg4 OK
the DT the arg4 OK
gym NN gym arg4 OK
three CD three argM_tmp OK
times NNS times argM_tmp OK
a DT a argM_tmp OK
week NN week argM_tmp OK

it PRP it arg1 OK
's S-2 's predicate OK
easier BES easier arg2 OK
to JJR ^ ^ repeat
first TO ^ ^ repeat
for RB for ^ OK
me IN me arg1 OK
to PRP ^ ^ repeat
somehow TO ^ ^ repeat
as RB ^ ^ false_start
you IN ^ ^ false_start
say PRP ^ ^ false_start
to VBP to ^ OK
be TO be predicate OK
undisciplined VB undisciplined arg2 OK
about JJ about ^ OK
that IN that ^ OK

i PRP i arg0 OK
still RB still ^ OK
try VBP try predicate OK
to TO to arg1 OK
do VB do arg1 OK
it PRP it arg1 OK
on IN on argM_tmp OK
the DT the argM_tmp OK
off JJ off argM_tmp OK
days NNS days argM_tmp OK

i PRP i arg0 OK
use VBD used ^ false_start
to TO to ^ OK
live VB live predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
hollywood NNP hollywood argM_loc OK
hills NNPS hills argM_loc OK

but CC ^ ^ false_start
when WRB when ^ OK
i PRP i ^ OK
lived VBD lived ^ OK
back RB back ^ OK
east RB east ^ OK
for IN for ^ OK
many JJ ^ ^ repeat
many JJ many ^ OK
years NNS years ^ OK

but CC but ^ OK
like UH ^ ^ filler
according VBG ^ ^ repeat
according VBG according ^ OK
to IN ^ ^ repeat
to IN to ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
mom NNP mom ^ OK
she PRP she ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
like UH ^ ^ filler
give VB give ^ OK
me PRP me ^ OK
any DT any ^ OK
money NN money ^ OK
or CC or ^ OK
something NN something ^ OK

are VBP are ^ OK
are VBP ^ ^ repeat
you PRP you ^ OK
you PRP ^ ^ repeat
in IN in ^ OK
done JJ ^ ^ repeat
school NN school ^ OK

did VBD did ^ OK
they PRP they ^ OK
go VB go ^ OK
to IN to ^ OK
like UH ^ ^ filler
a DT a ^ OK
s- XX ^ ^ false_start
nice JJ nice ^ OK
like UH ^ ^ filler

so UH so ^ OK
did VBD ^ ^ repeat
di- VBD ^ ^ repeat
did VBD did ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
ha- VB ^ ^ repeat
have VB have ^ OK
to TO to ^ OK
take VB take ^ OK
loans NNS loans ^ OK
and CC and ^ OK
stuff NN stuff ^ OK

like UH ^ ^ filler
did VBD did ^ OK
you PRP you ^ OK
make VB make ^ OK
lot NN a ^ false_start
lot NN lot ^ OK
of IN of ^ OK
money NN money ^ OK
or CC or ^ OK
were VBD were ^ false_start
you PRP you ^ OK
just RB just ^ OK
working VBG working ^ OK

like UH ^ ^ filler
what WP ^ ^ repeat
what WP what ^ OK
's BES 's ^ OK
your PRP your ^ OK
job NN job ^ OK

what WDT ^ ^ repeat
like UH ^ ^ filler
what WDT ^ ^ repeat
c- XX ^ ^ false_start
w- WDT ^ ^ repeat
what WDT what ^ OK
major NN major ^ OK

uh UH ^ ^ filler
b- XX ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
working VBG working ^ OK
at IN at ^ OK
the DT the ^ OK
restaurant NN restaurant ^ OK

for- XX ^ ^ false_start
what WP ^ ^ false_start
's BES ^ ^ false_start
the DT ^ ^ false_start
topics NNS ^ ^ false_start
that WDT ^ ^ false_start
you PRP ^ ^ false_start
is VBZ is ^ OK
this DT this ^ OK
your PRP your ^ OK
second JJ second ^ OK
call NN call ^ OK
third JJ third ^ OK
call NN call ^ OK
fourth JJ fourth ^ OK
call NN call ^ OK

like UH ^ ^ filler
what WP what ^ OK
kin- NN kin- ^ OK
like UH ^ ^ filler

so RB so ^ OK
do VBP ^ ^ repeat
do VB ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
live VB live ^ OK
in IN in ^ OK
the DT the ^ OK
city NN city ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
all RB all ^ OK
in IN in ^ OK
the DT the ^ OK
philadelphia NNP philadelphia ^ OK
weekly NNP weekly ^ OK

like UH ^ ^ filler
is BES is ^ OK
it PRP it ^ OK
the DT the ^ OK
same JJ same ^ OK
thing NN thing ^ OK
as IN as ^ OK
this DT this ^ OK
one CD one ^ OK
or CC or ^ OK
no DT no ^ OK

so RB so ^ OK
i PRP i ^ OK
know VBP know ^ OK
like UH ^ ^ filler

uh-uh UH uh-uh ^ OK

how WRB how ^ OK
far RB far ^ OK
are PP-1 are ^ OK
you VBP you ^ OK
from PRP from ^ OK
jersey IN jersey ^ OK
city NNP city ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
i PRP ^ ^ repeat
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
long JJ long arg2 OK
time NN time arg2 OK

oh UH ^ ^ filler
well UH ^ ^ filler
it PRP it arg0 OK
depends VBZ depends predicate OK
on IN on arg1 OK
how WRB how argM_extent OK
civilized JJ civilized argM_extent OK
it PRP it arg1 OK
is VBZ is arg1 OK
there RB there arg2 OK

they PRP they arg1 OK
're VBP 're predicate OK
better JJR better arg2 OK
off RP off arg2 OK
than IN ^ ^ repeat
than IN than argM_extent OK
we PRP we arg1 OK
might MD might argM_mod OK
be VB be arg2 OK
here RB here arg2 OK
in IN in arg2 OK
the DT the arg2 OK
united NNP united arg2 OK
states NNPS states arg2 OK

but CC but ^ OK
if IN if ^ OK
it PRP it ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
'd MD ^ ^ repeat
'd MD 'd argM_mod OK
miss VB ^ ^ repeat
miss VB miss predicate OK
a DT a arg1 OK
good JJ good arg1 OK
beer NN beer arg1 OK
or CC or arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
glass NN glass arg1 OK
of IN of arg1 OK
wine NN wine arg1 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
does VBZ does ^ OK
sound VB sound predicate OK
intriguing JJ intriguing arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
the DT the ^ OK
island NN island ^ OK
life NN life ^ OK

less JJR there arg1 false_start
less JJR is predicate false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
less JJR less arg2 OK
pressure NN pressure arg1 OK
of IN of arg1 OK
the DT the arg1 OK
big JJ big arg1 OK
city NN city arg1 OK
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when argM_tmp OK
you PRP you arg0 OK
compare VBP compare arg2 OK
it PRP it arg1 OK
to IN to arg2 OK
to IN ^ ^ repeat
the DT ^ ^ repeat
the DT ^ ^ false_start
ro- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg2 OK
uh UH ^ ^ filler
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
stress NN stress arg2 OK
of IN of arg2 OK
uh UH ^ ^ filler
los NNP los arg2 OK
angeles NNP angeles arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
'll MD 'll argM_mod OK
take VB take predicate OK
los NNP los arg1 OK
angeles NNP angeles arg1 OK

well UH ^ ^ filler
i PRP i ^ OK
just RB just ^ OK
think VBP think ^ OK
city NN city ^ OK
life NN life ^ OK
really RB really ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
ah UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
a DT a arg2 OK
city NN city arg2 OK
person NN person arg2 OK

eve- XX ^ ^ false_start
ev- XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP like predicate OK
the DT the arg1 OK
country NN country arg1 OK
i PRP ^ ^ false_start
and CC and arg1 OK
the DT the arg1 OK
islands NNPS islands arg1 OK

but CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
the DT the arg1 OK
idea NN idea arg1 OK
of IN of arg1 OK
going VBG going arg1 OK
native JJ native arg1 OK
uh PP-TMP-1 ^ ^ filler
is UH is predicate OK
not VBZ not argM_neg OK
that RB that arg2 OK
appealing RB appealing arg2 OK
to JJ to arg2 OK
me IN me arg2 OK
for PRP ^ ^ repeat
for IN for arg2 OK
ten IN ten arg2 OK
years CD years arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
probably RB probably arg2 OK
another DT another arg2 OK
city NN city arg2 OK
t- XX ^ ^ false_start
like IN ^ ^ repeat
uh UH ^ ^ filler
like IN like arg2 OK
any DT any arg2 OK
other JJ other arg2 OK

but CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
heard VBN heard predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
climate NN climate arg1 OK
is VBZ is arg1 OK
nice JJ nice arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
like VB like predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
heat NN heat arg1 OK
and CC and arg1 OK
humidity NN humidity arg1 OK

and CC and ^ OK
uh UH ^ ^ filler

even RB even ^ OK
though IN though ^ OK
and CC ^ ^ false_start

uh UH ^ ^ filler
the DT the arg1 OK
year-round JJ year-round arg1 OK
w- NN ^ ^ repeat
warmth NN warmth arg1 OK
does VBZ does ^ OK
n't RB n't argM_neg OK
necessarily RB necessarily argM_adverb OK
appeal VB appeal predicate OK
to IN to arg2 OK
me PRP me arg2 OK

and CC ^ ^ false_start
like IN like argM_mnr OK
i PRP i arg0 OK
say VBP say predicate OK
i S ^ ^ repeat
i VBP i arg0 OK
like PRP ^ ^ repeat
like PRP like arg1 OK
city VBP city arg1 OK
life NN life arg1 OK

but CC ^ ^ false_start
back RB ^ ^ false_start
on IN ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
m- XX ^ ^ false_start
m- RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
maybe RB maybe argM_discou OK
tomorrow NN tomorrow argM_tmp OK
i PRP i arg0 OK
'll MD 'll argM_mod OK
look VB look predicate OK
up RP up arg_particl OK
exactly RB exactly arg2 OK
where WRB where arg2 OK
bora NNP bora arg1 OK
bora NNP bora arg1 OK
is VBZ is arg1 OK

uh UH ^ ^ filler
i PRP i ^ OK
mean VBP mean ^ OK
he- XX ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ repeat
just RB just ^ OK
as IN as ^ OK
a DT a ^ OK
guess NN guess ^ OK

uh UH ^ ^ filler
but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
to IN to arg2 OK
hawaii NNP hawaii arg2 OK

oh UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
fantastic JJ fantastic arg2 OK

uh UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
the DT the arg1 OK
weather NN weather arg1 OK
when WRB when argM_tmp OK
i PRP i argM_tmp OK
was VBD was argM_tmp OK
there RB there argM_tmp OK
was ADVP-TMP- 1 was predicate OK
antastic VBD fantastic arg2 OK
because JJ because argM_cause OK
it IN it arg0 OK
has PRP has argM_cause OK
those VBZ ^ ^ repeat
those DT those arg1 OK
breezes DT breezes arg1 OK

hawaii NNP hawaii arg1 OK
's BES 's predicate OK
uh UH ^ ^ filler
more RBR ^ ^ repeat
more RBR more arg2 OK
n- RB ^ ^ repeat
north RB north arg2 OK
of IN of arg2 OK
the DT the arg2 OK
equator NN equator arg2 OK

and CC ^ ^ false_start
the DT the arg1 OK
breezes NNS breezes arg1 OK
that WDT ^ ^ repeat
that WDT that arg1 OK
come VBP come arg1 OK
off IN off arg1 OK
the DT the arg1 OK
ocean NN ocean arg1 OK
are VBP are predicate OK
very RB ^ ^ false_start
very RB very arg2 OK
nice JJ nice arg2 OK

it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
when WRB when argM_tmp OK
we PRP we argM_tmp OK
were VBD were argM_tmp OK
there RB there argM_tmp OK
i ADVP-TMP- 1 i arg0 OK
think PRP think predicate OK
it VBP ^ ^ false_start
was PRP ^ ^ false_start
uh VBD ^ ^ filler
i UH ^ ^ false_start
c- PRP ^ ^ false_start
the XX the arg1 OK
temperature DT temperature arg1 OK
was NN was arg1 OK
in VBD in arg2 OK
the IN the arg2 OK
seventies DT seventies arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
not RB not ^ OK
tropical JJ tropical ^ OK

not RB ^ ^ repeat
not RB not ^ OK
the DT the ^ OK
tropical JJ tropical ^ OK
heat NN heat ^ OK

that DT that ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't argM_neg OK
like VB like predicate OK
that DT that arg1 OK
uh UH ^ ^ filler
environment NN environment arg1 OK

mm UH mm ^ OK
mm UH mm ^ OK

um UH ^ ^ filler
do VBP do ^ OK
you PRP you arg0 OK
have VB have predicate OK
a DT a arg1 OK
dollar NN dollar arg1 OK
theater NN theater arg1 OK
where WRB where argM_loc OK
you PRP you arg0 OK
live VBP live argM_loc OK

do VBP do arg0 OK
you PRP you ^ OK
have VB have predicate OK
a DT a arg1 OK
dollar NN dollar arg1 OK
theater NN theater arg1 OK
where WRB where arg1 OK
you PRP you arg0 OK
live VBP live argM_loc OK

you PRP ^ ^ repeat
definitely RB ^ ^ false_start
you PRP you arg0 OK
have VBP ^ ^ repeat
have VBP have ^ OK
to TO ^ ^ repeat
to TO to ^ OK
judge VB judge predicate OK
which WDT which arg1 OK
which WDT ^ ^ repeat
ones NNS ones arg1 OK
ones NNS ^ ^ repeat
are VBP are arg1 OK
are VBP ^ predicate repeat
worth JJ worth arg2 OK
it PRP it arg2 OK
and CC ^ ^ false_start
n't RB ^ ^ false_start

w- XX ^ ^ repeat
how WRB how arg2 OK
much JJ much arg2 OK
is VBZ is predicate OK
a DT a arg1 OK
ticket NN ticket arg1 OK

they PRP they arg1 OK
used VBD used ^ OK
to TO to ^ OK
be VB be predicate OK
real RB ^ ^ false_start
nasty JJ ^ arg2 false_start
and CC ^ arg2 false_start
dirty JJ dirty arg2 OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
like UH ^ ^ filler
when WRB when ^ OK
um UH ^ ^ filler
the DT the ^ OK
blair NNP blair ^ OK
witch NNP witch ^ OK
project NNP project ^ OK
came VBD came ^ OK
out RB out ^ OK

yeah UH yeah ^ OK

i PRP i ^ OK
've VBP 've ^ OK

d- XX ^ ^ false_start
i- XX ^ ^ false_start
you PRP you arg0 OK
have VBP have predicate OK
a DT a arg1 OK
million CD million arg1 OK
and CC and arg1 OK
a DT a arg1 OK
half DT half arg1 OK
canadian JJ canadian arg1 OK
dollars NNS dollars arg1 OK

canada NNP canada arg1 OK
is VBZ is predicate OK
pretty RB pretty arg2 OK
close RB close arg2 OK
to IN to arg2 OK
america NNP america arg2 OK
is VBZ ^ ^ false_start
language NN ^ ^ false_start
shows VBZ ^ ^ false_start
society NN with ^ false_start
w- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
same JJ same ^ OK
language NN language ^ OK
same JJ same ^ OK
t. NNP t. ^ OK
v. NNP v. ^ OK
shows VBZ shows ^ OK
language NN ^ ^ false_start
shows VBZ ^ ^ false_start
society NN and ^ false_start
same JJ same ^ OK
society NN society ^ OK
pretty RB pretty ^ OK
much RB much ^ OK

i PRP i arg0 OK
think VB think predicate OK
it PRP it arg1 OK
'd MD 'd arg1 OK
be VB ^ ^ repeat
be VB be arg1 OK
enough RB ^ ^ repeat
enough RB enough arg2 OK
to- TO ^ ^ repeat
to TO to arg2 OK
live VB live arg2 OK
on IN on arg2 OK

i- PRP ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
'd MD 'd arg1 OK
like VB like arg1 OK
the DT the arg1 OK
climate NN climate arg1 OK
better RBR better arg1 OK
in IN in arg1 OK
canada NNP canada arg1 OK

so RB ^ ^ false_start
i- PRP ^ ^ repeat
it PRP it ^ OK
might SBAR-1 might ^ OK
be VB ^ ^ repeat
be MD be predicate OK
hard VB hard arg1 OK
for JJ for arg1 OK
me IN me arg0 OK
to PRP to arg1 OK
move TO move arg1 OK
someplace VB someplace arg2 OK
else RB else arg2 OK
because RB because ^ OK
i IN ^ ^ repeat
'd PRP ^ ^ false_start
i MD i arg0 OK
would PRP would ^ OK
n't MD n't argM_neg OK
have RB have predicate OK
a VB a arg1 OK
job DT job arg1 OK

eh UH ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
learned VBN learned predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
on SBAR-2 on arg1 OK
the IN the arg1 OK
job DT job arg1 OK
that NN that ^ OK
they WDT they arg0 OK
never PRP never argM_neg OK
taught RB taught predicate OK
us VBD us arg2 OK
in PRP in argM_loc OK
law IN law argM_loc OK
school NN school argM_loc OK

ma- XX ^ ^ false_start
it PRP it arg0 OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
make VB make predicate OK
him PRP him arg1 OK
stay VB stay arg1 OK
because IN because ^ OK
they PRP they arg0 OK
paid VBD paid predicate OK
for IN for arg3 OK
it PRP it arg3 OK

so UH ^ ^ false_start
figure VB figure ^ OK
what WP what ^ OK
the DT the ^ OK
heck NN heck ^ OK

so RB ^ ^ false_start
then RB then ^ OK
i PRP i arg0 OK
y- XX ^ ^ false_start
called VBD called predicate OK
in RP in argM_other OK
myself PRP myself arg1 OK

w- XX ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
lot NN lot ^ OK
probably RB probably ^ OK

probably RB probably ^ OK
unless IN unless ^ OK
uh UH ^ ^ filler
th- XX ^ ^ repeat
the DT the arg0 OK
computer NN computer arg0 OK
calls VBZ calls predicate OK
me PRP me arg1 OK
at IN at argM_tmp OK
a DT a argM_tmp OK
right JJ right argM_tmp OK
time NN time argM_tmp OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
expect VB expect predicate OK
them PRP them arg0 OK
to TO to arg1 OK
call VB call arg1 OK
me PRP me arg1 OK
until IN until arg1 OK
fifth NN fifth arg1 OK

unl- IN ^ ^ false_start
or CC ^ ^ repeat
or CC or ^ OK
maybe RB maybe ^ OK
they PRP ^ ^ false_start
the DT ^ ^ repeat
the DT the arg0 OK
study NN study arg0 OK
started VBD started predicate OK

i PRP ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
get VB ^ ^ false_start
the DT ^ ^ false_start
u- XX ^ ^ false_start
i PRP i ^ OK
uh UH ^ ^ filler

n- UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
no UH no ^ OK

i PRP ^ arg_particl repeat
did VBD ^ ^ false_start
n't RB ^ ^ false_start
i PRP i arg0 OK
signed VBD signed predicate OK
^ ^ up ^ OK
over IN over argM_loc OK
the DT the argM_loc OK
telephone NN telephone argM_loc OK

i PRP i arg0 OK
gave VBD gave predicate OK
th- XX ^ ^ repeat
them PRP them arg2 OK
my PRP my arg1 OK
e-mail NN e-mail arg1 OK
address NN address arg1 OK

but CC but ^ OK
i- PRP ^ ^ repeat
i PRP i arg0 OK
've VBP 've ^ OK
run VBN run predicate OK
into IN into arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
that DT that arg1 OK
lately RB lately argM_tmp OK

y- XX ^ ^ false_start
y- XX ^ ^ false_start
y- XX ^ ^ false_start
just RB ^ ^ false_start
what UH ^ ^ false_start
like UH ^ ^ filler
check VB check ^ OK
in RB ^ ^ false_start
what WP what ^ OK
they PRP they ^ OK
say VBP say ^ OK

actually RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
d- VBD ^ ^ repeat
did VBD did predicate OK
another DT another arg1 OK
one CD one arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
dialed VBN dialed predicate OK
in RP in ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
dialed VBD dialed predicate OK
in RP in arg1 OK
because IN because ^ OK
they PRP they arg0 OK
sent VBD sent predicate OK
me PRP me arg2 OK
an DT an arg1 OK
email NN email arg1 OK
with IN with arg1 OK
my PRP my arg1 OK
pin NN pin arg1 OK
number NN number arg1 OK

so UH ^ ^ false_start
i PRP i arg0 OK
dialed VBN dialed predicate OK
in RP in arg_particl OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
i PRP i arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
put VBN put predicate OK
in RP in argM_loc OK
my PRP my arg1 OK
pin NN pin arg1 OK
number NN number arg1 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

and CC ^ ^ false_start
so UH ^ ^ false_start
it PRP it arg0 OK
was VBD ^ ^ false_start
like IN said predicate false_start
i PRP i arg0 OK
had VBD had arg1 OK
reached VBN reached arg1 OK
my PRP my arg1 OK
quota NN quota arg1 OK
of IN of arg1 OK
three CD three arg1 OK
calls NNS calls arg1 OK

which WDT which ^ OK
i PRP i ^ OK
was VBD was ^ OK
n't RB n't ^ OK
expecting VBG expecting ^ OK
at RB ^ ^ false_start
all RB ^ ^ false_start

and CC ^ ^ false_start
and CC ^ ^ false_start
they PRP they arg0 OK
put VBD put predicate OK
it PRP it arg1 OK
in RB in argM_loc OK
aga- RB ^ ^ repeat
again RB again ^ OK

you PRP ^ ^ repeat
you PRP you arg1 OK
just RB ^ ^ false_start
go VBP ^ ^ false_start
and CC ^ ^ false_start
do VBP do predicate OK
it PRP it arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
instead IN instead ^ false_start
of IN of ^ false_start
waiting VBG waiting predicate false_start
for IN for arg1 false_start
them PRP them arg0 false_start
to TO to arg1 false_start
call VB call arg1 false_start

i PRP i arg0 OK
did VBD did predicate OK
um UH ^ ^ filler
would MD would arg1 OK
you PRP you arg0 OK
ever RB ever argM_tmp false_start
uh UH ^ ^ filler
commit VB commit arg1 OK
perjury NN perjury arg1 OK

to TO to ^ OK
leave VB leave ^ OK
the DT the ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
that DT that arg1 OK
was VBD was predicate OK
the DT the arg2 OK
one NN one arg2 OK
that WDT ^ ^ repeat
that WDT where arg2 false_start
i PRP i arg1 OK
got VBD was arg2 false_start
put VBN put arg2 OK
on IN on arg2 OK
hold NN hold arg2 OK

so UH ^ ^ false_start
did VBD ^ ^ repeat
would MD would ^ OK
you PRP you arg0 OK
take VB take predicate OK
the DT the arg1 OK
million CD million arg1 OK
dollars NNS dollars arg1 OK

and CC ^ ^ false_start
it PRP it arg1 OK
was VBD was predicate OK
to TO to arg2 OK
never RB ^ ^ repeat
never RB never argM_tmp OK
see VB see arg2 OK
or NP-1 or arg2 OK
talk CC talk arg2 OK
to VB to arg2 OK
your IN your arg2 OK
best NP-1 best arg2 OK
friend PRP friend arg2 OK
again JJS again argM_tmp OK

so UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
could MD could ^ OK
n't RB n't argM_neg OK
survive VB survive predicate OK
without IN without arg1 OK
calling VBG calling arg1 OK
her PRP her arg1 OK

now UH ^ ^ false_start
was VBD ^ ^ false_start
a- DT ^ ^ repeat
an DT ^ ^ false_start
immediate- JJ ^ ^ false_start
both DT ^ ^ false_start
we PRP both ^ false_start
of IN ^ ^ false_start
we PRP of ^ false_start
us PRP ^ ^ false_start
we PRP us ^ false_start
immediately RB immediately ^ false_start
said VBD ^ ^ repeat
were VBD ^ ^ false_start
like RP said ^ false_start
no UH no ^ OK
question NN to ^ false_start
the DT ^ ^ repeat
the DT the ^ false_start
p- JJ ^ ^ repeat
perjury NN perjury ^ false_start
question NN question ^ false_start

and CC ^ ^ false_start
then RB ^ ^ false_start
we PRP we arg0 OK
^ ^ ^ ^ false_start
like RP said predicate false_start
well UH ^ ^ filler
what WP what arg1 OK
if IN if arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
like UH ^ ^ filler
your PRP ^ ^ repeat
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your arg2 OK
son NN ^ ^ repeat
child NN child arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
y- XX ^ ^ repeat
w- XX ^ ^ repeat
the- PRP ^ ^ repeat
i- XX ^ ^ repeat
circumstances NNS ^ ^ false_start
were VBD ^ ^ false_start
that IN ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
you PRP you arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
commit VB commit predicate OK
perjury NN perjury arg1 OK
then RB then ^ OK
they PRP they arg1 OK
'd MD 'd ^ OK
like UH ^ ^ filler
be VB be ^ OK
put VBN put predicate OK
away RB away argM_loc OK
for IN for argM_tmp OK
a DT a argM_tmp OK
really RB ^ ^ false_start
long JJ long argM_tmp OK
time NN time argM_tmp OK

and CC ^ ^ false_start
if IN ^ ^ false_start
they PRP ^ ^ false_start
just RB ^ ^ false_start
happe- VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
was SBAR-1 was predicate OK
accidental VBD accidental arg2 OK
that JJ that arg1 OK
they IN they arg1 OK
were PRP were arg1 OK
in VBD in arg2 OK
the IN the arg2 OK
situation DT situation arg2 OK

hah UH ^ ^ false_start
but CC ^ ^ false_start
computer NN computer arg1 OK
games NNS games arg1 OK
is VBZ are predicate false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
easy JJ easy arg2 OK
compared VBN compared arg1 OK
to IN to arg1 OK
those DT those arg2 OK

i PRP i arg0 OK
have VBP have predicate OK
a DT a arg0 OK
neighbor NN neighbor arg0 OK
that WDT that arg1 OK
plays VBZ plays arg1 OK
computer NN computer arg1 OK
games NNS games arg1 OK
too RB too ^ OK

um UH ^ ^ filler
i PRP ^ ^ repeat
never RB ^ ^ repeat
really RB ^ ^ false_start
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
played VBN played predicate OK
computer NN computer arg1 OK
games NNS games arg1 OK
but CC but ^ OK
not RB not argM_neg OK
over IN over argM_loc OK
the DT the argM_loc OK
internet NNP internet argM_loc OK

i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
never RB ^ ^ repeat
never RB never ^ OK
do- VBN ^ ^ repeat
checked VBN checked predicate OK
into IN into ^ OK
that DT that arg1 OK
at RB ^ ^ false_start
all RB ^ ^ false_start

i PRP i ^ OK
have VBP have ^ OK
a DT a ^ OK
buyer NN buyer ^ OK
uh UH ^ ^ filler
up RB up ^ OK
in IN ^ ^ repeat
in IN in ^ OK
seattle NNP seattle ^ OK
washington NNP washington ^ OK

so UH so ^ OK
that IN that ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
ship VBP ship ^ OK
them PRP them ^ OK
out RP out ^ OK

it PRP ^ ^ false_start
it PRP it ^ OK
was VBD ^ ^ false_start
was VBD was ^ OK
just RB just ^ OK
jacket NN jacket ^ OK
nice JJ ^ ^ false_start
weather NN weather ^ OK
here RB here ^ OK
tod- RB ^ ^ false_start
today RB today ^ OK

snow NN snow ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
sleet NN sleet ^ OK
something NN something ^ OK

but CC ^ ^ repeat
but CC but ^ OK
i PRP i ^ OK
hate VBP hate ^ OK
it PRP it ^ OK

because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
year RB year ^ OK
round RB round ^ OK
we PRP we ^ OK
do VBP do ^ OK
n't RB n't ^ OK
drive VB drive ^ OK
well RB well ^ OK
in IN in ^ OK
it PRP it ^ OK
here RB here ^ OK

and CC ^ ^ false_start
see UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
grow VB grow ^ OK
up RP up ^ OK
with IN with ^ OK
it PRP it ^ OK

i PRP i ^ OK
was VBD was ^ OK
raised VBN raised ^ OK
in IN in ^ OK
lodi NNP lodi ^ OK
california NNP california ^ OK
and CC ^ ^ repeat
a- CC ^ ^ repeat
and CC and ^ OK
then RB then ^ OK
came VBD came ^ OK
to IN to ^ OK
oklahoma NNP oklahoma ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
like VB like ^ OK
oklahoma NNP oklahoma ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
good JJ good ^ OK
place NN place ^ OK
to TO to ^ OK
have VB have ^ OK
a DT a ^ OK
family NN family ^ OK

well UH ^ ^ false_start
my PRP my ^ OK
daughter NN daughter ^ OK
was VBD was ^ OK
a DT a ^ OK
flag NN flag ^ OK
girl NN girl ^ OK
in IN in ^ OK
the DT the ^ OK
band NN band ^ OK
on IN ^ ^ false_start
the DT ^ ^ false_start
for IN for ^ OK
football NN football ^ OK

so RB so ^ OK
we PRP we ^ OK
were VBD were ^ OK
outside RB outside ^ OK
at IN at ^ OK
the DT the ^ OK
football NN football ^ OK
games NNS games ^ OK
at IN at ^ OK
night NN night ^ OK
in IN in ^ OK
freezing JJ freezing ^ OK
weather NN weather ^ OK

the DT the ^ OK
guy NN guy ^ OK
who WP who ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
sentenced VBN sentenced ^ OK
to IN ^ ^ repeat
to IN to ^ OK
a DT a ^ OK
death NN ^ ^ repeat
death NN death ^ OK
sent- VBN ^ ^ repeat
se- NN ^ ^ repeat
sentence NN sentence ^ OK

but CC ^ ^ false_start
i PRP i ^ OK
know VBP know ^ OK
that IN that ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
trying VBG ^ ^ repeat
trying VBG trying ^ OK
to TO ^ ^ repeat
to TO to ^ OK
kill VB kill ^ OK
him PRP him ^ OK

that DT that ^ OK
's BES 's ^ OK
a DT a ^ OK
really RB really ^ OK
long JJ long ^ OK
time NN time ^ OK

how WRB ^ ^ false_start
ma- JJ ^ ^ false_start
how WRB how ^ OK
old JJ old ^ OK
are VBP are ^ OK
your PRP your ^ OK
sons NNS sons ^ OK

do VBP ^ ^ false_start
you PRP ^ ^ false_start
have VB ^ ^ false_start
any DT ^ ^ false_start
oh UH ^ ^ filler
you PRP you ^ OK
have VBP have ^ OK
three CD three ^ OK
girls NNS girls ^ OK
girls NNS ^ ^ false_start
granddaughters NNS and ^ false_start
three CD three ^ OK
granddaughters NNS granddaughter s  ^ OK

there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
f- XX ^ ^ false_start
huge JJ huge ^ OK
age NN age ^ OK
difference NN difference ^ OK
between IN between ^ OK
me PRP me ^ OK
and CC and ^ OK
her PRP her ^ OK

as RB as ^ OK
well UH ^ ^ false_start
uh UH ^ ^ filler
far RB far ^ OK
as IN as ^ OK
overeating NN overeating ^ OK
goes VBZ goes ^ OK
um UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
l- XX ^ ^ repeat
like VBP like ^ OK
to TO to ^ OK
eat VB eat ^ OK
all PDT all ^ OK
the DT the ^ OK
time NN time ^ OK

but CC ^ ^ false_start
um UH ^ ^ filler
and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
sh- XX sh- ^ OK

but CC but ^ OK
what WP what ^ OK
really RB really ^ OK
mm UH ^ ^ filler
what WP what ^ OK
uh UH ^ ^ filler

mm UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
no DT no ^ OK
doubt NN doubt ^ OK
that IN that ^ OK
uh UH ^ ^ filler
t. NN t. ^ OK
v. NN v. ^ OK
has VBZ has ^ OK
had VBN had ^ OK
a DT a ^ OK
big JJ big ^ OK
impact NN impact ^ OK
on IN ^ ^ repeat
uh UH ^ ^ filler
on IN on ^ OK
the DT the ^ OK
social JJ social ^ OK
life NN life ^ OK

well UH ^ ^ false_start
it PRP it ^ OK
's S-1 's ^ OK
much BES ^ ^ repeat
much RB much ^ OK
better RB better ^ OK
for JJR for ^ OK
the IN the ^ OK
imagination DT imagination ^ OK
development NN development ^ OK
you NN ^ ^ filler
know PRP ^ ^ filler
to VBP ^ ^ repeat
to TO to ^ OK
get TO get ^ OK
out VB out ^ OK
and RB and ^ OK
play CC play ^ OK
games VB games ^ OK
and NNS ^ ^ repeat
and CC and ^ OK
all CC all ^ OK
that PDT that ^ OK
too DT too ^ OK

i PRP ^ ^ false_start
w- XX ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
fifty-five CD fifty-five ^ OK
now RB now ^ OK

but CC but ^ OK
um UH ^ ^ filler

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
eh UH ^ ^ filler
people NNS people ^ OK
uh UH ^ ^ filler
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
do VBP ^ ^ false_start
get VB ^ ^ false_start
uh UH ^ ^ filler
g- XX ^ ^ false_start
uh UH ^ ^ filler
can MD can ^ OK
be VB be ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
hurtful JJ hurtful ^ OK
uh UH ^ ^ filler
that DT that ^ OK
way NN way ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
amazed JJ amazed ^ OK
how WRB how ^ OK
many JJ many ^ OK
people NNS people ^ OK
still RB still ^ OK
smoke VB smoke ^ OK
here RB here ^ OK
in IN in ^ OK
philadelphia NNP philadelphia ^ OK
in IN in ^ OK
uh UH ^ ^ filler
this DT this ^ OK
part NN part ^ OK
of IN of ^ OK
the DT the ^ OK
country NN country ^ OK

eh UH ^ ^ filler
l. NNP l. ^ OK
s. NNP s. ^ OK
m. NNP m. ^ OK
f. NNP f. ^ OK
t. NNP t. ^ OK

uh UH ^ ^ filler
when WRB ^ ^ repeat
when WRB when ^ OK
our PRP our ^ OK
kids NNS kids ^ OK
were VBD were ^ OK
little JJ little ^ OK
one ADVP-TMP- 1 one ^ OK
time CD time ^ OK
we NN we ^ OK
went PRP went ^ OK
into VBD into ^ OK
a IN a ^ OK
store DT store ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we ^ OK
were VBD were ^ OK
having VBG having ^ OK
a DT a ^ OK
tough JJ tough ^ OK
time NN time ^ OK

young JJ young ^ OK
family NN family ^ OK
and CC and ^ OK
everything NN everything ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
said VBD said ^ OK
i PRP i ^ OK
just RB just ^ OK
can MD can ^ OK
not RB not ^ OK
spend VB spend ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
money NN money ^ OK
taking VBG ^ ^ repeat
taking VBG taking ^ OK
the DT the ^ OK
food NN food ^ OK
out IN out ^ OK
of IN of ^ OK
these DT these ^ OK
kids NNS kids ^ OK
' POS ' ^ OK
mouths NNS mouths ^ OK

um UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
actually RB actually ^ OK
not RB not argM_neg OK
really RB really ^ OK
that RB that arg2 OK
conscious JJ conscious arg2 OK
because IN because ^ OK
well UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
men NNS men arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
really RB really ^ OK
buy VB buy predicate OK
too RB too arg1 OK
many JJ many arg1 OK
products NNS products arg1 OK
that WDT that arg2 OK
are VBP are arg1 OK
tested VBN tested arg1 OK
on IN on arg1 OK
animals NNS animals arg1 OK
because IN because ^ OK
most JJS most arg1 OK
of IN of arg1 OK
the DT the arg1 OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
beauty NN beauty arg1 false_start
products NNS ^ ^ false_start
products NNS ^ arg1 false_start
and CC ^ ^ false_start
stuff NN products ^ false_start
are VBP are ^ OK
geared VBN geared predicate OK
towards IN towards arg2 OK
women NNS women arg2 OK

but CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
something NN something arg2 OK
that WDT that arg1 OK
i PRP i arg0 OK
'd MD 'd arg2 OK
honestly RB honestly arg2 OK
consider VB consider arg2 OK
unless IN unless ^ OK
i PRP i arg0 OK
hear VBP hear predicate OK
something NN something arg1 OK
on IN on arg2 OK
the DT the arg2 OK
news NN news arg2 OK
like UH ^ ^ filler
about IN about ^ OK
a DT a ^ OK
certain JJ certain ^ OK
company NN company ^ OK
that WDT that arg0 OK
's BES 's ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
using VBG using predicate OK
animals NNS animals arg1 OK
in IN in ^ OK
a DT a ^ OK
way NN way ^ OK
that WDT that arg1 OK
's BES 's predicate OK
cruel JJ cruel arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
usually RB ^ ^ false_start
but CC usually ^ false_start
really RB ^ ^ repeat
really RB really ^ OK
consider VB consider predicate OK
it PRP it arg1 OK

i PRP i ^ OK
'm VBP 'm ^ OK
thinking VBG thinking ^ OK
more RBR more ^ OK
like UH like ^ OK

it PRP it arg0 OK
says VBZ says predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
no DT no arg1 OK
animal NN animal arg1 OK
testing NN testing arg1 OK
they PRP ^ ^ false_start
on IN ^ ^ repeat
on IN on argM_loc false_start
their PRP their argM_loc false_start
um UH ^ ^ filler
products NNS products argM_loc false_start

but CC ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
there EX there ^ OK
was VBD was predicate OK
a DT a arg1 OK
product NN product arg1 OK
that WDT that arg2 OK
i PRP i arg1 OK
was VBD was arg1 OK
interested JJ interested arg1 OK
in IN in arg2 OK
and NP-1 and ^ OK
i CC i arg0 OK
knew PRP knew predicate OK
that VBD that arg1 OK
they IN they arg0 OK
used PRP used arg1 OK
a VBD a arg1 OK
certain DT certain arg1 OK
type JJ type arg1 OK
of NN of arg1 OK
animal IN animal arg1 OK
testing NN testing arg1 OK
i NN ^ ^ repeat
i RB i arg0 OK
would PRP ^ ^ repeat
would PRP would ^ OK
n't MD ^ ^ repeat
n't MD n't argM_neg OK
support RB support predicate OK
it VB it arg1 OK

so UH so ^ OK
i PRP i ^ OK

the DT the arg1 OK
only JJ only arg1 OK
thing NN thing arg1 OK
i PRP i arg1 OK
can MD can arg1 OK
think VB think arg1 OK
of IN of arg1 OK
is NP-1 is predicate OK
like VBZ ^ ^ filler
drugs UH drugs arg2 OK
because NNS because ^ OK
they IN ^ ^ repeat
they VBP they arg0 OK
use PRP ^ ^ repeat
test PRP test predicate OK
some VBP some arg2 OK
drugs DT drugs arg2 OK
on NNS on ^ OK
like IN ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
rats VBP rats arg1 OK

or CC ^ ^ false_start
um UH um ^ filler

that DT that arg1 OK
's BES 's predicate OK
mostly RB mostly arg2 OK
what WP what arg1 OK
they PRP they arg0 OK
use VBP use arg2 OK

um UH um ^ OK
and CC and ^ OK

i PRP i arg0 OK
would MD would ^ OK
say VB say predicate OK
if IN if arg1 OK
i PRP i arg0 OK
knew VBD knew arg1 OK
that IN that arg1 OK
a DT a arg2 OK
certain JJ certain arg2 OK
drug NN drug arg2 OK
was VBD was arg1 OK
tested VBN tested arg1 OK
on IN on arg1 OK
a DT an arg1 false_start
animal NN animal arg1 OK
i PRP i arg0 OK
probably RB probably arg1 OK
would MD would arg1 OK
n't RB n't argM_neg OK
purchase VB purchase arg1 OK
that DT that arg1 OK
drug NN drug arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
because IN ^ ^ false_start
i PRP ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
should MD should ^ OK
n't RB n't argM_neg OK
only RB only ^ OK
think VB think predicate OK
of IN of arg1 OK
certain JJ certain arg1 OK
products NNS products arg1 OK
because IN because ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they arg0 OK
use VBP use predicate OK
animals NNS animals arg0 OK
to TO to arg2 OK
test VB test arg2 OK
all DT all arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
products NNS products arg1 OK

and CC ^ ^ false_start
the DT the arg1 OK
side NN side arg1 OK
effects NNS effects arg1 OK
are VBP are predicate OK
just RB just arg2 OK
not RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
not RB ^ ^ repeat
al- RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
not RB not arg2 OK
great JJ great arg2 OK
for IN for arg2 OK
the DT the arg2 OK
animals NNS animals arg2 OK
but CC but arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
great JJ great arg2 OK
for IN for arg2 OK
the DT the arg2 OK
humans NNS humans arg2 OK

but CC ^ ^ false_start
most JJS most arg0 OK
people NNS people arg0 OK
would MD would ^ OK
say VB say predicate OK
that IN that arg1 OK
because IN because arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
research NN research arg0 OK
that DT that arg2 OK
would MD would arg2 OK
help VB help arg2 OK
humans NNS humans arg2 OK
that IN that arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
worth JJ worth arg1 OK
it PRP it arg1 OK

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
would MD ^ ^ repeat
would MD would ^ OK
n't RB ^ ^ repeat
not RB ^ ^ repeat
n't RB n't argM_neg OK
want VB want predicate OK
to TO to arg1 OK
be VB be arg1 OK
put VBN put arg1 OK
through IN through arg2 OK
something NN something arg2 OK
like IN like arg2 OK
that DT that arg2 OK
but CC ^ ^ false_start
considering VBG considering ^ false_start
if IN if ^ false_start
i PRP i arg1 false_start
was VBD was predicate false_start
that DT that arg2 false_start
rat NN rat arg2 false_start

i PRP ^ ^ repeat
i PRP i ^ OK
ha- VBP ^ ^ repeat
have VBP have ^ OK
had VBN had ^ OK
in IN in ^ OK
the DT the ^ OK
past NN past ^ OK
but CC but ^ OK
not RB not ^ OK
right RB right ^ OK
now RB now ^ OK

and CC ^ ^ false_start
um UH um ^ OK

but CC ^ ^ false_start
that DT ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
not RB ^ ^ repeat
not RB not arg1 OK
that RB that arg1 OK
prevalent JJ prevalent arg1 OK
anymore RB anymore argM_tmp OK

well UH ^ ^ filler
what WP ^ ^ repeat
what WP ^ ^ repeat
what WP what ^ OK
if IN ^ ^ repeat
if IN ^ ^ repeat
if IN if ^ OK
they PRP they arg0 OK
were VBD were ^ OK
testing VBG testing predicate OK
a DT ^ ^ repeat
a DT a arg0 OK
d- NN ^ ^ repeat
drug NN drug arg0 OK
to TO to arg2 OK
cure VB cure arg2 OK
aids NN aids arg2 OK

say VB say ^ OK
they PRP they ^ OK
were VBD were ^ OK
using VBG using ^ OK
monkeys NNS monkeys ^ OK
but CC but ^ OK
that IN ^ ^ repeat
that IN that ^ OK
the DT the ^ OK
drug NN drug ^ OK
was VBD was ^ OK
causing VBG causing ^ OK
monkeys NNS monkeys ^ OK
to TO to ^ OK
g- XX g- ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
to TO to ^ OK
not RB not ^ OK
torture VB torture ^ OK
them PRP them ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
tha- DT ^ ^ repeat
that DT that ^ OK
would MD would ^ OK
be VB be ^ OK
considered VBN considered ^ OK
cruelty NN cruelty ^ OK
to IN to ^ OK
animals NNS animals ^ OK
because IN because ^ OK

what WP what ^ OK
if IN if ^ OK
the DT ^ ^ repeat
the DT the arg0 OK
drug NN drug arg0 OK
would MD would ^ OK
save VB save predicate OK
millions NNS millions arg1 OK
of IN of arg1 OK
lives NNS lives arg1 OK

but CC ^ ^ false_start
they PRP they arg0 OK
wo MD wo ^ OK
n't RB n't argM_neg OK
find VB find predicate OK
out RP out arg_particl OK
unless IN unless ^ OK
they PRP they arg0 OK
test VBP test predicate OK

like UH ^ ^ filler
say UH say ^ OK
your PRP your ^ OK
brother NN brother ^ OK
kills VBZ kills ^ OK
somebody NN somebody ^ OK
in IN in ^ OK
a DT a ^ OK
manner NN manner ^ OK
that WDT that ^ OK
's BES 's ^ OK
completely RB completely ^ OK
not RB not ^ OK
his PRP his ^ OK
fault NN fault ^ OK

but CC but ^ OK
will MD will ^ OK
appear VB appear ^ OK
as IN as ^ OK
if IN if ^ OK
it PRP it ^ OK
were VBD were ^ OK
his PRP his ^ OK
fault NN fault ^ OK
in IN in ^ OK
the DT the ^ OK
court NN court ^ OK
of IN of ^ OK
law NN law ^ OK

i PRP ^ ^ repeat
'm VBP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
trying VBG ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
it PRP it ^ OK
'd MD 'd ^ OK
be VB be ^ OK
easier JJR easier ^ OK
to TO to ^ OK
deal VB deal ^ OK
with IN ^ ^ repeat
like UH ^ ^ filler
with IN with ^ OK
as NP as ^ OK
an IN an ^ OK
example DT example ^ OK

what WP ^ ^ repeat
what WP what ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT a ^ OK
tough JJ tough ^ OK
decision NN decision ^ OK

like UH ^ ^ filler
because IN because ^ OK
i PRP ^ ^ filler
guess VBP ^ ^ filler
on IN on ^ OK
the DT the ^ OK
one CD one ^ OK
hand NN hand ^ OK
by IN by ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
well UH ^ ^ filler
telling VBG telling ^ OK
the DT the ^ OK
truth NN truth ^ OK
what WP what ^ OK
would MD would ^ OK
you PRP you ^ OK
be VB be ^ OK
doing VBG doing ^ OK

but CC ^ ^ false_start
like UH ^ ^ filler
if IN ^ ^ false_start
you PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
you VP ^ ^ filler
know PRP ^ ^ filler
like VBP ^ ^ filler
like UH ^ ^ filler
the UH the ^ OK
dead DT dead ^ OK
person JJ person ^ OK
's NN 's ^ OK
family POS family ^ OK
wants NN wants ^ OK
to VBZ to ^ OK
know TO know ^ OK
what VB what ^ OK
happened WP happened ^ OK
or VBD or ^ OK
who CC who ^ OK
's WP 's ^ OK
responsible BES responsible ^ OK

or CC or ^ OK
what WP ^ ^ repeat
they PRP ^ ^ false_start
ask VBP ^ ^ false_start
what WP what ^ OK
if IN ^ ^ repeat
if IN if ^ OK
your PRP ^ ^ repeat
your PRP ^ ^ repeat
like UH ^ ^ filler
your PRP your ^ OK
brother NN ^ ^ repeat
brother NN ^ ^ repeat
brother NN brother ^ OK
did VBD did ^ OK
commit VB commit ^ OK
murder NN murder ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
ma- VBZ ^ ^ repeat
makes VBZ ^ ^ repeat
makes VBZ makes ^ OK
me PRP me ^ OK
think VB think ^ OK
though RB ^ ^ false_start
just RB just ^ OK
because RB because ^ OK
yeah UH ^ ^ false_start

well UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
ah UH ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
unbiased JJ unbiased ^ OK
honesty NN honesty ^ OK

but CC but ^ OK
then RB then ^ OK
again RB again ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ false_start
ju- RB ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
really RB really ^ OK
wary JJ wary ^ OK
of IN of ^ OK
talking VBG talking ^ OK
about IN about ^ OK
how WRB how ^ OK
morally RB morally ^ OK
upright RB upright ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
be VB be ^ OK
able JJ able ^ OK
to TO to ^ OK
be VB be ^ OK
in IN in ^ OK
a DT a ^ OK
tough JJ tough ^ OK
situation NN situation ^ OK

like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
'd MD 'd ^ OK
like VB like ^ OK
to TO to ^ OK
think VB think ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
do VB do ^ OK
the DT the ^ OK
right JJ right ^ OK
thing NN thing ^ OK
all PDT all ^ OK
the DT the ^ OK
time NN time ^ OK

or CC ^ ^ false_start
but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
p- XX ^ ^ false_start
thinking VBG thinking ^ OK
about IN about ^ OK
it PRP it ^ OK
sitting VBG sitting ^ OK
around RB around ^ OK
on IN on ^ OK
the DT the ^ OK
couch NN couch ^ OK
is VBZ is ^ OK
one CD one ^ OK
thing NN thing ^ OK

but CC but ^ OK
like UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
because UH because ^ OK
well UH ^ ^ filler
once IN once ^ OK
you PRP you ^ OK
get VBP get ^ OK
into IN into ^ OK
into IN _ARG_ ^ false_start

like UH ^ ^ filler
what WP what ^ OK
if IN if ^ OK
you PRP you ^ OK
start VBP start ^ OK
thinking VBG thinking ^ OK
like UH like ^ OK

i PRP i ^ OK
know VBP know ^ OK
he PRP ^ ^ repeat
like UH ^ ^ filler
he PRP he ^ OK
'll MD ^ ^ repeat
's BES 's ^ OK
smart JJ smart ^ OK

or CC ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i- PRP ^ ^ repeat
it PRP it ^ OK
was VBD was ^ OK
wrong JJ wrong ^ OK

but CC but ^ OK
like UH ^ ^ filler
how WRB how ^ OK
is VBZ is ^ OK
my PRP my ^ OK
brother NN brother ^ OK
going VBG going ^ OK
to IN to ^ OK
jail NN jail ^ OK
and CC and ^ OK
me PRP me ^ OK
betraying VBG betraying ^ OK
my PRP my ^ OK
own JJ own ^ OK
brother NN brother ^ OK
and CC and ^ OK
living VBG living ^ OK
with IN with ^ OK
that DT that ^ OK
and CC and ^ OK
like UH ^ ^ filler
how WRB how ^ OK
is VBZ is ^ OK
that DT that ^ OK
going VBG going ^ OK
to TO to ^ OK
make VB make ^ OK
it PRP it ^ OK
better RBR better ^ OK

your PRP ^ ^ false_start
f- NN ^ ^ false_start
the DT the ^ OK
whole JJ whole ^ OK
family NN family ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
examine VB examine ^ OK
like UH ^ ^ filler

i PRP ^ ^ false_start
guess VBP ^ ^ false_start
you PRP ^ ^ false_start
'd MD ^ ^ false_start
have VB ^ ^ false_start
this DT ^ ^ repeat
this DT ^ ^ repeat
that DT ^ ^ repeat
this DT this ^ OK
is VBZ ^ ^ repeat
's BES ^ ^ repeat
is VBZ is ^ OK
a DT ^ ^ repeat
like UH ^ ^ filler
a DT a ^ OK
time NN time ^ OK
when WRB when ^ OK
you PRP you ^ OK
really RB really ^ OK
examined VBD examined ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
willing JJ willing ^ OK
willing JJ ^ ^ false_start
member NN of ^ false_start
a DT a ^ OK
member NN member ^ OK
you PP-3 you ^ OK
are PRP are ^ OK
of VBP of ^ OK
the IN the ^ OK
society DT society ^ OK
in NN in ^ OK
almost RB almost ^ OK
a- IN ^ ^ repeat
a RB a ^ OK
lockian DT lockian ^ OK
sense JJ sense ^ OK

now RB now ^ OK
are VBP are ^ OK
you PRP you ^ OK
going VBG going ^ OK
to TO to ^ OK
sack VB suck ^ false_start
it PRP it ^ OK
up RP up ^ OK
and CC and ^ OK
accept VB accept ^ OK
everything NN everything ^ OK
that WDT that ^ OK
goes VBZ goes ^ OK
with IN with ^ OK
it PRP it ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
often RB ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
one CD ^ ^ repeat
one CD one ^ OK
of IN ^ ^ repeat
of IN of ^ OK
the DT the ^ OK
things NNS things ^ OK
that WDT that ^ OK
i PRP i ^ OK
think VBP think ^ OK
is VBZ is ^ OK
in IN in ^ OK
poor JJ poor ^ OK
taste NN taste ^ OK
is VBZ is ^ OK
if IN if ^ OK
it PRP it ^ OK
's BES 's ^ OK
something NN something ^ OK
that WDT that ^ OK
would MD would ^ OK
hurt VB hurt ^ OK
the DT the ^ OK
other JJ other ^ OK
person NN person ^ OK
or CC or ^ OK
would MD would ^ OK
m- VB ^ ^ repeat
make VB make ^ OK
fun NN fun ^ OK
of IN of ^ OK
them PRP them ^ OK
in IN in ^ OK
some DT some ^ OK
way NN way ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
it PRP ^ ^ false_start
part NN part ^ OK
of IN of ^ OK
it PRP it ^ OK
is VBZ is ^ OK
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
standing VBG standing ^ OK
right RB right ^ OK
there RB there ^ OK
looking VBG looking ^ OK
at IN at ^ OK
the DT the ^ OK
person NN person ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
or CC or ^ OK
saying VBG saying ^ OK
it PRP it ^ OK
yourself PRP yourself ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
as IN as ^ OK
opposed VBN opposed ^ OK
to IN to ^ OK
someone NN someone ^ OK
else RB else ^ OK
making VBG making ^ OK
do VBP ^ ^ false_start
uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
humorous JJ humorous ^ OK
remark NN remark ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
also RB also ^ OK
they PRP they ^ OK
're VBP 're ^ OK
talking VBG talking ^ OK
about IN about ^ OK
not RB not ^ OK
just RB just ^ OK
making VBG making ^ OK
fun NN fun ^ OK
but CC but ^ OK
probably RB probably ^ OK
also RB also ^ OK
um UH ^ ^ filler
uh UH ^ ^ filler
things NNS things ^ OK
that WDT that ^ OK
are VBP are ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
risque JJ risque ^ OK
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
in IN in ^ OK
some DT some ^ OK
other JJ other ^ OK
way NN way ^ OK
considered VBN considered ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
not RB ^ ^ false_start
not RB not ^ OK
to TO to ^ OK
be VB be ^ OK
said VBD said ^ OK
in IN in ^ OK
polite JJ polite ^ OK
company NN company ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
had VBD ^ ^ repeat
had VBD had ^ OK
a DT ^ ^ filler
a DT a ^ OK
boss NN boss ^ OK
once SBAR-1 once ^ OK
who RB who ^ OK
was WP was ^ OK
just VBD just ^ OK
clueless RB clueless ^ OK

but CC ^ ^ false_start
often RB often ^ OK
in IN ^ ^ filler
in IN in ^ OK
group NN group ^ OK
meetings NNS meetings ^ OK
he PRP ^ ^ repeat
he PRP ^ ^ repeat
he PRP he ^ OK
would MD ^ ^ repeat
would MD ^ ^ repeat
would MD would ^ OK
make VB make ^ OK
uh UH ^ ^ filler
humorous JJ humorous ^ OK
remarks NNS remarks ^ OK
that WDT that ^ OK
were VBD were ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
of IN of ^ OK
a DT a ^ OK
sexual JJ sexual ^ OK
nature NN nature ^ OK
or CC or ^ OK
of IN ^ ^ false_start
a DT ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
just RB ^ ^ false_start
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

that WDT that ^ OK
i PRP i ^ OK
felt VBD felt ^ OK
was VBD was ^ OK

i PRP i ^ OK
never RB never ^ OK
said VBD said ^ OK
anything NN anything ^ OK
because IN because ^ OK
i PRP i ^ OK
figured VBD figured ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want ^ OK
to TO to ^ OK
be VB ^ ^ repeat
be VB be ^ OK
a DT ^ ^ repeat
a DT a ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
pain NN pain ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
i PRP ^ ^ false_start
i PRP i ^ OK
d- VBP ^ ^ false_start
doubt VBP doubt ^ OK
those DT those ^ OK
kinds NNS kinds ^ OK
of IN of ^ OK
things NNS things ^ OK
were VBD were ^ OK
in IN in ^ OK
bad JJ bad ^ OK
taste NN taste ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
because IN ^ ^ repeat
because IN because ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
maybe RB ^ ^ repeat
maybe RB maybe ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
peop- NNS ^ ^ false_start
same JJ same ^ OK
sex NN sex ^ OK
people NNS people ^ OK
can MD ^ ^ repeat
can MD can ^ OK
do VB do ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
thing NN thing ^ OK

where WRB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
when WRB when ^ OK
there EX there ^ OK
's BES 's ^ OK
someone NN someone ^ OK
of IN of ^ OK
the DT the ^ OK
opposite JJ opposite ^ OK
sex NN sex ^ OK
there RB there ^ OK
then ADVP-TMP- 1 then ^ OK
i RB i ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
think RB think ^ OK
that VB that ^ OK
's DT 's ^ OK
such BES such ^ OK
a PDT a ^ OK
good DT good ^ OK
idea JJ idea ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
me- XX ^ ^ false_start
my PRP my ^ OK
impression NN impression ^ OK
is VBZ is ^ OK
or CC or ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
uh UH ^ ^ filler
understanding NN understanding ^ OK
is VBZ is ^ OK
that IN that ^ OK
men NNS men ^ OK
tend VBP tend ^ OK
to TO to ^ OK
use VB use ^ OK
language NN language ^ OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and ^ OK
perhaps RB perhaps ^ OK
humor NN humor ^ OK
too RB too ^ OK
that WDT that ^ OK
is VBZ ^ ^ false_start
more JJR ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
uses VBZ uses ^ OK
four CD four ^ OK
letter NN letter ^ OK
words NNS words ^ OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
somehow RB somehow ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
more RBR ^ ^ repeat
more RBR more ^ OK
sexual JJ sexual ^ OK
or CC or ^ OK
more RBR more ^ OK
um UH ^ ^ filler
uh UH ^ ^ filler
the DT the ^ OK
kind NN kind ^ OK
of IN of ^ OK
thing NN thing ^ OK
that WDT that ^ OK
i PRP i ^ OK
would MD would ^ OK
consider VB consider ^ OK
bad JJ bad ^ OK
taste NN taste ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
talking VBG talking ^ OK
about IN about ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a ^ OK
woman NN woman ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
her PRP her ^ OK
attributes NNS attributes ^ OK
or CC or ^ OK
whatever WP whatever ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
something NN something ^ OK
that WDT that ^ OK
i PRP i ^ OK
think VBP think ^ OK
men NNS men ^ OK
do VBP do ^ OK
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
i PRP i ^ OK
understand VBP understand ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
that IN that ^ OK
most RBS most ^ OK
women NNS women ^ OK
would MD would ^ OK
do VB do ^ OK
that DT that ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
we PRP ^ ^ false_start
you PRP you ^ OK
might MD might ^ OK
say VB say ^ OK
oh UH ^ ^ filler
he PRP he ^ OK
's BES 's ^ OK
handsome JJ handsome ^ OK

he PRP he ^ OK
's BES 's ^ OK
really RB really ^ OK
good JJ good ^ OK
looking VBG looking ^ OK

he PRP ^ ^ false_start
's BES ^ ^ false_start
really RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
uh UH ^ ^ filler
really RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP i ^ OK
mean VBP mean ^ OK
maybe RB ^ ^ repeat
maybe RB maybe ^ OK
even RB even ^ OK
if IN if ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
might MD might ^ OK
say VB say ^ OK
oh UH ^ ^ filler
he PRP he ^ OK
's BES 's ^ OK
hot JJ hot ^ OK

but CC ^ ^ repeat
but CC but ^ OK
not RB not ^ OK
to TO to ^ OK
really RB really ^ OK
get VB get ^ OK
into IN into ^ OK
the DT the ^ OK
details NNS details ^ OK
of IN of ^ OK
the DT the ^ OK
anatomy NN anatomy ^ OK
or CC or ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

but CC but ^ OK
i PRP i ^ OK
think VBP think ^ OK
it PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
can MD ^ ^ repeat
can MD can ^ OK
be VB ^ ^ repeat
be VB be ^ OK
said VBD said ^ OK
in IN ^ ^ false_start
i- XX ^ ^ false_start
humorously RB humorously ^ OK

um UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
can MD can ^ OK
be VB be ^ OK
done VBN done ^ OK
in IN ^ ^ repeat
in IN ^ ^ false_start
some DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
^ ^ ^ ^ repeat
in IN in ^ OK
a DT a ^ OK
making VBG making ^ OK
fun NN fun ^ OK
kind NN kind ^ OK
of IN of ^ OK
way NN way ^ OK
or CC or ^ OK
in IN ^ ^ repeat
uh UH ^ ^ filler
in IN ^ ^ false_start
a DT ^ ^ false_start
laughing VBG ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
something NN something ^ OK
that WDT that ^ OK
people NNS people ^ OK
would MD would ^ OK
laugh VB laugh ^ OK
about IN about ^ OK

i PRP ^ ^ filler
think VBP ^ ^ filler
it PRP it ^ OK
was VBD was ^ OK
probably RB probably ^ OK
something NN something ^ OK
that WDT that ^ OK
was VBD was ^ OK
said VBN said ^ OK
on IN on ^ OK
television NN television ^ OK
that WDT that ^ OK
i PRP i ^ OK
thought VBD thought ^ OK
was VBD was ^ OK
really RB really ^ OK
in IN in ^ OK
poor JJ poor ^ OK
taste NN taste ^ OK

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
on IN ^ ^ repeat
on IN ^ ^ repeat
on IN on ^ OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a ^ OK
sitcom NN sitcom ^ OK
or CC or ^ OK
something NN something ^ OK

but CC but ^ OK
it PRP it ^ OK
was VBD was ^ OK
something NN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
something NN something ^ OK
to TO to ^ OK
do VB do ^ OK
with IN with ^ OK
someone NN someone ^ OK
's POS 's ^ OK
anatomy NN anatomy ^ OK
or CC or ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK
as IN as ^ OK
i PRP i ^ OK
recall VBP recall ^ OK

tha- DT tha- ^ OK
yes UH yes ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
like VB like predicate OK
some DT some arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
that WDT that arg1 OK
were VBD were arg1 OK
n't RB n't arg1 OK
so RB so arg2 OK
much RB much arg2 OK
reality NN reality arg2 OK
t. NN t. arg2 OK
v. NN v. arg2 OK

now UH now ^ OK
the DT ^ ^ repeat
that DT that ^ OK
was VBD was ^ OK

and CC ^ ^ false_start
then RB then ^ OK
oh UH ^ ^ filler
what WP what arg1 OK
was VBD was predicate OK
that DT that arg2 OK
other JJ other arg2 OK
one NN one arg2 OK

um NP-PRD-1 ^ ^ filler
american UH american ^ OK
idol NNP idol ^ OK

like UH ^ ^ filler
um UH ^ ^ filler
and CC and ^ OK

i PRP i arg0 OK
liked VBD liked predicate OK
uh UH ^ ^ filler
that DT that arg1 false_start
comedian NN comedian arg1 false_start
one CD one arg1 false_start
and CC and arg1 false_start
the DT ^ arg1 false_start
those DT ^ ^ false_start
two CD the ^ false_start
singers NNS ^ arg1 false_start
those DT ^ ^ false_start
two CD singers ^ false_start

but CC but ^ OK
other JJ other ^ OK
ones NNS ones ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN like ^ OK
um UH ^ ^ filler
joe NNP joe ^ OK
millionaire NNP millionaire ^ OK
where WRB where ^ OK
all PDT all ^ OK
these DT these ^ OK
women NNS women ^ OK
are VBP are ^ OK
being VBG being ^ OK
lied VBN lied ^ OK
to IN to ^ OK

they PRP they ^ OK
all DT all ^ OK
e- XX e- ^ OK

i- XX i- ^ OK
e- XX e- ^ OK

and CC ^ argM_tmp false_start
i PRP i arg0 OK
kind RB kind ^ OK
of RB of ^ OK
admired VBD admired predicate OK
like UH ^ ^ filler
uh UH ^ ^ filler
american NNP american arg1 OK
idol NNP idol arg1 OK
where WRB where arg1 OK
they PRP they arg1 OK
stand VB stand arg1 false_start
had VBD had arg1 OK
to TO to arg1 OK
in IN in arg2 OK
line NN line arg2 OK
with IN with arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg2 OK
h- CD ^ ^ repeat
hundred CD hundred arg2 OK
th- CD ^ ^ repeat
thousand CD thousand arg2 OK
people NNS people arg2 OK
and CC and arg1 OK
you PRP for ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
two CD two argM_tmp OK
or CC or argM_tmp OK
three CD three argM_tmp OK
or CC or argM_tmp OK
four CD four argM_tmp OK
days NNS days argM_tmp OK
uh UH ^ ^ filler
uh UH ^ ^ filler
w- XX ^ ^ false_start
just RB just arg1 OK
standing VBG stand arg1 false_start
in IN in arg2 OK
line NN line arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
admired VBD admired predicate OK
that DT that arg1 OK
where WRB where arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
d- XX ^ ^ false_start
y- PRP ^ ^ repeat
you PRP you arg1 OK
have VBP have arg1 OK
a DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
million CD million arg1 OK
in IN in arg1 OK
one CD one arg1 OK
chance NN ^ ^ repeat
chance NN chance arg1 OK
to TO to arg1 OK
become VB become arg1 OK
m- XX ^ ^ false_start
a DT a arg2 OK
famous JJ famous arg2 OK
singer NN singer arg2 OK

i- PRP ^ ^ repeat
it PRP it arg1 OK
was VBD was predicate OK
funny JJ funny arg2 OK

but CC ^ ^ repeat
but CC but ^ OK
um UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
some DT some arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
knew VBD knew arg1 OK
they PRP they arg1 OK
were VBD were arg1 OK
bad JJ bad arg2 OK

but CC ^ ^ repeat
but CC but ^ OK
what WP what arg1 OK
's BES 's arg1 OK
sad JJ sad arg1 OK
is VBZ is predicate OK
some DT some arg0 OK
of IN of arg0 OK
them PRP them arg0 OK
thought VBD thought arg2 OK
they PRP they arg1 OK
were VBD were arg1 OK
good JJ good arg2 OK

some DT some arg0 OK
of IN of arg0 OK
them PRP them arg0 OK
thought VBD thought predicate OK
they PRP they arg0 OK
sh- XX ^ ^ repeat
should MD should arg1 OK
win VB win arg1 OK

it PRP it arg0 OK
's BES says predicate false_start
like RP ^ ^ filler
dude NN dude arg1 OK
you PRP you arg1 OK
're VBP 're arg1 OK
retarded JJ retarded arg2 OK

uh UH ^ ^ filler
when WRB ^ ^ false_start
the- PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they arg1 OK
were VBD were predicate OK
serious JJ serious arg2 OK

i PRP i ^ OK
kn- VBP kn- ^ OK

y- PRP ^ ^ repeat
you PRP ^ ^ false_start
're VBP ^ ^ false_start
because UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP 've ^ OK
had VBN had predicate OK
friends NNS friends arg0 OK
who WP who arg0 OK
think VBP think arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
really RB really arg2 OK
good JJ good arg2 OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
like RP like ^ OK
y- PRP ^ ^ repeat
you PRP you ^ OK
're VBP 're ^ OK
not RB not ^ OK

you PRP you arg0 OK
stink VBP stink predicate OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when ^ OK
i PRP i arg0 OK
want VBP want predicate OK
to TO to arg1 OK
do VB do arg1 OK
something NN something arg1 OK
i ADVP-TMP- 2 i arg0 OK
always PRP always ^ OK
ask RB ask predicate OK
friends VBP friends arg2 OK
is NNS is arg1 OK
this VBZ this arg1 OK
stupid DT stupid arg2 OK

y- PRP ^ ^ repeat
you PRP you ^ OK
know VBP know ^ OK
i- XX i- ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
even RB even ^ OK
i PRP i ^ OK
watched VBD watched ^ OK
th- XX th- ^ OK

um UH ^ ^ filler
we PRP we arg0 OK
have VBP have predicate OK
to TO to arg1 OK
unplug VB unplug arg1 OK
the DT the arg1 OK
phone NN phone arg1 OK

we PRP we arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
talk VB talk predicate OK
to IN to arg2 OK
anybody NN anybody arg2 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
fear NNP fear arg1 OK
factor NNP factor arg1 OK
's BES 's predicate OK
on RB on arg2 OK

they PRP they arg0 OK
've VBP 've ^ OK
become VBN become predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
t- NN ^ ^ repeat
t. NN t. arg2 OK
v. NN v. arg2 OK
addicts NNS addicts arg2 OK
watching VBG watching arg2 OK
this DT this arg1 OK
junk NN junk arg1 OK

they PRP ^ ^ repeat
en- XX ^ ^ false_start
they PRP they arg0 OK
liked VBD ^ ^ repeat
loved VBD loved predicate OK
fear NNP fear arg1 OK
factor NNP factor arg1 OK

but CC but ^ OK
these DT ^ ^ false_start
other JJ ^ ^ false_start
ones NNS ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
sit VB sit arg1 OK
and CC and arg1 OK
watch VBP watch arg1 OK
someone NN someone arg0 OK
make VB make arg1 OK
a DT a arg1 OK
fool NN fool arg1 OK
of IN of arg2 OK
themselves PRP themselves arg2 OK
or CC or arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
eating VBG ^ ^ repeat
eating VBG eat arg1 false_start
some DT some arg1 OK
disgusting JJ disgusting arg1 OK
uh UH ^ ^ filler
stuff NN stuff arg1 OK
from IN from arg1 OK
a DT a arg1 OK
dead JJ dead arg1 OK
animal NN animal arg1 OK
and CC and arg1 OK
then RB then arg1 OK
watching VBG watch arg1 false_start
them PRP them arg0 OK
puke VB puke arg1 OK

stock NN the arg0 false_start
uh UH ^ ^ filler
stock NN stock arg0 OK
market NN market arg0 OK
really RB really argM_adverb OK
did VBD did ^ OK
n't RB n't argM_neg OK
affect VB affect predicate OK
me PRP me arg1 OK
at RB at argM_extent OK
all RB all argM_extent OK

i PRP ^ ^ false_start
'd MD ^ ^ false_start
m- XX ^ ^ false_start
i PRP i arg0 OK
personally RB personally argM_adverb false_start
stopped VBD stopped predicate OK
investing VBG investing arg1 OK
years NNS years argM_tmp OK
ago RB ago argM_tmp OK

we PRP ^ ^ repeat
we PRP we arg0 OK
use VBP use predicate OK
m. NNP m. arg1 OK
c. NNP c. arg1 OK
i. NNP i. arg1 OK

well UH ^ ^ filler
see UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
the DT the arg0 OK
thing NN thing arg0 OK
that WDT that arg0 OK
really RB really argM_adverb OK
boggles VBZ boggles arg2 OK
my PRP my arg1 OK
mind NN mind arg1 OK

an- XX ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
now RB now argM_tmp OK
we PRP we arg1 OK
're VBP 're ^ OK
pushing VBG pushing predicate OK
ten CD ten arg2 OK
thousand CD thousand arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when argM_tmp OK
you PRP ^ ^ false_start
have VBP ^ ^ false_start
people NNS people argM_tmp OK
like IN like argM_tmp OK
bill NNP bill argM_tmp OK
gates NNP gates argM_tmp OK
get VBP get argM_tmp OK
ninety-nine CD ninety-nine argM_tmp OK
point NN point argM_tmp OK
five CD five argM_tmp OK
million CD million argM_tmp OK
dollars NNS dollars argM_tmp OK
for IN for argM_tmp OK
the DT the argM_tmp OK
stock NN stock argM_tmp OK
dividend NN dividend argM_tmp OK
and CC and argM_tmp OK
everyone NN everyone argM_tmp OK
else RB else argM_tmp OK
gets VBZ gets argM_tmp OK
you PRP ^ ^ filler
know VBP ^ ^ filler
sixteen CD sixteen argM_tmp OK
cents NNS cents argM_tmp OK
per IN per argM_tmp OK
share NN share argM_tmp OK
it ADVP-TMP- 1 it arg1 OK
's PRP 's predicate OK
like BES ^ ^ filler
okay RP okay arg2 OK

what WP ^ ^ repeat
what WP what arg1 OK
's BES 's ^ OK
going VBG going predicate OK
on RB on arg_particl OK
here RB here argM_loc OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT ^ ^ repeat
that DT ^ ^ false_start
's BES ^ ^ false_start
where WRB ^ ^ false_start
it PRP it arg1 OK
seems VBZ seems predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
the DT the arg1 OK
problem NN problem arg1 OK
is VBZ is arg2 OK
where WRB where arg2 OK
the DT the arg0 OK
c. NNP c. arg0 OK
e. NNP e. arg0 OK
o.s NNPS o.s arg0 OK
are VBP are arg2 OK
getting VBG getting arg2 OK
multimillion JJ multimillion arg1 OK
dollar NN dollar arg1 OK
salaries NNS salaries arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
who WP who arg0 OK
has VBZ has predicate OK
the DT the arg1 OK
harder JJR harder arg1 OK
job NN job arg1 OK

who WP who arg0 OK
's HVS 's ^ OK
got VBN got predicate OK
the DT the arg1 OK
harder JJR harder arg1 OK
job NN job arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
get VBP get predicate OK
the DT the arg1 OK
multimillion JJ multimillion arg1 OK
dollar NN dollar arg1 OK
salaries NNS salaries arg1 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
they PRP they arg0 OK
hire VBP hire predicate OK
all PDT all arg0 OK
the DT the arg0 OK
outside JJ outside arg0 OK
accounting NN accounting arg0 OK
firms NNS firms arg0 OK
to TO to arg2 OK
doctor VB doctor arg2 OK
the DT the arg1 OK
papers NNS papers arg1 OK
and CC and arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
do VB do arg2 OK
whatever WDT whatever arg1 OK
they PRP they arg0 OK
need VBP need arg1 OK
to TO to arg1 OK
do VB do arg1 OK

then RB ^ ^ false_start
the DT the arg0 OK
government NN government arg0 OK
comes VBZ comes predicate OK
along RB along argM_dir OK
w- IN ^ ^ repeat
with IN with argM_mnr OK
the DT the argM_mnr OK
regulations NNS regulations argM_mnr OK
saying VBG saying argM_mnr OK
oh UH ^ ^ filler
well UH ^ ^ filler
you PRP ^ ^ false_start
need VBP ^ ^ false_start
to TO to arg1 OK
make VB make arg1 OK
stock NN stock arg1 OK
declarations NNS declarations arg1 OK
and CC and arg1 OK
restate VB restate arg1 OK
any DT any arg1 OK
earnings NNS earnings arg1 OK
or CC or arg1 OK
losses NNS losses arg1 OK
by IN by arg1 OK
the DT the arg1 OK
state NN state arg1 OK

we PRP we arg0 OK
need VBP need predicate OK
to TO to arg1 OK
restate VB restate arg1 OK

it PRP it arg0 OK
's BES 's ^ OK
like RP like predicate OK
wait VB wait arg1 OK
a DT a argM_tmp OK
second NN second argM_tmp OK

and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
is VBZ is predicate OK
there RB there arg1 OK
a DT a arg2 OK
way NN way arg2 OK
the DT the arg0 OK
government NN government arg0 OK
can MD can argM_mod OK
actually RB actually argM_adverb OK
control VB control arg2 OK
anything NN anything arg1 OK

not RB not argM_extent OK
any RB any argM_extent OK
better JJR better argM_extent OK
than IN than argM_extent OK
what WP how argM_mnr false_start
the DT the arg0 OK
government NN government arg0 OK
can MD can argM_mod OK
um UH ^ ^ filler
even RB even argM_adverb OK
control VB control predicate OK
itself PRP itself arg1 OK

they PRP they arg1 OK
're VBP 're predicate OK
there RB there arg2 OK
for IN for arg2 OK
decoration NN decoration arg2 OK
only RB only arg2 OK
because IN because argM_cause OK
you PRP you arg0 OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
enforce VB enforce arg2 OK
them PRP them arg1 OK

u- XX ^ ^ false_start
e- XX ^ ^ false_start
and CC and ^ OK
truly RB truly ^ OK
have VBP have ^ OK
big JJ big ^ OK
brother NN brother ^ OK

but CC but argM_discou OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
other RB other argM_discou OK
than IN than argM_discou OK
that DT that argM_discou OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
any DT any arg1 OK
way NN way arg1 OK
that WDT that arg1 OK
um UH ^ ^ filler
n- XX ^ ^ false_start
any DT any arg0 OK
law NN law arg0 OK
can MD can argM_mod OK
help VB help arg1 OK
anything NN anything arg1 OK

so UH ^ ^ filler
how WRB how argM_mnr OK
did VBD did ^ OK
bethlehem NNP bethlehem arg1 OK
steel NNP steel arg1 OK
get VB get predicate OK
affected VBN affected arg1 OK
by IN by arg0 OK
the DT ^ ^ repeat
uh UH ^ ^ filler
the DT ^ ^ false_start
all PDT all arg0 OK
the DT the arg0 OK
problems NNS problems arg0 OK

did VBD did ^ OK
um UH ^ ^ filler

s- XX ^ ^ false_start
all DT all ^ OK
sorts NNS sorts ^ OK
of IN of ^ OK
democratic JJ democratic ^ OK
type NN ^ ^ false_start
views NNS views ^ OK
and CC and ^ OK
people NNS people ^ OK
out IN out ^ OK
here RB here ^ OK

like UH ^ arg1 filler
we PRP we arg0 OK
just RB ^ ^ false_start
um UH ^ ^ filler
just RB just ^ OK
passed VBD ^ ^ false_start
passed VBD passed predicate OK
an DT an arg0 OK
initiative NN initiative arg0 OK
that WDT ^ ^ false_start
to TO to arg1 OK
make VB make arg1 OK
the DT the arg2 OK
smoking NN smoking arg2 OK
of IN of arg2 OK
marijuana NN marijuana arg2 OK
and CC and arg2 OK
the DT the arg2 OK
possession NN possession arg2 OK
it PRP ^ ^ false_start
of IN of arg2 OK
marijuana NN marijuana arg2 OK
the DT ^ ^ false_start
least JJS ^ ^ false_start
um UH ^ ^ filler
like UH ^ ^ filler
the DT ^ ^ false_start
like UH ^ ^ filler
a DT a arg0 OK
police NN police arg0 OK
officer NN officer arg0 OK
there PRP ^ ^ false_start
's BES 's arg1 OK
least JJS least arg1 OK
priority NN priority arg1 OK
is VBZ for ^ false_start
is VBZ ^ ^ false_start
arresting VBG arresting arg1 OK
people NNS people arg1 OK
for IN ^ ^ false_start
things NNS ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
pretty RB ^ ^ repeat
pretty RB pretty arg2 OK
laid VBN laid arg2 OK
back RP back arg2 OK
city NN city arg2 OK

a DT ^ ^ repeat
a DT a ^ OK
lot NN ^ ^ repeat
lot NN lot ^ OK
of IN ^ ^ repeat
of IN of ^ OK
liberal JJ liberal ^ OK
ideas NNS ideas ^ OK

a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
vegetarians NNS vegetarians ^ OK
and CC and ^ OK
people NNS ^ ^ repeat
people NNS people ^ OK
tha- WDT ^ ^ repeat
that WDT that ^ OK
hate VBP hate ^ OK
george NNP george ^ OK
bush NNP bush ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
have VB have predicate OK
if IN if argM_adverb OK
you PRP you arg0 OK
do VBP do argM_adverb OK
n't RB n't argM_neg OK
have VB have argM_adverb OK
your PRP your arg1 OK
family NN family arg1 OK

when WRB when argM_tmp OK
times NNS times arg1 OK
are VBP are predicate OK
kind RB ^ ^ false_start
a RB ^ ^ false_start
tough JJ tough arg2 OK
they ADVP-TMP- 1 they arg0 OK
are PRP are predicate OK
the VBP the arg0 OK
people DT people arg0 OK
you NNS you arg0 OK
look PRP look arg2 OK
to VBP ^ ^ false_start
to IN to arg_particl OK
to IN to argM_purpos OK
kind NP-2 ^ ^ false_start
of TO ^ ^ false_start
watch RB watch argM_purpos OK
your RB your arg1 OK
back VB back arg1 OK

i PRP i arg0 OK
've VBP 've ^ OK
worked VBN worked predicate OK
at IN ^ ^ repeat
ah UH ^ ^ filler
in IN in argM_loc OK
restaurants NNS restaurants argM_loc OK

and CC ^ ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
've VBP _ARG_ ^ false_start
cook NN _ARG_ ^ false_start
w- XX ^ ^ repeat
um UH ^ ^ filler
cook NN cooking ^ false_start
type NN ^ ^ false_start
positions NNS positions ^ OK

i PRP the argM_tmp false_start
i PRP ^ ^ false_start
've VBP ^ ^ false_start
done VBN ^ ^ false_start
ah UH ^ ^ filler
last JJ last argM_tmp OK
two CD two argM_tmp OK
winters NNS winters argM_tmp OK
i PRP i arg0 OK
've VBP 've ^ OK
actually RB actually argM_adverb OK
worked VBN worked arg1 OK
at IN at arg1 OK
ski NN ski arg1 OK
resorts NNS resorts arg1 OK
which WDT which arg1 OK
is VBZ is argM_discou OK
a DT a arg2 OK
great JJ great arg2 OK
job NN job arg2 OK

ca MD _ARG_ arg0 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
um UH ^ ^ filler
ca MD ca argM_mod OK
n't RB n't argM_neg OK
really RB really argM_adverb OK
beat VB beat predicate OK
that DT that arg1 OK

small JJ small ^ OK
little JJ ^ ^ false_start
corner NN corner ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK

you PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
see VB ^ ^ false_start
too RB ^ ^ false_start
many JJ ^ ^ false_start
people NNS ^ ^ false_start
actually UH actually argM_adverb OK
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
from IN ^ ^ repeat
from IN from arg0 OK
texas NNP texas arg0 OK
go VBP go predicate OK
out RB out arg_particl OK
to IN to arg1 OK
crested NNP crested arg1 OK
butte NNP butte arg1 OK

i PRP i arg0 OK
got VBD have predicate false_start
some DT some arg1 OK
ah UH ^ ^ filler
good JJ good arg1 OK
friends NNS friends arg1 OK
in IN in arg1 OK
boulder NNP boulder arg1 OK
which WDT which arg1 OK
is VBZ is predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
the DT the arg2 OK
front JJ front arg2 OK
country NN country arg2 OK
out RB ^ ^ false_start
near IN near arg2 OK
breckenridge NNP breckenridge arg2 OK

i PRP i arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
people NNS people arg1 OK
that WDT that arg1 OK
are VBP are arg1 OK
n't RB n't arg1 OK
really RB really arg1 OK
my PRP my arg1 OK
family NN family arg1 OK
that DT that arg1 OK
are VBP are arg2 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
there RB there arg2 OK
for IN for arg2 OK
me PRP me arg2 OK
no DT no arg2 OK
matter NN matter arg2 OK
what WP what arg2 OK

like UH ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
gotten VBN gotten predicate OK
pretty RB pretty arg1 OK
tight JJ tight arg1 OK
with IN ^ ^ repeat
with IN with arg1 OK
ah UH ^ ^ filler
her PRP her arg1 OK
family NN family arg1 OK
and CC and ^ OK
they PRP they arg0 OK
are VBP are ^ OK
kind RB ^ ^ false_start
a DT ^ ^ false_start
starting VBG starting predicate OK
to TO to arg1 OK
consider VB consider arg1 OK
me PRP me arg1 OK
family NN family arg2 OK
and CC ^ ^ false_start
all PDT ^ ^ false_start
that DT ^ ^ false_start

but CC but argM_discou OK
uh UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
that DT that arg1 OK
's BES 's arg1 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
understandable JJ understandabl e  arg1 OK
when WRB when argM_tmp OK
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT some arg0 OK
guy NN guy arg0 OK
is VBZ is arg1 OK
dating VBG ^ ^ repeat
dating VBG dating arg1 OK
you PRP ^ ^ repeat
're POS ^ ^ repeat
you PRP your arg1 false_start
're POS ^ arg1 OK
little JJ ^ ^ repeat
little JJ little arg1 OK
sister NN sister arg1 OK

actually UH actually ^ OK
no UH no ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
up IN up ^ OK
in IN in ^ OK
the DT the ^ OK
lehigh NNP lehigh ^ OK
valley NNP valley ^ OK
near IN ^ ^ repeat
at IN at ^ OK
allen- NNP ^ ^ repeat
allentown NNP allentown ^ OK

everyone NN everyone ^ OK
i PRP i ^ OK
've VBP 've ^ OK
spoken VBN spoken ^ OK
to IN to ^ OK
too NP-1 too ^ OK
is RB is ^ OK
sh- VBZ sh- ^ OK

they PRP ^ ^ repeat
're VBP ^ ^ repeat
all DT ^ ^ repeat
and CC ^ ^ false_start
then RB ^ ^ false_start
everybody NN everybody ^ OK
's BES 's ^ OK
like RP ^ ^ filler
wher- WRB ^ ^ false_start
live VBP ^ ^ false_start
like UH ^ ^ filler
up IN up ^ OK
by IN by ^ OK
blue NNP blue ^ OK
's POS 's ^ OK
mountain NN mountain ^ OK

they PRP they ^ OK
're VBP 're ^ OK
like RP like ^ OK
where WRB where ^ OK
's BES 's ^ OK
that DT that ^ OK

but CC but ^ OK
hey UH ^ ^ filler
for IN for ^ OK
twelve CD twelve ^ OK
bucks NNS bucks ^ OK
i PRP i ^ OK
'll MD 'll ^ OK
talk VB talk ^ OK
to IN to ^ OK
anybody NN anybody ^ OK

i PRP i ^ OK
just RB just ^ OK
keep VBP keep ^ OK
ta- VBP ^ ^ repeat
taking VBG taking ^ OK
them PRP to ^ false_start
them PRP them ^ OK

all DT all ^ OK
you PRP you ^ OK
got VBD have ^ false_start
to TO to ^ OK
do VB do ^ OK
is NP-2 is ^ OK
answer VBZ answer ^ OK
them VB them ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
like RP like ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
the DT the ^ OK
only JJ only ^ OK
person NN person ^ OK
available JJ available ^ OK
at IN at ^ OK
nine CD nine ^ OK
o'clock RB o'clock ^ OK
ten CD or ^ false_start
ten CD ten ^ OK
o'clock RB o'clock ^ OK
eleven CD or ^ false_start
eleven CD eleven ^ OK
o'clock RB o'clock ^ OK
at IN at ^ OK
night NN night ^ OK

so RB ^ ^ false_start
i PRP i ^ OK
figured VBD figured ^ OK
what WP what ^ OK
the DT the ^ OK
hell NN hell ^ OK

washington NNP washington ^ OK
township NNP township ^ OK
lower RB lower ^ OK
up IN up ^ OK
by IN by ^ OK
oh UH ^ ^ filler
like UH ^ ^ filler

right RB right ^ OK
off IN off ^ OK
of IN of ^ OK
forty-two CD forty-two ^ OK
really RB really ^ OK

so UH ^ ^ false_start
i PRP ^ ^ false_start
was VBD ^ ^ false_start
about RB ^ ^ false_start
from IN from ^ OK
mount NNP mount ^ OK
laurel NNP laurel ^ OK
to IN to ^ OK
me PRP me ^ OK
to IN to ^ OK
where WRB where ^ OK
my PRP my ^ OK
parents NNS parents ^ OK
still RB still ^ OK
live VBP live ^ OK
was ADVP-LOC- 1 was ^ OK
i VBD i ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
know RB know ^ OK
maybe VB maybe ^ OK
fifteen RB fifteen ^ OK
minutes CD minutes ^ OK

well UH ^ ^ false_start
actually RB actually ^ OK
sewell NNP sewell ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
moved VBD moved ^ OK
up IN up ^ OK
here RB here ^ OK
from IN from ^ OK
uh UH ^ ^ filler
south NNP south ^ OK
jersey NNP jersey ^ OK
about RB about ^ OK
a DT a ^ OK
year NN year ^ OK
and CC and ^ OK
a DT a ^ OK
half NN half ^ OK
ago RB ago ^ OK

uh UH ^ ^ filler
i PRP i ^ OK
lived VBD lived ^ OK
in IN in ^ OK
township NNP township ^ OK
since IN since ^ OK
eighty-six CD eighty-six ^ OK

i PRP i ^ OK
was VBD was ^ OK
there RB there ^ OK
yeah UH ^ ^ filler
roughly RB roughly ^ OK
thirteen CD thirteen ^ OK
thirteen CD ^ ^ false_start
fourteen CD or ^ false_start
fourt- CD ^ ^ repeat
fourteen CD fourteen ^ OK
years NNS years ^ OK
before IN before ^ OK
i PRP i ^ OK
moved VBD moved ^ OK

so UH ^ ^ false_start
how WRB how ^ OK
long RB long ^ OK
you PRP you ^ OK
been VBN been ^ OK
down IN down ^ OK
there RB there ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
only RB ^ ^ false_start
be- XX ^ ^ false_start
i PRP i ^ OK
only RB only ^ OK
graduated VBD graduated ^ OK
eleven CD eleven ^ OK
years NNS years ^ OK
ago RB ago ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
like RP like ^ OK
do VBP do ^ OK
you PRP you ^ OK
want VB want ^ OK
to TO to ^ OK
talk VB talk ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
like RP like ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
g- XX ^ ^ repeat
supposed VBN supposed ^ OK
to TO to ^ OK
talk VB talk ^ OK
about IN about ^ OK
something NN something ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
like RP like ^ OK
no UH no ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
talking VBG talking ^ OK
to IN to ^ OK
you PRP you ^ OK

and CC ^ ^ false_start
then RB then ^ OK
the DT the ^ OK
lady NN lady ^ OK
came VBD came ^ OK
on RP on ^ OK
and CC and ^ OK
said VBD said ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
're POS 're ^ OK
call NN call ^ OK
's BES 's ^ OK
now RB now ^ OK
over RB over ^ OK

were VBD were ^ OK
yo- PRP yo- ^ OK

see- UH ^ ^ false_start
like UH ^ ^ filler
the DT the ^ OK
day NN day ^ OK
i PRP i ^ OK
had VBD had ^ OK
the DT the ^ OK
old JJ old ^ OK
lady NN lady ^ OK
that WDT that ^ OK
would MD would ^ OK
n't RB n't ^ OK
talk VB talk ^ OK
about IN about ^ OK
anything NN anything ^ OK
but IN but ^ OK
the DT the ^ OK
topic NN topic ^ OK

i PRP i ^ OK
thought VBD thought ^ OK
i PRP i ^ OK
was VBD was ^ OK
on IN on ^ OK
there RB there ^ OK
forever RB forever ^ OK

um UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
whenever WRB whenever arg1 OK
like UH like arg1 OK
i ADVP-TMP- 1 i arg0 false_start
remember PRP remember arg1 false_start
it VBP it arg1 false_start
when WRB when arg1 OK
they PRP they arg0 OK
had VBD had arg1 OK
the DT the arg1 OK
o. NNP o. arg1 OK
j. NNP j. arg1 OK
trial NN trial arg1 OK
on RB on arg1 OK

but CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ filler
think VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
court NN court ^ OK

it PRP it arg1 OK
's BES 's ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
be VB be predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
one CD one arg2 OK
of IN of arg2 OK
the DT the arg2 OK
three CD three arg2 OK
branches NNS branches arg2 OK
of IN of arg2 OK
the DT the arg2 OK
government NN government arg2 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
necessarily RB necessarily arg2 OK
something NN something arg2 OK
we PRP we arg0 OK
need VBP need arg2 OK
to TO to arg1 OK
see VB see arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
can MD can ^ OK
understand VB understand predicate OK
that DT that arg1 OK
ye- XX yes ^ false_start

it PRP it arg1 OK
because IN ^ ^ false_start
it PRP ^ ^ repeat
is VBZ ^ ^ repeat
is VBZ is predicate OK
educational JJ educational arg2 OK
too RB too ^ OK

mm UH ^ ^ filler
eh UH ^ ^ filler
but CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg0 OK
seems VBZ seems predicate OK
so RB so arg1 OK
sensationalized JJ sensationaliz ed arg1 OK
at IN at argM_tmp OK
this DT this argM_tmp OK
point NN point argM_tmp OK
though RB though ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
really RB ^ ^ filler
with IN with arg1 OK
like UH ^ ^ filler
court NNP court arg1 OK
t. NNP t. arg1 OK
v. NNP v. arg1 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

so UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
as RB as ^ OK
long RB long ^ OK
as IN as ^ OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
there RB there arg2 OK
for IN for arg2 OK
what WP what arg2 OK
it PRP it arg1 OK
's BES 's arg2 OK
there RB there arg2 OK
for IN for arg2 OK

like UH ^ ^ filler
say VB say ^ OK
we PRP ^ ^ false_start
have VBP ^ ^ false_start
a DT ^ ^ false_start
w- PRP ^ ^ repeat
we PRP we ^ OK
get VBP get ^ OK
a DT ^ ^ false_start
like UH ^ ^ false_start
on IN on ^ OK
c. NNP c. ^ OK
span NNP span ^ OK
you PRP you arg0 OK
have VBP have predicate OK
uh UH ^ ^ filler
ah UH ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
like UH ^ ^ filler
house NNP house arg1 OK
meetings NNS meetings arg1 OK
and CC and arg1 OK
senate NNP senate arg1 OK
meetings NNS meetings arg1 OK

it PRP it arg1 false_start
's BES 's predicate false_start
there RB there arg2 false_start
if IN if arg2 OK
you PRP you arg0 OK
want VBP want arg2 OK
to TO to arg1 OK
see VB see arg1 OK
it PRP it arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
maybe RB maybe arg2 OK
o- XX ^ ^ repeat
an DT an arg2 OK
approach NN approach arg2 OK
even RB even arg2 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
court NNP court arg0 OK
t. NNP t. arg0 OK
v. NNP v. arg0 OK
should MD should arg2 OK
take VB take arg2 OK

eh UH ^ ^ filler
mhm UH mhm ^ OK

i PRP ^ ^ false_start
ah UH ^ ^ false_start
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
very RB very arg2 OK
good JJ good arg2 OK
point NN point arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
c- MD ^ ^ repeat
can MD can ^ OK
see VB see predicate OK
that DT that arg1 OK

and CC ^ ^ false_start
maybe RB maybe ^ OK
it PRP it arg1 OK
wo MD wo ^ OK
n't RB n't ^ OK
be VB be predicate OK
such PDT such arg2 OK
a DT ^ ^ repeat
a DT a arg2 OK
big JJ big arg2 OK
event NN event arg2 OK
sort RB ^ ^ filler
of RB ^ ^ filler
say UH ^ ^ filler
like IN like arg2 OK
the DT the arg1 OK
o. NNP o. arg1 OK
j. NNP j. arg1 OK
trial NN trial arg1 OK
was VBD was predicate OK
because NP-PRD because ^ OK
that IN that arg1 OK
kind VBD kind ^ false_start
of RB of ^ false_start
was DT was predicate OK
like RB ^ ^ filler
the UH the arg2 OK
first DT first arg2 OK
major JJ major arg2 OK
televised JJ televised arg2 OK
trial JJ trial arg2 OK

perhaps RB perhaps ^ false_start
not RB not ^ false_start
but CC ^ ^ false_start
if IN if ^ OK
it PRP it arg1 OK
was VBD was predicate OK
readily RB readily arg2 OK
available JJ available arg2 OK
maybe RB ^ ^ false_start

and CC ^ ^ false_start
that DT ^ ^ repeat
's BES ^ ^ repeat
that DT ^ ^ filler
that DT that arg1 OK
could MD could ^ OK
just RB just ^ false_start
be VB be predicate OK
why WRB why arg2 OK
that DT that arg2 OK
trial NN trial arg1 OK
was VBD was arg2 OK
so RB so arg2 OK
big JJ big arg2 OK
in IN ^ ^ repeat
in IN in arg2 OK
that DT that arg2 OK
sense NN sense arg2 OK

and CC ^ ^ false_start
why WRB ^ ^ filler
we PRP we arg1 OK
were VBD were predicate OK
so RB so arg2 OK
interested JJ interested arg2 OK
because ADVP-2 because ^ OK
we IN we arg0 OK
can PRP can ^ OK
sort MD sort ^ OK
of RB of ^ OK
relate RB relate predicate OK
with VB with arg1 OK
who IN who arg2 OK
it WP it arg1 OK
was PRP was arg1 OK

i PRP i arg0 false_start
think VBP think predicate false_start
the DT ^ ^ repeat
the DT the arg1 false_start
excitement NN excitement arg1 false_start
about IN about arg1 false_start
it PRP it arg1 false_start
wo MD wo arg1 false_start
n't RB n't arg1 false_start
be VB be arg1 false_start
as RB as arg2 false_start
big JJ big arg2 false_start
it PRP if ^ false_start
but CC ^ ^ false_start
it PRP it arg1 OK
was VBD was arg1 OK
more RBR more arg2 OK
readily RB readily arg2 OK
available JJ available arg2 OK
as RB ^ ^ false_start
far RB ^ arg2 false_start
as IN for ^ false_start
like UH ^ ^ filler
everyone NN everyone arg2 OK
else RB else arg2 OK
even RB ^ ^ false_start

i PRP i arg0 false_start
guess VBP guess predicate false_start
but CC ^ ^ false_start
those DT those arg0 OK
who WP who arg0 OK
are VBP are arg0 OK
interested JJ interested arg0 OK
can MD ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
can MD can arg1 OK
watch VB watch arg1 OK

uh UH ^ ^ filler
just RB ^ ^ false_start
that IN ^ ^ false_start
i PRP ^ ^ repeat
do VBP ^ ^ repeat
n't RB ^ ^ repeat
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
if IN ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
they PRP they arg1 OK
're VBP 're arg1 OK
televising VBG televising arg2 OK
or CC ^ ^ repeat
or CC ^ ^ false_start
doing VBG ^ ^ false_start
anything NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
with IN ^ ^ false_start
it PRP it arg2 OK

or CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
will MD will ^ OK
be VB be predicate OK
anyway RB anyway ^ OK

uh UH ^ ^ false_start
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
true JJ true arg2 OK
too RB too ^ OK

well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP you arg0 OK
think VBP would ^ false_start
think VBP think predicate OK
what WP ^ ^ repeat
what WP what arg1 OK
did VBD did arg1 OK
we PRP we arg0 OK
do VB do arg1 OK
before IN before argM_tmp OK
we PRP we arg0 OK
had VBD had argM_tmp OK
televised JJ televised arg1 OK
trials NNS trials arg1 OK

we PRP ^ argM_tmp repeat
we PRP we arg0 OK
s- RB ^ ^ repeat
still RB still ^ false_start
have VBP have predicate OK
those DT those arg1 OK
^ ^ now ^ OK
for IN for arg1 OK
the DT the arg1 OK
same JJ same arg1 OK
reason NN reason arg1 OK

i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
also RB also ^ OK
said VBD said ^ OK
that IN that ^ OK
if IN if ^ OK
like UH ^ ^ filler
someone NN ^ ^ repeat
uh UH ^ ^ filler
like UH ^ ^ filler
you PRP you ^ OK
could MD could ^ OK
n't RB n't ^ OK
tell VB tell ^ OK

like UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
like UH ^ ^ filler
if IN if arg1 OK
they PRP they arg0 OK
give VBP gave arg1 false_start
you PRP you arg2 OK
the DT the arg1 OK
money NN money arg1 OK
then RB then arg1 OK
you PRP you arg0 OK
could MD could argM_neg OK
n't RB n't argM_neg OK
like UH ^ ^ filler
talk VB talk arg1 OK
to IN to arg2 OK
anybody NN anybody arg2 OK
else RB else arg2 OK
ever PP-2 ever argM_tmp OK
again RB again argM_tmp OK

er RB ^ ^ filler
like UH like ^ OK
your IN your ^ OK
best PRP best ^ OK
friends JJS friends ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
would MD would arg1 OK
probably RB probably arg1 OK
not RB not argM_neg OK
take VB take arg1 OK
the DT the arg1 OK
money NN money arg1 OK
if IN if arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
between IN between arg2 OK
my PRP my arg2 OK
friends NNS friends arg2 OK
or CC or arg2 OK
the DT the arg2 OK
money NN money arg2 OK
just RB just ^ OK
because IN because ^ OK
like IN ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
it PRP it arg1 OK
is VBZ is predicate OK
the DT the arg2 OK
root NN root arg2 OK
of IN of arg2 OK
all DT all arg2 OK
evil NN evil arg2 OK

and CC ^ ^ false_start
some DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
down IN down ^ OK
the DT the ^ OK
road NN road ^ OK
it PRP it arg0 OK
will MD will ^ OK
haunt VB haunt predicate OK
you PRP you arg1 OK

when WRB when ^ OK
you PRP you arg0 OK
see VBP see predicate OK
other JJ other arg1 OK
people NNS people arg1 OK
with IN with arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
tons NNS tons arg1 OK
of IN of arg1 OK
money NN money arg1 OK
and CC ^ ^ repeat
they PRP they arg1 OK
're VBP 're predicate OK
usually RB usually arg2 OK
the DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg2 OK
miserable JJ miserable arg2 OK
people NNS people arg2 OK
in IN in arg2 OK
life NN life arg2 OK

i PRP i ^ OK

but CC but ^ OK
then RB then ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
once IN ^ ^ repeat
once IN once arg1 OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's HVS 's arg1 OK
taken VBN taken arg1 OK
a DT ^ ^ repeat
a DT a arg1 OK
little JJ little arg1 OK
bit NN bit arg1 OK
too RB too arg1 OK
much JJ much arg1 OK
money NN money arg1 OK
of IN of arg1 OK
our PRP our arg1 OK
tax NN tax arg1 OK
money NN money arg1 OK
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg0 OK
should MD should arg1 OK
stop VB stop arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
tell VBP tell predicate OK
you PRP you arg2 OK
one CD one arg1 OK
thing NN thing arg1 OK
one CD one arg1 OK
day NN day arg1 OK

then RB then ^ OK
the DT the argM_tmp OK
next JJ next argM_tmp OK
day NN day argM_tmp OK
it PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
's BES ^ ^ repeat
've VBP 've ^ OK
all DT ^ ^ repeat
change VBN change predicate OK
their PRP their arg1 OK
mind NN mind arg1 OK

i PRP i ^ OK
yup UH yup ^ OK

i PRP i ^ OK
definitely RB definitely ^ OK
think VBP think ^ OK
ah UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
whole JJ ^ ^ repeat
whole JJ whole ^ OK
money NN money ^ OK
situation NN situation ^ OK
is VBZ is ^ OK

i PRP i ^ OK
would MD would ^ OK
definitely RB definitely ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
choose VB choose ^ OK
friendships NNS friendships ^ OK
over IN over ^ OK
money NN money ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK

every DT every argM_tmp OK
day NN day argM_tmp OK
i PRP ^ ^ repeat
mean VBP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
live VBP live predicate OK
with IN with argM_other OK
my PRP my argM_other OK
girlfriend NN girlfriend argM_other OK

and CC ^ ^ false_start
uh UH ^ ^ filler
it PRP ^ ^ repeat
there EX there arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
so RB so arg2 OK
many JJ many arg2 OK
days NNS days arg2 OK
where WRB where arg2 OK
she PRP she arg0 OK
's BES 's arg2 OK
complaining VBG complaining arg2 OK
about IN about arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
not RB not argM_neg OK
having VBG having arg1 OK
money NN money arg1 OK
or CC or arg1 OK
this DT this arg1 OK
or CC or arg1 OK
that DT that arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
's BES ^ ^ repeat
like RP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg0 OK
get VBP get predicate OK
by RP by arg1 OK
every DT every argM_tmp OK
day NN day argM_tmp OK

and CC ^ ^ false_start
that DT ^ ^ repeat
all DT ^ ^ repeat
that WDT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
's BES ^ ^ repeat
important JJ important arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
was VBD was ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX ^ ^ repeat
there EX there arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
no DT no arg2 OK
amount NN amount arg2 OK
of IN of arg2 OK
money NN money arg2 OK
that WDT that arg2 OK
would MD would arg2 OK
make VB make arg2 OK
me PRP me arg0 OK
want VB want arg1 OK
to TO to arg1 OK
loose VB lose arg1 false_start
all DT all arg1 OK
my PRP my arg1 OK
friends NNS friends arg1 OK
ah UH ^ ^ filler
just RB just arg3 OK
for IN ^ ^ repeat
for IN for arg3 OK
the DT the arg3 OK
sake NN sake arg3 OK
of IN of arg3 OK
having VBG having arg3 OK
it PRP it arg1 OK

what WP ^ ^ repeat
what WP what arg1 OK
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
mean VB mean predicate OK
by IN by arg1 OK
that DT that arg1 OK

that DT that arg0 OK
person NN person arg0 OK
that WDT that arg0 OK
takes VBZ takes arg0 OK
the DT the arg0 OK
million CD million arg0 OK
over IN over arg0 OK
the DT the arg0 OK
friendship NN friendship arg0 OK
is VBZ is predicate OK
the DT the arg2 OK
one NN one arg2 OK
whose WP whose arg2 OK
going VBG going arg2 OK
to TO to arg2 OK
suffer VB suffer arg2 OK
in IN in arg2 OK
the DT the arg2 OK
long JJ long arg2 OK
run NN run arg2 OK

and CC ^ ^ false_start
you PRP you arg1 OK
sound VBP sound predicate OK
like IN like arg2 OK
you PRP you arg1 OK
're VBP 're arg2 OK
in IN ^ ^ repeat
in IN in arg2 OK
ah UH ^ ^ filler
good JJ good arg2 OK
hands NNS hands arg2 OK

i PRP i arg2 OK
think VBP think predicate OK
eight CD eight arg1 OK
bucks NNS bucks arg1 OK
is VBZ is arg1 OK
the DT the arg2 OK
minimum NN minimum ^ OK
minimum NN amount arg2 false_start
on IN on arg2 false_start
that WDT which arg2 false_start
you PRP you arg0 OK
can MD can arg2 OK
survive VB survive arg2 OK

like UH ^ arg2 filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when ^ OK
i PRP i arg1 OK
was VBD was predicate OK
young JJ young arg2 OK
god UH ^ ^ filler
it PRP ^ ^ repeat
it ADVP-TMP- 1 it arg1 OK
was VBD ^ ^ repeat
was PRP was predicate OK
only RB ^ ^ repeat
only VBD only arg2 OK
like RB ^ ^ filler
four UH four arg2 OK
seventy-five CD seventy-five arg2 OK
an CD an arg2 OK
hour DT hour arg2 OK
four NN or ^ false_start
four NN four arg2 OK
fifty CD fifty arg2 OK
an CD an arg2 OK
hour DT hour arg2 OK
or NN ^ ^ false_start
something CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

um UH ^ ^ filler
eh UH ^ ^ filler
um UH ^ ^ filler
just RB ^ ^ filler
how WRB how ^ OK
we PRP we ^ OK
settle VB settle ^ OK
at IN at ^ OK
the DT the ^ OK
rate NN rate ^ OK
of IN of ^ OK
five CD five ^ OK
fifteen CD fifteen ^ OK

um UH ^ ^ filler
now RB ^ ^ filler
do VBP do ^ OK
they PRP they arg0 OK
base VBP base predicate OK
your PRP your arg1 OK
pay NN pay arg1 OK
on IN on arg2 OK
what WP what arg1 OK
you PRP you arg0 OK
talk VBP talk arg2 OK
about IN about arg1 OK

do VBP do ^ OK
they PRP they arg0 OK
base VBP base predicate OK
like UH ^ ^ filler
this DT this arg1 OK
like UH ^ ^ filler
on IN ^ ^ repeat
on IN on arg2 OK
what WP what arg1 OK
you PRP you arg0 OK
talk VBP talk arg2 OK
about IN about arg1 OK

meaning VBG ^ ^ filler
like UH ^ ^ filler
if IN ^ ^ repeat
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
did VBD ^ ^ repeat
n't RB ^ ^ repeat
wasted VBD wasted predicate OK
the DT the arg1 OK
entire JJ entire arg1 OK
time NN time arg1 OK
not RB not ^ OK
talking VBG talking ^ OK
about IN about ^ OK
it PRP it ^ OK
would MD would ^ OK
they PRP they ^ OK

well UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
small JJ ^ ^ repeat
short JJ short arg2 OK
question NN question arg2 OK

but CC ^ ^ filler
now RB now ^ OK
i PRP i arg0 OK
have VBP have predicate OK
a DT ^ ^ repeat
another DT another arg1 OK
question NN question arg1 OK

is VBZ ^ ^ false_start
this DT ^ ^ false_start
they PRP they arg0 OK
say VBP say predicate OK
you PRP you arg0 OK
can MD can arg1 OK
call VB call arg1 OK
up IN up arg1 OK
to IN to arg1 OK
three CD three arg1 OK
times NNS times arg1 OK

it PRP it ^ OK
's BES 's predicate OK
like IN like arg1 OK
blind NNP blind arg1 OK
date NNP date arg1 OK

it PRP it ^ OK
's BES 's predicate OK
like IN like arg1 OK
blind NNP blind arg1 OK
date NNP date arg1 OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP you arg0 OK
know VBP know predicate OK
what WP what arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK

it PRP it ^ OK
's BES was ^ false_start
supposed VBN supposed predicate OK
to TO to arg1 OK
have VB have arg1 OK
been VBN been arg1 OK
just RB ^ ^ false_start
clean JJ clean arg1 OK
f- NN ^ ^ repeat
fun NN fun arg1 OK
where WRB where ^ OK
they PRP they arg0 OK
were VBD were ^ OK
just RB ^ ^ false_start
dating VBG dating predicate OK

it PRP it ^ OK
's BES 's predicate OK
not RB not arg1 OK
our PRP ^ ^ repeat
our PRP our arg1 OK
population NN population arg1 OK
anymore RB anymore arg1 OK

unfortunately RB unfortunately ^ false_start
people NNS people arg1 OK
are VBP are predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
more RBR more arg2 OK
wild JJ wild arg2 OK
than IN than arg2 OK
that DT that arg2 OK

they PRP ^ ^ repeat
they PRP they ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP ^ arg1 false_start
also RB ^ ^ false_start
th- VBP ^ ^ false_start
i PRP i ^ OK
happen VBP happen predicate OK
to TO to ^ OK
think VB think predicate OK
t- XX ^ ^ false_start
some DT some ^ OK
of IN of ^ OK
these DT these ^ OK
shows NNS shows ^ OK
that WDT that ^ OK
are VBP are ^ OK
supposed VBN supposed predicate OK
to TO to ^ OK
be VB be ^ OK
geared VBN geared predicate OK
towards IN towards ^ OK
kids NNS kids ^ OK
are VBP are predicate OK
very RB very ^ OK
violent JJ violent ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
they PRP they arg0 OK
have VBP have predicate OK
cartoons NNS cartoons arg1 OK
that WDT that arg1 OK
are VBP are arg1 OK
violent JJ violent arg2 OK

see UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have predicate OK
any DT any arg1 OK
children NNS children arg1 OK

but CC but ^ OK
if IN if ^ OK

like UH ^ ^ filler
when WRB when argM_tmp OK
we PRP we argM_tmp OK
w- XX ^ ^ false_start
grew VBD grew argM_tmp OK
up RP up argM_tmp OK
it ADVP-TMP- 1 ^ ^ false_start
's PRP ^ ^ false_start
you BES ^ ^ false_start
know PRP ^ ^ false_start
they VBP they arg0 OK
did PRP did ^ OK
n't VBD n't ^ OK
need RB need predicate OK
to VB to arg1 OK
get TO get arg1 OK
involved VB involved arg1 OK
as JJ as ^ OK
much RB much ^ OK

maybe RB maybe ^ OK
they PRP they arg0 OK
'd VBD 'd ^ OK
should MD should ^ OK
've VB 've ^ OK
gotten VBN gotten predicate OK
more RBR more arg1 OK
involved JJ involved arg1 OK
because IN because ^ OK
we PRP we arg1 OK
grew VBD grew predicate OK
up RP up arg_particl OK
our ADVP-TMP- 1 our arg0 OK
parents PRP parents arg0 OK
were NNS were ^ OK
n't VBD n't ^ OK
involved RB involved predicate OK

now RB now ^ OK
it PRP ^ ^ false_start
's HVS ^ ^ false_start
gotten VBN ^ ^ false_start
everything NN everything arg1 OK
is VBZ is predicate OK
very RB very arg2 OK
re- XX ^ ^ repeat
risque JJ risque arg2 OK

it PRP it ^ OK
amazes VBZ amazes predicate OK
me PRP me arg1 OK
that IN ^ ^ false_start
what WP what arg1 OK
's BES 's arg2 OK
on IN on arg1 OK
regular JJ regular arg1 OK
t. NN t. arg1 OK
v. NN v. arg1 OK

they PRP ^ ^ false_start
're VBP ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
t. NN t. arg1 OK
v. NN v. arg1 OK
has VBZ has ^ OK
gotten VBN gotten predicate OK
very RB ^ ^ repeat
very RB very arg2 OK
ris- JJ ^ ^ repeat
risque JJ risque arg2 OK
this DT ^ ^ repeat
these DT these ^ OK
day NN ^ ^ repeat
days NNS days ^ OK

but CC but ^ OK
if IN if ^ OK
i PRP i arg0 OK
had VBD had predicate OK
the DT the arg1 OK
kids NNS kids arg1 OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
what WP what arg1 OK
i PRP i arg0 OK
would MD would arg1 OK
do VB do arg1 OK
because NP-1 because ^ OK
it IN it ^ OK
really PRP really ^ OK
is RB is ^ OK

he- PRP ^ ^ false_start
my PRP my arg1 OK
nephew NN nephew arg1 OK
just RB just ^ OK
turned VBD turned predicate OK
ten CD ten arg2 OK

and CC ^ ^ false_start
they PRP they ^ OK
actually RB actually ^ OK
had VBD had ^ OK
the DT ^ ^ false_start
she PRP ^ ^ false_start
the DT the arg1 OK
t. NN t. arg1 OK
v. NN v. arg1 OK
t- XX ^ ^ false_start
cut VBN cut predicate OK
off RP off arg_particl OK
for IN for ^ OK
ten CD ten ^ OK
days NNS days ^ OK

actually UH ^ ^ false_start
was VBD was predicate OK
it PRP it ^ OK
ten CD ten arg1 OK

d- XX ^ ^ false_start
no UH no ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
and CC ^ ^ false_start
it PRP ^ ^ false_start
but CC but ^ OK
then RB then ^ OK
it PRP it ^ OK
started VBN started predicate OK
with IN with arg2 OK
the DT the arg2 OK
video JJ video arg2 OK
games NNS games arg2 OK

um UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
would MD would ^ OK
take VB take ^ OK
the DT the ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK
just RB just ^ OK
because IN because ^ OK
my PRP my ^ OK
family NN family ^ OK
is VBZ is ^ OK
in IN in ^ OK
the DT the ^ OK
states NNS states ^ OK

that DT that ^ OK
's BES 's ^ OK

i PRP i ^ OK
would MD would ^ OK
definitely RB definitely ^ OK
take VB take ^ OK
it PRP it ^ OK
if IN if ^ OK
i PRP i ^ OK
could MD could ^ OK
c- VB ^ ^ repeat
come VB come ^ OK
back RB back ^ OK

but CC ^ ^ false_start
if IN if ^ OK
we PRP we ^ OK
were VBD were ^ OK
n't RB n't ^ OK
eh UH ^ ^ filler
s- XX ^ ^ false_start
a- VBN ^ ^ repeat
allowed VBN allowed ^ OK
to TO to ^ OK
come VB come ^ OK
back RB back ^ OK
then RB then ^ OK
probably RB probably ^ OK
not RB not ^ OK

eh UH ^ ^ filler
what WP what ^ OK
about IN about ^ OK
the DT the ^ OK
language NN language ^ OK
barrier NN barrier ^ OK

what WP ^ ^ repeat
um UH ^ ^ filler
w- WP ^ ^ repeat
what WP what ^ OK
would MD ^ ^ repeat
would MD would ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
miss VB miss ^ OK
if IN if ^ OK
you PRP you ^ OK
left VBD left ^ OK

what WP what ^ OK
would MD would ^ OK
you PRP you ^ OK
not RB not ^ OK
miss VB miss ^ OK

just RB ^ ^ filler
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN like ^ OK
politics NNS politics ^ OK
and CC and ^ OK
how WRB how ^ OK
eh UH ^ ^ filler
different JJ different ^ OK
systems NNS systems ^ OK
work VBP work ^ OK
things ADVP-MNR- 1 things ^ OK
like NNS like ^ OK
that IN that ^ OK

eh UH ^ ^ filler
w- XX ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
but CC ^ ^ false_start
there EX there ^ OK
's BES 's ^ OK
dishonesty NN dishonesty ^ OK
everywhere RB everywhere ^ OK

so RB ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
would MD would ^ OK
be VB be ^ OK
the DT the ^ OK
best JJS best ^ OK
place NN place ^ OK
to TO to ^ OK
live VB live ^ OK
anywhere RB ^ ^ false_start
than IN than ^ OK
anywhere RB anywhere ^ OK

i PRP i ^ OK
like VBP like ^ OK
having VBG having ^ OK
the DT the ^ OK
role NN role ^ OK
left VBN left ^ OK
up IN up ^ OK
to IN to ^ OK
the DT the ^ OK
the DT ^ ^ false_start
people NNS people ^ OK
citizens NNS ^ ^ false_start
rather RB rather ^ OK
than IN than ^ OK
the DT the ^ OK
next JJ next ^ OK
in IN in ^ OK
line NN line ^ OK

see UH ^ ^ filler
eh UH ^ ^ filler
who WP who ^ OK
knows VBZ knows ^ OK
at IN at ^ OK
that DT that ^ OK
age NN age ^ OK

i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
like VB like ^ OK

so RB ^ ^ filler
kind RB ^ ^ filler
of RB ^ ^ filler
mm UH ^ ^ filler
the DT the ^ OK
south NN south ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK

but CC ^ ^ false_start
nothing NN nothing ^ OK
like UH ^ ^ filler
real RB real ^ OK
bad JJ bad ^ OK
going VBG ^ ^ false_start
nothing NN is ^ false_start
going VBG going ^ OK
on RB on ^ OK

because IN ^ ^ false_start
i PRP i ^ OK
have VBP have ^ OK
lot NN lot ^ OK
of IN of ^ OK
neighbors NNS neighbors ^ OK
around IN around ^ OK
here RB here ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
most JJS most ^ OK
of IN of ^ OK
them PRP them ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
even RB even ^ OK
know VB know ^ OK
their PRP their ^ OK
names NNS names ^ OK
really RB ^ ^ false_start

m- XX ^ ^ false_start
yeah UH yeah ^ OK

use VB use ^ OK
this DT this ^ OK
money NN money ^ OK
to TO to ^ OK
pay VB ^ ^ repeat
pay VB pay ^ OK
th- DT ^ ^ repeat
the DT the ^ OK
cell NN cell ^ OK
phone NN phone ^ OK
bill NN bill ^ OK

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
feel VB feel ^ OK
unsafe JJ unsafe ^ OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

but CC ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
i PRP i ^ OK
know VBP know ^ OK
there EX there ^ OK
's BES 's ^ OK
like UH ^ ^ filler
people NNS people ^ OK
watching VBG watching ^ OK
out RP out ^ OK
for IN for ^ OK
everyone NN everyone ^ OK

then RB then ^ OK
it PRP it ^ OK
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
reassures VBZ reassures ^ OK
you PRP you ^ OK

and UNK ^ ^ false_start
then UNK then ^ OK
when UNK when ^ OK
you UNK you ^ OK
look UNK look ^ OK
out UNK out ^ OK
your UNK your ^ OK
house UNK house ^ OK
and UNK and ^ OK
you UNK you ^ OK
see UNK see ^ OK
all UNK all ^ OK
the UNK the ^ OK
litter UNK litter ^ OK
and UNK and ^ OK
the UNK the ^ OK
graffiti UNK graffiti ^ OK
everywhere UNK everywhere ^ false_start
lessens UNK it ^ false_start
really UNK really ^ OK
lessens UNK lessens ^ OK
your UNK your ^ OK
view UNK view ^ OK
of UNK of ^ OK
the UNK the ^ OK
whole UNK whole ^ OK
community UNK community ^ OK
and UNK and ^ OK
life UNK life ^ OK
an- UNK ^ ^ repeat
and UNK ^ ^ false_start
everything UNK ^ ^ false_start

i PRP i ^ OK
've VBP 've ^ OK
only RB only ^ OK
been VBN been ^ OK
doing VBG doing ^ OK
this DT this ^ OK
for IN for ^ OK
m- XX ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
a DT a ^ OK
week NN week ^ OK
now RB now ^ OK

might MD might ^ OK
have VB have ^ OK
came VBN came ^ OK
already RB already ^ OK

now RB now argM_tmp false_start
i PRP i arg0 OK
just RB just argM_adverb OK
um UH ^ ^ filler
kind RB kind argM_extent OK
of RB of argM_extent OK
ignore VBP ignore predicate OK
things NNS things arg0 false_start
that WDT that arg0 false_start
used VBD used argM_mod false_start
to TO to argM_mod false_start
bother VB bother arg1 false_start
me PRP me arg1 false_start

r- UH ^ ^ repeat
right UH right ^ OK

um UH ^ ^ filler
uh UH ^ ^ filler
basically RB ^ ^ false_start
um UH ^ ^ filler
and CC ^ ^ false_start
when WRB when argM_tmp OK
we PRP we argM_tmp OK
do VBP do argM_tmp OK
travel VB travel argM_tmp OK
it ADVP-TMP- 1 it arg1 OK
seems PRP seems predicate OK
to VBZ to arg2 OK
be TO be arg2 OK
closer VB closer arg2 OK
to RBR to arg2 OK
home IN home arg2 OK

mm UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
um UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
eh UH ^ ^ filler
one CD one ^ OK
thing NN thing ^ OK
that WDT that ^ OK
has VBZ has ^ OK
um UH ^ ^ filler
become VBN become ^ OK
of IN of ^ OK
this DT this ^ OK

i PRP i arg1 OK
was VBD was ^ OK
raised VBN raised predicate OK
in IN in argM_tmp OK
an DT an argM_tmp OK
era NN era argM_tmp OK
with IN with argM_tmp OK
uh UH ^ ^ filler
grandparents NNS grandparents argM_tmp OK
great JJ great argM_tmp OK
grandparents NNS grandparents argM_tmp OK

and CC ^ ^ false_start
well UH ^ ^ filler
my PRP my arg1 OK
daughter NN daughter arg1 OK
was VBD was predicate OK
f- CD ^ ^ false_start
almost RB almost arg2 OK
fifteen CD fifteen arg2 OK
or CC or arg2 OK
sixteen CD sixteen arg2 OK
d- XX ^ ^ false_start
um UH ^ ^ filler
w- XX ^ ^ false_start
d- XX ^ ^ false_start
before IN before argM_tmp OK
her PRP her arg0 OK
great JJ great arg0 OK
great JJ great arg0 OK
grandmother NN grandmother arg0 OK
passed VBD passed arg2 OK
away RB away argM_mnr OK

so RB ^ ^ filler
family NN family arg1 OK
was VBD was predicate OK
always RB always arg2 OK
very RB very arg2 OK
close JJ close arg2 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
all DT all argM_tmp OK
of IN of argM_tmp OK
a DT a argM_tmp OK
sudden JJ sudden argM_tmp OK
um UH ^ ^ filler
we PRP we arg1 OK
all DT all arg1 OK
got VBD got predicate OK
spread JJ spread arg1 OK
out RP out argM_dir OK

as IN as argM_mnr false_start
a DT a argM_mnr false_start
kid NN kid argM_mnr false_start
and CC ^ ^ false_start
um UH ^ ^ filler
it PRP it arg1 OK
just RB ^ ^ false_start
became VBD became predicate OK
very RB very arg2 OK
unusual JJ unusual arg2 OK
because IN because argM_cause OK
of IN of argM_cause OK
having VBG having argM_cause OK
all DT all arg1 OK
of IN of arg1 OK
the DT the arg1 OK
family NN family arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
my PRP ^ ^ false_start
t- XX ^ ^ false_start
father NN ^ ^ false_start
was VBD ^ ^ false_start
um UH ^ ^ filler
his PRP his arg1 OK
m- NN ^ ^ repeat
mother NN mother arg1 OK
was VBD was predicate OK
one CD one arg2 OK
of IN of arg2 OK
ten CD ten arg2 OK

and CC ^ ^ false_start
n- RB ^ ^ repeat
now RB now argM_tmp OK
all DT all argM_tmp OK
of IN of argM_tmp OK
a DT a argM_tmp OK
sudden JJ sudden argM_tmp OK
everybody NN everybody arg1 OK
's BES 's ^ OK
spread JJ spread predicate OK
out RP out argM_dir OK

and CC ^ ^ false_start
him PRP he arg1 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
considered VBN considered predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
quote RB ^ ^ false_start
moving VBG moving arg1 OK
back RB back arg2 OK
north RB north arg2 OK
again RB again argM_extent OK
to TO ^ ^ repeat
to TO to argM_purpos OK
be VB be argM_purpos OK
closer RBR closer arg2 OK
to IN to arg2 OK
family NN family arg2 OK

if IN ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
so NP-1 ^ ^ filler
it UH it ^ OK
's PRP 's ^ OK
just BES just ^ OK
you RB ^ ^ filler
know PRP ^ ^ filler

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
that IN ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
the DT ^ ^ false_start
whole JJ ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
i PRP ^ ^ false_start
enj- VBP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
in IN in ^ OK
fact NN fact ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
would MD would ^ OK
say VB say ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
believe VB believe ^ OK
it PRP it ^ OK
's BES 's ^ OK
the DT the ^ OK
whole JJ whole ^ OK
reason NN reason ^ OK
the DT the ^ OK
economy NN economy ^ OK
is VBZ is ^ OK
having VBG having ^ OK
the DT the ^ OK
problems NNS problems ^ OK
it PRP it ^ OK
's BES 's ^ OK
having VBG having ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
d- VBP ^ ^ false_start
i PRP i ^ OK
certainly RB certainly ^ OK
think VBP think ^ OK
that IN that ^ OK
it PRP it ^ OK
's HVS 's ^ OK
contributed VBN contributed ^ OK
um UH ^ ^ filler
because IN because ^ OK
people NNS people ^ OK
have VB have ^ OK
a DT a ^ OK
lot NN lot ^ OK
less JJR less ^ OK
faith NN faith ^ OK
in IN in ^ OK
the DT the ^ OK
stock NN stock ^ OK
market NN market ^ OK
and CC and ^ OK
uh UH ^ ^ filler
the DT the ^ OK
value NN value ^ OK
of IN of ^ OK
their PRP their ^ OK
stocks NNS stocks ^ OK
and CC and ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
thing NN thing ^ OK

uh UH ^ ^ filler
when WRB ^ ^ repeat
when WRB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
have VBP have ^ OK
things NNS things ^ OK
like IN like ^ OK
enron NNP enron ^ OK
and CC and ^ OK
worldcom NNP worldcom ^ OK
and CC ^ ^ repeat
and CC and ^ OK
things NNS things ^ OK
like IN like ^ OK
that DT that ^ OK
where WRB where ^ OK
these DT these ^ OK
stocks NNS stocks ^ OK
just RB just ^ OK
go VBP go ^ OK
into IN into ^ OK
the DT the ^ OK
dump NN dump ^ OK

i- XX ^ ^ false_start
uh UH ^ ^ filler
so UH ^ ^ false_start
um UH ^ ^ filler
how WRB how ^ OK
has VBZ has ^ OK
it PRP it ^ OK
affected VBN affected ^ OK
you PRP you ^ OK
personally RB personally ^ OK
would MD would ^ OK
you PRP you ^ OK
say VB say ^ OK

well UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
on- CD ^ ^ repeat
one CD one ^ OK
would MD would ^ OK
think VB think ^ OK
that IN that ^ OK
they PRP they ^ OK
would MD would ^ OK
have VB have ^ OK
to TO to ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
who WP who ^ OK
knows VBZ knows ^ OK

but CC ^ ^ false_start
one CD ^ ^ false_start
would MD ^ ^ false_start
think VB ^ ^ false_start
that IN ^ ^ false_start
eh UH ^ ^ filler
eh UH ^ ^ filler
for IN ^ ^ repeat
for IN ^ ^ repeat
me PRP ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
um UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
thirty-five CD thirty-five ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
that IN that ^ OK
the DT ^ ^ repeat
eh UH ^ ^ filler
the DT the ^ OK
corporate JJ corporate ^ OK
scandals NNS scandals ^ OK
have VBP have ^ OK
affected VBN affected ^ OK
me PRP me ^ OK
exactly RB exactly ^ OK

uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
always RB ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
alwa- RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
work VBP work ^ OK
in IN in ^ OK
the DT the ^ OK
tech NN tech ^ OK
sector NN sector ^ OK

um UH ^ ^ filler
so UH ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
a- RB ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
really RB really ^ OK
always RB always ^ OK
kind RB kind ^ OK
of RB of ^ OK
worried JJ worried ^ OK
about IN about ^ OK
getting VBG getting ^ OK
a DT a ^ OK
job NN job ^ OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and ^ OK
keeping VBG keeping ^ OK
a DT a ^ OK
job NN job ^ OK
and CC ^ ^ repeat
and CC ^ ^ false_start
all PDT ^ ^ false_start
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
thing NN ^ ^ false_start

so UH so ^ OK
uh UH ^ ^ filler
to TO to ^ OK
answer VB answer ^ OK
the DT the ^ OK
other JJ other ^ OK
question NN question ^ OK
what WP ^ ^ repeat
what WP what ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
think VB ^ ^ repeat
think VB think ^ OK
the DT the ^ OK
government NN government ^ OK
can MD can ^ OK
do VB do ^ OK

well UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
me- VBP ^ ^ false_start
i PRP i ^ OK
agree VBP ^ ^ repeat
agree VBP agree ^ OK
with IN ^ ^ repeat
with IN with ^ OK
yo- PRP ^ ^ repeat
you PRP you ^ OK
on IN on ^ OK
some DT some ^ OK
of IN of ^ OK
those DT those ^ OK
things NNS things ^ OK

um UH ^ ^ filler
however WRB however ^ OK
specifically RB specifically ^ OK
like UH ^ ^ filler
with IN ^ ^ repeat
with IN with ^ OK
the DT the ^ OK
corporate JJ corporate ^ OK
scandal NN scandal ^ OK
stuff NN stuff ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
why WRB why ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
trying VBG trying ^ OK
to TO to ^ OK

uh UH ^ ^ filler
b- XX ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
h- VBP ^ ^ false_start
like IN like ^ OK
i PRP i ^ OK
said VBD said ^ OK
i PRP i ^ OK
have VBP have ^ OK
n't RB n't ^ OK
done VBN done ^ OK
one CD one ^ OK
of IN of ^ OK
these DT these ^ OK
before RB before ^ OK

but CC but ^ OK
for IN for ^ OK
me PRP me ^ OK
with IN ^ ^ repeat
specifically RB specifically ^ OK
the DT ^ ^ repeat
the DT the ^ OK
corporate JJ corporate ^ OK
sand- NN ^ ^ repeat
scandal NN scandal ^ OK
stuff NN stuff ^ OK
what WP ^ ^ repeat
what WP what ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP ^ ^ repeat
think VBP think ^ OK
needs VBZ needs ^ OK
to TO to ^ OK
happen VB happen ^ OK
in IN in ^ OK
those DT those ^ OK
cases NNS cases ^ OK
is VBZ is ^ OK

i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
the DT ^ ^ repeat
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
th- DT ^ ^ repeat
there EX there ^ OK
's BES 's ^ OK
not RB not ^ OK
a DT a ^ OK
whole JJ whole ^ OK
lot NN lot ^ OK
the DT the ^ OK
government NN government ^ OK
can MD can ^ OK
do VB do ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
what WP what ^ OK
the DT the ^ OK
government NN government ^ OK
can MD can ^ OK
do VB do ^ OK
is NP-1 is ^ OK
they VBZ ^ ^ repeat
they MD they ^ OK
can PRP ^ ^ repeat
can PRP can ^ OK
uh MD ^ ^ filler
eh UH ^ ^ filler
create UH create ^ OK
a VB a ^ OK
real DT real ^ OK
sense JJ sense ^ OK
of NN of ^ OK
accounta- IN ^ ^ false_start
countability- NN accountabilit y  ^ false_start

to IN to ^ OK
where WRB where ^ OK
the DT the ^ OK
ken NNP ken ^ OK
lays NNPS lays ^ OK
and CC ^ ^ repeat
and CC and ^ OK
the DT ^ ^ repeat
the DT the ^ OK
guys NNS guys ^ OK
that WDT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that ^ OK
are VBP ^ ^ repeat
are VBP ^ ^ false_start
right RB right ^ OK
now RB now ^ OK
seem VB seem ^ OK
to TO to ^ OK
maybe RB ^ ^ false_start
some DT some ^ OK
people NNS people ^ OK
seem VBP ^ ^ repeat
to TO to ^ OK
be VB be ^ OK
profiting VBG profiting ^ OK
from IN from ^ OK
some DT some ^ OK
of IN of ^ OK
this DT this ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
held VBN held ^ OK
accountable JJ accountable ^ OK

and CC and ^ OK
they PRP they ^ OK
're VBP 're ^ OK
punished VBN punished ^ OK
t- IN ^ ^ repeat
to IN to ^ OK
the DT the ^ OK
full RB ^ ^ repeat
fullest JJS fullest ^ OK
ex- JJ ^ ^ repeat
extent NN extent ^ OK
of IN of ^ OK
the DT the ^ OK
law NN law ^ OK

um UH ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
the DT the ^ OK
it PRP ^ ^ false_start
weather NN weather ^ OK
can MD can ^ OK
very VB vary ^ false_start
greatly RB greatly ^ OK

like UH ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
even RB even ^ OK
in IN in ^ OK
january NNP january ^ OK
we PRP we ^ OK
can MD can ^ OK
have VB have ^ OK
fifty CD fifty ^ OK
and CC and ^ OK
sixty CD sixty ^ OK
degree NN degree ^ OK
weather NN weather ^ OK

but CC but ^ OK
um UH um ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they ^ OK
had VBD had ^ OK
that DT that ^ OK
little JJ little ^ OK
quote NN quote ^ OK
that IN that ^ OK
it PRP it ^ OK
lasts VBZ lasts ^ OK
seven CD seven ^ OK
days NNS days ^ OK
or CC or ^ OK
a DT a ^ OK
week NN week ^ OK
depending VBG depending ^ OK
on IN on ^ OK
if IN if ^ OK
you PRP you ^ OK
go VBP go ^ OK
to IN to ^ OK
the DT the ^ OK
doctor NN doctor ^ OK
or CC or ^ OK
not RB not ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

and CC ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
one CD one ^ OK
of IN of ^ OK
those DT those ^ OK
people NNS people ^ OK
stu- NN ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ false_start
like UH ^ ^ filler
and CC that ^ filler
've VBP ^ ^ repeat
've VBP has ^ false_start
never RB ^ ^ repeat
never RB never ^ OK
gotten VBN ^ ^ repeat
got VBN gotten ^ false_start
a DT a ^ OK
flu NN flu ^ OK
flu NN ^ ^ repeat
shot NN shot ^ OK
shots NNS ^ ^ repeat
in IN in ^ OK
my PRP their ^ false_start
life NN life ^ OK

same JJ same ^ OK
here RB here ^ OK

same JJ same ^ OK
here RB here ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
b- VBP ^ ^ repeat
believe VBP believe ^ OK
very RB very ^ OK
strongly RB strongly ^ OK
in IN ^ ^ repeat
um UH ^ ^ filler
in IN in ^ OK
mind NN mind ^ OK
over IN over ^ OK
matter NN matter ^ OK
when WRB when ^ OK
it PRP it ^ OK
comes VBZ comes ^ OK
to IN to ^ OK
illness NN illness ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

in IN ^ ^ false_start
that DT ^ ^ repeat
that IN ^ ^ false_start
people NNS people ^ OK
i PRP i ^ OK
think VBP think ^ OK
can MD can ^ OK
talk VB talk ^ OK
themselves PRP themselves ^ OK
into IN into ^ OK
being VBG being ^ OK
sick JJ sick ^ OK
sometimes RB sometimes ^ OK

that DT ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
some DT some ^ OK
people NNS people ^ OK
look VBP look ^ OK
for IN for ^ OK
an DT an ^ OK
excuse NN excuse ^ OK
to TO to ^ OK
be VB be ^ OK
sick JJ sick ^ OK
because ADVP-1 because ^ OK
they IN they ^ OK
're PRP 're ^ OK
sick VBP sick ^ OK
of JJ of ^ OK
work IN work ^ OK
or NN or ^ OK
something CC something ^ OK
like NN like ^ OK
that IN that ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
talk VBP ^ ^ false_start
them- NN ^ ^ false_start
they PRP they ^ OK
they PRP think ^ false_start
like RP ^ ^ filler
oh UH ^ ^ filler
i PRP i ^ OK
must MD must ^ OK
be VB be ^ OK
getting VBG getting ^ OK
a DT a ^ OK
cold NN cold ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
whereas RB whereas ^ OK
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
just RB just ^ OK
say VBP say ^ OK
oh UH ^ ^ filler
it PRP ^ ^ repeat
whatever UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
he- NN ^ ^ repeat
headache NN headache ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
for IN ^ ^ repeat
for IN ^ ^ repeat
me PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
just RB ^ ^ repeat
just RB just ^ OK
believe VBP believe ^ OK
in IN in ^ OK
being VBG being ^ OK
healthy JJ healthy ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
eating VBG eating ^ OK
well RB well ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
and CC ^ ^ repeat
and CC and ^ OK
just RB just ^ OK
not RB ^ ^ repeat
not RB not ^ OK
admitting VBG admitting ^ OK
that IN ^ ^ repeat
that IN that ^ OK
i PRP ^ ^ OK
i PRP i ^ OK
might MD might ^ OK
be VB be ^ OK
getting VBG getting ^ OK
sick JJ sick ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
when WRB ^ ^ repeat
when WRB when ^ OK
yo- PRP ^ ^ repeat
i PRP i ^ OK
really RB really ^ OK
get VBP get ^ OK
sick JJ sick ^ OK
it ADVP-TMP- 1 it ^ OK
's PRP 's ^ OK
obvious BES obvious ^ OK

and CC ^ ^ false_start
like IN like ^ OK
you PRP you ^ OK
said VBD said ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
really RB really ^ OK
sick JJ sick ^ OK
for IN for ^ OK
years NNS years ^ OK

but CC but ^ OK
when WRB ^ ^ repeat
when WRB when ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
really RB really ^ OK
sick JJ sick ^ OK
your ADVP-TMP your ^ OK
body PRP body ^ OK
tells NN tells ^ OK
you VBZ you ^ OK

i PRP ^ ^ repeat
eh UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
get VB get ^ OK
out IN out ^ OK
of IN of ^ OK
bed NN bed ^ OK
you PRP you ^ OK
know VBP know ^ OK
because IN ^ ^ repeat
uh UH ^ ^ filler
because IN because ^ OK
for IN for ^ OK
whatever WDT whatever ^ OK
reason NN reason ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
h- VBP ^ ^ repeat
have VBP have ^ OK
no DT no ^ OK
energy NN energy ^ OK

or CC ^ ^ false_start
the DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
's BES ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
d- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
just RB just ^ OK
have VB have ^ OK
a DT a ^ OK
headache NN headache ^ OK

i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
time NN time ^ OK
to TO to ^ OK
be VB be ^ OK
sick JJ sick ^ OK

eh UH ^ ^ filler
are VBP are ^ OK
you PRP you ^ OK
anywhere RB anywhere ^ OK
near RB near ^ OK
boulder NNP boulder ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
in IN in ^ OK
boulder NNP boulder ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
talking VBG ^ ^ repeat
talking VBG talking ^ OK
about IN ^ ^ repeat
about IN about ^ OK
w- XX w- ^ OK

but CC but ^ OK
y- PRP ^ ^ repeat
you PRP you ^ OK
talk VBP talk ^ OK
about IN about ^ OK
organic JJ organic ^ OK
food NN food ^ OK
and CC and ^ OK
stuff NN stuff ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
like RP like ^ OK
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
all DT all ^ OK
that WDT that ^ OK
we PRP we ^ OK
're VBP 're ^ OK
about IN about ^ OK
in NP-1 in ^ OK
boulder IN boulder ^ OK

you PRP you ^ OK
know VBP know ^ OK
s- XX s- ^ OK

i- PRP ^ ^ repeat
it PRP it ^ OK
is VBZ is ^ OK
expensive JJ expensive ^ OK

but CC but ^ OK
loveland NNP ^ ^ repeat
c- XX ^ ^ repeat
loveland NNP loveland ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT a ^ OK
great JJ great ^ OK
place NN place ^ OK

well UH ^ ^ false_start
that DT ^ ^ repeat
m- XX ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
very RB very ^ OK
true JJ true ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
grew VBD ^ ^ repeat
grew VBD grew ^ OK
up RB up ^ OK
in IN in ^ OK
the DT the ^ OK
midwest NN midwest ^ OK
where WRB where ^ OK
it PRP it ^ OK
was VBD was ^ OK
a DT a ^ OK
lot NN lot ^ OK
more RBR more ^ OK
humid JJ humid ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

maybe RB ^ ^ repeat
maybe RB maybe ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
totally RB totally ^ OK
off IN off ^ OK
base NN base ^ OK

but CC but ^ OK
um UH ^ ^ filler
i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i ^ OK
hated VBD hated ^ OK
the DT the ^ OK
weather NN weather ^ OK
there RB there ^ OK

it PRP it ^ OK
was VBD was ^ OK
just RB just ^ OK
oppressive JJ oppressive ^ OK
and CC and ^ OK
i- XX ^ ^ false_start
e- XX ^ ^ false_start
so RB ^ ^ repeat
so RB so ^ OK
h- JJ ^ ^ repeat
humid JJ humid ^ OK
and CC and ^ OK
wet JJ wet ^ OK
in IN in ^ OK
the DT the ^ OK
summer NN summer ^ OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
stuff NN ^ ^ false_start

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN ^ ^ repeat
if IN if ^ OK
germs NNS germs ^ OK
flourish VB flourish ^ OK
better RBR better ^ OK
in IN in ^ OK
the DT the ^ OK
humid JJ humid ^ OK
air NN air ^ OK
or CC ^ ^ false_start
what WP ^ ^ false_start

wave VB wave ^ OK
you PRP you ^ OK
through RB through ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
been VBN been ^ OK
on IN on ^ OK
a DT ^ ^ repeat
uh UH ^ ^ filler
a DT a ^ OK
plane NN plane ^ OK
in IN in ^ OK
probably RB probably ^ OK
about RB about ^ OK
a DT a ^ OK
year NN year ^ OK

but CC ^ ^ false_start
one CD one ^ OK
of IN of ^ OK
the DT the ^ OK
things NNS things ^ OK
that WDT that ^ OK
i PRP i ^ OK
we UH ^ ^ false_start
did VBD did ^ OK
want VB want ^ OK
wanted PRP ^ ^ false_start
to TO to ^ OK
do VB do ^ OK
uh VBD ^ ^ filler
uh UH ^ ^ filler
with UH with ^ false_start
my IN ^ ^ false_start
we UH my ^ false_start
girlfriend PRP ^ ^ false_start
we UH girlfriend ^ false_start
over NN over ^ false_start
the IN the ^ false_start
summer DT summer ^ false_start
was NP-1 was ^ OK
uh NN ^ ^ filler
to VBD to ^ OK
go TO go ^ OK
to VB to ^ OK
uh IN ^ ^ filler
the UH the ^ OK
airport DT airport ^ OK
just NN just ^ OK
to RB to ^ OK
sit TO sit ^ OK
there VB there ^ OK
and RB and ^ OK
watch CC watch ^ OK
people VB people ^ OK
you NNS ^ ^ filler
know PRP ^ ^ filler
because VBP because ^ OK
it IN it ^ OK
's PRP 's ^ OK
a BES a ^ OK
interesting DT interesting ^ OK
place JJ place ^ OK

they PRP they ^ OK
you PRP ^ ^ repeat
like UH ^ ^ filler
wo MD wo ^ OK
ca MD ^ ^ repeat
n't RB n't ^ OK
n't RB ^ ^ repeat
even RB even ^ OK
even RB ^ ^ repeat
let VB let ^ OK
you PRP you ^ OK
in IN in ^ OK
the DT the ^ OK
door NN door ^ OK
without IN without ^ OK
a DT a ^ OK
ticket NN ticket ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
uh UH ^ ^ filler
so UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK

um UH ^ ^ filler
at IN at ^ OK
o'hare NNP o'hare ^ OK
there EX ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
they PRP ^ ^ false_start
just RB ^ ^ false_start
have VBP ^ ^ false_start
uh UH ^ ^ filler
every DT ^ ^ false_start
the DT ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
uh UH ^ ^ filler
at IN at ^ OK
the DT the ^ OK
terminal NN terminal ^ OK
entrance NN entrance ^ OK
place NN place ^ OK
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
go VB go ^ OK
like UH ^ ^ filler
down IN down ^ OK
uh UH ^ ^ filler
a DT a ^ OK
big JJ big ^ OK
escalator NN escalator ^ OK
and CC and ^ OK
then RB then ^ OK
across IN across ^ OK
to IN to ^ OK
like UH ^ ^ filler
the DT the ^ OK
opposite JJ opposite ^ OK
end NN end ^ OK
of IN of ^ OK
the DT the ^ OK
airport NN airport ^ OK

um UH ^ ^ filler
and CC ^ ^ repeat
they PRP ^ ^ repeat
do VBP ^ ^ repeat
and CC ^ ^ false_start
they PRP ^ ^ false_start
do VBP ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
have VBP have ^ OK
the DT the ^ OK
security NN security ^ OK
checks NNS checks ^ OK
at IN ^ ^ false_start
before IN before ^ OK
you PRP you ^ OK
go VBP go ^ OK
on IN on ^ OK
the DT the ^ OK
escalator NN escalator ^ OK
thing NN thing ^ OK
and CC and ^ OK
then RB then ^ OK
after IN after ^ OK

uh UH ^ ^ filler
so UH ^ ^ filler
my PRP my ^ OK
final JJ final ^ OK
answer NN answer ^ OK
with IN with ^ OK
the DT the ^ OK
thing NN thing ^ OK
i PRP ^ ^ false_start
i- PRP ^ ^ false_start

i PRP ^ ^ false_start
w- MD ^ ^ false_start
definitely RB definitely ^ OK
i PRP i ^ OK
would MD would ^ OK
say VB say ^ OK
that IN that ^ OK
it PRP ^ ^ false_start
it PRP ^ ^ false_start
would MD ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
more JJR more ^ OK
money NN money ^ OK
you PRP you ^ OK
throw VBP throw ^ OK
at IN ^ ^ repeat
at IN at ^ OK
a DT a ^ OK
cause NN cause ^ OK
you PRP ^ ^ repeat
know VBP ^ ^ repeat
it PRP it ^ OK
does VBZ does ^ OK
have VB have ^ OK
some DT some ^ OK
effect NN effect ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
still RB ^ ^ repeat
still RB still ^ OK
s- VBP ^ ^ repeat
uh UH ^ ^ filler
send VBP send ^ OK
them PRP them ^ OK
through IN through ^ OK
uh UH ^ ^ filler
x. NN x. ^ OK
ray NN ray ^ OK
machines NNP machines ^ OK
there RB there ^ OK
though RB though ^ OK
right UH ^ ^ filler

they PRP ^ ^ false_start
want VBP ^ ^ false_start
to TO ^ ^ false_start
o- XX ^ ^ false_start
without IN ^ ^ false_start
your PRP ^ ^ false_start
uh UH ^ ^ filler
your PRP ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
uh UH ^ ^ filler
i- XX ^ ^ false_start
because UH ^ ^ filler
before RB ^ ^ false_start
yeah UH yeah ^ OK

before RB before ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
would MD ^ ^ repeat
would MD would ^ OK
a- VB ^ ^ repeat
ask VB ask ^ OK

we PRP ^ ^ false_start
oh UH oh ^ OK

we PRP ^ ^ repeat
we PRP we ^ OK
always RB ^ ^ repeat
always RB always ^ OK
had VBD ^ ^ repeat
had VBD had ^ OK
the DT the ^ OK
v- XX ^ ^ false_start
uh UH ^ ^ filler
long JJ long ^ OK
x. NN x. ^ OK
ray NN ray ^ OK
machines NNS machines ^ OK
um UH ^ ^ filler
at IN at ^ OK
o'hare NNP o'hare ^ OK

but CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

ha- XX ^ ^ false_start
how WRB how ^ OK
is VBZ is ^ OK
size NN the ^ false_start
like UH ^ ^ filler
airport NN airport ^ OK
size NN size ^ OK

is VBZ ^ ^ repeat
is VBZ is ^ OK
comparable JJ comparable ^ OK
to IN to ^ OK

uh UH ^ ^ filler
w- XX ^ ^ false_start
my PRP my ^ OK
best JJS best ^ OK
friend NN friend ^ OK
's BES 's ^ OK
uh UH ^ ^ filler
mom NN mom ^ OK
just RB just ^ OK
got VBD got ^ OK
a DT a ^ OK
job NN job ^ OK
at IN at ^ OK
o'hare NNP o'hare ^ OK
as IN as ^ OK
one CD one ^ OK
of IN of ^ OK
the DT the ^ OK
uh UH ^ ^ filler
like UH ^ ^ filler
scanners NNS scanners ^ OK

for IN ^ ^ false_start
the DT ^ ^ false_start
the DT ^ ^ false_start
they PRP they ^ OK
sit VB sit ^ OK
at IN at ^ OK
the DT the ^ OK
x. NN x. ^ OK
ray NN ray ^ OK
machine NN machine ^ OK
and CC and ^ OK
uh UH ^ ^ filler
watch VB watch ^ OK

and CC ^ ^ false_start
she PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
she PRP she ^ OK
went VBD went ^ OK
through IN through ^ OK
like UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP ^ ^ repeat
wa- VBD ^ ^ repeat
like NP-PRD ^ ^ filler
a UH a ^ OK
month DT month ^ OK
worth NN worth ^ OK
of JJ of ^ OK
it PRP ^ ^ false_start
was VBD ^ ^ false_start
training IN training ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
still RB ^ ^ false_start
knowing VBG ^ ^ repeat
knowing VBG ^ ^ false_start
her PRP ^ ^ false_start
like UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ false_start
because IN because ^ OK
she PRP ^ ^ repeat
she PRP she ^ OK
's BES 's ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB ^ ^ false_start
of RB ^ ^ false_start
older JJR older ^ OK
she PRP she ^ OK
's BES 's ^ OK
not RB not ^ OK
computer NN computer ^ OK
literate JJ literate ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ filler
uh UH ^ ^ filler
so UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

so UH ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
major JJ ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
that DT that ^ OK
should MD should ^ OK
be VB be ^ OK
taken VBN taken ^ OK
into IN into ^ OK
account NN account ^ OK
too RB too ^ OK
that IN that ^ OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
although IN although ^ OK
it PRP it ^ OK
appears VBZ appears ^ OK
that IN that ^ OK
you PRP you ^ OK
have VBP have ^ OK
the DT the ^ OK
manpower NN manpower ^ OK
that DT that ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
necessarily RB necessarily ^ OK
mean VB mean ^ OK
that DT ^ ^ repeat
that DT ^ ^ repeat
that DT that ^ OK
actually RB actually ^ OK
you PRP ^ ^ repeat
know VBP ^ ^ repeat
stops VBZ stops ^ OK
anything NN anything ^ OK

do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
row VB row predicate OK

i PRP i arg0 OK
remember VBP remember predicate OK
i PRP i arg0 OK
used VBD used arg1 OK
to TO to arg1 OK
go VB go arg1 OK
rowing VBG rowing arg1 OK
in IN in arg1 OK
prospect NNP prospect arg1 OK
park NNP park arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
lake NN lake argM_loc OK

or CC ^ ^ false_start
in IN ^ ^ repeat
in IN in ^ OK
central NNP central ^ OK
park NNP park ^ OK

the DT the ^ OK

how WRB how ^ OK
about IN about ^ OK
roller NN roller ^ OK
skating NN skating ^ OK

i PRP ^ ^ repeat
l- VBP ^ ^ false_start
and CC ^ ^ false_start
of IN of ^ OK
and CC ^ ^ false_start
uh UH ^ ^ filler
course NN course ^ OK
jogging NN jogging ^ OK

i PRP i arg0 OK
get VBP get predicate OK
up RP up arg_particl OK
get VBP ^ ^ false_start
go VBP and ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
go VBP go predicate OK
to IN to argM_loc OK
the DT the argM_loc OK
gym NN gym argM_loc OK
at IN at argM_tmp OK
five CD five argM_tmp OK
o'clock RB o'clock argM_tmp OK
every DT every argM_tmp OK
morning NN morning argM_tmp OK

th- XX ^ ^ false_start
but CC ^ ^ false_start
th- XX ^ ^ false_start
but CC ^ ^ false_start
i PRP i arg0 OK
have VBP have ^ OK
to TO to ^ OK
do VB do predicate OK
it PRP it arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
treadmill NN treadmill argM_loc OK
because IN because ^ OK
everything NN everything arg1 OK
is VBZ is predicate OK
so RB so arg2 OK
far RB far arg2 OK
from IN from arg2 OK
one CD one arg2 OK
another DT another arg2 OK
here RB here argM_loc OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
but CC ^ ^ false_start
what WP what arg1 OK
i PRP i arg0 OK
used VBD used arg1 OK
to TO to arg1 OK
do VB do arg1 OK
is NP-1 is predicate OK
ah VBZ ^ ^ filler
i UH ^ ^ repeat
used PRP ^ ^ repeat
to VBD ^ ^ repeat
jog TO jog arg2 OK
around VB around argM_loc OK
a IN a argM_loc OK
ah DT ^ ^ filler
baseball UH baseball argM_loc OK
diamond NN diamond argM_loc OK
about NN ^ ^ false_start
a IN ^ ^ filler
and DT and arg2 OK
uh CC ^ ^ filler
jog UH jog arg2 OK
and VB and arg2 OK
then CC then arg2 OK
walk RB walk arg2 OK
you VB ^ ^ false_start
know PRP ^ ^ false_start
intermittently VBP intermittentl y  arg2 OK

and CC ^ ^ false_start
then RB then ^ OK
i PRP i arg0 OK
got VBD got predicate OK
a DT a arg1 OK
heel NN heel arg1 OK
spur NN spur arg1 OK
because IN because ^ OK
i PRP i arg0 OK
went VBD went predicate OK
from IN from arg3 OK
soft JJ soft arg3 OK
pave NN pave arg3 OK
to IN to arg4 OK
hard JJ hard arg4 OK
pave NN pave arg4 OK

but CC ^ ^ false_start
then RB then ^ OK
that DT ^ ^ repeat
that DT that arg1 OK
's HVS 's predicate OK
gone VBN gone arg2 OK

so UH ^ ^ filler
w- XX ^ ^ false_start
you PRP you arg0 OK
live VBP live predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
city NN city argM_loc OK
proper JJ proper argM_loc OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
as IN as ^ OK
a DT a ^ OK
matter NN matter ^ OK
of IN of ^ OK
fact NN fact ^ OK
i PRP ^ ^ false_start
used VBD ^ ^ false_start
to TO ^ ^ false_start
y- XX ^ ^ false_start
i PRP i arg0 OK
had VBD had predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
club NN club arg1 OK
that WDT that arg0 OK
met VBD met arg1 OK
every DT every argM_tmp OK
morning NN morning argM_tmp OK
at IN at argM_tmp OK
six CD six argM_tmp OK
o'clock RB o'clock argM_tmp OK

we PRP we arg0 OK
used VBD used ^ OK
to TO to ^ OK
run VB run predicate OK
the DT the arg1 OK
promenade NN promenade arg1 OK
in IN in arg1 OK
brooklyn NNP brooklyn arg1 OK
heights NNPS heights arg1 OK
and CC and arg1 OK
then RB then arg1 OK
over IN ^ ^ repeat
over IN over arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
brooklyn NNP brooklyn arg1 OK
^ ^ bridge ^ OK

uh UH ^ ^ filler
so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
miss VB miss predicate OK
new NNP new arg1 OK
york NNP york arg1 OK

eh UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
eh UH ^ ^ false_start
do VB do ^ OK
you PRP you arg0 OK
have VB have predicate OK
family NN family arg1 OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
absolutely RB absolutely ^ OK
the DT the arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
stuff NN stuff arg2 OK
that WDT that arg1 OK
i PRP i arg0 OK
also RB also arg2 OK
love VBP love arg2 OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
what WP what arg2 OK
's BES 's arg2 OK
missing JJ missing arg1 OK
here RB here arg1 OK
in IN in argM_loc OK
california NNP california argM_loc OK

because IN ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
you PRP ^ ^ false_start
walk VBP ^ ^ false_start
uh UH ^ ^ filler
ah UH ^ ^ filler
i PRP ^ ^ filler
my PRP my arg1 OK
office NN office arg1 OK
used VBD used ^ OK
to TO to ^ OK
be VB be predicate OK
on IN on arg2 OK
uh UH ^ ^ filler
sixtieth NNP sixtieth arg2 OK
street NNP street arg2 OK
between IN between arg2 OK
lex NNP lex arg2 OK
and CC and arg2 OK
park NNP park arg2 OK

and CC ^ ^ false_start
ah UH ^ ^ filler
i PRP i arg0 OK
used VBD used ^ OK
to TO to ^ OK
walk VB walk predicate OK
all RB all argM_loc OK
over IN over argM_loc OK
the DT the argM_loc OK
place NN place argM_loc OK

my PRP my arg1 OK
office NN office arg1 OK
then RB ^ ^ false_start
was VBD was predicate OK
on IN on arg2 OK
lexington NNP lexington arg2 OK
avenue NNP avenue arg2 OK
and CC and arg2 OK
thirtieth NNP thirtieth arg2 OK
street NNP street arg2 OK

i PRP i arg0 OK
walked VBD walked predicate OK
from IN from arg1 OK
there RB there arg1 OK
to IN to arg1 OK
over IN ^ ^ repeat
over IN over arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
brooklyn NNP ^ ^ repeat
brooklyn NNP brooklyn arg1 OK
bridge NNP ^ ^ repeat
bridge NNP bridge arg1 OK
because IN because ^ OK
there EX there ^ OK
was VBD was predicate OK
nothing NN ^ ^ repeat
nothing NN nothing arg1 OK
running VBG running arg1 OK
or CC or arg1 OK
working VBG working arg1 OK

w- NN ^ ^ repeat
where WRB where arg2 OK
are VBP are predicate OK
you PRP you arg1 OK
originally RB originally arg2 OK
from IN from arg2 OK

as IN ^ ^ false_start
a DT ^ ^ false_start
matter NN ^ ^ false_start
of IN ^ ^ false_start
fact NN ^ ^ false_start
i PRP i arg0 OK
remember VBP remember predicate OK
ah UH ^ ^ filler
when WRB when arg1 OK
the DT the arg1 OK
day NN day arg1 OK
was VBD was arg1 OK
right JJ right arg2 OK
and ADVP-TMP- 1 and arg1 OK
the CC the arg1 OK
wind DT wind arg1 OK
was NN was arg1 OK
right VBD right arg2 OK
ah JJ ^ ^ filler
mccormick ADVP-TMP- 1 mccormick ^ OK
's UH 's ^ OK
whatever NNP whatever ^ OK
they POS they arg1 OK
were WP were predicate OK
doing PRP doing arg2 OK
that VBD that ^ OK
day VBG day ^ OK

eh UNK eh ^ filler

as IN ^ ^ false_start
a DT ^ ^ false_start
matter NN ^ ^ false_start
of IN ^ ^ false_start
fact NN ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
remember VBP remember predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
mechanic NN mechanic arg1 OK
's POS 's arg1 OK
theater NN theater arg1 OK

whi- WDT ^ ^ repeat
which WDT ^ ^ repeat
which WDT which argM_loc OK
area NN ^ ^ repeat
area NN area argM_loc OK
do VBP do ^ OK
you PRP you arg0 OK
live VB live predicate OK
in IN in argM_loc OK

that DT that arg0 OK
's BES 's predicate OK
not RB not arg2 OK
far RB far arg2 OK
from IN from arg2 OK
beth NNP beth arg2 OK
israel NNP israel arg2 OK
hospital NNP hospital arg2 OK
on IN on arg2 OK
second NNP second arg2 OK
ave NNP ave arg2 OK

i PRP i arg0 OK
know VBP know predicate OK
where WRB where arg2 OK
that DT that arg1 OK
that DT _VERB_ arg1 false_start

beyond UNK beyond ^ OK
a. UNK a. ^ OK
b. UNK b. ^ OK
and UNK and ^ OK
c. UNK c. ^ OK

um UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
actually RB actually arg2 OK
not RB not arg2 OK
really RB really arg2 OK
that RB that arg2 OK
conscious JJ conscious arg2 OK
because IN because ^ OK
well UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
men NNS men arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
buy VB buy predicate OK
too RB too arg1 OK
many JJ many arg1 OK
products NNS products arg1 OK
that WDT that arg1 OK
are VBP are predicate OK
tested VBN tested arg2 OK
on IN on arg2 OK
animals NNS animals arg2 OK
because IN since ^ false_start
most JJS most arg1 OK
of IN of arg1 OK
the DT the arg1 OK
products NNS products arg1 OK
are VBP are predicate OK
geared VBN geared arg2 OK
towards IN towards arg2 OK
women NNS women arg2 OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
beauty NN ^ arg2 false_start
products NNS ^ arg2 false_start
and CC ^ ^ false_start
stuff NN ^ ^ false_start

but CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
not RB not arg2 OK
something NN something arg2 OK
that WDT that arg2 OK
i PRP i arg0 OK
'd MD 'd arg2 OK
honestly RB honestly arg2 OK
consider VB consider arg2 OK
unless IN unless ^ OK
i PRP i arg0 OK
hear VBP hear predicate OK
something NN something arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
news NN news argM_loc OK
like UH ^ ^ filler
about IN about arg1 OK
a DT a arg1 OK
certain JJ certain arg1 OK
company NN company arg1 OK
that WDT that arg0 OK
's BES 's arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
using VBG using arg1 OK
animals NNS animals arg1 OK
in IN in arg1 OK
a DT a arg1 OK
way NN way arg1 OK
that WDT that arg1 OK
's BES 's arg1 OK
cruel JJ cruel arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
usually RB ^ argM_tmp false_start
but CC usually ^ filler
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
really RB ^ ^ repeat
really RB really ^ OK
consider VB consider predicate OK
it PRP it arg1 OK

i PRP i ^ OK
'm VBP 'm ^ OK
thinking VBG thinking ^ OK
more RBR more ^ OK
like UH like ^ OK

it PRP it arg0 OK
says VBZ says predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
no DT no arg1 OK
animal NN animal arg1 OK
testing NN testing arg1 OK
they PRP ^ ^ false_start
on IN ^ ^ repeat
on IN on argM_loc false_start
their PRP their argM_loc false_start
um UH ^ ^ filler
products NNS products argM_loc false_start

but CC ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
there EX there arg1 OK
was VBD was predicate OK
a DT a arg2 OK
product NN product arg2 OK
that WDT that arg2 OK
i PRP i arg1 OK
was VBD was arg2 OK
interested JJ interested arg2 OK
in IN in arg2 OK
and NP-1 and ^ OK
i CC i arg0 OK
knew PRP knew predicate OK
that VBD that arg1 OK
they IN they arg0 OK
used PRP used arg1 OK
a VBD a arg1 OK
certain DT certain arg1 OK
type JJ type arg1 OK
of NN of arg1 OK
animal IN animal arg1 OK
testing NN testing arg1 OK
i NN then ^ false_start
i NN ^ ^ repeat
i RB i arg0 OK
would PRP ^ ^ repeat
would PRP would ^ OK
n't MD ^ ^ repeat
n't MD n't ^ OK
support RB support predicate OK
it VB it arg1 OK

so UH ^ ^ filler
i PRP i ^ OK

the DT the arg1 OK
only JJ only arg1 OK
thing NN thing arg1 OK
i PRP i arg1 OK
can MD can arg1 OK
think VB think arg1 OK
of IN of arg1 OK
is NP-1 is predicate OK
like VBZ ^ ^ filler
drugs UH drugs arg2 OK
because NNS because ^ OK
they IN ^ ^ false_start
use PRP ^ ^ false_start
they VBP they arg0 OK
test PRP test predicate OK
some VBP some arg1 OK
drugs DT drugs arg1 OK
on NNS on arg1 OK
like IN ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
rats VBP rats arg1 OK

or CC or ^ OK
um UH ^ ^ filler

that DT that arg1 OK
's BES 's predicate OK
mostly RB mostly arg2 OK
what WP what arg2 OK
they PRP they arg0 OK
use VBP use arg2 OK

um UH ^ ^ filler
and CC and ^ OK

i PRP i arg1 OK
would MD would ^ OK
say VB say predicate OK
if IN that ^ false_start
if IN if arg1 OK
i PRP i arg0 OK
knew VBD knew arg1 OK
that IN that arg1 OK
a DT a arg1 OK
certain JJ certain arg1 OK
drug NN drug arg1 OK
was VBD was arg1 OK
tested VBN tested arg2 OK
on IN on arg2 OK
a DT an arg2 false_start
animal NN animal arg2 OK
i PRP then ^ false_start
i PRP i arg0 OK
probably RB probably arg1 OK
would MD would arg1 OK
n't RB n't arg1 OK
purchase VB purchase arg1 OK
that DT that arg1 OK
drug NN drug arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
because IN ^ ^ false_start
i PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i arg0 OK
should MD should ^ OK
n't RB n't ^ OK
only RB only ^ OK
think VB think predicate OK
of IN of arg1 OK
certain JJ certain arg1 OK
products NNS products arg1 OK
because IN because ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they arg0 OK
use VBP use predicate OK
animals NNS animals arg1 OK
to TO to ^ OK
test VB test predicate OK
all DT all arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
products NNS products arg1 OK

and CC ^ ^ false_start
the DT the arg1 OK
side NN side arg1 OK
effects NNS effects arg1 OK
are VBP are predicate OK
just RB just arg2 OK
not RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
not RB ^ ^ repeat
al- RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
not RB not arg2 OK
great JJ great arg2 OK
for IN for arg2 OK
the DT the arg2 OK
animals NNS animals arg2 OK
but CC but arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
great JJ great arg2 OK
for IN for arg2 OK
the DT the arg2 OK
humans NNS humans arg2 OK

but CC ^ ^ false_start
most JJS most arg0 OK
people NNS people arg0 OK
would MD would ^ OK
say VB say predicate OK
that IN that arg1 OK
because IN because ^ OK
it PRP it arg1 OK
's BES 's predicate OK
research NN research arg2 OK
that DT which ^ false_start
would MD would ^ OK
help VB help predicate OK
humans NNS humans arg2 OK
that IN and ^ false_start
that IN that ^ OK
it PRP it arg1 OK
's BES 's predicate OK
worth JJ worth arg2 OK
it PRP it arg2 OK

but CC ^ ^ false_start
considering VBG ^ ^ false_start
if IN if ^ OK
i PRP i arg1 OK
was VBD was predicate OK
that DT that arg2 OK
rat NN rat arg2 OK
i PRP then ^ false_start
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
would MD ^ ^ repeat
would MD would ^ OK
n't RB ^ ^ repeat
not RB ^ ^ repeat
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
be VB be arg1 OK
put VBN put arg2 OK
through IN through argM_loc OK
something NN something argM_loc OK
like IN like argM_loc OK
that DT that argM_loc OK

i PRP ^ ^ repeat
i PRP i arg0 OK
ha- VBP ^ ^ repeat
have VBP have ^ OK
had VBN ^ predicate false_start
in IN in argM_tmp OK
the DT the argM_tmp OK
past NN past argM_tmp OK
but CC but argM_tmp OK
not RB not argM_tmp OK
right RB right argM_tmp OK
now RB now argM_tmp OK

and CC and ^ OK
um UH ^ ^ filler

but CC ^ ^ false_start
that DT ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ filler
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
not RB ^ ^ repeat
not RB not arg2 OK
that RB that arg2 OK
prevalent JJ prevalent arg2 OK
anymore RB anymore ^ OK

well UH ^ ^ filler
what WP ^ ^ repeat
what WP ^ ^ repeat
if IN ^ ^ repeat
what WP what ^ OK
if IN ^ ^ repeat
if IN if ^ OK
they PRP they arg0 OK
were VBD were ^ OK
testing VBG testing predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
d- NN ^ ^ repeat
drug NN drug arg1 OK
to TO to ^ OK
cure VB cure predicate OK
aids NN aids arg1 OK

say VB say ^ OK
they PRP they arg0 OK
were VBD were ^ OK
using VBG using predicate OK
monkeys NNS monkeys arg1 OK
but CC but ^ OK
that IN ^ ^ repeat
that IN ^ ^ false_start
the DT the arg0 OK
drug NN drug arg0 OK
was VBD was ^ OK
causing VBG causing predicate OK
monkeys NNS monkeys arg0 OK
to TO ^ ^ repeat
g- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
to TO to arg1 OK
not RB not arg1 OK
torture VB torture arg1 OK
them PRP them arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
tha- DT ^ ^ repeat
that DT that arg1 OK
would MD would ^ OK
be VB be predicate OK
considered VBN considered arg2 OK
cruelty NN cruelty arg2 OK
to IN to arg2 OK
animals NNS animals arg2 OK
because IN ^ ^ false_start

what WP what ^ OK
if IN if ^ OK
the DT ^ ^ repeat
the DT the arg0 OK
drug NN drug arg0 OK
would MD would ^ OK
save VB save predicate OK
millions NNS millions arg1 OK
of IN of arg1 OK
lives NNS lives arg1 OK

but CC ^ ^ false_start
they PRP they arg0 OK
wo MD wo ^ OK
n't RB n't ^ OK
find VB find predicate OK
out RP out ^ OK
unless IN unless ^ OK
they PRP they arg0 OK
test VBP test predicate OK
test VBP it arg1 false_start

i PRP i ^ OK
could MD could ^ OK
tell VB tell ^ OK

wh- WRB ^ ^ repeat
where WRB where ^ OK
where WRB ^ ^ false_start
you PRP are ^ false_start
you PRP you ^ OK
at IN at ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
this DT this ^ OK
is VBZ is ^ OK
m- PRP ^ ^ false_start
like UH ^ ^ filler
my PRP my ^ OK
ninth JJ ninth ^ OK
call NN call ^ OK

you PRP you ^ OK
're VBP 're ^ OK
ne- IN ^ ^ repeat
near IN near ^ OK
turnersville NNP turnersville ^ OK

i PRP i ^ OK
know VBP know ^ OK
exactly RB exactly ^ OK
where WRB where ^ OK
you PRP you ^ OK
're VBP 're ^ OK
at IN at ^ OK

right RB right ^ OK
on IN on ^ OK
route NNP route ^ OK
thirty CD thirty ^ OK
white NNP white ^ OK
horse NNP horse ^ OK
pike NNP pike ^ OK

how WRB ^ ^ repeat
how WRB how ^ OK
lo- RB ^ ^ repeat
long RB long ^ OK
long RB ^ ^ false_start
lived VBN have ^ false_start
you PRP you ^ OK
lived VBN lived ^ OK
in IN in ^ OK
washington NNP washington ^ OK
township NNP township ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
lived VBN lived ^ OK
here RB here ^ OK
f- RB ^ ^ repeat
forever RB forever ^ OK

i PRP ^ ^ repeat
l- XX ^ ^ repeat
i PRP i ^ OK
lived VBD lived ^ OK
in IN in ^ OK
marlton NNP marlton ^ OK

was VBD _ARG_ ^ false_start
was VBD was ^ OK
quite PDT quite ^ OK
a DT a ^ OK
while NN while ^ OK
ago RB ago ^ OK

my PRP my ^ OK
mother-in-law NN mother-in-law ^ OK

she PRP ^ ^ repeat
uh UH ^ ^ filler
she PRP she ^ OK
sells VBZ sells ^ OK
medical JJ medical ^ OK
equipment NN equipment ^ OK

and CC ^ ^ false_start
she PRP she ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
oh UH ^ ^ filler
i PRP i ^ OK
got VBP got ^ OK
great JJ a ^ false_start
great JJ great ^ OK
thing NN thing ^ OK

goes VBZ ^ ^ false_start
you PRP you ^ OK
can MD can ^ OK
make VB make ^ OK
two CD two ^ OK
hundred CD hundred ^ OK
dollars NNS dollars ^ OK

i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
okay UH okay ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ false_start
and CC ^ ^ false_start
you PRP you ^ OK
get VBP get ^ OK
to TO to ^ OK
meet VB meet ^ OK
some DT some ^ OK
weird JJ weird ^ OK
people NNS people ^ OK
too RB too ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
's BES ^ ^ false_start
like RP said ^ false_start
yo UH ^ ^ filler
man UH ^ ^ filler
i PRP i ^ OK
ai VBP do ^ false_start
n't RB n't ^ OK
got VBN have ^ false_start
none NN any ^ false_start

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
like RP ^ ^ repeat
'm VBP ^ ^ false_start
like RP said ^ false_start
okay UH okay ^ OK

he PRP he ^ OK
was VBD was ^ OK
telling VBG telling ^ OK
me PRP me ^ OK
about IN about ^ OK
how WRB how ^ OK
he PRP he ^ OK
got VBD got ^ OK
robbed VBN robbed ^ OK
in IN in ^ OK
atlantic NNP atlantic ^ OK
city NNP city ^ OK
at IN at ^ OK
gun NN gun ^ OK
point NN point ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
wa- VBD ^ ^ repeat
was VBD was ^ OK
talking VBG talking ^ OK
the DT the ^ OK
other JJ other ^ OK
night NN night ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
we- PRP ^ ^ repeat
wer- VBD ^ ^ repeat
we PRP we ^ OK
're VBD 're ^ OK
like UH ^ ^ filler
sitting VBG sitting ^ OK
there RB there ^ OK

we PRP we ^ OK
're VBP 're ^ OK
going VBG saying ^ false_start
man UH ^ ^ filler
this DT this ^ OK
is VBZ is ^ OK
an DT an ^ OK
awful RB awful ^ OK
long JJ long ^ OK
six CD six ^ OK
minutes NNS minutes ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
i PRP i ^ OK
had VBD had ^ OK
her PRP her ^ OK
eh UH ^ ^ filler
uh UH ^ ^ filler
friday NNP friday ^ OK
night NN night ^ OK

i PRP i arg1 OK
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
the DT ^ ^ false_start
'm VBP 'm predicate OK
the DT ^ ^ repeat
like UH ^ ^ filler
the DT the arg2 OK
same JJ same arg2 OK
way NN way arg2 OK

uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
s- XX ^ ^ false_start
eh UH ^ ^ filler
especially RB especially ^ OK
like UH ^ ^ filler
with IN with ^ OK
family NN family ^ OK

uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
seem VBP seem predicate OK
to TO to arg2 OK
more RBR more argM_extent OK
or CC or argM_extent OK
less RBR less argM_extent OK
g- VB ^ ^ repeat
gravitate VB gravitate arg2 OK
towards IN towards arg2 OK
you PRP ^ ^ repeat
know VBP ^ ^ repeat
keeping VBG keeping arg2 OK
my PRP my arg1 OK
family NN family arg1 OK
together RB together arg1 OK

and CC ^ ^ false_start
not RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
listen VBP listen predicate OK
to IN to arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
the DT the arg1 OK
news NN news arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
try VBP try predicate OK
to TO to arg1 OK
keep VB keep arg1 OK
updated JJ updated arg1 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
about IN about arg1 OK
what WP what arg1 OK
's BES 's arg1 OK
going VBG going arg1 OK
on RP on arg_particl OK

not RB not ^ OK
anymore RB anymore ^ OK
anyways RB anyways ^ OK

i PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
m- PRP ^ ^ repeat
my PRP ^ ^ repeat
a DT a arg1 OK
daughter NN ^ ^ repeat
daughter NN daughter arg1 OK
up IN up argM_loc OK
in IN in argM_loc OK
caribou NNP caribou arg1 OK
maine NNP maine arg1 OK
uh UH ^ ^ filler
which WDT which arg1 OK
is VBZ is argM_loc OK
a DT a arg2 OK
good JJ good arg2 OK
ten CD ten arg2 OK
hours NNS hours arg2 OK
away RB away arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
she PRP ^ ^ false_start
could MD ^ ^ false_start
n't RB ^ ^ false_start
be VB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
she PRP she arg1 OK
might MD might argM_mod OK
as RB as argM_extent OK
well RB well argM_extent OK
be VB be predicate OK
in IN in arg2 OK
florida NNP florida arg2 OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
sh- XX ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
she PRP she arg1 OK
'd MD 'd argM_mod OK
be VB be arg1 OK
closer RBR closer arg2 OK

and CC ^ arg2 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
like UH ^ ^ filler
forty CD forty ^ OK
forty CD ^ arg2 false_start
sixty CD to ^ false_start
sixty CD sixty arg2 OK
below IN below arg2 OK
zero CD zero arg2 OK
up IN up arg2 OK
there RB there arg2 OK
i- IN ^ ^ repeat
in IN in arg2 OK
the DT the arg2 OK
winter NN winter arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
find VBP find predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
c- MD ^ ^ repeat
ca MD ca argM_mod OK
n't RB n't argM_neg OK
go VB go arg1 OK
up RB up argM_dir OK
and CC and arg1 OK
visit VB visit arg1 OK
her PRP her arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
putting VBG putting arg1 OK
her PRP her arg1 OK
and CC ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
on IN on arg1 OK
a DT a arg1 OK
plane NN plane arg1 OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
nowadays RB nowadays argM_tmp OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
w- MD ^ ^ repeat
wo MD wo argM_mod OK
n't RB n't argM_neg OK
do VB do predicate OK
it PRP it arg1 OK

and CC ^ ^ false_start
so RB ^ ^ filler
i PRP i arg0 OK
find VBP find predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
have VBP have arg1 OK
the DT the arg1 OK
same JJ same arg1 OK

my PRP ^ ^ repeat
my PRP my arg1 OK
relatives NNS relatives arg1 OK
are VBP are predicate OK
basically RB basically arg2 OK
all DT all arg2 OK
in IN in arg2 OK
this DT this arg2 OK
area NN area arg2 OK

um UH ^ ^ filler
but CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
basically RB basically argM_adverb OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
daughter NN daughter arg1 OK
in IN in argM_loc OK
hartford NNP hartford argM_loc OK
connecticut NNP connecticut argM_loc OK

um UH ^ ^ filler
tho- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
only RB only arg2 OK
four CD four arg2 OK
or CC or arg2 OK
five CD five arg2 OK
hours NNS hours arg2 OK
away RB away arg2 OK

but CC ^ arg0 false_start
they PRP they arg1 OK
're VBP 're predicate OK
far RB far arg2 OK
enough RB enough arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that IN that arg2 OK
you PRP it ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
keeps VBZ keeps arg2 OK
the DT the arg1 OK
family NN family arg1 OK
all RB all arg1 OK
separated JJ separated arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
wish VBP wish predicate OK
everybody NN everybody arg1 OK
was VBD was arg1 OK
closer RBR closer arg2 OK
because IN because argM_cause OK
you PRP you arg0 OK
never RB never argM_neg OK
know VBP know arg1 OK
like UH ^ ^ filler
if IN if argM_adverb OK
something NN something arg1 OK
is PP-2 is arg1 OK
going VBZ going argM_mod OK
to VBG to argM_mod OK
happen TO happen arg1 OK
you VB ^ ^ filler
know PRP ^ ^ filler
like VBP like argM_mnr OK
nine IN nine argM_mnr OK
eleven CD eleven argM_mnr OK

that CD ^ ^ filler
i WDT ^ ^ filler
mean PRP ^ ^ filler
i VBP i arg1 OK
just PRP just argM_adverb OK
sat RB sat predicate OK
there VBD there argM_loc OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
my PRP my arg0 OK
sister NN sister arg0 OK
had VBD had ^ OK
called VBN called predicate OK
me PRP me arg1 OK

and CC ^ ^ false_start
when WRB when argM_tmp OK
that DT that argM_tmp OK
happened VBD happened argM_tmp OK
she ADVP-TMP- 1 she arg0 OK
had PRP had ^ OK
called VBD called predicate OK
me VBN me arg2 OK
and PRP and ^ OK
said CC said predicate OK
donna VBD donna arg0 OK
put NNP ^ ^ repeat
put DT put arg1 OK
on VBD ^ ^ repeat
on VBN on arg1 OK
the IN ^ ^ repeat
the RP the arg1 OK
t. DT t. arg1 OK
v. NN v. arg1 OK

you PRP you arg0 OK
k- XX ^ ^ false_start
wo MD wo argM_mod OK
n't RB n't argM_neg OK
believe VB believe predicate OK
what WP what arg1 OK
's BES 's arg1 OK
happening VBG happening arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
wayne NNP wayne argM_discou OK
you PRP you arg1 OK
got VBD have argM_mod false_start
to TO to argM_mod OK
come VB come predicate OK
in IN in arg4 OK
here RB here arg4 OK

i PRP i arg1 OK
am VBP am predicate OK
on IN on arg2 OK
the DT the arg2 OK
outskirts NNS outskirts arg2 OK
of IN of arg2 OK
it PRP it arg2 OK

so RB ^ ^ filler
whenever WRB whenever argM_tmp OK
i PRP i arg0 OK
heard VBD heard predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg1 OK
they PRP ^ ^ false_start
planes NNS planes arg1 OK
they PRP ^ ^ false_start
are VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
were VBD were arg1 OK
being VBG ^ ^ false_start
taken VBN ^ ^ false_start
high-jacked VBN high-jacked arg1 OK
out IN ^ ^ repeat
out IN out argM_loc OK
of IN ^ ^ repeat
of IN of argM_loc OK
logan NNP ^ ^ repeat
logan NNP logan argM_loc OK
i ADVP-TMP- 1 i arg0 OK
'm PRP ^ ^ false_start
like VBP said predicate false_start
i RP i arg0 OK
live PRP live arg1 OK
at VBP at argM_loc OK
logan IN logan argM_loc OK

you PRP ^ ^ filler
know VBP ^ ^ filler
w- PRP ^ ^ repeat
we PRP we arg0 OK
found VBD found predicate OK
out RP out arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
eh UH ^ ^ filler
uh UH ^ ^ filler
the DT the arg0 OK
terrorists NNS terrorists arg0 OK
were VBD were arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
working VBG working arg1 OK
for IN for arg2 OK
a DT a arg1 OK
taxi NN taxi arg1 OK
company NN company arg1 OK
that WDT that arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just argM_adverb OK
happens VBZ happens arg2 OK
to TO to arg2 OK
run VB run arg2 OK
through IN through argM_loc OK
here RB here argM_loc OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

i PRP i ^ OK
cringe VBP cringe ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
not RB ^ ^ repeat
not RB not ^ OK
a DT ^ ^ repeat
a DT a ^ OK
v- RB ^ ^ repeat
very RB very ^ OK
good JJ good ^ OK
feeling NN feeling ^ OK

but UNK ^ ^ false_start
what UNK ^ ^ false_start
do UNK ^ ^ false_start
eh UNK ^ ^ filler
uh UNK ^ ^ filler
have UNK ^ ^ false_start
you UNK ^ ^ false_start
tried UNK ^ ^ false_start
to UNK ^ ^ false_start
like UNK ^ ^ filler
eh UNK ^ ^ filler
i UNK i ^ OK
know UNK know ^ OK
a UNK a ^ OK
lot UNK lot ^ OK
of UNK of ^ OK
people UNK people ^ OK
have UNK have ^ OK
been UNK been ^ OK
um UNK ^ ^ filler

so UH ^ ^ false_start
what WP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
roommate NN roommate arg1 OK

so UH ^ ^ false_start
what WP ^ ^ repeat
i PRP ^ ^ repeat
do VBP ^ ^ repeat
is NP-1 ^ ^ repeat
she VBZ she arg0 OK
smokes PRP smokes predicate OK
out VBZ out argM_loc OK
on IN on argM_loc OK
the IN the argM_loc OK
patio DT patio argM_loc OK
patio DT ^ ^ false_start
uh NN ^ ^ filler
and UH ^ ^ repeat
and CC ^ ^ repeat
cl- CC ^ ^ repeat
and VBZ and ^ OK
closes CC ^ ^ repeat
the VBZ ^ ^ repeat
closes DT closes predicate OK
the VBZ the arg1 OK
door NN door arg1 OK

which WDT which ^ OK
is VBZ is ^ OK
nice JJ nice ^ OK
of IN of ^ OK
her PRP her ^ OK

it PRP it ^ OK
's BES 's ^ OK
just RB ^ ^ false_start
weird JJ weird ^ OK
because IN because ^ OK
well UH ^ ^ filler
i PRP ^ ^ repeat
would MD ^ ^ repeat
just RB ^ ^ repeat
it PRP ^ ^ repeat
's BES ^ ^ repeat
just RB ^ ^ repeat
like UH ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
smoke VB smoke ^ OK
then RB then ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
that RB ^ ^ false_start
uh UH ^ ^ filler

it PRP ^ ^ repeat
's BES ^ ^ repeat
this DT ^ ^ repeat
last JJ ^ ^ repeat
year NN ^ ^ repeat
in IN ^ ^ repeat
new NNP ^ ^ repeat
york NNP ^ ^ repeat
because UH ^ ^ false_start
i PRP i arg1 OK
well UH ^ ^ filler
go VBP go predicate OK
back RB back argM_loc OK
to IN to arg4 OK
new NNP new arg4 OK
york NNP york arg4 OK

no DT no arg1 OK
smoking NN smoking arg1 OK
that DT ^ ^ false_start
in IN ^ ^ repeat
in IN in arg1 OK
restaurants NNS restaurants arg1 OK
because IN ^ ^ false_start
was VBD was predicate OK
always RB always argM_tmp OK
weird JJ weird argM_loc OK
back RB back ^ OK
there RB there argM_loc OK

you PRP you arg0 OK
'd MD 'd ^ OK
be VB be ^ OK
eating VBG eating predicate OK
breakfast NN breakfast arg1 OK
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
and CC and ^ OK
having VBG having predicate OK
a DT a arg1 OK
nice JJ nice arg1 OK
dinner NN dinner arg1 OK

and CC ^ ^ false_start
back RB back arg2 OK
there RB there arg2 OK
was VBD was predicate OK
like UH ^ ^ filler
a DT a arg1 OK
big JJ big arg1 OK
to TO ^ arg1 false_start
do VB to-do ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
an- CC ^ ^ repeat
an- CC ^ ^ repeat
and CC ^ ^ repeat
finally RB ^ ^ repeat
and CC ^ ^ false_start
finally RB finally argM_tmp OK
peop- NNS ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS people arg1 OK
did VBD did ^ OK
n't RB n't argM_neg OK
go VB go predicate OK
out IN out arg2 OK
of IN of arg2 OK
business NN business arg2 OK

it PRP it ^ OK
just RB just ^ OK

well UH ^ ^ filler
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
my PRP ^ ^ repeat
my PRP ^ ^ repeat
my PRP my arg1 OK
friends NNS friends arg1 OK
are VBP are predicate OK
on IN on arg2 OK
the DT the arg2 OK
program NN program arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
do VBP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
mild JJ mild arg2 OK
about IN about ^ OK
it PRP it ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do predicate OK

but CC ^ ^ repeat
at IN ^ ^ repeat
mo- XX ^ ^ repeat
but CC ^ ^ false_start
i PRP i arg0 OK
have VBP have predicate OK
friends NNS friends arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
program NN program argM_loc OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg1 OK
used VBD used ^ OK
to TO to ^ OK
be VB be predicate OK
a DT a arg2 OK
musician NN musician arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
so UH ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
quite RB quite arg2 OK
sure JJ sure arg2 OK
for VBG for arg1 false_start
um UH ^ ^ filler
as IN ^ ^ filler
i PRP ^ ^ filler
said VBD ^ ^ filler
what S ^ ^ repeat
what WP what arg1 OK
they WP they arg0 OK
're PRP 're arg2 OK
looking VBP looking arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ filler
guess VBP ^ ^ filler
i- XX ^ ^ repeat
th- XX ^ ^ repeat
be VB ^ ^ repeat
cut VB cutting predicate false_start
it PRP ^ ^ false_start
down RP down arg_particl OK
to IN to arg1 OK
the DT the arg1 OK
chase NNP chase arg1 OK
the DT the arg1 OK
biggest JJS biggest arg1 OK
pain NN pain arg1 OK
in IN in arg1 OK
the DT the arg1 OK
ass NN ass arg1 OK
is VBZ is predicate OK
somebody NN somebody arg1 OK
who WP ^ ^ repeat
who WP who arg1 OK
's BES 's arg2 OK
a DT a arg2 OK
drunk NN drunk arg2 OK
and CC and arg2 OK
who WP who arg1 OK
smokes VBZ smokes arg2 OK

and CC and ^ OK
uh UH ^ ^ filler

it PRP it ^ OK
's BES 's ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ arg0 false_start
am VBP I ^ false_start
am VBP 'm ^ false_start
watching VBG watching predicate OK
the DT the arg1 OK
baseball NN baseball arg1 OK
game NN game arg1 OK
now RB now argM_tmp OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX ^ ^ repeat
's BES ^ ^ repeat
there EX there ^ OK
's BES 's predicate OK
a UH ^ ^ false_start
jennifer NNP jennifer arg1 OK
and CC ^ ^ repeat
uh UH ^ ^ filler
and CC and arg1 OK
ben NNP ben arg1 OK

yeah UNK yeah ^ OK

i UNK i ^ OK
sometimes UNK sometimes ^ OK
so UNK ^ ^ false_start
and UNK ^ ^ false_start
uh UNK ^ ^ filler

it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ repeat
's BES ^ ^ repeat
well UH ^ ^ filler
we PRP we arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
how WRB how arg2 OK
old JJ old arg2 OK
you PRP you arg1 OK
are VBP are arg1 OK
but ADJP-PRD- 1 but ^ OK
i CC ^ ^ repeat
'm PRP ^ ^ repeat
i VBP i arg1 OK
'm PRP 'm predicate OK
sixty VBP sixty arg2 OK

but CC ^ ^ false_start
the DT ^ ^ false_start
thing NN ^ ^ false_start
is VBZ ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB ^ ^ repeat
you PRP ^ ^ repeat
hit VBP ^ ^ repeat
when WRB when argM_tmp OK
you PRP you argM_tmp OK
hit VBD hit argM_tmp OK
like UH ^ ^ filler
fifty CD fifty argM_tmp OK
the ADVP-TMP- 1 the arg0 OK
metabolism DT metabolism arg0 OK
stopped NN stopped predicate OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
and CC ^ ^ OK
i PRP i arg0 OK
walk VBP walk predicate OK
two CD two arg1 OK
two CD or arg1 OK
three CD three arg1 OK
miles NNS miles arg1 OK
a DT a arg1 OK
day NN day arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ repeat
just RB ^ ^ repeat
ca MD ^ ^ repeat
n't RB ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ repeat
you PRP you arg0 OK
just RB ^ ^ false_start
ca MD ca ^ OK
n't RB n't argM_neg OK
eat VB eat predicate OK
at RB at ^ OK
all RB all ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
at RB at ^ OK
all RB all ^ OK

and CC ^ ^ false_start
ju- RB ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
that IN ^ ^ false_start
well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
's BES ^ ^ repeat
l- XX ^ ^ repeat
i- XX ^ ^ repeat
you PRP ^ ^ repeat
mean VBP ^ ^ repeat
the DT ^ ^ repeat
metab- NN ^ ^ repeat
my PRP my arg1 OK
metabolism NN metabolism arg1 OK
is VBZ is predicate OK
zero CD zero arg2 OK

and CC ^ argM_tmp false_start
and CC ^ ^ repeat
that DT ^ ^ repeat
's BES ^ ^ repeat
one CD ^ ^ repeat
of IN ^ ^ repeat
my PRP ^ ^ repeat
i PRP i arg0 OK
walk VBP walk predicate OK
everyday RB every ^ false_start
everyday RB day argM_tmp false_start

but CC ^ ^ false_start
still RB ^ ^ false_start
i PRP i arg1 OK
do VBP ^ ^ false_start
n't RB ^ ^ false_start
lose VB lose predicate OK
hardly RB hardly arg2 OK
any DT any arg2 OK
weight NN weight arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler

and CC ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
not RB ^ ^ false_start
and CC ^ ^ repeat
as RB as ^ OK
much JJ much ^ OK
as IN as ^ OK
i PRP i arg0 OK
would MD would ^ OK
like VB like predicate OK
to TO to arg1 OK
exercise VB exercise arg1 OK
more RBR more arg1 OK
it PRP ^ ^ repeat
's BES ^ ^ repeat
just RB ^ ^ repeat
it PRP ^ ^ repeat
's BES ^ ^ repeat
very RB ^ ^ repeat
i PRP i arg0 OK
find VBP find predicate OK
it PRP it arg1 OK
very RB very arg1 OK
difficult JJ difficult arg1 OK

i PRP ^ ^ repeat
've VBP ^ ^ repeat
i PRP i arg0 OK
've VBP 've ^ OK
always RB always argM_tmp OK
have VB ^ ^ false_start
found VBN found predicate OK
it PRP it ^ OK
difficult S-2 difficult arg1 OK
to JJ to arg1 OK
get TO get arg1 OK
uh VB ^ ^ filler
what UH ^ ^ filler
's WP ^ ^ filler
the BES ^ ^ filler
word DT ^ ^ filler
am NN ^ ^ filler
looking VBP ^ ^ filler
for VBG ^ ^ filler
disciplined IN disciplined arg1 OK

that DT ^ arg1 repeat
's BES ^ ^ repeat
why WRB ^ ^ repeat
i PRP ^ ^ repeat
hitch VB ^ ^ repeat
i PRP i arg0 OK
usually RB usually ^ OK
walk VBP walk predicate OK
to IN to arg1 OK
^ ^ toluca ^ OK
lake NNP lake arg1 OK
every DT every argM_tmp OK
morning NN morning argM_tmp OK

at RB at ^ false_start
least RBS least ^ false_start
that DT that ^ OK
way NN way ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
seeing VBG seeing predicate OK
some DT some arg1 OK
some DT ^ ^ false_start
scenery NN scenery arg1 OK
and CC and arg1 OK
people NNS people arg0 OK
walking VBG walking arg1 OK
walking VBG ^ predicate false_start
by RB ^ ^ OK
or CC by ^ OK
cars NNS ^ ^ false_start
by RB ^ arg1 false_start
and CC ^ ^ false_start
something NN ^ ^ false_start

it PRP ^ ^ repeat
it PRP it ^ OK
's BES 's predicate OK
eighty CD eighty arg1 OK
degrees NNS degrees arg1 OK
today NN today argM_tmp OK

i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
there RB there ^ OK
brother UH brother ^ OK

so UH ^ ^ repeat
so UH so ^ OK
where WRB ^ ^ repeat
where WRB where ^ OK
would MD would ^ OK
you PRP you ^ OK
move VB move ^ OK
if IN if ^ OK
you PRP you ^ OK
were VBD were ^ OK
going VBG going ^ OK
to TO to ^ OK
move VB move ^ OK

you PRP ^ ^ repeat
well UH ^ ^ false_start
you- PRP you- ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
well UH ^ ^ false_start
tha- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
all RB all ^ OK
like UH like ^ OK
west NNP west ^ OK
mount NNP mount ^ OK
airy NNP airy ^ OK
up IN up ^ OK
that DT that ^ OK
way NN way ^ OK

you PRP ^ ^ false_start
'd MD ^ ^ false_start
be VB ^ ^ false_start
believe VB believe ^ OK
it PRP it ^ OK
or CC or ^ OK
not RB not ^ OK
charlie NNP charlie ^ OK
you PRP you ^ OK
could MD could ^ OK
find VB find ^ OK
some DT some ^ OK
nice JJ nice ^ OK
spots NNS spots ^ OK
up IN up ^ OK
there RB there ^ OK
for IN for ^ OK
not RB not ^ OK
not RB ^ ^ repeat
too RB too ^ OK
bad RB bad ^ OK

something NN something ^ OK
just RB ^ ^ filler
kind RB ^ ^ false_start
of RB ^ ^ false_start
in IN ^ ^ false_start
ch- XX ^ ^ false_start
kind RB ^ ^ filler
of RB ^ ^ filler
away RB away ^ OK
from IN from ^ OK
things NNS things ^ OK

i PRP i ^ OK
hear VBP hear ^ OK
you PRP you ^ OK
partner UH partner ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'd MD 'd ^ OK
tell VBP ^ ^ repeat
tell VB tell ^ OK
yo- PRP ^ ^ repeat
you PRP you ^ OK
what NN what ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
you PRP you ^ OK
've VBP 've ^ OK
ever RB ever ^ OK
looked VBN looked ^ OK
down IN down ^ OK
in IN in ^ OK
south NNP south ^ OK
philly NNP philly ^ OK

but CC but ^ OK
they PRP they ^ OK
got VBD got ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
three CD ^ ^ repeat
three CD three ^ OK
story NN story ^ OK
houses NNS houses ^ OK
in SBAR-2 in ^ OK
south IN south ^ OK
philly NNP philly ^ OK
that NNP that ^ OK
definitely RB definitely ^ OK
are WDT ^ ^ repeat
are RB are ^ OK
n't VBP ^ ^ repeat
n't VBP n't ^ OK
too RB too ^ OK
bad RB bad ^ OK

i PRP i ^ OK
know VBP know ^ OK
that IN that ^ OK
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
tried VBD ^ ^ repeat
tried VBD tried ^ OK
looking VBG looking ^ OK
at IN at ^ OK
possibly RB possibly ^ OK
uh UH ^ ^ filler
getting VBG getting ^ OK
a DT ^ ^ repeat
a DT a ^ OK
f- JJ ^ ^ repeat
first JJ first ^ OK
time NN time ^ OK
buyer NN buyer ^ OK
's POS 's ^ OK
loan NN loan ^ OK

you PRP ^ ^ repeat
you PRP you ^ OK
can MD ^ ^ repeat
can MD can ^ OK
definitely RB ^ ^ repeat
definitely RB definitely ^ OK
qualify VB qualify ^ OK
for IN for ^ OK
first JJ first ^ OK
time NN time ^ OK
buyers NNS buyers ^ OK

but CC but ^ OK
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
uh UH ^ ^ filler
my PRP my ^ OK
credit NN credit ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB kind ^ OK
of RB of ^ OK
banged JJ banged ^ OK
up RP up ^ OK

i PRP i ^ OK
got VBD got ^ OK
to TO to ^ OK
repair VB repair ^ OK
my PRP my ^ OK
stuff NN stuff ^ OK
too RB too ^ OK
man UH ^ ^ false_start

so UH so ^ OK
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like RP ^ ^ false_start
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
on IN on ^ OK
my PRP my ^ OK
way NN way ^ OK
of IN of ^ OK
working VBG working ^ OK
it PRP it ^ OK
to IN to ^ OK
the DT the ^ OK
point NN point ^ OK
where WRB where ^ OK
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
met VBD met ^ OK
with IN with ^ OK
a DT a ^ OK
guy NN guy ^ OK
and CC and ^ OK
he PRP he ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
look VB look ^ OK
adam NNP adam ^ OK

but CC but ^ OK
uh UH ^ ^ filler
you PRP you ^ OK
come VBP come ^ OK
back RB back ^ OK
i- XX i- ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
if IN ^ ^ false_start
you PRP ^ ^ false_start
^ ^ ^ ^ repeat
see UH ^ ^ false_start
as RB as ^ OK
long RB ^ ^ repeat
long RB long ^ OK
as IN ^ ^ repeat
as IN as ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
staying VBG staying ^ OK
consistent JJ consistent ^ OK
and CC ^ ^ repeat
and CC and ^ OK
up RB ^ ^ repeat
up IN up ^ OK
on IN on ^ OK
your PRP your ^ OK
bills NNS bills ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
will MD ^ ^ repeat
will MD will ^ OK
take VB take ^ OK
that DT that ^ OK
as IN as ^ OK
like UH ^ ^ filler
okay RB okay ^ OK

well UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
what NN ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
mister NNP ^ ^ false_start
mist- NNP ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
mister NNP ^ ^ false_start
f- NNP ^ ^ false_start
ed NNP ed ^ OK
you PRP you ^ OK
can MD can ^ OK
handle VB handle ^ OK
those DT those ^ OK
bills NNS bills ^ OK
man UH ^ ^ false_start

so RB so ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we ^ OK
should MD should ^ OK
be VB be ^ OK
able JJ able ^ OK
to TO to ^ OK
hook VB hook ^ OK
you PRP you ^ OK
up RP up ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
fell VBD ^ ^ repeat
fell VBD fell ^ OK
behind RB behind ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
be VB ^ ^ repeat
be VB be ^ OK
a DT ^ ^ repeat
to IN to ^ OK
your PRP your ^ OK
advantage NN advantage ^ OK

but CC ^ ^ false_start
yet RB ^ ^ false_start
we PRP we arg1 OK
're VBP 're ^ OK
getting VBG getting predicate OK
off IN off arg2 OK
topic NN topic arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
we PRP we arg1 OK
're VBP 're arg1 OK
supposed VBN supposed arg1 OK
to TO to arg1 OK
stay VB stay arg1 OK
on IN on arg3 OK
topic NN topic arg3 OK
here RB ^ ^ false_start

like IN ^ ^ filler
gossiping NN gossiping ^ OK

i PRP i ^ OK
don- VBP don- ^ OK

and CC ^ ^ false_start
like UH ^ ^ filler
everybody NN everybody arg0 OK
just RB ^ ^ false_start
made VBN ^ ^ false_start
stereotypes NNS stereotyped predicate false_start
of IN ^ ^ false_start
me PRP me arg1 OK
made VBN as ^ false_start
of IN ^ ^ false_start
being VBG ^ ^ false_start
like UH ^ ^ filler
a DT a ^ OK
thief NN thief ^ OK
whenever WRB ^ ^ repeat
and CC and ^ OK
like UH ^ ^ filler
a DT a ^ OK
pervert NN pervert ^ OK
because IN because ^ OK
i PRP ^ ^ repeat
st- VBD ^ ^ repeat
they PRP ^ ^ repeat
s- VBD ^ ^ repeat
they PRP they arg0 OK
thought VBD thought predicate OK
i PRP i arg0 OK
stole VBD stole arg1 OK
these DT these arg2 OK
pictures NNS pictures arg2 OK

and CC ^ ^ false_start
it PRP it arg1 OK
was VBD was ^ OK
like UH ^ predicate filler

it PRP it arg1 OK
's BES ^ ^ false_start
like UH is predicate filler

it PRP ^ ^ repeat
's BES ^ ^ repeat
mentally RB ^ ^ repeat
well UH ^ ^ filler
if IN if ^ OK
you PRP you arg1 OK
're VBP 're predicate OK
like UH ^ ^ filler
damaged JJ damaged arg2 OK
mentally RB mentally arg2 OK
then RB then ^ OK
it PRP it arg0 OK
probably RB probably ^ false_start
affects VBZ affects predicate OK
you PRP you arg1 OK
physically RB physically argM_other OK
too RB too ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
exercise VBP ^ ^ repeat
all PDT ^ ^ repeat
th- DT ^ ^ repeat
i PRP i arg0 OK
exercise VBP exercise predicate OK
fairly RB fairly argM_tmp OK
often RB often argM_tmp OK

i PRP ^ ^ repeat
th- XX ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
smoke VB smoke predicate OK
cigarettes NNS cigarettes arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
know VBP ^ ^ repeat
a DT ^ ^ repeat
lot NN ^ ^ repeat
most JJS most arg0 OK
of IN ^ ^ repeat
of IN of arg0 OK
all PDT ^ ^ false_start
my PRP my arg0 OK
friends NNS ^ ^ repeat
friends NNS friends arg0 OK
smoke VBP smoke predicate OK
cigarettes NNS cigarettes arg1 OK

it PRP ^ ^ repeat
's BES ^ ^ repeat
way RB ^ ^ repeat
too RB ^ ^ repeat
ex- JJ ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
very RB very arg2 OK
expensive JJ expensive arg2 OK

and CC ^ ^ false_start
i- XX ^ ^ repeat
what WP what arg1 OK
are VBP are ^ OK
they PRP they arg0 OK
really RB really ^ OK
doing VBG doing predicate OK

it- PRP ^ ^ repeat
to IN to ^ OK
an DT an ^ OK
extent NN extent ^ OK

i PRP i arg0 OK
think VBP think predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
i PRP ^ ^ false_start
get VBP ^ ^ repeat
get VBP get arg1 OK
do VBP ^ predicate false_start
more JJR more arg1 OK
out IN out arg1 OK
of IN of arg1 OK
drinking NN drinking arg1 OK
than IN than arg1 OK
out IN out arg1 OK
of IN of arg1 OK
smoking NN smoking arg1 OK

in IN in argM_other OK
terms NNS terms argM_other OK
of IN of argM_other OK
cost NN cost argM_other OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
drink VB drink predicate OK
like UH ^ ^ filler
every DT every argM_tmp OK
day NN day argM_tmp OK

i PRP i arg0 OK
only RB only ^ OK
drink VBP drink predicate OK
like UH ^ ^ filler
once RB once argM_tmp OK
a DT a argM_tmp OK
week NN week argM_tmp OK
i PRP ^ ^ false_start
m- XX ^ ^ false_start
if IN if ^ OK
that DT that ^ OK

maybe RB maybe ^ OK
even RB even ^ OK
once RB once ^ OK
every DT every ^ OK
two CD two ^ OK
weeks NNS weeks ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP ^ ^ repeat
've VBP ^ ^ repeat
i PRP i arg0 OK
've VBP 've ^ OK
heard VBN heard predicate OK
about IN about arg1 OK
that DT that arg1 OK
too RB too ^ OK

it PRP ^ ^ repeat
was VBD ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

it PRP ^ ^ false_start
was VBD ^ ^ false_start
some DT ^ ^ false_start
yo- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
from IN from argM_loc false_start
where WRB where argM_loc OK
they PRP they arg0 OK
get VBP get arg1 OK
that DT that arg1 OK

uh UNK ^ ^ filler
d- UNK ^ ^ false_start
i- PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
do- VBZ ^ ^ repeat
does VBZ do ^ false_start
any DT any ^ OK
of IN of ^ OK
your PRP your ^ OK
fa- NN ^ ^ repeat
family NN family ^ OK
members NNS members ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
do VBP ^ ^ false_start
you PRP ^ ^ false_start
i- VBZ ^ ^ false_start
is VBZ is ^ OK
there EX there ^ OK
that DT that ^ OK
aspect NN aspect ^ OK
of IN of ^ OK
christmas NNP christmas ^ OK

does VBZ does ^ OK
that DT that ^ OK
appeal VB appeal ^ OK
to IN to ^ OK
you PRP you ^ OK
j- XX ^ ^ false_start
as RB as ^ OK
well RB well ^ OK

see UH ^ ^ filler
i PRP ^ ^ false_start
um UH ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP i ^ OK
e- XX ^ ^ false_start
really RB really ^ OK
have VBP have ^ OK
come VBN come ^ OK
to TO to ^ OK
hate VB hate ^ OK
christmas NNP christmas ^ OK

it PRP it ^ OK
's BES 's ^ OK
like UH ^ ^ filler
my PRP my ^ OK
least RBS least ^ OK
favorite JJ favorite ^ OK
holiday NN holiday ^ OK
um UH ^ ^ filler
j- XX ^ ^ false_start
largely RB largely ^ OK
because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
religious JJ religious ^ OK

and CC ^ ^ false_start
for IN for ^ OK
the DT the ^ OK
most JJS most ^ OK
part NN part ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
cynical JJ cynical ^ OK
because IN because ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
think VB think ^ OK
very RB very ^ OK
many JJ many ^ OK
other JJ other ^ OK
people NNS people ^ OK
are VBP are ^ OK

like UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
celebrating VBG celebrating ^ OK
like UH ^ ^ filler
christmas NNP christmas ^ OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
theoretically RB theoretically ^ OK
as IN ^ ^ repeat
as IN as ^ OK
being VBG ^ ^ repeat
being VBG being ^ OK
the DT the ^ OK
birth NN birth ^ OK
of IN of ^ OK
christ NNP christ ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
because IN because ^ OK
and CC _ARG_ ^ false_start

and CC ^ ^ false_start
that DT ^ ^ repeat
that DT that ^ OK
sounds VBZ sounds ^ OK
a- DT ^ ^ repeat
a DT a ^ OK
lot NN lot ^ OK
cooler JJR cooler ^ OK
to PP-1 to ^ OK
me IN me ^ OK
than PRP ^ ^ repeat
than IN than ^ OK
the IN the ^ OK
other DT other ^ OK
stuff JJ stuff ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
that XX ^ ^ false_start
y- XX ^ ^ repeat
you PRP you ^ OK
like UH ^ ^ filler
see VBP see ^ OK
y- XX ^ ^ false_start
these DT these ^ OK
parents NNS parents ^ OK
that WDT that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
go VB go ^ OK
into IN into ^ OK
like UH ^ ^ filler
this DT these ^ false_start
almost RB almost ^ OK
crazed JJ crazed ^ OK
mobs NNS mobs ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
at IN at ^ OK
the DT the ^ OK
m- NNS ^ ^ false_start
shopping NN shopping ^ OK
malls NNS malls ^ OK
trying VBG trying ^ OK
to TO to ^ OK
pick VB pick ^ OK
out RP out ^ OK
or UH or ^ OK
pick VB pick ^ OK
up RP up ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
latest JJS latest ^ OK
fashionable JJ fashionable ^ OK
toys NNS toys ^ OK
or CC ^ ^ false_start
whatever WP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
their PRP their ^ OK
kids NNS kids ^ OK
absolutely RB absolutely ^ OK
have VBP have ^ OK
to TO to ^ OK
have VB have ^ OK

because UNK because ^ OK
i UNK i ^ OK
'm UNK 'm ^ OK
of UNK of ^ OK
like UNK ^ ^ filler
these UNK these ^ OK
whatever WDT whatever ^ OK
th- DT th- ^ OK

remember VB _ARG_ ^ false_start
remember VB remember ^ false_start
some DT some ^ OK
lady NN lady ^ OK
her PRP ^ ^ false_start
got VBD got ^ OK
trampled VBN trampled ^ OK
a DT a ^ OK
couple NN couple ^ OK
years NNS years ^ OK
ago RB ago ^ OK
because IN because ^ OK
they PRP they ^ OK
had VBD had ^ OK
that DT that ^ OK
tickle VB tickle ^ OK
me PRP me ^ OK
elmo NNP elmo ^ OK
doll NN doll ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
hang VB hang ^ OK
on RP on ^ OK
people NNS people ^ OK

that DT that ^ OK
's BES 's ^ OK
interesting JJ interesting ^ OK
because IN because ^ OK
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
like UH ^ ^ filler
i PRP i ^ OK
remember VBP ^ ^ repeat
remember VBP remember ^ OK
saying VBG saying ^ OK
something NN something ^ OK
similar JJ similar ^ OK
to IN to ^ OK
that DT that ^ OK
like UH ^ ^ filler
probably RB probably ^ OK
like UH ^ ^ filler
almost RB almost ^ OK
twenty CD twenty ^ OK
years NNS ^ ^ repeat
years NNS years ^ OK
ago RB ^ ^ repeat
ago RB ago ^ OK

and CC ^ ^ false_start
my PRP ^ ^ repeat
my PRP my ^ OK
stepmother NN stepmother ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
every DT every ^ OK
holiday NN holiday ^ OK
is VBZ is ^ OK
about IN about ^ OK
children NNS children ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
except IN except ^ OK
for IN for ^ OK
mother NN ^ ^ repeat
mother NN mother ^ OK
's POS ^ ^ repeat
's POS 's ^ OK
day NN day ^ OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and ^ OK
father NN father ^ OK
's POS 's ^ OK
day NN day ^ OK

but CC ^ ^ false_start
she PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
she PRP ^ ^ false_start
was VBD ^ ^ false_start
like RP ^ ^ false_start
sh- PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
she PRP she ^ OK
insisted VBD insisted ^ OK
that IN that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
every DT every ^ OK
holiday NN holiday ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kids NNS kids ^ OK
got VBD got ^ OK
a DT a ^ OK
whole JJ whole ^ OK
bunch NN bunch ^ OK
of IN of ^ OK
candy NN candy ^ OK
and CC ^ ^ false_start
or CC or ^ OK
fireworks NNS fireworks ^ OK
or CC ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
or CC or ^ OK
presents NNS presents ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start
and CC ^ ^ false_start
stuff NN ^ ^ false_start

i PRP ^ ^ false_start
think VBP ^ ^ false_start
ev- XX ^ ^ false_start
or CC ^ ^ false_start
sh- PRP ^ ^ false_start
i PRP i ^ OK
wish VBP wish ^ OK
they PRP ^ ^ false_start
co- MD ^ ^ false_start
that IN that ^ OK
we PRP we ^ OK
could MD could ^ OK
have VB have ^ OK
more JJR ^ ^ false_start
of IN ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
more RBR ^ ^ false_start
e- XX ^ ^ false_start
like UH ^ ^ filler
an DT an ^ OK
international JJ international ^ OK
peace NN peace ^ OK
day NN day ^ OK
and CC or ^ false_start
and CC ^ ^ false_start
stuff NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN ^ ^ false_start
an DT ^ ^ false_start
i- JJ ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
an DT an ^ OK
international JJ international ^ OK
cease VB cease ^ OK
fire NN fire ^ OK
week NN week ^ OK
or CC or ^ OK
month NN month ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

that DT that ^ OK
would MD would ^ OK
be VB be ^ OK
hm UH ^ ^ filler

s- XX ^ ^ false_start
i PRP i ^ OK
would MD would ^ OK
vote VB vote ^ OK
for IN for ^ OK
the DT the ^ OK
president NN president ^ OK
that WDT that ^ OK
enacted VBN enacted ^ OK
that DT that ^ OK

o- XX ^ ^ false_start
no UH no ^ OK

or CC ^ ^ false_start
well UH ^ ^ filler
not RB not ^ OK
exactly RB exactly ^ OK

that DT that arg1 OK
did VBD did ^ OK
n't RB n't argM_neg OK
exactly RB exactly ^ OK
h- VB ^ ^ repeat
happen VB happen predicate OK
to IN to arg2 OK
me PRP me arg2 OK

i PRP i arg0 false_start
'm VBP 'm ^ false_start
thinking VBG thinking predicate false_start
okay UH okay arg1 false_start
and CC ^ ^ false_start
i PRP ^ ^ false_start
w- XX ^ ^ false_start
o- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the argM_tmp OK
entire JJ entire argM_tmp OK
time NN time argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
r- RB ^ ^ repeat
really RB really ^ OK
how WRB how arg2 OK
effective JJ effective arg2 OK
is VBZ is predicate OK
that DT that arg1 OK

after IN after ^ OK
a DT a ^ OK
while NN while ^ OK
e- XX ^ ^ filler

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
kind RB ^ ^ repeat
kind RB kind ^ OK
of RB ^ ^ repeat
of RB of ^ OK

i PRP ^ arg1 false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i- PRP ^ ^ repeat
it PRP ^ ^ false_start
was VBD ^ ^ false_start
just RB ^ ^ false_start
eh UH ^ ^ filler
it PRP it ^ OK
seems VBZ seems predicate OK
like IN like ^ OK
we PRP we arg0 OK
're VBP 're arg1 OK
wasting VBG wasting arg1 OK
so RB so arg1 OK
much JJ much arg1 OK
money NN money ^ OK
money NN ^ arg1 false_start
effort NN and ^ false_start
so RB so arg1 OK
much JJ much arg1 OK
effort NN effort arg1 OK
on IN on arg1 OK
the DT the arg1 OK
airports NNS airports arg1 OK

but CC ^ ^ false_start
personally RB personally ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i- PRP ^ ^ repeat
like UH ^ ^ filler
i PRP i arg0 OK
j- RB ^ ^ repeat
just RB just ^ OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
the DT the arg2 OK
next JJ next arg2 OK
attack NN attack arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
they PRP they arg0 OK
have VBP have predicate OK
no DT no arg1 OK
fear NN fear arg1 OK
of IN of arg1 OK
that DT that arg1 OK
at RB at ^ OK
all RB all ^ OK

i- XX ^ ^ filler
yeah UH yeah ^ OK

like IN like ^ OK
i. NNP i. ^ OK
n. NNP n. ^ OK
s. NNP s. ^ OK

but CC ^ ^ false_start
then RB ^ ^ false_start
we PRP ^ ^ repeat
we PRP ^ ^ false_start
then RB then ^ OK
like IN like ^ OK
you PRP you arg0 OK
said VBD said predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ false_start
there EX there arg1 OK
's BES are arg1 false_start
certain JJ certain arg1 OK
people NNS people arg1 OK
they PRP they arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
allow VB allow arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
an- XX ^ ^ false_start
like UH ^ ^ filler
we PRP ^ ^ repeat
or CC ^ ^ false_start
we PRP we arg0 OK
try VB try predicate OK
to TO to arg1 OK
keep VBP ^ ^ repeat
keep VB keep arg1 OK
out RP ^ ^ repeat
out RP out arg1 OK
all PDT ^ ^ repeat
the DT ^ ^ repeat
people NNS ^ ^ repeat
people NNS people arg1 OK
from IN ^ ^ repeat
from IN from arg1 OK
cuba NNP cuba arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have ^ OK
to TO ^ ^ repeat
to TO to ^ OK
get VB ^ ^ repeat
guarantee VB guarantee predicate OK
the DT the arg2 OK
clubs NNS clubs arg2 OK
a DT a arg1 OK
certain JJ certain arg1 OK
amount NN amount arg1 OK
of IN of arg1 OK
people NNS people arg1 OK
to TO to arg1 OK
come VB come arg1 OK
to IN to arg4 OK
the DT the arg4 OK
shows NNS shows arg4 OK
or CC or ^ OK
else RB else ^ OK
i PRP i arg1 OK
do VBP do ^ OK
n't RB n't argM_neg OK
get VB get predicate OK
paid VBN paid arg2 OK

there EX there ^ OK
's BES 's predicate OK
s- NN ^ ^ repeat
something NN something arg1 OK
ca- VBN ^ ^ false_start
in IN in argM_loc OK
l. NNP l. argM_loc OK
a. NNP a. argM_loc OK
called VBN called arg1 OK
pay VB pay arg2 OK
to TO to arg2 OK
play VB play arg2 OK

and CC ^ ^ false_start
you PRP you arg0 OK
actually RB actually ^ OK
have VBP have ^ OK
to TO to ^ OK
pre-sell VB pre-sell predicate OK
a DT a arg1 OK
certain JJ certain arg1 OK
amount NN amount arg1 OK
of IN of arg1 OK
tickets NNS tickets arg1 OK
to TO to ^ OK
play VB play predicate OK
at IN at argM_loc OK
these DT these argM_loc OK
shows NNS shows argM_loc OK

not RB not ^ OK
as RB as ^ OK
much RB much ^ OK
as IN as ^ OK
the DT the ^ OK
club NN club ^ OK
gets VBZ gets ^ OK

and CC ^ ^ false_start
then RB then ^ OK
of IN of ^ OK
course NN course ^ OK
y- XX ^ ^ filler
y- XX ^ ^ filler
as IN ^ ^ repeat
as IN as ^ OK
a DT ^ ^ repeat
an DT an ^ OK
independent JJ independent ^ OK
artist NN artist ^ OK
i PRP i arg0 OK
'm VBP 'm ^ OK
making VBG making predicate OK
my PRP my arg1 OK
profit NN profit arg1 OK
off IN off arg2 OK
of IN of arg2 OK
the DT the arg2 OK
c. NN c. arg2 OK
d. NN d. arg2 OK
sales NNS sales arg2 OK
or NP-1 or arg2 OK
the CC the arg2 OK
t. DT t. arg2 OK
shirts NN shirts arg2 OK
or NNS or arg2 OK
the CC the arg2 OK
stickers DT stickers arg2 OK
or NNS or arg2 OK
the CC the arg2 OK
buttons DT buttons arg2 OK
or NNS ^ ^ false_start
whatever CC ^ ^ false_start
that WDT that arg1 false_start
i PRP i arg0 false_start
sell VB sell arg2 false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
so UH so ^ OK
it PRP it ^ OK
is S-1 is predicate OK
i- VBZ ^ ^ repeat
in IN in arg1 OK
my IN my arg1 OK
best PRP best arg1 OK
interest JJS interest arg1 OK
to NN to arg1 OK
get TO get arg1 OK
as VB as arg1 OK
many RB many arg1 OK
people JJ people arg1 OK
to NNS to arg1 OK
the PP-2 the arg1 OK
shows IN shows arg1 OK
as DT as arg1 OK
possible NNS possible arg1 OK

but CC ^ ^ repeat
but CC but ^ OK

you PRP ^ arg2 filler
know VBP ^ ^ filler
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
on IN on arg2 OK
the DT the arg2 OK
skin NN skin arg2 OK
of IN of arg2 OK
my PRP my arg2 OK
teeth NNS teeth arg2 OK
every DT at ^ false_start
every DT ^ ^ repeat
every DT every arg2 OK
show NN show arg2 OK

and CC ^ arg2 false_start
uh UH ^ ^ filler
that DT ^ ^ false_start
's BES ^ ^ false_start
something NN ^ ^ false_start
that WDT ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
would MD ^ ^ false_start
well UH ^ ^ filler
ah UH ^ ^ filler
eh UH ^ ^ filler
the DT the arg1 OK
first JJ first arg1 OK
thing NN thing arg1 OK
i PRP i arg0 OK
i NN ^ ^ false_start
would MD would arg1 OK
do VB do arg1 OK
money NP-1 if ^ false_start
money NP-1 money arg1 OK
was NN was arg1 OK
no VBD no arg1 OK
object DT object arg1 OK
would PRP would ^ OK
hire MD be predicate false_start
hire MD to ^ false_start
hire MD hire arg2 OK
people VB people arg0 OK
to NNS to arg2 OK
do TO do arg2 OK
a VB a arg2 OK
lot DT lot arg2 OK
of NN of arg2 OK
this IN this arg2 OK
busy DT busy arg2 OK
work JJ work arg2 OK
that NN that arg1 OK
i WDT i arg0 OK
'm PRP 'm arg2 OK
doing VBP doing arg2 OK

and CC ^ ^ false_start
just RB ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
then RB ^ ^ repeat
then RB then argM_tmp OK
you PRP you arg0 OK
have VBP have predicate OK
your PRP your arg1 OK
place NN place arg1 OK
of IN of arg1 OK
business NN business arg1 OK

i PRP ^ ^ false_start
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK

the DT ^ ^ repeat
the DT the ^ OK
people NNS people ^ OK
who WP ^ ^ repeat
who WP who ^ OK
have VBP have ^ OK
gone VBN gone ^ OK
into IN into ^ OK
business NN business ^ OK
who WP who ^ OK
have VBP have ^ OK
uh UH ^ ^ filler
tons NNS tons ^ OK
of IN of ^ OK
money NN money ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
just RB ^ ^ false_start
um UH ^ ^ filler
they PRP they arg0 OK
're VBP 're ^ OK
just RB just ^ OK
like UH saying predicate false_start
it PRP it arg1 OK
's BES 's arg1 OK
their PRP their arg2 OK
hobby NN hobby arg2 OK

and CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
there EX there arg1 OK
's BES 's predicate OK
no DT no arg2 OK
structure NN structure arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ false_start
and CC ^ ^ false_start
uh UH uh ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
i- IN ^ ^ repeat
if IN if ^ OK
you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
mind VB mind ^ OK
an DT an ^ OK
erratic JJ erratic ^ OK
schedule NN schedule ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
an DT an ^ OK
employee NN employee ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
ah UH ^ ^ filler
then RB ^ ^ false_start
it PRP ^ ^ false_start
dema- VBZ ^ ^ false_start
it PRP it arg1 OK
would MD would ^ OK
matter VB matter predicate OK
on IN on arg2 OK
like UH ^ ^ filler
the DT the arg2 OK
relationship NN relationship arg2 OK
that WDT that arg1 OK
you PRP you arg0 OK
would MD would arg2 OK
have VB have arg2 OK
with IN with arg2 OK
the DT the arg2 OK
employees NNS employees arg2 OK

they PRP they arg0 OK
'd MD 'd ^ OK
have VB have ^ OK
to TO to ^ OK
know VB know predicate OK
that IN that arg1 OK
hey UH ^ ^ filler
this DT this arg1 OK
is VBZ is arg1 OK
just RB just arg2 OK
like UH ^ ^ filler
for IN for arg2 OK
fun NN fun arg2 OK

depending VBG depending predicate OK
on IN on arg1 OK
how WRB how arg1 OK
drunk JJ drunk arg1 OK
we PRP we arg0 OK
get VBP get arg1 OK
tonight NN tonight argM_tmp OK
and CC ^ ^ false_start
we PRP ^ ^ repeat
we PRP we arg1 false_start
may MD may ^ false_start
not RB not argM_neg false_start
come VB come predicate false_start
in RB in arg4 false_start
tomorrow NN tomorrow argM_tmp false_start

but CC ^ ^ false_start
i- XX ^ ^ false_start
but CC ^ ^ false_start
then RB then ^ OK
again RB again ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg1 OK
would MD would ^ OK
n't RB n't argM_neg OK
be VB be predicate OK
necessarily RB necessarily arg2 OK
a DT a arg2 OK
success NN success arg2 OK
in IN in arg2 OK
the DT the arg2 OK
standards NNS standards arg2 OK
of IN of arg2 OK
like UH ^ ^ filler
business NN business arg2 OK

is VBZ ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ false_start
would MD ^ ^ false_start
you PRP ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
definition NN definition arg1 OK
of IN of arg1 OK
business NN ^ ^ false_start
it PRP business arg1 false_start
would MD would arg1 OK
be VB be arg1 OK
that IN that arg2 OK
you PRP you arg0 OK
'd MD 'd arg2 OK
have VB have arg2 OK
to TO to arg2 OK
probably RB probably arg2 OK
turn VB turn arg2 OK
a DT a arg1 OK
profit NN profit arg1 OK
on IN on argM_loc OK
your PRP your argM_loc OK
product NN product argM_loc OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
eh UH ^ ^ filler
i PRP i arg1 OK
myself PRP ^ ^ false_start
have VBP have ^ false_start
never RB never argM_neg OK
been VBN been predicate OK
eh UH ^ ^ filler
one NN one arg0 OK
to TO to arg2 OK
like UH ^ ^ filler
mm UH ^ ^ filler
go VB go arg2 OK
into IN into arg4 OK
this DT this arg4 OK

and CC ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
really RB really ^ OK
taught VBN taught predicate OK
myself PRP myself arg2 OK
through IN through argM_tmp OK
the DT the argM_tmp OK
ten CD ten argM_tmp OK
years NNS years argM_tmp OK
that WDT that argM_tmp OK
i PRP i arg0 OK
've VBP 've argM_tmp OK
been VBN been argM_tmp OK
doing VBG doing argM_tmp OK
it PRP it arg1 OK
how ADVP-TMP- 1 how arg1 OK
to WRB ^ ^ repeat
you TO ^ ^ filler
know PRP ^ ^ filler
just VBP ^ ^ false_start
to RB to arg1 OK
protect TO protect arg1 OK
myself VB myself arg1 OK
you PRP ^ ^ filler
know PRP ^ ^ filler
uh VBP ^ ^ filler
from UH from arg2 OK
crooked IN crooked arg2 OK
mm JJ ^ ^ filler
club UH club arg2 OK
owners NN owners arg2 OK
and NNS ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and arg2 OK
you CC ^ ^ filler
know PRP ^ ^ filler
people VBP people arg2 OK
who NNS ^ ^ repeat
who WP who arg0 OK
want WP want arg2 OK
to VBP to arg1 OK
sign TO sign arg1 OK
you VB you arg2 OK
to PRP to arg1 OK
their IN their arg1 OK
label PRP label arg1 OK
and NN and arg1 OK
take CC take arg1 OK
all VB all arg1 OK
of DT of arg1 OK
your IN your arg1 OK
publishing PRP publishing arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
y- XX ^ ^ filler
i PRP ^ ^ false_start
w- XX ^ ^ false_start
basically RB basically ^ OK
if IN if ^ OK
we PRP we ^ OK
watched VBD watched ^ OK
enough RB enough ^ OK
uh UH ^ ^ filler
behind IN behind ^ OK
the DT the ^ OK
music NN music ^ OK
specials NNS specials ^ OK
to TO to ^ OK
realize VB realize ^ OK
how WRB how ^ OK
artists NNS artists ^ OK
get VBP get ^ OK
screwed VBN screwed ^ OK
over RP over ^ OK
and ADVP-MNR- 2 ^ ^ false_start
then CC ^ ^ false_start
it RB ^ ^ false_start
's PRP ^ ^ false_start
like BES ^ ^ false_start
so RP so ^ OK
now UH now ^ OK
you RB you ^ OK
're PRP 're ^ OK
like VBP saying ^ false_start
okay UH okay ^ OK

y- PRP ^ ^ repeat
you PRP you arg1 OK
have VBP have ^ OK
to TO to ^ OK
learn VB learn predicate OK
to TO to arg1 OK
be VB be arg1 OK
s- XX ^ ^ repeat
a DT a arg2 OK
businessman NN businessman arg2 OK
in IN in argM_loc OK
some DT some argM_loc OK
respects NNS respects argM_loc OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg0 OK
's BES ^ ^ repeat
's BES 's ^ OK
taking VBG taking predicate OK
eh UH ^ ^ filler
the DT ^ ^ repeat
the DT the arg1 false_start
creative JJ creative arg1 false_start
side NN side arg1 false_start
away RB away arg2 OK
from IN from arg2 OK
me PRP me arg2 OK
for IN ^ ^ false_start
me PRP ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
the DT the arg1 OK
time NN time arg1 OK
to TO ^ ^ repeat
to TO to arg1 OK
sit VB sit arg1 OK
down RP down arg2 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and arg1 OK
write VB write arg1 OK
as RB as arg1 OK
much RB much arg1 OK
as IN as arg1 OK
i PRP i arg1 OK
used VBD used arg1 OK
to TO to arg1 OK

i- PRP ^ ^ repeat
i PRP i arg1 OK
was VBD was predicate OK
very RB very arg2 OK
idealistic JJ idealistic arg2 OK
and CC ^ ^ false_start
before RB before argM_tmp false_start

i PRP i arg0 OK
just RB just ^ OK
was VBD ^ ^ false_start
like RP said predicate false_start
yeah UH yeah arg1 OK

and CC ^ ^ false_start
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
all DT all ^ OK
be VB be predicate OK
good JJ good arg2 OK

i PRP i arg1 OK
also RB also ^ false_start
have VBP have ^ OK
to TO to ^ OK
be VB be predicate OK
the DT the arg2 OK
administrator NN administrator arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
of IN of arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
the DT the arg2 OK
stuff NN stuff arg2 OK
in IN in ^ OK
order NN order ^ OK
for IN for ^ OK
it PRP it arg1 OK
to TO to ^ OK
happen VB happen predicate OK
because IN because ^ OK
no DT no arg0 OK
one NN one arg0 OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
do VB do predicate OK
it PRP it arg1 OK
for IN for arg2 OK
you PRP you arg2 OK

so UH ^ ^ false_start
that DT ^ ^ false_start
's HVS ^ ^ false_start
taught VBN ^ ^ false_start
me PRP ^ ^ false_start
how WRB ^ ^ false_start
to TO ^ ^ false_start
be VB ^ ^ false_start
a DT ^ ^ false_start
business NN ^ ^ false_start
per- NN ^ ^ false_start
and CC ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
a DT a arg2 OK
much RB much arg2 OK
better JJR better arg2 OK
business NN business arg2 OK
person NN person arg2 OK
a- IN ^ ^ repeat
as IN as ^ OK
a DT a ^ OK
result NN result ^ OK

like IN like ^ OK
i PRP i ^ OK
said VBD said ^ OK
if IN if ^ OK
i PRP i ^ OK
ha- VB ^ ^ false_start
if IN if ^ OK

well UH ^ ^ filler
m- PRP ^ ^ repeat
mo- RBS ^ ^ repeat
my PRP ^ ^ repeat
my PRP ^ ^ false_start
most RBS ^ ^ repeat
most RBS ^ ^ false_start
m- PRP ^ ^ repeat
my PRP ^ ^ false_start
interest NN ^ ^ false_start
is VBZ ^ ^ repeat
is VBZ ^ ^ false_start
not RB ^ ^ false_start
eh UH ^ ^ filler
to TO ^ ^ false_start
see UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm ^ OK
not RB not argM_neg OK
even RB even ^ OK
really RB really ^ OK
concerned JJ concerned predicate OK
about IN about arg0 OK
making VBG making arg0 OK
tons NNS tons arg1 OK
of IN of arg1 OK
money NN money arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
want VBP want predicate OK
want VBP to arg1 false_start
ma- VB ^ ^ repeat
make VB make arg1 OK
enough JJ enough arg1 OK
money NN money arg1 OK
so IN so arg3 OK
i PRP i arg0 OK
can MD can arg3 OK
do VB do arg3 OK
it PRP it arg1 OK
again RB again arg1 OK
next JJ next argM_tmp OK
year NN year argM_tmp OK

there EX there ^ OK
's BES 's predicate OK
eh UH ^ ^ filler
advertising NN advertising arg2 OK
costs NNS costs arg2 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
hire VB hire predicate OK
a DT a arg1 OK
bunch NN bunch arg1 OK
of IN of arg1 OK
drunks NNS drunks arg1 OK
like IN like arg1 OK
myself PRP myself arg1 OK
and CC and ^ OK
just RB just ^ OK
get VB get predicate OK
hammered VBN hammered arg2 OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

huh-uh UH huh-uh ^ OK

because UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
um UH ^ ^ filler
ach UH ^ ^ filler
how WRB ^ ^ false_start
to TO ^ ^ false_start
put VB ^ ^ false_start
it PRP ^ ^ false_start
i ADVP-MNR- 1 i arg0 OK
never RB ^ ^ repeat
never RB ^ ^ repeat
never PRP never ^ OK
really RB ^ ^ repeat
really RB really ^ OK
've VBP ^ ^ repeat
've VBP ^ ^ repeat
thought RB thought predicate OK
about VBD about arg1 OK
something IN something arg1 OK
like NN like arg1 OK
this IN this arg1 OK
because DT because ^ OK
i IN i arg0 OK
've PRP 've ^ OK
never VBP never ^ OK
been RB been predicate OK
into VBN ^ ^ filler
entrepreneurial IN entrepreneuri al arg2 OK
enough JJ enough arg2 OK
to RB ^ ^ repeat
to TO to arg2 OK
like TO ^ ^ filler
think UH think arg2 OK
up VB up arg1 OK
some RP some arg1 OK
sort DT sort arg1 OK
of NN of arg1 OK
business IN business arg1 OK
plan NN plan arg1 OK
or NN ^ ^ false_start
anything CC ^ ^ false_start

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when ^ OK
money NN money arg1 OK
's BES 's predicate OK
no DT no arg2 OK
object NN object arg2 OK
i ADVP-TMP- 1 ^ ^ filler
mean PRP ^ ^ filler
i VBP i arg0 OK
guess PRP guess predicate OK
i VBP i arg1 OK
could PRP could arg1 OK
be MD be arg1 OK
a VB ^ ^ filler
just DT just arg2 OK
the RB the arg2 OK
stupid DT stupid arg2 OK
oaf JJ oaf arg2 OK
that NN that arg2 OK
i WDT i arg1 OK
am PRP am arg2 OK

and VBP and ^ OK
actually NP-PRD-2 actually ^ OK
still CC still ^ OK
succeed RB succeed ^ OK
right RB right ^ OK

but CC but arg1 OK
m- RB ^ ^ false_start
m- RB ^ ^ false_start
but CC ^ ^ false_start
m- RB ^ ^ false_start
m- RB ^ ^ false_start
mainly RB ^ ^ false_start
doesn- VBP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
is VBZ ^ ^ false_start
is VBZ ^ ^ false_start
that DT ^ ^ false_start
that DT ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
coming VBG ^ ^ false_start
from IN ^ ^ false_start
you PRP ^ ^ repeat
you PRP you arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
a DT a arg1 OK
financial JJ financial arg1 OK
interest NN interest arg1 OK
in IN in arg1 OK
this DT this arg1 OK

right UH right ^ OK

you PRP you ^ OK
th- XX th- ^ OK

o- XX ^ ^ false_start
no UH no ^ OK

or CC ^ ^ false_start
well UH ^ ^ filler
not RB not ^ OK
exactly RB exactly ^ OK

that DT that ^ OK
did VBD did ^ OK
n't RB n't ^ OK
h- VB ^ ^ false_start
exactly RB exactly ^ OK
happen VB happen ^ OK
to IN to ^ OK
me PRP me ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
w- XX ^ ^ false_start
o- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
entire JJ entire ^ OK
time NN time ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
thinking VBG thinking ^ OK
okay UH okay ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
r- RB ^ ^ repeat
really RB ^ ^ false_start
how WRB how ^ OK
effective JJ effective ^ OK
is VBZ is ^ OK
that DT that ^ OK

after IN after ^ OK
a DT a ^ OK
while NN while ^ OK
e- XX ^ ^ false_start

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
kind RB ^ ^ repeat
kind RB kind ^ OK
of RB ^ ^ repeat
of RB of ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i- PRP ^ ^ repeat
it PRP ^ ^ false_start
was VBD ^ ^ false_start
just RB ^ ^ false_start
eh UH ^ ^ filler
it PRP it ^ OK
seems VBZ seems ^ OK
like IN like ^ OK
we PRP we ^ OK
're VBP 're ^ OK
wasting VBG wasting ^ OK
so RB so ^ OK
much JJ much ^ OK
money NN money ^ OK
money NN ^ ^ false_start
effort NN and ^ false_start
so RB so ^ OK
much JJ much ^ OK
effort NN effort ^ OK
on IN on ^ OK
the DT the ^ OK
airports NNS airports ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
i PRP ^ ^ false_start
j- RB ^ ^ false_start
i- PRP ^ ^ false_start
personally RB personally ^ OK
like UH ^ ^ filler
i PRP i ^ OK
just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
that DT that ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
the DT the ^ OK
next JJ next ^ OK
attack NN attack ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
they PRP they ^ OK
have VBP have ^ OK
no DT no ^ OK
fear NN fear ^ OK
of IN of ^ OK
that DT that ^ OK
at RB at ^ OK
all RB all ^ OK

i- XX ^ ^ false_start
yeah UH yeah ^ OK

like IN like ^ OK
i. NNP i. ^ OK
n. NNP n. ^ OK
s. NNP s. ^ OK

but CC ^ ^ false_start
then RB ^ ^ false_start
we PRP ^ ^ false_start
we PRP ^ ^ false_start
then RB then ^ OK
like IN like ^ OK
you PRP you ^ OK
said VBD said ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ false_start
there EX there ^ OK
's BES are ^ false_start
certain JJ certain ^ OK
people NNS people ^ OK
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
allow VB allow ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
an- XX ^ ^ false_start
like UH ^ ^ filler
we PRP ^ ^ repeat
or CC ^ ^ false_start
we PRP we ^ OK
try VB try ^ OK
to TO to ^ OK
keep VBP ^ ^ repeat
keep VB keep ^ OK
out RP ^ ^ repeat
out RP out ^ OK
all PDT ^ ^ repeat
the DT ^ ^ repeat
people NNS ^ ^ repeat
people NNS people ^ OK
from IN ^ ^ repeat
from IN from ^ OK
cuba NNP cuba ^ OK

um UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
i PRP i arg0 OK
would MD would argM_mod OK
take VB take arg1 OK
the DT the arg1 OK
million CD million arg1 OK
dollars NNS dollars arg1 OK
just RB just argM_adverb OK
because IN because argM_cause OK
my PRP my arg1 OK
family NN family arg1 OK
is VBZ is argM_cause OK
in IN in arg2 OK
the DT the arg2 OK
states NNS states arg2 OK

that DT that ^ OK
's BES 's ^ OK

i PRP i arg0 OK
would MD would argM_mod OK
definitely RB definitely argM_adverb OK
take VB take predicate OK
it PRP it arg1 OK
if IN if argM_adverb OK
i PRP i arg1 OK
could MD could argM_mod OK
c- VB ^ ^ repeat
come VB come argM_adverb OK
back RB back arg4 OK

but CC but argM_discou OK
if IN if ^ OK
we PRP we arg1 OK
were VBD were ^ OK
n't RB n't argM_neg OK
eh UH ^ ^ filler
s- XX ^ ^ false_start
a- VBN ^ ^ repeat
allowed VBN allowed predicate OK
to TO to arg1 OK
come VB come arg1 OK
back RB back arg4 OK
then RB then argM_adverb OK
probably RB probably argM_adverb OK
not RB not argM_neg OK

eh UH ^ ^ filler
what WP what ^ OK
about IN about ^ OK
the DT the ^ OK
language NN language ^ OK
barrier NN barrier ^ OK

what WP ^ ^ repeat
um UH ^ ^ filler
w- WP ^ ^ repeat
what WP what arg1 OK
would MD ^ ^ repeat
would MD would argM_mod OK
you PRP ^ ^ repeat
you PRP you arg0 OK
miss VB miss predicate OK
if IN if argM_adverb OK
you PRP you arg0 OK
left VBD left argM_adverb OK

what WP what arg1 OK
would MD would argM_mod OK
you PRP you arg0 OK
not RB not argM_neg OK
miss VB miss predicate OK

just RB ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN like ^ OK
politics NNS politics ^ OK
and CC and ^ OK
how WRB how ^ OK
eh UH ^ ^ filler
different JJ different ^ OK
systems NNS systems ^ OK
work VBP work ^ OK
things ADVP-MNR- 1 ^ ^ false_start
like NNS ^ ^ false_start
that IN ^ ^ false_start

eh UH ^ ^ filler
w- XX ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
but CC but argM_discou OK
there EX there arg1 OK
's BES 's predicate OK
dishonesty NN dishonesty arg2 OK
everywhere RB everywhere arg2 OK

so RB ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
the DT the arg1 OK
u. NNP u. arg1 OK
s. NNP s. arg1 OK
would MD would argM_mod OK
be VB be arg1 OK
the DT the argM_loc OK
best JJS best argM_loc OK
place NN place argM_loc OK
to TO to arg2 OK
live VB live arg2 OK
anywhere RB ^ ^ false_start
than IN than argM_adverb OK
anywhere RB anywhere argM_loc OK

i PRP i arg0 OK
like VBP like predicate OK
having VBG having arg1 OK
the DT the arg1 OK
role NN role arg1 OK
left VBN left arg1 OK
up IN up arg2 OK
to IN to arg2 OK
the DT the arg2 OK
people NNS people arg2 OK
the DT the arg2 OK
citizens NNS citizens arg2 OK
rather RB rather arg2 OK
than IN than arg2 OK
the DT the arg2 OK
next JJ next arg2 OK
in IN in arg2 OK
line NN line arg2 OK

see UH ^ ^ filler
eh UH ^ ^ filler
who WP who arg0 OK
knows VBZ knows predicate OK
at IN at argM_tmp OK
that DT that argM_tmp OK
age NN age argM_tmp OK

i PRP i arg0 OK
would MD would argM_mod OK
n't RB n't argM_neg OK
like VB like predicate OK
like VB _ARG_ ^ false_start

so RB ^ ^ filler
kind RB kind ^ OK
of RB of ^ OK
mm UH ^ ^ filler
the DT the ^ OK
south NN south ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
where WRB where arg2 OK
are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 OK

are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 OK
the DT the arg2 OK
south NN south arg2 OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
too RB too ^ OK

can MD can ^ OK
you PRP you arg0 OK
do VB do predicate OK
it PRP it arg1 OK
more RBR more arg1 OK
than IN than arg1 OK
t- XX ^ ^ repeat
three CD three arg1 OK
times NNS times arg1 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been ^ OK
i- JJ ^ ^ repeat
interested JJ interested predicate OK
in IN in arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what arg2 OK
happened VBD happened arg2 OK
there RB there arg2 OK

and CC ^ ^ false_start
oh UH ^ ^ filler
what WP who arg2 false_start
was VBD was predicate OK
the DT the arg1 OK
guy NN guy arg1 OK
that DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that ^ OK
ga- NN ^ ^ false_start
's HVS 's ^ OK
just RB just ^ OK
um UH ^ ^ filler
gone VBN gone predicate false_start
to IN to arg4 OK
jail NN jail arg4 OK
for IN for ^ OK
that DT that ^ OK

the DT the ^ OK
um UH ^ ^ filler

and CC ^ ^ false_start
he PRP he arg0 OK
was VBD was ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
ah UH ^ ^ filler
how WRB how arg1 OK
sorry JJ sorry arg2 OK
he PRP he arg1 OK
was VBD was arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
said VBD said predicate OK
um UH ^ ^ filler
he PRP he arg0 OK
said VBD said arg1 OK
that IN that arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he arg1 OK
was VBD was arg1 OK
sorry JJ sorry arg2 OK
for IN for arg2 OK
what WP what arg1 OK
he PRP he arg0 OK
had VBD had arg2 OK
done VBN done arg2 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
really RB really arg2 OK
um UH ^ ^ filler
terrible JJ terrible arg2 OK
because IN because ^ OK
i PRP ^ ^ repeat
i- PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
that IN that arg1 OK
it PRP ^ ^ repeat
it PRP it arg0 OK
gives VBZ gives arg1 OK
the DT the arg1 OK
wrong JJ wrong arg1 OK
opinion NN opinion arg1 OK
to IN to arg1 OK
our PRP our arg0 OK
youth NN youth arg0 OK
and CC and arg0 OK
people NNS people arg0 OK
that WDT that arg1 OK
hear VBP hear arg1 OK
about IN about arg1 OK
these DT these arg1 OK
things NNS things arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
they PRP they arg0 OK
think VBP think arg0 OK
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
these DT these arg0 OK
white JJ white arg0 OK
collar NN collar arg0 OK
guys NNS guys arg0 OK
are VBP ^ arg1 repeat
are VBP are arg1 OK
doing VBG ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
lying VBG lying arg1 OK
and CC and arg1 OK
cheating VBG cheating arg1 OK
and CC ^ ^ repeat
and CC and arg1 OK
embezzling VBG embezzling arg1 OK
money NN money arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ filler
if IN if ^ OK
they PRP they arg0 OK
're VBP 're ^ OK
doing VBG doing predicate OK
like IN ^ ^ filler
that DT that arg1 OK
why WRB then ^ false_start
why WRB why ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
we PRP we arg0 OK
do VB do predicate OK
like IN ^ ^ filler
that DT that arg1 OK

so UH ^ ^ filler
i PRP ^ ^ repeat
ah UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
it PRP it arg0 OK
sets VBZ sets arg1 OK
a DT a arg1 OK
really RB really arg1 OK
bad JJ bad arg1 OK
example NN example arg1 OK

so UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
how WRB ^ ^ false_start
long RB ^ ^ false_start
we PRP ^ ^ false_start
do VBP do ^ OK
they PRP they arg0 OK
come VB come predicate OK
and CC and ^ OK
on RB ^ ^ false_start
tell VB tell predicate OK
you PRP you arg2 OK
h- XX ^ ^ false_start
when WRB when arg1 OK
you PRP you arg0 OK
're VBP 're arg1 OK
through IN through arg1 OK
talking VBG talking arg1 OK
or ADVP-TMP- 1 ^ ^ false_start
something CC ^ predicate false_start

martha NNP martha arg1 OK
stewart NNP stewart arg1 OK
is VBZ is predicate OK
one CD one arg2 OK
one CD _NOUN_ arg2 false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
some DT ^ ^ repeat
some DT some arg2 OK
big JJ big arg2 OK
deal NN deal arg2 OK
ah UH ^ ^ filler
that WDT that arg1 OK
's HVS 's ^ OK
been VBN been predicate OK
in IN in arg2 OK
the DT the arg2 OK
news NN news arg2 OK
lately RB lately arg2 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT some arg0 OK
people NNS people arg0 OK
say VBP say predicate OK
that IN that arg1 OK
all DT all arg0 OK
of IN of arg0 OK
this DT this arg0 OK
stems VBZ stems arg1 OK
from IN from arg3 OK
a DT a arg3 OK
lot NN lot arg3 OK
of IN of arg3 OK
this DT this arg3 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that IN ^ ^ false_start
um UH ^ ^ filler
bad JJ bad arg3 OK
behavior NN behavior arg3 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
if IN if arg1 OK
it PRP it arg0 OK
does VBZ does arg1 OK
or VP or arg1 OK
not CC not arg1 OK

it RB it ^ OK
does PRP does ^ OK
n't VBZ n't ^ OK
really RB really ^ OK
seem RB seem ^ OK
like VB like ^ OK
it IN it ^ OK
would PRP would ^ OK
but MD but ^ OK
that VP that ^ OK
um CC ^ ^ filler
president IN president ^ OK
you UH ^ ^ filler
know NN ^ ^ filler
since PRP since ^ OK
clinton VBP ^ ^ repeat
di- IN ^ ^ repeat
clinton NNP clinton ^ OK

because VBD because ^ OK
of NNP ^ ^ repeat
of IN of ^ OK
the IN the ^ OK
way IN way ^ OK
he DT he ^ OK
acted NN acted ^ OK
way IN ^ ^ false_start
things PDT and ^ false_start
uh PRP ^ ^ filler
you VBD ^ ^ filler
know ADVP-1 ^ ^ filler
a- UH ^ ^ repeat
all PRP all ^ OK
the VBP the ^ OK
unscrupulous PDT unscrupulous ^ OK
things PDT things ^ OK
that DT that ^ OK
went JJ went ^ OK
on NNS on ^ OK
while WDT while ^ OK
he VBD he ^ OK
was RP was ^ OK
in IN in ^ OK
office PRP office ^ OK
kind VBD kind ^ OK
of IN of ^ OK
um NN ^ ^ filler
you RB ^ ^ filler
know RB ^ ^ filler
causes UH causes ^ OK
some PRP some ^ OK
of VBP of ^ OK
this VBZ this ^ OK
other DT other ^ OK
stuff IN stuff ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
why WRB ^ ^ repeat
should MD ^ ^ repeat
why WRB ^ ^ false_start
should MD ^ ^ false_start
we PRP ^ ^ false_start
be VB ^ ^ false_start
any RB ^ ^ false_start
bet- JJR ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
why WRB ^ ^ repeat
why WRB why ^ OK
do VBP do ^ OK
n't RB n't ^ OK
we PRP we arg1 OK
just RB just ^ OK
do VB ^ ^ repeat
follow VB follow predicate OK
suit NN suit arg2 OK

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP 'm ^ OK
'm VBP ^ ^ repeat
ca MD ^ ^ false_start
n't RB ^ ^ false_start
trying VBG trying predicate OK
to TO to arg1 OK
think VB ^ ^ repeat
think VB think arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
some DT some arg1 OK
other JJ other arg1 OK
stuff NN stuff arg1 OK
to TO to arg1 OK
say VB say arg1 OK

remember VB do ^ false_start
who WP ^ ^ false_start
you PRP you arg0 OK
is VBZ ^ ^ false_start
remember VB remember predicate OK
ke NNP ^ ^ false_start
ken NNP ken arg1 OK
lay NNP lay arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
talk VBP talk predicate OK
about IN about arg1 OK
ken NNP ken arg1 OK
lay NNP lay arg1 OK

i PRP i ^ OK
think VBP think ^ OK
he PRP he ^ OK
was VBD was ^ OK
with IN with ^ OK

i PRP i arg0 OK
just RB just ^ OK
now RB now ^ OK
^ ^ thought predicate OK
of IN of arg1 OK
this DT ^ ^ false_start
is VBZ ^ ^ false_start
all PDT all arg1 OK
the DT the arg1 OK
trouble NN trouble arg1 OK
that WDT that arg1 OK
they PRP they arg0 OK
had VBD had arg1 OK
with IN with argM_other OK
the DT ^ ^ false_start
arthur NNP arthur argM_other OK
anderson NNP anderson argM_other OK
um UH ^ ^ filler

with IN ^ ^ repeat
with IN with ^ OK
the DT ^ ^ repeat
the DT the ^ OK
accounting NN accounting ^ OK
firms NNS firms ^ OK

me PRP me ^ OK
neither RB neither ^ OK

you PRP ^ ^ false_start
think VB ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
s- XX ^ ^ false_start
a DT a ^ OK
um UH ^ ^ filler
well UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
do VBP ^ ^ false_start
lot NN lot ^ OK
of IN of ^ OK
times NNS times ^ OK
uh UH ^ ^ filler
our PRP our ^ OK
it PRP ^ ^ repeat
legal JJ legal ^ OK
system NN system ^ OK
it PRP ^ ^ false_start
seems VBZ ^ ^ repeat
well UH ^ ^ filler
either RB ^ ^ false_start
appears VBZ appears predicate OK
to TO to arg1 OK
be VB be arg1 OK
just RB just arg1 OK
a DT a arg1 OK
big JJ big arg1 OK
circus NN circus arg1 OK
to IN to arg2 OK
us PRP us arg2 OK
or CC ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
it PRP ^ ^ repeat
is VBZ ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
of IN ^ ^ false_start
there EX there ^ OK
are VBP are predicate OK
so RB so arg2 OK
many JJ many arg2 OK
different JJ different arg2 OK
ways NNS ways arg2 OK
that WDT that arg2 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
entities NNS entities arg0 OK
can MD can arg2 OK
appeal VB appeal arg2 OK
decisions NNS decisions arg1 OK
and CC and arg2 OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
say VBP say arg2 OK
that IN that arg1 OK
some DT some arg1 OK
things NNS things arg1 OK
are VBP ^ ^ repeat
are VBP are arg1 OK
un- JJ ^ ^ repeat
unfound- JJ ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
unfounded JJ unfounded arg2 OK
evidence NN evidence arg2 OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

because IN because ^ OK
what WDT ^ ^ false_start
peop- NNS ^ ^ false_start
who WP ^ ^ false_start
someone NN someone arg0 OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
all RB ^ ^ false_start
just RB ^ ^ false_start
abou- IN ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
all DT ^ ^ false_start
just RB ^ ^ false_start
about IN ^ ^ false_start
like UH ^ ^ false_start
is VBZ is ^ false_start
obviously RB obviously ^ OK
lying VBG lying predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
in IN in ^ OK
every DT every ^ OK
court NN court ^ OK
case NN case ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
someone NN someone arg0 OK
is VBZ is ^ OK
is VBZ ^ ^ repeat
usually RB usually ^ OK
telling VBG telling predicate OK
the DT the arg1 OK
truth NN truth arg1 OK
and CC and ^ OK
someone NN someone arg0 OK
's BES 's ^ OK
lying VBG lying predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
so RB ^ ^ false_start
it PRP ^ ^ repeat
always RB ^ ^ false_start
just RB ^ ^ false_start
eh UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
um UH ^ ^ filler
dishonesty NN dishonesty arg2 OK
um UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
air NN air ^ OK

and CC ^ ^ false_start
you PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
can MD ^ ^ repeat
can MD can ^ OK
just RB ^ ^ repeat
just RB just ^ OK
feel VB feel predicate OK
the DT the arg1 OK
tension NN tension arg1 OK

that IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg2 OK
's BES 's arg2 OK
like UH ^ ^ filler
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
obviously RB obvious arg2 false_start
someone NN someone arg0 OK
's BES 's ^ OK
lying VBG lying predicate OK

and CC ^ ^ false_start
there EX there ^ OK
's BES 's predicate OK
no DT no arg2 OK
real JJ real arg2 OK
way NN way arg2 OK
that WRB that ^ OK
we PRP we arg0 OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
know VB know predicate OK
who WP whom arg2 false_start
it PRP it arg1 OK
is VBZ is arg1 OK
um NP-PRD-2 ^ ^ filler
you ADVP-MNR- 1 ^ ^ filler
know UH ^ ^ filler
because PRP because ^ OK
if VBP if ^ OK
it IN it arg1 OK
was IN was predicate OK
that PRP that arg2 OK
cut VBD cut arg2 OK
and RB and arg2 OK
dry JJ dry arg2 OK
there CC ^ ^ repeat
you JJ ^ ^ filler
know EX ^ ^ filler
there PRP there ^ OK
would VBP would ^ OK
n't EX n't ^ OK
be MD be predicate OK
you RB ^ ^ filler
know VB ^ ^ filler
a PRP a arg2 OK
case VBP case arg2 OK
really DT ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
like UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
people NNS people arg0 OK
do VBP ^ ^ repeat
do VBP do arg1 OK
these DT ^ ^ repeat
s- XX ^ ^ repeat
crimes NNS crimes arg1 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in arg1 OK
um UH ^ ^ filler
the DT the arg1 OK
heat NN heat arg1 OK
of IN of arg1 OK
the DT the arg1 OK
moment NN moment arg1 OK

but CC but ^ OK
um UH ^ ^ filler

uh UH ^ ^ filler
being VBG being ^ OK
tele- VBP ^ ^ repeat
televised VBN televised ^ OK
and CC and ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
have VB having ^ false_start
your PRP your ^ OK
whole JJ whole ^ OK
life NN life ^ OK
there RB there ^ OK
i UH ^ ^ false_start
in IN in ^ OK
front NN front ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK

but CC but ^ OK
to IN to ^ false_start
everybody NN everybody ^ OK
them PRP ^ ^ repeat
else RB else ^ OK
it PRP it arg1 OK
's BES 's predicate OK
just RB ^ ^ repeat
just RB just arg2 OK
another DT another arg2 OK
s- NN ^ ^ repeat
soap NN soap arg2 OK
opera NN opera arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler

i PRP ^ ^ filler
mean VBP ^ ^ filler
um UH ^ ^ filler
however RB however ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
uh UH ^ ^ filler
with IN with ^ OK
all PDT all ^ OK
those DT those ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
michael NNP michael ^ OK
jackson NNP jackson ^ OK
uh UH ^ ^ filler
i- XX ^ ^ false_start
um UH ^ ^ filler
cases NNS cases ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
and CC and ^ OK
settlements NNS settlements ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
he PRP ^ ^ repeat
he PRP he arg0 false_start
's HVS 's ^ false_start
recently RB recently ^ false_start
done VBN done predicate false_start
like UH ^ ^ filler
works NNS works arg1 false_start
but CC but ^ false_start
not RB not ^ false_start
just RB just ^ OK
in IN in ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
europe NNP europe ^ OK
or CC or ^ OK
the DT the ^ OK
rest NN rest ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK

wi- UNK ^ ^ false_start
he UNK ^ ^ repeat
like UNK ^ ^ filler
he UNK he arg0 OK
'll UNK ^ ^ repeat
'll UNK 'll ^ OK
have UNK have predicate OK
new UNK new arg1 OK
albums UNK albums arg1 OK
come UNK come predicate OK
out UNK out arg4 OK
and UNK and ^ OK
just UNK ^ ^ false_start
like UNK ^ ^ false_start
the UNK ^ ^ false_start
um UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
will UNK will ^ OK
top UNK top predicate OK
the UNK the arg1 OK
charts UNK charts arg1 OK
and UNK ^ ^ false_start
everything UNK ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he arg0 OK
just RB just ^ OK
settled VBN settled predicate OK
with IN with arg2 OK
anyone NN ^ ^ false_start
everybody NN everybody arg0 OK
that WDT ^ ^ repeat
um UH ^ ^ filler
that WDT that ^ false_start
filed VBD filed predicate false_start
charges NNS charges arg1 false_start
against IN against arg3 false_start
him PRP him arg3 false_start

kind RB kind ^ OK
of RB of ^ OK
but CC but ^ OK
i PRP i ^ OK
i- XX ^ ^ repeat
mean VBP mean ^ OK

but CC ^ ^ repeat
and CC ^ ^ repeat
um UH ^ ^ filler
but CC but ^ OK
then RB ^ ^ repeat
then RB ^ ^ false_start
then RB then ^ OK
again RB again ^ OK
like UH ^ ^ filler
let VB let ^ OK
's PRP 's ^ OK
say VB say ^ OK
like UH ^ ^ filler
o. NNP o. ^ OK
j. NNP j. ^ OK
simpson NNP simpson ^ OK
trials NNS trials ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
out IN ^ ^ repeat
of IN ^ ^ repeat
out IN ^ ^ false_start
of IN ^ ^ false_start
trials NNS ^ ^ false_start
being VBG ^ ^ false_start
televised VBN ^ ^ false_start
because IN ^ ^ false_start
everybody NN ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
i PRP i arg0 OK
remember VBP remember predicate OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD ^ ^ repeat
just RB ^ ^ repeat
was VBD was arg1 OK
in IN in arg2 OK
high JJ high arg2 OK
school NN school arg2 OK
when WRB ^ ^ repeat
when WRB when arg1 OK
that DT ^ ^ repeat
that DT that arg1 OK
happened VBD happened arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
then RB then ^ OK
there EX there ^ OK
was VBD were predicate false_start
a DT ^ ^ repeat
this DT ^ arg2 false_start
th- XX these ^ repeat
like UH ^ ^ filler
huge JJ huge arg2 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
issues NNS issues arg2 OK
with IN ^ ^ repeat
with IN with ^ OK
um UH ^ ^ filler
racism NN racism ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
saying VBG saying predicate OK
that IN that arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS people arg1 OK
that WDT that arg1 OK
were VBD were arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
african JJ african arg1 OK
american JJ american arg1 OK
were VBD were arg1 OK
all DT all arg2 OK
like UH ^ ^ filler
um UH ^ ^ filler
so RB so arg2 OK
uh UH ^ ^ filler
glad JJ glad arg2 OK
that IN that arg1 OK
he PRP he arg1 OK
was VBD ^ ^ false_start
got VBD got arg1 OK
off RP off arg1 OK
on IN on arg2 OK
innocent JJ innocent arg2 OK

did VBD ^ ^ repeat
did VBD did ^ OK
you PRP you arg0 OK
you PRP ^ ^ repeat
find VB find predicate OK
anything NN anything arg1 OK

all PDT all ^ OK
the DT the ^ OK
th- DT ^ ^ repeat
y- XX ^ ^ repeat
st- VBG ^ ^ repeat
studying VBG studying ^ OK
abroad RB abroad ^ OK

and CC and ^ OK
like UH like ^ OK
uh UH uh ^ OK

i PRP i arg0 OK
heard VBD heard predicate OK
all PDT all arg0 OK
the DT the arg0 OK
other JJ other arg0 OK
american JJ american arg0 OK
students NNS students arg0 OK
they PRP ^ ^ repeat
they PRP ^ ^ false_start
cooked VBD cooked arg1 OK
their PRP their arg1 OK
own JJ own arg1 OK
version NN version arg1 OK
of IN of arg1 OK
a DT a arg1 OK
turkey NN turkey arg1 OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
either RB either arg1 OK
christmas NNP christmas arg1 OK
or CC or arg1 OK
thanksgiving NNP thanksgiving arg1 OK
is VBZ is predicate OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg2 OK
one CD one arg2 OK
where WRB where arg2 OK
the DT ^ ^ repeat
my PRP my arg0 OK
family NN family arg0 OK
fa- NN ^ ^ repeat
would MD would arg2 OK
travel VB travel arg2 OK
to IN to arg1 OK
uh UH ^ ^ filler
grandparents NNS grandparents arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
good JJ ^ ^ repeat
good JJ good arg2 OK
opportunity NN opportunity arg2 OK
to TO to arg2 OK
go VB go arg2 OK
see VB see arg2 OK
them PRP them arg1 OK

um UH ^ ^ filler
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do argM_neg OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
really RB ^ ^ repeat
care VB care predicate OK
too RB too ^ OK
much RB much ^ OK
about IN about ^ OK
the DT the arg1 OK
gift NN gift arg1 OK
giving VBG giving arg1 OK
part NN part arg1 OK
of IN of ^ OK
it PRP it ^ OK
because IN because ^ OK
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
whatever UH ^ ^ repeat
do VBP do argM_neg OK
n't RB n't argM_neg OK
really RB really ^ OK
expect VB expect predicate OK
much RB much arg1 OK

th- PRP ^ ^ repeat
they PRP they arg0 OK
do VBP do predicate OK
the DT the arg1 OK
six CD six arg1 OK
months NNS months arg1 OK
of IN of arg1 OK
daylight NN daylight arg1 OK
and CC and arg1 OK
six CD six arg1 OK
months NNS months arg1 OK
of IN of arg1 OK
darkness NN darkness arg1 OK

so UH so ^ OK
the DT the ^ OK

so UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
pretty RB ^ ^ repeat
pretty RB pretty arg2 OK
psyched JJ psyched arg2 OK
for IN for arg2 OK
that DT that arg2 OK

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
live VBP ^ ^ repeat
live VBP live predicate OK
in IN ^ ^ repeat
in IN in argM_loc OK
new NNP new argM_loc OK
york NNP york argM_loc OK
city NNP city argM_loc OK

and CC ^ ^ false_start
so RB ^ ^ false_start
everyone NN everyone arg0 OK
else RB else arg0 OK
is VBZ ^ ^ repeat
all DT ^ ^ repeat
from IN ^ ^ repeat
live VBP lives predicate false_start
in IN in argM_loc OK
the DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
northern JJ northern argM_loc OK
new NNP new argM_loc OK
new NNP ^ ^ repeat
england NNP ^ ^ repeat
england NNP england argM_loc OK

and CC ^ argM_loc false_start
so CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
're VBP 're ^ OK
excited JJ excited predicate OK
to TO to arg0 OK
come VB come arg0 OK
down RB down arg0 OK
and CC and arg0 OK
spend VB spend arg0 OK
thank- NNP ^ ^ repeat
thanksgiving NNP thanksgiving arg1 false_start
the DT in ^ false_start
the DT the argM_loc OK
big NNP big argM_loc OK
apple NNP apple argM_loc OK
in IN ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
for IN ^ arg0 repeat

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
wou- MD ^ ^ repeat
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
if IN i ^ false_start
had VBD had ^ OK
a DT a ^ OK
little JJ little ^ OK

but CC ^ ^ repeat
but CC but ^ OK
no UH no ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
live VBP ^ ^ repeat
have VBP have predicate OK
in IN ^ ^ repeat
a DT a arg1 OK
whole JJ whole arg1 OK
house NN house arg1 OK

so UH ^ ^ false_start
wi- IN ^ ^ repeat
i PRP i arg0 OK
live VBP live predicate OK
with IN with arg1 OK
five CD five arg1 OK
other JJ other arg1 OK
guys NNS guys arg1 OK
in IN in argM_loc OK
a DT a argM_loc OK
big JJ big argM_loc OK
house NN house argM_loc OK

so IN so ^ OK
tons NNS tons ^ OK
of IN of ^ OK
room NN room ^ OK

and CC and ^ OK
ev- XX ^ ^ repeat
you PRP you ^ OK
know VBP know ^ OK
e- XX ^ ^ repeat

uh UH uh ^ OK
i- XX i- ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
don- VBP ^ ^ repeat
do VBP do argM_neg OK
don- VBP ^ ^ repeat
n't RB n't argM_neg OK
really RB really ^ OK
cook VB cook predicate OK
at RB at ^ OK
all RB all ^ OK

i PRP i ^ OK
'd MD 'd ^ OK
probably RB probably ^ OK

i PRP i ^ OK
'll MD 'll ^ OK
just RB just ^ OK

i PRP i arg0 OK
really RB really ^ false_start
do VBP do argM_neg OK
n't RB n't argM_neg OK
know VB know predicate OK
what WP what arg1 OK
to TO to arg1 OK
do VB do arg1 OK

i PRP i ^ OK
'll MD 'll ^ OK
provide VB provide ^ OK
the DT the ^ OK
kitchen NN kitchen ^ OK
kitchen NN and ^ false_start
let VB let ^ OK
people NNS ^ ^ repeat
people NNS people ^ OK
do VB do ^ OK

i PRP i ^ OK
g- XX g- ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP ^ ^ repeat
guess VBP guess ^ OK
they PRP they ^ OK
would MD would ^ OK

it PRP ^ ^ repeat
it PRP it arg1 OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
be VB ^ ^ repeat
be VB be predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
good JJ good arg2 OK
time NN time arg2 OK

maybe RB maybe ^ OK
uh UH ^ ^ filler
because IN because ^ OK
my PRP my ^ OK
grandparents NNS grandparents ^ OK
do VBP do ^ OK
n't RB n't ^ OK
live VB live ^ OK
too RB too ^ OK
far RB far ^ OK

oh UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
a DT a arg2 OK
movie NN movie arg2 OK

just RB just ^ OK
like IN like ^ OK
the DT the ^ OK

i- PRP i- ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
thought VBD thought predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
great JJ great arg2 OK

um UH ^ ^ filler
just RB ^ ^ false_start
as RB ^ ^ false_start
far RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
want VB want predicate OK
to TO to arg1 OK
be VB be arg1 OK
eating VBG eating arg1 OK
and CC and arg1 OK
have VB have arg1 OK
somebody NN somebody arg0 OK
smoking VBG smoking arg1 OK
right RB right argM_loc OK
next RB next argM_loc OK
to IN to argM_loc OK
you PRP you argM_loc OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

because IN because ^ OK
then RB then ^ OK

well UH ^ ^ filler
i PRP i arg0 OK
understand VBP understand predicate OK
what WP what arg1 OK
you PRP you arg0 OK
're VBP 're arg1 OK
saying VBG saying arg1 OK
as RB as arg1 OK
far RB far arg1 OK
as IN as arg1 OK
the DT the arg0 OK
smoker NN smoker arg0 OK
feeling VBG feeling arg1 OK
um UH ^ ^ filler
alienated JJ alienated arg1 OK
because IN because arg1 OK
his PRP his arg1 OK
rights NNS rights arg1 OK
are VBP are arg1 OK
being VBG being arg1 OK
impinged VBN infringed arg1 false_start
upon IN upon arg1 OK
as NP-2 as arg1 OK
far RB far arg1 OK
as RB as arg1 OK
you IN ^ ^ filler
know PRP ^ ^ filler
his VBP his arg0 OK
right PRP right arg0 OK
to NN to arg1 OK
smoke TO smoke arg1 OK
i PRP ^ ^ repeat
i VB i ^ OK
guess VBP ^ ^ repeat
suppose PRP suppose ^ OK

i- IN ^ ^ repeat
in IN in ^ OK
europe NNP europe ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
in IN ^ ^ false_start
general JJ ^ ^ false_start
things NNS ^ ^ false_start
in IN ^ ^ false_start
europe NNP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do- VBZ ^ ^ repeat
do VBP do argM_neg OK
n't RB n't argM_neg OK
think VB think predicate OK
people NNS people arg1 OK
are VBP are arg1 OK
necessarily RB necessarily arg2 false_start
chain NN chain arg2 OK
smokers NNS smokers arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're arg1 OK
m- RB ^ ^ repeat
much RB ^ ^ repeat
much RB much arg2 OK
m- RBR ^ ^ repeat
more RBR more arg2 OK
moderate JJ moderate arg2 OK
in IN in arg2 OK
their PRP their arg2 OK
drinking NN drinking arg2 OK
habits NNS habits arg2 OK
as NAC-1 as arg2 OK
well RB well arg2 OK
and RB ^ ^ repeat
and CC ^ ^ false_start
all CC ^ ^ false_start
sorts DT ^ ^ false_start
of NNS ^ ^ false_start
things IN ^ ^ false_start

eh UH ^ ^ filler
ha- XX ^ ^ repeat
were VBD ^ ^ repeat
n- IN ^ ^ repeat
near IN near ^ OK
the DT the ^ OK
fires NNS fires ^ OK
at RB at ^ OK
all RB all ^ OK

eh UH ^ ^ filler
not RB not ^ OK
related JJ related ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
tri- VBD ^ ^ repeat
tried VBD tried ^ OK
once RB once ^ OK
too RB too ^ OK

and CC ^ ^ false_start
it PRP it arg1 OK
was VBD was predicate OK
just RB just arg2 OK
no UH ^ ^ repeat
no DT no arg2 OK
fun NN fun arg2 OK

eh UH eh ^ OK
yeah UH yeah ^ OK

it PRP ^ ^ false_start
'd MD ^ ^ false_start
be VB ^ ^ false_start
bad JJ ^ ^ false_start
if IN ^ ^ false_start
we PRP ^ ^ false_start
were VBD ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
maybe RB maybe ^ OK
it PRP it arg1 OK
would MD would ^ OK
be VB be predicate OK
good JJ good arg2 OK
if IN if arg2 OK
we PRP we arg1 OK
were VBD were arg2 OK
both DT ^ ^ repeat
both DT both arg2 OK
in IN in arg2 OK
opposition NN opposition arg2 OK
to IN to arg2 OK
each DT each arg2 OK
other JJ other arg2 OK

i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
write VB write ^ OK
it PRP it ^ OK
down RP down ^ OK
either RB either ^ OK
because IN because ^ OK
i PRP i ^ OK
was VBD was ^ OK
like RP like ^ OK
whoa UH ^ ^ filler

um UH ^ ^ filler
because IN because ^ OK
they PRP ^ ^ repeat
t- PRP ^ ^ repeat
they PRP they arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
called VBN ^ ^ repeat
called VBN called predicate OK
me PRP me arg1 OK
a DT a argM_tmp OK
couple NN couple argM_tmp OK
of IN of argM_tmp OK
other JJ other argM_tmp OK
times NNS times argM_tmp OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
just RB ^ ^ repeat
i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD did argM_neg OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
want VB want predicate OK
to TO to arg1 OK
participate VB participate arg1 OK

so RB ^ ^ false_start
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
whatever WDT whatever arg1 OK

well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
i PRP i arg0 OK
uh UH ^ ^ filler
saw VBD saw predicate OK
shrek NNP shrek arg1 OK
um PRP ^ ^ filler
i UH i arg1 OK
i ADVP-TMP- 1 ^ ^ repeat
was PRP was ^ OK
shocked VBD shocked predicate OK
at VBN at arg2 OK
how IN how arg2 OK
often WRB often arg2 OK
they RB they arg0 OK
um PRP ^ ^ filler
used UH used arg2 OK
the VBD the arg1 OK
term DT term arg1 OK
ass NN ass arg1 OK
for NN for arg2 OK
donkey IN donkey arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
because UH because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
like RP like ^ OK
all UH ^ ^ filler
right UH ^ ^ filler

they PRP they arg0 OK
've VBP 've ^ OK
've VBP got predicate false_start
the DT the arg1 OK
toys NNS toys arg1 OK

they PRP they ^ OK
've VBP 've ^ OK
got VBN got ^ OK

well UH ^ ^ filler
but CC but ^ OK
that DT ^ ^ false_start
's BES ^ ^ false_start
ju- RB ^ ^ false_start
i PRP ^ ^ repeat
that IN ^ ^ false_start
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
the DT the arg1 OK
humor NN humor arg1 OK
was VBD was arg1 OK
for IN for arg2 OK
adults NNS adults arg2 OK

a- CC a- ^ OK

i PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a ^ OK
friend NN friend arg1 OK
who WP who arg0 OK
had VBD had predicate OK
a DT a arg1 OK
seven CD seven arg1 OK
year NN year arg1 OK
old NN old arg1 OK

and CC ^ ^ false_start
she PRP she arg1 OK
l VBD ^ ^ false_start
leaned VBD leaned predicate OK
into IN into arg2 OK
him PRP him arg2 OK

and CC ^ ^ false_start
she PRP she arg0 OK
said VBD said predicate OK
you PRP you arg0 OK
know VBP know arg1 OK
ass NN ass arg1 OK
is VBZ is arg1 OK
another DT another arg2 OK
word NN word arg2 OK
for IN for arg2 OK
donkey NN donkey arg2 OK
right UH ^ ^ false_start

so UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
like UH ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
actually RB actually ^ OK
i PRP i arg1 OK
was VBD was predicate OK
um UH ^ ^ filler
a DT a arg2 OK
little RB little arg2 OK
more RBR more arg2 OK
offended VBN offended arg2 OK
by IN by ^ OK
it PRP it arg0 OK
than IN than ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
friend NN friend ^ OK
that WDT that arg0 OK
has VBZ has predicate OK
the DT the arg1 OK
kids NNS kids arg1 OK

she PRP she arg0 OK
's BES ^ ^ false_start
like RP says predicate false_start
i PRP i arg0 OK
really RB really arg1 OK
did VBD did arg1 OK
n't RB n't arg1 OK
think VB think arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
that RB that arg2 OK
big JJ big arg2 OK
of IN of arg2 OK
a DT a arg2 OK
deal NN deal arg2 OK

but CC but ^ OK
i PRP i arg0 OK
just RB just ^ false_start
was VBD ^ ^ false_start
like RP said predicate false_start
i PRP i arg1 OK
'm VBP 'm arg1 OK
kind RB kind arg1 OK
of RB of arg1 OK
offended VBN offended arg1 OK
that IN ^ ^ repeat
that IN that arg1 OK
they PRP they arg0 OK
're VBP 're arg1 OK
pushing VBG pushing arg2 OK
the DT the arg1 OK
envelope NN envelope arg1 OK
in IN in arg2 OK
this DT this arg2 OK
way NN way arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
they PRP they arg0 OK
've VBP 've arg1 OK
kind RB kind arg1 OK
of RB of arg1 OK
mis-marketed VBN mis-marketed arg1 OK
this DT this arg1 OK
movie NN movie arg1 OK
because IN because ^ OK
they PRP they arg0 OK
've VBP 've ^ OK
asked VBN asked predicate OK
these DT these arg2 OK
kids NNS kids arg2 OK
to TO to arg1 OK
come VB come arg1 OK
in RB in arg1 OK
and CC and ^ OK
now RB now ^ OK
they PRP they arg0 OK
're VBP 're ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB ^ ^ false_start
of RB ^ ^ false_start
throwing VBG throwing predicate OK
this DT this arg1 OK
out RP out arg2 OK
at IN at arg2 OK
them PRP them arg2 OK

it PRP it arg1 OK
was VBD was predicate OK
n't RB n't ^ OK
that RB that arg2 OK
big JJ big arg2 OK
of IN of arg2 OK
a DT a arg2 OK
deal NN deal arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
interesting JJ interesting arg2 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
've VBP 've ^ OK
got VBN got ^ OK
adults NNS adults arg0 OK
designing VBG designing predicate OK
the DT the arg1 OK
comedy NN comedy arg1 OK

and CC ^ ^ false_start
so RB ^ ^ false_start
uh UH ^ ^ filler
but CC but ^ OK
then RB then ^ OK
there EX ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in ^ OK
tha- DT ^ ^ false_start
those DT those ^ OK
particular JJ particular ^ OK
cases NNS cases ^ OK

if IN if ^ OK
they PRP they ^ OK
're VBP 're ^ OK
designing VBG designing ^ OK
it PRP it ^ OK
for IN for ^ OK
kids NNS kids ^ OK

i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
tough JJ tough arg2 OK
field NN field arg2 OK
because IN because ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
designing VBG designing predicate OK
it PRP it arg1 OK
for IN for arg2 OK
kids NNS kids arg2 OK

but CC but ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you arg0 false_start
got VBN ^ ^ repeat
got VBN ^ ^ repeat
got VBN got ^ false_start
've VBP 've ^ false_start
to TO ^ ^ repeat
to TO to ^ false_start
have VB have predicate false_start
uh UH ^ ^ filler
parents NNS parents arg0 OK
that WDT ^ ^ repeat
that NP-2 that arg0 OK
are WDT are ^ OK
willing VBP willing predicate OK
to JJ to arg1 OK
come TO come arg1 OK
in VB in arg4 OK
and RB and arg1 OK
watch CC watch arg1 OK
it VB it arg1 OK

so UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
difference NN difference arg2 OK
in IN ^ ^ repeat
in IN in arg1 OK
whether IN whether arg1 OK
you PRP you arg0 OK
air VBP air arg1 OK
a DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
sitcom NN sitcom arg1 OK
at IN at argM_tmp OK
eight CD eight argM_tmp OK
o'clock NN o'clock argM_tmp OK
in IN in argM_tmp OK
the DT the argM_tmp OK
evening NN evening argM_tmp OK
or CC or arg1 OK
whether IN whether arg1 OK
you PRP you arg0 OK
air VBP air arg1 OK
it PRP it arg1 OK
at IN at arg2 OK
nine CD nine arg2 OK

or CC or ^ OK
uh UH ^ ^ filler
whether IN whether ^ OK
it PRP it arg1 OK
has VBZ has ^ OK
to TO to ^ OK
go VB go predicate OK
to IN to arg4 OK
h. NNP h. arg4 OK
b. NNP b. arg4 OK
o. NNP o. arg4 OK

i PRP i ^ OK
bet VBP bet ^ OK

they PRP they ^ OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
just RB ^ ^ false_start
saw VBD ^ ^ false_start
on IN ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
forget VBP forget predicate OK
where WRB where arg4 OK
it PRP it arg1 OK
was VBD was arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
going VBG going arg1 OK

but CC but ^ OK
um UH ^ ^ filler
i PRP i arg0 OK
saw VBD saw predicate OK
online JJ online argM_loc OK
that IN that arg1 OK
was VBD ^ ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
uh UH ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
're VBP ^ ^ repeat
're VBP 're arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
re-air VB re-air arg1 OK
uh UH ^ ^ filler
sex NN ^ arg1 false_start
it PRP sex ^ false_start
and CC ^ arg1 false_start
it PRP and ^ false_start
the DT ^ arg1 false_start
it PRP the ^ false_start
city NN ^ arg1 false_start
it PRP city ^ false_start
on IN ^ ^ false_start
s- XX ^ ^ false_start
in IN in arg2 OK
more JJR more arg2 OK
of IN of arg2 OK
a DT a arg2 OK
commercial JJ commercial arg2 OK
broadcast NN broadcast arg2 OK
area NN area arg2 OK

i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
was VBD was ^ OK
sex NN sex ^ OK
and CC and ^ OK
the DT the ^ OK
city NN city ^ OK
that WDT that ^ OK

uh UH ^ ^ filler
just RB just ^ OK
that IN that ^ OK
they PRP ^ ^ false_start
were VBD ^ ^ false_start
it PRP it arg1 OK
was VBD was ^ OK
going VBG ^ ^ repeat
going VBG going ^ OK
to TO to ^ OK
a- XX ^ ^ repeat
air VB air predicate OK
off IN off argM_loc OK
of IN of argM_loc OK
h. NNP h. argM_loc OK
b. NNP b. argM_loc OK
o. NNP o. argM_loc OK

so RB ^ ^ false_start
um UH ^ ^ filler
um UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
've VBP 've ^ OK
seen VBN seen ^ OK
seen VBN _ARG_ ^ false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
know VBP ^ ^ repeat
know VBP know predicate OK
there EX there arg1 OK
are VBP are arg1 OK
certain JJ certain arg2 OK
kind NN kinds arg2 false_start
of IN of arg2 OK
jobs NNS jobs arg2 OK
though RB ^ ^ false_start
and CC ^ ^ false_start
stuff NN ^ ^ false_start
where WRB where arg1 OK
only RB only arg1 OK
certain JJ certain arg1 OK
kind NN kinds arg1 false_start
of IN of arg1 OK
people NNS people arg0 OK
are VBP are arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
hire VB hire arg1 OK
other JJ other arg1 false_start
certain JJ certain arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
people NNS people arg1 OK

i PRP ^ ^ filler
mean VB ^ ^ filler
um UH ^ ^ filler
you PRP ^ ^ false_start
go VBP ^ ^ repeat
to TO ^ ^ repeat
go VB ^ ^ false_start
to TO ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
go VB go ^ OK
to TO to ^ OK
apply VB apply predicate OK
for IN for arg1 OK
a DT a arg1 OK
job NN job arg1 OK
in IN in argM_loc OK
a DT an argM_loc false_start
indian JJ indian argM_loc OK
restaurant NN restaurant argM_loc OK
to TO to ^ OK
cook VB cook predicate OK

in IN in ^ OK
a DT an ^ false_start
indian JJ indian ^ OK
restaur- NN restaurant ^ false_start

mean VBP ^ ^ filler
in IN ^ ^ repeat
in IN in ^ OK
well UH ^ ^ filler
i PRP ^ ^ filler
o- JJ ^ ^ repeat
other JJ other ^ OK
words NNS words ^ OK
like UH ^ ^ filler
a DT ^ ^ repeat
an DT an ^ OK
indian JJ indian ^ OK
restaurant NN restaurant ^ OK
with IN with ^ OK
um UH ^ ^ filler

i PRP ^ ^ repeat
in IN i ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
really RB really ^ false_start
i PRP ^ ^ OK
in IN in ^ OK
bo- NNP bo- ^ OK

but CC but ^ OK
um UH ^ ^ filler

you PRP you arg0 OK
mean VBP mean predicate OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the arg1 OK
people NNS people arg1 OK
who WP who arg0 OK
've VBP 've arg1 OK
left VBN left arg1 OK

and CC and ^ OK
what WP what ^ OK
i- VBZ i ^ OK

is VBZ is predicate OK
it PRP it arg1 OK
good JJ ^ ^ false_start
t- XX ^ ^ false_start
worthwhile JJ worthwhile arg2 OK
overall RB overall arg2 false_start
or CC or arg2 OK
bad JJ bad arg2 OK

actually RB actually ^ OK
i PRP i ^ OK
w- VBD ^ ^ false_start

i PRP ^ argM_tmp repeat
i PRP i arg1 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
and CC ^ ^ false_start
actually RB actually ^ false_start
been VBN ^ ^ repeat
been VBN been predicate OK
in IN ^ ^ repeat
in IN in arg2 OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the arg2 OK
low JJ ^ ^ repeat
lowest JJS lowest arg2 OK
income NN ^ ^ repeat
income NN income arg2 OK
bracket NN ^ ^ repeat
bracket NN bracket arg2 OK
pretty RB pretty ^ false_start
much JJ much ^ false_start
all PDT all argM_tmp OK
my PRP my argM_tmp OK
life NN life argM_tmp OK

i PRP i arg0 OK
went VBD went predicate OK
to IN to arg1 OK
the DT the arg1 OK
city NNP ^ ^ repeat
city NNP city arg1 OK
college NNP college arg1 OK
of IN of arg1 OK
new NNP new arg1 OK
york NNP york arg1 OK
and CC ^ ^ repeat
and CC and ^ OK
i PRP i arg1 OK
loved VBD loved predicate OK
being VBG being arg1 OK
there RB there arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
saw VBD ^ ^ repeat
saw VBD saw predicate OK
harlem NNP harlem arg1 OK
before IN before argM_tmp OK
the DT the arg0 OK
gentrification NN gentrificatio n  arg0 OK
began VBD began argM_tmp OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
um UH ^ ^ filler

yeah UH yeah ^ OK
eh UH ^ ^ filler

um UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
was VBD ^ ^ repeat
's BES 's predicate OK
nerve NN ^ arg2 false_start
wracking VBG nerve-wrackin g  ^ false_start

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
still RB ^ ^ repeat
still RB still argM_tmp OK
scared JJ scared arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
nerve NN ^ arg2 false_start
wracking VBG nerve-wrackin g  ^ false_start

it PRP ^ ^ repeat
like UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
far RB ^ ^ repeat
far RB far arg2 OK
away RB away arg2 OK

i PRP ^ ^ repeat
n- VBP ^ ^ repeat
i PRP ^ ^ false_start
know VBP ^ ^ false_start
from IN ^ ^ false_start
seeing VBG ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
definitely RB definitely ^ OK
think VBP think predicate OK
people NNS ^ ^ repeat
people NNS people arg1 OK
here RB ^ ^ repeat
here RB here argM_loc false_start
would MD would arg1 OK
panic VB panic arg1 OK
if IN if arg1 OK
there EX there arg1 OK
was VBD was arg1 OK
any DT an arg1 false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
attack NN attack arg1 OK
anywhere RB anywhere argM_loc OK
only RB ^ ^ false_start
because IN because ^ OK
we PRP we arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
the DT ^ ^ repeat
in IN ^ ^ false_start
the DT the arg2 OK
center NN ^ ^ false_start
target NN target arg2 OK
of IN of arg2 OK
so RB so arg2 OK
many JJ many arg2 OK
things NNS things arg2 OK
so RB ^ ^ false_start
far RB ^ ^ false_start

which WDT which ^ OK
was VBD was ^ OK
really RB really ^ OK
surprising JJ surprising ^ OK
to IN to ^ OK
me PRP me ^ OK

see UH ^ ^ filler
i PRP i arg0 OK
know VBP know predicate OK
me PRP ^ ^ repeat
myself PRP ^ ^ repeat
i PRP i arg1 OK
panicked VBD panicked arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
extremely RB extremely arg2 OK
nervous JJ nervous arg2 OK
about IN about arg2 OK
everything NN everything arg2 OK
since IN since arg2 OK
september NNP september arg2 OK
eleventh JJ eleventh arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
have VBP have ^ OK
n't RB n't ^ OK
really RB ^ ^ false_start
got VBN gotten predicate false_start
past IN past arg_particl OK
it PRP it arg1 OK

i PRP ^ ^ repeat
i PRP i ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
flown VBN ^ ^ repeat
flown VBN flown ^ OK
since RB since ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ filler
guess VBP ^ ^ filler
i PRP i arg0 OK
feel VBP feel predicate OK
safer JJR safer arg1 OK
that IN that arg1 OK
they PRP they arg0 OK
're VBP 're arg1 OK
doing VBG doing arg1 OK
that DT that arg1 OK
instead IN instead arg1 OK
of IN of arg1 OK
slacking VBG slacking arg1 OK
off RP ^ ^ OK
and CC ^ ^ false_start
just RB ^ ^ false_start
letting VBG ^ ^ false_start
things NNS ^ ^ false_start
fly VB ^ predicate false_start

and CC ^ arg1 false_start
that DT that arg1 OK
that DT ^ ^ false_start
college NN the ^ false_start
college NN college arg1 OK
student NN student arg1 OK
he PRP ^ ^ false_start
brought VBD brought arg1 false_start
on RB on arg1 false_start
with IN ^ ^ repeat
the DT ^ ^ repeat
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
if IN ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
bombs NNS bombs arg1 OK
or CC ^ ^ repeat
or CC ^ ^ false_start
what WP ^ ^ false_start
or CC or arg1 OK
box NN box arg1 OK
cutters NNS cutters arg1 OK
but CC ^ ^ false_start
it PRP ^ ^ repeat
was VBD ^ ^ repeat
was VBD was predicate OK
eye NN ^ arg2 false_start
opening VBG eye-opening ^ false_start

which WDT which ^ OK
they PRP they ^ OK
should MD should ^ OK
have VB have ^ OK

i PRP i arg0 OK
think VBP think predicate OK
definitely RB definitely arg1 OK

eh UH ^ ^ filler
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
even RB ^ ^ false_start
know VB know predicate OK
about IN about arg1 OK
it PRP it arg1 OK

i PRP i ^ OK
've VBP 've ^ OK
seen VBN seen ^ OK
seen VBN ^ ^ false_start
s- XX _ARG_ ^ false_start

y- PRP ^ ^ repeat
you PRP you ^ OK
as RB as ^ OK
in IN in ^ OK
your PRP your ^ OK
family NN family ^ OK

actually UH actually ^ OK
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
in IN in ^ OK
my PRP my ^ OK
early JJ early ^ OK
twenties NNS twenties ^ OK

just RB just ^ OK
going VBG going ^ OK
uh UH ^ ^ filler
to IN to ^ OK
school NN school ^ OK
and CC ^ ^ false_start
whatnot WP ^ ^ false_start

now UH ^ ^ false_start
this DT this ^ OK
was VBD was ^ OK
r- JJ ^ ^ false_start
obviously RB obviously ^ OK
recent JJ recent ^ OK
then RB then ^ OK

so UH ^ ^ filler
hm UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
really RB really ^ OK
our PRP our ^ OK
season NN season ^ OK
to RB to ^ OK
be TO be ^ OK
getting VB getting ^ OK
all VBG all ^ OK
this PDT this ^ OK
sickness DT sickness ^ OK
yet SBAR-2 yet ^ false_start

i PRP i ^ false_start
think VBP think ^ false_start
so RB ^ ^ filler
this DT this ^ OK
is VBZ is ^ OK
really RB really ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
hitting VBG hitting ^ OK
earlier RBR earlier ^ OK
than IN than ^ OK
normal RB normal ^ OK

but CC but ^ OK
uh UH ^ ^ filler

but CC ^ ^ false_start
i PRP ^ ^ false_start
probably RB probably ^ OK
just RB ^ ^ false_start
being VBG being ^ OK
cooped VBN cooped ^ OK
up RP up ^ OK
in IN in ^ OK
the DT the ^ OK
classroom NN classroom ^ OK
all DT all ^ OK
day NN day ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
will MD will ^ OK
do VB do ^ OK
it PRP it ^ OK
to IN to ^ OK
you PRP you ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
trying VBG trying ^ OK
remember VB remember ^ OK
what WP what ^ OK
the DT the ^ OK
uh UH ^ ^ filler
the DT _ARG_ ^ false_start

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WDT ^ ^ repeat
what WDT what ^ OK
other JJ other ^ OK
topics NNS topics ^ OK

di- VBD ^ ^ false_start
you PRP ^ ^ repeat
you PRP you ^ OK
hear VBP hear ^ OK
all PDT all ^ OK
the DT the ^ OK
topics NNS topics ^ OK
before IN before ^ OK
we PRP we ^ OK
get VBP get ^ OK
on IN on ^ OK
the DT the ^ OK
line NN line ^ OK

i- PRP ^ ^ repeat
we- UH ^ ^ repeat
well UH ^ ^ filler
it PRP it ^ OK
was VBD was ^ OK
like UH ^ ^ filler

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they ^ OK
s- VBD ^ ^ repeat
said VBD said ^ OK
like UH ^ ^ filler
illness NN illness ^ OK
to IN to ^ OK
me PRP me ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
wer- VBP ^ ^ repeat
were VBD were ^ OK
all DT all ^ OK
illness NN illness ^ OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
related JJ related ^ OK
though RB ^ ^ false_start

so RB so ^ OK
i PRP i ^ OK

are VBP are ^ OK
w- VBD ^ ^ false_start
you PRP you ^ OK
talking VBG talking ^ OK
about IN about ^ OK
uh UH ^ ^ filler
um UH ^ ^ filler
west NNP west ^ OK
nile NNP nile ^ OK

wy- XX ^ ^ false_start
they PRP they ^ OK
're VBP 're ^ OK
starting VBG starting ^ OK
to TO to ^ OK
see VB see ^ OK
a DT a ^ OK
b- NN ^ ^ false_start
little JJ little ^ OK
bit NN bit ^ OK
of IN ^ ^ repeat
of IN of ^ OK
that DT that ^ OK
around IN around ^ OK
here RB here ^ OK

i UNK i arg0 OK
going UNK am ^ false_start
not UNK not argM_neg OK
going UNK going ^ OK
to UNK to ^ OK
say UNK say predicate OK

eh UH ^ ^ filler
i PRP i arg0 OK
know VBP know predicate OK
it PRP it arg0 OK
would MD would arg1 OK
be VB be arg1 OK
going VBG ^ ^ false_start
uh UH ^ ^ filler
asking VBG asking arg1 OK
for IN for arg1 OK
a DT a arg1 OK
little JJ little arg1 OK
too RB too arg1 OK
much JJ much arg1 OK

or CC ^ ^ repeat
jus- RB ^ ^ repeat
or CC ^ ^ false_start
just RB ^ ^ false_start
pay VB ^ ^ false_start
your PRP ^ ^ false_start
eigh- NN ^ ^ false_start
or CC or ^ OK
just RB just ^ OK
give VB give ^ OK
them PRP them ^ OK
a DT a ^ OK
hundred CD hundred ^ OK
dollars NNS dollars ^ OK
a DT a ^ OK
day NN day ^ OK
for IN for ^ OK
working VBG working ^ OK

same JJ same ^ OK
here RB here ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
still RB ^ ^ repeat
still RB still ^ OK
lost VBD lost predicate OK

they PRP they arg0 OK
are VBP are ^ OK
going VBG going ^ OK
to TO to ^ OK
have VB have ^ OK
to TO to ^ OK
to TO do predicate false_start
better RBR better arg1 OK
than IN than arg1 OK
that DT that arg1 OK
now RB now argM_tmp OK

the DT the ^ OK
nerve NN nerve ^ OK
that IN that ^ OK
they PRP they ^ OK
would MD would ^ OK
even RB even ^ OK
offer VB offer ^ OK
me PRP me ^ OK
five CD five ^ OK
fifteen CD fifteen ^ OK
an DT an ^ OK
hour NN hour ^ OK

you PRP ^ argM_tmp repeat
have VBP ^ ^ repeat
you PRP you arg1 OK
have VBP have ^ OK
to TO to ^ OK
just RB just ^ OK
stay VB stay predicate OK
on IN on argM_loc OK
the DT the argM_loc OK
phone NN phone argM_loc OK
ten CD ^ ^ false_start
minutes NNS for ^ false_start
ten CD ten argM_tmp OK
minutes NNS minutes argM_tmp OK

like UH ^ ^ filler
if IN ^ ^ false_start
th- DT ^ ^ false_start
if IN if ^ OK
you PRP you arg0 OK
hang VBP hang predicate OK
up RP up arg_particl OK
before IN before argM_tmp OK
the DT the arg1 OK
robot NN robot arg1 OK
operator NN operator arg1 OK
comes VBZ comes argM_tmp OK
back RB back argM_other OK
and CC and ^ OK
there EX there ^ OK
's BES 's predicate OK
no DT no arg1 OK
one NN one arg1 OK
there RB there arg1 OK
then RB then ^ OK
you PRP ^ ^ false_start
're VBP ^ ^ false_start
probably RB ^ ^ false_start
your PRP your arg1 OK
call NN call arg1 OK
is VBZ is ^ OK
disqualified VBN disqualified predicate OK

you PRP ^ ^ repeat
you PRP you arg0 OK
cut VBP cut predicate OK
short JJ short arg2 OK
eh UH ^ ^ filler
when WRB ^ ^ repeat
uh UH ^ ^ filler
when WRB when argM_tmp OK
he PRP he arg1 OK
comes VBZ comes argM_tmp OK
back RB back argM_other OK
eh UH ^ ^ filler
and CC and argM_tmp OK
no DT no arg1 OK
one NN one arg1 OK
's BES 's argM_tmp OK
on IN on arg2 OK
the DT the arg2 OK
line NN line arg2 OK

uh UH ^ ^ filler
w- XX ^ ^ false_start
you PRP you arg1 OK
are VBP are predicate OK
only RB only arg2 OK
allowed VBN allowed arg2 OK
one CD one arg1 OK
call NN call arg1 OK
a DT a arg1 OK
day NN day arg1 OK

may- RB ^ ^ false_start
it PRP it arg1 OK
might MD might ^ OK
be VB be predicate OK
my PRP my arg2 OK
third JJ third arg2 OK
third JJ _NOUN_ arg2 false_start

there EX ^ ^ false_start
was VBD ^ ^ false_start
a DT ^ ^ false_start
mess- NN ^ ^ false_start
they PRP they arg0 OK
left VBD left predicate OK
me PRP me arg2 OK
a DT a arg1 OK
message NN message arg1 OK

but CC ^ argM_tmp false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
thought VBD ^ ^ repeat
thought VBD thought predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
over JJ over arg2 OK
the DT at ^ false_start
the DT the argM_tmp OK
end NN end argM_tmp OK
of IN of argM_tmp OK
uh UH ^ ^ filler
september NNP september argM_tmp OK

and CC ^ ^ false_start
ah UH ^ ^ filler
they PRP they arg0 OK
extended VBD extended predicate OK
it PRP it arg1 OK
another DT another arg2 OK
month NN month arg2 OK

but CC ^ ^ false_start
they PRP they arg0 OK
extended VBD extended predicate OK
it PRP it arg1 OK
a DT a arg2 OK
month NN month arg2 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
that IN that ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
usually RB ^ ^ repeat
usually RB usually ^ OK
ah UH ^ ^ filler
open VB open predicate OK
up RP up arg_particl OK
th- XX ^ ^ repeat
other RB ^ ^ repeat
other RB other ^ OK
than IN ^ ^ repeat
than IN than ^ OK
in IN ^ ^ repeat
in IN in ^ OK
generalities NNS generalities ^ OK

bu- XX ^ ^ false_start
i PRP ^ ^ repeat
don- VBP ^ ^ repeat
i PRP ^ ^ false_start
've VBP ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
open VB open predicate OK
up RP up arg_particl OK
in IN ^ ^ repeat
in IN in ^ OK
specifics NNS specifics ^ OK
ah UH ^ ^ filler
with IN with arg3 OK
people NNS people arg1 OK
other RB other ^ OK
than IN than ^ OK
those DT those ^ OK
that WDT that ^ OK
i PRP i arg0 OK
know VBP know predicate OK
well RB well ^ OK
and CC and ^ OK
uh UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
i PRP i arg0 OK
'm VBP 'm arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
say VB say arg1 OK
trust S trust arg1 OK

but CC but ^ OK
i PRP i arg0 OK
'm VBP 'm predicate OK
not RB not arg2 OK
sure JJ sure arg2 OK
if IN ^ ^ repeat
i PRP ^ ^ false_start
if IN if arg2 OK
that DT that arg2 OK
's BES 's arg2 OK
the DT the arg1 OK
correct JJ correct arg1 OK
word NN word arg1 OK
to TO to arg1 OK
use VB use arg1 OK

but CC but ^ OK
um UH ^ ^ filler
when WRB when ^ OK
i PRP i arg0 OK
know VBP know predicate OK
a DT a arg1 OK
person NN person arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and ^ OK
get VBP get predicate OK
the- PRP ^ ^ repeat
the DT the arg1 OK
feeling NN feeling arg1 OK
for IN for arg1 OK
them PRP them arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and ^ OK
vice FW vice ^ OK
versa FW versa ^ OK
th- PRP ^ ^ repeat
they PRP they arg0 OK
understand VBP understand predicate OK
me PRP me arg1 OK
and CC and ^ OK
get VB get predicate OK
a DT a arg1 OK
feeling NN feeling arg1 OK
for IN for arg1 OK
me PRP me arg1 OK
and CC and ^ OK
that DT that ^ OK
i ADVP-TMP- 5 i arg0 OK
feel PRP feel predicate OK
that VBP that arg1 OK
i IN i arg0 OK
can PRP can arg1 OK
open MD open arg1 OK
up VB up arg_particl OK
and RP and arg1 OK
communicate CC communicate arg1 OK
with VB with arg2 OK
them IN them arg2 OK
m- PRP ^ ^ repeat
more RBR more arg1 OK
and RBR and ^ OK
that CC that ^ OK
they IN they arg0 OK
care PRP care predicate OK
more VB more arg1 OK
as RBR as arg1 OK
far RB far arg1 OK
as RB as arg1 OK
about IN about arg1 OK
what IN what arg1 OK
i WP i arg0 OK
'm PRP 'm arg1 OK
saying VBP saying arg1 OK
as VBG as ^ OK
opposed NP-4 opposed predicate OK
to IN to ^ OK
uh VBN ^ ^ filler
just IN ^ ^ false_start
talking UH talking arg1 OK
to RB to arg1 OK
somebody VBG somebody arg1 OK
that IN that arg1 OK
i NN i arg0 OK
see WDT see arg1 OK
occasionally PRP occasionally arg1 OK
and VBP and ^ OK
that RB that ^ OK
and CC and ^ OK
trying DT trying predicate OK
to CC to arg1 OK
uh VBG ^ ^ filler
ex- TO ^ ^ repeat
express UH express arg1 OK
or VB or ^ OK
give VB give predicate OK
my PP-2 my arg1 OK
ideas CC ideas arg1 OK
uh VB ^ ^ filler
in PP-2 ^ ^ false_start
mo- PRP ^ ^ false_start
in NNS ^ ^ repeat
i UH ^ ^ false_start
guess IN ^ ^ false_start
you XX ^ ^ false_start
could IN ^ ^ false_start
say PRP ^ ^ false_start
uh VBP ^ ^ filler
in PRP ^ ^ repeat
in MD in ^ OK
detail VB detail ^ OK
and PP-SEZ-2 ^ ^ false_start
that UH ^ ^ false_start

i PRP ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
a- XX ^ ^ false_start
they PRP they arg0 OK
ask VBP ask predicate OK
me PRP me arg1 OK
like UH ^ ^ filler
how WRB how arg2 OK
things NNS things arg1 OK
are VBP ^ ^ repeat
are VBP are arg1 OK
going VBG going arg1 OK
at IN at arg2 OK
work NN work arg2 OK

and CC ^ ^ false_start
then RB then ^ OK
i PRP i arg0 OK
'll MD 'll ^ OK
say VB say predicate OK
eh UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
things NNS things arg1 OK
are VBP are arg1 OK
going VBG going arg1 OK
fine RB fine arg2 OK

but CC but ^ OK
if IN ^ ^ repeat
i- PRP ^ ^ repeat
if IN if ^ OK
it PRP it ^ OK
's BES 's predicate OK
a DT a arg0 OK
person NN person arg0 OK
that WDT that arg1 OK
i PRP i arg0 OK
ah UH ^ ^ filler
know VBP know arg1 OK
an- NP-1 ^ ^ repeat
and CC and ^ OK
knows CC knows predicate OK
me VBZ me arg1 OK
better PRP better arg1 OK
than RBR than arg1 OK
that IN that arg1 OK
then DT then ^ OK
i RB ^ ^ false_start
w- PRP ^ ^ false_start
i MD ^ ^ repeat
i RB i arg1 OK
k- PRP ^ ^ repeat
kind PRP ^ ^ false_start
of RB ^ ^ false_start
would RB would ^ OK
go MD go predicate OK
into VB into arg2 OK
detail IN detail arg2 OK
as NN as ^ OK
far RB far ^ OK
as RB as ^ OK
uh IN ^ ^ filler
you UH ^ ^ false_start
know PRP ^ ^ false_start
what VBP what ^ OK
it WP it ^ OK
was PRP was predicate OK
that VBD ^ ^ repeat
that WDT ^ ^ repeat
that WDT that arg1 OK
's WDT 's arg1 OK
going BES going arg1 OK
on VBG on arg2 OK
that RP that ^ OK
's WDT 's predicate OK
great BES great arg1 OK
work JJ work arg1 OK

or CC or ^ OK
if IN if ^ OK
i PRP i arg0 OK
'm VBP 'm ^ OK
having VBG having predicate OK
difficulties NNS difficulties arg1 OK
or CC or arg1 OK
problems NNS problems arg1 OK
and CC and ^ OK
that DT that ^ OK
uh UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
should MD ^ ^ false_start
uh UH ^ ^ filler
m- XX ^ ^ false_start
what WP what arg1 OK
i PRP i arg0 OK
think VBP think predicate OK

or CC ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
w- XX ^ ^ false_start
or CC or ^ OK
i PRP i arg0 OK
m- XX ^ ^ repeat
might MD might ^ OK
even RB even ^ OK
ask VB ask predicate OK
for IN for arg1 OK
uh UH ^ ^ filler
advice NN advice arg1 OK
or CC or arg1 OK
an DT an arg1 OK
opinion NN opinion arg1 OK
from IN from arg2 OK
them PRP them arg2 OK

whereas IN whereas ^ OK
i- PRP ^ ^ false_start
as IN ^ ^ false_start
it PRP it ^ OK
's BES 's predicate OK
just RB ^ ^ false_start
someone NN someone arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK
know VB know arg1 OK
that RB ^ ^ false_start
well RB ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
b- CC ^ ^ repeat
but CC but ^ OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
acquaintances NNS acquaintances arg2 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
you PRP ^ ^ false_start
could MD ^ ^ false_start
say VB ^ ^ false_start
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
open VB open predicate OK
up RP up arg_particl OK
that RB that ^ OK
much RB much ^ OK
to IN to ^ OK
them PRP them ^ OK

an- CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
seek VB seek predicate OK
their PRP their arg1 OK
uh UH ^ ^ filler
advice NN advice arg1 OK
or CC or arg1 OK
their PRP their arg1 OK
ah UH ^ ^ filler
thoughts NNS thoughts arg1 OK
on IN on ^ OK
the DT the ^ OK
ideas NNS ideas ^ OK
that RB ^ ^ repeat
that RB that ^ OK
much RB much ^ OK

were VBD ^ ^ false_start
you PRP ^ ^ false_start
from IN ^ ^ false_start
or UH ^ ^ filler
ah UH ^ ^ filler
was VBD was predicate OK
it PRP it ^ OK
virginia NNP ^ ^ repeat
virginia NNP virginia arg4 OK
you PRP you arg0 OK
say VBP say predicate OK
you PRP you arg1 OK
were VBD were arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
see VB see arg1 OK
about IN about arg1 OK
possibly RB possibly arg1 OK
going VBG going arg1 OK
to IN to arg4 OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
're VBP ^ ^ false_start
you PRP ^ ^ false_start
're VBP ^ ^ false_start
un- RB ^ ^ false_start
unfortunately RB ^ ^ false_start
you PRP ^ ^ false_start
're VBP ^ ^ false_start
from IN ^ ^ false_start
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
different JJ ^ ^ false_start
pl- NNS ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
mean VB mean predicate OK
that DT that arg1 OK
in IN in arg1 OK
a DT a arg1 OK
bad JJ bad arg1 OK
way NN way arg1 OK

ah UH ^ ^ filler
uh UH ^ ^ filler
but CC but ^ OK
d- XX ^ ^ false_start
you PRP you arg0 OK
never RB never ^ OK
had VBD had predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
roots NNS roots arg1 OK
set VBN set arg1 OK
down RP down arg1 OK
for IN for ^ OK
the DT the ^ OK
most JJS most ^ OK
part NN part ^ OK

it PRP it ^ OK
depends VBZ depends predicate OK
on IN ^ ^ repeat
on IN ^ ^ repeat
on IN on arg1 OK
your PRP your arg1 false_start
personality NN personality arg1 false_start
how WRB how arg1 OK
you PRP you arg0 OK
feel VBP feel predicate OK
about IN about arg1 OK
it PRP it arg1 OK

but CC but ^ OK
if IN if ^ OK
you PRP you ^ OK

even RB even ^ OK
for IN for ^ OK
myself PRP myself ^ OK
it PRP it ^ OK
's HVS 's ^ OK
been VBN been predicate OK
longer JJR longer arg1 OK
than IN than arg1 OK
that DT that arg1 OK

but CC but ^ OK
there EX there ^ OK
are VBP are predicate OK
some DT ^ ^ repeat
some DT some arg1 OK
ah UH ^ ^ filler
friends NNS friends arg1 OK
that WDT ^ ^ repeat
it PRP ^ ^ false_start
uh UH ^ ^ filler
that WDT that arg1 OK
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP ^ ^ repeat
've VBP 've arg1 OK
had VBN had arg1 OK
in IN in arg1 OK
high JJ high arg1 OK
school NN school arg1 OK
that WDT that ^ OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
keep VB keep predicate OK
real RB real arg1 OK
close RB close arg1 OK
in IN in arg1 OK
touch NN touch arg1 OK
with IN with arg1 OK

but CC but ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
every DT every ^ OK
few JJ few ^ OK
years NNS years ^ OK
ah UH ^ ^ filler
i PRP i arg0 OK
'll MD 'll ^ OK
give VB give predicate OK
somebody NN somebody arg2 OK
a DT a arg1 OK
call NN call arg1 OK
and CC and ^ OK
see VB see predicate OK
how WRB how arg2 OK
things NNS things arg1 OK
are VBP are arg1 OK
going VBG going arg1 OK
and ADVP-MNR- 1 ^ ^ false_start
that CC ^ predicate false_start

or CC ^ ^ repeat
t- PRP ^ ^ repeat
or CC or ^ OK
they PRP they arg0 OK
'll MD 'll ^ OK
give VB give predicate OK
me PRP me arg2 OK
a DT a arg1 OK
call NN call arg1 OK
and CC ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
ah UH ^ ^ filler
once RB once ^ OK
in IN in ^ OK
a DT a ^ OK
while NN while ^ OK
i PRP i arg0 OK
do VBP do ^ OK
see VB see predicate OK
people NNS people arg1 OK
that DT ^ ^ repeat
you PRP ^ ^ false_start
know VBP ^ ^ false_start
that WDT that arg1 OK
i PRP i arg1 OK
did VBD did arg1 OK
go VB go arg1 OK
to IN to arg4 OK
school NN school arg4 OK
with IN with arg1 OK
and NP-1 ^ ^ false_start
that CC ^ ^ false_start

e- XX ^ ^ false_start
but CC but ^ OK
ah UH ^ ^ filler

it PRP ^ ^ false_start
's BES ^ ^ false_start
it PRP it ^ OK
seems VBZ seems predicate OK
like IN like arg1 OK
our PRP our arg1 OK
l- NNS ^ ^ repeat
uh UH ^ ^ filler
li- NNS ^ ^ repeat
lives NNS lives arg1 OK
today NN today arg1 OK
and CC and arg1 OK
e- XX ^ ^ false_start
in IN ^ ^ false_start
so- DT ^ ^ false_start
to IN to arg1 OK
some DT some arg1 OK
degree NN degree arg1 OK
even RB ^ ^ false_start
like UH ^ ^ filler
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
you PRP ^ ^ false_start
could MD ^ ^ false_start
say VB ^ ^ false_start
friendships NP-1 friendships arg1 OK
today NNS today arg1 OK

ah UH ^ ^ filler
the- DT ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
these DT these ^ OK
are VBP are predicate OK
ones NNS ones arg1 OK
that WDT that arg1 OK
are VBP ^ ^ false_start
n- RB ^ ^ false_start
we PRP we arg1 OK
're VBP 're arg1 OK
not RB not arg2 OK
necessarily RB necessarily arg2 OK
real RB real arg2 OK
close JJ close arg2 OK
to IN to arg2 OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
try VB ^ ^ false_start
to TO ^ ^ false_start
keep VB ^ ^ false_start
and CC ^ ^ false_start
even RB ^ ^ false_start
sometimes RB sometimes ^ OK
with IN with ^ OK
family NN family ^ OK
and CC ^ ^ false_start
that WDT ^ ^ false_start
ah UH ^ ^ filler
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
hear VB hear predicate OK
from IN from arg1 OK
peop- NNS ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
aunts NNS aunts arg1 OK
uncles NNS uncles arg1 OK
or CC or arg1 OK
cousins NNS cousins arg1 OK
and CC ^ ^ false_start
that DT ^ ^ false_start
in IN in ^ OK
the DT the ^ OK
family NN family ^ OK

y- XX ^ ^ false_start
y- XX ^ ^ false_start
y- XX ^ ^ false_start
just RB ^ ^ false_start
what UH ^ ^ false_start
like UH ^ ^ filler
check VB check ^ OK
in RB ^ ^ false_start
what WP what ^ OK
they PRP they arg0 OK
say VBP say predicate OK

actually RB actually ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
d- VBD ^ ^ repeat
did VBD did predicate OK
another DT another arg1 OK
one CD one arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
dialed VBN dialed predicate OK
in RP in ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
dialed VBD dialed predicate OK
in RP in ^ OK
because IN because ^ OK
they PRP they arg0 OK
sent VBD sent predicate OK
me PRP me arg1 OK
an DT an arg2 OK
email NN email arg2 OK
with IN with arg2 OK
my PRP my arg2 OK
pin NN pin arg2 OK
number NN number arg2 OK

so UH so ^ OK
i PRP i ^ OK
dialed VBN dialed ^ OK
in RP in ^ OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
i PRP i arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
put VBN put predicate OK
in RP in argM_loc OK
my PRP my arg1 OK
pin NN pin arg1 OK
number NN number arg1 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

and CC ^ ^ false_start
so UH ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like IN ^ ^ false_start
i PRP i arg0 OK
had VBD had ^ OK
reached VBN reached predicate OK
my PRP my arg1 OK
quota NN quota arg1 OK
of IN of arg1 OK
three CD three arg1 OK
calls NNS calls arg1 OK
which WDT which ^ OK
i PRP i arg0 OK
was VBD was ^ OK
n't RB n't ^ OK
expecting VBG expecting predicate OK
at RB at ^ OK
all RB all ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
they PRP they arg0 OK
put VBD put predicate OK
it PRP it arg1 OK
in RB in argM_loc OK
aga- RB ^ ^ repeat
again RB again ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
instead IN instead ^ OK
of IN of ^ OK
waiting VBG waiting predicate OK
for IN for arg1 OK
them PRP them arg0 OK
to TO to arg1 OK
call VB call arg1 OK
you PRP ^ ^ repeat
you PRP you arg0 OK
just RB just ^ OK
go VBP go predicate OK
and CC and ^ OK
do VBP do predicate OK
it PRP it ^ OK

i PRP ^ ^ false_start
did VBD ^ ^ false_start
um UH ^ ^ filler
would MD would ^ OK
you PRP you ^ OK
uh UH ^ ^ filler
commit VB commit ^ OK
perjury NN perjury ^ OK
ever RB ever ^ OK
to TO to ^ OK
leave VB leave ^ OK
the DT the ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
that DT that arg1 OK
was VBD was predicate OK
the DT the arg2 OK
one NN one arg2 OK
that WDT ^ ^ repeat
that WDT that arg2 OK
i PRP i arg0 OK
got VBD got arg2 OK
put VBN put arg2 OK
on IN on arg2 OK
hold NN hold arg2 OK

so UH ^ ^ filler
did VBD ^ ^ false_start
would MD would ^ OK
you PRP you arg0 OK
take VB take predicate OK
the DT the arg1 OK
million CD million arg1 OK
dollars NNS dollars arg1 OK

and CC ^ ^ false_start
it PRP it arg0 OK
was VBD was predicate OK
to TO to arg2 OK
never RB ^ ^ repeat
never RB never arg2 OK
see VB see arg2 OK
or NP-1 or arg2 OK
talk CC talk arg2 OK
to VB to arg2 OK
your IN your arg2 OK
best NP-1 best arg2 OK
friend PRP friend arg2 OK
again JJS again arg2 OK

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
could MD could ^ OK
n't RB n't ^ OK
survive VB survive predicate OK
without IN without arg1 OK
calling VBG calling arg1 OK
her PRP her arg1 OK

now UH now arg0 OK
was VBD ^ ^ false_start
a- DT ^ ^ false_start
an DT ^ ^ false_start
immediate- JJ ^ ^ false_start
both DT ^ ^ false_start
we PRP both arg0 false_start
of IN of ^ false_start
us PRP us ^ false_start
immediately RB immediately argM_tmp false_start
said VBD ^ ^ repeat
were VBD ^ ^ false_start
like RP said predicate false_start
no UH no arg1 OK
question NN ^ ^ false_start
were VBD for ^ false_start
the DT ^ ^ repeat
the DT the argM_loc false_start
p- JJ ^ ^ repeat
perjury NN perjury argM_loc false_start
question NN question argM_loc false_start

and CC ^ ^ false_start
then RB then ^ OK
we PRP we arg0 OK
were VBD ^ ^ false_start
like RP said predicate false_start
well UH well arg1 OK
what WP what arg1 OK
if IN if arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
like UH ^ ^ filler
your PRP your arg2 OK
son NN son arg2 OK
and CC and arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your arg2 OK
child NN child arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
y- XX ^ ^ false_start
w- XX ^ ^ false_start
the- PRP the arg1 false_start
i- XX ^ ^ false_start
circumstances NNS circumstances arg1 OK
were VBD were predicate OK
that IN that arg2 OK
if IN ^ ^ repeat
if IN if arg2 OK
you PRP you arg0 OK
did VBD did arg2 OK
n't RB n't arg2 OK
commit VB commit arg2 OK
perjury NN perjury arg1 OK
then RB then arg2 OK
they PRP they arg1 OK
'd MD 'd arg2 OK
like UH ^ ^ filler
be VB be arg2 OK
put VBN put arg2 OK
away RB away argM_loc OK
for IN for argM_tmp OK
a DT a argM_tmp OK
really RB really argM_tmp OK
long JJ long argM_tmp OK
time NN time argM_tmp OK

and CC ^ arg2 false_start
if IN ^ ^ false_start
they PRP ^ ^ false_start
just RB ^ ^ false_start
happe- VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg0 OK
was SBAR-1 was predicate OK
accidental VBD an ^ false_start
accidental VBD accident arg2 false_start
that JJ that arg2 OK
they IN they arg1 OK
were PRP were arg2 OK
in VBD in arg2 OK
the IN the arg2 OK
situation DT situation arg2 OK

hah UH ^ ^ filler
but CC ^ ^ false_start
computer NN computer arg1 OK
games NNS games arg1 OK
is VBZ are predicate false_start
kind RB kind arg2 OK
of RB of arg2 OK
easy JJ easy arg2 OK
compared VBN compared arg2 OK
to IN to arg2 OK
those DT those arg2 OK

i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
neighbor NN neighbor arg1 OK
that WDT who arg0 false_start
plays VBZ plays arg1 OK
computer NN computer arg1 OK
games NNS games arg1 OK
too RB too arg1 OK

um UH ^ ^ filler
i PRP ^ ^ false_start
've VBP ^ ^ false_start
never RB ^ ^ false_start
really RB ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
played VBN played predicate OK
computer NN computer arg1 OK
games NNS games arg1 OK
but CC but ^ OK
not RB not ^ OK
over IN over ^ OK
the DT the ^ OK
internet NNP internet ^ OK

i PRP ^ ^ false_start
've VBP ^ ^ false_start
never RB ^ ^ false_start
do- VBN ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
never RB never ^ OK
checked VBN checked predicate OK
into IN into arg1 OK
that DT that arg1 OK
at RB at ^ OK
all RB all ^ OK

because IN ^ ^ false_start
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
where WRB where arg2 OK
is VBZ is arg1 OK
exactly RB ^ predicate false_start
safe JJ safe arg1 OK

mm UH ^ ^ filler
that DT ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
honestly RB ^ ^ false_start
feel VBP feel predicate OK
it PRP it arg1 OK
something NN ^ ^ false_start
's BES 's arg1 OK
uh UH ^ ^ filler
personal JJ personal arg2 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
with IN ^ ^ repeat
with IN ^ ^ false_start
saddam NNP ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
everybody NN ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
thought VBD thought predicate OK
was VBD ^ ^ false_start
that WDT ^ ^ false_start
they PRP they arg0 OK
're VBP 're arg1 OK
supposed VBN supposed arg1 OK
to TO to arg1 OK
be VB be arg1 OK
looking VBG looking arg1 OK
for IN for arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
osama NNP ^ arg1 false_start
the DT ^ ^ false_start
person NN osama ^ false_start
bin NNP bin arg1 false_start
laden NNP laden arg1 false_start

and CC ^ ^ false_start
all DT all argM_tmp OK
of IN of argM_tmp OK
a DT a argM_tmp OK
sudden JJ sudden argM_tmp OK
i PRP i arg0 OK
hear VBP hear predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
saddam NNP saddam arg1 OK

it PRP it ^ OK
was VBD was ^ OK
just RB ^ ^ false_start
like IN like ^ OK
in IN in ^ OK

the DT ^ ^ false_start
thing NN ^ ^ false_start
is VBZ ^ ^ false_start
that IN ^ ^ false_start
right RB right argM_tmp OK
after IN after argM_tmp OK
september NNP september argM_tmp OK
eleventh JJ eleventh argM_tmp OK
it PRP ^ ^ repeat
's BES ^ ^ false_start
like IN ^ ^ filler
it PRP ^ ^ repeat
's BES ^ ^ false_start
it PRP it arg1 OK
just RB ^ ^ false_start
became VBD became predicate OK
like UH ^ ^ filler
a DT a arg2 OK
joke NN joke arg2 OK
to IN to ^ OK
some DT some ^ OK
people NNS people ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
send VB send arg1 OK
you PRP you arg2 OK
emails NNS emails arg1 OK
online RB online argM_loc OK

and CC ^ ^ false_start
they PRP they arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
realize VB realize predicate OK
that IN that arg1 OK
they PRP they arg0 OK
're VBP 're arg1 OK
affecting VBG affecting arg1 OK
the DT the arg0 OK
people NNS people arg0 OK
that WDT that arg1 OK
lost VBD lost arg1 OK
you PRP ^ ^ filler
know VBP ^ predicate filler

because IN ^ ^ false_start
i PRP i arg0 OK
have VBP have predicate OK
a DT ^ ^ repeat
um UH ^ ^ filler
a DT a arg1 OK
family NN family arg0 OK
member NN member arg0 OK
who WP who arg1 OK
lost VBD lost arg1 OK
her PRP ^ ^ repeat
a DT a arg1 OK
uh UH ^ ^ filler
best JJS best arg1 OK
friend NN friend arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
world NNP world argM_loc OK
trade NNP trade argM_loc OK
center NNP center argM_loc OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
the DT the arg0 OK
ones NNS ones arg0 OK
fighting VBG fighting arg2 OK
for IN for ^ OK
us PRP us ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
've VBP ^ ^ false_start
um UH ^ ^ filler
i PRP i arg1 OK
ended VBD ended predicate OK
up RP up arg_particl OK
going VBG going arg2 OK
out IN out arg4 OK
of IN of arg4 OK
state NN state arg4 OK
last JJ last argM_tmp OK
month NN month argM_tmp OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
just RB ^ ^ false_start
like UH ^ ^ filler
i PRP i arg1 OK
was VBD ^ ^ repeat
was VBD was ^ OK
just RB ^ ^ false_start
going VBG going predicate OK
crazy JJ crazy arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
b- XX ^ ^ repeat
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
any DT any arg1 OK
metal NN metal arg1 OK
objects NNS objects arg1 OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
they PRP they arg0 OK
said VBD said predicate OK
it PRP ^ ^ repeat
ha- VBZ ^ ^ repeat
it PRP it arg0 OK
has VBZ ^ ^ repeat
carries VBZ carries arg1 OK
a DT a arg1 OK
metal NN metal arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD was predicate OK
glad JJ glad arg2 OK
that IN that arg2 OK
they PRP they arg0 OK
did VBD did arg2 OK
that DT that arg1 OK

because IN because ^ OK
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like RP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
at RB at ^ OK
least RB least ^ OK
i PRP i ^ OK
know VBP know ^ OK

and CC ^ ^ false_start
how WRB how ^ OK
so RB so ^ OK

are VBP are ^ OK
eh UH ^ ^ filler
l- XX ^ ^ false_start

and CC ^ ^ false_start
but CC ^ ^ false_start
have VBP have ^ OK
you PRP you arg0 OK
done VBN done predicate OK
like UH ^ ^ filler
any DT any arg1 OK
special JJ special arg1 OK
training NN training arg1 OK
or CC ^ ^ false_start
anything NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
would MD would argM_mod OK
you PRP you arg1 OK
be VB be predicate OK
one CD one arg0 OK
of IN of arg0 OK
these DT these arg0 OK
people NNS people arg0 OK
to TO to arg2 OK
be VB ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
n- XX ^ ^ false_start
receive VB receive arg2 OK
the DT the arg1 OK
smallpox JJ smallpox arg1 OK
vaccine NN vaccine arg1 OK

um UH ^ ^ filler
how WRB ^ ^ repeat
has VBZ ^ ^ repeat
has ADVP-1 has ^ OK
it PRP ^ ^ repeat
it VBZ it arg0 OK
changed VBN ^ ^ repeat
changed PRP changed predicate OK
anything VBN anything arg1 OK
that NN that arg1 OK
we WDT we arg0 OK
've PRP 've arg1 OK
done VBP done arg1 OK

come VBP ^ ^ false_start
out RP ^ ^ false_start
with IN ^ ^ false_start
a DT ^ ^ false_start
warning NN ^ ^ false_start
n- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
and CC ^ ^ false_start
whenever WRB ^ ^ false_start
they PRP ^ ^ false_start
were VBD were ^ OK
c- VBG ^ ^ repeat
coming VBG coming predicate OK
out RP out arg_particl OK
with IN with arg1 OK
a DT a arg1 OK
warning NN warning arg1 OK
about IN about arg1 OK
trains NNS trains arg1 OK
and CC and ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
like UH ^ ^ filler
like UH ^ ^ filler
a DT a argM_tmp OK
month NN month argM_tmp OK
ago RB ago argM_tmp OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
and CC ^ ^ false_start
m- XX ^ ^ false_start
b- XX ^ ^ false_start
w- XX ^ ^ false_start
ah UH ^ ^ filler
oh UH ^ ^ filler
after IN after argM_tmp OK
the DT the argM_tmp OK
warning NN warning argM_tmp OK
came VBD came argM_tmp OK
out RP out argM_tmp OK
we PRP we arg0 OK
just RB ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
said VBD said predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
why WRB why arg1 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
you PRP you arg0 OK
just RB just argM_adverb OK
like UH ^ ^ filler
drive VB drive arg1 OK
tomorrow NN tomorrow argM_tmp OK
instead IN instead argM_discou OK
of IN of argM_discou OK
taking VBG taking argM_discou OK
the DT the arg1 OK
train NN train arg1 OK

eh UH ^ ^ filler
in IN ^ ^ repeat
in IN in ^ OK
what WDT what ^ OK
way NN way ^ OK

and CC ^ ^ false_start
in IN ^ ^ repeat
in IN in argM_discou OK
th- DT ^ ^ repeat
that DT that argM_discou OK
sense NN sense argM_discou OK
it PRP it arg1 OK
's HVS 's ^ OK
changed VBN changed predicate OK
a DT a arg2 OK
little JJ little arg2 OK
bit NN bit arg2 OK
for IN for arg2 OK
me PRP me arg2 OK
because IN because argM_cause OK
it PRP it arg1 OK
was VBD was arg3 OK
really RB really arg2 OK
cheap JJ cheap arg2 OK

for IN for argM_tmp OK
the DT the argM_tmp OK
immediate JJ immediate argM_tmp OK
time NN time argM_tmp OK
period NN period argM_tmp OK
after IN after argM_tmp OK
the DT the argM_tmp OK
terrorist JJ terrorist argM_tmp OK
attacks NNS attacks argM_tmp OK
all PDT all arg1 OK
the DT the arg1 OK
prices NNS prices arg1 OK
went VBD went predicate OK
down RB down argM_dir OK

and CC ^ ^ false_start
so RB ^ ^ filler
i PRP i arg0 OK
got VBD got predicate OK
on IN ^ ^ false_start
to IN ^ ^ repeat
to IN onto ^ false_start
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a arg1 OK
plane NN plane arg1 OK
probably RB probably argM_adverb OK
when WRB when argM_tmp OK
i PRP i arg0 OK
would MD would argM_mod OK
n't RB n't argM_neg OK
have VB have ^ OK
because ADVP-TMP- 1 because argM_cause OK
it IN it arg1 OK
was PRP was argM_cause OK
just VBD just arg2 OK
so RB so arg2 OK
incredibly RB incredibly arg2 OK
cheap RB cheap arg2 OK

how WRB ^ ^ false_start
about IN ^ ^ false_start
have VBP have ^ OK
any DT ^ arg0 false_start
they PRP any ^ false_start
members NNS ^ arg0 false_start
they PRP members ^ false_start
of IN ^ arg0 false_start
they PRP of ^ false_start
your PRP ^ arg0 false_start
they PRP your ^ false_start
family NN ^ arg0 false_start
they PRP family ^ false_start
changed VBN changed predicate OK
anything NN anything arg1 OK

anybody NN anybody ^ OK
that WDT that ^ OK
you PRP you ^ OK
know VBP know ^ OK
personally RB personally ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
in IN in ^ OK
in IN _ARG_ ^ false_start

whenever UNK whenever ^ OK
i UNK i ^ OK
read UNK read ^ OK
in UNK in ^ OK
popular UNK popular ^ OK
media UNK media ^ OK
about UNK about ^ OK
how UNK how ^ OK
it UNK it ^ OK
's UNK 's ^ OK
making UNK making ^ OK
everybody UNK everybody ^ OK
think UNK think ^ OK
and UNK and ^ OK
do UNK do ^ OK
things UNK things ^ OK
differently UNK differently ^ OK
and UNK and ^ OK
celebrate UNK celebrate ^ OK
holidays UNK holidays ^ OK
differently UNK differently ^ OK

and UNK ^ ^ false_start
do UNK ^ ^ false_start
this UNK ^ ^ false_start
differently UNK ^ ^ false_start
i UNK ^ ^ repeat
i UNK i arg0 OK
did UNK ^ ^ repeat
n't UNK ^ ^ repeat
never UNK never argM_neg OK
really UNK ^ ^ repeat
really UNK really argM_adverb OK
felt UNK felt predicate OK
that UNK that arg1 OK

i PRP i arg0 OK
bet VBP bet predicate OK
that IN that arg1 OK
that DT that arg1 OK
would MD would argM_mod OK
be VB be predicate OK
be VB _ARG_ arg1 false_start

they PRP they arg1 OK
were VBD were predicate OK
lucky JJ lucky arg2 OK
that IN that arg2 OK
they PRP they arg1 OK
were VBD were arg2 OK
stuck VBN stuck arg2 OK
at IN ^ ^ repeat
at IN ^ ^ repeat
at IN at arg2 OK
friend NN friend arg0 OK
's POS 's arg0 OK
house NN house arg0 OK
as IN as arg2 OK
opposed VBN opposed arg2 OK
to IN to arg2 OK
a DT a arg1 OK
terrible JJ terrible arg1 OK
hotel NN hotel arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

i PRP i arg0 false_start
think VBP think predicate false_start
my PRP my arg1 OK
parents NNS parents arg1 OK
were VBD were arg1 OK
supposed VBN supposed arg1 OK
to TO to arg2 OK
fly VB fly arg2 OK
out RB out argM_loc OK
to IN to argM_loc OK
europe NNP europe argM_loc OK
the DT the argM_tmp OK
following VBG following argM_tmp OK
september NNP september argM_tmp OK
twelfth JJ twelfth argM_tmp OK

so UH ^ ^ filler
a DT ^ ^ repeat
a DT a arg1 OK
lot NN ^ ^ repeat
lot NN lot arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
things NNS things arg1 OK
that WP that arg1 OK
involved VBD involved arg1 OK
travel NN travel arg1 OK
obviously RB obviously argM_adverb OK
changed VBN changed predicate OK
immediately RB immediately argM_tmp OK
in IN in argM_loc OK
our PRP our argM_loc OK
work NN work argM_loc OK
place NN place argM_loc OK

and CC ^ ^ false_start
all DT all ^ OK
of IN of ^ OK
that DT that ^ OK
got VBD got ^ OK
got VBD _ARG_ ^ false_start

and CC ^ ^ false_start
then RB then ^ OK
the DT ^ ^ repeat
the DT the ^ OK
economic JJ economic ^ OK
changes NNS changes ^ OK

and CC ^ ^ false_start
they PRP they arg0 OK
wi- XX ^ ^ false_start
had VBD had predicate OK
a DT ^ ^ repeat
an DT an arg1 OK
immediate JJ immediate arg1 OK
moratorium NN moratorium arg1 OK
on IN on arg1 OK
travel NN travel arg1 OK
and CC ^ ^ false_start
things NNS ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

so UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg0 OK
's HVS ^ ^ repeat
's HVS 's ^ OK
pretty RB ^ ^ false_start
much RB ^ ^ false_start
changed VBN changed predicate OK
things NNS things arg1 OK

wow UH ^ ^ filler
how WRB how ^ OK
come VB come ^ OK

why WRB why ^ OK
not RB not ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
got VBD got ^ OK
booze NN booze ^ OK
legal JJ legal ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
sh- XX sh- ^ OK

why WRB why ^ OK
not RB not ^ OK

i PRP i ^ OK
eith- RB eith- ^ OK

but CC but ^ OK
ah UH ^ ^ filler
i PRP i ^ OK
've VBP 've ^ OK
had VBN had ^ OK
friends NNS friends ^ OK
who WP who ^ OK
went VBD went ^ OK
to IN to ^ OK
amsterdam NNP amsterdam ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
say VBP say ^ OK
that IN that ^ OK
you PRP ^ ^ repeat
kno- VBP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
about IN about ^ OK
amsterdam NNP amsterdam ^ OK
and CC and ^ OK
an- XX ^ ^ false_start
all PDT all ^ OK
its PRP its ^ OK
legalizations NNS legalizations ^ OK

well UH ^ ^ filler
they PRP they ^ OK
say VBP say ^ OK
that DT that ^ OK
place NN place ^ OK
is VBZ is ^ OK
just RB just ^ OK
like IN like ^ OK
bunch NN a ^ false_start
bunch NN bunch ^ OK
of IN of ^ OK
space NN space ^ OK
cadets NNS cadets ^ OK
walking VBG walking ^ OK
around RB around ^ OK

so UH so ^ OK
maybe RB maybe ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
would MD would ^ OK
have VB have ^ OK
a DT a ^ OK
bad JJ bad ^ OK
effect NN effect ^ OK
on IN on ^ OK
society NN society ^ OK
if IN if ^ OK
make VB it ^ false_start
make VB makes ^ false_start
them PRP them ^ OK
a DT a ^ OK
bunch NN bunch ^ OK
of IN of ^ OK
uh UH ^ ^ filler

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
from IN ^ ^ false_start
right RB right ^ OK
now RB now ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
in IN in ^ OK
new NNP new ^ OK
jersey NNP jersey ^ OK

in IN in ^ OK
a DT a ^ OK
couple NN couple ^ OK
days NNS days ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
aloha NN aloha ^ OK
bound JJ bound ^ OK
for IN for ^ OK

for IN ^ ^ repeat
for IN for ^ OK
the DT the ^ OK
whole JJ whole ^ OK
winter NN winter ^ OK

so UH so ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
pretty RB pretty ^ OK
stoked JJ stoked ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
on IN ^ ^ repeat
in IN in ^ OK
brig- NNP ^ ^ repeat
brigantine NNP brigantine ^ OK

b- NN ^ ^ repeat
board NN board ^ OK
walk NN walk ^ OK
is VBZ is ^ OK
so RB so ^ OK
great JJ great ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
there RB there ^ OK

oh UH ^ ^ filler
well UH ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
worked VBD worked ^ OK
for IN for ^ OK
the DT the ^ OK
company NN company ^ OK
that WDT ^ ^ repeat
that WDT ^ ^ repeat
that WDT that ^ OK
does VBZ does ^ OK
the DT the ^ OK
research NN research ^ OK
before RB before ^ OK

and CC ^ ^ false_start
m- PRP ^ ^ false_start
m- PRP ^ ^ false_start
actually UH actually ^ OK
my PRP my ^ OK
brother NN brother ^ OK
and CC ^ ^ false_start
he PRP ^ ^ false_start
c- XX ^ ^ false_start
he PRP ^ ^ false_start
ah UH ^ ^ filler
offered VBD offered ^ OK
this DT this ^ OK
participation NN participation ^ OK
to IN to ^ OK
me PRP me ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
hire VB hire predicate OK
a DT a arg1 OK
bunch NN bunch arg1 OK
of IN of arg1 OK
drunks NNS drunks arg1 OK
like IN like arg1 OK
myself PRP myself arg1 OK
and CC and ^ OK
just RB just ^ OK
get VB get predicate OK
hammered VBN hammered arg1 OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

huh-uh UH huh-uh ^ OK

because UH ^ ^ false_start
i PRP ^ ^ repeat
've VBP ^ ^ repeat
i PRP ^ ^ repeat
've VBP ^ ^ repeat
i ADVP-MNR- 1 i arg0 OK
uh UH ^ ^ filler
uh UH ^ ^ filler
um UH ^ ^ filler
ach UH ^ ^ filler
how WRB ^ ^ filler
to TO ^ ^ filler
put VB ^ ^ filler
it PRP ^ ^ filler
i ADVP-MNR- 1 've ^ false_start
never RB ^ ^ repeat
never RB ^ ^ repeat
never PRP never argM_neg OK
really RB ^ ^ repeat
really RB really ^ OK
thought RB thought predicate OK
about VBD about arg2 OK
something IN something arg2 OK
like NN like arg2 OK
this IN this arg2 OK
because DT because ^ OK
i IN i arg0 OK
've PRP 've ^ OK
never VBP never argM_neg OK
been RB been predicate OK
into VBN ^ ^ false_start
entrepreneurial IN entrepreneuri al arg2 OK
enough JJ enough arg2 OK
to RB ^ ^ repeat
to TO to arg2 OK
like TO ^ ^ filler
think UH think arg2 OK
up VB up arg1 OK
some RP some arg1 OK
sort DT sort arg1 OK
of NN of arg1 OK
business IN business arg1 OK
plan NN plan arg1 OK
or NN ^ ^ false_start
anything CC ^ ^ false_start

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when argM_tmp OK
money NN money argM_tmp OK
's BES 's argM_tmp OK
no DT no argM_tmp OK
object NN object argM_tmp OK
i ADVP-TMP- 1 ^ ^ filler
mean PRP ^ ^ filler
i VBP i arg0 OK
guess PRP guess predicate OK
i VBP i arg1 OK
could PRP could arg1 OK
be MD be arg1 OK
a VB ^ ^ false_start
just DT just arg2 OK
the RB the arg2 OK
stupid DT stupid arg2 OK
oaf JJ oaf arg2 OK
that NN that arg2 OK
i WDT i arg0 OK
am PRP am arg2 OK
and VBP and arg2 OK
actually NP-PRD-2 actually arg2 OK
still CC still arg2 OK
succeed RB succeed arg2 OK
right RB ^ predicate filler

but CC ^ ^ repeat
m- RB ^ ^ repeat
m- RB ^ ^ repeat
but CC ^ ^ false_start
m- RB ^ ^ repeat
m- RB ^ ^ repeat
mainly RB ^ ^ false_start
doesn- VBP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
is VBZ ^ ^ repeat
is VBZ ^ ^ false_start
that DT ^ ^ repeat
that DT ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
coming VBG ^ ^ false_start
from IN ^ ^ false_start
you PRP ^ ^ repeat
you PRP you arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
a DT a arg1 OK
financial JJ financial arg1 OK
interest NN interest arg1 OK
in IN in argM_loc OK
this DT this argM_loc OK
right UH ^ ^ filler

you PRP you ^ OK
th- XX th- ^ OK

it PRP it arg2 OK
's BES 's predicate OK
kind RB ^ ^ false_start
a DT ^ ^ false_start
weird JJ weird arg2 OK
to RB to ^ OK
to RB _ARG_ arg2 false_start

he PRP he arg2 OK
's BES 's predicate OK
ah UH ^ ^ filler
kind RB ^ ^ false_start
of RB ^ ^ false_start
from IN from arg2 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
somewhere RB somewhere arg2 OK
texas NNP in ^ false_start
texas NNP texas arg2 false_start

remember VB _ARG_ arg0 false_start
remember VB remember predicate OK
when WRB when argM_tmp OK
his PRP his arg1 OK
daughter NN daughter arg1 OK
got VBD got arg1 OK
ah UH ^ ^ filler
caught VBN caught arg1 OK
with IN in arg2 false_start
uh UH ^ ^ filler
well UH ^ ^ filler
restaurants NNS restaurants arg2 OK
in IN in arg2 OK
austin NNP austin arg2 OK
drinking VB ^ ^ repeat
drinking VBG drinking arg2 OK
alcohol NN alcohol arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

but CC but argM_discou OK
ah UH ^ ^ filler
i PRP i arg1 OK
do VBP do ^ OK
n't RB n't argM_neg OK
swing VB swing predicate OK
either DT either argM_dir OK
way NN way argM_dir OK

but CC ^ ^ false_start
uh UH ^ ^ filler
family NN family arg1 OK
's BES 's predicate OK
important JJ important arg2 OK
though RB ^ ^ false_start
man UH ^ ^ false_start
because IN because argM_cause OK
without IN without argM_mnr OK
them PRP them argM_mnr OK
man UH ^ ^ false_start
going VBG going argM_cause OK
through IN through arg_particl OK
a DT a arg1 OK
d. NN d. arg1 OK
w. NN w. arg1 OK
i. NN i. arg1 OK
would MD would argM_mod OK
really RB really argM_adverb OK
suck VB suck argM_cause OK

no DT no ^ OK
matter NN matter ^ OK
what WDT what ^ OK
of IN ^ ^ false_start
a DT ^ ^ false_start
dumb-ass JJ dumb-ass ^ OK
decision NN decision ^ OK
you PRP you ^ OK
make VBP make ^ OK

i PRP i arg0 OK
've VBP 've ^ OK
been VBN been predicate OK
to IN to arg2 OK
crested NNP crested arg2 OK
butte NNP butte arg2 OK

and CC ^ ^ false_start
ah UH ^ ^ filler
that DT ^ ^ repeat
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
the DT the arg2 OK
only JJ only arg2 OK
places NNS place arg2 false_start
i PRP i arg1 OK
've VBP 've arg2 OK
been VBN been arg2 OK

actually RB actually argM_adverb OK
ah UH ^ ^ filler
i PRP i arg0 OK
was VBD was ^ OK
going VBG going argM_mod OK
to TO to argM_mod OK
tell VB tell predicate OK
you PRP you arg2 OK
about IN about arg1 OK
family NN family arg1 false_start

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
really RB really argM_adverb OK
consider VB consider predicate OK
anybody NN anybody arg1 OK
family NN family arg1 OK
here RB here argM_loc OK

man UH ^ ^ false_start
we PRP ^ ^ repeat
we PRP we arg0 OK
had VBD ^ ^ repeat
had VBD had predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
falling NN falling arg1 OK
out RP out arg1 OK

i PRP ^ ^ repeat
totally RB ^ ^ repeat
i PRP i arg0 OK
totally RB ^ ^ false_start
thought VBD thought predicate OK
i PRP ^ ^ false_start
was VBD ^ ^ false_start
like RP ^ ^ false_start
she PRP she arg1 OK
was VBD was arg1 OK
going VBG going argM_mod OK
to TO to argM_mod OK
be VB be arg1 OK
the DT the arg2 OK
one CD one arg2 OK

man UH ^ ^ false_start
i PRP i ^ OK
wou- MD wou- ^ OK

her PRP her arg0 OK
older JJR older arg0 OK
he PRP ^ ^ false_start
brother NN ^ ^ repeat
brother NN brother arg0 OK
he PRP ^ ^ false_start
man UH ^ ^ false_start
loved VBD loved predicate OK
me PRP me arg1 OK

and CC ^ ^ false_start
he PRP ^ ^ repeat
he PRP ^ ^ repeat
he PRP he arg1 OK
was VBD ^ ^ repeat
's BES 's predicate OK
ac- RB ^ ^ repeat
actually RB actually argM_adverb OK
younger JJR younger arg2 OK
than IN than arg2 OK
me PRP me arg2 OK

and CC ^ ^ false_start
ah UH ^ ^ filler
he PRP he arg1 OK
's BES 's predicate OK
only RB only argM_adverb OK
a DT a arg2 OK
year NN year arg2 OK
younger JJR younger arg2 OK
than IN than arg2 OK
me PRP me arg2 OK
though RB ^ ^ false_start

but CC ^ ^ false_start
uh UH ^ ^ filler
really UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
used VBD used argM_mod OK
to TO to argM_mod OK
go VB go argM_mod OK
babysit VB babysit predicate OK
thei- PRP ^ ^ repeat
her PRP her arg1 OK
little JJ little arg1 OK
brother NN brother arg1 OK
and CC and arg1 OK
sister NN sister arg1 OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK
and CC and ^ OK
play VB play predicate OK
with IN with arg1 OK
them PRP them arg1 OK

and CC ^ ^ false_start
man UH ^ ^ false_start
i PRP ^ ^ repeat
alwa- RB ^ ^ false_start
i PRP i arg1 OK
'd MD ^ ^ repeat
'd MD 'd argM_mod OK
be VB be predicate OK
there RB there arg2 OK
everyday RB everyday arg2 OK
just RB ^ ^ false_start
about RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
after IN after arg2 OK
work NN work arg2 OK

do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
row VB row predicate OK

i PRP i arg0 OK
remember VBP remember predicate OK
i PRP i arg1 OK
used VBD used arg1 OK
to TO to arg2 OK
go VB go arg2 OK
rowing VBG rowing arg2 OK
in IN in argM_loc OK
the DT the argM_loc OK
lake NN lake argM_loc OK
in IN in argM_loc false_start
prospect NNP prospect argM_loc OK
park NNP park argM_loc OK

or CC or ^ OK
in IN ^ ^ repeat
in IN in ^ OK
central NNP central ^ OK
park NNP park ^ OK

the DT the ^ OK

how WRB how ^ OK
about IN about ^ OK
roller NN roller ^ OK
skating NN skating ^ OK

i PRP ^ ^ false_start
l- VBP ^ ^ false_start
and CC and ^ OK
and CC ^ ^ false_start
uh UH ^ ^ filler
of IN of ^ OK
course NN course ^ OK
jogging NN jogging ^ OK

i PRP i arg0 OK
get VBP get predicate OK
up RP up arg_particl OK
up RP and ^ false_start
uh UH ^ ^ filler
i PRP i arg1 OK
go VBP go predicate OK
to IN to arg4 OK
the DT the arg4 OK
gym NN gym arg4 OK
at IN at argM_tmp OK
five CD five argM_tmp OK
o'clock RB o'clock argM_tmp OK
every DT every argM_tmp OK
morning NN morning argM_tmp OK

th- XX ^ ^ false_start
but CC ^ ^ repeat
th- XX ^ ^ false_start
but CC ^ ^ false_start
i PRP i arg1 OK
have VBP have ^ OK
to TO to ^ OK
do VB do predicate OK
it PRP it arg2 OK
on IN on argM_loc OK
the DT the argM_loc OK
treadmill NN treadmill argM_loc OK
because IN because ^ OK
everything NN everything arg1 OK
is VBZ is predicate OK
so RB so arg2 OK
far RB far arg2 OK
from IN ^ ^ false_start
one CD ^ ^ false_start
another DT ^ ^ false_start
here RB here arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
used VBD ^ ^ false_start
to TO ^ ^ false_start
do VB ^ ^ false_start
is NP-1 ^ ^ false_start
ah VBZ ^ ^ filler
i UH i arg0 OK
used PRP used ^ OK
to VBD to ^ OK
jog TO jog predicate OK
around VB around argM_loc OK
a IN a argM_loc OK
ah DT ^ ^ filler
baseball UH baseball argM_loc OK
diamond NN diamond argM_loc OK
about NN ^ ^ false_start
a IN ^ ^ false_start
and DT and ^ OK
uh CC ^ ^ filler
jog UH jog ^ OK
and VB and ^ OK
then CC then ^ OK
walk RB walk ^ OK
you VB ^ ^ filler
know PRP ^ ^ filler
intermittently VBP intermittentl y  ^ OK

and CC ^ arg3 false_start
then RB then ^ OK
i PRP i arg0 OK
got VBD got predicate OK
a DT a arg1 OK
heel NN heel arg1 OK
spur NN spur arg1 OK
because IN because ^ OK
i PRP i arg1 OK
went VBD went predicate OK
from IN from arg2 OK
soft JJ soft arg2 OK
pave NN paved arg2 false_start
to IN to arg3 OK
hard JJ hard arg3 OK
pave NN paved ^ false_start
pave NN _NOUN_ arg3 false_start

but CC ^ ^ false_start
then RB ^ ^ false_start
that DT ^ ^ repeat
that DT that arg1 OK
's HVS 's predicate OK
gone VBN gone arg2 OK

so UH ^ ^ false_start
w- XX ^ ^ false_start
you PRP you arg0 OK
live VBP live predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
city NN city argM_loc OK
proper JJ proper argM_loc OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
as IN ^ ^ false_start
a DT ^ ^ false_start
matter NN ^ ^ false_start
of IN ^ ^ false_start
fact NN ^ ^ false_start
i PRP ^ ^ false_start
used VBD ^ ^ false_start
to TO ^ ^ false_start
y- XX ^ ^ false_start
i PRP i arg0 OK
had VBD had predicate OK
a DT ^ ^ repeat
a DT a arg0 OK
club NN club arg0 OK
that WDT that arg1 OK
met VBD met arg1 OK
every DT every argM_tmp OK
morning NN morning argM_tmp OK
at IN at argM_tmp OK
six CD six argM_tmp OK
o'clock RB o'clock argM_tmp OK

we PRP we arg0 OK
used VBD used predicate OK
to TO to arg_particl OK
run VB run predicate OK
run VB on arg1 false_start
the DT the arg1 OK
promenade NN promenade arg1 OK
in IN in arg1 OK
brooklyn NNP brooklyn arg1 OK
heights NNPS heights arg1 OK
and CC and arg1 OK
then RB ^ ^ false_start
over IN ^ ^ repeat
over IN over arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
brooklyn NNP brooklyn arg1 OK
bridge NNP bridge arg1 OK

uh UH ^ ^ filler
so UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
miss VB miss predicate OK
new NNP new arg1 OK
york NNP york arg1 OK

eh UH ^ arg1 filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
eh UH ^ ^ filler
do VB do ^ OK
you PRP you arg0 OK
have VB have predicate OK
family NN a ^ false_start
family NN family arg1 OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
absolutely RB absolutely ^ OK
the DT the arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
stuff NN stuff arg2 OK
that WDT that ^ OK
i PRP i arg0 OK
also RB also ^ false_start
love VBP love predicate OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
what WP what arg1 OK
's BES 's arg2 OK
missing JJ missing arg2 OK
here RB here argM_loc OK
in IN in argM_loc OK
california NNP california argM_loc OK

because IN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP you arg0 OK
walk VBP walk predicate OK

uh UH ^ ^ filler
ah UH ^ ^ filler
i PRP ^ ^ false_start
my PRP my arg1 OK
office NN office arg1 OK
used VBD used ^ OK
to TO to ^ OK
be VB be predicate OK
on IN on arg2 OK
uh UH ^ ^ filler
sixtieth NNP sixtieth arg2 OK
street NNP street arg2 OK
between IN between arg2 OK
lex NNP lex arg2 OK
and CC and arg2 OK
park NNP park arg2 OK

and CC ^ ^ false_start
ah UH ^ ^ filler
i PRP i arg0 OK
used VBD used ^ OK
to TO to ^ OK
walk VB walk predicate OK
all RB all arg1 OK
over IN over arg1 OK
the DT ^ ^ false_start
place NN ^ ^ false_start

my PRP my arg1 OK
office NN office arg1 OK
was VBD was predicate OK
on IN on arg2 OK
lexington NNP lexington arg2 OK
avenue NNP avenue arg2 OK
and CC and arg2 OK
thirtieth NNP thirtieth arg2 OK
street NNP street arg2 OK
then RB then argM_tmp false_start

i PRP i arg0 OK
walked VBD walked predicate OK
from IN from arg1 OK
there RB there arg1 OK
over IN ^ ^ false_start
to IN ^ ^ false_start
over IN over arg1 OK
the DT ^ ^ false_start
the DT the arg1 OK
brooklyn NNP ^ ^ false_start
brooklyn NNP brooklyn arg1 OK
bridge NNP ^ ^ false_start
bridge NNP bridge arg1 OK
because IN because ^ OK
nothing NN nothing arg0 repeat
nothing NN ^ ^ OK
there EX ^ ^ false_start
was VBD was arg0 false_start
running VBG running predicate OK
or CC or ^ OK
working VBG working predicate OK

w- NN ^ ^ repeat
where WRB where arg2 OK
are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 false_start
originally RB originally ^ OK

as IN ^ ^ false_start
a DT ^ ^ false_start
matter NN ^ ^ false_start
of IN ^ ^ false_start
fact NN ^ ^ false_start
i PRP i ^ OK
remember VBP remember ^ OK
ah UH ^ ^ filler
when WRB when ^ OK
the DT the ^ OK
day NN day ^ OK
and ADVP-TMP- 1 and ^ OK
the CC the ^ OK
wind DT wind ^ OK
was VBD ^ ^ repeat
was NN were ^ OK
right JJ ^ ^ repeat
right VBD right ^ OK
ah JJ ^ ^ filler
mccormick ADVP-TMP- 1 mccormick ^ OK
's UH 's ^ OK
whatever NNP whatever ^ OK
they POS they ^ OK
were WP were ^ OK
doing PRP doing ^ OK
that VBD that ^ OK
day VBG day ^ OK

eh UNK eh ^ OK

as IN ^ ^ false_start
a DT ^ ^ false_start
matter NN ^ ^ false_start
of IN ^ ^ false_start
fact NN ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
remember VBP remember predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
mechanic NN mechanic arg1 OK
's POS 's arg1 OK
theater NN theater arg1 OK

in IN in argM_loc false_start
whi- WDT ^ ^ repeat
which WDT ^ ^ repeat
which WDT which argM_loc OK
area NN ^ ^ repeat
area NN area argM_loc OK
do VBP do ^ OK
you PRP you arg0 OK
live VB live predicate OK

that DT that arg1 OK
's BES 's predicate OK
not RB not arg2 OK
far RB far arg2 OK
from IN from arg2 OK
beth NNP beth arg2 OK
israel NNP israel arg2 OK
hospital NNP hospital arg2 OK
on IN on arg2 OK
second NNP second arg2 OK
ave NNP ave arg2 OK

i PRP i ^ OK
know VBP know ^ OK
where WRB where ^ OK
that DT that ^ OK

beyond UNK beyond ^ OK
a. UNK a. ^ OK
b. UNK b. ^ OK
and UNK and ^ OK
c. UNK c. ^ OK

the DT the arg2 OK
reality NN reality arg2 OK
of IN of arg2 OK
it PRP it arg2 OK
is VBZ is predicate OK
i- XX ^ ^ false_start
that IN that arg1 OK
is VBZ ^ ^ false_start
n't RB ^ ^ false_start
i PRP i arg0 OK
uh UH ^ ^ filler
it PRP ^ ^ false_start
did VBD did arg1 OK
n't RB n't argM_neg OK
open VB open arg1 OK
it PRP it arg1 OK
with IN with arg2 OK
a DT a arg2 OK
vast JJ vast arg2 OK
amount NN amount arg2 OK
of IN of arg2 OK
money NN money arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
often RB often argM_tmp OK
thought VBN thought predicate OK
it PRP it arg1 OK
would S-1 would argM_mod OK
be MD be arg1 OK
fun VB fun arg2 OK
t- JJ ^ ^ false_start
uh TO ^ ^ filler
to UH to arg2 OK
uh TO ^ ^ filler
open UH open arg2 OK
a VB a arg1 OK
restaurant DT restaurant arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
tha- XX ^ ^ repeat
the DT ^ ^ repeat
the DT the arg1 OK
difficulty NN difficulty arg1 OK
often RB often argM_tmp OK
is VBZ is arg1 OK
that IN that arg2 OK
if IN ^ ^ repeat
uh UH ^ ^ filler
if IN if argM_adverb OK
you PRP ^ ^ repeat
you PRP you arg1 OK
go VBP go arg2 OK
into IN into argM_loc OK
it PRP it argM_loc OK
uh UH ^ ^ filler
and CC and arg2 OK
you PRP you arg0 OK
're VBP 're arg2 OK
doing VBG doing arg2 OK
the DT the arg1 OK
cooking NN cooking arg1 OK
or CC or arg2 OK
you PRP you arg1 OK
're VBP 're arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
part NN part arg2 OK
of IN of arg2 OK
it PRP it arg2 OK
every DT every arg2 OK
day NN day arg2 OK
you PRP you arg0 OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
leave VB leave arg2 OK
and CC and arg2 OK
go VB go arg2 OK
on RP on arg4 OK
to IN to arg4 OK
another DT another arg4 OK
business NN business arg4 OK

so UH ^ ^ filler
i- PRP ^ ^ repeat
it PRP it arg0 OK
means VBZ means predicate OK
that IN that arg1 OK
you PRP you arg1 OK
've VBP 've arg1 OK
got VBN got argM_mod OK
to TO to argM_mod OK
be VB be arg1 OK
there RB there arg2 OK
early RB early argM_tmp OK

you PRP ^ ^ false_start
've VBP ^ ^ false_start
got VBN ^ ^ false_start
to TO ^ ^ false_start
it PRP it arg0 OK
burns VBZ burns predicate OK
you PRP you arg1 OK
out RP out arg_particl OK
fairly RB fairly argM_mnr OK
quickly RB quickly argM_mnr OK

including VBG including ^ OK
a DT ^ ^ repeat
a DT ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
what WP ^ ^ false_start
do VBP ^ ^ false_start
they PRP ^ ^ false_start
call VB ^ ^ false_start
it PRP ^ ^ false_start
a NP-PRD-1 a ^ OK
sous DT sous ^ OK
chef JJ chef ^ OK
uh NN ^ ^ filler
s- UH ^ ^ repeat
somebody SYM somebody ^ OK
to NN to ^ OK
help TO help ^ OK
you VB you ^ OK
with PRP with ^ OK
your IN your ^ OK
cooking PRP cooking ^ OK
or NN or ^ OK
me CC me ^ OK
with PRP with ^ OK
my IN my ^ OK
cooking PRP cooking ^ OK

that UNK ^ ^ false_start
's UNK ^ ^ false_start
what UNK ^ ^ false_start
i UNK i arg0 OK
would UNK would argM_mod OK
like UNK like predicate OK
to UNK to arg1 OK
do UNK ^ ^ false_start
would UNK ^ ^ false_start
be UNK ^ ^ false_start
to UNK ^ ^ repeat
to UNK ^ ^ false_start
design UNK design arg1 OK
the UNK the arg0 OK
menu UNK menu arg0 OK
to UNK ^ ^ repeat
to UNK to arg3 OK
work UNK work arg3 OK
with UNK with arg3 OK
the UNK the arg3 OK
chef UNK chef arg3 OK
in UNK ^ ^ repeat
in UNK in arg1 OK
preparing UNK preparing arg1 OK
uh UNK ^ ^ filler
the UNK the arg1 OK
dishes UNK dishes arg1 OK
and UNK and arg1 OK
knowing UNK knowing arg1 OK
just UNK just argM_adverb OK
what UNK what arg2 OK
the UNK the arg1 OK
recipes UNK recipes arg1 OK
are UNK are arg1 OK
and UNK and arg1 OK
designing UNK designing arg1 OK
the UNK ^ ^ repeat
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
the UNK ^ ^ repeat
the UNK the arg1 OK
restaurant UNK restaurant arg1 OK
and UNK and arg1 OK
what UNK what arg1 OK
it UNK it arg0 OK
looks UNK looks arg1 OK
like UNK like arg1 OK

i UNK i arg0 OK
think UNK think predicate OK
i UNK i arg0 OK
'd UNK 'd argM_mod OK
have UNK have arg1 OK
more UNK more argM_extent OK
fun UNK fun arg1 OK
being UNK being arg1 OK
the UNK the arg2 OK
maitre UNK maitre arg2 OK
d' UNK d' arg2 OK
socializing UNK socializing arg2 OK
with UNK with argM_mnr OK
people UNK people argM_mnr OK
and UNK and arg2 OK
recommending UNK recommending arg2 OK
this UNK this arg1 OK
dish UNK dish arg1 OK
or UNK ^ ^ false_start
whatever UNK ^ ^ false_start

hm UH ^ ^ filler
mm UH ^ ^ filler
mm UH ^ ^ filler
no UH no ^ OK

although RB although argM_discou OK
eh UH ^ ^ filler
eh UH ^ ^ filler
m UH ^ ^ filler
just RB ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
by IN ^ ^ false_start
r- XX ^ ^ false_start
i PRP i arg0 OK
suppose VBP suppose predicate OK
uh UH ^ ^ filler
w- NN ^ ^ repeat
what WP what arg1 OK
gets VBZ gets arg1 OK
me PRP me arg1 OK
thinking VBG thinking arg1 OK
about IN about arg1 OK
it PRP it arg1 OK
is VBZ is arg1 OK
that IN that arg2 OK
uh UH ^ ^ filler
i PRP i arg0 OK
do VBP do arg2 OK
all PDT all arg1 OK
the DT the arg1 OK
cooking NN cooking arg1 OK
in IN in arg1 OK
the DT the arg1 OK
family NN family arg1 OK

so UH ^ ^ false_start
uh UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i arg0 OK
love VBP love predicate OK
to TO to arg1 OK
cook VB cook arg1 OK

like IN ^ ^ filler
you PRP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
see VBP see predicate OK
myself PRP myself arg1 OK
as IN as arg1 OK
being VBG being arg1 OK
the DT the arg2 OK
cook NN cook arg2 OK

but CC but argM_discou OK
i PRP i arg0 OK
can MD can argM_mod OK
also RB also argM_discou OK
see VB see predicate OK
myself PRP myself arg1 OK
burning VBG burning arg1 OK
out RP out arg_particl OK
very RB very argM_extent OK
quickly RB quickly argM_extent OK
if IN if argM_adverb OK
that DT that arg1 OK
's BES 's arg1 OK
all DT all arg1 OK
i PRP i arg0 OK
was VBD was arg2 OK
doing VBG doing arg2 OK
day NN day argM_tmp OK
in RB in argM_tmp OK
and CC and argM_tmp OK
day NN day argM_tmp OK
out RB out argM_tmp OK
year NN year argM_tmp OK
round RB round argM_tmp OK

but CC ^ ^ false_start
you PRP you arg0 OK
think VBP think predicate OK
you PRP you arg0 OK
'd MD 'd argM_mod OK
rather RB rather argM_adverb OK
run SBAR-2 run arg1 OK
a VB a arg1 OK
restaurant DT restaurant arg1 OK
than NN ^ ^ repeat
than IN than argM_extent OK
do IN do argM_extent OK
catering VBP catering arg1 OK

that DT that ^ OK
's BES 's ^ OK

eh UH ^ ^ filler
right UH right ^ OK

or CC or ^ OK
the DT the ^ OK

um UH ^ ^ filler
it PRP ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
the DT the ^ OK
weather NN weather ^ OK
can MD can ^ OK
very VB vary ^ false_start
greatly RB greatly ^ OK

like UH ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
even RB even ^ OK
in IN in ^ OK
january NNP january ^ OK
we PRP we ^ OK
can MD can ^ OK
have VB have ^ OK
fifty CD fifty ^ OK
and CC and ^ OK
sixty CD sixty ^ OK
degree NN degree ^ OK
weather NN weather ^ OK

but CC but ^ OK
um UH ^ ^ filler

i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they ^ OK
had VBD had ^ OK
that DT that ^ OK
little JJ little ^ OK
quote NN quote ^ OK
that IN that ^ OK
it PRP it ^ OK
lasts VBZ lasts ^ OK
seven CD seven ^ OK
days NNS days ^ OK
or CC or ^ OK
a DT a ^ OK
week NN week ^ OK
depending VBG depending ^ OK
on IN on ^ OK
if IN if ^ OK
you PRP you ^ OK
go VBP go ^ OK
to IN to ^ OK
the DT the ^ OK
doctor NN doctor ^ OK
or CC or ^ OK
not RB not ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
one CD one ^ OK
of IN of ^ OK
those DT those ^ OK
people NNS people ^ OK
i PRP ^ ^ false_start
people NNS _ARG_ ^ false_start
stu- NN ^ ^ false_start
i PRP ^ ^ repeat
've VBP ^ ^ repeat
've VBP ^ ^ false_start
like UH ^ ^ filler
flu NN ^ ^ false_start
shots NNS ^ ^ false_start
and CC has ^ false_start
never RB ^ ^ repeat
never RB never ^ OK
gotten VBN ^ ^ repeat
got VBN gotten ^ false_start
a DT a ^ OK
flu NN flu ^ OK
shot NN shot ^ OK
in IN in ^ OK
my PRP my ^ OK
life NN life ^ OK

same JJ same ^ OK
here RB here ^ OK

same JJ same ^ OK
here RB here ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
b- VBP ^ ^ repeat
believe VBP believe ^ OK
very RB very ^ OK
strongly RB strongly ^ OK
in IN ^ ^ repeat
um UH ^ ^ filler
in IN in ^ OK
mind NN mind ^ OK
over IN over ^ OK
matter NN matter ^ OK
when WRB when ^ OK
it PRP it ^ OK
comes VBZ comes ^ OK
to IN to ^ OK
illness NN illness ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

in IN ^ ^ false_start
that DT ^ ^ false_start
i PRP i ^ false_start
think VBP think ^ false_start
that IN that ^ OK
people NNS people ^ OK
can MD can ^ OK
talk VB talk ^ OK
themselves PRP themselves ^ OK
into IN into ^ OK
being VBG being ^ OK
sick JJ sick ^ OK
sometimes RB sometimes ^ OK

that DT ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
some DT some ^ OK
people NNS people ^ OK
look VBP look ^ OK
for IN for ^ OK
an DT an ^ OK
excuse NN excuse ^ OK
to TO to ^ OK
be VB be ^ OK
sick JJ sick ^ OK
because ADVP-1 because ^ OK
they IN they ^ OK
're PRP 're ^ OK
sick VBP sick ^ OK
of JJ of ^ OK
work IN work ^ OK
or NN ^ ^ false_start
something CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

and CC ^ ^ false_start
they PRP ^ ^ false_start
talk VBP ^ ^ false_start
them- NN ^ ^ false_start
they PRP they ^ OK
like RP say ^ false_start
oh UH ^ ^ filler
i PRP i ^ OK
must MD must ^ OK
be VB be ^ OK
getting VBG getting ^ OK
a DT a ^ OK
cold NN cold ^ OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
um UH ^ ^ filler
whereas RB whereas ^ OK
if IN if ^ OK
you PRP you ^ OK
just RB just ^ OK
say VBP say ^ OK
oh UH ^ ^ filler
whatever UH whatever ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
he- NN ^ ^ repeat
headache NN headache ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
for IN ^ ^ repeat
for IN ^ ^ false_start
me PRP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
just RB ^ ^ repeat
just RB just ^ OK
believe VBP believe ^ OK
in IN in ^ OK
being VBG being ^ OK
healthy JJ healthy ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
eating VBG eating ^ OK
well RB well ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
and CC ^ ^ repeat
and CC and ^ OK
just RB just ^ OK
not RB ^ ^ repeat
not RB not ^ OK
admitting VBG admitting ^ OK
that IN ^ ^ repeat
that IN that ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
might MD might ^ OK
be VB be ^ OK
getting VBG getting ^ OK
sick JJ sick ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB ^ ^ repeat
when WRB when ^ OK
yo- PRP ^ ^ repeat
i PRP i ^ OK
really RB really ^ OK
get VBP get ^ OK
sick JJ sick ^ OK
it ADVP-TMP- 1 it ^ OK
's PRP 's ^ OK
obvious BES obvious ^ OK

and CC ^ ^ false_start
like IN like ^ OK
you PRP you ^ OK
said VBD said ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
really RB really ^ OK
sick JJ sick ^ OK
for IN for ^ OK
years NNS years ^ OK

but CC but ^ OK
your ADVP-TMP your ^ OK
body PRP body ^ OK
tells NN tells ^ OK
you VBZ you ^ OK
when WRB ^ ^ repeat
when WRB when ^ false_start
you PRP ^ ^ repeat
you PRP you ^ false_start
're VBP ^ ^ repeat
're VBP 're ^ false_start
really RB really ^ false_start
sick JJ sick ^ false_start

i PRP ^ ^ repeat
eh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
get VB get ^ OK
out IN out ^ OK
of IN of ^ OK
bed NN bed ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN ^ ^ repeat
uh UH ^ ^ filler
because IN because ^ OK
for IN for ^ OK
whatever WDT whatever ^ OK
reason NN reason ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
h- VBP ^ ^ repeat
have VBP have ^ OK
no DT no ^ OK
energy NN energy ^ OK

or CC ^ ^ false_start
the DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ repeat
you PRP you ^ OK
d- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
just RB just ^ OK
have VB have ^ OK
a DT a ^ OK
headache NN headache ^ OK

i PRP i ^ OK
just RB just ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
time NN time ^ OK
to TO to ^ OK
be VB be ^ OK
sick JJ sick ^ OK

eh UH ^ ^ filler
are VBP are ^ OK
you PRP you ^ OK
anywhere RB anywhere ^ OK
near RB near ^ OK
boulder NNP boulder ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
in IN in ^ OK
boulder NNP boulder ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
talking VBG ^ ^ repeat
talking VBG talking ^ OK
about IN ^ ^ repeat
about IN about ^ OK
w- XX w- ^ OK

but CC ^ ^ false_start
y- PRP ^ ^ repeat
you PRP you ^ OK
talk VBP talk ^ OK
about IN about ^ OK
organic JJ organic ^ OK
food NN food ^ OK
and CC and ^ OK
stuff NN stuff ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD ^ ^ false_start
like RP thought ^ false_start
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
all DT all ^ OK
that WDT that ^ OK
we PRP we ^ OK
're VBP 're ^ OK
about IN about ^ OK
in NP-1 in ^ OK
boulder IN boulder ^ OK

you PRP you ^ OK
know VBP know ^ OK
s- XX ^ ^ false_start

i- PRP ^ ^ false_start
it PRP it ^ OK
is VBZ is ^ OK
expensive JJ expensive ^ OK

but CC but ^ OK
loveland NNP ^ ^ repeat
loveland NNP loveland ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
c- XX ^ ^ repeat
a DT a ^ OK
great JJ great ^ OK
place NN place ^ OK

well UH ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
m- XX ^ ^ repeat
very RB very ^ OK
true JJ true ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
grew VBD ^ ^ repeat
grew VBD grew ^ OK
up RB up ^ OK
in IN in ^ OK
the DT the ^ OK
midwest NN midwest ^ OK
where WRB where ^ OK
it PRP it ^ OK
was VBD was ^ OK
a DT a ^ OK
lot NN lot ^ OK
more RBR more ^ OK
humid JJ humid ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

maybe RB ^ ^ repeat
maybe RB maybe ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
totally RB totally ^ OK
off IN off ^ OK
base NN base ^ OK

but CC but ^ OK
um UH ^ ^ filler
i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
hated VBD hated ^ OK
the DT the ^ OK
weather NN weather ^ OK
there RB there ^ OK

it PRP it ^ OK
was VBD was ^ OK
just RB just ^ OK
oppressive JJ oppressive ^ OK
and CC and ^ OK
i- XX ^ ^ false_start
e- XX ^ ^ false_start
so RB ^ ^ repeat
so RB so ^ OK
h- JJ ^ ^ repeat
humid JJ humid ^ OK
and CC and ^ OK
wet JJ wet ^ OK
in IN in ^ OK
the DT the ^ OK
summer NN summer ^ OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
stuff NN ^ ^ false_start

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN ^ ^ repeat
if IN if ^ OK
germs NNS germs ^ OK
flourish VB flourish ^ OK
better RBR better ^ OK
in IN in ^ OK
the DT the ^ OK
humid JJ humid ^ OK
air NN air ^ OK
or CC or ^ OK
what WP what ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
often RB ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
one CD ^ ^ repeat
one CD one arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
the DT the arg1 OK
things NNS things arg1 OK
that WDT that arg1 OK
i PRP i arg1 OK
think VBP think arg1 OK
is VBZ is arg1 OK
in IN in arg1 OK
poor JJ poor arg1 OK
taste NN taste arg1 OK
is VBZ is predicate OK
if IN if arg2 OK
it PRP it arg1 OK
's BES 's arg2 OK
something NN something arg0 OK
that WDT that arg0 OK
would MD would argM_mod OK
hurt VB hurt arg2 OK
the DT the arg1 OK
other JJ other arg1 OK
person NN person arg1 OK
or CC or arg2 OK
would MD would argM_mod OK
m- VB ^ ^ repeat
make VB make arg2 OK
fun NN fun arg1 OK
of IN of arg2 OK
them PRP them arg2 OK
in IN in argM_mnr OK
some DT some argM_mnr OK
way NN way argM_mnr OK

i PRP i arg0 OK
guess VBP guess predicate OK
it PRP ^ ^ false_start
part NN part arg1 OK
of IN of arg1 OK
it PRP it arg1 OK
is VBZ is arg1 OK
if IN if arg2 OK
you PRP you arg0 OK
're VBP 're arg2 OK
standing VBG standing arg2 OK
right RB right arg2 OK
there RB there arg2 OK
looking VBG looking arg2 OK
at IN at arg1 OK
the DT the arg1 OK
person NN person arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
or CC or arg2 OK
saying VBG saying arg2 OK
it PRP it arg1 OK
yourself PRP yourself argM_recipr OK
you PRP ^ ^ filler
know VBP ^ ^ filler
as IN as argM_discou OK
opposed VBN opposed argM_discou OK
to IN to argM_discou OK
someone NN someone arg0 OK
else RB else arg0 OK
making VBG making argM_discou OK
do VBP ^ ^ false_start
uh UH ^ predicate filler
the DT ^ ^ repeat
the DT the arg1 OK
humorous JJ humorous arg1 OK
remark NN remark arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
also RB also ^ OK
they PRP they arg0 OK
're VBP 're ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
not RB not argM_neg OK
just RB just argM_extent OK
making VBG making arg1 OK
fun NN fun arg1 OK
but CC but arg1 OK
probably RB probably arg1 OK
also RB also arg1 OK
um UH ^ ^ filler
uh UH ^ ^ filler
things NNS things arg1 OK
that WDT that arg1 OK
are VBP are arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
risque JJ risque arg2 OK
or CC or arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
in IN in arg2 OK
some DT some arg2 OK
other JJ other arg2 OK
way NN way arg2 OK
considered VBN considered arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
not RB ^ ^ repeat
not RB not argM_neg OK
to TO to arg1 OK
be VB be arg1 OK
said VBD said arg1 OK
in IN in argM_tmp OK
polite JJ polite argM_tmp OK
company NN company argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD ^ ^ repeat
had VBD had predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
boss NN boss arg1 OK
once SBAR-1 once argM_tmp OK
who RB who arg1 OK
was WP was arg1 OK
just VBD just arg2 OK
clueless RB clueless arg2 OK

but CC ^ ^ false_start
often RB often argM_extent OK
in IN ^ ^ repeat
in IN in argM_loc OK
group NN group argM_loc OK
meetings NNS meetings argM_loc OK
he PRP ^ ^ repeat
he PRP ^ ^ repeat
he PRP he arg0 OK
would MD ^ ^ repeat
would MD ^ ^ repeat
would MD would argM_mod OK
make VB make predicate OK
uh UH ^ ^ filler
humorous JJ humorous arg1 OK
remarks NNS remarks arg1 OK
that WDT that arg1 OK
were VBD were arg1 OK
uh UH ^ ^ filler
uh UH ^ ^ filler
of IN of arg2 OK
a DT a arg2 OK
sexual JJ sexual arg2 OK
nature NN nature arg2 OK
or CC or arg2 OK
of IN ^ ^ false_start
a DT ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
just RB ^ ^ false_start
something NN something arg2 OK
like IN like arg2 OK
that DT that arg2 OK

that WDT that ^ OK
i PRP i ^ OK
felt VBD felt ^ OK
was VBD was ^ OK
was VBD _ARG_ ^ false_start

i PRP i arg0 OK
never RB never argM_extent OK
said VBD said predicate OK
anything NN anything arg1 OK
because IN because argM_purpos OK
i PRP i arg0 OK
figured VBD figured argM_purpos OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
do VBP did arg1 false_start
n't RB n't argM_neg OK
want VB want arg1 OK
to TO to arg1 OK
be VB ^ ^ repeat
be VB be arg1 OK
a DT ^ ^ repeat
a DT a arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
pain NN pain arg2 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
d- VBP ^ ^ repeat
doubt VBP doubt predicate OK
those DT those arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
things NNS things arg1 OK
were VBD were arg1 OK
in IN in arg2 OK
bad JJ bad arg2 OK
taste NN taste arg2 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
because IN ^ ^ repeat
because IN because argM_cause OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
maybe RB ^ ^ repeat
maybe RB maybe argM_extent OK
you PRP ^ ^ filler
know VBP ^ ^ filler
same JJ same arg0 OK
sex NN sex arg0 OK
peop- NNS ^ ^ repeat
people NNS people arg0 OK
can MD ^ ^ repeat
can MD can argM_mod OK
do VB do argM_cause OK
that DT that arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
thing NN thing arg1 OK

where WRB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
when WRB when argM_tmp OK
there EX there ^ OK
's BES 's predicate OK
someone NN someone arg1 OK
of IN of arg1 OK
the DT the arg1 OK
opposite JJ opposite arg1 OK
sex NN sex arg1 OK
there RB there argM_loc OK
then ADVP-TMP- 1 then argM_tmp OK
i RB i arg0 OK
do PRP do ^ OK
n't VBP n't argM_neg OK
think RB think predicate OK
that VB that arg1 OK
's DT 's arg1 OK
such BES such arg2 OK
a PDT a arg2 OK
good DT good arg2 OK
idea JJ idea arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
me- XX ^ ^ false_start
my PRP ^ ^ repeat
or CC ^ ^ filler
my PRP ^ ^ repeat
my PRP my arg1 OK
impression NN ^ ^ repeat
uh UH ^ ^ filler
understanding NN understanding arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
that IN that arg2 OK
men NNS men arg0 OK
tend VBP tend arg2 OK
to TO to arg2 OK
use VB use arg2 OK
language NN language arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and arg1 OK
perhaps RB perhaps arg1 OK
humor NN humor arg1 OK
too RB too arg1 OK
that WDT that arg1 OK
is VBZ ^ ^ false_start
more JJR ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
uses VBZ uses arg1 OK
four CD four arg1 OK
letter NN letter arg1 OK
words NNS words arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and arg1 OK
is VBZ ^ ^ repeat
is VBZ is arg1 OK
somehow RB somehow argM_mnr OK
you PRP ^ ^ filler
know VBP ^ ^ filler
more RBR ^ ^ repeat
more RBR more arg2 OK
sexual JJ sexual arg2 OK
or CC or arg2 OK
more RBR more arg2 OK
um UH ^ ^ filler
uh UH ^ ^ filler
the DT the arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
thing NN thing arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
would MD would argM_mod OK
consider VB consider arg2 OK
bad JJ bad arg1 OK
taste NN taste arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
talking VBG talking arg1 OK
that DT ^ predicate false_start
about IN about arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
woman NN woman arg1 OK
and CC and arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
her PRP her arg1 OK
attributes NNS attributes arg1 OK
or CC ^ ^ false_start
whatever WP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ repeat
's BES ^ ^ repeat
's BES is predicate false_start
something NN something arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
think VBP think arg2 OK
men NNS men arg0 OK
do VBP do arg1 OK
as RB as argM_other OK
far RB far argM_other OK
as IN as argM_other OK
i PRP i argM_other OK
understand VBP understand argM_other OK

and CC ^ ^ repeat
and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
that IN that arg1 OK
most RBS most arg0 OK
women NNS women arg0 OK
would MD would argM_mod OK
do VB do arg1 OK
that DT that arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
we PRP ^ ^ false_start
you PRP you arg0 OK
might MD might argM_mod OK
say VB say predicate OK
oh UH ^ ^ filler
he PRP he arg1 OK
's BES 's arg1 OK
handsome JJ handsome arg2 OK

he PRP he arg1 OK
's BES 's predicate OK
really RB really arg2 OK
good JJ good arg2 OK
looking VBG looking arg2 OK

he PRP ^ ^ false_start
's BES ^ ^ false_start
really RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
uh UH ^ ^ filler
really RB really ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
maybe RB ^ ^ repeat
maybe RB ^ ^ false_start
even RB ^ ^ false_start
if IN ^ ^ false_start
you PRP ^ ^ repeat
know VBP ^ ^ repeat
you PRP you arg1 OK
might MD might argM_mod OK
say VB say predicate OK
oh UH ^ ^ filler
he PRP he arg1 OK
's BES 's arg2 OK
hot JJ hot arg2 OK

but CC ^ ^ repeat
but CC but ^ OK
not RB not ^ OK
to TO to ^ OK
really RB really ^ OK
get VB get ^ OK
into IN into ^ OK
the DT the ^ OK
details NNS details ^ OK
of IN of ^ OK
the DT the ^ OK
anatomy NN anatomy ^ OK
or CC or ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

but CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
can MD ^ ^ repeat
can MD can argM_mod OK
be VB ^ ^ repeat
be VB be arg1 OK
said VBD said arg1 OK
in IN ^ ^ false_start
i- XX ^ ^ false_start
humorously RB humorously argM_mnr OK

um UH ^ argM_mnr filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg1 OK
can MD can argM_mod OK
be VB be ^ OK
done VBN done predicate OK
in IN ^ ^ repeat
in IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN ^ ^ repeat
in IN in argM_mnr OK
some DT ^ ^ repeat
a DT a argM_mnr OK
making VBG making argM_mnr OK
fun NN fun arg1 OK
kind NN kind argM_mnr OK
of IN of argM_mnr OK
way NN way argM_mnr OK
or CC or argM_mnr OK
done VBN ^ ^ false_start
in IN as ^ false_start
in IN ^ ^ repeat
uh UH ^ ^ filler
in IN ^ ^ false_start
a DT ^ ^ false_start
laughing VBG ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
something NN something arg2 OK
that WDT that arg2 OK
people NNS people arg0 OK
would MD would argM_mnr OK
laugh VB laugh argM_mnr OK
about IN about arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
probably RB probably argM_other OK
something NN something arg1 OK
that WDT that arg1 OK
was VBD was arg1 OK
said VBN said arg1 OK
on IN on arg1 OK
television NN television arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
thought VBD thought arg1 OK
was VBD was arg1 OK
really RB really argM_extent OK
in IN in arg2 OK
poor JJ poor arg2 OK
taste NN taste arg2 OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
was VBD ^ ^ repeat
was VBD was arg1 OK
on IN ^ ^ repeat
on IN ^ ^ repeat
on IN on arg2 OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a arg2 OK
sitcom NN sitcom arg2 OK
or CC or arg2 OK
something NN something arg2 OK

but CC but ^ OK
it PRP it ^ OK
was VBD had ^ false_start
something NN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
something NN something ^ OK
to TO to ^ OK
do VB do ^ OK
with IN with ^ OK
someone NN someone ^ OK
's POS 's ^ OK
anatomy NN anatomy ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
as IN as ^ OK
i PRP i ^ OK
recall VBP recall ^ OK

actually UH actually ^ OK
no UH no ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
up IN up ^ OK
in IN in ^ OK
the DT the ^ OK
lehigh NNP lehigh ^ OK
valley NNP valley ^ OK
near IN ^ ^ repeat
at IN at ^ OK
allen- NNP ^ ^ repeat
allentown NNP allentown ^ OK

everyone NN everyone ^ OK
i PRP i ^ OK
've VBP 've ^ OK
spoken VBN spoken ^ OK
to IN to ^ OK
too NP-1 ^ ^ repeat
is RB is ^ OK
sh- VBZ sh- ^ OK

they PRP ^ ^ false_start
're VBP ^ ^ false_start
all DT ^ ^ false_start
and CC ^ ^ false_start
then RB ^ ^ false_start
everybody NN ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
wher- WRB ^ ^ false_start
live VBP ^ ^ false_start
like UH ^ ^ filler
up IN up ^ OK
by IN by ^ OK
blue NNP blue ^ OK
's POS 's ^ OK
mountain NN mountain ^ OK

they PRP they ^ OK
're VBP ^ ^ false_start
like RP said ^ false_start
where WRB where ^ OK
's BES 's ^ OK
that DT that ^ OK

but CC ^ ^ false_start
hey UH ^ ^ filler
for IN for ^ OK
twelve CD twelve ^ OK
bucks NNS bucks ^ OK
i PRP i ^ OK
'll MD 'll ^ OK
talk VB talk ^ OK
to IN to ^ OK
anybody NN anybody ^ OK

i PRP i ^ OK
just RB just ^ OK
keep VBP keep ^ OK
ta- VBP ^ ^ repeat
taking VBG taking ^ OK
them PRP them ^ OK

all DT all ^ OK
you PRP you ^ OK
got VBD got ^ OK
to TO to ^ OK
do VB do ^ OK
is NP-2 is ^ OK
answer VBZ answer ^ OK
them VB them ^ OK

so UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
like RP like ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
the DT the ^ OK
only JJ only ^ OK
person NN person ^ OK
available JJ available ^ OK
at IN at ^ OK
nine CD nine ^ OK
o'clock RB o'clock ^ OK
ten CD ten ^ OK
o'clock RB o'clock ^ OK
eleven CD eleven ^ OK
o'clock RB o'clock ^ OK
at IN at ^ OK
night NN night ^ OK

so RB ^ ^ filler
i PRP i ^ OK
figured VBD figured ^ OK
what WP what ^ OK
the DT the ^ OK
hell NN hell ^ OK

washington NNP washington ^ OK
township NNP township ^ OK
lower RB lower ^ OK
up IN up ^ OK
by IN by ^ OK
oh UH ^ ^ filler
like UH ^ ^ filler

right RB right ^ OK
off IN off ^ OK
of IN of ^ OK
forty-two CD forty-two ^ OK
really RB really ^ OK

so UH ^ ^ filler
i PRP ^ ^ false_start
was VBD ^ ^ false_start
about RB ^ ^ false_start
from IN from ^ OK
mount NNP mount ^ OK
laurel NNP laurel ^ OK
to IN to ^ OK
me PRP me ^ OK
to IN to ^ OK
where WRB where ^ OK
my PRP my ^ OK
parents NNS parents ^ OK
still RB still ^ OK
live VBP live ^ OK
was ADVP-LOC- 1 was ^ OK
i VBD ^ ^ filler
do PRP ^ ^ filler
n't VBP ^ ^ filler
know RB ^ ^ filler
maybe VB maybe ^ OK
fifteen RB fifteen ^ OK
minutes CD minutes ^ OK

well UH ^ ^ filler
actually RB actually ^ OK
sewell NNP sewell ^ OK

so UH ^ ^ filler
i PRP i ^ OK
just RB just ^ OK
moved VBD moved ^ OK
up IN up ^ OK
here RB here ^ OK
from IN from ^ OK
uh UH ^ ^ filler
south NNP south ^ OK
jersey NNP jersey ^ OK
about RB about ^ OK
a DT a ^ OK
year NN year ^ OK
and CC and ^ OK
a DT a ^ OK
half NN half ^ OK
ago RB ago ^ OK

uh UH ^ ^ filler
i PRP i ^ OK
lived VBD lived ^ OK
in IN in ^ OK
township NNP township ^ OK
since IN since ^ OK
eighty-six CD eighty-six ^ OK

i PRP i ^ OK
was VBD was ^ OK
there RB there ^ OK
fourt- CD ^ ^ false_start
yeah UH ^ ^ filler
roughly RB roughly ^ OK
thirteen CD thirteen ^ OK
fourteen CD fourteen ^ OK
years NNS years ^ OK
before IN before ^ OK
i PRP i ^ OK
moved VBD moved ^ OK

so UH ^ ^ filler
how WRB how ^ OK
long RB long ^ OK
you PRP you ^ OK
been VBN been ^ OK
down IN down ^ OK
there RB there ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
only RB ^ ^ false_start
be- XX ^ ^ false_start
i PRP i ^ OK
only RB only ^ OK
graduated VBD graduated ^ OK
eleven CD eleven ^ OK
years NNS years ^ OK
ago RB ago ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD ^ ^ false_start
like RP asked ^ false_start
do VBP do ^ OK
you PRP you ^ OK
want VB want ^ OK
to TO to ^ OK
talk VB talk ^ OK

i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
g- XX ^ ^ repeat
supposed VBN supposed ^ OK
to TO to ^ OK
talk VB talk ^ OK
about IN about ^ OK
something NN something ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
's BES ^ ^ false_start
like RP said ^ false_start
no UH no ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
talking VBG talking ^ OK
to IN to ^ OK
you PRP you ^ OK

and CC ^ ^ false_start
then RB then ^ OK
the DT the ^ OK
lady NN lady ^ OK
came VBD came ^ OK
on RP on ^ OK
and CC and ^ OK
said VBD said ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
're POS 're ^ OK
call NN call ^ OK
's BES 's ^ OK
now RB now ^ OK
over RB over ^ OK

were VBD were ^ OK
yo- PRP yo- ^ OK

see- UH ^ ^ false_start
like UH ^ ^ filler
the DT the ^ OK
day NN day ^ OK
i PRP i ^ OK
had VBD had ^ OK
the DT the ^ OK
old JJ old ^ OK
lady NN lady ^ OK
that WDT that ^ OK
would MD would ^ OK
n't RB n't ^ OK
talk VB talk ^ OK
about IN about ^ OK
anything NN anything ^ OK
but IN but ^ OK
the DT the ^ OK
topic NN topic ^ OK

i PRP i ^ OK
thought VBD thought ^ OK
i PRP i ^ OK
was VBD was ^ OK
on IN on ^ OK
there RB there ^ OK
forever RB forever ^ OK

well UH ^ ^ filler
because IN because ^ OK
i PRP i ^ OK
like VBP ^ ^ filler

when WRB when argM_tmp OK
christmas NNP christmas argM_tmp OK
come VBP comes argM_tmp false_start
around RB around argM_tmp OK
it ADVP-TMP- 1 it arg1 OK
seem VBP ^ ^ repeat
that IN ^ ^ repeat
seems PRP seems ^ OK
just RB ^ predicate repeat
like VBZ like arg2 OK
everybody IN everybody arg1 OK
is NN is arg2 OK
more VBZ ^ ^ false_start
happier RBR happier arg2 OK
and JJR and arg2 OK
you CC ^ ^ filler
know PRP ^ ^ filler
things VBP things arg1 OK
are NNS are arg2 OK
fresher VBP fresher arg2 OK

and CC ^ ^ false_start
then RB then argM_tmp OK
i PRP i arg1 OK
get VBP got predicate false_start
broke JJ broke arg2 OK
as IN as arg2 OK
i PRP i arg0 OK
do VBP do arg2 OK
n't RB n't argM_neg OK
know VB know arg2 OK
what WP what arg1 OK

but CC but arg0 OK
other RB other ^ OK
than IN than ^ OK
that DT that ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP ^ ^ repeat
like VBP like predicate OK
christmas NNP christmas arg2 OK
because IN because ^ OK
all PDT all arg0 OK
the DT of ^ false_start
the DT the arg0 OK
family NN family arg0 OK
get VBP gets predicate false_start
together RB together arg_particl OK

i UNK i arg1 OK
'm UNK 'm predicate OK
in UNK in arg2 OK
l. UNK l. arg2 OK
a. UNK a. arg2 OK

that DT ^ ^ false_start
it- XX ^ ^ false_start
one CD one argM_tmp OK
year NN year argM_tmp OK
we PRP we arg0 OK
went VBD went predicate OK
to IN to arg4 OK
big NNP big arg4 OK
bear NNP bear arg4 OK
for IN for ^ OK
christmas NNP christmas ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
w- XX ^ ^ repeat
one CD one arg1 OK

n- UH ^ ^ repeat
no UH no ^ OK

have VBP have ^ OK
you PRP you arg0 OK
ever RB ever ^ OK
showed VBN showed predicate OK
it PRP it arg1 OK
to IN to arg2 OK
him PRP him arg2 OK

have VBP have ^ OK
you PRP you arg0 OK
showed VBN showed predicate OK
that DT that arg1 OK
to IN to arg2 OK
him PRP him arg2 OK
since IN since argM_tmp OK
he PRP he arg1 OK
's HVS 's argM_tmp OK
been VBN ^ ^ false_start
grown JJ grown arg2 OK

um UH i arg1 false_start
um UH 'm predicate false_start
practically RB ^ ^ false_start
here RB here arg2 OK
when WRB when argM_tmp OK
i PRP i arg1 OK
'm VBP 'm argM_tmp OK
not RB not argM_neg OK
at IN ^ ^ repeat
at IN at arg2 OK
my PRP ^ ^ repeat
my PRP my arg2 OK
son NN son arg2 OK
's POS 's arg2 OK
school NN school arg2 OK

but CC ^ ^ false_start
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
time NN time ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
here RB here ^ OK
or CC or ^ OK

he PRP ^ ^ false_start
had VBD ^ ^ false_start
she PRP she arg0 OK
was VBD was ^ OK
doing VBG doing predicate OK
it PRP it arg1 OK

and CC ^ ^ false_start
she PRP she arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
girl NN girl arg1 OK
you PRP you arg0 OK
need VBP need arg1 OK
to TO to arg1 OK
call VB call arg1 OK
and CC and arg1 OK
just RB just arg1 OK
see VB see arg1 OK
you PRP ^ ^ filler
know VB ^ ^ filler
how WRB how arg1 OK
it PRP it arg0 OK
goes VBZ goes arg1 OK

well UH ^ ^ filler
i PRP ^ ^ false_start
my PRP my arg1 OK
kids NNS kids arg1 OK
are VBP are argM_extent OK
all RB all argM_extent OK
grown JJ grown predicate OK
and CC and ^ OK
gone VBN gone predicate OK

a- RB ^ ^ repeat
although RB although argM_discou OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
i PRP i arg1 OK
would MD would argM_mod OK
panic VB panic arg1 OK

well UH ^ ^ filler
there EX ^ ^ false_start
's BES ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
difference NN difference arg2 OK
is VBZ ^ ^ false_start
having VBG ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
having VBG having arg2 OK
yo- JJ ^ ^ repeat
young JJ young arg1 OK
kids NNS kids arg1 OK
at IN at argM_loc OK
home NN home argM_loc OK

i PRP i arg0 OK
guess VBP guess predicate OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
one CD one arg1 OK
of IN of arg1 OK
the DT the arg1 OK
really RB really arg1 OK
important JJ important arg1 OK
things NNS things arg1 OK
is VBZ is arg1 OK
probably RB probably argM_adverb OK
just RB just argM_adverb OK
to TO ^ ^ false_start
not RB not argM_neg OK
to TO to arg2 OK
dwell VB dwell arg2 OK
on IN on arg1 OK
it PRP it arg1 OK
but CC but argM_discou OK
to TO ^ ^ repeat
to TO to arg2 OK
d- VB ^ ^ repeat
decide VB decide arg2 OK
i- IN ^ ^ repeat
in IN in argM_loc OK
your PRP your argM_loc OK
mind NN mind argM_loc OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ repeat
what WP what arg1 OK
would MD would argM_mod OK
i PRP i arg0 OK
do VB do arg1 OK
if IN if argM_adverb OK
such JJ such arg1 OK
and CC and arg1 OK
such JJ such arg1 OK
happened VBD happened argM_adverb OK

i PRP i arg0 OK
guess VBP guess predicate OK
i PRP i arg0 OK
've VBP 've arg1 OK
thought VBN thought arg1 OK
about IN about arg1 OK
it PRP it arg1 OK
a DT a argM_extent OK
little JJ little argM_extent OK
bit NN bit argM_extent OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ false_start
watching VBG watching argM_tmp OK
things NNS things arg1 OK
on IN on arg1 OK
t. NNP t. arg1 OK
v. NNP v. arg1 OK

are VBP ^ ^ false_start
yo- PRP ^ ^ false_start
do VBP do ^ OK
you PRP you arg0 OK
live VB live predicate OK
in IN ^ ^ repeat
a DT ^ ^ repeat
like UH ^ ^ filler
in IN in argM_loc OK
a DT a argM_loc OK
city NN city argM_loc OK

eh UH ^ ^ filler
well UH ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
so RB so ^ OK
much JJ much ^ OK
about IN about ^ OK
what WP what ^ OK
's BES 's ^ OK
going VBG going ^ OK
going VBG on ^ false_start

sometimes RB sometimes argM_tmp OK
people NNS people arg0 OK
in IN ^ ^ repeat
in IN in arg0 OK
a DT ^ ^ repeat
a DT a arg0 OK
rural JJ rural arg0 OK
setting NN setting arg0 OK
think VBP think predicate OK
calmer RBR calmer arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
en- NN ^ ^ repeat
environment NN environment arg0 OK
makes VBZ makes arg1 OK
a DT a arg1 OK
huge JJ huge arg1 OK
difference NN difference arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
there EX there arg1 OK
's BES 're arg1 false_start
so RB so arg2 OK
many JJ many arg2 OK
definitions NNS definitions arg2 OK
of IN of arg2 OK
it PRP ^ ^ false_start
depends VBZ ^ ^ false_start
on IN ^ ^ false_start
what WP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
terrorism NN ^ arg2 false_start
it PRP terrorism ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ false_start
i PRP i arg0 OK
live VBP live predicate OK
in IN ^ ^ repeat
in IN in argM_loc OK
montana NNP montana argM_loc OK

i PRP i arg0 OK
think VBP think predicate OK
the DT the arg1 OK
population NN population arg1 OK
is VBZ is arg1 OK
about RB about arg2 OK
nine CD nine arg2 OK
hundred CD hundred arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there arg1 OK
're VBP 're predicate OK
missile NN missile arg2 OK
sites NNS sites arg2 OK
just RB just arg2 OK
miles NNS miles arg2 OK
from IN from arg2 OK
where WRB where arg1 OK
we PRP we arg0 OK
live VBP live predicate OK

and CC ^ arg1 false_start
we PRP ^ ^ false_start
just RB ^ ^ false_start
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
a DT a argM_extent OK
lot NN lot argM_extent OK
of IN of argM_extent OK
um UH ^ ^ filler
not RB not argM_neg OK
being VBG being arg1 OK
scared VBN scared arg1 OK
is NP-1 ^ ^ repeat
is VBZ is arg1 OK
thinking VBZ thinking predicate OK
about VBG about arg1 OK
things IN things arg1 OK
thinking VBZ ^ arg1 false_start
death IN and ^ false_start
that NNS ^ ^ repeat
you DT ^ ^ filler
know PRP ^ ^ filler
i VBP ^ ^ filler
mean PRP ^ ^ filler
th- VBP ^ ^ repeat
that VBP that arg1 OK
death IN death arg1 OK
is NN is arg1 OK
n't VBZ n't argM_neg OK
really RB really arg2 OK
the RB the arg2 OK
end DT end arg2 OK

sounds VBZ _ARG_ arg1 false_start
sounds VBZ ^ ^ repeat
sounds VBZ sounds predicate OK
about RB about arg2 OK
like IN ^ ^ repeat
like IN like arg2 OK
here RB here arg2 OK
though RB though argM_discou OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
maybe RB maybe argM_adverb OK
um UH ^ ^ filler
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
it PRP it arg0 OK
depends VBZ depends arg1 OK
on IN on arg1 OK
how WRB ^ ^ repeat
how WRB how argM_mnr OK
prepared JJ prepared arg1 OK
we PRP we arg0 OK
are VBP are arg1 OK

if IN if argM_adverb OK
we PRP we argM_adverb OK
had VBD had argM_adverb OK
a DT ^ ^ repeat
a DT a argM_adverb OK
terrorist JJ terrorist argM_adverb OK
attack NN attack argM_adverb OK
here RB here argM_adverb OK
and CC and argM_adverb OK
maybe RB maybe argM_adverb OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the argM_adverb OK
truck NN truck argM_adverb OK
lines NNS lines argM_adverb OK
were VBD were argM_adverb OK
shut VBN shut argM_adverb OK
down RP down argM_adverb OK
and NP-1 and argM_adverb OK
we CC we argM_adverb OK
could PRP could argM_adverb OK
n't MD n't argM_adverb OK
get RB get argM_adverb OK
food VB food argM_adverb OK
to NN to argM_adverb OK
the IN the argM_adverb OK
grocery DT grocery argM_adverb OK
stores NN stores argM_adverb OK
we NNS ^ ^ repeat
um PRP ^ ^ filler
we UH we arg0 OK
've PRP 've ^ OK
got VBP got predicate OK
a VBN a arg1 OK
basement DT basement arg1 OK
f- NN ^ ^ repeat
f- JJ ^ ^ repeat
full JJ full arg1 OK
of JJ of arg1 OK
food IN food arg1 OK

well UNK ^ ^ filler
except UNK ^ ^ false_start
even UNK even argM_adverb OK
if UNK if argM_adverb OK
it UNK it argM_adverb OK
was UNK was argM_adverb OK
to UNK to argM_adverb OK
go UNK go argM_adverb OK
to UNK to argM_adverb OK
the UNK the argM_adverb OK
bigger UNK bigger argM_adverb OK
cities UNK cities argM_adverb OK
yo- UNK ^ ^ false_start
it UNK it arg0 OK
would UNK would argM_mod OK
take UNK take predicate OK
twenty-four UNK twenty-four arg1 OK
hours UNK hours arg1 OK
for UNK for arg1 OK
your UNK ^ ^ false_start
small UNK ^ ^ false_start
little UNK ^ ^ false_start
town UNK ^ ^ false_start
to UNK ^ ^ false_start
be UNK ^ ^ false_start
cleared UNK ^ ^ false_start
the UNK the arg1 OK
grocery UNK grocery arg1 OK
stores UNK stores arg1 OK
to UNK to arg1 OK
be UNK be arg1 OK
cleared UNK cleared arg1 OK
of UNK of arg2 OK
food UNK food arg2 OK

well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg0 OK
's BES 's arg0 OK
one CD one arg0 OK
of IN of arg0 OK
things NNS things arg0 OK
that WDT that arg0 OK
would MD would argM_mod OK
keep VB keep arg2 OK
us PRP us arg1 OK
from IN from arg1 OK
being VBG ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
p- VBG ^ ^ repeat
eh UH ^ ^ filler
p- VBG ^ ^ repeat
panicking VBG panicking arg1 OK

well UH ^ ^ filler
we PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg0 OK
're VBP 're ^ OK
prepared JJ prepared predicate OK
in IN in argM_mnr OK
that DT that argM_mnr OK
way NN way argM_mnr OK

um UH ^ ^ filler
and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
another DT another arg1 OK
way NN way arg1 OK
p- XX ^ ^ false_start
to TO to arg1 OK
prepare VB prepare arg1 OK
is ADVP-1 is arg1 OK
just VBZ just argM_adverb OK
to RB to arg2 OK
be TO be arg2 OK
calm VB calm arg2 OK
in JJ in arg2 OK
your IN your arg2 OK
own PRP own arg2 OK
mind JJ mind arg2 OK
about NN about arg2 OK
things IN things arg2 OK

but CC ^ arg2 false_start
there EX ^ ^ false_start
ha- VBP ^ ^ false_start
i'v- PRP ^ ^ repeat
i VBP i arg0 OK
've PRP 've ^ OK
know VBP known predicate false_start
people VB people arg0 OK
who NNS ^ ^ repeat
who VBP who arg0 OK
've WP ^ ^ repeat
've WP 've arg1 OK
used VBP used arg1 OK
their VBN their arg1 OK
food PRP food arg1 OK
storage NN storage arg1 OK
because NN because argM_cause OK
they IN they arg1 OK
've PRP 've arg2 OK
had VBP ^ ^ false_start
you VBN ^ ^ filler
know PRP ^ ^ filler
been VBP been arg2 OK
out VBN out arg2 OK
of IN of arg2 OK
work IN work arg2 OK
or NN or arg2 OK
because CC because argM_cause OK
the IN the arg1 OK
b- DT ^ ^ repeat
bread NN bread arg1 OK
winners NN winner ^ false_start
winners NN 's arg1 false_start
had NNS had arg2 OK
an VBD an arg1 OK
accident DT accident arg1 OK
or NN or arg2 OK
had CC had arg2 OK
to VBD to arg2 OK
be TO be arg2 OK
in VB in arg2 OK
the IN the arg2 OK
hospital DT hospital arg2 OK
for NN for arg2 OK
a IN a arg2 OK
while DT while arg2 OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just argM_adverb OK
when WRB when argM_tmp OK
times NNS times arg1 OK
are VBP ^ ^ repeat
are VBP are predicate OK
hard JJ hard arg2 OK
like IN like arg2 OK
that DT that arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
if IN if arg1 OK
you PRP you arg0 OK
ever RB ever arg1 OK
seen VBN _VERB_ ^ false_start
seen VBN seen arg1 OK
that DT that arg1 OK
elimidate NNP elimidate arg1 OK

what WP ^ arg1 false_start
i PRP i arg0 false_start
consider VBP consider predicate false_start
and CC ^ ^ false_start
uh UH ^ ^ filler
some DT some arg1 OK
of IN of arg1 OK
it PRP it arg1 OK
was VBD to ^ false_start
was VBD be arg1 false_start
pretty RB pretty arg1 OK
vulgar ADJP-PRD- 3 vulgar arg1 OK

and JJ ^ ^ false_start
stuff CC ^ ^ false_start
that NN ^ ^ false_start
you WDT you arg0 OK
just PRP ^ ^ false_start
should RB should ^ OK
not MD not ^ OK
do RB do predicate OK
in VB in arg3 OK
public IN public arg3 OK

and CC ^ ^ false_start
they PRP they arg0 OK
put VBD put predicate OK
this DT this arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
programming NN programming arg1 OK
on RB on arg2 OK
in IN in arg2 OK
the DT the arg2 OK
afternoon NN afternoon arg2 OK
after IN after ^ OK
school NN school ^ OK

um UH ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
seven CD seven arg1 OK
year NN year arg1 OK
old JJ old arg1 OK

she PRP ^ ^ false_start
'll MD ^ ^ false_start
well UH well ^ OK
no UH no ^ OK

and CC ^ ^ false_start
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
two CD two arg1 OK
year NN year arg1 OK
old JJ old arg1 OK

but CC but ^ OK
even RB even ^ OK
i PRP i arg0 OK
noticed VBD noticed predicate OK
some DT some arg1 OK
of IN of arg1 OK
the DT the arg1 OK
nickelodeon NNP nickelodeon arg1 OK
programming NN programming arg1 OK
is VBZ is arg1 OK
not RB not arg2 OK
that RB that arg2 OK
great JJ great arg2 OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
violence NN violence ^ OK
wise RB wise ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
there EX ^ ^ false_start
they PRP they arg0 OK
really RB really arg1 OK
need VBP need arg1 OK
to TO to arg1 OK
do VB do arg1 OK
something NN something arg1 OK

well UH ^ ^ filler
actually RB ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
it PRP it arg1 OK
should MD should arg1 OK
be VB be arg1 OK
up IN up arg1 OK
to IN to arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
t. NN t. arg1 OK
v. NN v. arg1 OK
censors NNS censors arg1 OK

m- XX ^ ^ false_start
exactly UH exactly ^ OK

and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do predicate OK
my PRP ^ ^ repeat
well UH ^ ^ filler
my PRP my arg1 OK
hom- NN ^ ^ repeat
homework NN homework arg1 OK
thei- PRP ^ ^ repeat
their PRP their arg1 OK
homework NN homework arg1 OK

and CC ^ ^ false_start
if IN if ^ OK
there EX there ^ OK
was VBD was predicate OK
a DT a arg1 OK
show NN show arg1 OK
on SBAR-1 on arg1 OK
she RP she arg0 OK
thought PRP thought arg1 OK
we VBD we arg0 OK
should PRP should arg1 OK
n't MD n't arg1 OK
be RB be arg1 OK
watching VB watching arg1 OK
we VBG we arg0 OK
were NP-2 were ^ OK
you PRP ^ ^ false_start
know VBD ^ ^ false_start
told PRP told predicate OK
to VBP to arg2 OK
turn VBN turn arg2 OK
it TO it arg2 OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
they PRP ^ ^ repeat
they PRP they arg0 OK
do VBP do arg1 OK
need VB need arg1 OK
to TO to arg1 OK
do VB do arg1 OK
something NN something arg1 OK

i PRP ^ ^ false_start
know VBP ^ ^ false_start
our PRP ^ ^ false_start
we PRP we arg0 OK
have VBP have predicate OK
a DT a arg1 OK
s- NN ^ ^ repeat
satellite NN satellite arg1 OK
system NN system arg1 OK

like UH ^ ^ filler
if IN if ^ OK
we PRP we arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
them PRP them arg0 OK
watching VBG watching arg1 OK
lifetime NNP lifetime arg1 OK
because IN because ^ OK
sometimes RB sometimes ^ OK
some DT ^ ^ repeat
some DT some arg1 OK
movies NNS movies arg1 OK
on IN on ^ OK
there RB there ^ OK
are VBP are ^ OK
geared VBN geared predicate OK
towards IN towards arg2 OK
violence NN violence arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
t. NN t. arg0 OK
v. NN v. arg0 OK
shows VBZ shows arg0 OK
have VB have arg0 OK
a DT a arg0 OK
lot NN lot arg0 OK
to TO to arg0 OK
do VB do arg1 OK
with IN with arg1 OK
that DT that arg1 OK
though RB though ^ OK
too RB too ^ OK
because IN because ^ OK
i PRP i arg0 OK
know VBP know predicate OK
they PRP they arg0 OK
have VBP have arg1 OK
cartoons NNS cartoons arg1 OK
that WDT that arg1 OK
the DT the arg0 OK
guys NNS guys arg0 OK
carry VB carry arg1 OK
weapons NNS weapons arg1 OK

i PRP i ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
that DT that ^ OK
's BES 's ^ OK
a DT a ^ OK
long JJ long ^ OK
time NN time ^ OK

oh UH ^ ^ filler
well UH ^ ^ false_start
it PRP it ^ OK
depends VBZ depends ^ OK
on IN on ^ OK
how WRB how ^ OK
civilized JJ civilized ^ OK
it PRP it ^ OK
is VBZ is ^ OK
there RB there ^ OK

they PRP they ^ OK
're VBP 're ^ OK
better JJR better ^ OK
off RP off ^ OK
than IN ^ ^ repeat
than IN than ^ OK
we PRP we ^ OK
might MD might ^ OK
be VB be ^ OK
here RB here ^ OK
in IN in ^ OK
the DT the ^ OK
united NNP united ^ OK
states NNPS states ^ OK

but CC but ^ OK
if IN if ^ OK
it PRP it ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
miss VB ^ ^ repeat
miss VB miss ^ OK
a DT a ^ OK
good JJ good ^ OK
beer NN beer ^ OK
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a ^ OK
glass NN glass ^ OK
of IN of ^ OK
wine NN wine ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
does VBZ does ^ OK
sound VB sound ^ OK
intriguing JJ intriguing ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
the DT the ^ OK
island NN island ^ OK
life NN life ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
less JJR less ^ OK
pressure NN pressure ^ OK
of IN of ^ OK
the DT the ^ OK
big JJ big ^ OK
city NN city ^ OK
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
compare VBP compare ^ OK
it PRP it ^ OK
to IN ^ ^ repeat
to IN to ^ OK
the DT ^ ^ repeat
the DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
ro- XX ^ ^ repeat
uh UH ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
stress NN stress ^ OK
of IN of ^ OK
uh UH ^ ^ filler
los NNP los ^ OK
angeles NNP angeles ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'll MD 'll ^ OK
take VB take ^ OK
los NNP los ^ OK
angeles NNP angeles ^ OK

well UH ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
think VBP think ^ OK
city NN city ^ OK
life NN life ^ OK
really RB really ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
ah UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
a DT a ^ OK
city NN city ^ OK
person NN person ^ OK

eve- XX ^ ^ false_start
ev- XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
i PRP ^ ^ repeat
like VBP like ^ OK
the DT the ^ OK
country NN country ^ OK
and CC and ^ OK
the DT the ^ OK
islands NNPS islands ^ OK

but CC but ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
the DT the ^ OK
idea NN idea ^ OK
of IN of ^ OK
going VBG going ^ OK
native JJ native ^ OK
uh PP-TMP-1 ^ ^ filler
is UH is ^ OK
not VBZ not ^ OK
that RB that ^ OK
appealing RB appealing ^ OK
to JJ to ^ OK
me IN me ^ OK
for PRP ^ ^ repeat
for IN for ^ OK
ten IN ten ^ OK
years CD years ^ OK

you PRP you ^ OK
know VBP know ^ OK
i PRP i ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
probably RB probably ^ OK
another DT another ^ OK
city NN city ^ OK
t- XX ^ ^ false_start
like IN ^ ^ repeat
uh UH ^ ^ filler
like IN like ^ OK
any DT any ^ OK
other JJ other ^ OK

but CC but ^ OK
uh UH ^ ^ filler
i PRP i ^ OK
've VBP 've ^ OK
heard VBN heard ^ OK
the DT ^ ^ repeat
the DT the ^ OK
climate NN climate ^ OK
is VBZ is ^ OK
nice JJ nice ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
like VB like ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
heat NN heat ^ OK
and CC and ^ OK
humidity NN humidity ^ OK

and CC and ^ OK
uh UH uh ^ OK

even RB even ^ OK
though IN though ^ OK
and CC and ^ OK

uh UH ^ ^ filler
the DT the ^ OK
year-round JJ year-round ^ OK
w- NN ^ ^ repeat
warmth NN warmth ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
necessarily RB necessarily ^ OK
appeal VB appeal ^ OK
to IN to ^ OK
me PRP me ^ OK

and CC ^ ^ false_start
like IN ^ ^ filler
i PRP i ^ OK
say VBP say ^ OK
i S ^ ^ repeat
i VBP i ^ OK
like PRP ^ ^ repeat
like PRP like ^ OK
city VBP city ^ OK
life NN life ^ OK

but CC but ^ OK
back RB ^ ^ false_start
on IN ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
m- XX ^ ^ repeat
m- RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
maybe RB maybe ^ OK
tomorrow NN tomorrow ^ OK
i PRP i ^ OK
'll MD 'll ^ OK
look VB look ^ OK
up RP up ^ OK
exactly RB exactly ^ OK
where WRB where ^ OK
bora NNP bora ^ OK
bora NNP bora ^ OK
is VBZ is ^ OK

uh UH ^ ^ filler
i PRP i ^ OK
mean VBP mean ^ OK
he- XX he- ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ repeat
just RB just ^ OK
as IN as ^ OK
a DT a ^ OK
guess NN guess ^ OK

uh UH ^ ^ filler
but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
to IN to ^ OK
hawaii NNP hawaii ^ OK

oh UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
fantastic JJ fantastic ^ OK

uh UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
the DT the ^ OK
weather NN weather ^ OK
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
there RB there ^ OK
was ADVP-TMP- 1 was ^ OK
antastic VBD fantastic ^ OK
because JJ because ^ OK
it IN it ^ OK
has PRP has ^ OK
those VBZ ^ ^ repeat
those DT those ^ OK
breezes DT breezes ^ OK

hawaii NNP hawaii ^ OK
's BES 's ^ OK
uh UH ^ ^ filler
more RBR ^ ^ repeat
more RBR more ^ OK
n- RB ^ ^ repeat
north RB north ^ OK
of IN of ^ OK
the DT the ^ OK
equator NN equator ^ OK

and CC ^ ^ false_start
the DT the ^ OK
breezes NNS breezes ^ OK
that WDT ^ ^ repeat
that WDT that ^ OK
come VBP come ^ OK
off IN off ^ OK
the DT the ^ OK
ocean NN ocean ^ OK
are VBP are ^ OK
very RB very ^ OK
very RB very ^ OK
nice JJ nice ^ OK

it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
when WRB when ^ OK
we PRP we ^ OK
were VBD were ^ OK
there RB there ^ OK
i ADVP-TMP- 1 i ^ OK
think PRP think ^ OK
it VBP ^ ^ false_start
was PRP ^ ^ false_start
uh VBD ^ ^ false_start
i UH ^ ^ false_start
c- PRP ^ ^ false_start
the XX the ^ OK
temperature DT temperature ^ OK
was NN was ^ OK
in VBD in ^ OK
the IN the ^ OK
seventies DT seventies ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
not RB not ^ OK
tropical JJ tropical ^ OK

not RB ^ ^ filler
not RB not ^ OK
the DT the ^ OK
tropical JJ tropical ^ OK
heat NN heat ^ OK

that DT that ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
like VB like ^ OK
that DT that ^ OK
uh UH ^ ^ filler
environment NN environment ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
know VB know ^ OK
what WP what ^ OK
constitutes VBZ constitutes ^ OK
reality NN reality ^ OK
t. NN t. ^ OK
v. NN v. ^ OK
because IN because ^ OK
the DT the ^ OK
new JJ new ^ OK
show NN show ^ OK
i PRP i ^ OK
really RB really ^ OK
am VBP ^ ^ false_start
into IN like ^ false_start
is NP-2 is ^ OK
queer VBZ queer ^ OK
eye NNP eye ^ OK
for NNP for ^ OK
the IN the ^ OK
straight DT straight ^ OK
guy NNP guy ^ OK

i PRP i ^ OK

well UH ^ ^ filler
fortunately RB fortunately ^ OK
i PRP i ^ OK
have VBP have ^ OK
watched VBN watched ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
them PRP them ^ OK
just RB ^ ^ false_start
out IN ^ ^ false_start
of IN ^ ^ false_start
because IN because ^ OK
i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's BES 's ^ OK
interesting JJ interesting ^ OK

it PRP it ^ OK
's BES 's ^ OK
just RB ^ ^ false_start
this DT this ^ OK
morbid JJ morbid ^ OK
fascination NN fascination ^ OK
with IN with ^ OK
with IN _ARG_ ^ false_start

it- PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
pretty RB ^ ^ false_start
horrendously RB horrendously ^ OK
trashy JJ trashy ^ OK

i PRP i ^ OK
and CC ^ ^ false_start
i PRP ^ ^ repeat
think VBP think ^ OK
think VBP ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
sort RB sort ^ OK
of RB of ^ OK
the DT the ^ OK
appeal NN appeal ^ OK

is VBZ ^ ^ false_start
that IN ^ ^ false_start
people NNS ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
serves VBZ serves ^ OK
two CD two ^ OK
purposes NNS purposes ^ OK
for IN for ^ OK
two CD two ^ OK
different JJ different ^ OK
populations NNS populations ^ OK

for IN ^ ^ false_start
people NNS people ^ OK
they PRP ^ ^ false_start
who WP who ^ OK
can MD can ^ OK
relate VB relate ^ OK
to IN to ^ OK
the DT the ^ OK
trashiness NN trashiness ^ OK
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
feel VBP feel ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
less RBR less ^ OK
alone JJ alone ^ OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
see VBP see ^ OK
people NNS people ^ OK
who WP who ^ OK
are VBP are ^ OK
r- JJ ^ ^ false_start
just RB just ^ OK
as RB as ^ OK
ridiculous JJ ridiculous ^ OK
as IN as ^ OK
they PRP they ^ OK
are VBP are ^ OK

and CC ^ ^ false_start
then RB ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
for IN for ^ OK
people NNS people ^ OK
who WP who ^ OK
um UH ^ ^ filler
m- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
are VBP are ^ OK
not RB not ^ OK
that DT that ^ OK
way NN way ^ OK
then RB ^ ^ false_start
it PRP it ^ OK
's S-2 's ^ OK
almost BES almost ^ OK
reassuring RB reassuring ^ OK
to JJ to ^ OK
realize TO realize ^ OK
that VB that ^ OK
there IN there ^ OK
's EX 's ^ OK
the BES the ^ OK
frame DT frame ^ OK
of NN of ^ OK
reference IN reference ^ OK
that NN that ^ OK
you WDT you ^ OK
're PRP 're ^ OK
completely VBP completely ^ OK
're PRP _ARG_ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
it PRP it ^ OK
almost RB almost ^ OK
reassures VBZ reassures ^ OK
you PRP you ^ OK
that IN that ^ OK
oh UH ^ ^ false_start
my PRP ^ ^ false_start
gosh UH ^ ^ false_start
i PRP ^ ^ false_start
hav- VBP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
really RB really ^ OK
an DT an ^ OK
intelligent JJ intelligent ^ OK
person NN person ^ OK
because IN because ^ OK
these DT these ^ OK
people NNS people ^ OK
are VBP are ^ OK
lunatics NNS lunatics ^ OK

but CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's SBAR-1 's ^ OK
definitely BES definitely ^ OK
interesting RB interesting ^ OK
that JJ that ^ OK
a IN a ^ OK
lot DT lot ^ OK
of NN of ^ OK
the IN the ^ OK
reality DT reality ^ OK
shows NN shows ^ OK
like NNS like ^ OK
survivor IN survivor ^ OK
and NNP and ^ OK
bachelor CC bachelor ^ OK
are NNP are ^ OK
all VBP all ^ OK
about RB about ^ OK
sort IN ^ ^ false_start
of RB ^ ^ false_start
back RB back ^ OK
stabbing NN stabbing ^ OK
each VBG each ^ OK
other DT other ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
wonder VBP wonder ^ OK
if IN if ^ OK

and CC ^ ^ false_start
how WRB ^ ^ false_start
i PRP ^ ^ repeat
it PRP it ^ OK
worries VBZ worries ^ OK
me PRP me ^ OK
that DT that ^ OK
perpetuates VBZ _ARG_ ^ false_start
really RB really ^ OK
sort RB sort ^ OK
of RB of ^ OK
perpetuates VBZ perpetuates ^ OK
some DT some ^ OK
pretty RB pretty ^ OK
lousy JJ lousy ^ OK
values NNS values ^ OK
that WDT that ^ OK
i PRP i ^ OK
think VBP think ^ OK
are VBP are ^ OK
already RB already ^ OK
e- XX ^ ^ repeat
on IN on ^ OK
t. NN t. ^ OK
v. NN v. ^ OK

and CC ^ ^ false_start
so UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
pretty RB pretty ^ OK
interesting JJ interesting ^ OK
because IN because ^ OK
they PRP they ^ OK
are VBP are ^ OK
very RB ^ ^ repeat
very RB very ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
awful JJ awful ^ OK

they PRP they ^ OK
just RB just ^ OK
're VBP ^ ^ false_start
like RP say ^ false_start
how WRB ^ ^ repeat
how WRB how ^ OK
much RB ^ ^ repeat
much RB much ^ OK
can MD can ^ OK
i PRP i ^ OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
trick VB trick ^ OK
this DT this ^ OK
person NN person ^ OK
lie VB lie ^ OK
to IN to ^ OK
their PRP their ^ OK
face NN face ^ OK
and CC and ^ OK
then RB then ^ OK
get VB get ^ OK
m PRP them ^ OK
to TO to ^ OK
believe VB believe ^ OK
that IN that ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
a DT a ^ OK
good JJ good ^ OK
person NN person ^ OK

but CC but ^ OK
uh UH ^ ^ filler

on UNK on ^ OK
the UNK the ^ OK
side UNK side ^ OK
of UNK of ^ OK
the UNK the ^ OK
roa- UNK roa- ^ OK

and UNK ^ ^ false_start
you UNK i ^ false_start
just UNK really ^ false_start
feel UNK feel ^ OK
like UNK like ^ OK

well UH ^ ^ false_start
um UH ^ ^ filler
there EX ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
heard VBD heard ^ OK
on IN on ^ OK
the DT the ^ OK
news NN news ^ OK
about IN about ^ OK
uh UH ^ ^ filler
this DT this ^ OK
one CD one ^ OK
guy NN guy ^ OK
that WDT that ^ OK
killed VBD killed ^ OK
a DT a ^ OK
cop NN cop ^ OK

now RB now ^ OK
he PRP he ^ OK
done VBN ^ ^ repeat
did VBD did ^ OK
like UH ^ ^ filler
at RB at ^ OK
least RBS least ^ OK
thirty-five CD thirty-five ^ OK
years NNS years ^ OK
in IN in ^ OK
jail NN jail ^ OK

but CC ^ ^ repeat
but CC but ^ OK
i PRP ^ ^ repeat
'd MD ^ ^ repeat
i- PRP i ^ false_start
tell VBP tell ^ OK
you PRP you ^ OK
the DT the ^ OK
truth NN truth ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

tha- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
right JJ right ^ OK

he PRP he ^ OK
was VBD was ^ OK
in IN ^ ^ false_start
uh UH ^ ^ filler
um UH ^ ^ filler
bike- NNS ^ ^ false_start
one CD one ^ OK
of IN of ^ OK
them DT them ^ OK
bikers NNS bikers ^ OK
or CC or ^ OK
something NN something ^ OK

well UH ^ ^ false_start
they PRP ^ ^ false_start
say VBP ^ ^ false_start
wel- UH ^ ^ false_start
the DT the ^ OK
way NN way ^ OK
i PRP i ^ OK
got VBD got ^ OK
it PRP it ^ OK
they ADVP-MNR- 1 ^ ^ false_start
do- PRP ^ ^ false_start
they VBP ^ ^ repeat
they PRP they ^ OK
want PRP want ^ OK
to VB to ^ OK
let TO let ^ OK
him VB him ^ OK
go PRP go ^ OK

and CC ^ ^ false_start
somebody NN ^ ^ false_start
up IN ^ ^ false_start
in IN ^ ^ false_start
the- DT ^ ^ false_start
then RB then ^ OK
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
k- VB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
keep VB keep ^ OK
him PRP him ^ OK
in IN in ^ OK
jail NN jail ^ OK

regardless RB regardless ^ OK
who WP who ^ OK
he PRP he ^ OK
killed VBD killed ^ OK
you NP-1 ^ ^ filler
know PRP ^ ^ filler
you VBP you ^ OK
should PRP should ^ OK
've MD 've ^ OK
let VB let ^ OK
him VB him ^ OK
go PRP go ^ OK

th- PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they ^ OK
have VBP have ^ OK
other JJ other ^ OK
people NNS people ^ OK
that DT ^ ^ repeat
that WDT that ^ OK
killed VBD killed ^ OK
cops NNS cops ^ OK

and CC and ^ OK
they PRP they ^ OK
out RB are ^ false_start
out RB out ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
he PRP he ^ OK
been VBN has ^ false_start
been VBN been ^ OK
in IN in ^ OK
jail NN jail ^ OK
for IN for ^ OK
thirty-five CD thirty-five ^ OK
years NNS years ^ OK

so UH ^ ^ false_start
what WP ^ ^ repeat
uh UH ^ ^ filler
wha- WP ^ ^ repeat
wha- WP ^ ^ repeat
what WP what ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
the DT the ^ OK
hang NN hang ^ OK
up RP up ^ OK
in IN in ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in ^ OK
turning VBG turning ^ OK
him PRP him ^ OK
loose JJ loose ^ OK

me PRP me ^ OK
neither RB neither ^ OK

me PRP me ^ OK
neither RB neither ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
noth- JJ ^ ^ repeat
nobody NN nobody ^ OK
ai VBP ^ ^ repeat
n't RB ^ ^ repeat
ai VBP ^ ^ false_start
n't RB is ^ false_start
going VBG going ^ OK
to TO to ^ OK
make VB make ^ OK
me PRP me ^ OK
do VB do ^ OK
nothing NN anything ^ false_start
to IN to ^ OK
them PRP them ^ OK
that WDT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that ^ OK
will MD will ^ OK
carry VB carry ^ OK
a DT a ^ OK
time NN time ^ OK
like IN like ^ OK
that DT that ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
other RB other ^ OK
than IN than ^ OK
that DT that ^ OK
i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
even RB even ^ OK

man UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
they PRP they ^ OK
thing NN thing ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
like IN like ^ OK
this DT this ^ OK

no DT no ^ OK
matter NN matter ^ OK
what WP what ^ OK
you PRP you ^ OK
do VBP do ^ OK
i NP-1 i ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
knock RB knock ^ OK
it VB it ^ OK

because IN ^ ^ false_start
if IN if ^ OK
that DT that ^ OK
was VBD was ^ OK
the DT the ^ OK
case NN case ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there ^ OK
's BES are ^ false_start
some DT some ^ OK
people NNS people ^ OK
in IN in ^ OK
my PRP my ^ OK
family NN family ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
have VB have ^ OK
got VBN gotten ^ false_start
rid VBN rid ^ OK
of IN of ^ OK
a NP-1 a ^ OK
long DT long ^ OK
time JJ time ^ OK
ago NN ago ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
li- IN ^ ^ repeat
like IN like ^ OK
now RB now ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
get VB get ^ OK
in IN in ^ OK
touch NN touch ^ OK
with IN with ^ OK
me PRP me ^ OK
because IN because ^ OK
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
where WRB where ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
at IN at ^ OK
or ADVP-1 ^ ^ false_start
nothing CC ^ ^ false_start

i PRP i ^ OK
just RB just ^ OK
lea- VBP ^ ^ repeat
leave VBP leave ^ OK
it PRP it ^ OK
at IN at ^ OK
that DT that ^ OK

that DT that ^ OK
way NN way ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
s- VBZ ^ ^ repeat
s- VBZ ^ ^ repeat
saves VBZ saves ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
heartaches NNS heartaches ^ OK
and CC and ^ OK
stuff NN stuff ^ OK
like IN like ^ OK
that DT that ^ OK
there RB ^ ^ false_start

you PRP ^ ^ repeat
you PRP you ^ OK
live VBP live ^ OK
much RB much ^ OK
easier RBR easier ^ OK

my PRP ^ ^ false_start
s- NNS ^ ^ false_start
i PRP i ^ OK
got VBP have ^ false_start
a DT a ^ OK
couple NN couple ^ OK
couple NN ^ ^ false_start
sons NNS of ^ false_start
sons NNS sons ^ OK

yeah UH ^ ^ filler
but CC ^ ^ false_start
they PRP they ^ OK
they PRP ^ ^ false_start
crazy JJ are ^ false_start
crazy JJ crazy ^ OK

they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
even RB even ^ OK
know VB know ^ OK
where WRB where ^ OK
i PRP i ^ OK
live VBP live ^ OK
at IN ^ ^ false_start
or ADVP-1 or ^ OK
nothing CC anything ^ false_start

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
look UH ^ ^ repeat
look UH look ^ OK
eh UH ^ ^ filler
me- XX me- ^ OK

nobody NN nobody ^ OK
ai VBP ^ ^ false_start
n't RB is ^ false_start
here NAC-1 here ^ OK
but RB but ^ OK
my CC ^ ^ repeat
well JJS ^ ^ filler
well UH ^ ^ filler
my UH my ^ OK
oldest PRP ^ ^ repeat
oldest PRP oldest ^ OK
two JJS two ^ OK
daughters CD daughters ^ OK

well UH ^ ^ false_start
my PRP my ^ OK
oldest JJS oldest ^ OK
daughters NNS daughters ^ OK
they PRP ^ ^ false_start
're VBP ^ ^ false_start
my- PRP ^ ^ repeat
my PRP my ^ OK
g- NNS ^ ^ repeat
girls NNS girls ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
know VBP know ^ OK
where WRB where ^ OK
i PRP i ^ OK
'm VBP ^ ^ false_start
at IN am ^ false_start

they PRP they ^ OK
come VBP come ^ OK
see VB see ^ OK
me PRP me ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
my PRP my ^ OK
boys NNS boys ^ OK
hey UH hey ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
tell VBP tell ^ OK
my PRP my ^ OK
girls NNS girls ^ OK
if IN if ^ OK
they PRP they ^ OK
ever RB ever ^ OK
give VBP give ^ OK
my PRP my ^ OK
address NN address ^ OK
out NAC-1 out ^ OK
or RP or ^ OK
phone CC phone ^ OK
number NN number ^ OK
i NN i ^ OK
wo PRP wo ^ OK
n't MD n't ^ OK
even RB even ^ OK
mess RB mess ^ OK
with VB with ^ OK
them IN them ^ OK

jackie NNP jackie ^ OK
twenty-one CD twenty-one ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
sorry JJ sorry ^ OK
eighteen CD eighteen ^ OK
i PRP i ^ OK
mean- VBP mean- ^ OK
oh UH oh ^ OK
boy UH boy ^ OK
twenty-one CD twenty-one ^ OK
and CC and ^ OK
twenty-nine CD twenty-nine ^ OK

eh UH eh ^ OK

so UH ^ ^ false_start
me PRP me ^ OK
we PRP ^ ^ false_start
and CC and ^ OK
we PRP ^ ^ false_start
my PRP my ^ OK
we PRP ^ ^ false_start
wife NN wife ^ OK
we PRP ^ ^ false_start
and CC ^ ^ false_start
here RB are ^ false_start
here RB here ^ OK
jus- RB ^ ^ repeat
just RB just ^ OK
and CC ^ ^ false_start
her PRP her ^ OK
and CC and ^ OK
i PRP i ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
we PRP we ^ OK
doing VBG are ^ false_start
doing VBG doing ^ OK
all RB all ^ OK
right RB right ^ OK

um UH ^ ^ filler
one CD one ^ OK
nine CD nine ^ OK
one CD one ^ OK
seven CD seven ^ OK
and CC and ^ OK
one CD one ^ OK
five CD five ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
we PRP we ^ OK
're VBP 're ^ OK
um UH ^ ^ filler
less RBR less ^ OK
likely JJ likely ^ OK
to TO to ^ OK
believe VB believe ^ OK
in IN in ^ OK
the DT the ^ OK
future NN future ^ OK
of IN of ^ OK
such JJ such ^ OK
things NNS things ^ OK
and CC ^ ^ repeat
and CC and ^ OK
in IN in ^ OK
um UH the ^ false_start
um UH ^ ^ filler
future NN future ^ OK
of IN of ^ OK
uh UH ^ ^ filler
current JJ current ^ OK
investments NNS investments ^ OK
particularly RB particularly ^ OK
in IN in ^ OK
retirement NN retirement ^ OK
funding NN funding ^ OK

well UH ^ ^ false_start
per- RB ^ ^ repeat
personally RB personally ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
sixty-two CD sixty-two ^ OK

so RB so ^ OK
i PRP i ^ OK
had VBD had ^ OK
my PRP my ^ OK
uh UH ^ ^ filler
eh UH ^ ^ filler
retirement NN retirement ^ OK
um UH ^ ^ filler
in IN in ^ OK
an DT an ^ OK
i. NNP i. ^ OK
r. NNP r. ^ OK
a. NNP a. ^ OK
and CC and ^ OK
uh UH ^ ^ filler
pretty RB pretty ^ OK
much RB much ^ OK
socked VBD stocked ^ false_start
away RB away ^ OK
before IN before ^ OK
it PRP ^ ^ false_start
r- XX ^ ^ false_start
m- XX ^ ^ false_start
eh UH ^ ^ filler
this DT this ^ OK
s- NN ^ ^ repeat
sort NN sort ^ OK
of IN of ^ OK
thing NN thing ^ OK
started VBD started ^ OK

but CC but ^ OK
it PRP it ^ OK
certainly RB certainly ^ OK
has VBZ has ^ OK
affected VBN affected ^ OK
my PRP my ^ OK
um UH ^ ^ filler
belief NN belief ^ OK
system NN system ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
a- CC ^ ^ repeat
and CC ^ ^ false_start
because IN because ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
of IN of ^ OK
retirement NN retirement ^ OK
age NN age ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
much RB much ^ OK
more RBR more ^ OK
um UH ^ ^ filler
afraid JJ afraid ^ OK
of IN of ^ OK
what WP what ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
happen VB happen ^ OK

i PRP ^ ^ false_start
was VBD ^ ^ false_start
y- XX ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
heavily RB heavily ^ OK
funded VBN funded ^ OK
in IN in ^ OK
stocks NNS stocks ^ OK
because IN because ^ OK
things NNS things ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
looked VBD looked ^ OK
pretty RB pretty ^ OK
cheerful JJ cheerful ^ OK

so UH so ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
to TO to ^ OK
change VB change ^ OK
my PRP my ^ OK
investment NN investment ^ OK
um UH ^ ^ filler
picture NN picture ^ OK
as RB ^ ^ false_start
soo- RB ^ ^ false_start
i- XX ^ ^ false_start
a- XX ^ ^ false_start
if IN if ^ OK
things NNS things ^ OK
do VBP do ^ OK
in IN in ^ OK
fact NN fact ^ OK
stabilize VB stabilize ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
have VBP ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
constantly RB constantly ^ OK
afraid JJ afraid ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
to TO to ^ OK
get VB get ^ OK
a DT a ^ OK
phone NN phone ^ OK
call NN call ^ OK
and CC and ^ OK
one CD ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
one CD one ^ OK
of IN ^ ^ repeat
of IN of ^ OK
them PRP ^ ^ repeat
them PRP them ^ OK

tha- DT ^ ^ repeat
right UH right ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
something NN something ^ OK
that WDT that ^ OK
is VBZ is ^ OK
so RB so ^ OK
different JJ different ^ OK
from IN from ^ OK
whe- WRB ^ ^ repeat
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
their PRP their ^ OK
age NN age ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
things NNS things ^ OK
were VBD were ^ OK
so RB so ^ OK
much RB much ^ OK
more RBR more ^ OK
stable JJ stable ^ OK

um UH ^ ^ filler
well UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
a DT a ^ OK
liberal JJ liberal ^ OK
democrat NNP democrat ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
i PRP ^ ^ repeat
really RB really ^ OK
um UH ^ ^ filler
fear VBP fear ^ OK
that IN that ^ OK
um UH ^ ^ filler
the DT the ^ OK
way NN way ^ OK
things NNS things ^ OK
have VBP have ^ OK
gone VBN gone ^ OK
where WRB where ^ OK
e- RB ^ ^ repeat
economically RB economically ^ OK
um UH ^ ^ filler
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ false_start
're VBP ^ ^ false_start
so RB ^ ^ false_start
eh UH ^ ^ filler
uh UH ^ ^ filler
w- PRP ^ ^ repeat
we PRP we ^ OK
have VBP have ^ OK
gone VBN gone ^ OK
way RB way ^ OK
back RB back ^ OK
into IN into ^ OK
debt NN debt ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
wish VBP wish ^ OK
that IN that ^ OK
we PRP we ^ OK
had VBD had ^ OK
n't RB n't ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
wish VBP wish ^ OK
that IN that ^ OK
mm UH ^ ^ filler
we PRP we ^ OK
were VBD were ^ OK
not RB not ^ OK
in IN in ^ OK
a DT ^ ^ repeat
um UH ^ ^ filler
a DT a ^ OK
spending NN spending ^ OK
and CC and ^ OK
an DT an ^ OK
indebted JJ indebted ^ OK
economy NN economy ^ OK

i PRP ^ ^ false_start
d- VBP ^ ^ false_start
i PRP i ^ OK
wish VBP wish ^ OK
that IN that ^ OK
um UH ^ ^ filler
we PRP we ^ OK
were VBD were ^ OK
not RB not ^ OK
so RB so ^ OK
heavily RB heavily ^ OK
dependent JJ dependent ^ OK
on IN on ^ OK
petroleum NN petroleum ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
would MD would ^ OK
like VB like ^ OK
to TO to ^ OK
see VB see ^ OK
us PRP us ^ OK
uh UH ^ ^ filler
be VB be ^ OK
less RBR less ^ OK
so RB so ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
very RB very ^ OK
concerned VBN concerned ^ OK
u UH ^ ^ filler
about IN about ^ OK
the DT the ^ OK
situation NN situation ^ OK
in IN in ^ OK
the DT the ^ OK
middle NNP middle ^ OK
east NNP east ^ OK
right RB right ^ OK
now RB now ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
w- MD ^ ^ false_start
i PRP ^ ^ false_start
oh UH oh ^ OK
dear UH dear ^ OK
could MD could ^ OK
i PRP i ^ OK
go VB go ^ OK
on RB on ^ OK

what WP ^ ^ false_start
because IN because ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want ^ OK
to TO to ^ OK
stray VB stray ^ OK
too RB too ^ OK
far RB far ^ OK
from IN from ^ OK
that DT that ^ OK

s- JJ ^ ^ repeat
same JJ same ^ OK
here RB here ^ OK

th- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
my PRP my ^ OK
preference NN preference ^ OK

a- IN ^ ^ repeat
although IN although ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
'm VBP 'm ^ OK
up IN up ^ OK
for IN for ^ OK
ah UH ^ ^ filler
about RB about ^ OK
uh UH ^ ^ filler
anything NN anything ^ OK
really RB really ^ OK

bu- RB ^ ^ repeat
basically RB basically ^ OK
tha- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
right JJ right ^ OK

uh UH ^ ^ filler
n- XX ^ ^ repeat
you PRP you ^ OK
know VBP know ^ OK

uh UH uh ^ OK
e- XX e- ^ OK
oh UH oh ^ OK

sa- JJ ^ ^ repeat
same JJ same ^ OK
here RB here ^ OK

y- PRP ^ ^ repeat
you PRP you ^ OK
know VBP know ^ OK

uh UH ^ ^ filler
yeah UH ^ ^ filler
uh UH ^ ^ filler
well UH ^ ^ false_start
i- IN ^ ^ repeat
i- IN ^ ^ repeat
if IN if ^ OK
it PRP it ^ OK
's BES 's ^ OK
prepared VBN prepared ^ OK
correctly RB correctly ^ OK
i- PRP ^ ^ repeat
it PRP it ^ OK
should MD should ^ OK
n't RB n't ^ OK
be VB be ^ OK
overbearing VBG overbearing ^ OK

i- PRP ^ ^ repeat
it PRP it ^ OK
does VBZ does ^ OK

but CC but ^ OK
um UH ^ ^ filler
i- PRP ^ ^ repeat
it PRP ^ ^ false_start
again RB again ^ OK
n- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i- IN ^ ^ repeat
if IN if ^ OK
it PRP it ^ OK
's BES 's ^ OK
prepared VBN prepared ^ OK
correctly RB correctly ^ OK
uh UH ^ ^ filler
th- DT ^ ^ repeat
the DT the ^ OK
garlic NN garlic ^ OK
should MD should ^ OK
not RB not ^ OK
be VB be ^ OK
you PRP you ^ OK
know VBP know ^ OK
n- XX ^ ^ repeat
strong JJ strong ^ OK

i- PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
should MD should ^ OK
just RB just ^ OK
be VB be ^ OK
a DT a ^ OK
uh UH ^ ^ filler
mild JJ mild ^ OK
uh UH ^ ^ filler
background NN background ^ OK
ki- NN ^ ^ repeat
kind NN kind ^ OK
of IN of ^ OK
a DT a ^ OK
taste NN taste ^ OK

i- XX ^ ^ filler
exactly UH exactly ^ OK

y- PRP ^ ^ repeat
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
a DT a ^ OK
little JJ little ^ OK
dash NN dash ^ OK
more JJR more ^ OK
or CC or ^ OK
less JJR less ^ OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

um UH ^ ^ filler
b- VBG ^ ^ repeat
beings VBG being ^ false_start
tha- IN ^ ^ repeat
that IN that ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
a DT a ^ OK
non JJ non ^ OK
drinker NN drinker ^ OK
ah UH ^ ^ filler
ty- RB ^ ^ repeat
typically RB typically ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
drink VB drink ^ OK
wine NN wine ^ OK

uh UH ^ ^ filler
it PRP ^ ^ false_start
uh UH ^ ^ filler
only RB only ^ OK
on IN on ^ OK
very RB very ^ OK
rare JJ rare ^ OK
occasions NNS occasions ^ OK

n- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i- IN ^ ^ repeat
if IN if ^ OK
i PRP i ^ OK
eat VBP eat ^ OK
dinner NN dinner ^ OK
at IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
ah UH ^ ^ filler
a- IN ^ ^ repeat
at IN at ^ OK
a DT a ^ OK
e- XX ^ ^ repeat
wedding NN wedding ^ OK
or CC or ^ OK
uh UH ^ ^ filler
what WP what ^ OK
have VBP have ^ OK
you PRP you ^ OK
will NP-1 will ^ OK
i MD i ^ OK
have PRP have ^ OK
a VBP a ^ OK
uh DT ^ ^ filler
glass UH glass ^ OK
of NN of ^ OK
wine IN wine ^ OK
or NN or ^ OK
champagne CC champagne ^ OK

e- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
t- RB ^ ^ repeat
typically RB typically ^ OK
um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
a DT a ^ OK
wine NN wine ^ OK
person NN person ^ OK

ah UH ^ ^ filler
for IN ^ ^ repeat
for IN for ^ OK
ten CD ten ^ OK
minutes NNS minutes ^ OK

ah UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
from IN from ^ OK
ah UH ^ ^ filler
pittsburgh NNP pittsburgh ^ OK
pennsylvania NNP pennsylvania ^ OK

but CC but ^ OK
basically RB basically ^ OK
the DT ^ ^ repeat
the DT the ^ false_start
uh UH ^ ^ filler
p- JJ ^ ^ repeat
penn NNP penn ^ OK
state NNP state ^ OK
main JJ main ^ OK
campus NN campus ^ OK
is VBZ is ^ OK
roughly RB ^ ^ repeat
mm UH ^ ^ false_start
ah UH ^ ^ filler
uh UH ^ ^ filler
we- XX ^ ^ false_start
oh UH ^ ^ filler
ro- XX ^ ^ repeat
roughly RB roughly ^ OK
about RB about ^ OK
a DT a ^ OK
hundred CD hundred ^ OK
miles NNS miles ^ OK
away RB away ^ OK
from IN from ^ OK
me PRP me ^ OK

s- XX ^ ^ repeat
so UH so ^ OK
it PRP it ^ OK
's BES 's ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
ball NN ball ^ OK
park NN park ^ OK

e- XX e- ^ OK
oh UH oh ^ OK

th- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
great JJ great ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
have VBP have ^ OK
some DT some ^ OK
family NN family ^ OK
down IN down ^ OK
in IN in ^ OK
houston NNP houston ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
a- RB ^ ^ repeat
also RB also ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
have VBP have ^ OK
a DT a ^ OK
couple NN couple ^ OK
relatives NNS relatives ^ OK
in IN in ^ OK
stafford NNP stafford ^ OK
texas NNP texas ^ OK
as RB as ^ OK
well RB well ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
down IN down ^ OK
there RB there ^ OK
eh UH ^ ^ filler
a DT a ^ OK
couple NN couple ^ OK
times NNS times ^ OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
like VB like ^ OK
texas NNP texas ^ OK

ho- RB ^ ^ repeat
however RB however ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
sure JJ sure ^ OK
if IN if ^ OK
i PRP i ^ OK
would MD would ^ OK
want VB want ^ OK
i PRP ^ ^ false_start
've VBP ^ ^ false_start
ne- RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
to TO ^ ^ false_start
to TO ^ ^ repeat
do VB ^ ^ false_start
that DT to ^ false_start
live VB live ^ false_start
there RB there ^ false_start

y- XX y- ^ OK
oh UH oh ^ OK

a- CC ^ ^ repeat
and CC ^ ^ false_start
th- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
about RB about ^ OK
it PRP it ^ OK

hot JJ hot ^ OK
and CC and ^ OK
muggy JJ muggy ^ OK

y- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
v- RB ^ ^ repeat
very RB very ^ OK
humid JJ humid ^ OK

y- PRP ^ ^ repeat
you PRP you ^ OK
know VBP know ^ OK

not RB not ^ OK
not RB ^ ^ repeat
a DT a ^ OK
a- DT ^ ^ repeat
lot NN lot ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there ^ OK
was VBD were ^ false_start
some DT some ^ OK
empty JJ empty ^ OK
warheads NNS warheads ^ OK
i PRP ^ ^ filler
guess VBP ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK
were VBD were ^ OK
used VBN used ^ OK
for IN for ^ OK
like UH ^ ^ filler
biological JJ biological ^ OK
weapons NNS weapons ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
know VBP know ^ OK
that IN that ^ OK
they PRP they ^ OK
have VBP have ^ OK
other JJ other ^ OK
information NN information ^ OK
that WDT that ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
about IN about ^ OK
what WP what ^ OK
he PRP he ^ OK
's BES 's ^ OK
actually RB actually ^ OK
up IN up ^ OK
to IN to ^ OK

so UH so ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
th- VB ^ ^ repeat
think VB think ^ OK
bush NNP bush ^ OK
would MD would ^ OK
do VB do ^ OK
this DT this ^ OK
just RB just ^ OK
for IN for ^ OK
getting VBG getting ^ OK
his PRP his ^ OK
father NN father ^ OK
's POS 's ^ OK
legacy NN legacy ^ OK
resolved VBN resolved ^ OK

do VBP do ^ OK
you PRP you ^ OK
know VBP know ^ OK
what WP what ^ OK
i PRP i ^ OK
mean VBP mean ^ OK

but NP-1 ^ ^ repeat
uh CC ^ ^ filler
but UH but ^ OK
i CC i ^ OK
do PRP do ^ OK
think VBP think ^ OK
if VB if ^ OK
it IN it ^ OK
's PRP 's ^ OK
necessary BES necessary ^ OK
we JJ we ^ OK
should PRP should ^ OK
go MD go ^ OK
in VB in ^ OK
there IN there ^ OK
and RB and ^ OK
do CC do ^ OK
whatever VB whatever ^ OK
we WDT we ^ OK
need PRP need ^ OK
to VBP to ^ OK
do TO do ^ OK

well UH ^ ^ false_start
just RB just ^ OK
get VB get ^ OK
saddam NNP saddam ^ OK
out IN out ^ OK
of IN of ^ OK
there RB there ^ OK
is VBZ is ^ OK
what WP what ^ OK
i PRP i ^ OK
think VBP think ^ OK

and CC ^ ^ false_start
then RB then ^ OK
eh UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
he PRP he ^ OK
learned VBD learned ^ OK
that DT that ^ OK
lesson NN lesson ^ OK
with IN ^ ^ repeat
i PRP ^ ^ false_start
would MD ^ ^ false_start
have VB ^ ^ false_start
thought VBN ^ ^ false_start
anyway RB ^ ^ false_start
with IN with ^ OK
north NNP north ^ OK
korea NNP korea ^ OK
calling VBG calling ^ OK
them PRP them ^ OK
axis NNP axis ^ OK
of IN of ^ OK
evil NNP evil ^ OK

and CC ^ ^ false_start
then RB then ^ OK
here RB here ^ OK
there EX they ^ false_start
are VBP are ^ OK
mm UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
upset JJ upset ^ OK
with IN with ^ OK
us PRP us ^ OK
and CC and ^ OK
threatening VBG threatening ^ OK
to TO to ^ OK
use VB use ^ OK
nuclear JJ nuclear ^ OK
weapons NNS weapons ^ OK

i PRP i ^ OK
would MD would ^ OK
hope VB hope ^ OK
it PRP it ^ OK
would MD would ^ OK
be VB be ^ OK
somewhat RB somewhat ^ OK
like IN like ^ OK
um UH ^ ^ filler
the DT the ^ OK
first JJ first ^ OK
war NN war ^ OK
eh UH ^ ^ filler
with IN with ^ OK
iraq NNP iraq ^ OK

that IN that ^ OK
it PRP ^ ^ repeat
there EX there ^ OK
would MD ^ ^ repeat
would MD would ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
be VB ^ ^ repeat
be VB be ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
loss NN loss ^ OK
of IN of ^ OK
life NN life ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
sure JJ sure ^ OK
why RB why ^ OK

um UH ^ arg1 filler
but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
think VB think predicate OK
it PRP it arg0 OK
has VBZ has predicate OK
has VBZ _ARG_ arg1 false_start

i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg1 OK
just RB just argM_adverb OK
seems VBZ seems arg1 OK
like IN like arg2 OK
something NN something arg1 OK
to TO to arg2 OK
be VB be arg2 OK
more RBR more arg2 OK
aware JJ aware arg2 OK
of IN of arg2 OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
that IN ^ ^ repeat
that IN that ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
feel VB feel predicate OK
like IN like arg1 OK
it PRP ^ ^ false_start
how WRB ^ ^ repeat
how WRB how arg1 false_start
it PRP ^ ^ false_start
they PRP they arg1 false_start
it PRP ^ ^ false_start
've VBP 've arg1 false_start
it PRP ^ ^ false_start
approached VBN approached arg1 false_start
it PRP ^ ^ false_start
marriage NN marriage arg1 false_start
's HVS has arg1 false_start
changed VBN changed arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
they PRP they arg0 OK
're VBP 're arg1 OK
still RB still argM_adverb OK
you PRP ^ ^ filler
know VBP ^ ^ filler
willing JJ willing arg1 OK
to TO to arg1 OK
risk VB risk arg1 OK
it PRP it arg1 OK
i PRP ^ ^ filler
guess VBP ^ ^ filler

i PRP i arg0 OK
um UH ^ ^ filler
think VBP think predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
about RB ^ ^ repeat
about IN about arg2 OK
half NN half arg2 OK

but CC ^ ^ false_start
um UH ^ ^ filler
my PRP ^ ^ repeat
my PRP my arg1 OK
parents NNS parents arg1 OK
are VBP are ^ OK
not RB not argM_neg OK
divorced JJ divorced predicate OK

um UH ^ ^ filler
and CC ^ ^ false_start
trying VBG ^ ^ false_start
to TO ^ ^ false_start
think VB ^ ^ false_start
although RB although argM_adverb OK
most JJS most arg1 OK
of IN of arg1 OK
my PRP my arg1 OK
married JJ married arg1 OK
friends NNS friends arg1 OK
' POS ' arg1 OK
parents NNS parents arg1 OK
did VBD did ^ OK
n't RB n't argM_neg OK
get VB get predicate OK
divorced JJ divorced arg1 OK

so UH ^ ^ filler
maybe RB ^ ^ repeat
maybe RB maybe argM_adverb OK
they PRP they arg0 OK
were VBD were predicate OK
more RBR more argM_extent OK
likely JJ likely argM_adverb OK
to TO to arg2 OK
get VB get arg2 OK
married JJ married arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
earlier RBR earlier argM_tmp OK
than IN ^ ^ repeat
than IN than argM_adverb OK
people NNS people arg1 OK
whose WP whose arg1 OK
parents NNS parents arg1 OK
are VBP are argM_tmp OK
divorced JJ divorced argM_tmp OK

i PRP ^ ^ repeat
i PRP i ^ OK
think VBP ^ ^ repeat
think VBP think ^ OK
that IN ^ ^ repeat
that IN that ^ OK
um UH ^ ^ filler

um UH ^ ^ filler
well UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
having VBG having arg1 OK
it PRP it arg1 OK
be VB be arg1 OK
more RBR more arg1 OK
sociably RB sociably arg1 OK
acceptable JJ acceptable arg1 OK
is VBZ is arg1 OK
probably RB probably arg2 OK
better JJR better arg2 OK
because IN because argM_cause OK
then RB then argM_adverb OK
people NNS people arg1 OK
are VBP are argM_cause OK
n't RB n't argM_neg OK
staying VBG staying argM_cause OK
in IN ^ ^ repeat
in IN in argM_loc OK
you PRP ^ ^ filler
know VBP ^ ^ filler
bad JJ bad argM_loc OK
relationships NNS relationships argM_loc OK

um UH ^ ^ filler
actually RB ^ ^ false_start
most JJS ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
most JJS ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
people NNS ^ ^ false_start
most JJS ^ ^ false_start
of IN ^ ^ false_start
my PRP ^ ^ false_start
aunts NNS ^ ^ false_start
and CC ^ ^ false_start
uncles NNS ^ ^ false_start
and CC ^ ^ false_start
everything NN ^ ^ false_start
have VBP ^ ^ false_start
we PRP we arg0 OK
've VBP 've ^ OK
never RB never argM_neg OK
really RB really argM_adverb OK
had VBN had predicate OK
divorce NN divorce arg1 OK
in IN ^ ^ repeat
in IN in argM_loc OK
my PRP my argM_loc OK
family NN family argM_loc OK

and CC ^ ^ false_start
i PRP ^ ^ filler
know VBP ^ ^ filler
my PRP ^ ^ repeat
my PRP my arg1 OK
grandparents NNS grandparents arg1 OK
really RB really argM_adverb OK
are VBP are predicate OK
upset JJ upset arg2 OK
about IN about arg2 OK
it PRP it arg2 OK
because IN because argM_cause OK
they PRP they arg0 OK
have VBP have argM_cause OK
never RB never argM_neg OK
you PRP ^ ^ filler
know VBP ^ ^ filler
had VBN had argM_mod OK
to TO to argM_mod OK
deal VB deal argM_cause OK
with IN with arg1 OK
it PRP it arg1 OK

and CC ^ ^ false_start
not RB not ^ OK
necessarily RB necessarily ^ OK
for IN for ^ OK
the DT the ^ OK
better JJR better ^ OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
can MD ^ ^ repeat
can MD can argM_mod OK
be VB ^ ^ repeat
be VB be arg1 OK
hard JJ hard arg2 OK
on IN on arg2 OK
families NNS families arg2 OK
especially RB especially argM_adverb OK
if IN if argM_adverb OK
there EX there arg0 OK
are VBP are arg1 OK
kids NNS kids arg1 OK
involved VBN involved arg1 OK

i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
she PRP ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
she PRP she arg1 OK
was VBD was arg2 OK
n't RB n't argM_neg OK
aware JJ aware arg2 OK
of IN of arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
problems NNS problems arg2 OK
then RB ^ ^ false_start

i PRP i arg0 OK
remember VBP remember predicate OK
when WRB when argM_tmp OK
i PRP i argM_tmp OK
was VBD was argM_tmp OK
um UH ^ ^ filler
in IN in argM_tmp OK
elementary JJ elementary argM_tmp OK
school NN school argM_tmp OK
my ADVP-TMP- 1 my arg1 OK
best PRP best arg1 OK
friend JJS friend arg1 OK
's NN 's arg1 OK
parents POS parents arg1 OK
were NNS were arg1 OK
divorced VBD divorced arg1 OK

and CC ^ ^ false_start
her PRP her arg0 OK
parents NNS parents arg0 OK
would MD would argM_mod OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
com- VB ^ ^ repeat
compete VB compete predicate OK
for IN for arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
her PRP her arg2 OK
love NN love arg2 OK
and CC and arg2 OK
affection NN affection arg2 OK
by IN by argM_mnr OK
um UH ^ ^ filler
seeing VBG seeing argM_mnr OK
who WP who arg0 OK
could MD could argM_mod OK
give VB give arg1 OK
her PRP her arg2 OK
the DT the arg1 OK
best JJS best arg1 OK
presents NNS presents arg1 OK

but CC ^ ^ false_start
um UH um ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
think VB think predicate OK
it PRP ^ ^ false_start
how WRB how arg1 false_start
it PRP ^ ^ false_start
i PRP i arg1 false_start
it PRP ^ ^ false_start
think VBP think arg1 false_start
it PRP ^ ^ false_start
about IN about arg1 false_start
it PRP ^ ^ false_start
marriage NN marriage arg1 false_start
's HVS is arg1 false_start
really RB really argM_adverb OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
hugely RB hugely argM_adverb OK
impacted VBN impacted arg1 OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
and CC ^ ^ false_start
i PRP ^ ^ false_start
actually RB actually argM_adverb OK
one CD one arg1 OK
of IN of arg1 OK
my PRP my arg1 OK
friends NNS friends arg1 OK
has VBZ has ^ OK
gotten VBN gotten predicate OK
married JJ married arg1 OK
and CC and ^ OK
has VBZ has ^ OK
gotten VBN gotten predicate OK
divorced JJ divorced arg1 OK
already RB already argM_adverb OK

so UH ^ ^ filler
we PRP ^ ^ repeat
we PRP we arg1 OK
were VBD were predicate OK
n't RB n't argM_neg OK
that RB that arg2 OK
surprised JJ surprised arg2 OK
that IN that arg2 OK
they PRP they arg0 OK
got VBD got arg2 OK
divorced JJ divorced arg1 OK
actually RB actually argM_adverb OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
really RB really ^ OK
know VB know predicate OK
what WP what arg0 OK
constitutes VBZ constitutes arg1 OK
reality NN reality arg1 OK
t. NN t. arg1 OK
v. NN v. arg1 OK
because IN because ^ OK
the DT the arg1 OK
new JJ new arg1 OK
show NN show arg1 OK
i PRP i arg1 OK
am VBP am arg1 OK
really RB really arg1 OK
into IN into arg1 OK
is NP-2 is predicate OK
queer VBZ queer arg2 OK
eye NNP eye arg2 OK
for NNP for arg2 OK
the IN the arg2 OK
straight DT straight arg2 OK
guy NNP guy arg2 OK

i PRP i ^ OK

well UH ^ ^ filler
fortunately RB fortunately ^ OK
i PRP i arg0 OK
have VBP have ^ OK
watched VBN watched predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
them PRP them arg2 OK
just RB ^ ^ false_start
out IN ^ ^ false_start
of IN ^ ^ false_start
because IN because ^ OK
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
interesting JJ interesting arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
just RB just argM_extent OK
this DT this arg2 OK
morbid JJ morbid arg2 OK
fascination NN fascination arg2 OK
with IN with ^ OK
with IN _ARG_ arg2 false_start

it- PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
pretty RB pretty arg2 OK
horrendously RB horrendously arg2 OK
trashy JJ trashy arg2 OK

i PRP i arg0 OK
and CC ^ ^ false_start
i PRP ^ ^ repeat
think VBP think ^ OK
think VBP ^ predicate repeat
that DT that arg1 OK
's BES 's arg1 OK
sort RB sort arg2 OK
of RB of arg2 OK
the DT the arg2 OK
appeal NN appeal arg2 OK

is VBZ ^ ^ false_start
that IN ^ ^ false_start
people NNS ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg0 OK
sort RB sort arg1 OK
of RB of arg1 OK
serves VBZ serves arg1 OK
two CD two arg1 OK
purposes NNS purposes arg1 OK
for IN for arg2 OK
two CD two arg2 OK
different JJ different arg2 OK
populations NNS populations arg2 OK

for IN ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
people NNS ^ arg0 false_start
they PRP people ^ false_start
who WP who arg0 false_start
can MD can arg0 false_start
relate VB relate arg0 false_start
to IN to arg0 false_start
the DT the arg0 false_start
trashiness NN trashiness arg0 false_start
feel VBP feel arg1 OK
a DT a arg1 OK
little JJ little arg1 OK
bit NN bit arg1 OK
less RBR less arg1 OK
alone JJ alone arg1 OK
because IN because arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
see VBP see arg1 OK
people NNS people arg1 OK
who WP who arg1 OK
are VBP are arg1 OK
just RB just arg2 OK
as RB as arg2 OK
r- JJ ^ ^ repeat
ridiculous JJ ridiculous arg2 OK
as IN as arg2 OK
they PRP they arg1 OK
are VBP are arg2 OK

and CC ^ arg2 false_start
then RB ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
for IN for argM_other OK
people NNS people argM_other OK
who WP who argM_other OK
um UH ^ ^ filler
m- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
are VBP are argM_other OK
not RB not argM_other OK
that DT that argM_other OK
way NN way argM_other OK
then RB then arg1 OK
it PRP it arg1 OK
's S-2 's arg1 OK
almost BES almost arg1 OK
reassuring RB reassuring arg1 OK
to JJ to arg1 OK
realize TO realize arg1 OK
that VB that arg1 OK
there IN there arg1 OK
's EX 's arg1 OK
the BES the arg1 OK
frame DT frame arg1 OK
of NN of arg1 OK
reference IN reference arg1 OK
that NN that arg1 OK
you WDT you arg1 OK
're PRP 're arg1 OK
completely VBP completely ^ OK
completely VBP _ARG_ argM_extent false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
it PRP it arg0 OK
almost RB almost ^ OK
reassures VBZ reassures predicate OK
you PRP you arg1 OK
that IN that arg2 OK
oh UH ^ ^ filler
my PRP ^ ^ filler
gosh UH ^ ^ filler
i PRP ^ ^ false_start
hav- VBP ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm arg2 OK
really RB really arg2 OK
an DT an arg2 OK
intelligent JJ intelligent arg2 OK
person NN person arg2 OK
because IN because arg2 OK
these DT these arg1 OK
people NNS people arg1 OK
are VBP are arg2 OK
lunatics NNS lunatics arg2 OK

but CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's SBAR-1 's predicate OK
definitely BES definitely arg1 OK
interesting RB interesting arg1 OK
that JJ that arg1 OK
a IN a arg1 OK
lot DT lot arg1 OK
of NN of arg1 OK
the IN the arg1 OK
reality DT reality arg1 OK
shows NN shows arg1 OK
like NNS like arg1 OK
survivor IN survivor arg1 OK
and NNP and arg1 OK
bachelor CC bachelor arg1 OK
are NNP are arg1 OK
all VBP all arg2 OK
about RB about arg2 OK
sort IN ^ ^ false_start
of RB ^ ^ false_start
back RB back arg2 OK
stabbing NN stabbing arg2 OK
each VBG each arg1 OK
other DT other arg1 OK

and CC ^ ^ false_start
i PRP i ^ OK
wonder VBP wonder ^ OK
if IN if ^ OK

and CC ^ ^ false_start
how WRB ^ ^ false_start
i PRP ^ ^ false_start
it PRP it arg0 OK
worries VBZ worries predicate OK
me PRP me arg1 OK
that DT that ^ OK
that DT that arg0 false_start
really RB really arg2 OK
sort RB sort arg2 OK
of RB of arg2 OK
perpetuates VBZ perpetuates arg2 OK
some DT some arg1 OK
pretty RB pretty arg1 OK
lousy JJ lousy arg1 OK
values NNS values arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
think VBP think arg1 OK
are VBP are arg1 OK
already RB already arg2 OK
e- XX ^ ^ false_start
on IN on arg2 OK
t. NN t. arg2 OK
v. NN v. arg2 OK

and CC ^ ^ false_start
so UH ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
pretty RB pretty arg1 OK
interesting JJ interesting arg1 OK
because IN because ^ OK
they PRP they arg1 OK
are VBP are predicate OK
very RB ^ ^ repeat
very RB very arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
awful JJ awful arg2 OK

they PRP they arg0 OK
're VBP 're ^ OK
just RB ^ ^ false_start
like RP saying predicate false_start
how WRB ^ ^ repeat
how WRB how arg1 OK
much RB ^ ^ repeat
much RB much arg1 OK
can MD can arg1 OK
i PRP i arg0 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
trick VB trick arg1 OK
this DT this arg1 OK
person NN person arg1 OK
lie VB lie arg1 OK
to IN to arg2 OK
their PRP their arg2 OK
face NN face arg2 OK
and CC and arg1 OK
then RB then arg1 OK
get VB get arg1 OK
m PRP them arg0 OK
to TO to arg1 OK
believe VB believe arg1 OK
that IN that arg1 OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
a DT a arg2 OK
good JJ good arg2 OK
person NN person arg2 OK

but CC but ^ OK
uh UH ^ ^ filler

on UNK on ^ OK
the UNK the ^ OK
side UNK side ^ OK
of UNK of ^ OK
the UNK the ^ OK
roa- UNK roa- ^ OK
and UNK and ^ OK
you UNK you ^ OK
just UNK just ^ OK
feel UNK feel ^ OK
like UNK like ^ OK

right RB right ^ OK
now RB now ^ OK
is VBZ is ^ OK
a DT a ^ OK
critical JJ critical ^ OK
time NN time ^ OK
um UH ^ ^ filler
to TO to ^ OK
be VB be ^ OK
considering VBG considering ^ OK
the DT the ^ OK
issue NN issue ^ OK
of IN of ^ OK
disarming VBG disarming ^ OK
iraq NNP iraq ^ OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
especially RB ^ ^ repeat
especially RB especially ^ OK
do VBP do ^ OK
n't RB n't ^ OK
understand VB understand ^ OK
why WRB why ^ OK
they PRP they ^ OK
talk VBP talk ^ OK
about IN about ^ OK
disarming VBG disarming ^ OK
iraq NNP iraq ^ OK
before IN before ^ OK
they PRP they ^ OK
even RB even ^ OK
unders- VBP understand ^ false_start
or CC or ^ OK
plu- XX ^ ^ repeat
prove VBP prove ^ OK

eh UH ^ ^ filler
eh UH ^ ^ filler
in IN in ^ OK
israel NNP israel ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
all DT all ^ OK
i PRP i ^ OK
heard VBD heard ^ OK

so RB so ^ OK
the DT the ^ OK
reason NN reason ^ OK
for IN for ^ OK
pursuing VBG ^ ^ repeat
um UH ^ ^ filler
um UH ^ ^ filler
pursuing VBG pursuing ^ OK
the DT the ^ OK
disarmament NN disarmament ^ OK
of IN of ^ OK
iraq NNP iraq ^ OK
right RB right ^ OK
now RB now ^ OK
has VBZ has ^ OK
to TO to ^ OK
do VB do ^ OK
with IN with ^ OK
the DT the ^ OK
money NN money ^ OK
that WDT that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
spending VBG spending ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
was VBD was ^ OK
n't RB n't ^ OK
the DT the ^ OK
army NN army ^ OK
pretty RB pretty ^ OK
much JJ much ^ OK
destroyed VBN destroyed ^ OK
after IN after ^ OK
the DT the ^ OK
gulf NNP gulf ^ OK
war NNP war ^ OK

um UH ^ ^ filler
it PRP it ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
seem VB seem ^ OK
li- IN li- ^ OK

it PRP it ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
seem VB seem ^ OK
like IN like ^ OK
that DT that ^ OK

why WRB ^ ^ false_start
would MD ^ ^ false_start
n't RB ^ ^ false_start
like UH ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
our PRP our ^ OK
government NN government ^ OK
knew VBD knew ^ OK
that DT that ^ OK
though RB though ^ OK
why WRB why ^ OK
would MD would ^ OK
n't RB n't ^ OK
they PRP they ^ OK
tell VB tell ^ OK
us PRP us ^ OK

but CC but ^ OK
it PRP it ^ OK
seems VBZ seems ^ OK
like IN like ^ OK

why WRB why ^ OK
is VBZ is ^ OK
it PRP it ^ OK
right RB right ^ OK
now RB now ^ OK
though RB though ^ OK

why WRB why ^ OK
not RB not ^ OK

if IN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
is VBZ is ^ OK
n't RB n't ^ OK
that DT that ^ OK
what WP what ^ OK
people NNS people ^ OK
are VBP are ^ OK
saying VBG saying ^ OK
is NP-2 ^ ^ false_start
that VBZ that ^ OK
they IN they ^ OK
're PRP 're ^ OK
going VBP going ^ OK
to VBG to ^ OK
get TO get ^ OK
very VB very ^ OK
upset RB upset ^ OK
if JJ if ^ OK
we IN we ^ OK
go PRP go ^ OK
into VBP into ^ OK
iraq IN iraq ^ OK

well UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
ev- XX ^ ^ false_start
g- XX ^ ^ false_start
afghanistan NNP afghanistan ^ OK
is VBZ ^ ^ false_start
also RB also ^ OK
um UH ^ ^ filler
seems VBZ seems ^ OK
to TO to ^ OK
have VB have ^ OK
had VBN had ^ OK
less JJR less ^ OK
support NN support ^ OK
in PP-2 in ^ OK
terms IN terms ^ OK
of NNS of ^ OK
like IN ^ ^ filler
their UH their ^ OK
government PRP government ^ OK
than NN than ^ OK
iraq IN iraq ^ OK

i PRP i arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
saved VBD saved predicate OK
up RP up arg_particl OK
for IN for argM_tmp OK
a DT a argM_tmp OK
while NN while argM_tmp OK

but CC but ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
beat VB beat predicate OK
that DT that arg1 OK
big JJ big arg1 OK
picture NN picture arg1 OK

i PRP ^ ^ repeat
w- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

there EX there ^ OK
's BES 's predicate OK
some DT some arg1 OK
movies NNS movies arg1 OK
out IN out arg1 OK
there RB there arg1 OK
that WDT that arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
'd MD ^ ^ repeat
'd MD 'd arg1 OK
easily RB easily arg1 OK
pay VB pay arg1 OK
for IN for arg1 OK
though NP-1 though ^ OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
like UH ^ ^ filler
when WRB when ^ OK
the DT the arg1 OK
new JJ new arg1 OK
matrix NNP matrix arg1 OK
comes NAC-2 comes predicate OK
out VBZ out arg_particl OK
i RB i arg0 OK
'd ADVP-TMP- 1 'd ^ OK
easily PRP easily ^ OK
pay MD pay predicate OK
for RB for arg1 OK
that VB that arg1 OK
one IN one arg1 OK
or DT or ^ OK
the CD the ^ OK
new CC new ^ OK
lord DT lord ^ OK
of JJ of ^ OK
the NN the ^ OK
rings IN rings ^ OK

but CC but ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
since IN since ^ OK
the DT the arg1 OK
ticket NN ticket arg1 OK
prices NNS prices arg1 OK
went VBD went predicate OK
up RB up arg_particl OK
so RB so ^ OK
much JJ much ^ OK
i PRP i arg0 OK
just RB ^ ^ false_start
do VBP do ^ OK
n't RB n't ^ OK
go VB go predicate OK
see VB see arg2 OK
like UH ^ ^ false_start
if JJ ^ ^ false_start
movies NNS movies arg1 OK

there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
mov- NN ^ ^ repeat
movie NN movie arg1 OK
rental NN rental arg1 OK
place NN place arg1 OK
down IN down arg1 OK
the DT the arg1 OK
block NN block arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
got VBN got predicate OK
a DT a arg1 OK
d. NN d. arg1 OK
v. NN v. arg1 OK
d. NN d. arg1 OK
player NN player arg1 OK

that DT that ^ OK
's BES 's predicate OK
kind RB kind arg1 OK
of RB of arg1 OK
nice JJ nice arg1 OK
because IN because ^ OK
when WRB when ^ OK
you PRP you arg0 OK
watch VBP watch predicate OK
them PRP them arg1 OK
at IN at argM_loc OK
home NN home argM_loc OK
you ADVP-1 you arg0 OK
can PRP can ^ OK
like MD ^ ^ filler
lay UH lay predicate OK
in VB in arg1 OK
bed IN bed arg1 OK

it PRP ^ ^ repeat
eh UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
called VBN called predicate OK
the DT the arg1 OK
bridge NNP bridge arg1 OK
cinema NNP cinema arg1 OK
de NNP ^ arg1 false_start
lux NNP deluxe ^ false_start

it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
they PRP they arg0 OK
have VBP have predicate OK
leather NN leather arg1 OK
like UH ^ ^ filler
lay NNP lay arg1 OK
z. NNP z. arg1 OK
boy NNP boy arg1 OK
type NN type arg1 OK
seating NN seating arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
and CC ^ ^ false_start
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
stadium NN stadium arg1 OK
seating NN seating arg1 OK

i PRP i arg0 OK
did VBD did predicate OK
it PRP it arg1 OK
once RB once argM_tmp OK
to TO to ^ OK
see VB see predicate OK
what WP what arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
like IN like arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
th- VBD ^ ^ repeat
thought VBD thought predicate OK
it PRP it arg1 OK
was VBD was ^ OK
was VBD _NOUN_/_VERB_ arg1 false_start

i PRP i arg0 OK
thought VBD thought predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
worth JJ worth arg1 OK
it PRP it arg1 OK

plus CC plus ^ OK
i PRP ^ ^ repeat
ge- VBP ^ ^ repeat
i PRP i arg0 OK
also RB also ^ false_start
get VBP get predicate OK
to TO to arg1 OK
see VB see arg1 OK
movies NNS movies arg1 OK
for IN for arg1 OK
free JJ free arg1 OK

i PRP i arg0 OK
live VBP live predicate OK
in IN in argM_loc OK
l. NNP l. argM_loc OK
a. NNP a. argM_loc OK
by IN by ^ OK
the DT the ^ OK
way NN way ^ OK

so RB ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ repeat
you PRP you arg0 OK
never RB never ^ OK
h- VBP ^ ^ repeat
have VBP have ^ OK
to TO to ^ OK
worry VB worry predicate OK
about IN about arg1 OK
someone NN someone arg1 OK
's POS 's arg1 OK
head NN head arg1 OK
being VBG being arg1 OK
in IN in arg2 OK
front NN front arg2 OK
of IN of arg2 OK
you PRP you arg2 OK
because IN because ^ OK
you PRP you arg1 OK
're VBP 're predicate OK
up RB up arg2 OK
like UH ^ ^ filler
a DT a arg2 OK
whole JJ whole arg2 OK
like UH ^ ^ filler
half PDT half arg2 OK
a DT a arg2 OK
foot NN foot arg2 OK
above IN above arg2 OK
them PRP them arg2 OK

only RB only ^ OK
t- XX ^ ^ false_start
at IN at ^ OK
the DT the ^ OK
beginning NN beginning ^ OK
of IN of ^ OK
the DT the ^ OK
movie NN movie ^ OK

uh-uh UH uh-uh ^ OK

i PRP i arg1 OK
almost RB almost ^ OK
never RB never ^ OK
went VBD went predicate OK
to IN to arg4 OK
the DT the arg4 OK
theater NN theater arg4 OK
until IN until ^ OK
i PRP i arg0 OK
started VBD started predicate OK
dating VBG dating arg1 OK
a DT a arg1 OK
girl NN girl arg1 OK
a DT a argM_tmp OK
while NN while argM_tmp OK
ago RB ago argM_tmp OK

i PRP i arg0 OK
saw VBD saw predicate OK
a DT a arg1 OK
little JJ little arg1 OK
bit NN bit arg1 OK
of IN of arg1 OK
it PRP it arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
tha- DT ^ ^ repeat
that DT ^ ^ false_start
was VBD ^ ^ false_start
intr- XX ^ ^ false_start
that DT ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
well UH ^ ^ filler
i PRP i arg0 repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

the DT the arg1 OK
voting VBG voting arg1 OK
out RP out arg1 OK
part NN part arg1 false_start
was VBD was predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
weird JJ weird arg2 OK

but CC ^ ^ repeat
um UH ^ ^ filler
but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
just RB just ^ OK
the DT the arg1 OK
comedy NN comedy arg1 OK
part NN part arg1 OK
is VBZ is predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
an DT ^ ^ repeat
interesting JJ interesting arg2 OK
on IN on arg2 OK
that DT that arg2 OK

i PRP i arg0 OK
saw VBD saw predicate OK
that IN that arg1 OK
they PRP they arg0 OK
would MD would arg1 OK
wi- VB ^ ^ repeat
win VB win arg1 OK
at IN at argM_tmp OK
the DT the argM_tmp OK
end NN end argM_tmp OK

i PRP i arg0 OK
liked VBD liked predicate OK
that DT that arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
because IN because ^ OK
i PRP i arg0 OK
really RB really ^ OK
like VBP like predicate OK
to TO to arg1 OK
watch VB watch arg1 OK
e- XX ^ ^ false_start
singing NN singing arg1 OK
and CC ^ ^ repeat
and CC and arg1 OK
all PDT all arg1 OK
that DT that arg1 OK
anyway RB anyway arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
on IN on ^ OK
so- DT ^ ^ repeat
some DT some ^ OK
of IN of ^ OK
them PRP them ^ OK
they PRP ^ ^ repeat
y- XX ^ ^ repeat
they PRP they arg1 OK
get VBP get predicate OK
really RB really arg2 OK
bad JJ bad arg2 OK
reputations NNS reputations arg2 OK
from IN from arg2 OK
them PRP them arg2 OK

it PRP it ^ OK
's BES 's predicate OK
totally RB totally arg1 OK
their PRP their arg1 OK
choice NN choice arg1 OK

so RB ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
why WRB why arg2 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do arg2 OK
n't RB ^ ^ repeat
n't RB n't arg2 OK
se- XX ^ ^ repeat
feel VB feel arg2 OK
like IN like arg1 OK
it PRP it arg1 OK
's S-2 's arg1 OK
that BES that arg1 OK
bad RB bad arg1 OK
watching JJ watching arg1 OK
them VBG them arg1 OK
and PRP and arg2 OK
watching CC watching arg2 OK
things VBG things arg1 OK
happen NNS happen arg1 OK
to VBP to arg2 OK
them IN them arg2 OK

and CC ^ ^ false_start
what WDT ^ ^ false_start
image NN ^ ^ false_start
if IN ^ ^ false_start
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
their PRP their ^ OK
choice NN choice ^ OK
to TO to ^ OK
do VB do ^ OK
whatever WP whatever ^ OK
they PRP they ^ OK
do VBP do ^ OK
or NP-1 or ^ OK
their CC ^ ^ false_start
did PRP did ^ OK
things VBD things ^ OK
in NNS in ^ OK
the IN the ^ OK
past DT past ^ OK
or NN ^ ^ false_start
whatever CC ^ ^ false_start

how WRB ^ ^ repeat
i PRP ^ ^ repeat
mean VBP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
how WRB how arg2 OK
awful JJ awful arg2 OK
would MD would ^ OK
it PRP it arg1 OK
be VB be predicate OK
if IN if ^ OK
you PRP you arg1 OK
're VBP 're predicate OK
one CD one arg2 OK
of IN of arg2 OK
those DT those arg2 OK
people NNS people arg2 OK
that WDT that arg2 OK
they PRP they arg0 OK
make VBP make arg2 OK
fun NN fun arg2 OK
of IN of arg2 OK
so NP-2 so arg2 OK
bad RB badly arg2 false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
some DT some arg1 OK
they PRP ^ ^ false_start
of IN of arg1 OK
them PRP them arg1 OK
are VBP ^ ^ false_start
probably RB ^ ^ false_start
do- XX ^ ^ false_start
maybe RB maybe arg2 OK
'll MD will arg2 false_start
go VB go arg2 OK
in IN in arg4 OK
there RB there arg4 OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
just RB just ^ OK
want VBP want predicate OK
to TO to arg1 OK
be VB be arg1 OK
on IN on arg1 OK
t. NN t. arg1 OK
v. NN v. arg1 OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
re- XX ^ ^ repeat
pretty RB pretty arg2 OK
sad JJ sad arg2 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
is VBZ ^ ^ repeat
's BES 's predicate OK
just RB just arg2 OK
so RB ^ ^ repeat
so RB so arg2 OK
funny JJ funny arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ false_start
e XX ^ ^ false_start
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
just RB ^ ^ repeat
just RB just arg2 OK
like IN like arg2 OK
a DT a arg2 OK
comedy NN comedy arg2 OK
show NN show arg2 OK
when WRB when arg2 OK
they PRP they arg0 OK
have VBP have arg2 OK
those DT those arg1 OK

and CC ^ ^ false_start
they PRP they arg1 OK
're VBP 're predicate OK
like UH ^ ^ filler
the DT the arg2 OK
worst JJS worst arg2 OK
singer NN singer arg2 OK
ever RB ever arg2 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
just RB ^ ^ false_start
everybody NN everybody arg0 OK
's BES 's ^ OK
making VBG making predicate OK
fun NN fun ^ OK
of IN of arg1 OK
them PRP them arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
how WRB how ^ OK
can MD can ^ OK
they PRP they arg0 OK
think VB think predicate OK
that IN that arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
so RB so arg2 OK
good JJ good arg2 OK
when WRB when ^ OK
they PRP they arg1 OK
're VBP 're predicate OK
so RB so arg2 OK
bad JJ bad arg2 OK

or CC ^ ^ repeat
that DT ^ ^ false_start
's BES ^ ^ false_start
all DT ^ ^ false_start
or CC or ^ OK
maybe RB ^ ^ repeat
maybe RB maybe ^ OK
they PRP ^ ^ repeat
they PRP they arg0 OK
never RB never ^ OK
sang VBD sang predicate OK
to IN to arg2 OK
anybody NN anybody arg2 OK
else RB else arg2 OK
that IN and ^ false_start
that IN ^ ^ repeat
they PRP they arg0 OK
just RB just ^ OK
kind RB kind ^ OK
of RB of ^ OK
think VBP think predicate OK
they PRP they arg1 OK
're VBP 're arg1 OK
good JJ good arg2 OK
for IN for arg2 OK
some DT some arg2 OK
reason NN reason arg2 OK

but CC but ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
the DT the ^ OK
shows NNS shows ^ OK
too RB too ^ OK
like UH ^ ^ filler
some DT ^ ^ repeat
of IN ^ ^ repeat
th- PRP ^ ^ repeat
some DT ^ ^ false_start
of IN ^ ^ false_start
them PRP ^ ^ false_start
even RB even ^ OK
the DT ^ ^ repeat
the DT the ^ OK
worst JJS worst ^ OK
ones NNS ones ^ OK
like IN like ^ OK
uh UH ^ ^ filler
the DT the ^ OK
bachelor NNP bachelor ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
i PRP i arg0 OK
kind RB kind ^ OK
of RB of ^ OK
get VBP get ^ OK
sucked VBN sucked predicate OK
into IN into ^ OK
watching VBG watching predicate OK
like UH ^ ^ filler
the DT the arg1 OK
first JJ first arg1 OK
one CD one arg1 OK

and CC ^ ^ false_start
once IN once ^ OK
you PRP you arg0 OK
start VBP start arg0 OK
watching VBG watching arg1 OK
it PRP it arg1 OK
it PRP ^ ^ repeat
's BES ^ ^ repeat
you PRP you arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
stop VB stop predicate OK

like UH ^ ^ filler
eh UH ^ ^ filler
there EX there ^ OK
's BES 's predicate OK
just RB just arg1 OK
no DT no arg1 OK
way NN way arg1 OK
i PRP i arg0 OK
can MD can arg1 OK
stop VB stop arg1 OK
after ADVP-1 after arg1 OK
i IN i arg1 OK
just PRP just arg1 OK
kind RB kind arg1 OK
of RB of arg1 OK
get RB get arg1 OK
into VBP into arg2 OK
one IN one arg2 OK
of CD of arg2 OK
them IN them arg2 OK

the DT ^ ^ repeat
the DT the ^ OK
like UH ^ ^ filler
poor JJ poor ^ OK
people NNS people ^ OK
in IN in ^ OK
enron NNP enron ^ OK

the DT the arg1 OK
c. NN c. arg1 OK
e. NN e. arg1 OK
o.s NNS o.s arg1 OK
are VBP ^ ^ repeat
were VBD were predicate OK
way RB way arg2 OK
out IN out arg2 OK
of IN of arg2 OK
line NN line arg2 OK
with IN with ^ OK
all PDT all arg2 OK
the DT the arg2 OK
stuff NN stuff arg2 OK
for IN ^ ^ repeat
for IN for ^ false_start
that WDT which ^ false_start
they PRP ^ ^ repeat
they PRP they arg1 OK
get VBP get ^ OK
rewarded VBN rewarded predicate OK

chopping VBG chopping ^ OK
heads NNS heads ^ OK

they PRP they arg1 OK
get VBP get ^ OK
rewarded VBN rewarded predicate OK
for IN for arg2 OK
making VBG making arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
money NN money arg2 OK
while IN while arg2 OK
they PRP ^ ^ repeat
they PRP they arg0 OK
destroy VBP destroy arg2 OK
the DT the arg1 OK
morale NN morale arg1 OK
of IN of arg1 OK
the DT the arg1 OK
workers NNS workers arg1 OK

know VBP ^ argM_tmp filler
most JJS most arg0 OK
you PRP ^ ^ filler
people NNS people arg0 OK
switch VBP switch predicate OK
jobs NNS jobs arg1 OK
every DT every argM_tmp OK
couple NN couple argM_tmp OK
years NNS of ^ false_start
years NNS years argM_tmp OK
nowadays RB nowadays argM_tmp OK

and CC ^ ^ repeat
and CC and ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
were VBD said predicate false_start
like RP ^ ^ filler
we PRP we arg1 OK
're VBP 're arg1 OK
sorry JJ sorry arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
watched VBD watched predicate OK
them PRP them arg0 OK
fire VB fire arg1 OK
uh UH ^ ^ filler
my PRP my arg1 OK
boss NN boss arg1 OK
who WP who arg1 OK
had VBD had arg1 OK
been VBN been arg1 OK
with IN with arg2 OK
the DT the arg2 OK
company NN company arg2 OK
for IN for argM_tmp OK
i PRP ^ ^ false_start
b- XX ^ ^ false_start
like UH like argM_tmp OK
twenty-seven CD twenty-seven argM_tmp OK
years NNS years argM_tmp OK

and CC ^ ^ false_start
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP thought predicate false_start
i PRP i arg0 OK
ca MD ca arg1 OK
n't RB n't arg1 OK
believe VB believe arg1 OK
this DT this arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
said VBD said predicate OK
wait VB wait arg1 OK
a DT a argM_tmp OK
minute NN minute argM_tmp OK

you PRP you arg0 OK
told VBD told predicate OK
me PRP me arg1 OK
that IN that arg1 OK
this DT this arg1 OK
position NN position arg1 OK
was- JJ ^ ^ repeat
was VBD was arg1 OK
gone VBN gone arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
was VBD was ^ OK
making VBG making predicate OK
more JJR more arg1 OK
money NN money arg1 OK
actually RB actually argM_other OK
as IN than argM_other false_start
the DT the argM_other OK
other JJ other argM_other OK
person NN person argM_other OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
cut VBD cut predicate OK
my PRP my arg1 OK
pay NN pay arg1 OK

i PRP ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
m- XX ^ ^ false_start
have VB have predicate OK
extra JJ extra arg1 OK
calories NNS calories arg1 OK
i PRP i arg0 OK
guess VBP guess predicate OK
i PRP i arg0 OK
'd MD 'd arg1 OK
rather RB rather arg1 OK
have VB have arg1 OK
it PRP it arg1 OK
in IN in argM_loc OK
uh UH ^ ^ filler
some DT some argM_loc OK
kind NN kind argM_loc OK
of IN of argM_loc OK
dessert NN dessert argM_loc OK
or CC ^ ^ false_start
something NN ^ ^ false_start

we PRP ^ ^ false_start
ha- VBP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
uh UH ^ ^ filler
we PRP we ^ OK
we PRP 've arg0 false_start
got VBN got predicate OK
a DT a arg1 OK
family NN family arg1 OK
of IN of arg1 OK
five CD five arg1 OK
here RB here argM_loc OK

so RB ^ ^ false_start
it PRP it arg1 OK
gets SBAR-1 gets predicate OK
a VBZ a arg2 OK
little DT little arg2 OK
e- JJ ^ ^ repeat
expensive JJ expensive arg2 OK
for JJ for ^ OK
all IN all arg0 OK
five DT five arg0 OK
of CD of arg0 OK
us IN us arg0 OK
to PRP to ^ OK
go TO go predicate OK
out VB out arg4 OK
and RB and ^ OK
eat CC eat predicate OK
like VB like ^ OK
that IN that ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
first JJ first ^ OK
f- JJ ^ ^ repeat
few JJ few ^ OK
weeks NNS weeks ^ OK
anyway RB anyway ^ OK

it- PRP ^ ^ repeat
it PRP it ^ OK
's S-1 's predicate OK
kind BES ^ ^ filler
of RB ^ ^ filler
fun RB fun arg1 OK
to JJ to arg1 OK
go TO go arg1 OK
out VB out arg4 OK
to RB to arg4 OK
different IN different arg4 OK
fast JJ fast arg4 OK
food JJ food arg4 OK
places NN places arg4 OK
and NNS and arg1 OK
try CC try arg1 OK
all VB all arg1 OK
the PDT the arg1 OK
different DT different arg1 OK
things JJ things arg1 OK

but CC ^ ^ false_start
i- PRP ^ ^ filler
after IN after argM_tmp OK
a DT a argM_tmp OK
couple NN couple argM_tmp OK
weeks NNS weeks argM_tmp OK
you PRP you arg0 OK
kind RB ^ ^ filler
of RB ^ ^ filler
miss VBP miss predicate OK
mom NN mom arg1 OK
's POS 's arg1 OK
home NN home arg1 OK
cooking NN cooking arg1 OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
s- XX ^ ^ repeat
's BES 's predicate OK
for IN for arg1 OK
sure JJ sure arg1 OK

so UH ^ ^ false_start
you PRP you arg0 OK
're VBP 're ^ OK
living VBG living predicate OK
in IN in argM_loc OK
a DT a argM_loc OK
dorm NN dorm argM_loc OK
then SBAR-2 ^ ^ filler
where RB where argM_loc OK
you WRB you arg0 OK
do PRP do argM_loc OK
n't VBP n't argM_neg OK
h- RB ^ ^ repeat
have VB have argM_loc OK
access VB access arg1 OK
to NN to arg1 OK
f- IN ^ ^ repeat
cooking XX cooking arg1 OK
stuff NN stuff arg1 OK

just RB just ^ OK
try VB try ^ OK
that DT that ^ OK
once RB once ^ OK
and CC and ^ OK
see VB see ^ OK
all PDT all ^ OK
the DT the ^ OK
noses NNS noses ^ OK
that WDT that ^ OK
are VBP are ^ OK
sticking VBG sticking ^ OK
in IN in ^ OK
there RB there ^ OK
to TO to ^ OK
see VB see ^ OK
what WP what ^ OK
you PRP you ^ OK
're VBP 're ^ OK
cooking VBG cooking ^ OK
seeing NP-2 seeing ^ OK
if VBG if ^ OK
they IN they ^ OK
can PRP can ^ OK
get MD get ^ OK
a VB a ^ OK
taste DT taste ^ OK
of NN of ^ OK
it IN it ^ OK

i PRP i arg0 OK
did VBD did predicate OK
that DT that arg1 OK
w- XX ^ ^ false_start
once RB once argM_tmp OK
when WRB when argM_tmp OK
i PRP i arg1 OK
was VBD was argM_tmp OK
in IN in arg2 OK
college NN college arg2 OK

ta- XX ^ ^ false_start
just RB just ^ OK
have VB ^ ^ repeat
have VBP have ^ OK
a DT ^ ^ repeat
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK

and CC ^ ^ false_start
then RB then ^ OK
bu- XX ^ ^ false_start
soo- RB ^ ^ false_start
pretty RB pretty argM_tmp OK
soon RB soon argM_tmp OK
you PRP you arg0 OK
you PRP 've ^ false_start
got VBN got ^ OK
to TO to ^ OK
make VB make predicate OK
two CD two arg1 OK
bags NNS bags arg1 OK

so UH ^ ^ false_start
what WDT ^ ^ repeat
what WDT what arg1 OK
kind NN ^ ^ repeat
kind NN kind arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
foods NNS foods arg1 OK
are VBP are predicate OK
your PRP your arg2 OK
favorites NNS favorites arg2 OK

find TO ^ ^ repeat
w- UH ^ ^ repeat
where WRB where arg2 OK
i WRB i arg1 OK
am PRP am predicate OK
from VBP from arg2 OK
it PRP ^ ^ repeat
it IN it ^ OK
's S-1 ^ ^ repeat
's ADVP-2 's predicate OK
hard BES ^ ^ repeat
hard PRP hard arg1 OK
to JJ ^ ^ repeat
to S-3 to arg1 OK
uh VB ^ ^ OK
find BES find arg1 OK
a JJ a arg1 OK
variety TO variety arg1 OK
of VB of arg1 OK
restaurants DT restaurants arg1 OK
or NN or arg1 OK
places IN places arg1 OK
to NNS to arg2 OK
go CC go arg2 OK
out NNS out arg4 OK
and TO and arg2 OK
eat VB eat arg2 OK
that RP that arg1 OK
kind CC kind arg1 OK
of VB of arg1 OK
stuff DT stuff arg1 OK
around NN ^ ^ false_start
here IN ^ ^ false_start

it PRP it ^ OK
's BES 's predicate OK
mostly RB mostly arg1 OK
family NN family arg1 OK
type NN type arg1 OK
restaurants NNS restaurants arg1 OK
here RB here argM_loc OK

so RB ^ ^ false_start
it PRP it ^ OK
's BES 's predicate OK
uh UH ^ ^ filler
pretty RB pretty arg1 OK
much JJ much arg1 OK
the DT the arg1 OK
same JJ same arg1 OK
menu NN menu arg1 OK
at IN at argM_loc OK
every DT ^ ^ repeat
every DT every argM_loc OK
thi- NN ^ ^ repeat
restaurant NN restaurant argM_loc OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
pretty RB pretty arg2 OK
much RB much arg2 OK
meat NN meat arg2 OK
and CC and arg2 OK
potatoes NNS potatoes arg2 OK
myself PRP myself arg2 OK

i PRP i arg0 OK
like VBP like predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
beef NN beef arg1 OK
and CC and arg1 OK
chicken NN chicken arg1 OK

that DT ^ ^ repeat
it PRP it arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
n't RB n't argM_neg OK
bad JJ bad arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg3 OK
's BES 's predicate OK
certainly RB certainly ^ OK
not RB not argM_neg OK
worth JJ worth arg2 OK
paying VBG paying arg2 OK
the DT the arg1 OK
extra JJ extra arg1 OK
money NN money arg1 OK
for IN for arg3 OK
unless NP unless ^ OK
you IN you arg1 OK
're PRP 're predicate OK
on VBP on arg2 OK
you IN ^ ^ filler
know PRP ^ ^ filler
some VBP some arg2 OK
kind DT kind arg2 OK
of NN of arg2 OK
diet IN diet arg2 OK
where NN where argM_loc OK
you WRB you arg0 OK
could PRP could argM_loc OK
n't MD n't argM_neg OK
get RB get argM_loc OK
all VB all arg1 OK
the PDT the arg1 OK
fat DT fat arg1 OK
that NN that arg1 OK
you WDT you arg1 OK
could PRP could arg1 OK
from MD ^ ^ repeat
from NP-2 ^ ^ repeat
uh IN ^ ^ filler
from IN from arg1 OK
beef UH beef arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
it PRP it arg1 OK
was VBD was predicate OK
d- VBP ^ ^ repeat
different JJ different arg2 OK

it PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
all RB all arg2 OK
free JJ free arg2 OK

and CC ^ arg1 false_start
they PRP they arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
solitaire NNP solitaire arg1 OK
and CC and arg1 OK
blackjack NNP blackjack arg1 OK
and CC and arg1 OK
n- XX other ^ false_start
n- XX ^ ^ false_start
just RB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
different JJ different arg1 OK
kind NN kinds arg1 false_start
of IN of arg1 OK
fun JJ fun arg1 false_start
games NNS games arg1 OK

for IN for ^ OK
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
games NNS games ^ OK
like UH like ^ OK
there EX ^ ^ false_start
's BES ^ ^ false_start
hearts NNS hearts ^ OK
and CC and ^ OK
spades NNS spades ^ OK
you PRP you arg0 OK
can MD can ^ OK
set VB set predicate OK
up RP up ^ OK
the DT ^ ^ repeat
the DT the arg1 OK
room NN room arg1 OK
so RB so ^ OK
that IN that ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
playing VBG playing predicate OK
against IN against arg1 OK
the DT the arg1 OK
computer NN computer arg1 OK
if IN if ^ OK
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
play VB play arg1 OK
with IN with arg1 OK
other JJ other arg1 OK
people NNS people arg1 OK

that DT that arg1 OK
information NN information arg1 OK
that WDT that ^ OK
probably RB probably ^ OK
the DT the arg0 false_start
rest NN rest arg0 OK
of IN of arg0 OK
the DT the arg0 OK
group NN group arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
need VB need predicate OK
to TO to arg1 OK
know VB know arg1 OK
was VBD was predicate false_start
a DT a arg2 false_start
little JJ little arg2 false_start
personal JJ personal arg2 false_start

so UH ^ ^ false_start
it PRP it arg1 OK
's SBAR-1 's predicate OK
kind BES ^ arg2 false_start
of RB ^ arg2 false_start
funny RB funny arg2 OK
what JJ what arg1 OK
people WP people arg0 OK
will NNS will ^ OK
uh MD ^ ^ filler
share UH share predicate OK
anonymously VB anonymously ^ OK

they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
everywhere RB everywhere arg2 OK

so UH ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
kind RB ^ arg2 false_start
of RB ^ arg2 false_start
fun JJ fun arg2 OK
to TO too ^ false_start

there EX there arg1 OK
was VBD was predicate OK
somebody NN somebody arg2 OK
who WP ^ ^ false_start
was VBD ^ ^ false_start
from IN from arg2 OK
australia NNP australia arg2 OK
who WP who arg1 OK
i PRP i arg0 OK
actually RB actually ^ OK
d- XX ^ ^ false_start
chatted VBD chatted predicate OK
with IN with ^ false_start
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
because NP-2 because ^ OK
they IN they arg1 OK
were PRP were predicate OK
in VBD ^ ^ false_start
a IN ^ ^ false_start
near DT near arg2 OK
a RB a arg2 OK
city DT city arg2 OK
b- NN ^ ^ false_start
where XX where arg2 OK
i WRB i arg1 OK
had PRP had arg2 OK
been VBD been predicate OK
been VBD to arg2 false_start
last VBN last argM_tmp OK
year JJ year argM_tmp OK

but CC ^ ^ false_start
i PRP i arg0 OK
was VBD was ^ OK
wondering VBG wondering predicate OK
how WRB how arg1 OK
the DT the arg0 OK
call VB call arg0 OK
in RP in arg0 OK
thing NN thing arg0 OK
works VBZ works arg1 OK

and CC ^ ^ false_start
do VBP do ^ OK
your PRP your ^ OK
call NN call ^ OK
as IN as ^ OK
a DT a ^ OK
a DT _ARG_ ^ false_start

oh UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
cool JJ cool ^ OK

um UH ^ ^ filler
mine PRP mine arg1 OK
was VBD was predicate OK
would MD would arg2 OK
you PRP you arg0 OK
take VB take arg2 OK
a DT a arg1 OK
million CD million arg1 OK
dollars NNS dollars arg1 OK
and CC ^ ^ repeat
s- VB ^ ^ false_start
and CC ^ ^ repeat
to TO ^ ^ repeat
um UH ^ ^ filler
and CC and arg2 OK
then RB ^ ^ repeat
never RB ^ ^ repeat
never RB ^ ^ repeat
never RB never arg2 OK
speak VB speak arg2 OK
s- VB ^ ^ false_start
to IN to arg2 OK
your PRP your arg2 OK
best JJS best arg2 OK
friend NN friend arg2 OK
again RB again arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
was VBD ^ ^ false_start
thinking VBG ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
a- CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
would MD ^ ^ filler
like VB ^ ^ filler
to TO ^ ^ filler
think VB think predicate OK
that IN that arg1 OK
i PRP i arg0 OK
would MD would arg1 OK
n't RB n't arg1 OK
do VB do arg1 OK
that DT that arg1 OK

so RB ^ arg2 filler
i PRP i arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
said VBD said predicate OK
well UH well arg1 OK
i PRP ^ arg1 repeat
i- PRP ^ ^ repeat
i PRP i arg0 OK
would MD would arg1 OK
like VB like arg1 OK
to TO to arg1 OK
think VBP ^ arg1 repeat
think VB think arg1 OK
that IN ^ arg1 repeat
that IN that arg1 OK
i PRP i arg0 OK
would MD would arg1 OK
n't RB n't arg1 OK
do VB do arg1 OK
that DT that arg1 OK
um UH ^ ^ filler
because IN because ^ OK
w- IN ^ ^ repeat
while IN while ^ false_start
a DT a ^ OK
million CD million arg1 OK
dollars NNS dollars arg1 OK
it PRP ^ ^ false_start
's BES is predicate false_start
not RB not ^ OK
small JJ a ^ false_start
small JJ small arg2 OK
peanuts NNS peanut arg2 false_start
it PRP ^ ^ repeat
it PRP it arg0 OK
's BES ^ ^ repeat
's BES 's ^ OK
not RB ^ ^ repeat
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
take VB take predicate OK
care NN care arg1 OK
of IN of arg1 OK
you PRP you arg1 OK
for IN for argM_tmp OK
the DT the argM_tmp OK
rest NN rest argM_tmp OK
of IN of argM_tmp OK
your PRP your argM_tmp OK
life NN life argM_tmp OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
she PRP ^ ^ false_start
thought VBD ^ ^ false_start
i PRP ^ ^ false_start
was VBD ^ ^ false_start
she PRP she arg0 OK
's BES ^ ^ false_start
like RP thought predicate false_start
well UH well arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
certainly RB certainly arg1 OK
would MD would arg1 OK
n't RB n't arg1 OK

like UH ^ ^ filler
it PRP it arg0 OK
would SBAR-1 would ^ OK
n't MD n't ^ OK
even RB even ^ OK
i- RB ^ ^ false_start
cross XX cross predicate OK
her VB her arg1 OK
mind PRP mind arg1 OK
that NN ^ ^ false_start

and CC and ^ OK
then RB then ^ OK
i PRP i ^ OK

well UH ^ ^ filler
and CC ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
feel VBP feel predicate OK
the DT the arg1 OK
same JJ same arg1 OK
way NN way arg1 OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
probably RB probably arg2 OK
the DT the arg2 OK
way NN way arg2 OK
i PRP i arg0 OK
would MD would arg2 OK
go VB go arg2 OK

and CC ^ ^ repeat
y- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
they PRP ^ ^ false_start
'd MD ^ ^ false_start
probably RB ^ ^ false_start
figure VB ^ ^ false_start
out RP ^ ^ false_start
or UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
're VBP 're arg2 OK
trying VBG trying arg2 OK
to TO to arg1 OK
determine VB determine arg1 OK
how WRB ^ ^ repeat
how WRB how arg1 OK
much JJ much arg1 OK
people NNS ^ ^ repeat
people NNS people arg0 OK
will MD will arg1 OK
disclose VB disclose arg1 OK
or NP-2 or arg1 OK
not CC not arg1 OK
disclose RB disclose arg1 OK
or VB ^ ^ false_start
um NP-2 ^ ^ filler
whatever CC ^ predicate false_start

it PRP ^ arg1 false_start
's BES ^ ^ false_start
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
when WRB ^ ^ false_start
i PRP ^ ^ false_start
used VBD ^ ^ false_start
to TO ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
had VBD had predicate OK
a DT a arg1 OK
couple NN couple arg1 OK
computer NN of ^ false_start
computer NN computer arg1 OK
games NNS games arg1 OK

um UNK ^ ^ filler
but UNK but ^ OK

um UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
ban VB ban ^ OK
books NNS books ^ OK
like IN like ^ OK
eh UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
huckleberry NNP huckleberry ^ OK
finn NNP finn ^ OK
things NNS and ^ false_start
things NNS things ^ OK
like IN like ^ OK
that DT that ^ OK

i- PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
know VB know ^ OK

but CC but ^ OK
um UH ^ ^ filler
i PRP i ^ OK
know VBP know ^ OK
that IN that ^ OK
um UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
some DT some ^ OK
people NNS people ^ OK
think VBP think ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
li- XX ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
political JJ political ^ OK
correctness NN correctness ^ OK

um UH ^ ^ filler
but CC but ^ OK
then RB then ^ OK
um UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
i- PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
who WP who ^ OK
wants VBZ wants ^ OK
to TO to ^ OK
b- VB ^ ^ repeat
eh UH ^ ^ filler
ban VB ban ^ OK
books NNS books ^ OK

i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's BES 's ^ OK
mainly RB mainly ^ OK
like UH ^ ^ filler
conservatives NNS conservatives ^ OK
that WDT ^ ^ false_start
want VBP ^ ^ false_start
to TO ^ ^ false_start
eh UH ^ ^ filler
that WDT that ^ OK
ar- VBP ^ ^ repeat
are VBP are ^ OK
worried JJ worried ^ OK
about IN about ^ OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
non JJ non ^ OK
family NN family ^ OK
values NNS values ^ OK
in IN in ^ OK
books NNS books ^ OK

is VBZ ^ ^ false_start
n't RB ^ ^ false_start
it PRP ^ ^ false_start
is VBZ is ^ OK
that DT that ^ OK
true JJ true ^ OK

or CC ^ ^ false_start
is VBZ ^ ^ false_start
it PRP ^ ^ false_start
also RB ^ ^ false_start
it PRP it ^ OK
may MD may ^ OK
also RB also ^ OK
be VB be ^ OK
eh UH ^ ^ filler
sort RB ^ ^ false_start
of RB ^ ^ false_start
liberals NNS liberals ^ OK
who WP who ^ OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want ^ OK
like UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
the DT the ^ OK
racism NN racism ^ OK
and CC and ^ OK
stuff NN stuff ^ OK
like IN like ^ OK
that DT that ^ OK
in IN ^ ^ repeat
in IN in ^ OK
older JJR older ^ OK
books NNS books ^ OK

figure VB figure ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
sure JJ sure ^ OK
you PRP you ^ OK
could MD could ^ OK
n't RB n't ^ OK
come VB come ^ OK
up RP up ^ OK
with IN with ^ OK
that DT that ^ OK
without IN without ^ OK
some DT some ^ OK
sig- XX sig- ^ OK

right UH ^ ^ false_start
de- UH ^ ^ false_start
defi- UH ^ ^ false_start
the DT the ^ OK
mad JJ mad ^ OK
hatter NN hatter ^ OK
and CC and ^ OK
um UH ^ ^ filler

i PRP ^ ^ false_start
d- XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
thought VBD ^ ^ repeat
thought VBD thought ^ OK
they PRP they ^ OK
said VBD said ^ OK
something NN something ^ OK
about IN about ^ OK
the DT the ^ OK
media NN media ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
of IN of ^ OK
course NN course ^ OK
with IN ^ ^ false_start
internet NNP ^ ^ false_start
there EX ^ ^ repeat
there EX there ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
that RB ^ ^ repeat
really RB really ^ OK
much JJ ^ ^ repeat
much JJ much ^ OK
i- NN ^ ^ repeat
internet NN internet ^ OK
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
in IN in ^ OK
high JJ high ^ OK
school NN school ^ OK

so UH so ^ OK
are VBP are ^ OK
you PRP you ^ OK
older JJR older ^ OK
or CC or ^ OK
younger JJR younger ^ OK

oh UH ^ ^ filler
okay UH okay ^ OK
so UH so ^ OK
you- PRP ^ ^ repeat
you PRP you ^ OK
're VBP 're ^ OK
a DT a ^ OK
little RB little ^ OK
closer RBR closer ^ OK
to IN to ^ OK
high JJ high ^ OK
school NN school ^ OK

we PRP ^ ^ repeat
we PRP ^ ^ repeat
we PRP we ^ OK
b- RB ^ ^ repeat
barely RB ^ ^ repeat
barely RB barely ^ OK
had VBD had ^ OK
it PRP it ^ OK

ninety CD ^ ^ repeat
well UH ^ ^ false_start
ninety-three CD ninety-three ^ OK
is VBZ is ^ OK
when WRB when ^ OK
i PRP i ^ OK
graduated VBD graduated ^ OK

so UH so ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
n't RB n't ^ OK
really RB really ^ OK
an DT an ^ OK
issue NN issue ^ OK
then RB then ^ OK

but CC but ^ OK
now RB now ^ OK
it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler
definitely RB definitely ^ OK
a DT ^ ^ repeat
a DT a ^ OK
big JJ ^ ^ repeat
big JJ big ^ OK
issue NN issue ^ OK

the DT ^ ^ false_start
eh UH ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
uh UH ^ ^ filler
talk VB talk ^ OK
about IN about ^ OK
media NN media ^ OK
censorship NN censorship ^ OK

but CC but ^ OK
uh UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

what WP what ^ OK
do VBP do ^ OK
you PRP you ^ OK
think VB think ^ OK
about IN about ^ OK

well UNK ^ ^ false_start
i UNK i ^ OK
think UNK think ^ OK
the UNK ^ ^ repeat
eh UNK ^ ^ filler
i UNK ^ ^ filler
mean UNK ^ ^ filler
the UNK the ^ OK
current UNK current ^ OK
issue UNK issue ^ OK
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
for UNK ^ ^ false_start
at UNK at ^ OK
least UNK least ^ OK
with UNK with ^ OK
the UNK the ^ OK
presidential UNK presidential ^ OK
thing UNK thing ^ OK
is UNK ^ ^ repeat
is UNK is ^ OK
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
uh UNK ^ ^ filler
saying UNK saying ^ OK
there UNK there ^ OK
's UNK 's ^ OK
too UNK too ^ OK
much UNK much ^ OK
violence UNK violence ^ OK
in UNK in ^ OK
i UNK ^ ^ false_start
think UNK ^ ^ false_start
it UNK ^ ^ false_start
's UNK ^ ^ false_start
mainly UNK ^ ^ false_start
mo- UNK ^ ^ repeat
movies UNK movies ^ OK
t. UNK t. ^ OK
v. UNK v. ^ OK
things UNK things ^ OK
like UNK like ^ OK
that UNK that ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
think VBP ^ ^ repeat
think VBP think ^ OK
tha- IN ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
eh UH ^ ^ filler
pretty RB pretty ^ OK
much RB much ^ OK
the DT the ^ OK
best JJS best ^ OK
point NN point ^ OK

that IN that ^ OK
um UH ^ ^ filler
the DT ^ ^ repeat
uh UH ^ ^ filler
the DT the ^ OK
argument NN argument ^ OK
is VBZ is ^ OK
something NN something ^ OK
uh UH ^ ^ filler
like IN like ^ OK
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
they PRP they ^ OK
're VBP 're ^ OK
worried JJ worried ^ OK
about IN about ^ OK
kids NNS kids ^ OK

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
do VBP do ^ OK
you PRP you ^ OK
think VB think ^ OK
this DT this ^ OK
really RB really ^ OK
affects VBZ affects ^ OK
kids NNS kids ^ OK
or CC or ^ OK
not RB not ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
gue- VBP ^ ^ repeat
guess VBP guess ^ OK
that DT that ^ OK
's BES 's ^ OK
true JJ true ^ OK

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
do VBP ^ ^ repeat
eh UH ^ ^ filler
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
thin- VBP ^ ^ repeat
think VB think ^ OK
it PRP it ^ OK
just RB just ^ OK
makes VBZ makes ^ OK
them PRP them ^ OK
like UH ^ ^ filler
wres- VB ^ ^ false_start
uh UH ^ ^ filler
mess VB mess ^ OK
around RB around ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
horseplay VB horseplay ^ OK

they PRP ^ ^ repeat
do VBP ^ ^ repeat
n't RB ^ ^ repeat
they PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
uh UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
probably RB probably ^ OK
it PRP ^ ^ false_start
's S-1 ^ ^ false_start
too BES too ^ OK
much RB much ^ OK
of JJ of ^ OK
a IN a ^ OK
hassle DT hassle ^ OK
to NN to ^ OK
make TO make ^ OK
a VB a ^ OK
law DT law ^ OK
about NN about ^ OK
it IN it ^ OK

it PRP it ^ OK
's BES 's ^ OK
really RB really ^ OK
quite PDT quite ^ OK
a DT a ^ OK

eh UH ^ ^ filler
probably RB ^ ^ false_start
government NN government ^ OK
should MD should ^ OK
not RB not ^ OK
be VB be ^ OK
in IN in ^ OK
it PRP it ^ OK
i PRP i ^ OK
think VBP think ^ OK

and CC ^ ^ false_start
then RB ^ ^ false_start
we PRP we arg0 OK
moved VBD moved predicate OK
to IN to arg2 OK
um UH ^ ^ filler
midland NNP midland arg2 OK
texas NNP texas arg2 OK
in IN ^ ^ false_start
texas NNP ^ ^ false_start
because IN because ^ OK
my PRP my arg0 OK
dad NN dad arg0 OK
w- VBD ^ ^ repeat
was VBD was ^ OK
working VBG working argM_loc OK
here RB here ^ OK
for IN for arg2 OK
a DT an arg2 false_start
oil NN oil arg2 OK
company NN company arg2 OK

and CC ^ ^ false_start
then RB then ^ OK
back RB back ^ OK
to IN to ^ OK
college NNP college ^ OK
station NNP station ^ OK

h- PRP ^ ^ repeat
he PRP ^ ^ false_start
yeah UH yeah ^ OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
great JJ great arg2 OK

um UH ^ ^ filler
my PRP my arg0 OK
husband NN husband arg0 OK
had VBD had predicate OK
a DT a arg1 OK
friend NN friend arg1 OK

and CC ^ ^ false_start
before IN ^ ^ false_start
then RB ^ ^ false_start
when WRB when ^ OK
i PRP i arg0 OK
lived VBD lived predicate OK
in IN in argM_loc OK
midland NNP midland argM_loc OK
i ADVP-TMP- 1 i arg0 OK
only PRP only ^ OK
had RB had predicate OK
one VBD one arg1 OK
friend CD friend arg1 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
knew VBD knew predicate OK
plenty NN plenty arg1 OK
of IN of arg1 OK
people NNS people arg1 OK

but CC ^ ^ false_start
one DT one ^ OK
really RB really ^ OK
good JJ good ^ OK
friend NN friend ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
we PRP we arg0 OK
like VBP like predicate OK
going VBG going arg2 OK
looking VBG to ^ false_start
looking VBG look arg2 false_start
at IN at arg1 OK
different JJ ^ ^ repeat
place- NNS ^ ^ repeat
like UH ^ ^ filler
different JJ different arg1 OK
shops NNS shops arg1 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

and CC and ^ OK
um UH um ^ OK

w- NN ^ ^ repeat
what WP ^ ^ repeat
what WDT what arg2 OK
would MD would ^ OK
be VB be predicate OK
five CD five arg1 OK
countries NNS countries arg1 false_start
that WDT that arg1 OK
you PRP you arg0 OK
would MD would arg1 OK
at RB at arg1 OK
least RB least arg1 OK
think VB think arg1 OK
about IN about arg1 OK
before NP-2 before arg1 OK
saying IN saying arg1 OK
no VBG no arg1 OK

where WRB ^ ^ repeat
where WRB where arg2 OK
in IN in arg2 OK
a UH ^ ^ repeat
africa NNP africa arg2 OK
is VBZ is predicate OK
it PRP it arg1 OK

um UH ^ ^ filler
ah UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
p- JJ ^ ^ repeat
pretty RB pretty arg2 OK
positive JJ positive arg2 OK
i PRP i arg1 OK
would MD would arg2 OK
n't RB n't argM_neg OK
either RB either arg2 OK

i PRP i ^ OK
'll MD 'll ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
problems NNS problems arg1 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
with IN with arg2 OK
you PRP you arg2 OK

there EX there ^ OK
are VBP are predicate OK
some DT some arg1 OK
countries NNS countries arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
think VBP think arg1 OK
are VBP are arg1 OK
great JJ great arg2 OK
um UH ^ ^ filler
that WDT that arg1 OK
i PRP i arg0 OK
've VBP ^ arg1 repeat
ha- VBP have arg1 false_start
been VBN been arg1 OK
able JJ able arg2 OK
to TO to arg2 OK
visit VB visit arg2 OK
and NP-2 and arg1 OK
had CC had arg1 OK
just VBD just arg1 OK
an RB an arg1 OK
amazing DT amazing arg1 OK
time JJ time arg1 OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
th- XX th- ^ OK

eh UH ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK

i PRP ^ ^ repeat
i PRP i arg0 OK
lived VBD lived predicate OK
there RB there argM_loc OK
for IN ^ ^ repeat
for IN for argM_tmp OK
si- CD ^ ^ repeat
six CD six argM_tmp OK
and CC and argM_tmp OK
a DT a argM_tmp OK
half NN half argM_tmp OK
months NNS months argM_tmp OK
actually RB actually argM_tmp OK

i PRP ^ ^ repeat
i PRP i arg0 OK
loved VBD loved predicate OK
it PRP it arg1 OK

but CC but ^ OK
i PRP i arg0 OK
would MD would ^ OK
include VB include predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
entire JJ entire arg1 OK
u. NNP u. arg1 OK
k. NNP k. arg1 OK
which WDT ^ ^ false_start
would MD ^ ^ false_start
be VB ^ ^ false_start
i- NNP ^ ^ repeat
i- NNP ^ ^ false_start
which WDT which arg0 OK
would MD would ^ OK
include VB include predicate OK
ireland NNP ireland arg1 OK
um UH ^ ^ filler
as RB as arg1 OK
well RB well arg1 OK

but CC but ^ OK
i PRP i ^ OK
know VBP know ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i- XX i- ^ OK
that IN that ^ OK

i PRP ^ ^ false_start
w- VBD ^ ^ false_start
both DT both ^ OK
working VBG working ^ OK
and CC and ^ OK
play- VBG play- ^ OK

um UH ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
between IN between ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
times NNS times ^ OK
that WDT that ^ OK
i PRP i arg1 OK
was VBD was predicate OK
there RB there arg2 OK
on IN on arg2 OK
business NN business arg2 OK
i NP-ADV-1 i arg1 OK
've PRP 've ^ OK
been VBP been predicate OK
able VBN able arg2 OK
to JJ to arg2 OK
go TO go arg2 OK
back VB back arg4 OK
for RB for arg4 OK
pleasure IN pleasure arg4 OK

but CC but ^ OK
the DT the arg1 OK
bottom JJ bottom arg1 OK
line NN line arg1 OK
is VBZ is predicate OK
i PRP i arg0 OK
do VBP do arg2 OK
n't RB n't argM_neg OK
know VB know arg2 OK
that IN that arg1 OK
i PRP i arg1 OK
want VBP want arg1 OK
to TO to arg1 OK
give VB give arg1 OK
up RP up arg1 OK
coming VBG coming arg1 OK
back RB back arg4 OK
to IN to arg4 OK
the DT the arg4 OK
u. NNP u. arg4 OK
s. NNP s. arg4 OK
for IN for argM_tmp OK
the DT the argM_tmp OK
rest NN rest argM_tmp OK
of IN of argM_tmp OK
my PRP my argM_tmp OK
life NN life argM_tmp OK

ah UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
a DT a arg1 OK
million CD million arg1 OK
dollars NNS dollars arg1 OK
does VBZ does ^ OK
n't RB n't argM_neg OK
go VB go predicate OK
very RB very arg2 OK
far RB far arg2 OK
these DT these argM_tmp OK
days NNS days argM_tmp OK
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
tell- VBG ^ ^ false_start

wh- WP ^ ^ repeat
what WP ^ ^ repeat
what WP what arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
with IN ^ ^ repeat
with IN with arg2 OK
you PRP you arg2 OK
and CC and arg2 OK
the DT ^ ^ repeat
you XX ^ ^ repeat
the DT the arg2 OK
new NNP new arg2 OK
york NNP york arg2 OK
attitude NN attitude arg2 OK

the DT the ^ OK
what UH what ^ OK

why WRB why ^ OK
are VBP are predicate OK
you PRP you arg1 OK
so RB ^ ^ repeat
so RB so arg2 OK
ru- JJ ^ ^ repeat
rude JJ rude arg2 OK

and CC and ^ OK
we PRP we ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't argM_neg OK
do VB do predicate OK
the DT the arg1 OK
whole JJ whole arg1 OK
subway NN subway arg1 OK
thing NN thing arg1 OK

i PRP i arg1 OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'm VBP 'm predicate OK
a DT a arg2 OK
taxi NN taxi arg2 OK
person NN person arg2 OK
when WRB when argM_tmp OK
i PRP i arg1 OK
'm VBP 'm argM_tmp OK
in IN in arg2 OK
new NNP new arg2 OK
york NNP york arg2 OK

i PRP i ^ OK

i PRP i arg0 OK
tell VBP tell predicate OK
the DT the arg2 OK
cab NN cab arg2 OK
driver NN driver arg2 OK
thi- DT ^ ^ repeat
this DT ^ ^ repeat
these DT these arg1 OK
is VBZ ^ ^ repeat
are VBP are arg1 OK
the DT the arg1 OK
streets NNS streets arg1 OK
that WDT that arg2 OK
you PRP you arg0 OK
need VBP need arg2 OK
to TO to arg1 OK
take VB take arg1 OK
to TO to arg1 OK
get VB get arg1 OK
me PRP me arg1 OK
there RB there arg1 OK
because IN because arg1 OK
i PRP i arg0 OK
've VBP 've arg1 OK
been VBN been arg1 OK
there RB there argM_loc OK
enough RB enough arg1 OK
to TO to arg1 OK
know VB know arg1 OK
where WRB where arg1 OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
going VBG going arg1 OK

did VBD did ^ OK
you PRP ^ ^ false_start
um UH ^ ^ filler
they PRP they arg0 OK
air VB air predicate OK
it PRP it arg1 OK
here RB here argM_loc OK
in IN in argM_loc OK
california NNP california argM_loc OK

um UH ^ ^ filler
that IN ^ ^ false_start
they PRP ^ ^ repeat
they PRP ^ ^ repeat
looking VBG ^ ^ false_start
they PRP they arg0 OK
were VBD ^ ^ repeat
were VBD ^ ^ repeat
were VBD were ^ OK
advertising VBG advertising predicate OK
like UH ^ ^ filler
dumb JJ dumb arg1 OK
criminals NNS criminals arg1 OK
on IN on arg1 OK
this DT this arg1 OK
dumbest NNP dumbest arg1 OK
criminals NNPS criminals arg1 OK
show NN show arg1 OK

and CC ^ ^ false_start
when WRB when ^ OK
he PRP he arg1 OK
went VBD went predicate OK
in RB in arg4 OK
to TO to arg4 OK
test VB test arg4 OK
um ADVP-TMP- 2 ^ ^ filler
ag- UH ^ ^ repeat
apparently XX apparently ^ OK
the RB ^ ^ repeat
f- DT ^ ^ false_start
the XX the arg0 OK
parole DT parole arg0 OK
officer NN officer arg0 OK
gotten NN got predicate false_start
a VBN ^ ^ repeat
a DT a arg0 OK
phone DT phone arg0 OK
call NN call arg0 OK
saying NN saying arg1 OK
that VBG that arg1 OK
they IN they arg0 OK
believe PRP believe arg1 OK
this VBP this arg0 OK
parolee DT parolee arg0 OK
was NN was arg1 OK
doing VBD doing arg1 OK
drugs VBG drugs arg1 OK
on NNS on argM_loc OK
the IN the argM_loc OK
job DT job argM_loc OK

so RB ^ ^ false_start
the DT the arg0 OK
parole NN parole arg0 OK
officer NN officer arg0 OK
called VBD called predicate OK
the DT the arg1 OK
guy NN guy arg1 OK
in RB in argM_loc OK

and CC ^ ^ false_start
he PRP he arg0 OK
or CC ^ ^ false_start
say VBP said predicate false_start
okay UH okay arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
the DT ^ ^ repeat
the DT the arg0 OK
gentleman NN ^ ^ repeat
guy NN guy arg0 OK
said VBD ^ ^ repeat
said VBD said predicate OK
well UH well arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
ca MD ca arg1 OK
n't RB n't arg1 OK
use VB use arg1 OK
it PRP it arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
they PRP they arg0 OK
said VBD said predicate OK
well UH well arg1 OK
we PRP we arg0 OK
got VBD have arg1 false_start
good JJ good arg1 OK
news NN news arg1 OK
and CC and arg1 OK
bad JJ bad arg1 OK
news NN news arg1 OK

but CC but ^ OK
the DT the arg1 OK
bad JJ bad arg1 OK
news NN news arg1 OK
is VBZ is predicate OK
you PRP you arg1 OK
're VBP 're arg2 OK
pregnant JJ pregnant arg2 OK

so UH ^ ^ repeat
so UH ^ ^ repeat
he PRP ^ ^ repeat
so UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he arg1 OK
'd VBD ^ ^ repeat
use- VBN ^ ^ repeat
used VBD used predicate OK
his PRP his arg1 OK
wife NN wife arg1 OK
's POS 's arg1 OK
or CC ^ ^ false_start
whatever WP ^ ^ false_start
's BES ^ ^ false_start
urine NN urine arg1 OK
to TO to arg1 OK
pass VB pass arg1 OK
a DT a arg2 OK
drug NN drug arg2 OK
test NN test arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
those DT those arg1 OK
tests NNS tests arg1 OK
could MD could ^ OK
be VB be predicate OK
accurate JJ accurate arg2 OK

but CC but ^ OK
what WP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ repeat
uh UH ^ ^ filler
wh- WP ^ ^ repeat
what WP what arg1 OK
do VBP ^ ^ repeat
do VBP do predicate OK
you PRP ^ ^ repeat
you PRP you arg0 OK
do VB do predicate OK
when WRB when ^ OK
a DT a arg0 OK
company NN company arg0 OK
do VBP does ^ false_start
invade VB invade predicate OK
your PRP your arg1 OK
privacy NN privacy arg1 OK
and CC and ^ OK
you PRP you arg1 OK
're VBP 're predicate OK
not RB not arg2 OK
one CD one arg2 OK

that DT that arg1 OK
's BES ^ ^ repeat
that DT ^ ^ repeat
's BES ^ ^ repeat
would MD would ^ OK
truly RB truly ^ false_start
feeling VBG feel predicate false_start
like IN like arg1 OK
an DT an arg1 OK
invasion NN invasion arg1 OK

opposed VBN opposed ^ OK
to IN to ^ OK
being VBG being ^ OK
a DT a ^ OK
tuck- NN ^ ^ repeat
truck NN truck ^ OK
driver NN driver ^ OK
or CC or ^ OK
operating VBG operating ^ OK
heavy JJ heavy ^ OK
machinery NN machinery ^ OK
or CC ^ ^ repeat
or CC or ^ OK
or CC ^ ^ repeat
dealing VBG dealing ^ OK
dealing VBG ^ ^ repeat
with IN with ^ OK
with IN ^ ^ repeat
children NNS children ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ filler
someone NN ^ ^ false_start
at IN ^ ^ false_start
work NN ^ ^ false_start
children NNS ^ ^ repeat

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they arg1 OK
should MD should arg1 OK
possibly RB possibly arg1 OK
be VB be arg1 OK
tested VBN tested arg1 OK
for IN for arg2 OK
drugs NNS drugs arg2 OK
so RB ^ ^ false_start
when WRB ^ ^ false_start
tested VBN ^ ^ false_start
because IN because ^ OK
you PRP you arg0 OK
see VBP see predicate OK
so RB so arg1 OK
many JJ many arg1 OK
people NNS people arg1 OK
on RB on arg1 OK
watching VBG watching arg1 OK
your PRP your arg1 OK
kids NNS kids arg1 OK
and CC and ^ OK
they PRP they arg0 OK
have VBP have ^ OK
the DT the arg1 OK
cameras NNS cameras arg1 OK
hidden VBN hidden predicate OK
and NP-2 and ^ OK
beating CC are ^ false_start
beating CC beating predicate OK
your VBG your arg1 OK
kids PRP kids arg1 OK

so RB ^ ^ false_start
you PRP you arg0 OK
wonder VBP wonder predicate OK
wow UH how arg1 false_start
somebody NN somebody arg0 OK
could MD could arg1 OK
do VB do arg1 OK
that DT that arg1 OK
to IN to arg1 OK
a DT a arg1 OK
kid NN kid arg1 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ repeat
eh UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP i arg0 OK
think VBP think predicate OK
texas NNP in ^ false_start
texas NNP texas argM_loc OK
there RB ^ ^ false_start
you PRP ^ ^ false_start
guys NNS ^ ^ false_start
eh UH ^ ^ filler
drugs NNS drugs arg1 OK
are VBP ^ ^ repeat
are VBP are arg1 OK
pretty JJ ^ ^ repeat
pretty RB pretty arg2 OK
bad JJ bad arg2 OK
too RB too arg2 OK

th- NN ^ argM_loc repeat
and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP ^ ^ false_start
always RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
hear VBP ^ ^ false_start
texas NNP ^ ^ false_start
eh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
y- XX ^ ^ false_start
eh UH ^ ^ filler
i PRP ^ ^ repeat
you PRP ^ ^ false_start
can MD ^ ^ false_start
just RB ^ ^ false_start
come VB ^ ^ false_start
out RB ^ ^ false_start
and CC ^ ^ false_start
oh UH ^ ^ filler
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB ^ ^ repeat
know VB know predicate OK
what WDT in ^ false_start
what WDT what arg1 OK
part NN part arg1 OK
of IN of arg1 OK
texas NNP texas argM_loc OK
you PRP you arg0 OK
live VBP live arg1 OK

but CC but ^ OK
i PRP i arg0 OK
heard VBD heard predicate OK
dallas NNP ^ ^ false_start
and CC ^ ^ false_start
houston NNP ^ ^ false_start
they PRP they arg0 OK
say VBP say arg1 OK
when WRB when arg1 OK
you PRP you arg1 OK
come VBP come arg1 OK
there RB there arg4 OK
you ADVP-TMP- 1 ^ ^ repeat
you PRP you arg0 OK
will PRP will arg1 OK
be MD be arg1 OK
able VB able arg1 OK
to JJ to arg1 OK
find TO find arg1 OK
a VB a arg1 OK
job DT job arg1 OK

you PRP you argM_tmp OK
get VBP get ^ OK
hired VBN hired predicate OK
some DT at ^ false_start
some DT some arg0 OK
companies NNS companies arg0 OK
same JJ on ^ false_start
same JJ the ^ false_start
same JJ same argM_tmp OK
day NN day argM_tmp OK

so UH ^ ^ false_start
they PRP they arg0 OK
d- VBP ^ ^ repeat
do VBP ^ ^ repeat
do VB do ^ OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
drug NN drug arg2 OK
testing NN testing predicate OK
there RB there argM_loc OK
though RB though ^ OK

and CC ^ ^ false_start
that DT that ^ OK
's BES 's predicate OK
just RB just arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
procedure NN procedure arg1 OK
they PRP they arg1 OK
go VBP go arg1 OK
through IN through arg2 OK
huh NP-1 ^ ^ filler

i PRP ^ ^ repeat
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
well UH ^ ^ false_start
they PRP ^ ^ repeat
the DT the arg0 OK
companies NNS companies arg0 OK
know VBP know predicate OK

the PRP they arg0 false_start
have VBP have predicate OK
their PRP their arg1 OK
reasons NNS reasons arg1 OK
for IN for arg1 OK
having VBG having arg1 OK
certain JJ certain arg1 OK
positions NNS positions arg1 OK

just RB ^ ^ repeat
just RB just arg0 OK
about RB ^ ^ repeat
about RB about arg0 OK
any DT any arg0 OK
job NN job arg0 OK
i PRP i arg0 OK
've VBP 've ^ OK
w- VBN ^ ^ repeat
went VBN gone ^ false_start
to TO to ^ OK
applied VBN apply predicate OK
for IN for arg1 false_start
probably NP-1 ^ ^ false_start
eighty RB ^ ^ false_start
percent CD ^ ^ false_start
they NN ^ ^ repeat
they PRP ^ ^ repeat
th- PRP ^ ^ repeat
they PRP ^ ^ false_start
uh PRP ^ ^ filler
required UH required predicate OK
me VBD me arg2 OK
ah PRP ^ ^ filler
to UH to arg1 OK
take TO take arg1 OK
a VB a arg1 OK
drug DT drug arg1 OK
test NN test arg1 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
dri- VB ^ ^ repeat
driving NN driving predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
where WRB where argM_loc OK
are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 OK

are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 OK
the DT the arg2 OK
south NN south arg2 OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do predicate OK
too RB too ^ OK

can MD can ^ OK
you PRP you arg0 OK
do VB do predicate OK
it PRP it arg1 OK
more RBR more ^ OK
than IN than ^ OK
t- XX ^ ^ repeat
three CD three ^ OK
times NNS times ^ OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
i- JJ ^ ^ repeat
interested JJ interested arg2 OK
in IN in arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what arg0 OK
happened VBD happened arg2 OK
there RB there argM_loc OK

and CC ^ ^ false_start
oh UH ^ ^ filler
what WP ^ ^ false_start
was VBD ^ ^ false_start
the DT ^ ^ false_start
guy NN ^ ^ false_start
that DT ^ ^ false_start
ga- NN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that arg1 OK
's HVS 's ^ OK
just RB just ^ OK
um UH ^ ^ filler
gone VBN gone predicate OK
to IN to arg4 OK
jail NN jail arg4 OK
for IN for ^ OK
that DT that ^ OK

the DT the ^ OK
um UH ^ ^ filler

and CC ^ ^ false_start
he PRP he arg0 OK
was VBD was ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
ah UH ^ ^ filler
how WRB how arg1 OK
sorry JJ sorry arg2 OK
he PRP he arg1 OK
was VBD was arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
said VBD ^ ^ repeat
um UH ^ ^ filler
he PRP he arg0 OK
said VBD said predicate OK
that IN that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he arg1 OK
was VBD was arg1 OK
sorry JJ sorry arg2 OK
for IN for arg2 OK
what WP what arg2 OK
he PRP he arg0 OK
had VBD had arg2 OK
done VBN done arg2 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
really RB really arg2 OK
um UH ^ ^ filler
terrible JJ terrible arg2 OK
because IN because ^ OK
i PRP ^ ^ repeat
i- PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
that IN that arg1 OK
it PRP ^ ^ repeat
it PRP it arg0 OK
gives VBZ gives arg1 OK
the DT the arg1 OK
wrong JJ wrong arg1 OK
opinion NN opinion arg1 OK
to IN to arg1 OK
our PRP our arg1 OK
youth NN youth arg1 OK
and CC and arg1 OK
people NNS people arg1 OK
that WDT who arg0 false_start
hear VBP hear arg1 OK
about IN about arg1 OK
these DT these arg1 OK
things NNS things arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
they PRP they arg0 OK
think VBP think predicate OK
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
these DT these arg0 OK
white JJ white arg0 OK
collar NN collar arg0 OK
guys NNS guys arg0 OK
are VBP ^ ^ repeat
are VBP are arg1 OK
doing VBG ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
lying VBG lying arg1 OK
and CC and arg1 OK
cheating VBG cheating arg1 OK
and CC ^ ^ repeat
and CC and arg1 OK
embezzling VBG embezzling arg1 OK
money NN money arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ filler
if IN if ^ OK
they PRP they arg0 OK
're VBP 're ^ OK
doing VBG doing predicate OK
like IN ^ ^ filler
that DT that arg1 OK
why WRB then ^ false_start
why WRB why ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
we PRP we arg0 OK
do VB do predicate OK
like IN ^ ^ filler
that DT that arg1 OK

so UH ^ ^ filler
i PRP ^ ^ repeat
ah UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that IN ^ ^ false_start
it PRP it arg0 OK
sets VBZ sets arg1 OK
a DT a arg1 OK
really RB really arg1 OK
bad JJ bad arg1 OK
example NN example arg1 OK

so UH ^ arg1 filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
how WRB how arg1 OK
long RB long ^ OK
long RB before arg1 false_start
we PRP ^ ^ false_start
do VBP ^ ^ repeat
they PRP they arg0 OK
come VB come arg1 OK
on RB on arg4 OK
and CC and arg1 OK
tell VB say arg1 false_start
you PRP ^ ^ false_start
h- XX ^ ^ false_start
when WRB when argM_tmp OK
you PRP you arg0 OK
're VBP 're argM_tmp OK
through IN through arg2 OK
talking VBG talking argM_tmp OK
or ADVP-TMP- 1 ^ ^ false_start
something CC ^ predicate false_start

martha NNP martha arg1 OK
stewart NNP stewart arg1 OK
is VBZ is predicate OK
one CD one arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
some DT ^ ^ repeat
some DT some arg2 OK
big JJ big arg2 OK
deal NN deal arg2 OK
ah UH ^ ^ filler
that WDT that arg1 OK
's HVS 's ^ OK
been VBN been predicate OK
in IN in arg2 OK
the DT the arg2 OK
news NN news arg2 OK
lately RB lately argM_tmp OK

but CC ^ ^ false_start
you PRP ^ ^ repeat
know VBP ^ ^ repeat
some DT some arg0 OK
people NNS people arg0 OK
say VBP say predicate OK
that IN that arg1 OK
all DT all arg0 OK
of IN of arg0 OK
this DT this arg0 OK
stems VBZ stems arg1 OK
from IN from arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that IN ^ ^ false_start
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
this DT this arg1 OK
um UH ^ ^ filler
bad JJ bad arg1 OK
behavior NN behavior arg1 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
if IN if arg1 OK
it PRP it arg0 OK
does VBZ does arg1 OK
or VP or arg1 OK
not CC not arg1 OK

it RB it arg0 OK
does PRP does predicate OK
n't VBZ n't ^ OK
really RB really arg1 OK
seem RB seem arg1 OK
like VB like arg1 OK
it IN it arg0 OK
would PRP would arg1 OK

but MD ^ ^ false_start
because VBD because ^ OK
of NNP ^ ^ repeat
of IN of ^ OK
the IN the ^ OK
way IN way ^ OK
that VP that arg0 OK
um CC ^ ^ filler
president IN president arg0 OK
you UH ^ ^ filler
know NN ^ ^ filler
since PRP since arg0 OK
clinton VBP ^ ^ repeat
di- IN ^ ^ false_start
clinton NNP clinton arg0 OK
he DT ^ ^ false_start
acted NN acted predicate OK
uh PRP ^ ^ filler
you VBD ^ ^ filler
know ADVP-1 ^ ^ filler
a- UH ^ ^ repeat
all PRP all ^ OK
the VBP of ^ false_start
the VBP the ^ OK
unscrupulous PDT unscrupulous ^ OK
things PDT things arg0 OK
that DT that arg0 OK
went JJ went arg0 OK
on NNS on arg0 OK
while WDT while arg0 OK
he VBD he arg0 OK
was RP was arg0 OK
in IN in arg0 OK
office PRP office arg0 OK
kind VBD ^ arg2 filler
of IN ^ ^ filler
um NN ^ ^ filler
you RB ^ ^ filler
know RB ^ ^ filler
causes UH caused predicate false_start
some PRP some arg1 OK
of VBP of arg1 OK
this VBZ this arg1 OK
other DT other arg1 OK
stuff IN stuff arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
why WRB ^ ^ repeat
should MD ^ ^ repeat
why WRB ^ ^ false_start
should MD ^ ^ false_start
we PRP ^ ^ false_start
be VB ^ ^ false_start
any RB ^ ^ false_start
bet- JJR ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
why WRB ^ ^ repeat
why WRB why ^ OK
do VBP do ^ OK
n't RB n't ^ OK
we PRP we arg0 OK
just RB just ^ OK
do VB ^ ^ false_start
follow VB follow predicate OK
suit NN suit arg1 OK

well UH ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
ca MD ^ ^ false_start
n't RB ^ ^ false_start
think VB ^ ^ false_start
of IN ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm ^ OK
trying VBG trying predicate OK
to TO to arg1 OK
think VB think arg1 OK
of IN of arg1 OK
some DT some arg1 OK
other JJ other arg1 OK
stuff NN stuff arg1 OK
to TO to arg1 OK
say VB say arg1 OK

who WP who arg1 OK
is VBZ is predicate OK
ke NNP ^ ^ repeat
you PRP ^ ^ false_start
remember VB ^ ^ false_start
ken NNP ken arg2 OK
lay NNP lay arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
talk VBP talk predicate OK
about IN about arg1 OK
ken NNP ken arg1 OK
lay NNP lay arg1 OK

i PRP i ^ OK
think VBP think ^ OK
he PRP he ^ OK
was VBD was ^ OK
with IN with ^ OK

i PRP i arg0 OK
just RB just argM_tmp OK
now RB now argM_tmp OK
thought VBD thought predicate OK
of IN of arg1 OK
this DT ^ ^ false_start
is VBZ ^ ^ false_start
all PDT all arg1 OK
the DT the arg1 OK
trouble NN trouble arg1 OK
that WDT that arg1 OK
they PRP they arg0 OK
had VBD had arg1 OK
with IN with arg1 OK
the DT ^ ^ false_start
arthur NNP arthur arg1 OK
anderson NNP anderson arg1 OK
um UH ^ ^ filler

with IN ^ ^ repeat
with IN with ^ OK
the DT ^ ^ repeat
the DT the ^ OK
accounting NN accounting ^ OK
firms NNS firms ^ OK

well UH ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
was VBD was ^ OK
thinking VBG thinking ^ OK
about IN about ^ OK
doing VBG doing ^ OK
um UH ^ ^ filler
like UH ^ ^ filler
a DT a ^ OK
calcium NN calcium ^ OK
supplement NN supplement ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
n- RB ^ ^ repeat
never RB never ^ OK
did VBD did ^ OK
because IN because ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
drink VB drink ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
milk NN milk ^ OK
or CC ^ ^ repeat
or CC or ^ OK
eat VB eat ^ OK
too RB too ^ OK
much JJ much ^ OK
dairy NN dairy ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
gosh UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
as RB as ^ OK
concerned JJ concerned ^ OK
with IN with ^ OK
that DT ^ ^ repeat
that RB that ^ OK
much JJ much ^ OK
stuf- NN ^ ^ repeat
stuff NN stuff ^ OK
as IN as ^ OK
you PRP you ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
rem- VB rem- ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
n- RB ^ ^ repeat
never RB never ^ OK
did VBD did ^ OK
take VB take ^ OK
it PRP it ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
a- VB ^ ^ repeat
ask VB ask ^ OK
my PRP my ^ OK
doctor NN doctor ^ OK

but CC but ^ OK
um UH ^ ^ filler

i PRP ^ ^ filler
mean VBP ^ ^ filler
could MD could ^ OK
they PRP they ^ OK
be VB be ^ OK
lying VBG lying ^ OK

do VBP do ^ OK
you PRP you ^ OK
feel VB feel ^ OK

do VBP do ^ OK
you PRP you ^ OK
feel VB feel ^ OK
different JJ different ^ OK
now RB now ^ OK
that IN that ^ OK
you PRP you ^ OK
have VBP have ^ OK
n't RB n't ^ OK
taken VBN taken ^ OK
it PRP it ^ OK
in IN in ^ OK
a DT a ^ OK
few JJ few ^ OK
days NNS days ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
does VBZ does ^ OK
it PRP it ^ OK

n- XX ^ ^ false_start
oh UH oh ^ OK
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
been VBN been ^ OK
receiving VBG receiving ^ OK
calls NNS calls ^ OK
all DT all ^ OK
week NN week ^ OK

you PRP you ^ OK
i- XX i- ^ OK

the DT ^ ^ repeat
the DT the ^ OK
onl- JJ ^ ^ repeat
only JJ only ^ OK
time NN time ^ OK
you PRP you ^ OK
use VBP use ^ OK
your PRP your ^ OK
cell NN cell ^ OK
phone NN phone ^ OK
is ADVP-TMP- 1 is ^ OK
when VBZ when ^ OK
you WRB you ^ OK
're PRP 're ^ OK
making VBP making ^ OK
a VBG a ^ OK
call DT call ^ OK

and CC and ^ OK
i PRP i ^ OK

but CC but ^ OK
th- DT th- ^ OK

but CC but ^ OK
the DT the ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
though RB ^ ^ false_start
um UH ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
receive VBP receive ^ OK
a DT a ^ OK
call NN call ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
make VB make ^ OK
a DT a ^ OK
call NN call ^ OK

so UH so ^ OK
um UH ^ ^ filler
like UH ^ ^ filler
if IN ^ ^ false_start
i PRP ^ ^ false_start
g- VBD ^ ^ false_start
eh UH ^ ^ filler
since IN since ^ OK
i PRP i ^ OK
got VBD got ^ OK
your PRP your ^ OK
call NN call ^ OK
i PRP i ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
make VB make ^ OK
any DT any ^ OK
calls NNS calls ^ OK
later RB later ^ OK
on RB on ^ OK
in IN in ^ OK
the DT the ^ OK
day NN day ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
d- VBD ^ ^ repeat
did VBD did ^ OK
talk VB talk ^ OK
to IN to ^ OK
somebody NN somebody ^ OK
one CD one ^ OK
day NN day ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
they PRP they ^ OK
eh UH ^ ^ filler
were VBD were ^ OK
disconnected VBN disconnected ^ OK
with IN with ^ OK
me PRP me ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
assume VBP assume ^ OK
that IN that ^ OK
the DT ^ ^ repeat
the DT the ^ OK
call NN call ^ OK
did VBD did ^ OK
n't RB n't ^ OK
count VB t ^ OK
because IN because ^ OK
i PRP i ^ OK
got VBD got ^ OK
another DT another ^ OK
call NN call ^ OK
the DT the ^ OK
same JJ same ^ OK
day NN day ^ OK

because IN because ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
agree VBP agree ^ OK
in IN in ^ OK
the DT the ^ OK
sense NN sense ^ OK
that IN ^ ^ repeat
that IN that ^ OK
mo- XX ^ ^ false_start
the DT the ^ OK
heightened JJ heightened ^ OK
security NN security ^ OK
just RB just ^ OK
makes VBZ makes ^ OK
it PRP it ^ OK
harder JJR harder ^ OK

f- XX ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
went VBD went ^ OK
through IN through ^ OK
the DT the ^ OK
whole JJ whole ^ OK
system NN system ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
we- XX ^ ^ false_start
flew VBD flew ^ OK
from IN from ^ OK
uh UH ^ ^ filler
las NNP las ^ OK
vegas NNP vegas ^ OK
to IN to ^ OK
um UH ^ ^ filler
the DT the ^ OK
east NNP east ^ OK
coast NNP coast ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
find VBP find ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
doing VBG doing ^ OK
a DT a ^ OK
lot NN lot ^ OK
better JJR better ^ OK
job NN job ^ OK
than IN than ^ OK
they PRP they ^ OK
did VBD did ^ OK
e- RB ^ ^ false_start
actually RB ^ ^ false_start
even RB even ^ OK
a DT a ^ OK
year NN year ^ OK
ago RB ago ^ OK
because IN because ^ OK
uh UH ^ ^ filler
a DT a ^ OK
year NN year ^ OK
ago RB ago ^ OK
there RB there ^ OK
were VBD were ^ OK
people NNS people ^ OK
that WDT that ^ OK
would MD would ^ OK
look VB look ^ OK
at IN at ^ OK
my PRP my ^ OK
ticket NN ticket ^ OK
or CC or ^ OK
and CC ^ ^ false_start
pretend VB pretend ^ OK
to TO to ^ OK
look VB look ^ OK
at IN at ^ OK
it PRP it ^ OK

this DT ^ ^ repeat
this DT this ^ OK
time NN time ^ OK
uh UH ^ ^ filler
when WRB when ^ OK
the DT the ^ OK
federal JJ federal ^ OK
people NNS people ^ OK
took VBD took ^ OK
over RP over ^ OK
i- ADVP-TMP- 1 ^ ^ repeat
it PRP it ^ OK
was PRP was ^ OK
a VBD a ^ OK
lot DT lot ^ OK
more NN more ^ OK
serious RBR serious ^ OK

uh UH ^ ^ filler
you PRP you ^ OK
just RB just ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
get VB get ^ OK
through IN through ^ OK
eh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
the DT the ^ OK
security NN ^ ^ repeat
s- NN ^ ^ repeat
security NN security ^ OK
area NN area ^ OK

especially RB especially ^ OK
in IN ^ ^ repeat
in IN in ^ OK
s- DT ^ ^ repeat
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
big JJ big ^ OK
places NNS places ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
well RB well ^ OK
up IN up ^ OK
until IN until ^ OK
now RB now ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
been VBN been ^ OK
searching VBG searching ^ OK
the DT the ^ OK
suitcases NNS suitcases ^ OK
that WDT that ^ OK
have VBP have ^ OK
been VBN been ^ OK
going VBG going ^ OK
into IN into ^ OK
the DT the ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
planes NNS planes ^ OK

searching VBG By ^ false_start
and CC ^ ^ false_start
so RB ^ ^ filler
not RB not ^ OK
s- VB ^ ^ repeat
s- VB ^ ^ repeat
search VB ^ ^ repeat
searching VBG searching ^ OK
the DT the ^ OK
suitcases NNS suitcases ^ OK
anybody NN anybody ^ OK
could MD could ^ OK
put VB put ^ OK
anything NN anything ^ OK
into IN into ^ OK
a DT a ^ OK
suitcase NN suitcase ^ OK
and CC ^ ^ repeat
and CC and ^ OK
then RB ^ ^ repeat
then RB then ^ OK
n- XX ^ ^ false_start
n- XX ^ ^ false_start
take VB ^ ^ false_start
it PRP ^ ^ false_start
o- XX ^ ^ false_start
uh UH ^ ^ filler
blow VB blow ^ OK
it PRP it ^ OK
up RP up ^ OK
from IN from ^ OK
remote JJ remote ^ OK
control NN control ^ OK

so RB ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK

b- XX ^ ^ false_start
now RB now ^ OK
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT ^ ^ repeat
a DT ^ ^ false_start
very RB ^ ^ false_start
complicated JJ ^ ^ false_start
and CC ^ ^ false_start
uh UH ^ ^ filler
sniffing VBG ^ ^ false_start
and CC ^ ^ repeat
and CC ^ ^ false_start
all DT ^ ^ false_start
kinds NNS ^ ^ false_start
of IN ^ ^ false_start
this DT this ^ OK
big JJ big ^ OK
very RB very ^ OK
expensive JJ expensive ^ OK
machine NN machine ^ OK
that WDT that ^ OK
every DT every ^ OK
suitcase NN suitcase ^ OK
goes VBZ goes ^ OK
through IN through ^ OK

and CC ^ ^ false_start
even RB even ^ OK
then RB then ^ OK
if IN ^ ^ repeat
if IN if ^ OK
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
s- NN ^ ^ repeat
something NN something ^ OK
that WDT that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
not RB not ^ OK
sure JJ sure ^ OK
of IN of ^ OK
now NP-1 now ^ OK
they RB ^ ^ false_start
ha- PRP ^ ^ false_start
they VBP they ^ OK
tell PRP tell ^ OK
you VBP you ^ OK
you PRP you ^ OK
ca PRP ca ^ OK
n't MD n't ^ OK
even RB even ^ OK
lock RB lock ^ OK
your VB your ^ OK
suitcases PRP suitcases ^ OK
c- NNS ^ ^ false_start
because XX because ^ OK
uh IN ^ ^ filler
they UH they ^ OK
want PRP want ^ OK
to VBP to ^ OK
be TO be ^ OK
able VB able ^ OK
to JJ to ^ OK
open TO open ^ OK
them VB them ^ OK
without PRP without ^ OK
you IN you ^ OK
watching PRP watching ^ OK
them VBG them ^ OK
i PRP i ^ OK
think PRP think ^ OK

uh UH ^ ^ filler
this DT this ^ OK
is VBZ is ^ OK
eh UH ^ ^ filler
eh UH ^ ^ filler
the DT the ^ OK
uh UH ^ ^ filler
mccarran NNP mccarran ^ OK
airport NNP airport ^ OK

eh UH ^ ^ filler
eh UH ^ ^ filler
yeah UH yeah ^ OK

the DT ^ ^ false_start
what WP what ^ OK
and CC ^ ^ false_start
um UH ^ ^ filler
but CC ^ ^ false_start
every DT ^ ^ false_start
they PRP every ^ false_start
airport NN ^ ^ false_start
they PRP airport ^ false_start
've VBP has ^ false_start
done VBN done ^ OK
in IN in ^ OK
the DT the ^ OK
last JJ last ^ OK
year NN year ^ OK
is VBZ is ^ OK
they PRP ^ ^ repeat
made VBN ^ ^ false_start
the DT the ^ OK
federal JJ federal ^ OK
government NN government ^ OK
've VBP ^ ^ repeat
has VBZ has ^ OK
bought VBN ^ ^ repeat
bought VBN bought ^ OK
these DT these ^ OK
big JJ big ^ OK
expensive JJ expensive ^ OK
uh UH ^ ^ filler
machines NNS machines ^ OK
that WDT that ^ OK
's BES are ^ false_start
supposed VBN supposed ^ OK
to TO to ^ OK
detect VB detect ^ OK
eh UH ^ ^ filler
explosives NNS explosives ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
at IN at ^ OK
the DT the ^ OK
moment NN moment ^ OK
probably RB probably ^ OK
not RB not ^ OK
a DT a ^ OK
really RB really ^ OK
really RB ^ ^ repeat
close JJ close ^ OK
friend NN friend ^ OK

but CC but ^ OK
trey NP-PRD-1 trey ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
quite RB quite arg1 OK
what WP what arg1 OK
it PRP it arg1 OK
is VBZ is arg1 OK

um UH ^ ^ filler
and CC ^ ^ false_start
there EX there arg0 OK
's BES 's predicate OK
a DT a arg1 OK
little JJ little arg1 OK
bit NN bit arg1 OK
of IN of arg1 OK
a DT a arg1 OK
w- XX ^ ^ false_start
hold NN hold arg1 OK
back RB back arg1 OK

and CC ^ ^ false_start
the DT the arg1 OK
other JJ other arg1 OK
one NN one arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
guy NN guy arg2 OK
who WP who arg0 OK
's HVS 's arg2 OK
let VBN let arg2 OK
his PRP his arg1 OK
finances NNS finances arg1 OK
go VB go arg1 OK
pretty RB pretty arg4 OK
much RB much arg4 OK
to IN to arg4 OK
the DT the arg4 OK
dogs NNS dogs arg4 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
ye- XX ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
he PRP ^ ^ repeat
just RB ^ ^ false_start
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
seem VB ^ ^ false_start
to TO ^ ^ false_start
have VB ^ ^ false_start
he PRP he arg0 OK
never RB never argM_tmp OK
has VBZ has predicate OK
any DT any arg1 OK
spending NN spending arg1 OK
money NN money arg1 OK

and UNK ^ ^ false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
its- UNK ^ ^ repeat
jus- UNK ^ ^ false_start
it UNK it arg1 OK
's UNK 's predicate OK
i- UNK ^ ^ false_start
not UNK not arg2 OK
enough UNK enough arg2 OK

i- PRP ^ ^ false_start
because IN because ^ OK
w- UH ^ ^ repeat
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
just RB just ^ OK

but CC but ^ OK
um UH ^ ^ filler

but CC but ^ OK
it PRP it ^ OK
just RB just ^ OK
feels VBZ feels ^ OK
like IN ^ ^ filler
w- XX ^ ^ false_start
f- XX ^ ^ false_start
come VBN ^ ^ filler
on RP ^ ^ filler

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
necessarily RB necessarily ^ OK

and CC ^ ^ false_start
i PRP i arg0 OK
would MD would ^ OK
n't RB n't ^ OK
guess VB guess predicate OK
either DT either arg0 OK
one CD one arg0 OK
of IN of arg0 OK
them PRP them arg0 OK
has VBZ has arg1 OK
more JJR more arg1 OK
than IN than arg1 OK
one CD one arg1 OK
or CC or arg1 OK
two CD two arg1 OK
very RB very arg1 OK
close JJ close arg1 OK
friends NNS friends arg1 OK
and CC ^ ^ false_start
maybe RB ^ ^ false_start
not RB ^ ^ false_start
even RB ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
then RB then ^ OK
very RB very ^ OK
strangely RB strangely ^ OK
uh UH ^ ^ filler
he PRP he arg0 OK
borrowed VBD borrowed predicate OK
some DT some arg1 OK
rent NN rent arg1 OK
money NN money arg1 OK
one CD one argM_tmp OK
time NN time argM_tmp OK

we PRP we arg0 OK
used VBD used ^ OK
to TO to ^ OK
borrow VB borrow predicate OK
from IN from arg2 OK
e- XX ^ ^ repeat
each DT each arg2 OK
other JJ other arg2 OK
every DT every argM_tmp OK
once RB once argM_tmp OK
in IN in argM_tmp OK
a DT a argM_tmp OK
while NN while argM_tmp OK
if IN if ^ OK
we PRP we arg0 OK
'd MD 'd ^ OK
need VB need predicate OK
a DT a arg1 OK
little JJ little arg1 OK
float NN float arg1 OK

like IN ^ ^ filler
a DT a ^ OK
hundred CD hundred ^ OK
dollars NNS dollars ^ OK
here RB here ^ OK
and CC and ^ OK
there RB there ^ OK

but CC but ^ OK
then RB then ^ OK
one CD ^ ^ repeat
one CD one ^ OK
t- NN ^ ^ repeat
time NN time ^ OK
he PRP he arg0 OK
said VBD said predicate OK
he PRP he arg0 OK
needed VBD needed arg1 OK
to TO to arg1 OK
borrow VB borrow arg1 OK
like UH ^ ^ filler
seven CD seven arg1 OK
hundred CD hundred arg1 OK
fifty CD fifty arg1 OK
dollars NNS dollars arg1 OK
to TO to arg1 OK
pay VB pay arg1 OK
his PRP his arg3 OK
rent NN rent arg3 OK

and CC ^ ^ repeat
then RB ^ ^ repeat
and CC ^ ^ false_start
then RB then ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
really RB really ^ OK
pursue VB pursue ^ OK
the DT the ^ OK
repayment NN repayment ^ OK
for IN for ^ OK
probably RB probably ^ OK
s- CD ^ ^ repeat
six CD six ^ OK
or CC or ^ OK
nine CD nine ^ OK
months NNS months ^ OK
because IN because ^ OK
i PRP i ^ OK
wanted VBD wanted ^ OK
to TO to ^ OK
give VB give ^ OK
him PRP him ^ OK
some DT some ^ OK
breathing NN breathing ^ OK
space NN space ^ OK

but CC but ^ OK
then RB then ^ OK
when WRB when ^ OK
i PRP i ^ OK
finally RB finally ^ OK
approached VBD approached ^ OK
him PRP him ^ OK
about IN about ^ OK
it PRP it ^ OK
he ADVP-TMP- 1 he ^ OK
was PRP was ^ OK
really VBD really ^ OK
funny RB funny ^ OK
about JJ about ^ OK
it IN it ^ OK

and CC ^ ^ false_start
he PRP ^ ^ repeat
he PRP he ^ OK
did VBD did ^ OK
n't RB n't ^ OK
want VB want ^ OK
to TO to ^ OK
repay VB repay ^ OK
it PRP it ^ OK

but CC but ^ OK
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
artist NN artist ^ OK
should MD should ^ OK
censor VB censor ^ OK
himself PRP himself ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
there EX there ^ OK
was VBD was ^ OK
a DT a ^ OK
time NN time ^ OK
when WRB when ^ OK
my PRP my ^ OK
i PRP ^ ^ repeat
mom NN mom ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
younger JJR ^ ^ repeat
younger JJR younger ^ OK
music DT that ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
the ADVP-TMP- 1 the ^ OK
music DT music ^ OK
they NN ^ ^ false_start
implied PRP implied ^ OK
a VBD a ^ OK
lot DT lot ^ OK
of NN of ^ OK
things IN things ^ OK

they PRP they ^ OK
never RB never ^ OK
came VBD came ^ OK
right RB right ^ OK
out RB out ^ OK
and CC ^ ^ repeat
and CC and ^ OK
said VBD said ^ OK
it PRP it ^ OK

i PRP i ^ OK
have VBP have ^ OK
little JJ little ^ OK
nieces NNS nieces ^ OK
and CC ^ ^ repeat
and CC and ^ OK
little JJ little ^ OK
nephews NNS nephews ^ OK

and CC ^ ^ false_start
to TO to ^ OK
hear VB hear ^ OK
it PRP ^ ^ false_start
and CC and ^ OK
then RB then ^ OK
singing VBG sing ^ false_start
his PRP his ^ OK
songs NNS songs ^ OK
it PRP ^ ^ repeat
's BES is ^ OK
a DT a ^ OK
little RB little ^ OK
upsetting JJ upsetting ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
society NN in ^ false_start
today NN today ^ OK
's POS 's ^ OK
society NN society ^ OK
kids NNS kids ^ OK
grow VBP grow ^ OK
up RB up ^ OK
a DT a ^ OK
lot NN lot ^ OK
faster RBR faster ^ OK
because IN because ^ OK
of IN of ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
media NN media ^ OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and ^ OK
w- WP ^ ^ repeat
uh UH ^ ^ filler
what WP what ^ OK
's BES 's ^ OK
allowed VBN allowed ^ OK
on IN on ^ OK
t. NN t. ^ OK
v. NN v. ^ OK

there EX there ^ OK
's BES 's ^ OK
certain JJ certain ^ OK
things NNS things ^ OK
that WDT that ^ OK
was VBD was ^ OK
not RB not ^ OK
on IN on ^ OK
television NN television ^ OK
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
growing VBG growing ^ OK
up RB up ^ OK

just RB ^ ^ false_start
you PRP you ^ OK
would MD would ^ OK
never RB never ^ OK
see VB see ^ OK
what WP what ^ OK
you PRP you ^ OK
see VBP see ^ OK
now RB now ^ OK

they PRP they ^ OK
're VBP 're ^ OK
showing VBG showing ^ OK
two CD ^ ^ repeat
eh UH ^ ^ filler
two CD two ^ OK
wo- NNS ^ ^ repeat
w- NNS ^ ^ repeat
women NNS women ^ OK
in IN in ^ OK
bed NN bed ^ OK
together RB together ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
just RB ^ ^ repeat
it PRP ^ ^ repeat
like IN like ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
to TO to ^ OK
shock VB shock ^ OK
someone NN someone ^ OK
you PRP ^ ^ repeat
they PRP they ^ OK
would MD would ^ OK
really RB really ^ OK
have VB have ^ OK
to TO to ^ OK
be VB be ^ OK
like UH ^ ^ filler
off RB off ^ OK

now UH now ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
after IN after ^ OK
that DT that ^ OK
one CD one ^ OK
w- NN ^ ^ repeat
what WP what ^ OK
else RB else ^ OK
can MD can ^ OK
you PRP you ^ OK
say VB say ^ OK

so UH ^ ^ false_start
is VBZ is ^ OK
that DT that ^ OK
how WRB how ^ OK
you PRP you ^ OK
got VBD got ^ OK
involved VBN involved ^ OK
in IN in ^ OK
the DT the ^ OK
study NN study ^ OK

supposed VBN supposed ^ OK
if IN if ^ OK
cell NN cell ^ OK
phones NNS phones ^ OK
better JJR better ^ OK
because IN because ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

improve VB improve ^ OK
uh UH ^ ^ filler
cell NN ^ ^ repeat
cell NN cell ^ OK
phones NNS ^ ^ repeat
phone NN phone ^ OK
technology NN technology ^ OK

i PRP i ^ OK
have VBP have ^ OK
a DT a ^ OK
samsung NNP samsung ^ OK
uh UH ^ ^ filler
one CD one ^ OK
thousand CD thousand ^ OK

and CC ^ ^ repeat
that DT ^ ^ repeat
and CC ^ ^ false_start
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
what WP what ^ OK
i PRP i ^ OK
heard VBD heard ^ OK
too NP-1 too ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
not RB ^ ^ false_start
being VBG ^ ^ repeat
being VBG ^ ^ false_start
reg- XX ^ ^ false_start
i PRP i ^ OK
actually RB actually ^ OK
got VBD got ^ OK
a DT a ^ OK
cell NN cell ^ OK
phone NN phone ^ OK
because IN because ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
travel VBP travel ^ OK
a DT a ^ OK
lot NN lot ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
needed VBD needed ^ OK
it PRP it ^ OK
like UH ^ ^ filler
if IN ^ ^ repeat
if IN ^ ^ repeat
if IN if ^ OK
i PRP i ^ OK
get VBP get ^ OK
lost JJ lost ^ OK
or CC or ^ OK
break VBP break ^ OK
down RP down ^ OK

but CC but ^ OK
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
in IN ^ ^ repeat
in IN in ^ OK
the DT ^ ^ false_start
king NNP king ^ OK
of IN of ^ OK
prussia NNP prussia ^ OK
mall NN ^ ^ repeat
mall NN mall ^ OK
today NN today ^ false_start

it PRP ^ ^ repeat
it PRP it ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
unbelievable JJ unbelievable ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
oh UH ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
in IN in ^ OK
the DT the ^ OK
mall NN mall ^ OK
now RB now ^ OK
shopping VBG shopping ^ OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ false_start
god UH ^ ^ false_start
i PRP ^ ^ false_start
could MD ^ ^ false_start
i PRP i ^ OK
never RB never ^ OK
seen VBN seen ^ OK
so RB so ^ OK
many JJ many ^ OK
people NNS people ^ OK
in IN in ^ OK
one CD one ^ OK
place NN place ^ OK
with IN with ^ OK
so RB so ^ OK
many JJ many ^ OK
cell NN cell ^ OK
phones NNS phones ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
like RP like ^ OK
ach UH ach ^ OK

it PRP it ^ OK
's BES 's ^ OK

but CC but ^ OK
it PRP ^ ^ repeat
i PRP i ^ OK
was VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
have VB have ^ OK
it PRP it ^ OK
activated VBN activated ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
like RP like ^ OK
oh UH oh ^ OK
my UH my ^ OK
god UH god ^ OK

oh UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
like RP like ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
getting VBG getting ^ OK
it PRP it ^ OK
activated VBN activated ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
getting VBG getting ^ OK
it PRP it ^ OK
a- VBN a- ^ OK

it PRP it ^ OK
's SBAR-3 's ^ OK
terrible BES terrible ^ OK
when JJ when ^ OK
you WRB you ^ OK
've PRP 've ^ OK
broken VBP broken ^ OK
down VBN down ^ OK
and RP and ^ OK
you CC you ^ OK
're PRP 're ^ OK
stranded VBP stranded ^ OK
and JJ ^ ^ false_start
you CC ^ ^ false_start
're PRP ^ ^ false_start
like VBP ^ ^ false_start
oh RP ^ ^ false_start
lord UH ^ ^ false_start

when WRB when ^ OK
the DT the arg0 OK
stereo NN stereo arg0 OK
got VBD got predicate OK
here RB here arg1 OK
it ADVP-TMP- 1 ^ ^ false_start
w- PRP ^ ^ false_start
eh PRP ^ ^ filler
d- UH ^ ^ false_start
we XX we arg0 OK
had PRP heard predicate false_start
a VBD a arg1 OK
bunch DT bunch arg1 OK
of NN of arg1 OK
cracking IN cracking arg1 OK
noises JJ noises arg1 OK
on NNS in argM_loc false_start
it IN it argM_loc OK

i PRP i arg1 OK
'm VBP 'm predicate OK
now RB now arg2 false_start
stuck JJ stuck arg2 OK
with IN with arg2 OK
all PDT all arg2 OK
these DT these arg2 OK
c. NN c. arg2 OK
d.s NNS d.s arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
'm VBP 'm arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
get VB get arg1 OK
one CD one arg1 OK
of IN ^ ^ false_start
those DT ^ ^ false_start
that WDT that arg1 OK
you PRP you arg0 OK
hook VBP hook arg1 OK
on IN on arg1 OK
your PRP your arg1 OK
hip NN hip arg1 OK
and CC and arg1 OK
ride VBP ride arg1 OK
around RB around arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
freeways NNS freeways argM_loc OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
listening VBG listening arg1 OK
to IN to arg1 OK
music NN music arg1 OK
during IN during argM_tmp OK
the DT the argM_tmp OK
day NN day argM_tmp OK

uh UH ^ ^ filler
the DT the ^ OK
internet NN internet ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
y- PRP ^ ^ false_start
it PRP it arg1 OK
can MD can arg1 OK
be VB be arg1 OK
exhausted VBN exhausted arg2 OK

and CC ^ ^ false_start
this DT this arg1 OK
was VBD was predicate OK
done VBN done arg2 OK
in IN in argM_tmp OK
the DT ^ ^ repeat
the DT the argM_tmp OK
sixties NNS sixties argM_tmp OK
or CC or argM_tmp OK
seventies NNS seventies argM_tmp OK
when WRB when argM_tmp OK
computers NNS computers arg0 OK
first RB first argM_tmp OK
came VBD came argM_tmp OK
out RB out arg4 OK

huh UH ^ ^ filler
and CC ^ ^ false_start
so RB ^ ^ filler
what WP what ^ OK
we PRP we ^ OK
're VBP 're ^ OK
experiencing VBG experiencing ^ OK
just RB just ^ OK
s- XX ^ ^ false_start
every DT every ^ OK
time NN time ^ OK
you PRP you ^ OK
buy VBP buy ^ OK
a DT a ^ OK
tape NN tape ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
e- ADVP-TMP- 2 ^ ^ false_start
how XX how ^ OK
much WRB much ^ OK

you JJ you arg0 OK
can PRP can ^ OK
put MD put predicate OK
maybe VB maybe arg1 OK
two RB two arg1 OK
three CD or ^ false_start
three CD three arg1 OK
screenplays CD screenplays arg1 OK
on NNS on argM_loc OK
a IN a argM_loc OK
disk DT disk argM_loc OK
that NN that ^ OK
you WDT you arg0 OK
have PRP have predicate OK
in VBP on argM_loc false_start
your IN your argM_loc OK
computer PRP computer argM_loc OK

and CC and ^ OK
um UH ^ ^ filler

but CC ^ ^ false_start
m- XX ^ ^ filler
even RB even ^ OK
though IN though ^ OK
that DT that arg1 OK
's BES 's predicate OK
down RB down arg2 OK
rated JJ rated arg2 OK
you PRP you arg0 OK
got VBN have ^ false_start
to TO to ^ OK
look VB look predicate OK
at IN at arg1 OK
how WRB how arg1 OK
much JJ much arg1 OK
the DT the arg0 OK
computers NNS computers arg0 OK
cost VB costed arg1 false_start
whenever WRB whenever argM_tmp OK
they PRP they arg1 OK
were VBD were argM_tmp false_start
first RB first arg2 OK
made VBN made arg2 OK
before ADVP-TMP- 3 before arg1 OK
they IN they arg0 OK
came PRP came arg1 OK
out VBD out arg1 OK
to RB to arg1 OK
the IN the arg1 OK
public DT public arg1 OK

and CC ^ ^ false_start
um UH ^ ^ filler
so RB ^ ^ filler
you PRP you arg0 OK
see VBP see predicate OK
how WRB how arg1 OK
they PRP they arg0 OK
were VBD were arg1 OK
able JJ able arg1 OK
to TO to arg1 OK
put VB put arg1 OK
everything NN everything arg2 OK
that WDT that arg1 false_start
was VBD was arg2 false_start
ever RB ever argM_tmp false_start
r- VBN ^ ^ repeat
recorded VBN recorded arg2 false_start
on IN on argM_loc OK
the DT the argM_loc OK
earth NN earth argM_loc OK
in NP-1 in arg4 OK
a IN a arg4 OK
small DT small arg4 OK
cube JJ cube arg4 OK
and NN and ^ OK
then CC then ^ OK
reduce RB reduce predicate OK
the VB the arg1 OK
price DT price arg1 OK
but NN but ^ OK
also CC also ^ OK
reduce RB reduce predicate OK
the VB the arg1 OK
amount DT amount arg1 OK
of NN of arg1 OK
information IN information arg1 OK
you NN you arg0 OK
can PRP can arg1 OK
get MD get arg1 OK

i PRP i arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know predicate OK
you PRP ^ ^ false_start
it PRP it arg0 OK
was VBD was arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
stuck VBN stuck arg2 OK
with IN with arg2 OK
a DT ^ ^ repeat
c- NN ^ ^ repeat
a DT a arg2 OK
whole JJ whole arg2 OK
catalog NN catalog arg2 OK
of IN of arg2 OK
disk NN disks arg2 false_start
and CC and arg1 OK
still RB still arg1 OK
only RB only arg1 OK
get VB get arg1 OK
limited JJ limited arg1 OK
information NN information arg1 OK

that DT that arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
money NN money arg2 OK
de- NN ^ ^ false_start
discuss NN discussion arg2 false_start
effort NN effort arg2 OK
and CC ^ ^ repeat
and CC and arg2 OK
time NN time arg2 OK
um UH ^ ^ filler
what WP that arg1 false_start
's BES 's predicate OK
already RB already arg2 OK
there RB there arg2 OK

eh UH ^ ^ filler
a DT a ^ OK
b- NN ^ ^ repeat
bigger JJR bigger ^ OK
benefit NN benefit ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's S-1 's predicate OK
tough BES tough arg1 OK
to JJ to arg1 OK
uh TO ^ ^ filler
tell UH tell arg1 OK
people VB people arg2 OK
that NNS that arg1 OK
they IN they arg0 OK
ca PRP ca arg1 OK
n't MD n't arg1 OK
have RB have arg1 OK
children VB children arg1 OK

it PRP ^ ^ repeat
it PRP it ^ OK
do- VBZ ^ ^ repeat
does VBZ does ^ OK
work VB work predicate OK
out RP out ^ OK
like IN like arg1 OK
that DT that arg1 OK
a DT a ^ OK
lot NN lot ^ OK

it PRP it ^ OK
's BES 's predicate OK
a DT a arg1 OK
little JJ little arg1 OK
bit NN bit arg1 OK
of IN of arg1 OK
a DT a arg1 OK
head NN head arg1 OK
start NN start arg1 OK
a DT a arg1 OK
little JJ little arg1 OK
bit NN bit arg1 OK
of IN of arg1 OK
a DT ^ ^ repeat
um UH ^ ^ filler
a DT a arg1 OK
chance NN chance arg1 OK
to TO to ^ OK
get VB get predicate OK
something NN something arg1 OK
going VBG going arg2 OK

is VBZ ^ ^ false_start
a- XX ^ ^ false_start
there EX there ^ OK
's BES 's predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
people NNS people arg0 OK
on IN on arg0 OK
welfare NN welfare arg0 OK
though SBAR-2 ^ ^ false_start
that RB that arg1 OK
do WDT do arg1 OK
need VBP need arg1 OK
it VB it arg1 OK

or CC or ^ OK
um UH ^ ^ filler
people NNS people arg0 OK
eh UH ^ ^ filler
getting VBG getting arg0 OK
out IN out arg0 OK
of IN of arg0 OK
prison NN prison arg0 OK
who WP who ^ OK
are VBP are ^ OK
uh UH ^ ^ filler
trying VBG trying predicate OK
to TO to arg1 OK
start VB start arg1 OK
their PRP their arg1 OK
life NN life arg1 OK
over RB over arg1 OK

um UH ^ ^ filler
the- EX ^ ^ repeat
there EX there ^ OK
are VBP are predicate OK
reasons NNS reasons arg1 OK
for IN for arg1 OK
it PRP it arg1 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
n- RB ^ ^ repeat
not RB not argM_neg OK
sure JJ sure arg2 OK
what WP what arg2 OK
the DT the arg1 OK
best JJS best arg1 OK
way NN way arg1 OK
to TO to arg1 OK
do VB do arg1 OK
that DT that arg1 OK
is ADVP-MNR- 1 is arg2 OK
though VBZ though ^ OK

the- PRP ^ ^ repeat
they PRP they arg0 OK
need VBP need predicate OK
to TO to arg1 OK
have VB have arg1 OK
some DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
a DT a arg0 OK
system NN system arg0 OK
to TO to arg1 OK
check VB check arg1 OK
up RP up arg_particl OK
on IN on arg1 OK
people NNS people arg1 OK

maybe RB maybe ^ OK
th- DT ^ ^ repeat
the DT the arg0 OK
rules NNS rules arg0 OK
need VBP need predicate OK
to TO to arg1 OK
be VB be arg1 OK
more RBR more arg1 OK
strict JJ strict arg1 OK
like IN like ^ OK
the DT the ^ OK
children NNS children ^ OK
thing NN thing ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

the DT ^ ^ repeat
uh UH ^ ^ filler
the DT the arg0 OK
recording NN recording arg0 OK
before RB before ^ OK
said VBD said predicate OK
something NN something arg1 OK
about IN about arg1 OK
the DT the arg1 OK
way NN way arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
done VBN done arg1 OK
in IN in arg1 OK
europe NNP europe arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
works VBZ works predicate OK
over IN over arg1 OK
there RB there arg1 OK

at IN ^ ^ false_start
all PDT ^ ^ repeat
all PDT all arg0 OK
the DT ^ ^ repeat
the DT the arg0 OK
european JJ european arg0 OK
countries NNS countries arg0 OK
they PRP ^ ^ false_start
pay VBP pay predicate OK
extremely RB extremely arg1 OK
high JJ high arg1 OK
taxes NNS taxes arg1 OK
like IN about ^ false_start
seventy-five CD seventy-five ^ OK
percent NN percent ^ OK
tax NN ^ ^ false_start
rates NNS ^ ^ false_start

you PRP ^ ^ repeat
you PRP ^ ^ repeat
h- VBP ^ ^ false_start
you PRP ^ ^ repeat
h- VBP ^ ^ false_start
you PRP you arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
really RB really ^ false_start
even RB ^ ^ false_start
get VB get predicate OK
any DT any arg1 OK
of IN of arg1 OK
your PRP your arg1 OK
money NN money arg1 OK

so UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i- PRP ^ ^ repeat
it PRP it ^ OK
works VBZ works predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
both DT both arg4 OK
ways NNS ways arg4 OK

i- IN ^ ^ false_start
in IN in ^ OK
one CD one ^ OK
sense NN sense ^ OK
you PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
y- PRP ^ ^ false_start
you PRP you arg0 OK
're VBP 're ^ OK
putting VBG putting predicate OK
all PDT all arg1 OK
that DT that arg1 OK
money NN money arg1 OK
up RP up arg1 OK
up IN up arg2 OK
front NN front arg2 OK

but CC but ^ OK
it PRP it ^ OK
provides VBZ provides predicate OK
for IN for arg2 OK
you PRP you arg2 OK

and CC ^ ^ false_start
it PRP it ^ OK
provides VBZ provides predicate OK
for IN for arg2 OK
everybody NN everybody arg2 OK
else RB else arg2 OK

um UH ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm predicate OK
sure JJ sure arg1 OK
it PRP it arg1 OK
works VBZ works arg1 OK
better RBR better arg4 OK
for IN for arg4 OK
some DT some arg4 OK
people NNS people arg4 OK
than IN than arg4 OK
others NNS others arg4 OK
too RB too ^ OK

i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
hear VB hear predicate OK
about IN about arg1 OK
that DT that arg1 OK

that DT ^ ^ false_start
's BES ^ ^ false_start
the DT ^ ^ false_start
that WDT ^ ^ false_start
's BES ^ ^ false_start
everything NN everything arg1 OK
in IN in arg1 OK
the DT the arg1 OK
gov- NN ^ ^ repeat
government NN government arg1 OK
's BES 's predicate OK
like IN like arg2 OK
that DT that arg2 OK
though RB though arg2 OK

there EX there ^ OK
's BES 's predicate OK
always RB always arg1 OK
a DT a arg1 OK
waste NN waste arg1 OK
of IN of arg1 OK
money NN money arg1 OK
um UH ^ ^ filler
every- RB ^ ^ repeat
everywhere RB everywhere arg1 OK

y- UNK ^ ^ repeat
y- UNK y- ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
e- RB ^ ^ repeat
even RB even ^ OK
if IN if ^ OK
i PRP i arg0 OK
wanted VBD wanted predicate OK
to TO to arg1 OK
panic VB panic arg1 OK
m- XX ^ ^ false_start
how WRB how arg2 OK
would MD would ^ OK
i PRP i arg0 OK
react VB react predicate OK

would MD would ^ OK
i PRP i arg0 OK
leave VB leave predicate OK
town NN town arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there ^ OK
's BES 's predicate OK
so RB so arg1 OK
many JJ many arg1 OK
different JJ different arg1 OK
types NNS types arg1 OK
of IN of arg1 OK
attacks NNS attacks arg1 OK
that IN that ^ OK
a- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
y- PRP ^ ^ repeat
you PRP you arg0 OK
can MD can arg1 OK
really RB really arg1 OK
adequately RB adequately arg1 OK
prepare VB prepare arg1 OK
yourself PRP yourself arg1 OK
uh UH ^ ^ filler
other RB other ^ OK
than IN than ^ OK
common JJ common ^ OK
sense NN sense ^ OK
stuff NN stuff ^ OK

yeah UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
w- PRP ^ ^ repeat
we PRP we arg0 OK
probably RB probably arg1 OK
have VBP have arg1 OK
a DT ^ ^ repeat
an DT an arg1 OK
exaggerated JJ exaggerated arg1 OK
sense NN sense arg1 OK
of IN of arg1 OK
uh UH ^ ^ filler
risk NN risk arg1 OK
when WRB when ^ OK
it PRP it ^ OK
comes VBZ comes predicate OK
to IN to arg2 OK
terrorist JJ terrorist arg2 OK
attacks NNS attacks arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
we PRP we arg1 OK
mm UH ^ ^ filler
're VBP 're arg1 OK
probably RB probably arg2 OK
more RBR more arg2 OK
likely JJ likely arg2 OK
to TO to arg2 OK
die VB die arg2 OK
of IN of arg2 OK
snake NN snake arg2 OK
bite NN bite arg2 OK
or CC or ^ OK
something NN something ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg1 OK
're VBP 're predicate OK
scared JJ scared arg2 OK
of IN of arg2 OK
snakes NNS snakes arg2 OK
too RB too arg2 OK

ah UH ^ ^ filler
right UH right ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
almost RB ^ ^ false_start
had VBD ^ ^ false_start
a DT ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
a- XX ^ ^ false_start
i PRP i arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
hesitate VBP hesitate predicate OK
to TO to arg1 OK
think VB think arg1 OK
it PRP it ^ OK
's BES 's predicate OK
a DT a arg1 OK
i PRP i arg0 OK
want VBP want arg1 OK
to TO to arg1 OK
finish VB finish arg1 OK
what WP what arg1 OK
my PRP my arg0 OK
fa- NN ^ ^ repeat
father NN father arg0 OK
did VBD did arg1 OK
sort NP-2 sort arg1 OK
of NN of arg1 OK
thing IN thing arg1 OK

but CC but ^ OK
at IN at ^ OK
the DT the ^ OK
same JJ same ^ OK
time NN time ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
r- VB ^ ^ repeat
remember VB remember predicate OK
we PRP we arg0 OK
created VBD created arg1 OK
osama NNP osama arg1 OK

when WRB ^ ^ repeat
when WRB when ^ OK
saddam NNP saddam arg0 OK
invaded VBD invaded predicate OK
iran NNP iran arg1 OK
it ADVP-TMP- 1 it ^ OK
was PRP was predicate OK
because VBD because arg1 OK
a IN a arg1 OK
religious DT religious arg1 OK
leader JJ leader arg1 OK
er VBN ^ ^ filler
the NNP the arg0 false_start
ayatollah UH ayatollah arg0 false_start
khomenei DT khomenei arg0 false_start
had NN had arg1 OK
overtaken NP-2 overtaken arg1 OK
iran VBD iran arg1 OK
and NN and ^ OK
was NNP was ^ OK
reversing CC reversing predicate OK
the VBD the arg1 OK
westernization VBG westernizatio n  arg1 OK
of DT of arg1 OK
their NN their arg1 OK
culture IN culture arg1 OK
and PRP and ^ OK
was NN was predicate OK
less CC less arg1 OK
friendly VBD friendly arg1 OK
to RBR to arg1 OK
us JJ us arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
uh UH ^ ^ filler
at IN at ^ OK
the DT the ^ OK
same JJ same ^ OK
time NN time ^ OK
w- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
und- XX ^ ^ false_start
behind IN behind ^ OK
the DT the ^ OK
scenes NNS scenes ^ OK
we PRP ^ ^ repeat
we PRP we arg0 OK
were VBD were ^ OK
giving VBG giving predicate OK
weapons NNS weapons arg1 OK
to SBAR-1 to arg2 OK
iran IN iran arg0 OK
to NNP to ^ OK
fight TO fight predicate OK
iraq VB iraq arg1 OK
with NNP with ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
wait VB wait predicate OK
a DT a argM_tmp OK
minute NN minute argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ repeat
we PRP we arg1 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
playing VBG playing predicate OK
both DT both arg1 OK
sides NNS sides arg1 OK
of IN of arg1 OK
it PRP it arg1 OK
and CC ^ ^ repeat
and CC and ^ OK
trying VBG trying predicate OK
to TO to arg1 OK
be VB be arg1 OK
the DT the arg2 OK
moral JJ moral arg2 OK
crusaders NNS crusaders arg2 OK
at IN at ^ OK
the DT the ^ OK
same JJ same ^ OK
time NN time ^ OK

and CC ^ arg1 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
know VB ^ ^ false_start
sees VBZ if ^ false_start
the DT the arg0 OK
rest NN rest arg0 OK
of IN of arg0 OK
the DT the arg0 OK
world NN world arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
sees VBZ sees arg1 OK
our PRP ^ ^ repeat
our PRP our arg1 OK
duplicity NN duplicity arg1 OK

but CC ^ ^ repeat
but CC but ^ OK
most JJS most ^ OK
americans NNPS americans ^ OK
do VBP do ^ OK
n't RB n't ^ OK

i PRP i arg1 OK
was VBD was ^ OK
astonished VBN astonished predicate OK
at IN at ^ OK
the DT the arg1 OK
poll NN poll arg1 OK
that WDT that ^ OK
came VBD came predicate OK
out RP out arg_particl OK
that WDT that ^ OK
said VBD said predicate OK
that IN that arg1 OK
people NNS people arg0 OK
that WDT that ^ OK
watched VBD watched predicate OK
fox NNP fox arg1 OK
news NNP news arg1 OK
believed VBD believed predicate OK
that IN that arg1 OK
the DT the arg1 OK
terrorists NNS terrorists arg1 OK
i- XX ^ ^ false_start
w- XX ^ ^ false_start
from IN from arg1 OK
n- XX ^ ^ repeat
nine CD nine arg1 OK
eleven CD eleven arg1 OK
came VBD came arg1 OK
from IN from arg3 OK
iraq NNP iraq arg3 OK

that IN ^ ^ false_start
saddam NNP saddam arg0 OK
was VBD was ^ OK
supporting VBG supporting predicate OK
them PRP them arg1 OK

that IN ^ ^ false_start
al NNP al arg0 OK
qaeda NNP qaeda arg0 OK
's BES 's ^ OK
based VBN based predicate OK
there RB there argM_loc OK

that IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's predicate OK
like UH ^ ^ filler
all PDT all arg1 OK
this DT this arg1 OK
stuff NN stuff arg1 OK
that WDT that arg1 OK
's BES 's arg1 OK
patently RB patently arg1 OK
false JJ false arg1 OK

i VBZ i arg0 false_start
think NP-PRD think predicate false_start
they PRP they arg0 OK
're VBP 're arg1 OK
just RB just arg1 OK
all DT all arg1 OK
trying VBG trying arg1 OK
to TO to arg1 OK
make VB make arg1 OK
more JJR more arg1 OK
out SBAR-2 out arg1 OK
of IN of arg1 OK
it IN it arg1 OK
than PRP than arg1 OK
it IN it arg1 OK
is PRP is arg1 OK

and CC ^ ^ false_start
tha- XX ^ ^ false_start
e- XX ^ ^ false_start
a- CC ^ ^ false_start
an- CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's SBAR-1 's arg1 OK
a BES a arg1 OK
little DT little arg1 OK
weird RB weird arg1 OK
that JJ that ^ OK
we IN we arg0 OK
're PRP 're ^ OK
going VBP going ^ OK
to VBG to ^ OK
cough TO cough predicate OK
up VB up arg1 OK
millions RP millions arg1 OK
of NNS of arg1 OK
dollars IN dollars arg1 OK
you NNS ^ ^ filler
know PRP ^ ^ filler
each VBP each arg1 OK
for RB for ^ OK
p- IN ^ ^ repeat
people NNS people arg1 OK
that NNS that ^ OK
died WDT died predicate OK
there VBD there ^ OK

but CC but ^ OK
i- IN ^ ^ repeat
i- IN ^ ^ repeat
in IN in ^ OK
all DT all ^ OK
of IN of ^ OK
these DT these ^ OK
other JJ other ^ OK
events NNS events ^ OK
where WRB where ^ OK
we PRP we arg1 OK
've VBP 've ^ OK
been VBN been ^ OK
attacked VBN attacked predicate OK
by IN ^ ^ repeat
by IN by ^ OK
suicide NN suicide ^ OK
bombers NNS bombers ^ OK
you ADVP-1 ^ ^ filler
know PRP ^ ^ filler
the VBP the ^ OK
marines DT marines ^ OK
you NNS ^ ^ filler
know PRP ^ ^ filler
over VBP over ^ OK
in IN in ^ OK
the IN the ^ OK
middle DT middle ^ OK
east NNP east ^ OK
and NNP ^ ^ false_start
stuff CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK

d- XX ^ ^ false_start
right UH right ^ OK

if IN if ^ OK
you PRP you arg1 OK
die VBP die predicate OK
in IN ^ ^ false_start
the DT ^ ^ false_start
e- XX ^ ^ false_start
e- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
as IN as ^ OK
a DT a ^ OK
result NN result ^ OK
of IN of ^ OK
a DT ^ ^ repeat
a DT a ^ OK
street NN street ^ OK
crime NN crime ^ OK
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK
you PRP you arg0 OK
get VBP get predicate OK
nothing NN nothing arg1 OK

ah UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
you PRP you arg0 OK
work VBP work predicate OK
hard RB hard arg4 OK
all PDT all ^ OK
your PRP your ^ OK
life NN life ^ OK
but CC but ^ OK
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have predicate OK
health NN health arg1 OK
insurance NN insurance arg1 OK
if IN ^ ^ false_start
tough JJ then ^ false_start
tough JJ tough ^ OK
luck NN luck ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
i PRP ^ ^ repeat
d- VBP ^ ^ repeat
i PRP ^ ^ false_start
did VBD ^ ^ false_start
see VB ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
feel VB feel predicate OK
any DT any arg1 OK
safer JJR safer arg1 OK
at IN at arg1 OK
the DT the arg1 OK
airports NNS airports arg1 OK

i PRP i arg0 OK
was VBD was ^ OK
wearing VBG wearing predicate OK
wearing VBG _NOUN_ arg1 false_start

i- PRP ^ ^ repeat
i PRP i arg0 OK
was VBD was ^ OK
wearing VBG wearing predicate OK
a DT a arg1 OK
really RB really arg1 OK
soft JJ soft arg1 OK
p- XX ^ ^ repeat
pair NN pair arg1 OK
of IN of arg1 OK
shoes NNS shoes arg1 OK
with IN with arg1 OK
no DT no arg1 OK
socks NNS socks arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
g- XX ^ ^ false_start
they PRP they arg1 OK
were VBD were predicate OK
almost RB almost arg2 OK
almost RB ^ ^ repeat
like IN ^ ^ filler
moccasins NNS moccasins arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have ^ OK
to TO ^ ^ repeat
to TO to ^ OK
get VB ^ ^ repeat
guarantee VB guarantee predicate OK
the DT the arg2 OK
clubs NNS clubs arg2 OK
a DT a arg1 OK
certain JJ certain arg1 OK
amount NN amount arg1 OK
of IN of arg1 OK
people NNS people arg0 OK
to TO to arg1 OK
come VB come arg1 OK
to IN to arg1 OK
the DT the arg1 OK
shows NNS shows arg1 OK
or CC or ^ OK
else RB else ^ OK
i PRP i arg2 OK
do VBP do ^ OK
n't RB n't argM_neg OK
get VB get predicate OK
paid VBN paid arg1 OK

there EX there ^ OK
's BES 's ^ OK
s- NN ^ predicate repeat
something NN something arg1 OK
in IN in argM_loc OK
l. NNP l. argM_loc OK
a. NNP a. argM_loc OK
ca- VBN ^ ^ repeat
called VBN called arg2 OK
pay VB pay arg2 OK
to TO to arg3 OK
play VB play arg3 OK

and CC ^ ^ false_start
you PRP you arg0 OK
actually RB actually ^ OK
have VBP have ^ OK
to TO to ^ OK
pre-sell VB pre-sell predicate OK
a DT a arg1 OK
certain JJ certain arg1 OK
amount NN amount arg1 OK
of IN of arg1 OK
tickets NNS tickets arg1 OK
to TO to arg1 OK
play VB play arg1 OK
at IN at argM_loc OK
these DT these argM_loc OK
shows NNS shows argM_loc OK

not RB not ^ OK
as RB as ^ OK
much RB much ^ OK
as IN as ^ OK
the DT the ^ OK
club NN club ^ OK
gets VBZ gets ^ OK

and CC ^ arg1 false_start
then RB ^ ^ false_start
of IN of ^ OK
course NN course ^ repeat
y- XX ^ ^ repeat
y- XX ^ ^ repeat
as IN ^ ^ repeat
as IN as ^ OK
a DT ^ ^ repeat
an DT an ^ OK
independent JJ independent ^ OK
artist NN artist ^ OK
i PRP i arg0 OK
'm VBP 'm ^ OK
making VBG making predicate OK
my PRP my arg1 OK
profit NN profit arg1 OK
off IN off arg2 OK
of IN of arg2 OK
the DT the arg1 OK
c. NN c. arg1 OK
d. NN ^ arg1 false_start
sales NNS d.s ^ repeat
or NP-1 or arg1 false_start
the CC the arg1 false_start
t. DT t. arg1 false_start
shirts NN shirts arg1 false_start
or NNS or arg1 false_start
the CC the arg1 false_start
stickers DT stickers arg1 false_start
or NNS or arg1 false_start
the CC the arg1 false_start
buttons DT ^ arg2 false_start
or NNS ^ ^ false_start
whatever CC buttons ^ false_start
that WDT that ^ OK
i PRP i arg0 OK
sell VB sell arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
so UH ^ ^ false_start
it PRP it arg1 OK
is S-1 is predicate OK
i- VBZ ^ ^ repeat
in IN in arg2 OK
my IN my arg2 OK
best PRP best arg2 OK
interest JJS interest arg2 OK
to NN to arg2 OK
get TO get arg2 OK
as VB as arg1 OK
many RB many arg1 OK
people JJ people arg1 OK
to NNS to arg1 OK
the PP-2 the arg1 OK
shows IN shows arg1 OK
as DT as arg1 OK
possible NNS possible arg1 OK

but CC ^ ^ repeat
but CC but ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
on IN on argM_loc OK
the DT the argM_loc OK
skin NN skin argM_loc OK
of IN of argM_loc OK
my PRP my argM_loc OK
teeth NNS teeth argM_loc OK
every DT ^ ^ repeat
every DT every argM_tmp OK
show NN show argM_tmp OK

and CC ^ ^ false_start
uh UH ^ ^ filler
that DT ^ ^ false_start
's BES ^ ^ false_start
something NN ^ ^ false_start
that WDT ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
would MD ^ ^ false_start
well UH ^ ^ filler
ah UH ^ ^ filler
eh UH ^ ^ filler
the DT the arg1 OK
first JJ first arg1 OK
thing NN thing arg1 OK
i PRP i arg1 OK
would MD would arg1 OK
do VB do arg1 OK
do VB if ^ false_start
money NP-1 money arg1 OK
was NN was arg1 OK
no VBD no arg1 OK
object DT object arg1 OK
do VB ^ arg1 false_start
hire MD is predicate false_start
i NN i arg0 OK
would PRP would arg2 OK
hire MD hire arg2 OK
people VB people arg0 OK
to NNS to arg2 OK
do TO do arg2 OK
a VB a arg1 OK
lot DT lot arg1 OK
of NN of arg1 OK
this IN this arg1 OK
busy DT busy arg1 OK
work JJ work arg1 OK
that NN that arg1 OK
i WDT i arg0 OK
'm PRP 'm arg1 OK
doing VBP doing arg1 OK

and CC ^ ^ false_start
just RB ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ filler
then RB ^ ^ filler
then RB ^ ^ filler
you PRP you arg0 OK
have VBP have predicate OK
your PRP your arg1 OK
place NN place arg1 OK
of IN of arg1 OK
business NN business arg1 OK

i PRP ^ ^ repeat
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK

the DT ^ ^ repeat
the DT the ^ OK
people NNS people ^ OK
who WP ^ ^ repeat
who WP who ^ OK
have VBP have ^ OK
gone VBN gone ^ OK
into IN into ^ OK
business NN business ^ OK
who WP who ^ OK
have VBP have ^ OK
uh UH ^ ^ filler
tons NNS tons ^ OK
of IN of ^ OK
money NN money ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
um UH ^ ^ filler
they PRP they arg0 OK
just RB ^ ^ repeat
just RB just ^ OK
're VBP ^ ^ repeat
like UH say predicate false_start
it PRP it arg1 OK
's BES 's arg1 OK
their PRP their arg2 OK
hobby NN hobby arg2 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
and CC ^ ^ false_start
there EX there ^ OK
's BES 's predicate OK
no DT no arg1 OK
structure NN structure arg1 OK

you PRP you ^ OK
know VBP know ^ OK
and CC and ^ OK
uh UH ^ ^ filler

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
i- IN ^ ^ repeat
if IN if ^ OK
you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
mind VB mind ^ OK
an DT an ^ OK
erratic JJ erratic ^ OK
schedule NN schedule ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
an DT an ^ OK
employee NN employee ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
ah UH ^ ^ filler
then RB then ^ OK
it PRP ^ ^ repeat
it PRP it arg0 OK
would MD would ^ OK
dema- VBZ ^ ^ repeat
matter VB depend predicate false_start
on IN on arg1 OK
like UH ^ ^ filler
the DT the arg1 OK
relationship NN relationship arg1 OK
that WDT that arg1 OK
you PRP you arg0 OK
would MD would arg1 OK
have VB have arg1 OK
with IN with arg1 OK
the DT the arg1 OK
employees NNS employees arg1 OK

they PRP they arg0 OK
'd MD 'd ^ OK
have VB have ^ OK
to TO to ^ OK
know VB know predicate OK
that IN that arg1 OK
hey UH ^ ^ false_start
this DT this arg1 OK
is VBZ is arg1 OK
just RB just arg2 OK
like UH ^ ^ filler
for IN for arg2 OK
fun NN fun arg2 OK

and CC ^ ^ false_start
we PRP ^ ^ repeat
we PRP we arg1 OK
may MD may ^ OK
not RB not ^ OK
come VB come predicate OK
in RB in arg4 OK
tomorrow NN tomorrow argM_tmp OK
depending VBG depending predicate OK
on IN on arg1 OK
how WRB how arg1 OK
drunk JJ drunk arg2 OK
we PRP we arg1 OK
get VBP get arg1 OK
tonight NN tonight argM_tmp OK

but CC ^ ^ repeat
i- XX ^ ^ repeat
but CC but ^ OK
then RB then ^ OK
again RB again ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg1 OK
would MD would ^ OK
n't RB n't ^ OK
necessarily RB necessarily ^ false_start
be VB be predicate OK
a DT a arg2 OK
success NN success arg2 OK
in IN in arg2 OK
the DT the arg2 OK
standards NNS standards arg2 OK
of IN of arg2 OK
like UH ^ ^ filler
business NN business arg2 OK

is VBZ ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ false_start
would MD ^ ^ false_start
you PRP ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
definition NN definition arg1 OK
of IN of arg1 OK
business NN business arg1 OK
it PRP ^ ^ false_start
would MD would arg1 OK
be VB be arg1 OK
that IN that arg2 OK
you PRP you arg0 OK
'd MD 'd arg2 OK
have VB have arg2 OK
to TO to arg2 OK
probably RB probably arg2 OK
turn VB turn arg2 OK
a DT a arg1 OK
profit NN profit arg1 OK
on IN on arg1 OK
your PRP your arg1 OK
product NN product arg1 OK

i PRP ^ arg2 filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
eh UH ^ ^ filler
i PRP i arg1 OK
have VBP have ^ OK
never RB never ^ false_start
been VBN been predicate OK
eh UH ^ ^ filler
one NN one arg2 OK
to TO to arg2 OK
like UH ^ ^ filler
mm UH to ^ false_start
mm UH ^ ^ filler
go VB go arg2 OK
into IN into arg4 OK
this DT this arg4 OK
myself PRP myself arg4 OK

and CC ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
really RB really ^ OK
taught VBN taught predicate OK
myself PRP myself arg2 OK
through IN through argM_tmp OK
the DT the argM_tmp OK
ten CD ten argM_tmp OK
years NNS years argM_tmp OK
that WDT that argM_tmp OK
i PRP i arg0 OK
've VBP 've argM_tmp OK
been VBN been argM_tmp OK
doing VBG doing argM_tmp OK
it PRP it arg1 OK
how ADVP-TMP- 1 how ^ OK
to WRB to ^ OK
you TO ^ ^ filler
know PRP ^ ^ filler
just VBP just ^ OK
to RB to ^ OK
protect TO protect predicate OK
myself VB myself arg1 OK
you PRP ^ ^ filler
know PRP ^ ^ filler
uh VBP ^ ^ filler
from UH from arg2 OK
crooked IN crooked arg2 OK
mm JJ ^ ^ filler
club UH club arg2 OK
owners NN owners arg2 OK
and NNS ^ ^ repeat
and CC ^ ^ repeat
and CC and ^ OK
and CC ^ arg2 repeat
you CC ^ ^ filler
know PRP ^ ^ filler
people VBP people arg0 OK
who NNS ^ ^ repeat
who WP who arg2 OK
want WP want arg2 OK
to VBP to arg1 OK
sign TO sign arg1 OK
you VB you arg1 OK
to PRP to arg1 OK
their IN their arg1 OK
label PRP label arg1 OK
and NN and arg1 OK
take CC take arg1 OK
all VB all arg1 OK
of DT of arg1 OK
your IN your arg1 OK
publishing PRP publishing arg1 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
y- XX ^ ^ false_start
i PRP ^ ^ false_start
w- XX ^ ^ false_start
basically RB basically ^ OK
if IN if ^ OK
we PRP we arg0 OK
watched VBD watched predicate OK
enough RB enough arg1 OK
uh UH ^ ^ filler
behind IN behind arg1 OK
the DT the arg1 OK
music NN music arg1 OK
specials NNS specials arg1 OK
to TO to arg1 OK
realize VB realize arg1 OK
how WRB how arg0 OK
artists NNS artists arg1 OK
get VBP get arg1 OK
screwed VBN screwed arg1 OK
over RP over arg1 OK
and ADVP-MNR- 2 ^ ^ false_start
then CC then arg1 OK
it RB ^ ^ false_start
's PRP ^ ^ false_start
like BES ^ ^ false_start
so RP ^ ^ false_start
now UH ^ ^ false_start
you RB you arg1 OK
're PRP 're arg1 OK
like VBP ^ ^ filler
okay UH okay arg2 OK

y- PRP ^ ^ repeat
you PRP you arg1 OK
have VBP have ^ OK
to TO to ^ OK
learn VB learn predicate OK
to TO to arg1 OK
be VB be arg1 OK
s- XX ^ ^ repeat
a DT a arg2 OK
businessman NN businessman arg2 OK
in IN in arg2 OK
some DT some arg2 OK
respects NNS respects arg2 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg0 OK
's BES ^ ^ repeat
's BES 's ^ OK
taking VBG taking predicate OK
away RB away arg1 OK
from IN from arg1 OK
eh UH ^ ^ filler
the DT ^ ^ repeat
the DT the arg1 OK
creative JJ creative arg1 OK
side NN side arg1 OK
for IN for arg1 OK
me PRP ^ ^ repeat
me PRP me arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
the DT the arg1 OK
time NN time arg1 OK
to TO ^ ^ repeat
to TO to arg1 OK
sit VB sit arg1 OK
down RP down argM_loc OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and arg1 OK
write VB write arg1 OK
as RB as arg1 OK
much RB much arg1 OK
as IN as arg1 OK
i PRP i arg1 OK
used VBD used arg1 OK
to TO to arg1 OK

and CC ^ ^ false_start
before RB before ^ OK
i- PRP ^ ^ repeat
i PRP i ^ OK
was VBD was ^ OK
very RB very ^ OK
idealistic JJ idealistic ^ OK

i PRP i arg0 OK
just RB just ^ OK
was VBD ^ ^ false_start
like RP said predicate false_start
yeah UH yeah arg1 OK

and CC ^ ^ false_start
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
all DT all ^ OK
be VB be predicate OK
good JJ good arg2 OK

i PRP i arg1 OK
also RB also ^ false_start
have VBP have ^ OK
to TO to ^ OK
be VB be predicate OK
the DT the arg2 OK
administrator NN administrator arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
of IN of arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
the DT the arg2 OK
stuff NN stuff arg2 OK
in IN in arg2 OK
order NN order arg2 OK
for IN for arg2 OK
it PRP it arg1 OK
to TO to arg2 OK
happen VB happen arg2 OK
because IN because ^ OK
no DT no arg0 OK
one NN one arg0 OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
do VB do predicate OK
it PRP it arg1 OK
for IN for arg2 OK
you PRP you arg2 OK

so UH ^ ^ false_start
that DT ^ ^ false_start
's HVS ^ ^ false_start
taught VBN ^ ^ false_start
me PRP ^ ^ false_start
how WRB ^ ^ false_start
and CC ^ ^ false_start
i PRP i arg1 OK
to TO ^ ^ repeat
be VB ^ ^ repeat
'm VBP 'm predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
much RB much arg2 OK
better JJR better arg2 OK
business NN ^ ^ repeat
business NN business arg2 OK
per- NN ^ ^ repeat
person NN person arg2 OK
a- IN ^ ^ repeat
as IN as arg2 OK
a DT a arg2 OK
result NN result arg2 OK

like IN like ^ OK
i PRP i ^ OK
said VBD said ^ OK
if IN if ^ OK
if IN ^ ^ repeat
i PRP i ^ OK
ha- VB ^ ^ repeat

well UH ^ ^ filler
m- PRP ^ ^ repeat
mo- RBS ^ ^ repeat
my PRP ^ ^ repeat
my PRP ^ ^ repeat
most RBS ^ ^ repeat
most RBS ^ ^ repeat
m- PRP ^ ^ repeat
my PRP ^ ^ repeat
eh UH ^ ^ filler
see UH ^ ^ repeat
i PRP i arg0 OK
is VBZ ^ ^ repeat
is VBZ ^ ^ repeat
'm VBP 'm ^ OK
not RB ^ ^ repeat
not RB not argM_neg OK
even RB even ^ OK
really RB really ^ OK
interest NN ^ ^ repeat
concerned JJ concerned predicate OK
to TO ^ ^ repeat
about IN about arg0 OK
making VBG making arg0 OK
tons NNS tons arg1 OK
of IN of arg1 OK
money NN money arg1 OK

you PRP ^ arg1 filler
know VBP ^ ^ filler
i PRP i arg0 OK
want VBP want predicate OK
ma- VB to ^ false_start
ma- VB ^ ^ repeat
make VB make arg1 OK
enough JJ enough arg1 OK
money NN money arg1 OK
so IN so arg1 OK
i PRP i arg0 OK
can MD can arg1 OK
do VB do arg1 OK
it PRP it arg1 OK
again RB again arg1 OK
next JJ next argM_tmp OK
year NN year argM_tmp OK

there EX there ^ OK
's BES are predicate false_start
eh UH ^ ^ filler
advertising NN advertising arg1 OK
costs NNS costs arg1 OK

but CC ^ ^ false_start
other JJ other ^ OK
countries NNS countries ^ OK
require VBP require ^ OK
their PRP their ^ OK
people NNS people ^ OK
their PRP ^ ^ false_start
students NNS students ^ OK
people NNS ^ ^ false_start
students NNS ^ ^ false_start
children NNS and ^ false_start
their PRP ^ ^ false_start
children NNS children ^ OK
to TO to ^ OK
learn VB learn ^ OK
english NNP english ^ OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
uh UH ^ ^ filler
we PRP we ^ OK
as IN as ^ OK
americans NNPS americans ^ OK
or CC or ^ OK
english NNP english ^ OK
speaking VBG speaking ^ OK
people NNS people ^ OK
i PRP ^ ^ false_start
have VBP have ^ OK
n't RB n't ^ OK
had VBN had ^ OK
any DT any ^ OK
problems NNS problems ^ OK
in IN in ^ OK
my PRP ^ ^ false_start
travels NNS travels ^ OK

although RB although ^ OK
when WRB when ^ OK
i PRP i ^ OK
do VBP do ^ OK
travel VB travel ^ OK
to IN to ^ OK
foreign JJ foreign ^ OK
countries NNS countries ^ OK
i ADVP-TMP- 1 i ^ OK
will PRP will ^ OK
uh MD ^ ^ filler
bone UH bone ^ OK
up VB up ^ OK
on RP on ^ OK
their IN their ^ OK
language PRP language ^ OK
you NN ^ ^ filler
know PRP ^ ^ filler
enough VBP enough ^ OK
to RB to ^ OK
get TO get ^ OK
by VB by ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
i PRP i ^ OK
would MD would ^ OK
think VB think ^ OK
that IN that ^ OK
probably RB probably ^ OK
in IN in ^ OK
spanish NNP spanish ^ OK
and CC and ^ OK
also RB also ^ OK
at IN at ^ OK
this DT this ^ OK
time NN time ^ OK
it PRP it ^ OK
's BES 's ^ OK
probably RB probably ^ OK
would MD ^ ^ false_start
be VB ^ ^ false_start
wise JJ wise ^ OK

for IN ^ ^ false_start
like UH ^ ^ filler
i PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
coming VBG ^ ^ false_start
up RB ^ ^ false_start
in IN ^ ^ false_start
th- DT ^ ^ false_start
when WRB ^ ^ false_start
i- VBZ ^ ^ false_start
educated VBN educated ^ OK
in IN in ^ OK
the DT the ^ OK
fifties NNS fifties ^ OK
they ADVP-TMP- 1 they ^ OK
always RB always ^ OK
make RB made ^ false_start
reference VB reference ^ OK
to NN to ^ OK
arabic IN arabic ^ OK
did PRP ^ ^ false_start
i- VBD ^ ^ false_start
h- IN ^ ^ false_start
here RB ^ ^ false_start
in RB ^ ^ false_start
also NN in ^ false_start
elementary IN elementary ^ false_start
school JJ school ^ false_start

i PRP i ^ OK
think VBP think ^ OK
we PRP we ^ OK
need VBP need ^ OK
to TO to ^ OK
return VB return ^ OK
to IN to ^ OK
them DT those ^ false_start
days NNS days ^ OK
because IN because ^ OK
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
influence NN influence ^ OK
is VBZ is ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
uh UH ^ ^ filler
returning VBG returning ^ OK
now RB ^ ^ false_start
basically RB ^ ^ false_start
because IN because ^ OK
of IN of ^ OK
the DT the ^ OK
economics NNS economics ^ OK
right RB ^ ^ false_start
now RB ^ ^ false_start
particularly RB ^ ^ false_start
with IN with ^ OK
this DT this ^ OK
oil NN oil ^ OK
problem NN problem ^ OK
world NN world ^ OK
wide JJ wide ^ OK

but CC ^ ^ false_start
in IN in ^ OK
college NN college ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
think VB ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
say VB say ^ OK
that IN that ^ OK
they PRP they ^ OK
do VBP do ^ OK
probably RB probably ^ OK
need VB need ^ OK
to TO ^ ^ false_start
i PRP ^ ^ false_start
go VB ^ ^ false_start
along RB ^ ^ false_start
with IN ^ ^ false_start
you PRP ^ ^ false_start
would MD ^ ^ false_start
to TO to ^ OK
encourage VB encourage ^ OK
it PRP it ^ OK

but CC ^ ^ false_start
um UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
you PRP you ^ OK
were VBD were ^ OK
right RB right ^ OK
in IN ^ ^ repeat
in IN in ^ OK
re- NN ^ ^ repeat
a DT ^ ^ false_start
regard NN regards ^ false_start
to IN to ^ OK
english NNP english ^ OK
is VBZ is ^ OK
the DT the ^ OK
big JJ big ^ OK
language NN language ^ OK
to TO to ^ OK
know VB know ^ OK

well UH ^ ^ filler
they PRP they ^ OK
do VBP do ^ OK
intersect VB intersect ^ OK
with IN with ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
spanish NNP ^ ^ false_start
speaking VBG ^ ^ false_start
for IN ^ ^ false_start
ah UH ^ ^ filler
we PRP ^ ^ false_start
're VBP ^ ^ false_start
using VBG ^ ^ false_start
examples NNS ^ ^ false_start
spanish NNP spanish ^ OK
speaking VBG speaking ^ OK
people NNS people ^ OK

like UH ^ ^ filler
like IN ^ ^ filler
actually RB actually ^ OK
in IN in ^ OK
uh UH ^ ^ filler
one CD one ^ OK
uh UH ^ ^ filler
the DT the ^ OK
things NNS things ^ OK
i PRP i ^ OK
was VBD was ^ OK
doing VBG doing ^ OK
today NN ^ ^ repeat
today RB today ^ OK

it PRP it ^ OK
's S-1 's ^ OK
not BES not ^ OK
a RB a ^ OK
requirement DT requirement ^ OK
to NN to ^ OK
know TO know ^ OK
spanish VB spanish ^ OK
because NNP because ^ OK
i IN i ^ OK
'm PRP 'm ^ OK
speaking VBP speaking ^ OK
only VBG only ^ OK
to RB to ^ OK
spanish IN spanish ^ OK
speaking NNP speaking ^ OK
people VBG people ^ OK

you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
enough JJ enough ^ OK
room NN room ^ OK
on IN ^ ^ repeat
uh UH ^ ^ filler
in IN in ^ OK
your PRP ^ ^ repeat
your PRP your ^ OK
graduation NN graduation ^ OK
requirements NNS requirements ^ OK
to TO to ^ OK
to TO _ARG_ ^ false_start

but CC but ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
seeing VBG seeing ^ OK
more RBR more ^ OK
and CC ^ ^ false_start
more RBR ^ ^ false_start
in IN in ^ OK
the DT the ^ OK
job NN job ^ OK
market NN market ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
wanting VBG wanting ^ OK
people NNS people ^ OK
to TO to ^ OK
be VB be ^ OK
bilingual JJ bilingual ^ OK

but- CC ^ ^ false_start
i- IN ^ ^ false_start
in IN in ^ OK
my PRP my ^ OK
travels NNS travels ^ OK
it PRP it ^ OK
is VBZ is ^ OK
an DT an ^ OK
asset NN asset ^ OK

that DT ^ ^ false_start
that DT ^ ^ false_start
well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
noticing VBG noticing ^ OK
that IN that ^ OK
country NN ^ ^ false_start
go VBP in ^ false_start
every DT every ^ OK
country NN country ^ OK
i PRP i ^ OK
go VBP go ^ OK
to IN to ^ OK
english NP-1 english ^ OK
is NNP is ^ OK
known VBZ known ^ OK
by VBN by ^ OK
the IN the ^ OK
school DT school ^ OK
children NN children ^ OK

even RB even ^ OK
in IN in ^ OK
canada NNP canada ^ OK
in IN ^ ^ false_start
french NNP ^ ^ false_start
speak- VBG ^ ^ false_start
in IN ^ ^ repeat
in IN in ^ OK
quebec NNP quebec ^ OK
quebec NNP ^ ^ false_start
montreal NNP and ^ false_start
montreal NNP montreal ^ OK
specifically RB specifically ^ OK
i PRP i ^ OK
know VBP know ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that IN that ^ OK
they PRP they ^ OK
know VBP know ^ OK
how WRB how ^ OK
to TO to ^ OK
speak VB speak ^ OK
english NNP english ^ OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
to TO to ^ OK
get VB get ^ OK
the DT the ^ OK
higher RBR higher ^ OK
paying VBG paying ^ OK
jobs NNS jobs ^ OK
in IN in ^ OK
um UH ^ ^ filler
canada NNP canada ^ OK
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
know VB know ^ OK
english NNP english ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
finding VBG finding ^ OK
throughout IN throughout ^ OK
the DT ^ ^ false_start
coun- NN ^ ^ false_start
the DT ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
the DT the ^ OK
world NN world ^ OK

i PRP i ^ OK
was VBD ^ ^ false_start
like UH said ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
in IN in ^ OK
saudi NNP saudi ^ OK
arabia NNP arabia ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
in IN in ^ OK
tunisia NNP tunisia ^ OK
in IN in ^ OK
africa NNP africa ^ OK

in UNK in ^ OK
france UNK france ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
they UNK they ^ OK
know UNK know ^ OK
engli- UNK english ^ false_start
th- UNK they ^ false_start
might UNK might ^ OK
not UNK not ^ OK
want UNK want ^ OK
to UNK to ^ OK
speak UNK speak ^ OK
it UNK it ^ OK
but UNK but ^ OK
they UNK they ^ OK
know UNK know ^ OK

well UH ^ ^ filler
i PRP ^ ^ false_start
my PRP my ^ OK
kids NNS kids ^ OK
are VBP are ^ OK
all RB all ^ OK
grown JJ grown ^ OK
and CC and ^ OK
gone VBN gone ^ OK

a- RB ^ ^ false_start
although RB although ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
would MD would ^ OK
panic VB panic ^ OK

well UH ^ ^ filler
there EX ^ ^ false_start
's BES ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
difference NN difference ^ OK
is VBZ is ^ OK
having VBG ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
having VBG having ^ OK
yo- JJ ^ ^ repeat
young JJ young ^ OK
kids NNS kids ^ OK
at IN at ^ OK
home NN home ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
one CD one ^ OK
of IN of ^ OK
the DT the ^ OK
really RB really ^ OK
important JJ important ^ OK
things NNS things ^ OK
is VBZ is ^ OK
probably RB probably ^ OK
just RB ^ ^ filler
to TO ^ ^ false_start
not RB not ^ OK
to TO to ^ OK
dwell VB dwell ^ OK
on IN on ^ OK
it PRP it ^ OK
but CC but ^ OK
to TO ^ ^ false_start
to TO ^ ^ false_start
d- VB ^ ^ repeat
decide VB decide ^ OK
i- IN ^ ^ repeat
in IN in ^ OK
your PRP your ^ OK
mind NN mind ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ repeat
what WP what ^ OK
would MD would ^ OK
i PRP i ^ OK
do VB do ^ OK
if IN if ^ OK
such JJ such ^ OK
and CC and ^ OK
such JJ such ^ OK
happened VBD happened ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
i PRP i ^ OK
've VBP 've ^ OK
thought VBN thought ^ OK
about IN about ^ OK
it PRP it ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
watching VBG watching ^ OK
things NNS things ^ OK
on IN on ^ OK
t. NNP t. ^ OK
v. NNP v. ^ OK

are VBP ^ ^ false_start
yo- PRP ^ ^ false_start
do VBP do ^ OK
you PRP you ^ OK
live VB live ^ OK
in IN ^ ^ repeat
like UH ^ ^ filler
in IN in ^ OK
a DT ^ ^ repeat
a DT a ^ OK
city NN city ^ OK

eh UH ^ ^ filler
well UH ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
so RB ^ ^ filler
much JJ much ^ OK
about IN about ^ OK
what WP what ^ OK
's BES 's ^ OK
going VBG going ^ OK
sometimes RB sometimes ^ OK
people NNS people ^ OK
in IN ^ ^ repeat
in IN in ^ OK
a DT ^ ^ repeat
a DT a ^ OK
rural JJ rural ^ OK
setting NN setting ^ OK
think VBP think ^ OK
calmer RBR calmer ^ OK

i PRP i ^ OK
think VBP think ^ OK
en- NN ^ ^ repeat
environment NN environment ^ OK
makes VBZ makes ^ OK
a DT a ^ OK
huge JJ huge ^ OK
difference NN difference ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
there EX there ^ OK
's BES are ^ false_start
so RB so ^ OK
many JJ many ^ OK
definitions NNS definitions ^ OK
of IN of ^ OK
it PRP ^ ^ false_start
depends VBZ ^ ^ false_start
on IN ^ ^ false_start
what WP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
terrorism NN ^ ^ false_start
it PRP terrorism ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ false_start
i PRP i ^ OK
live VBP live ^ OK
in IN ^ ^ repeat
in IN in ^ OK
montana NNP montana ^ OK

i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
population NN population ^ OK
is VBZ is ^ OK
about RB about ^ OK
nine CD nine ^ OK
hundred CD hundred ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there ^ OK
're VBP 're ^ OK
missile NN missile ^ OK
sites NNS sites ^ OK
just RB just ^ OK
miles NNS miles ^ OK
from IN from ^ OK
where WRB where ^ OK
we PRP we ^ OK
live VBP live ^ OK

and CC ^ ^ false_start
we PRP we ^ OK
just RB just ^ OK

well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
um UH ^ ^ filler
not RB not ^ OK
being VBG being ^ OK
scared VBN scared ^ OK
is NP-1 ^ ^ repeat
is VBZ is ^ OK
thinking VBZ thinking ^ OK
about VBG ^ ^ false_start
that NNS ^ ^ repeat
you DT ^ ^ filler
know PRP ^ ^ filler
i VBP ^ ^ filler
mean PRP ^ ^ filler
th- VBP ^ ^ repeat
that VBP that ^ OK
things IN ^ ^ false_start
death IN death ^ OK
things IN ^ ^ false_start
is NN is ^ OK
things IN ^ ^ false_start
n't VBZ n't ^ OK
things IN ^ ^ false_start
really RB really ^ OK
things IN ^ ^ false_start
the RB the ^ OK
things IN ^ ^ false_start
end DT end ^ OK

sounds VBZ ^ ^ repeat
sounds VBZ sounds ^ OK
about RB ^ ^ false_start
like IN ^ ^ repeat
like IN like ^ OK
here RB here ^ OK
though RB though ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
maybe RB maybe ^ OK
um UH ^ ^ filler
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
it PRP it ^ OK
depends VBZ depends ^ OK
on IN on ^ OK
how WRB ^ ^ repeat
how WRB how ^ OK
prepared JJ prepared ^ OK
we PRP we ^ OK
are VBP are ^ OK

if IN if ^ OK
we PRP we ^ OK
had VBD had ^ OK
a DT ^ ^ repeat
a DT a ^ OK
terrorist JJ terrorist ^ OK
attack NN attack ^ OK
here RB here ^ OK
and CC and ^ OK
maybe RB maybe ^ OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the ^ OK
truck NN truck ^ OK
lines NNS lines ^ OK
were VBD were ^ OK
shut VBN shut ^ OK
down RP down ^ OK
and NP-1 and ^ OK
we CC we ^ OK
could PRP could ^ OK
n't MD n't ^ OK
get RB get ^ OK
food VB food ^ OK
to NN to ^ OK
the IN the ^ OK
grocery DT grocery ^ OK
stores NN stores ^ OK
we NNS ^ ^ false_start
um PRP ^ ^ filler
we UH we ^ OK
've PRP 've ^ OK
got VBP got ^ OK
a VBN a ^ OK
basement DT basement ^ OK
f- NN ^ ^ repeat
f- JJ ^ ^ repeat
full JJ full ^ OK
of JJ of ^ OK
food IN food ^ OK

well UNK ^ ^ filler
except UNK except ^ OK
even UNK even ^ OK
if UNK if ^ OK
it UNK it ^ OK
was UNK was ^ OK
to UNK to ^ OK
go UNK go ^ OK
to UNK to ^ OK
the UNK the ^ OK
bigger UNK bigger ^ OK
cities UNK cities ^ OK
yo- UNK ^ ^ false_start
it UNK it ^ OK
would UNK would ^ OK
take UNK take ^ OK
twenty-four UNK twenty-four ^ OK
hours UNK hours ^ OK
for UNK for ^ OK
your UNK ^ ^ false_start
small UNK ^ ^ false_start
little UNK ^ ^ false_start
town UNK ^ ^ false_start
to UNK ^ ^ false_start
be UNK ^ ^ false_start
cleared UNK ^ ^ false_start
the UNK the ^ OK
grocery UNK grocery ^ OK
stores UNK stores ^ OK
to UNK to ^ OK
be UNK be ^ OK
cleared UNK cleared ^ OK
of UNK of ^ OK
food UNK food ^ OK

well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
that DT that ^ OK
's BES 's ^ OK
one CD one ^ OK
of IN of ^ OK
things NNS things ^ OK
that WDT that ^ OK
would MD would ^ OK
keep VB keep ^ OK
us PRP us ^ OK
from IN from ^ OK
being VBG ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
p- VBG ^ ^ repeat
eh UH ^ ^ filler
p- VBG ^ ^ repeat
panicking VBG panicking ^ OK

well UH ^ ^ filler
we PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK
prepared JJ prepared ^ OK
in IN in ^ OK
that DT that ^ OK
way NN way ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
another DT another ^ OK
way NN way ^ OK
to TO to ^ OK
p- XX ^ ^ repeat
prepare VB prepare ^ OK
is ADVP-1 is ^ OK
just VBZ just ^ OK
to RB to ^ OK
be TO be ^ OK
calm VB calm ^ OK
in JJ in ^ OK
your IN your ^ OK
own PRP own ^ OK
mind JJ mind ^ OK
about NN about ^ OK
things IN things ^ OK

but CC ^ ^ false_start
there EX ^ ^ false_start
ha- VBP ^ ^ false_start
i'v- PRP ^ ^ repeat
i VBP i ^ OK
've PRP 've ^ OK
know VBP know ^ OK
people VB people ^ OK
who NNS ^ ^ repeat
who VBP who ^ OK
've WP ^ ^ repeat
've WP 've ^ OK
used VBP used ^ OK
their VBN their ^ OK
food PRP food ^ OK
storage NN storage ^ OK
because NN because ^ OK
they IN they ^ OK
've PRP 've ^ OK
had VBP ^ ^ false_start
you VBN ^ ^ filler
know PRP ^ ^ filler
been VBP been ^ OK
out VBN out ^ OK
of IN of ^ OK
work IN work ^ OK
or NN or ^ OK
because CC because ^ OK
the IN the ^ OK
b- DT ^ ^ repeat
bread NN bread ^ OK
winners NN winners ^ OK
had NNS had ^ OK
an VBD an ^ OK
accident DT accident ^ OK
or NN or ^ OK
had CC had ^ OK
to VBD to ^ OK
be TO be ^ OK
in VB in ^ OK
the IN the ^ OK
hospital DT hospital ^ OK
for NN for ^ OK
a IN a ^ OK
while DT while ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
when WRB when ^ OK
times NNS times ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
hard JJ hard ^ OK
like IN like ^ OK
that DT that ^ OK

well UH ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
've VBP 've ^ OK
got VBN got ^ OK
nothing NN nothing ^ OK
to TO to ^ OK
lose VB lose ^ OK
then NP-1 then ^ OK
so RB so ^ OK
why RB why ^ OK
not WRB not ^ OK
for RB for ^ OK
it IN it ^ OK

and CC ^ ^ false_start
the DT the ^ OK
topic NN topic ^ OK
that WDT ^ ^ repeat
that DT ^ ^ false_start
one NN ^ ^ false_start
was VBD ^ ^ repeat
was NP-PRD-1 was ^ OK
um VBD ^ ^ filler
if UH if ^ OK
you IN you ^ OK
were PRP were ^ OK
at VBD at ^ OK
your IN your ^ OK
fiance PRP fiance ^ OK
's NN 's ^ OK
house POS house ^ OK

we PRP ^ ^ false_start
the DT the ^ OK
same JJ same ^ OK
people NNS people ^ OK

but CC but ^ OK
um UH ^ ^ filler
now UH now ^ OK
that DT that ^ OK
topic NN topic ^ OK
there RB there ^ OK

r- UH ^ ^ repeat
right UH right ^ OK

eh UH eh ^ OK

how WRB how ^ OK
many JJ many ^ OK
times NNS times ^ OK
have VBP have ^ OK
you PRP you ^ OK
done VBN done ^ OK
this DT this ^ OK
so RB so ^ OK
far RB far ^ OK

have NP-ADV-1 have ^ OK
they VBP they ^ OK
called PRP called ^ OK
you VBN you ^ OK

now RB ^ ^ false_start
do VBP ^ ^ false_start
you PRP ^ ^ false_start
have VB ^ ^ false_start
to TO ^ ^ false_start
in IN in ^ OK
order NN order ^ OK
to TO to ^ OK
have VB have ^ OK
it PRP it ^ OK
done VBN done ^ OK
do NP-4 do ^ OK
you VB you ^ OK
have PRP have ^ OK
to VBP to ^ OK
be TO be ^ OK
the VB the ^ OK
one DT one ^ OK
to NN to ^ OK
call TO call ^ OK
in VB in ^ OK

i PRP i ^ OK
only RB only ^ OK
remember VBP remember ^ OK
once IN once ^ OK
my PRP my ^ OK
phone NN phone ^ OK
rings VBZ rings ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB not ^ OK
thinking VBG thinking ^ OK
about IN about ^ OK
making VBG making ^ OK
a DT a ^ OK
damn JJ damn ^ OK
phone NN phone ^ OK
ca- NN call ^ false_start

i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's HVS 's ^ OK
only RB only ^ OK
missed VBN missed ^ OK
me PRP me ^ OK
like UH ^ ^ filler
maybe RB maybe ^ OK
th- XX ^ ^ false_start
twice RB twice ^ OK

maybe RB maybe ^ OK
twice RB twice ^ OK

but CC but ^ OK
um UH ^ ^ filler

and CC ^ ^ false_start
we PRP we ^ OK
got VBD got ^ OK
until IN until ^ OK
when RB when ^ OK

w- XX w- ^ OK
i- XX i- ^ OK

actually RB ^ ^ repeat
actually RB actually ^ OK
i PRP i ^ OK
got VBD got ^ OK
the DT the ^ OK
paperwork NN paperwork ^ OK
in IN in ^ OK
the DT the ^ OK
mail NN mail ^ OK
yesterday NN yesterday ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
all DT all ^ OK
i PRP i ^ OK
have VBP have ^ OK
to TO to ^ OK
do VB do ^ OK
is NP-2 is ^ OK
read VBZ read ^ OK
that VB that ^ OK

hm UH ^ ^ filler
oh UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
six CD six ^ OK

at RB at ^ OK
least RBS least ^ OK
six CD six ^ OK
calls NNS calls ^ OK

eh UH ^ ^ filler
they PRP they ^ OK
would MD would ^ OK
send VB send ^ OK
out RB out ^ OK
a DT a ^ OK
check NN check ^ OK
in IN in ^ OK
the DT the ^ OK
mail NN mail ^ OK

me PRP me ^ OK
either RB either ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

and CC ^ ^ false_start
then RB then ^ OK
the DT the ^ OK
other JJ other ^ OK
thing NN thing ^ OK
was VBD was ^ OK
i PRP i ^ OK
told VBD told ^ OK
them PRP them ^ OK
to TO to ^ OK
call VB call ^ OK
me PRP me ^ OK
between IN between ^ OK
five CD five ^ OK
and CC and ^ OK
seven CD seven ^ OK

but CC but ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
it PRP it ^ OK
's HVS 's ^ OK
been VBN been ^ OK
okay JJ okay ^ OK
because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
able JJ able ^ OK
to TO to ^ OK
take VB take ^ OK
the DT the ^ OK
call NN call ^ OK

well UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP ^ ^ repeat
thought VBD thought ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
s- VBD ^ ^ repeat
said VBD said ^ OK
it PRP it ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
over RB over ^ OK
on IN on ^ OK
the DT the ^ OK

well UH ^ ^ false_start
maybe RB maybe ^ OK
not RB not ^ OK

the DT ^ ^ false_start
was VBD was ^ OK
it PRP it ^ OK
the DT the ^ OK
eighteenth NN eighteenth ^ OK
of IN of ^ OK
october NNP october ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP ^ ^ false_start
g- VBD ^ ^ false_start
like IN like ^ OK
i PRP i ^ OK
said VBD said ^ OK
i S i ^ OK
got PRP got ^ OK
this VBD this ^ OK
thing DT thing ^ OK
in NN in ^ OK
the IN the ^ OK
mail DT mail ^ OK

i PRP i ^ OK
just RB just ^ OK
got VBD got ^ OK
to TO to ^ OK
read VB read ^ OK
it PRP it ^ OK
through RB through ^ OK
to TO to ^ OK
see VB see ^ OK
when WRB when ^ OK
this DT this ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
over RB over ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
'll MD ^ ^ false_start
you PRP you ^ OK
got VBD got ^ OK
it PRP it ^ OK
out IN out ^ OK
of IN of ^ OK
the DT the ^ OK
city NNP city ^ OK
paper NNP paper ^ OK

eh UH ^ ^ filler
so UH so ^ OK
that DT that ^ OK
's BES 's ^ OK

this DT ^ ^ false_start
is VBZ ^ ^ false_start
a DT ^ ^ false_start
my PRP my ^ OK
mom NN mom ^ OK
told VBD told ^ OK
me PRP me ^ OK
about IN about ^ OK
this DT this ^ OK
one CD one ^ OK

so UH so ^ OK
i PRP i ^ OK
had VBD had ^ OK
grabbed VBN grabbed ^ OK
the DT the ^ OK
city NNP city ^ OK
paper NNP paper ^ OK
another DT another ^ OK
time NN time ^ OK
before RB before ^ OK
because IN because ^ OK
i PRP i ^ OK
hardly RB hardly ^ OK
ever RB ever ^ OK
read VBP read ^ OK
the DT the ^ OK
city NNP city ^ OK
paper NNP paper ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
watch VBP watch ^ OK
it PRP it ^ OK

um UH ^ ^ filler
not RB not ^ OK
as RB as ^ OK
much RB much ^ OK
as IN as ^ OK
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
watch VBP watch ^ OK
uh UH ^ ^ filler
you PRP ^ ^ repeat
know VBP ^ ^ repeat
the DT the ^ OK
real NNP real ^ OK
world NNP world ^ OK
road NNP road ^ OK
rules NNP rules ^ OK

um UH ^ ^ filler
lately RB lately ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
the DT the ^ OK
bachelor NNP bachelor ^ OK
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
stuff NN ^ ^ false_start
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
more RBR more ^ OK

just RB just ^ OK
because IN because ^ OK
uh UH ^ ^ filler
um UH ^ ^ filler
uh UH ^ ^ filler
survivor NNP survivor ^ OK
's BES 's ^ OK
always RB always ^ OK
on RB on ^ OK
when WRB when ^ OK
friends NNPS friends ^ OK
is VBZ is ^ OK

uh UH ^ ^ filler
just RB just ^ OK
out IN out ^ OK
of IN of ^ OK
curiosity NN curiosity ^ OK
where WRB ^ ^ repeat
wher- WRB ^ ^ repeat
where WRB where ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
lodi NNP lodi ^ OK

because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
actually RB actually ^ OK
originally RB originally ^ OK
from IN from ^ OK
uh UH ^ ^ filler
oregon NNP oregon ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
just RB ^ ^ repeat
just RB just ^ OK
moved VBD moved ^ OK
to IN to ^ OK
texas NNP texas ^ OK

so UH ^ ^ false_start
is VBZ is ^ OK
uh UH ^ ^ filler
survivor NNP survivor ^ OK
like UH ^ ^ filler
your PRP your ^ OK
favorite JJ favorite ^ OK
reality NN reality ^ OK
show NN show ^ OK
then RB then ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

um UH ^ ^ filler
the DT ^ ^ repeat
eh UH ^ ^ filler
the DT the ^ OK
bachelorette NNP bachelorette ^ OK

i PRP i ^ OK
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP ^ ^ repeat
've VBP 've ^ OK
caught VBN caught ^ OK
a DT a ^ OK
litle JJ litle ^ OK
bit NN bit ^ OK
of IN of ^ OK
uh UH ^ ^ filler
the DT ^ ^ repeat
the DT ^ ^ false_start
um UH ^ ^ filler
american NNP american ^ OK
idol NNP idol ^ OK

i PRP i ^ OK
've VBP 've ^ OK
probably RB probably ^ OK
seen VBN seen ^ OK
almost RB almost ^ OK
all PDT all ^ OK
the DT the ^ OK
um UH ^ ^ filler

but CC but ^ OK
i PRP i ^ OK
missed VBD missed ^ OK
the DT the ^ OK
one NN one ^ OK
where WRB ^ ^ false_start
like UH ^ ^ filler
uh UH ^ ^ filler
last JJ last ^ OK
night NN night ^ OK
or CC or ^ OK
the DT the ^ OK
night NN night ^ OK
before RB before ^ OK
just RB just ^ OK
because IN because ^ OK
of IN of ^ OK
uh UH ^ ^ filler
work NN work ^ OK
commitments NNS commitments ^ OK

but CC but ^ OK
i PRP i ^ OK
actually RB actually ^ OK
do VBP do ^ OK
n't RB n't ^ OK
watch VB watch ^ OK
it PRP it ^ OK
eh UH ^ ^ filler
so RB so ^ OK
much RB much ^ OK
as IN as ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
interest NN interest ^ OK
just RB just ^ OK
to TO to ^ OK
kind RB kind ^ OK
of RB of ^ OK
make VB make ^ OK
fun NN fun ^ OK
of IN of ^ OK
the DT the ^ OK
guy NN guy ^ OK
because IN because ^ OK
he PRP ^ ^ false_start
's BES ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
a DT ^ ^ false_start
he PRP he ^ OK
reminds VBZ reminds ^ OK
me PRP me ^ OK
of IN of ^ OK
puddy NNP puddy ^ OK
a PP-1 a ^ OK
lot DT lot ^ OK
from NN from ^ OK
seinfeld IN seinfeld ^ OK

so UH ^ ^ false_start
just RB ^ ^ repeat
just RB just ^ OK
kind RB ^ ^ repeat
kind RB kind ^ OK
of RB ^ ^ repeat
of RB of ^ OK
eh UH ^ ^ filler
one CD one ^ OK
of IN of ^ OK
those DT those ^ OK
things NNS things ^ OK
i PRP i ^ OK
like VBP like ^ OK
to TO to ^ OK
watch VB watch ^ OK
with IN with ^ OK
friends NNS friends ^ OK
and CC and ^ OK
just RB just ^ OK
eh UH ^ ^ filler
kind RB kind ^ OK
of RB of ^ OK
rip VB rip ^ OK
on IN on ^ OK
him PRP him ^ OK
the DT the ^ OK
whole JJ whole ^ OK
time NN time ^ OK

and UNK ^ ^ false_start
plus UNK plus ^ OK
it UNK ^ ^ repeat
it UNK it ^ OK
's UNK ^ ^ repeat
's UNK 's ^ OK
always UNK always ^ OK
nice UNK nice ^ OK
to UNK to ^ OK
see UNK see ^ OK
kind UNK kind ^ OK
of UNK of ^ OK
like UNK ^ ^ filler
average UNK average ^ OK
people UNK people ^ OK
um UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
eh UNK ^ ^ filler
starring UNK starring ^ OK
in UNK in ^ OK
something UNK something ^ OK
rather UNK rather ^ OK
than UNK than ^ OK
uh UNK ^ ^ filler
some UNK some ^ OK
celebrities UNK celebrities ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
always RB ^ ^ false_start
it PRP it ^ OK
's S-1 's ^ OK
nice BES nice ^ OK
to JJ to ^ OK
see TO see ^ OK
them VB them ^ OK
kind PRP kind ^ OK
of RB of ^ OK
adapt RB adapt ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
kind RB kind ^ OK
of RB of ^ OK
like VBP like ^ OK
how WRB ^ ^ false_start
the DT ^ ^ repeat
the DT the ^ OK
realism NN realism ^ OK

eh UH eh ^ OK
you PRP you ^ OK
know VBP know ^ OK

he PRP he ^ OK
says VBZ says ^ OK
something NN something ^ OK
about IN about ^ OK
like UH ^ ^ filler
this DT this ^ OK
reminds VBZ reminds ^ OK
me PRP me ^ OK
of IN of ^ OK
eh UH ^ ^ filler
driving VBG driving ^ OK
bulldozers NNS bulldozers ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
like UH ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB ^ ^ false_start
wrap VB wrap ^ OK
up RP up ^ OK
eh UH ^ ^ filler
here RB here ^ OK
like UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
next JJ next ^ OK
week NN week ^ OK
or CC or ^ OK
two CD two ^ OK
i PRP i ^ OK
think VBP think ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
feel VBP feel ^ OK
sorry JJ sorry ^ OK
for IN for ^ OK
half PDT half ^ OK
girls NNS of ^ false_start
those DT those ^ OK
girls NNS girls ^ OK
there RB there ^ OK
on IN on ^ OK
the DT the ^ OK
show NN show ^ OK

they PRP ^ ^ false_start
always RB ^ ^ false_start
have VBP ^ ^ false_start
eh UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
cool JJ cool ^ OK
with IN with ^ OK
survivors NNPS survivors ^ OK

how WRB ^ ^ false_start
they PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
never RB ^ ^ false_start
like UH ^ ^ filler
with IN with ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
shows NNS shows ^ OK
like UH ^ ^ filler
especially RB especially ^ OK
with IN with ^ OK
sit-coms NNS sit-coms ^ OK
they PRP they ^ OK
run VBP run ^ OK
from IN from ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
october NNP october ^ OK
to IN to ^ OK
may NNP may ^ OK

and CC ^ ^ false_start
the- PRP ^ ^ repeat
they PRP they ^ OK
're VBP 're ^ OK
done VBN done ^ OK
for IN for ^ OK
like UH ^ ^ filler
four CD four ^ OK
or CC or ^ OK
five CD five ^ OK
months NNS months ^ OK

with IN with ^ OK
survivor NNP survivor ^ OK
seems VBZ it ^ false_start
seems VBZ seems ^ OK
like IN like ^ OK
they PRP ^ ^ repeat
eh UH ^ ^ filler
they PRP they ^ OK
run VBP run ^ OK
it PRP it ^ OK
for IN for ^ OK
three CD three ^ OK
four CD four ^ OK
months NNS months ^ OK

they PRP they ^ OK
take VBP take ^ OK
like UH ^ ^ filler
a DT a ^ OK
month NN month ^ OK
or CC or ^ OK
two CD two ^ OK
off RP off ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
ha- VBP have ^ false_start
a DT a ^ OK
new JJ ^ ^ repeat
new JJ new ^ OK
episode NN episode ^ OK
or CC or ^ OK
a DT ^ ^ repeat
uh UH ^ ^ filler
a DT a ^ OK
new JJ ^ ^ repeat
new JJ new ^ OK
run NN run ^ OK
going VBG going ^ OK

and CC ^ ^ false_start
also RB ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
lot NN ^ ^ false_start
more JJR ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
obviously RB obviously ^ OK
the DT the ^ OK
other JJ other ^ OK
ones NNS ones ^ OK
make VBP make ^ OK
it PRP it ^ OK
they PRP because ^ false_start
they PRP they ^ OK
're VBP 're ^ OK
in IN in ^ OK
the DT ^ ^ repeat
the DT ^ ^ false_start
swahili NNP swahili ^ OK
's POS 's ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
jungle NN jungle ^ OK
and CC ^ ^ false_start
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
stuff NN ^ ^ false_start
before RB ^ ^ false_start

that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
one NN one ^ OK
i PRP i ^ OK
most RBS most ^ OK
identify VBP identify ^ OK
the DT the ^ OK
show NN show ^ OK
with IN with ^ false_start
too RB too ^ OK

and CC ^ ^ repeat
um UH ^ ^ filler
and CC and ^ OK
uh UH ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK

i PRP i ^ OK
was VBD was ^ OK
kind RB kind ^ OK
of RB of ^ OK
pulling VBG pulling ^ OK
for IN for ^ OK
rudy NNP rudy ^ OK
uh UH ^ ^ filler
even RB even ^ OK
though IN though ^ OK
he PRP he ^ OK
got VBN got ^ OK
bumped VBD bumped ^ OK
off RP off ^ OK
because IN because ^ OK
he PRP he ^ OK
uh UH ^ ^ filler
just RB just ^ OK
just RB ^ ^ repeat
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden NN sudden ^ OK
out IN out ^ OK
of IN of ^ OK
nowhere RB nowhere ^ OK
took VBD took ^ OK
his PRP his ^ OK
hand NN hand ^ OK
off IN off ^ OK
that DT that ^ OK
pole NN pole ^ OK
or CC ^ ^ false_start
whatever WP ^ ^ false_start

i PRP ^ ^ repeat
just RB ^ ^ false_start
i PRP i arg1 OK
enjoy VBP enjoy predicate OK
going VBG going arg1 OK
to IN to arg4 OK
the DT the arg4 OK
movies NNS movies arg4 OK

i PRP ^ arg1 repeat
just RB ^ ^ false_start
i PRP i arg0 OK
like VBP ^ ^ repeat
like VBP like predicate OK
the DT the arg1 OK
sound NN sound arg1 OK
big JJ and ^ false_start
big JJ the ^ false_start
big JJ big arg1 OK
screen NN screen arg1 OK

the DT ^ ^ repeat
the DT the arg1 OK
best JJS ^ ^ repeat
best JJS best arg1 OK
time NN time arg1 OK
is VBZ is predicate OK
like UH ^ ^ filler
around RB around arg2 OK
noon NN noon arg2 OK

so UH ^ ^ false_start
you PRP ^ ^ repeat
so UH ^ ^ false_start
do VBP do ^ OK
you PRP you arg1 OK
like VB like predicate OK
going VBG going arg1 OK
to IN to arg1 OK
the DT the arg4 OK
movies NNS movies arg4 OK

um UH ^ ^ filler
i PRP ^ ^ repeat
definitely RB ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
like VB like predicate OK
watching VBG watching arg1 OK
movies NNS movies arg1 OK

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK

i PRP ^ ^ repeat
jus- RB ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
not RB ^ ^ false_start
really RB ^ ^ false_start
like VB like ^ OK
watching VBG watching ^ OK
them PRP them ^ OK
at IN at ^ OK
home NN home ^ OK
as RB ^ ^ repeat
much RB ^ ^ repeat
like UH ^ ^ filler
even RB even ^ OK
half NN half ^ OK
as RB as ^ OK
much RB much ^ OK

it PRP it ^ OK
does VBZ does ^ OK
n't RB n't argM_neg OK
really RB ^ ^ false_start
matter VB matter predicate OK
like UH ^ ^ filler
w- IN ^ ^ repeat
like UH ^ ^ filler
whether IN whether arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
rainy JJ ^ arg2 OK
or CC rainy ^ repeat
or CC ^ ^ OK
like UH ^ ^ filler
what WP ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
weather NN ^ ^ false_start
to IN to arg2 false_start
me PRP me arg2 false_start

i PRP ^ ^ repeat
just RB ^ ^ repeat
like VBP ^ ^ filler
i PRP i arg0 OK
just RB ^ ^ false_start
think VBP think predicate OK
like UH ^ ^ filler
you PRP you arg1 OK
get VBP get arg1 OK
a DT a arg2 OK
lot NN lot arg2 OK
more RBR more arg2 OK
into IN into arg2 OK
it PRP it arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ false_start
like UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
ever RB ever argM_tmp OK
get VB get predicate OK
up RP up arg_particl OK
or CC or ^ OK
leave VB leave ^ OK
or CC ^ ^ false_start
anything NN ^ predicate false_start

i PRP ^ ^ repeat
jus- RB ^ ^ repeat
i PRP i arg1 OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
just RB ^ ^ false_start
go VB go predicate OK
with IN with ^ OK
like UH ^ ^ filler
a DT a ^ OK
girl NN girl ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

i PRP ^ ^ repeat
actually RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
a DT a arg1 OK
good JJ good arg1 OK
set NN ^ arg1 false_start
up RP set-up ^ false_start
to TO to ^ OK
watch VB watch predicate OK
movies NNS movies arg1 OK

so UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
like VBP like predicate OK
watching VBG watching arg1 OK
movies NNS movies arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
dorm NN dorm argM_loc OK

but CC ^ ^ false_start
stuff NN ^ ^ repeat
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
movies NNS movies arg1 OK
like IN ^ ^ repeat
like IN like arg1 OK
like IN the arg1 false_start
lord NNP lord arg1 OK
of IN of arg1 OK
the DT the arg1 OK
rings NNPS rings arg1 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
are VBP are predicate OK
definitely RB definitely ^ false_start
a DT ^ ^ repeat
lot NN ^ ^ repeat
a DT a arg2 OK
lot NN lot arg2 OK
better JJR better arg2 OK
in IN in argM_loc OK
the DT the argM_loc OK
theater NN theater argM_loc OK

and CC ^ ^ false_start
that DT ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
just RB ^ ^ false_start
not RB not argM_neg OK
the DT the arg2 OK
same JJ same arg2 OK
at IN at argM_loc false_start
home NN home argM_loc false_start

like UH ^ ^ filler
aft- IN ^ ^ repeat
after IN after ^ OK
you PRP you ^ OK
see VBP see ^ OK
a DT a ^ OK
movie NN movie ^ OK
in IN in ^ OK
the DT the ^ OK
theater NN theater ^ OK
and CC and ^ OK
then RB then ^ OK
you PRP you ^ OK
see VBP see ^ OK
it PRP it ^ OK
a IN a ^ OK
home NN home ^ OK
you PRP you ^ OK
're VBP ^ ^ false_start
like RP ^ ^ false_start
yeah UH say ^ filler

i PRP ^ ^ repeat
like VBP ^ ^ filler
i PRP i arg0 OK
watched VBD watched predicate OK
the DT the arg1 OK
texas NNP texas arg1 OK
chainsaw NN chainsaw arg1 OK
massacre NN massacre arg1 OK
just RB ^ ^ false_start
uh UH ^ ^ filler
the DT the argM_tmp OK
other JJ other argM_tmp OK
day NN day argM_tmp OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
really RB really arg2 OK
scary JJ scary arg2 OK

yeah UH ^ ^ filler
because IN because ^ OK
she PRP she ^ OK
'll MD 'll ^ OK
be VB be ^ OK
freaking VBG freaking ^ OK
out RP out ^ OK

or CC ^ ^ repeat
m- JJ ^ ^ repeat
mine PRP mine ^ OK
was VBD was ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
star NNP star ^ OK
wars NNPS wars ^ OK
type NN type ^ OK

but CC ^ ^ false_start
more RBR more ^ OK
towards IN towards ^ OK
like UH ^ ^ filler
drama NN drama ^ OK
or CC or ^ OK
comedy NN comedy ^ OK
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

bad NNP bad ^ OK
boys NNPS boys ^ OK
two CD two ^ OK

i PRP i ^ OK
just RB just ^ OK

i PRP ^ ^ false_start
just RB ^ ^ false_start
want VB ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP i arg0 OK
did VBD ^ ^ false_start
did VBD did ^ OK
n't RB ^ ^ false_start
n't RB n't argM_neg OK
really RB ^ ^ false_start
like VB like predicate OK
that DT ^ ^ repeat
that DT that arg1 OK
very RB very ^ OK
much RB much ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
like VBP like predicate OK
the DT the arg1 OK
action NN action arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
really RB ^ ^ false_start
like VB like arg1 OK
action NN action arg1 OK
movies NNS movies arg1 OK
as RB as ^ OK
much RB much ^ OK

well UH ^ ^ filler
with IN ^ ^ repeat
with IN with ^ OK
children NNS children ^ OK

it PRP it ^ OK
it PRP ^ ^ repeat
is VBZ is predicate OK
because IN because arg1 OK
you PRP you arg0 OK
've VBP 've arg1 OK
got VBN got arg1 OK
the DT the arg1 OK
easter NNP easter arg1 OK
egg NNP egg arg1 OK
hunt NN hunt arg1 OK

and CC ^ arg1 false_start
if IN if ^ OK
you PRP you arg1 OK
're VBP 're ^ OK
associated VBN associated predicate OK
with IN with arg2 OK
any DT any arg2 OK
denom- NN ^ ^ repeat
denomination NN denomination arg2 OK
or CC or ^ OK
if IN if ^ OK
you PRP you arg0 OK
went VBD went predicate OK
to IN to arg4 OK
church NN church arg4 OK
then RB then ^ OK
you PRP you arg0 OK
know VBP know predicate OK
there EX that ^ false_start
there EX there arg1 OK
would MD would arg1 OK
be VB be arg1 OK
gatherings NNS gatherings arg1 OK
there RB there argM_loc OK

and CC ^ ^ false_start
then CC then ^ OK
gatherings NNS gatherings ^ OK
with IN with ^ OK
family NN family ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

an- CC ^ ^ repeat
and CC ^ ^ false_start
so RB so ^ OK
do VBP do ^ OK
i ADVP-PRD- 1 i ^ OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
also RB also ^ OK
catholic JJ catholic arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
associate VBP associate predicate OK
with IN with arg2 OK
that DT that arg2 OK
too RB too ^ OK

um UH ^ ^ filler
but CC but ^ OK
it PRP it ^ OK
's BES 's ^ OK
also RB also ^ OK
with IN with ^ OK
nature NN nature ^ OK
itself PRP itself ^ OK

because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK

um UH ^ ^ filler
so UH ^ ^ filler
an- CC ^ ^ repeat
and CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
love VBP love predicate OK
that DT that arg1 OK

after IN ^ ^ repeat
after IN after ^ OK
everything NN everything ^ OK
's HVS 's ^ OK
been VBN been ^ OK
dead JJ dead ^ OK
and CC and ^ OK
we PRP we ^ OK
've VBP 've ^ OK
celebrated VBN celebrated ^ OK
winter NN winter ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT that arg1 OK
would MD would ^ OK
be VB be predicate OK
a DT a arg1 OK
very RB very arg1 OK
good JJ good arg1 OK
holiday NN holiday arg1 OK
to TO ^ ^ repeat
to TO to arg2 OK
celebrate VB celebrate arg2 OK

m- XX ^ ^ false_start
yeah UH no ^ false_start

well UH ^ ^ filler
here RB ^ ^ false_start
in IN ^ ^ false_start
boston NNP ^ ^ false_start
we PRP ^ ^ false_start
i PRP i arg0 OK
live VBP live predicate OK
in IN in argM_loc OK
boston NNP boston argM_loc OK
and CC and ^ OK
we PRP we arg0 OK
have VBP have predicate OK
this DT this arg1 OK
thing NN thing arg1 OK
called VBN called arg1 OK
bunker NNP bunker arg2 OK
hill NNP hill arg2 OK
day NN day arg2 OK

and CC ^ ^ false_start
that DT that arg1 OK
was VBD was predicate OK
when WRB ^ ^ false_start
bunk NNP ^ ^ false_start
uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the arg2 OK
battle NN battle arg2 OK
of IN of arg2 OK
bunker NNP bunker arg2 OK
hill NNP hill arg2 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
very RB ^ ^ false_start
mu- XX ^ ^ false_start
and CC ^ ^ false_start
so RB so ^ OK
of IN ^ ^ repeat
of IN of ^ OK
course NN ^ ^ repeat
course NN course ^ OK
is VBZ ^ ^ repeat
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the arg1 OK
government NN ^ ^ repeat
government NN government arg1 OK
workers NNS workers arg1 OK
are VBP are predicate OK
off JJ off arg2 OK

and CC ^ ^ false_start
n- XX ^ ^ repeat
n- XX ^ ^ false_start
unless IN unless ^ OK
you PRP you ^ OK
are VBP are ^ OK
from IN from ^ OK
boston NNP boston ^ OK
which WDT which ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK

everyone NN everyone arg0 false_start
knows VBZ knows predicate false_start
about IN about ^ false_start
it PRP it ^ false_start
but CC ^ ^ false_start
if IN if ^ OK
you PRP you arg1 OK
're VBP 're predicate OK
from IN from arg2 OK
boston NNP boston arg2 OK
and CC and ^ OK
you PRP you arg1 OK
were VBD were ^ OK
raised VBN raised predicate OK
here RB here argM_loc OK

ginkgo NNP ^ ^ repeat
uh UH ^ ^ filler
ginkgo NNP ginkgo ^ OK
biloba NNP biloba ^ OK

i PRP i ^ OK
would MD would ^ OK
like VB like ^ OK
to TO to ^ OK
see VB see ^ OK
some DT some ^ OK
of IN of ^ OK
it PRP it ^ OK
regulated VBN regulated ^ OK
only RB only ^ OK
for IN for ^ OK
in IN in ^ OK
terms NNS terms ^ OK
of IN of ^ OK
not RB not ^ OK
represis- NN ^ ^ repeat
representation NN representatio n  ^ OK
of IN of ^ OK
what WP what ^ OK
they PRP they ^ OK
do VBP do ^ OK
but NP-1 but ^ OK
hm CC ^ ^ filler
according UH according ^ OK
to VBG to ^ OK
potency IN potency ^ OK

like UH ^ ^ filler
do VBP ^ ^ false_start
when WRB when ^ OK
you PRP you ^ OK
take VBP take ^ OK
a DT a ^ OK
supplement NN supplement ^ OK
is ADVP-TMP- 1 is ^ OK
it VBZ it ^ OK
really PRP really ^ OK
thirty RB thirty ^ OK
milligrams CD milligrams ^ OK
of NNS of ^ OK
c. IN c. ^ OK
o. NN o. ^ OK
q. NN q. ^ OK
ten NN ten ^ OK
or CD or ^ OK
fifty CC fifty ^ OK
milli- CD milli- ^ OK
something NN something ^ OK
else NN else ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
it PRP it ^ OK
could MD could ^ OK
be VB be ^ OK

so UH so ^ OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
um UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
questionable JJ questionable ^ OK

now UH now ^ OK
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
things NNS things ^ OK
you PRP you ^ OK
can MD can ^ OK
get VB get ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
what WP what ^ OK
they PRP they ^ OK
call VBP call ^ OK
prescription NN ^ ^ repeat
prescription NN prescription ^ OK
grade NN grade ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
also RB also ^ OK
have VBP have ^ OK
potassium VBN potassium ^ OK
pla- XX ^ ^ false_start
uh UH ^ ^ filler
tablet NNP tablet ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
comes VBZ comes ^ OK
in IN in ^ OK
a DT ^ ^ false_start
ninety-nine CD ninety-nine ^ OK
milligrams NNS milligrams ^ OK
because IN because ^ OK
a DT a ^ OK
hundred CD hundred ^ OK
milligrams NNS milligrams ^ OK
is VBZ is ^ OK
prescription NN prescription ^ OK

so RB so ^ OK
i PRP i ^ OK
guess VBP guess ^ OK
that DT that ^ OK
must MD must ^ OK
mean VB mean ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
have VBP have ^ OK
some DT some ^ OK
sort NN sort ^ OK
of IN of ^ OK
quality NN quality ^ OK
control NN control ^ OK

i PRP i ^ OK
know VBP know ^ OK
this DT this ^ OK
soy NN soy ^ OK
thing NN thing ^ OK
that DT ^ ^ repeat
that WDT that ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
wa- VBZ ^ ^ repeat
was VBD was ^ OK
taking VBG taking ^ OK
i NP-2 i ^ OK
just PRP just ^ OK
ran RB ran ^ OK
out VBD out ^ OK
a RB a ^ OK
couple DT couple ^ OK
days NN days ^ OK
ago NNS ago ^ OK
was RB was ^ OK
clover VBD clover ^ OK
leaf NN leaf ^ OK
extract NN extract ^ OK
or NN or ^ OK
something CC something ^ OK
like NN like ^ OK
that IN that ^ OK

but CC but ^ OK
there EX there ^ OK
's BES 's ^ OK
als- RB als- ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
ever RB ever ^ OK
tried VBD tried ^ OK
pine NN pine ^ OK
bark NN bark ^ OK
because IN because ^ OK
that DT that ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
sound VB sound ^ OK
like IN like ^ OK
food NN food ^ OK
to IN to ^ OK
me PRP me ^ OK

or CC or ^ OK
a DT ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like NP-1 ^ ^ filler
grape UH grape ^ OK
seed NN seed ^ OK
extrac- NN ^ ^ repeat
extract NN extract ^ OK
is NN is ^ OK
like VBZ ^ ^ filler
i IN i ^ OK
guess PRP guess ^ OK
some VBP some ^ OK
of DT of ^ OK
the IN the ^ OK
ingredients DT ingredients ^ OK
like NNS like ^ OK
you UH you ^ OK
'd PRP 'd ^ OK
have MD have ^ OK
in VB in ^ OK
wine IN wine ^ OK

so UH so ^ OK
i PRP i ^ OK
guess VBP guess ^ OK
you PRP you ^ OK
've VBP 've ^ OK
been VBN been ^ OK
doing VBG doing ^ OK
this DT this ^ OK
uh UH ^ ^ filler
ha- PDT ^ ^ repeat
um UH ^ ^ filler
half PDT half ^ OK
a DT a ^ OK
dozen NN dozen ^ OK
calls NNS calls ^ OK
already RB already ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
th- DT ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
this DT this ^ OK
is VBZ is ^ OK
my PRP my ^ OK
eighth NN eighth ^ OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
was VBD ^ ^ false_start
told VBN ^ ^ false_start
no UH ^ ^ false_start
actually UH ^ ^ false_start
a DT a ^ OK
friend NN friend ^ OK
of IN of ^ OK
mine PRP mine ^ OK
was VBD was ^ OK
told VBN told ^ OK
after IN after ^ OK
ten CD ten ^ OK
calls NNS calls ^ OK
you PRP you ^ OK
can MD can ^ OK
start VB start ^ OK
receiving VBG receiving ^ OK
calls NNS calls ^ OK
now RB now ^ OK

on IN ^ ^ false_start
your PRP ^ ^ false_start
c- NN ^ ^ false_start
on IN on ^ OK
your PRP your ^ OK
home NN home ^ OK
phone NN phone ^ OK

i PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
heard VBD heard ^ OK
that DT that ^ OK
also RB also ^ OK
because IN because ^ OK
i PRP i ^ OK
tried VBD tried ^ OK
to TO to ^ OK
make VB make ^ OK
a DT a ^ OK
call NN call ^ OK
on IN on ^ OK
saturday NNP saturday ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
got VBD got ^ OK
a DT a ^ OK
recording NN recording ^ OK
saying VBG saying ^ OK
you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
make VB make ^ OK
it PRP it ^ OK
within IN ^ ^ false_start
twenty-four CD ^ ^ false_start
hou- NNS ^ ^ false_start
within IN within ^ OK
a DT a ^ OK
day NN day ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
and CC ^ ^ repeat
i- PRP ^ ^ repeat
and CC ^ ^ false_start
it PRP it ^ OK
hung VBD hung ^ OK
up RP up ^ OK
on IN on ^ OK
me PRP me ^ OK

so RB so ^ OK
far RB far ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
hung VBN hung ^ OK
up RP up ^ OK
on IN on ^ OK
anybody NN anybody ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's SBAR-1 's predicate OK
interesting BES interesting arg1 OK
that JJ that arg1 OK
you IN you arg0 OK
say PRP say arg1 OK
easter VBP easter arg1 OK
because NNP because ^ OK
i IN ^ ^ false_start
r- PRP ^ ^ false_start
i VBP i arg0 OK
remember PRP remember predicate OK
as VBP ^ ^ repeat
as DT as arg1 OK
a IN ^ ^ repeat
a IN a arg1 OK
child DT child arg1 OK
i NN i arg0 OK
used PRP used arg1 OK
to VBD to arg1 OK
really TO really arg1 OK
really RB really arg1 OK
like RB like arg1 OK
easter VBP easter arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
've VBP ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
guess VBP guess predicate OK
as IN as arg1 OK
the DT the arg0 OK
kids NNS kids arg0 OK
were VBD were arg1 OK
younger JJR younger arg2 OK
and CC and arg2 OK
growing VBG growing arg2 OK
up RB up arg2 OK
uh UH ^ ^ filler
really RB really arg2 OK
liked VBD liked arg2 OK
it PRP it arg1 OK

an- CC ^ ^ repeat
and CC ^ ^ false_start
now RB now ^ OK
easter NNP easter arg0 OK
has VBZ has ^ OK
kind RB ^ ^ false_start
of RB ^ predicate false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
would MD would ^ OK
n't RB n't ^ OK
say VB say predicate OK
it PRP it arg1 OK
's HVS 's arg1 OK
fallen VBN fallen arg1 OK
into IN into arg4 OK
the DT the arg4 OK
background NN background arg4 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
does VBZ does ^ OK
n't RB n't ^ OK
seem VB seem predicate OK
to TO to arg1 OK
be VB be arg1 OK
quite RB ^ ^ repeat
quite RB quite arg2 OK
as RB ^ ^ repeat
as RB as arg2 OK
big JJ big arg2 OK
a DT a arg2 OK
holiday NN holiday arg2 OK
as IN ^ ^ repeat
as IN as arg2 OK
it PRP ^ ^ repeat
it PRP it arg1 OK
was VBD was arg2 OK
uh UH ^ ^ filler
years NNS years arg2 OK
ago RB ago arg2 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do predicate OK

i PRP ^ ^ repeat
i PRP i arg0 OK
uh UH ^ ^ filler
guess VBP guess predicate OK
when WRB when arg1 OK
i PRP i arg0 OK
think VBP think arg1 OK
of IN of arg1 OK
easter NNP easter arg1 OK
i ADVP-TMP- 1 i arg0 OK
think PRP think arg1 OK
of VBP of arg1 OK
uh IN ^ ^ filler
easter UH easter arg1 OK
vigil NNP vigil arg1 OK
because NN because arg1 OK
i IN ^ ^ false_start
we PRP we arg0 OK
attend PRP attend arg1 OK
the VBP the arg1 OK
catholic DT catholic arg1 OK
church JJ church arg1 OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
associate VB associate predicate OK
it PRP it arg1 OK
with IN with arg1 OK
the DT the arg1 OK
holiday NN holiday arg1 OK

a UNK ^ ^ filler
it UNK it ^ OK
's UNK 's ^ OK

that DT that ^ OK
's BES 's ^ OK
an DT an argM_other OK
interesting JJ interesting argM_other OK
way NN way argM_other OK
to TO to ^ OK
put VB put predicate OK
it PRP it arg1 OK

i PRP ^ ^ repeat
oh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
find VBP find predicate OK
that DT that arg1 OK
very RB very arg1 OK
interesting JJ interesting arg1 OK
because IN because ^ OK
it PRP it arg1 OK
's BES 's ^ OK
uh UH ^ predicate filler

eh UNK ^ ^ repeat
eh UNK eh ^ OK

you PRP ^ ^ false_start
we PRP we arg0 OK
really RB really ^ OK
should MD should ^ OK
celebrate VB celebrate predicate OK
winter NN winter arg1 OK

gee UH ^ ^ filler
i PRP ^ ^ repeat
don- VBP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP ^ ^ false_start
if IN if ^ OK
i PRP i arg0 OK
were VBD were ^ OK
going VBG going predicate OK
to TO to arg2 OK
create VB create arg2 OK
a DT a arg1 OK
holiday NN holiday arg1 OK
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
'd MD 'd arg1 OK
create VB create arg1 OK
a DT a arg1 OK
holiday NN holiday arg1 OK
that WDT that arg1 OK
was VBD was arg1 OK
kind RB kind arg2 OK
of RB ^ ^ repeat
of RB of arg2 OK
national JJ national arg2 OK
celebrate VB celebrate arg2 OK
having VBG having arg1 OK
kids NNS kids arg1 OK
day NN day arg1 OK

just RB ^ ^ false_start
sort RB ^ ^ repeat
sort RB sort ^ OK
of RB ^ ^ repeat
of RB of ^ OK
a DT ^ ^ repeat
a DT a ^ OK
holiday NN holiday ^ OK
that WDT that ^ OK
families NNS families arg1 OK
could MD could ^ OK
be VB be predicate OK
together RB together arg2 OK

an- CC ^ ^ repeat
and CC and ^ OK
uh UH ^ ^ filler

i PRP i arg0 OK
guess VBP guess predicate OK
eh UH ^ ^ filler
celebrate VB ^ ^ false_start
the DT ^ ^ false_start
ti- XX ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
gettin- VB ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm arg1 OK
somewhat RB somewhat arg2 OK
nostalgic JJ nostalgic arg2 OK
about IN about arg2 OK
that DT that arg2 OK

our PRP ^ ^ repeat
our PRP ^ ^ false_start
son NN ^ ^ false_start
our PRP our arg0 OK
daughter NN daughter arg0 OK
's HVS 's ^ OK
been VBN been ^ OK
gone VBN gone predicate OK
for IN for arg2 OK
a DT a arg2 OK
couple NN couple arg2 OK
of IN of arg2 OK
years NNS years arg2 OK
off IN off arg4 OK
to IN to arg4 OK
college NN college arg4 OK

so UH ^ ^ filler
w- NN ^ ^ repeat
we PRP we arg1 OK
're VBP 're predicate OK
empty JJ empty arg2 OK
nesters NNS nesters arg2 OK
uh UH ^ ^ filler
for IN for arg2 OK
the DT the arg2 OK
first JJ first arg2 OK
time NN time arg2 OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
uh UH ^ ^ filler
it PRP it ^ OK
is VBZ is predicate OK
different JJ different arg1 OK

because IN ^ ^ false_start
i- VBZ ^ ^ false_start
i PRP ^ ^ false_start
i PRP ^ ^ false_start
they PRP they ^ OK
probably RB probably ^ OK
should MD should ^ OK
n't RB n't ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

but CC but ^ OK
so RB so arg1 OK
much RB much arg1 OK
has PP-2 has ^ OK
been VBZ been ^ OK
commercialized VBN commercialize d  predicate OK
about VBN about arg1 OK
so IN so arg1 OK
many RB many arg1 OK
things JJ things arg1 OK

and CC ^ ^ false_start
here RB here ^ OK
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden JJ sudden ^ OK
you PRP you arg0 OK
have VBP have predicate OK
organizations NNS organizations arg0 OK
trying VBG trying arg1 OK
to TO to arg1 OK
pass VB pass arg1 OK
things NNS things arg1 OK
off RP off arg1 OK
as IN as arg1 OK
holidays NNS holidays arg1 OK
to TO to arg1 OK
celebrate VB celebrate arg1 OK

and CC ^ ^ false_start
what WP what ^ OK
they PRP they arg0 OK
really RB really ^ OK
are VBP are predicate OK
is NP-PRD-1 is arg2 OK
an VBZ an arg2 OK
excuse DT excuse arg2 OK
to NN to arg2 OK
sell TO sell arg2 OK
you VB you arg2 OK
more PRP more arg1 OK
greeting JJR greeting arg1 OK
cards VBG cards arg1 OK
or NNS ^ ^ repeat
or CC or arg1 OK
candy CC candy arg1 OK
or NN or arg1 OK
what CC what arg1 OK
have WP have arg1 OK
you VBP you arg1 OK

i PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
my PRP my arg1 OK
wife NN wife arg1 OK
is VBZ is predicate OK
from IN from arg2 OK
detroit NNP detroit arg2 OK

and CC ^ ^ false_start
when WRB ^ ^ repeat
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
first RB first ^ OK
moved VBD moved predicate OK
up IN up arg2 OK
there RB there arg2 OK
i ADVP-TMP- 3 i arg0 OK
found PRP found predicate OK
it VBD it arg1 OK
very PRP very arg1 OK
curious SBAR-2 curious arg1 OK
that RB that ^ OK
they JJ they arg0 OK
celebrate IN celebrate predicate OK
something PRP something arg1 OK
in VBP in arg1 OK
detroit NN detroit arg1 OK
called VP-1 ^ ^ false_start
or IN or arg1 OK
in NNP ^ ^ repeat
in VBN in arg1 OK
that CC that arg1 OK
area IN area arg1 OK
part IN part arg1 OK
of DT of arg1 OK
the NN the arg1 OK
country NN country arg1 OK
called IN called predicate OK
sweetest DT sweetest arg1 OK
day NN day arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
had VBD had ^ OK
never RB never ^ OK
heard VBN heard predicate OK
of IN of arg_particl OK
sweetest NNP sweetest arg1 OK
day NNP day arg1 OK
before RB before ^ OK

oh UH ^ ^ filler
you PRP you arg0 OK
have VBP have ^ OK
n't RB n't ^ OK
heard VBN heard predicate OK
of IN of arg_particl OK
sweetest NNP sweetest arg1 OK
day NNP day arg1 OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
that DT that ^ OK
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
big JJ ^ ^ repeat
big JJ big arg1 OK
holiday NN holiday arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
well UH ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
lived VBN lived predicate OK
uh UH ^ ^ filler
a DT a argM_loc OK
number NN number argM_loc OK
of IN of argM_loc OK
different JJ different argM_loc OK
places NNS places argM_loc OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
never RB never ^ OK
heard VBN heard predicate OK
of IN of arg_particl OK
it PRP it arg1 OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
you- PRP ^ ^ false_start
y- PRP ^ ^ false_start
people NNS people arg0 OK
take VBP take predicate OK
out RP out arg_particl OK
ads NNS ads arg1 OK
in IN in arg1 OK
the DT the arg1 OK
paper NN paper arg1 OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
they PRP ^ ^ false_start
it PRP ^ ^ false_start
it PRP it ^ OK
's BES 's predicate OK
just RB ^ ^ false_start
this DT this arg1 OK
big JJ big arg1 OK
deal NN deal arg1 OK

and CC and ^ OK
um UH ^ ^ filler

it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg0 OK
kind SBAR-1 ^ ^ false_start
of RB ^ ^ false_start
spoils RB spoils predicate OK
the VBZ the arg1 OK
whole DT whole arg1 OK
concept JJ concept arg1 OK
of NN of arg1 OK
holidays IN holidays arg1 OK
for NNS for arg1 OK
me IN me arg1 OK
to PRP to ^ OK
see TO see predicate OK
things VB things arg1 OK
like NNS like arg1 OK
that IN that arg1 OK
happen DT happen arg1 OK

one CD ^ ^ repeat
one CD one ^ OK
of IN ^ ^ repeat
of IN of ^ OK
the DT ^ ^ repeat
the DT the ^ OK
firs- JJ ^ ^ repeat
first JJ first ^ OK
things NNS things ^ OK
i PRP i arg0 OK
'm VBP 'm ^ OK
going VBG going predicate OK
to TO to arg2 OK
do VB do arg2 OK
is NP-1 is arg1 OK
say VBZ say arg1 OK
bill VB bill arg0 OK
has NN has arg1 OK
never VBZ never arg1 OK
heard RB heard arg1 OK
of VBN of arg_particl OK
sweetest IN sweetest arg1 OK
day NNP day arg1 OK
either NNP either arg1 OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
you PRP ^ ^ false_start
you PRP ^ ^ false_start
it PRP ^ ^ false_start
it PRP it ^ OK
's BES 's predicate OK
a DT a arg1 OK
local JJ local arg1 OK
celebration NN celebration arg1 OK

that DT ^ ^ repeat
that DT that ^ OK
's BES 's predicate OK
fine JJ fine arg1 OK

everybody NN everybody arg0 OK
^ ^ looks predicate OK
at IN at arg1 OK
you PRP you arg1 OK
like UH like arg1 OK
whoa UH whoa arg1 OK
wait VB wait arg1 OK
a DT a arg1 OK
minute NN minute arg1 OK

wh- WRB ^ ^ repeat
why WRB ^ ^ repeat
why WRB why ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
looking VBG looking predicate OK
forward RB forward arg1 OK
to IN to arg1 OK
bunker NNP bunker arg1 OK
hill NNP hill arg1 OK
day NN day arg1 OK

yeah UNK ^ ^ filler
but UNK but ^ OK
that UNK that ^ OK
's UNK 's ^ OK
uh UNK ^ ^ filler

and CC ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
my PRP ^ ^ repeat
my PRP my arg1 OK
major JJ ^ ^ repeat
concentration NN concentration arg1 OK
was VBD was predicate OK
in IN in arg2 OK
business NN business arg2 OK

uh UH ^ ^ filler
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
wha- XX ^ ^ false_start
w- XX ^ ^ false_start
our PRP our arg1 OK
interaction NN interaction arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
primarily RB primarily argM_extent OK
formulary JJ formulary arg2 OK

and UNK ^ ^ false_start
while UNK while argM_adverb OK
it UNK it arg1 OK
's UNK 's predicate OK
definitely UNK definitely argM_extent OK
advantageous UNK advantageous arg2 OK
to UNK to arg2 OK
understand UNK understand arg2 OK
the UNK the arg1 OK
principles UNK principles arg1 OK
underlying UNK underlying arg1 OK
the UNK the arg1 OK
formula UNK formula arg1 OK
and UNK and arg1 OK
the UNK the arg1 OK
various UNK various arg1 OK
methodologies UNK methodologies arg1 OK
used UNK used arg1 OK
in UNK in arg2 OK
business UNK business arg2 OK
it UNK it arg1 OK
did UNK did arg2 OK
n't UNK n't argM_neg OK
seem UNK seem arg2 OK
to UNK to arg2 OK
me UNK me arg2 OK
to UNK to arg2 OK
make UNK make arg2 OK
a UNK a arg1 OK
whole UNK whole arg1 OK
lot UNK lot arg1 OK
of UNK of arg1 OK
sense UNK sense arg1 OK
to UNK to arg2 OK
have UNK have arg2 OK
to UNK to arg2 OK
memorize UNK memorize arg2 OK
these UNK these arg1 OK
formulas UNK formulas arg1 OK
just UNK just argM_discou OK
like UNK like argM_discou OK
you UNK you argM_discou OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP you arg0 OK
probably RB probably argM_adverb OK
carried VBD carried predicate OK
around RP around argM_loc OK
a DT a arg1 OK
scientific JJ scientific arg1 OK
calculator NN calculator arg1 OK

uh UH ^ ^ filler
we PRP we arg0 OK
certainly RB certainly argM_adverb OK
carried VBD carried predicate OK
around RP around argM_loc OK
business NN business arg0 OK
calculators NNS calculators arg0 OK
that WDT that ^ OK
performed VBD performed predicate OK
these DT these arg1 OK
functions NNS functions arg1 OK
for IN for argM_other OK
us PRP us argM_other OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
definitely RB definitely argM_adverb OK
was VBD was predicate OK
n't RB n't argM_neg OK
a DT a arg2 OK
dumbing VBG dumbing arg2 OK
down RP down arg2 OK
tool NN tool arg2 OK

it PRP it arg1 OK
was VBD was predicate OK
something NN something arg0 OK
that WDT that arg2 OK
enhanced VBD enhanced arg2 OK
our PRP our arg0 OK
ability NN ability arg1 OK
to TO to arg1 OK
perform VB perform arg1 OK
advanced JJ advanced arg1 OK
computations NNS computations arg1 OK
in IN in argM_tmp OK
a DT a argM_tmp OK
shorter JJR shorter argM_tmp OK
amount NN amount argM_tmp OK
of IN of argM_tmp OK
time NN time argM_tmp OK

in IN in ^ OK
the DT the ^ OK
same JJ same ^ OK
way NN way ^ OK
that WDT that ^ OK
cars NNS cars ^ OK
have VBP have ^ OK
outpaced VBN outpaced ^ OK
people NNS people ^ OK
traveling VBG traveling ^ OK
and CC and ^ OK
by IN by ^ OK
foot NN foot ^ OK

i PRP ^ ^ filler
think VBP ^ ^ filler
computers NNS computers arg0 OK
have VBP have ^ OK
sort RB sort argM_mod OK
of RB of argM_mod OK
out RB ^ ^ false_start
paced VBD ^ ^ false_start
allowed VBN allowed predicate OK
people NNS people arg0 OK
to TO to arg1 OK
excel VB excel arg1 OK
beyond IN beyond arg1 OK
their PRP their arg1 OK
normal JJ normal arg1 OK
capacities NNS capacities arg1 OK
for IN for arg1 OK
performing VBG performing arg1 OK
advanced JJ advanced arg1 OK
computations NNS computations arg1 OK
or CC or arg1 OK
whatever WDT whatever arg1 OK
the DT the arg1 OK
application NN application arg1 OK
might MD might arg1 OK
be VB be arg1 OK

you PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
on IN on arg2 OK
the DT the arg2 OK
money NN money arg2 OK
with IN with arg2 OK
that DT that arg2 OK
completely RB completely argM_adverb OK

it PRP it ^ OK
's BES 's ^ OK

i- IN ^ ^ repeat
in IN in argM_extent OK
many JJ many argM_extent OK
ways NNS ways argM_extent OK
there EX ^ ^ repeat
there EX ^ ^ repeat
there EX there arg1 OK
i- VBZ ^ ^ repeat
is VBZ ^ ^ repeat
is VBZ is predicate OK
an DT ^ ^ repeat
an DT an arg2 OK
over RB ^ ^ repeat
over RB over arg2 OK
reliance NN ^ ^ repeat
reliance NN reliance arg2 OK
on IN on arg2 OK
the DT the arg2 OK
convenience NN convenience arg2 OK
factor NN factor arg2 OK
of IN of arg2 OK
technology NN technology arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that DT that arg1 OK
is VBZ is predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
very RB very arg2 OK
valid JJ valid arg2 OK
argument NN argument arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
difficult JJ difficult arg2 OK
one NN one arg2 OK
because IN because argM_cause OK
you PRP you arg0 OK
could MD could argM_cause OK
look VB look argM_cause OK
at IN at arg1 OK
it PRP it arg1 OK
not RB not arg2 OK
just RB just arg2 OK
from IN from arg2 OK
computers NNS computers arg2 OK
standpoint NN standpoint arg2 OK
but CC but arg2 OK
from IN from arg2 OK
electronics NNS electronics arg2 OK

not RB not ^ OK
even RB even ^ OK
electronics NNS electronics ^ OK
in IN in ^ OK
general JJ general ^ OK
but CC but ^ OK
any DT any ^ OK
tools NNS tools ^ OK
that WDT that ^ OK
we PRP we ^ OK
used VBD used ^ OK

unfortunately RB unfortunately argM_adverb OK
our PRP our arg1 OK
whole JJ whole arg1 OK
foundation NN foundation arg1 OK
of IN of arg1 OK
society NN society arg1 OK
's HVS 's ^ OK
been VBN been ^ OK
driven VBN driven predicate OK
more RBR more arg2 OK
towards IN towards arg2 OK
a DT a arg2 OK
convenience NN convenience arg0 OK
oriented VBN oriented arg2 OK
society NN society arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
cashier NN cashier arg1 OK
at IN at argM_loc OK
a DT a argM_loc OK
cash NN cash argM_loc OK
register NN register argM_loc OK
who WP who arg1 OK
's BES 's ^ OK
scanning VBG scanning predicate OK
items NNS items arg1 OK
across RB across argM_loc OK
on IN on argM_loc OK
a DT a argM_loc OK
bar NN bar argM_loc OK
code NN code argM_loc OK
scanner NNP scanner argM_loc OK
and CC and ^ OK
you PRP is predicate false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
not RB not arg2 OK
exactly RB exactly arg2 OK
sure JJ sure arg2 OK
what WP what arg2 OK
the DT the arg1 OK
individual JJ individual arg1 OK
prices NNS prices arg1 OK
are VBP are arg2 OK

and UNK ^ ^ false_start
also UNK ^ ^ false_start
and UNK ^ ^ false_start
when UNK when argM_tmp OK
it UNK it arg0 OK
comes UNK comes predicate OK
time UNK time arg1 OK
to UNK to arg1 OK
get UNK get arg1 OK
your UNK your arg0 OK
change UNK change arg1 OK
you UNK you arg1 OK
're UNK 're predicate OK
absolutely UNK absolutely argM_adverb OK
right UNK right arg2 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
good JJ ^ ^ repeat
good JJ good ^ OK

^ ^ ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
really RB really argM_extent OK
good JJ good arg2 OK
point NN point arg2 OK

i PRP i ^ OK
'm VBP 'm ^ OK
like RP like ^ OK
hm UH ^ ^ filler

heck UH ^ ^ filler
yeah UH yeah ^ OK

it PRP it arg1 OK
's BES 's predicate OK
also RB also arg2 OK
one CD one arg2 OK
of IN of arg2 OK
the DT the arg2 OK
mo- RBS ^ ^ repeat
most RBS most arg2 OK
hectic JJ hectic arg2 OK
times NNS times arg2 OK
though RB though ^ OK

well UH ^ ^ filler
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you arg0 OK
get VBP ^ ^ repeat
get VBP ^ ^ repeat
get VBP get predicate OK
all DT ^ ^ repeat
everybody NN everybody arg1 OK
coming VBG coming arg1 OK
in RB in arg4 OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
you PRP you arg0 OK
like IN ^ ^ repeat
're VBP ^ ^ false_start
like RP say predicate false_start
well UH ^ ^ filler
this DT ^ ^ repeat
is VBZ ^ ^ false_start
my PRP ^ ^ false_start
place NN ^ ^ false_start
to TO ^ ^ false_start
this DT this arg1 OK
my PRP is predicate false_start
my PRP my arg2 OK
home NN home arg2 OK
town NN town arg2 OK

actually RB actually ^ OK
we PRP ^ ^ repeat
we PRP we arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
only RB only arg2 OK
forty CD forty arg2 OK
minutes NNS minutes arg2 OK
from IN from arg2 OK
m- XX ^ ^ false_start
grand NNP grand arg2 OK
central NNP central arg2 OK
station NNP station arg2 OK

because IN because ^ OK
we PRP we arg0 OK
have VB had predicate false_start
this DT ^ ^ repeat
this DT this arg0 OK
bank NN bank arg0 OK
move VB move arg1 OK
in RB in arg2 OK

like UH ^ ^ filler
new NNP new arg0 OK
york NNP york arg0 OK
at RB at ^ OK
least RB least ^ OK
has VBZ ^ ^ repeat
has VBZ has predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
travel NN travel arg1 OK
routes NNS routes arg1 OK
that WDT that ^ OK
you PRP you arg0 OK
can MD can ^ OK
take VB take predicate OK
even RB even ^ OK
though IN though ^ OK
they PRP they arg1 OK
're VBP 're ^ OK
jam NN jam ^ OK
packed VBN packed predicate OK

you PRP you ^ OK
're VBP ^ ^ false_start
like RP ^ ^ false_start
come VB ^ ^ false_start
on RP think ^ false_start
like RP _ARG_ ^ false_start

we PRP ^ ^ repeat
had VBD ^ ^ false_start
we PRP we arg0 OK
're VBP 're ^ OK
supposed VBN supposed predicate OK
to TO to arg1 OK
talk VB talk arg1 OK
about IN about arg1 OK
what WDT what arg1 OK
holiday NN holiday arg1 OK
we PRP we arg0 OK
would MD would arg1 OK
create VB create arg1 OK

you PRP you arg0 OK
're VBP ^ ^ false_start
like RP say predicate false_start
oh UH ^ ^ filler
that DT that arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
guess NN guess arg2 OK

w- NN ^ arg2 repeat
what WP ^ ^ repeat
what WDT what arg1 OK
countries NNS countries arg1 OK
would MD would ^ OK
be VB be predicate OK
five CD the ^ false_start
five CD five arg2 OK
that WDT that arg2 OK
you PRP you arg0 OK
would MD would arg2 OK
at RB at arg2 OK
least RB least arg2 OK
think VB think arg2 OK
about IN about arg2 OK
before NP-2 before argM_tmp OK
saying IN saying argM_tmp OK
no VBG no arg1 OK

where WRB ^ ^ repeat
where WRB where arg2 OK
in IN in arg2 OK
a UH ^ ^ repeat
africa NNP africa arg2 OK
is VBZ is predicate OK
it PRP it arg1 OK

um UH ^ ^ filler
ah UH ^ ^ filler
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
p- JJ ^ ^ repeat
pretty RB pretty arg2 OK
positive JJ positive arg2 OK
i PRP i arg2 OK
would MD would arg2 OK
n't RB n't arg2 OK
either RB either arg2 OK

i PRP i ^ OK
'll MD 'll ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
problems NNS problems arg1 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
with IN with arg2 OK
you PRP you arg2 OK

there EX there arg1 OK
are VBP are predicate OK
some DT some arg1 OK
countries NNS countries arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
think VBP think arg1 OK
are VBP are arg1 OK
great JJ great arg2 OK
that WDT and ^ false_start
um UH ^ ^ repeat
that WDT that arg1 OK
i PRP i arg0 OK
've VBP 've arg1 OK
ha- VBP ^ ^ repeat
been VBN been arg1 OK
able JJ able arg2 OK
to TO to arg2 OK
visit VB visit arg2 OK
and NP-2 and arg1 OK
had CC had arg1 OK
just VBD just arg1 OK
an RB an arg1 OK
amazing DT amazing arg1 OK
time JJ time arg1 OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
th- XX th- ^ OK

eh UH ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
lived VBD lived predicate OK
there RB there argM_loc OK
for IN ^ ^ repeat
for IN for argM_tmp OK
si- CD ^ ^ repeat
six CD six argM_tmp OK
and CC and argM_tmp OK
a DT a argM_tmp OK
half NN half argM_tmp OK
months NNS months argM_tmp OK
actually RB actually ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
loved VBD loved predicate OK
it PRP it arg1 OK

but CC ^ ^ false_start
i PRP i arg0 OK
would MD would ^ OK
include VB include predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
entire JJ entire arg1 OK
u. NNP u. arg1 OK
k. NNP k. arg1 OK
which WDT ^ ^ repeat
which WDT which arg0 OK
would MD ^ ^ repeat
would MD would ^ OK
be VB ^ ^ repeat
i- NNP ^ ^ repeat
i- NNP ^ ^ repeat
include VB include predicate OK
ireland NNP ireland arg1 OK
um UH ^ ^ filler
as RB as ^ OK
well RB well ^ OK

but CC ^ ^ false_start
i PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i- XX i- ^ OK
that IN that ^ OK

i PRP ^ ^ false_start
w- VBD ^ ^ false_start
both DT both ^ OK
working VBG working ^ OK
and CC and ^ OK
play- VBG play- ^ OK

um UH ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
between IN between argM_tmp OK
you PRP ^ ^ filler
know VBP ^ ^ filler
times NNS times argM_tmp OK
that WDT that argM_tmp OK
i PRP i argM_tmp OK
was VBD was argM_tmp OK
there RB there argM_tmp OK
on IN on argM_tmp OK
business NN business argM_tmp OK
i NP-ADV-1 i arg1 OK
've PRP 've ^ OK
been VBP been predicate OK
able VBN able arg2 OK
to JJ to arg2 OK
go TO go arg2 OK
back VB back arg_particl OK
for RB for arg2 OK
pleasure IN pleasure arg2 OK

but CC ^ ^ false_start
the DT the arg1 OK
bottom JJ bottom arg1 OK
line NN line arg1 OK
is VBZ is predicate OK
i PRP i arg0 OK
do VBP do arg2 OK
n't RB n't argM_neg OK
know VB know arg2 OK
that IN that arg1 OK
i PRP i arg1 OK
want VBP want arg1 OK
to TO to arg1 OK
give VB give arg1 OK
up RP up arg_particl OK
coming VBG coming arg1 OK
back RB back arg4 OK
to IN to arg4 OK
the DT the arg4 OK
u. NNP u. arg4 OK
s. NNP s. arg4 OK
for IN for argM_tmp OK
the DT the argM_tmp OK
rest NN rest argM_tmp OK
of IN of argM_tmp OK
my PRP my argM_tmp OK
life NN life argM_tmp OK

ah UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
a DT a arg1 OK
million CD million arg1 OK
dollars NNS dollars arg1 OK
does VBZ does argM_neg OK
n't RB n't argM_neg OK
go VB go predicate OK
very RB very arg4 OK
far RB far arg4 OK
these DT these argM_tmp OK
days NNS days argM_tmp OK
i PRP ^ ^ filler
'm VBP ^ ^ filler
tell- VBG ^ ^ filler

wh- WP ^ ^ repeat
what WP ^ ^ repeat
what WP what arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
with IN ^ ^ repeat
with IN with arg2 OK
you PRP you arg2 OK
and CC and arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
you XX ^ ^ repeat
new NNP new arg2 OK
york NNP york arg2 OK
attitude NN attitude arg2 OK

the DT the ^ OK
what UH what ^ OK

so RB ^ ^ false_start
ru- JJ ^ ^ false_start
why WRB why ^ OK
are VBP are predicate OK
you PRP you arg1 OK
so RB so arg2 OK
rude JJ rude arg2 OK

and CC ^ ^ false_start
we PRP we ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't argM_neg OK
do VB do predicate OK
the DT the arg1 OK
whole JJ whole arg1 OK
subway NN subway arg1 OK
thing NN thing arg1 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
a DT a arg2 OK
taxi NN taxi arg2 OK
person NN person arg2 OK
when WRB when argM_tmp OK
i PRP i arg1 OK
'm VBP 'm argM_tmp OK
in IN in arg2 OK
new NNP new arg2 OK
york NNP york arg2 OK

i PRP i ^ OK

i PRP i arg0 OK
tell VBP tell predicate OK
the DT the arg2 OK
cab NN cab arg2 OK
driver NN driver arg2 OK
thi- DT ^ ^ repeat
this DT ^ ^ repeat
these DT these arg1 OK
is VBZ ^ ^ repeat
are VBP are arg1 OK
the DT the arg2 OK
streets NNS streets arg2 OK
that WDT that arg2 OK
you PRP you arg0 OK
need VBP need arg2 OK
to TO to arg1 OK
take VB take arg1 OK
to TO to arg2 OK
get VB get arg2 OK
me PRP me arg1 OK
there RB there arg2 OK
because IN because arg1 OK
i PRP i arg0 OK
've VBP 've arg1 OK
been VBN been arg1 OK
there RB there arg2 OK
enough RB enough arg2 OK
to TO to arg2 OK
know VB know arg2 OK
where WRB where arg4 OK
i PRP i arg0 OK
'm VBP 'm arg1 OK
going VBG going arg1 OK

it NNS it ^ OK
it PRP ^ ^ repeat
's S-1 ^ ^ repeat
's PRP 's ^ OK
hard BES ^ ^ repeat
hard S-2 hard ^ OK
to JJ ^ ^ repeat
to BES to ^ OK
be TO ^ ^ repeat
be JJ be ^ OK
frie- VB ^ ^ repeat
friends TO friends ^ OK
with VB with ^ OK
poor NNS poor ^ OK
people IN people ^ OK

what WP ^ ^ repeat
what WP what ^ OK
can MD ^ ^ repeat
can MD can ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
do VB do ^ OK
together RB together ^ OK

i PRP ^ ^ false_start
wou- MD ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK

i- XX ^ ^ repeat
e- XX ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
c- JJ ^ ^ repeat
curious JJ curious ^ OK
too SBAR-1 to ^ false_start
whether RB whether ^ OK
um IN ^ ^ filler
women UH women ^ OK
have NNS have ^ OK
more VBP more ^ OK
close RBR close ^ OK
f- JJ ^ ^ repeat
friends NNS friends ^ OK
or NNS or ^ OK
best CC best ^ OK
friends JJS friends ^ OK
than NNS than ^ OK
men IN men ^ OK
do NNS do ^ OK

i PRP i ^ OK
would MD would ^ OK
say VB say ^ OK
i PRP ^ ^ repeat
well UH ^ ^ filler
i PRP i ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
my PRP my ^ OK
sister NN sister ^ OK

but CC but ^ OK
um UH ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
a DT a ^ OK
very RB very ^ OK
close JJ close ^ OK
girlfriend NN girlfriend ^ OK
that WDT that ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
could MD ^ ^ repeat
could MD could ^ OK
t- VB ^ ^ repeat
tell VB tell ^ OK
anything NN anything ^ OK
to IN to ^ OK

and CC ^ ^ false_start
she PRP ^ ^ repeat
she PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
known VBN known ^ OK
her PRP her ^ OK
for IN ^ ^ false_start
probably RB ^ ^ repeat
oh UH ^ ^ filler
gosh UH ^ ^ filler
probably RB probably ^ OK
since IN ^ ^ repeat
since IN since ^ OK
ninety-four CD ninety-four ^ OK
that WRB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
th- WRB ^ ^ repeat
that IN that ^ OK
she PRP ^ ^ repeat
we PRP we ^ OK
's HVS ^ ^ repeat
've VBP 've ^ OK
been VBN ^ ^ repeat
been VBN been ^ OK
close JJ close ^ OK

so UH so ^ OK
that DT that ^ OK
's BES 's ^ OK
you PRP a ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
pretty RB ^ ^ repeat
pretty RB pretty ^ OK
long JJ long ^ OK
time NN time ^ OK

and CC ^ ^ false_start
she PRP ^ ^ false_start
and CC ^ ^ false_start
the DT the ^ OK
same JJ same ^ OK
way NN way ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
would MD ^ ^ repeat
would MD would ^ OK
stop- VB ^ ^ repeat
drop VB drop ^ OK
uh UH ^ ^ filler
anything NN anything ^ OK
for IN for ^ OK
her PRP her ^ OK
because IN because ^ OK
she PRP ^ ^ repeat
she PRP she ^ OK
's HVS ^ ^ repeat
's HVS 's ^ OK
got VBN got ^ OK
a DT a ^ OK
very RB very ^ OK
good JJ good ^ OK
heart NN heart ^ OK

i PRP i ^ OK
would MD would ^ OK
feel VB feel ^ OK
bad JJ bad ^ OK
if IN ^ ^ repeat
if IN if ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
w- MD ^ ^ repeat
would MD would ^ OK
n't RB n't ^ OK
reciprocate VB reciprocate ^ OK

but CC but ^ OK
uh UH uh ^ OK

it PRP it ^ OK
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
great JJ ^ ^ repeat
great JJ great ^ OK
friendship NN friendship ^ OK

w- XX ^ ^ repeat
di- VBD ^ ^ repeat
he PRP he ^ OK
did VBD did ^ OK
n't RB n't ^ OK
have VB have ^ OK
a DT a ^ OK
reason NN reason ^ OK
for IN for ^ OK
it PRP it ^ OK

we PRP we ^ OK
recently RB ^ ^ repeat
well UH ^ ^ filler
it PRP ^ ^ repeat
recently RB ^ ^ repeat
recently RB recently ^ OK
got VBD got ^ OK
the DT the ^ OK
money NN money ^ OK

but CC but ^ OK
we PRP we ^ OK
had VBD had ^ OK
done VBN done ^ OK
s- NN ^ ^ repeat
something NN something ^ OK
similar JJ similar ^ OK
to IN to ^ OK
that DT that ^ OK
oh UH ^ ^ filler
maybe RB maybe ^ OK
two CD two ^ OK
years NNS years ^ OK
ago RB ago ^ OK

and CC ^ ^ false_start
somebody NN somebody ^ OK
said VBD said ^ OK
they PRP they ^ OK
were VBD were ^ OK
going VBG going ^ OK
to TO to ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
pay VB ^ ^ repeat
pay VB pay ^ OK
us PRP ^ ^ repeat
us PRP us ^ OK
back RP back ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
within IN within ^ OK
the DT the ^ OK
last JJ last ^ OK
three CD three ^ OK
months NNS months ^ OK
then RB ^ ^ false_start
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
^ ^ sudden ^ OK
he PRP he ^ OK
came VBD came ^ OK
up RP up ^ OK
with IN with ^ OK
the DT the ^ OK
money NN money ^ OK

so UH so ^ OK
it PRP it ^ OK
was VBD was ^ OK
a DT a ^ OK
good JJ good ^ OK
thing NN thing ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
it PRP it ^ OK
was VBD was ^ OK
like RP like ^ OK
god UH god ^ OK
how WRB how ^ OK
do VBP do ^ OK
you PRP you ^ OK
ask VB ask ^ OK

so UH ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
a DT ^ ^ false_start
lo- NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
something NN ^ ^ false_start
to TO ^ ^ false_start
just RB ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ filler
well UH ^ ^ filler
seven CD seven ^ OK
hundred CD hundred ^ OK
is VBZ is ^ OK
n't RB n't ^ OK
something NN something ^ OK
to TO to ^ OK
you PRP _ARG_ ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
you PRP you ^ OK
get VBP get ^ OK
over IN over ^ OK
it PRP it ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
we PRP we ^ OK
would MD would ^ OK
talk VB talk ^ OK
to IN to ^ OK
them PRP them ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
s- VB ^ ^ repeat
see VB see ^ OK
them PRP them ^ OK

but CC but ^ OK
they PRP they ^ OK
would MD would ^ OK
never RB never ^ OK
bring VB ^ ^ repeat
bring VB bring ^ OK
up RP ^ ^ repeat
up RP up ^ OK
the DT the ^ OK
money NN money ^ OK
thing NN thing ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
'll MD ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
never RB never ^ OK
said VBD said ^ OK
a DT a ^ OK
word NN word ^ OK

and CC ^ ^ false_start
then RB then ^ OK
all DT all ^ OK
of IN of ^ OK
the DT ^ ^ false_start
a DT a ^ OK
sudden JJ sudden ^ OK
he PRP he ^ OK
calls VBZ calls ^ OK
one CD one ^ OK
day NN day ^ OK
and CC and ^ OK
says VBZ says ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what ^ OK
's BES 's ^ OK
your PRP your ^ OK
zip NN zip ^ OK
code NN code ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ false_start
e- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
we PRP ^ ^ false_start
thought VBD ^ ^ false_start
when WRB when ^ OK
we PRP we ^ OK
got VBD got ^ OK
the DT the ^ OK
first JJ first ^ OK
one NN one ^ OK
we ADVP-TMP- 1 we ^ OK
like PRP said ^ false_start
oh UH oh ^ OK
well UH well ^ OK
we UH we ^ OK
'll PRP 'll ^ OK
wait MD wait ^ OK
another VB another ^ OK
two DT two ^ OK
years CD years ^ OK
to NNS to ^ OK
see TO see ^ OK
the VB the ^ OK
rest DT rest ^ OK
of NN of ^ OK
it IN it ^ OK

but CC but ^ OK
it PRP it ^ OK
happened VBD happened ^ OK
w- IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
within IN within ^ OK
a DT a ^ OK
month NN month ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
like RP like ^ OK
wow UH wow ^ OK
all UH all ^ OK
right UH right ^ OK

because UH because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
thinking VBG thinking ^ OK
oh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they- PRP ^ ^ false_start
f- XX ^ ^ false_start
you PRP you ^ OK
should MD should ^ OK
n't RB n't ^ OK
even RB even ^ OK
have VB have ^ OK
to TO to ^ OK

eh UH ^ ^ filler
um UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
it PRP ^ ^ repeat
probably RB probably ^ OK
does VBZ does ^ OK
have VB have ^ OK
like UH ^ ^ filler
a DT a ^ OK
pretty RB pretty ^ OK
good JJ good ^ OK
effect NN effect ^ OK

um UH ^ ^ filler
but CC but ^ OK
there EX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
are VBP ^ ^ false_start
's BES 's ^ OK
like IN like ^ OK
other JJ other ^ OK
weird NN weird ^ OK
stuff NN stuff ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
where WRB where ^ OK
like UH ^ ^ filler
people NNS people ^ OK
will MD will ^ OK
get VB get ^ OK
like UH ^ ^ filler
searched VBD searched ^ OK
all PDT all ^ OK
the DT the ^ OK
time NN time ^ OK

because IN ^ ^ false_start
of IN ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
like UH ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
a DT a ^ OK
friend NN friend ^ OK
who WP who ^ OK
's BES 's ^ OK
israeli JJ israeli ^ OK

exactly UH ^ ^ false_start
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
had VBD had ^ OK
like UH ^ ^ filler
another DT another ^ OK
friend NN friend ^ OK
who WP who ^ OK
like UH ^ ^ filler
would MD would ^ OK
go VB go ^ OK
to IN to ^ OK
like UH ^ ^ filler
protests NNS protests ^ OK
an- NAC-2 ^ ^ false_start
all CC all ^ OK
the PDT the ^ OK
time DT time ^ OK
and NN ^ ^ false_start
stuff CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start
like DT ^ ^ filler
i- UH ^ ^ false_start
like XX ^ ^ filler
for UH for ^ OK
like IN ^ ^ filler
th- UH the ^ false_start
uh DT ^ ^ filler
world UH world ^ OK
bank NNP bank ^ OK
and NNP ^ ^ false_start
stuff CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

and CC ^ ^ false_start
like UH ^ ^ filler
every DT every ^ OK
time NN time ^ OK
he PRP he ^ OK
flies VBZ flies ^ OK
he PRP he ^ false_start
gets ADVP-TMP- 1 gets ^ OK
pulled VBZ pulled ^ OK
out VBN out ^ OK
like RP ^ ^ filler
randomly UH randomly ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
like UH ^ ^ filler
like UH ^ ^ filler
when WRB ^ ^ false_start
i PRP ^ ^ false_start
my PRP my ^ OK
israeli JJ israeli ^ OK
friend NN friend ^ OK
she PRP ^ ^ false_start
does VBZ ^ ^ repeat
does VBZ does ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
con- XX ^ ^ repeat
seem VB seem ^ OK
to TO to ^ OK
mind VB mind ^ OK
very RB very ^ OK
much RB much ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
because UH because ^ OK
i PRP i ^ OK
mean VBP mean ^ OK
like UH like ^ OK
they PRP they ^ OK
ca- MD ca- ^ OK
you PRP you ^ OK
know VBP know ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

this DT ^ ^ repeat
this DT this ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
the DT ^ ^ repeat
the DT the ^ OK
f- JJ ^ ^ repeat
first JJ first ^ OK
one CD one ^ OK
like UH ^ ^ filler
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
called VBN called ^ OK
for IN for ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
they PRP they ^ OK
just RB just ^ OK
cut VB cut ^ OK
us PRP us ^ OK
off RP off ^ OK
eventually RB eventually ^ OK

but CC but ^ OK
um UH um ^ OK

the DT ^ ^ false_start
airport NN airport ^ OK
security NN security ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
a DT a ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
quick JJ ^ ^ repeat
quick JJ quick ^ OK
um UH ^ ^ filler
thing NN thing ^ OK

what WP what ^ OK
do VBP do ^ OK
you PRP you ^ OK
th- VB th- ^ OK

and CC ^ ^ false_start
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
always RB always ^ OK
the DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what ^ OK
they PRP they ^ OK
say VBP say ^ OK
about IN about ^ OK
like UH ^ ^ filler
guns NNS guns ^ OK
at IN at ^ OK
home NN home ^ OK
too RB too ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
is VBZ is ^ OK
that IN that ^ OK
like UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
like UH ^ ^ filler
guns NNS guns ^ OK
like UH ^ ^ filler
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
care VB care ^ OK
like UH ^ ^ filler
who WP who ^ OK
's BES 's ^ OK
shooting VBG shooting ^ OK
them PRP them ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ false_start
like UH ^ ^ filler
if IN if ^ OK
like UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
gun NN gun ^ OK
for IN for ^ OK
the DT the ^ OK
pilot NN pilot ^ OK

like UH ^ ^ filler
if IN if ^ OK
they PRP they ^ OK
they PRP ^ ^ false_start
can MD can ^ OK
like UH ^ ^ filler
spray VB spray ^ OK
the DT the ^ OK
pilot NN pilot ^ OK
or CC or ^ OK
something NN something ^ OK
and CC and ^ OK
you PRP you ^ OK
get VB get ^ OK
the DT the ^ OK
gun NN gun ^ OK
from IN from ^ OK
him PRP him ^ OK
then RB then ^ OK

me PRP me ^ OK
neither RB neither ^ OK

it PRP it ^ OK
probably RB probably ^ OK
at RB at ^ OK
least RBS least ^ OK
like UH ^ ^ filler
will MD will ^ OK
prevent VB prevent ^ OK
like UH ^ ^ filler
like UH ^ ^ filler
like UH ^ ^ filler
just RB just ^ OK
the DT ^ ^ repeat
like UH ^ ^ filler
the DT the ^ OK
r- JJ ^ ^ repeat
random JJ random ^ OK
like UH ^ ^ filler
attack NN attack ^ OK
type NN type ^ OK
people NNS of ^ false_start
people NNS people ^ OK

like UH ^ ^ filler
like UH ^ ^ filler
probably RB probably ^ OK
if IN ^ ^ repeat
if IN ^ ^ repeat
like UH ^ ^ filler
if IN ^ ^ false_start
al NNP al ^ OK
qaeda NNP qaeda ^ OK
or CC or ^ OK
something NN something ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
good JJ good ^ OK
in IN in ^ OK
that DT that ^ OK
regard NN regard ^ OK

i PRP ^ ^ repeat
still RB ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB ^ ^ repeat
not RB not ^ OK
totally RB totally ^ OK
convinced JJ convinced ^ OK
convinced JJ ^ ^ false_start
's BES that ^ false_start
it PRP it ^ OK
's BES 's ^ OK
never RB never ^ OK
going VBG going ^ OK
to TO to ^ OK
happen VB happen ^ OK
again RB again ^ OK
though RB though ^ OK

i PRP i ^ OK
go VBP go ^ OK
to IN to ^ OK
a- XX ^ ^ false_start
ohio NNP ohio ^ OK
state NNP state ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
well UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK
about JJ about ^ OK
to TO to ^ OK
do VB do ^ OK
like UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
uh UH ^ ^ filler
fiesta NNP fiesta ^ OK
bowl NNP bowl ^ OK
there RB there ^ OK

they PRP they ^ OK
had VBD had ^ OK
like UH ^ ^ filler
like UH ^ ^ filler
nineteen CD ^ ^ false_start
twenty CD twenty ^ OK
ca- NNS ^ ^ false_start
cars NNS cars ^ OK
flipped VBN flipped ^ OK
and NP and ^ OK
all CC all ^ OK
these PDT these ^ OK
cars DT cars ^ OK
set NNS set ^ OK
on VBN on ^ OK
fire IN fire ^ OK
and NN ^ ^ false_start
stuff CC ^ ^ false_start

like UH ^ ^ filler
a DT a ^ OK
ton NN ton ^ OK
of IN of ^ OK
them PRP them ^ OK
were VBD were ^ OK
on IN on ^ OK
like UH ^ ^ filler
this DT this ^ OK
street NN street ^ OK
i PRP i ^ OK
lived VBD lived ^ OK
on IN on ^ OK
like NP-1 ^ ^ filler
just UH just ^ OK
last RB last ^ OK
year JJ year ^ OK

it PRP it ^ OK
's BES 's ^ OK
like UH ^ ^ filler
real RB ^ ^ repeat
real RB real ^ OK
w- JJ ^ ^ repeat
weird JJ weird ^ OK

i PRP ^ ^ repeat
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
almost RB almost ^ OK
like UH ^ ^ filler
right RB right ^ OK
in IN in ^ OK
the DT the ^ OK
middle NN middle ^ OK
of IN of ^ OK
it PRP it ^ OK

eh UH ^ ^ filler
we PRP we ^ OK
beat VBD beat ^ OK
michigan NNP michigan ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they ^ OK
beat VBD beat ^ OK
us PRP us ^ OK
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
time NN time ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
looked VBN looked ^ OK
uh UH ^ predicate filler
at IN at arg1 OK
that DT that arg1 OK
lately RB lately arg1 OK

but CC but ^ OK
it PRP ^ ^ false_start
u- XX ^ ^ filler
that DT that ^ OK
's BES 's predicate OK
true JJ true arg2 OK

so UH ^ ^ false_start
like UH ^ ^ false_start
you PRP ^ ^ false_start
left VBD ^ ^ false_start
like UH ^ ^ false_start
what WP what ^ OK
if IN ^ ^ repeat
if IN if ^ OK
you PRP you arg0 OK
could MD could ^ OK
find VB find predicate OK
some DT some arg0 OK
investment NN investment arg0 OK
to TO to arg1 OK
throw VB throw arg1 OK
your PRP your arg1 OK
million CD million arg1 OK
in IN in arg2 OK
that NP-1 that arg1 OK
paid DT paid arg1 OK
like VBN like arg1 OK
maybe UH ^ ^ repeat
five RB five arg1 OK
percent CD percent arg1 OK
which NN which ^ OK
would WDT would ^ OK
probably MD probably ^ OK
be RB be predicate OK
hard VB hard arg2 OK
to JJ to arg2 OK
find TO find arg2 OK
today VB today arg2 OK

well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
how WRB how arg2 OK
old JJ old arg2 OK
you PRP you arg1 OK
are VBP are arg1 OK

well UH ^ ^ filler
d- XX ^ ^ repeat
so UH ^ ^ false_start
you PRP you arg0 OK
never RB never ^ OK
thought VBD thought predicate OK
of IN of arg1 OK
like UH ^ ^ filler
the DT the arg1 OK
caribbean NNP caribbean arg1 OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

my PRP my arg1 OK
husband NN husband arg1 OK
he PRP ^ ^ false_start
just RB ^ ^ repeat
well UH ^ ^ filler
just RB just ^ OK
passed VBD ^ ^ repeat
pass- VBD ^ ^ repeat
passed VBD passed predicate OK
the DT ^ ^ repeat
the DT the arg2 OK
bar NN bar arg2 OK

well UH ^ ^ filler
his PRP ^ ^ repeat
he PRP ^ ^ repeat
he PRP he arg1 OK
's BES 's predicate OK
in IN in arg2 OK
a DT a arg2 OK
unique JJ unique arg2 OK
position NN position arg2 OK
that IN that ^ OK
he PRP he arg0 OK
had VBD had predicate OK
a DT a arg1 OK
career NN career arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
he PRP he arg1 OK
went VBD went predicate OK
back RB back arg2 OK
to IN to arg2 OK
law NN law arg2 OK
school NN school arg2 OK
v- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
through IN through ^ OK
his PRP his ^ OK
company NN company ^ OK

well UH ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
have VB have predicate OK
him PRP him arg0 OK
sign VB sign arg1 OK
a DT a arg1 OK
contract NN contract arg1 OK

well UH ^ ^ filler
i PRP i arg0 OK
heard VBD heard predicate OK
my PRP my arg1 OK
world NN world arg1 OK
is VBZ is arg1 OK
blue JJ ^ ^ repeat
blue JJ ^ ^ repeat
blue JJ blue arg2 OK
three CD three arg1 OK
times NNS times arg1 OK

well UH ^ ^ filler
i PRP i arg0 OK
figure VBP figure predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
easier JJR easier arg2 OK
if IN if arg2 OK
we PRP we arg0 OK
call VBP call arg2 OK
in RP in arg2 OK

we PRP we arg0 OK
can MD can ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
d- VB ^ ^ repeat
do VB do predicate OK
it PRP it arg1 OK
on IN on arg1 OK
our PRP our arg1 OK
own JJ own arg1 OK
time NN time arg1 OK

well UH ^ ^ filler
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg1 OK
go VB go predicate OK
online JJ online arg4 OK
a DT a ^ OK
lot NN lot ^ OK

uh UH ^ ^ filler
well UH ^ ^ filler
there EX ^ ^ false_start
's BES ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
found VBD found predicate OK
out RP out ^ OK
a- IN ^ ^ repeat
about IN about arg1 OK
it PRP it arg1 OK
on IN on arg1 OK
a DT ^ ^ repeat
a DT a arg1 OK
website NN website arg1 OK
called VBN called arg1 OK
volition NNP volition arg2 OK
dot NNP dot arg2 OK
com NNP com arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
someone NN someone arg0 OK
on IN on ^ OK
there RB there ^ OK
had VBD had ^ OK
said VBN said predicate OK
that IN that arg1 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
w- XX ^ ^ repeat
one CD one arg1 OK
time NN time arg1 OK
they PRP they arg0 OK
had VBD had arg1 OK
sports NNS sports arg1 OK

but CC but ^ OK
they PRP they arg0 OK
said VBD said predicate OK
the DT the arg1 OK
same JJ same arg1 OK
thing NN thing arg1 OK

it PRP ^ ^ repeat
like UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
an DT an arg2 OK
easy JJ easy arg2 OK
way NN way arg2 OK
to TO to arg2 OK
make VB make arg2 OK
thirty CD thirty arg1 OK
dollars NNS dollars arg1 OK

it PRP it arg1 OK
's BES 's predicate OK
v. NNP v. arg2 OK
o. NNP o. arg2 OK
l. NNP l. arg2 OK
i. NNP i. arg2 OK
t. NNP t. arg2 OK
i. NNP i. arg2 OK
o. NNP o. arg2 OK
n. NNP n. arg2 OK

k- XX ^ ^ repeat
you PRP you ^ OK
go VBP go ^ OK
on RP on ^ OK

and CC ^ ^ false_start
there EX there ^ OK
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
l- XX ^ ^ repeat
forum NN forum arg4 OK
you PRP you arg1 OK
can MD can arg2 OK
go VB go arg2 OK
into IN into arg4 OK

i PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i arg0 OK
actually RB actually ^ OK
do VBP ^ ^ repeat
do VBP do predicate OK
mystery NN mystery arg1 OK
shopping VBG shopping arg1 OK

and CC ^ ^ false_start
um UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
where WRB where arg2 OK
i PRP i arg0 OK
found VBD ^ ^ repeat
find VBP find arg2 OK
out RP ^ ^ repeat
out RP out arg2 OK
some DT some arg2 OK
of IN of arg2 OK
my PRP ^ ^ repeat
the DT the arg2 OK
companies NNS companies arg2 OK
that WDT that arg1 OK
i PRP i arg0 OK
work VBP work arg1 OK
for IN for arg1 OK

y- XX ^ ^ false_start
they PRP they arg0 OK
post VB post predicate OK
jobs NNS jobs arg1 OK
on IN on argM_loc OK
there RB there argM_loc OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
neat JJ ^ ^ repeat
neat JJ neat arg1 OK
little JJ ^ ^ repeat
little JJ little arg1 OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
website NN website arg1 OK

oh UH oh ^ OK
my PRP my ^ OK
gosh UH gosh ^ OK

i PRP i arg0 OK
do VBP do ^ OK
know VB know predicate OK
that IN that arg1 OK
did VBD ^ ^ false_start
n't RB ^ ^ false_start
um UH ^ ^ filler
did VBD ^ ^ false_start
eh UH ^ ^ filler
when WRB when arg1 OK
they PRP they arg0 OK
sent VBD sent arg1 OK
you PRP ^ ^ repeat
you PRP you arg2 OK
the DT the arg1 OK
email NN email arg1 OK
it ADVP-TMP- 1 it arg0 OK
said PRP said arg1 OK
something VBD something arg1 OK

di- VBD ^ ^ repeat
does VBZ does ^ OK
n't RB n't ^ OK
this DT this arg0 OK
study NN study arg0 OK
stop VB stop predicate OK
in IN in argM_tmp OK
like UH ^ ^ filler
december NNP december argM_tmp OK
or CC ^ ^ false_start
something NN ^ ^ false_start

so RB ^ ^ false_start
you- PRP you- ^ OK
in IN in ^ OK
the DT the ^ OK
midwest NN midwest ^ OK
you PRP you ^ OK
said VBD said ^ OK

u- XX ^ ^ filler
wisconsin NNP wisconsin ^ OK

so UNK ^ ^ false_start
you UNK you ^ OK
never UNK never ^ OK
had UNK had ^ OK
the UNK the ^ OK
urge UNK urge ^ OK
to UNK to ^ OK

and CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
to IN ^ ^ repeat
me PRP ^ ^ repeat
then RB then ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
still RB still ^ OK
inhaling VBG inhaling predicate OK
second JJ second arg1 OK
hand NN hand arg1 OK
smoke NN smoke arg1 OK

so UH ^ ^ false_start
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they ^ OK
even RB even ^ OK
did VBD did ^ OK
that DT that ^ OK

so UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
um UH ^ ^ filler
i- PRP ^ ^ repeat
it PRP it ^ OK
was VBD was ^ OK

i PRP i arg0 OK
said VBD said predicate OK
for IN for arg2 OK
me PRP me arg2 OK
giving VBG giving arg1 OK
up RP up arg1 OK
cigarettes NNS cigarettes arg1 OK
were VBD ^ ^ repeat
was VBD was arg1 OK
no- RB ^ ^ repeat
not RB not arg2 OK
easy JJ easy arg2 OK

and CC ^ ^ false_start
i PRP i arg1 OK
was VBD was predicate OK
like UH ^ ^ repeat
really RB really arg2 OK
a DT a arg2 OK
compulsive JJ compulsive arg2 OK
smoker NN smoker arg2 OK

because IN because ^ OK
i PRP i arg0 false_start
think VBP think predicate false_start
you PRP you arg0 OK
have VBP have arg1 OK
to TO to arg1 OK
find VB find arg1 OK
something NN something arg0 OK
to TO to arg1 OK
take VB take arg1 OK
the DT the arg1 OK
place NN place arg1 OK
because IN because ^ OK
nicotine NNP nicotine arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
addic- JJ ^ ^ repeat
addictive JJ addictive arg2 OK

it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
very RB ^ ^ repeat
an DT an arg2 OK
addic- JJ ^ ^ repeat
addiction NN addiction arg2 OK

so UH ^ ^ false_start
i PRP i arg0 OK
found VBD found predicate OK
that IN that arg1 OK
i PRP i arg0 OK
ate VBD ate arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
snacks NNS snacks arg1 OK

then RB then ^ OK
i PRP i arg0 OK
had VBD had ^ OK
to TO to ^ OK
go VB go predicate OK
to IN to arg4 OK
weight NNP weight arg4 OK
watchers NNP watchers arg4 OK
ch- XX ^ ^ filler
eh UH ^ ^ filler
to TO to ^ OK
try VB try predicate OK
to TO to arg1 OK
lose VB lose arg1 OK
the DT the arg1 OK
weight NN weight arg1 OK

for IN for arg1 OK
me PRP me arg1 OK
like UH ^ ^ filler
when WRB when arg1 OK
i PRP i arg1 OK
just RB just arg1 OK
felt VBD felt arg1 OK
like IN like arg1 OK
i PRP i arg1 OK
really RB really arg1 OK
did VBD did arg1 OK
n't RB n't arg1 OK
miss VB miss arg1 OK
them PRP them arg1 OK
and ADVP-1 and arg1 OK
i CC i arg1 OK
did PRP did arg1 OK
n't VBD n't arg1 OK
really RB really arg1 OK
need RB need arg1 OK
a VB a arg1 OK
cigarette DT cigarette arg1 OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it NN it arg0 OK
takes VBZ ^ ^ repeat
took VBD ^ ^ repeat
took ADVP-1 took predicate OK
me PRP me arg1 OK
at VBD at arg1 OK
least PRP least arg1 OK
about RB ^ ^ repeat
about IN about arg1 OK
two JJS two arg1 OK
or RB or arg1 OK
three CD three arg1 OK
years CC years arg1 OK

it PRP ^ ^ repeat
it PRP ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
what WP what arg2 OK
i PRP i arg0 OK
said VBD said arg2 OK

but CC but ^ OK
it PRP it arg0 OK
took VBD took predicate OK
me PRP me arg1 OK
at IN at arg1 OK
least JJS least arg1 OK
three CD three arg1 OK
years NNS years arg1 OK
before IN before arg1 OK
i PRP ^ ^ repeat
^ ^ i arg0 OK
just RB just arg1 OK
felt VBD felt arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
nicotine NN nicotine arg1 OK
free JJ free arg1 OK

so UH ^ ^ false_start
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do argM_neg OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
even RB ^ ^ repeat
drink VB drink predicate OK
any DT any arg1 OK
alcohol NN alcohol arg1 OK
anymore RB anymore ^ OK

anyway UH anyway ^ OK
so UH so ^ OK

so UH ^ ^ false_start
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
drink VB drink predicate OK
at IN at argM_tmp OK
night NN night argM_tmp OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
think VB think predicate OK
that IN that arg1 OK
it PRP it arg1 OK
's S-1 's arg1 OK
a BES a arg2 OK
good DT good arg2 OK
thing JJ thing arg2 OK
to NN ^ ^ repeat
to TO ^ ^ repeat
to TO to arg2 OK
have TO have arg2 OK
a VB a arg1 OK
smoke DT smoke arg1 OK
free NN free arg1 OK
environment JJ environment arg1 OK

but CC but ^ OK
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
they PRP ^ ^ repeat
they PRP ^ ^ false_start
are VBP ^ ^ repeat
feel VBP feel predicate OK
like IN ^ ^ filler
it PRP it arg1 OK
infringes VBZ infringes arg1 OK
on IN on arg1 OK
their PRP their arg1 OK
equal JJ equal arg1 OK
rights NNS rights arg1 OK

i PRP ^ ^ repeat
we PRP ^ ^ repeat
we PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
're VBP ^ ^ repeat
're VBP ^ ^ repeat
'm VBP 'm predicate OK
in IN ^ ^ repeat
in IN in arg2 OK
close JJ close arg2 OK
proximity NN proximity arg2 OK
of IN of arg2 OK
delaware NNP delaware arg2 OK

and CC and ^ OK
they PRP they ^ OK
're VBP 're ^ OK

so UH ^ ^ false_start
that DT that ^ OK
just RB just ^ OK
showed VBD showed ^ OK
how WRB how ^ OK
strong RB strong ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
meant VBD meant ^ OK
what WP what ^ OK
they PRP they ^ OK
said VBD said ^ OK
that NP-1 that ^ OK
you IN ^ ^ filler
know PRP ^ ^ filler
we VBP we ^ OK
're PRP 're ^ OK
going VBP going ^ OK
to VBG to ^ OK
enforce TO enforce ^ OK
this VB this ^ OK

and CC ^ ^ false_start
then RB then ^ OK
she PRP she arg0 OK
was VBD was ^ OK
saying VBG saying predicate OK
something NN something arg1 OK
about IN about arg1 OK
they PRP ^ arg0 false_start
were VBD them ^ false_start
setting VBG setting arg1 OK
up RP up arg_particl OK
different JJ different arg1 OK
programs NNS programs arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
uh UH ^ ^ filler
that DT that arg2 OK
would MD would arg2 OK
help VB help arg2 OK
people NNS people arg0 OK
to TO to arg1 OK
um UH ^ ^ filler
kick VB kick arg1 OK
the DT the arg1 OK
habit NN habit arg1 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
probably RB ^ ^ repeat
probably RB probably ^ OK
will MD will ^ OK
have VB have ^ OK
to TO to ^ OK
do VB do predicate OK
my PRP my arg1 OK
homework NN homework arg1 OK
when WRB when argM_tmp OK
it PRP it arg1 OK
comes VBZ comes argM_tmp OK
to IN to arg4 OK
that DT that arg4 OK

the DT the arg0 OK
ones NNS ones arg0 OK
that WDT that arg0 OK
should MD should arg0 OK
be VB be arg0 OK
ah UH ^ ^ filler
there RB there arg0 OK
are VBP are predicate OK
not RB not arg2 OK
there RB there arg2 OK
to TO to arg2 OK
hear VB hear arg2 OK
it PRP it arg1 OK

i UNK i ^ OK
would UNK would ^ OK
n't UNK n't ^ OK
i- UNK ^ ^ false_start
n- UNK ^ ^ repeat
no UNK ^ ^ false_start
let UNK let ^ OK
my UNK my ^ OK
kid UNK kid ^ OK

and CC ^ ^ repeat
n- RB ^ ^ repeat
and CC ^ ^ false_start
not RB not ^ OK
just RB just ^ OK
that DT that ^ OK
but CC but ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
the DT the ^ OK
other JJ other ^ OK
cartoons NNS cartoons ^ OK
and CC ^ ^ repeat
and CC and ^ OK
children NNS children ^ OK
programs NNS programs ^ OK
that WDT that ^ OK
's BES 's ^ OK
out IN out ^ OK
here RB here ^ OK
too RB too ^ OK

i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
seven CD seven arg1 OK
year NN year arg1 OK
old JJ old arg1 OK

uh UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
because IN because arg2 OK
they PRP ^ ^ false_start
're VBP ^ ^ false_start
probably RB ^ ^ false_start
not RB ^ ^ repeat
not RB ^ ^ false_start
parents NNS parents arg0 OK
or CC are arg2 false_start
not RB not arg2 OK
seein- VBG ^ ^ repeat
seeing VBG seeing arg2 OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the arg1 OK
point NN point arg1 OK

we- UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
so IN ^ ^ false_start
that IN ^ ^ false_start
th- DT ^ ^ repeat
the DT ^ ^ false_start
kid NN ^ ^ false_start
's POS ^ ^ false_start
eyes NNS ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
well UH ^ ^ filler
how WRB how ^ OK
is VBZ is ^ OK
it PRP it arg0 OK
affecting VBG affecting predicate OK
them PRP them arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ filler
like UH ^ ^ filler
uh UH ^ ^ filler
because IN because ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
get VBP get predicate OK
u- XX ^ ^ false_start
you PRP ^ ^ repeat
know VBP ^ ^ repeat
this DT ^ ^ false_start
the DT ^ ^ repeat
the DT the arg1 OK
same JJ same arg1 OK
thing NN thing arg1 OK
with IN with ^ OK
these DT these ^ OK
movies NNS movies ^ OK

one CD one ^ OK
thousand CD thousand ^ OK
and CC and ^ OK
one CD one ^ OK
dalmatians NNS dalmatians ^ OK
and CC and ^ OK
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
then RB then ^ OK
i PRP i arg0 OK
get VBP get predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
w- XX ^ ^ false_start
a DT a arg1 OK
kickback NN kickback arg1 OK
from IN from arg2 OK
their PRP their arg2 OK
friends NNS friends arg2 OK
' POS ' arg2 OK
parents NNS parents arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
well UH ^ ^ filler
your PRP your arg0 OK
daughter NN daughter arg0 OK
's BES 's ^ OK
teaching VBG teaching predicate OK
m- PRP ^ ^ repeat
my PRP my arg2 OK
daughter NN daughter arg2 OK
this DT this arg1 OK
word NN word arg1 OK

but CC but ^ OK
then RB then ^ OK
again RB again ^ OK

when WRB ^ ^ false_start
cartoons NNS ^ ^ false_start
were VBD ^ ^ false_start
nowadays RB ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
how WRB how arg2 OK
old JJ old arg2 OK
you PRP you arg1 OK
are VBP are arg1 OK

but UNK but ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
i UNK i ^ OK
'm UNK 'm ^ OK
back UNK back ^ OK
in UNK in ^ OK
the UNK the ^ OK

and CC ^ ^ false_start
nowadays RB nowadays argM_tmp OK
it PRP ^ ^ repeat
's BES ^ ^ false_start
like IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
seems VBZ seems predicate OK
like IN like arg1 OK
all PDT all arg0 OK
these DT these arg0 OK
it NP-1 ^ ^ false_start
video NN video arg0 OK
it NP-1 ^ ^ false_start
games NNS games arg0 OK
it NP-1 ^ ^ false_start
and CC and arg0 OK
it NP-1 ^ ^ false_start
things NNS things arg0 OK
it NP-1 ^ ^ false_start
kids NNS kids arg0 OK
watch VBP watch arg0 OK
takes PRP take arg1 false_start
effect VBZ effect arg1 OK
on NN on arg1 OK
them IN them arg1 OK

and CC ^ ^ false_start
they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
do VB do arg1 OK
some DT some arg1 OK
crazy JJ crazy arg1 OK
stuff NN stuff arg1 OK
or CC or ^ OK
re- VBD ^ ^ repeat
reacted VBN reacted predicate OK
in IN in argM_other OK
a DT a argM_other OK
awful JJ awful argM_other OK
way NN way argM_other OK
where WRB where ^ OK
somebody NN somebody arg1 OK
's BES 's ^ OK
getting VBG getting ^ OK
hurt VBN hurt predicate OK

and CC and ^ OK
uh UH ^ ^ filler

i PRP i ^ OK
really RB really ^ OK

uh UH ^ ^ filler
of IN of ^ OK
course NN course ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
kids NNS kids arg1 OK
're VBP ^ ^ repeat
are VBP are predicate OK
interest- JJ ^ ^ repeat
interested JJ interested arg2 OK
in IN in arg2 OK
learning VBG learning arg2 OK

a- CC ^ ^ repeat
and CC ^ ^ false_start
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler

say UH ^ ^ filler
and CC ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
do VBP ^ ^ repeat
do VB do arg1 OK
it PRP it arg1 OK
even RB even argM_tmp OK
more RBR more argM_tmp OK

and CC and ^ OK
uh UH ^ ^ filler

what WP what ^ OK
during IN during ^ OK
the DT the ^ OK
daytime NN daytime ^ OK

well UH ^ ^ filler
then RB then ^ OK
again RB again ^ OK
well UH ^ ^ filler
look VBP ^ ^ false_start
at IN ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
if IN ^ ^ repeat
if IN if arg1 OK
you PRP ^ ^ repeat
you PRP you arg1 OK
have VBP have arg1 OK
uh UH ^ ^ filler
f. NNP f. arg1 OK
x. NNP x. arg1 OK
x. NNP x. arg1 OK
out IN out argM_loc OK
there RB there argM_loc OK

and CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
they PRP they arg0 OK
get VBP get predicate OK
pretty RB pretty arg1 OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
into IN into arg1 OK
some DT some arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
scenes NNS scenes arg1 OK
th- XX ^ ^ repeat
that IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
where WRB where ^ OK
it PRP it arg1 OK
should MD should ^ OK
be VB be predicate OK
on IN on arg2 OK
h. NNP h. arg2 OK
b. NNP b. arg2 OK
o. NNP o. arg2 OK

that WDT ^ ^ repeat
that WDT ^ ^ false_start
n- VBD ^ ^ repeat
needed VBD ^ ^ false_start
uh UH ^ ^ filler
to TO ^ ^ false_start
have VB ^ ^ false_start
uh UH ^ ^ filler
she PRP she arg1 OK
was VBD was predicate OK
in IN in arg2 OK
her PRP ^ ^ repeat
her PRP her arg2 OK
ninth JJ ninth arg2 OK
month NN month arg2 OK

and CC ^ ^ false_start
she PRP she arg0 OK
needed VBD needed predicate OK
her PRP her arg0 OK
husband NN husband arg0 OK
to TO to arg1 OK
have VB have arg1 OK
sex NN sex arg1 OK
with IN with arg1 OK
her PRP her arg1 OK
in IN in arg1 OK
order NN order arg1 OK
for IN for arg1 OK
her PRP her arg0 OK
to TO to arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
m- XX ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
bring VB bring arg1 OK
down RP down arg_particl OK
the DT the arg1 OK
child NN child arg1 OK
or CC or arg1 OK
something NN something arg1 OK

and CC ^ ^ false_start
here RB here ^ OK
they PRP they arg0 OK
were VBD were ^ OK
showing VBG showing predicate OK
all PDT ^ ^ repeat
all PDT all arg1 OK
these DT ^ ^ repeat
these DT these arg1 OK
positions NNS ^ ^ repeat
positions NNS positions arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
until IN until ^ OK
she PRP she ^ OK
a- XX ^ ^ false_start
orgasm NN orgasm ^ OK

uh UH ^ ^ filler
f. NNP f. arg0 OK
x. NNP x. arg0 OK
x. NNP x. arg0 OK
is VBZ is ^ OK
getting VBG getting predicate OK
kind RB kind arg1 OK
of RB of arg1 OK
porno JJ porno arg1 OK
here RB here argM_loc OK

and CC ^ ^ false_start
then RB ^ ^ false_start
i PRP i ^ OK
would MD would ^ OK
see VB see ^ OK
what WP ^ ^ repeat
what WP what ^ OK
we PRP ^ ^ repeat
we PRP we ^ OK
would MD would ^ OK
had VBD ^ ^ repeat
have VB have ^ OK
in IN ^ ^ repeat
in IN in ^ OK
our PRP our ^ OK
carry NN carry ^ OK
on RP on ^ OK
bags NNS bags ^ OK
that WDT ^ ^ false_start
you PRP ^ ^ false_start
carry VBP ^ ^ false_start
on IN ^ ^ false_start
the DT ^ ^ false_start
plane NN ^ ^ false_start
that WDT that ^ OK
we PRP we ^ OK
could MD could ^ OK
use VB use ^ OK
for IN for ^ OK
a DT a ^ OK
little JJ little ^ OK
while NN while ^ OK

you PRP ^ ^ false_start
're VBP ^ ^ false_start
you PRP you ^ OK
travel VBP travel ^ OK
anywhere RB ^ ^ repeat
anywhere RB anywhere ^ OK
travel VBP ^ ^ false_start
got VBN and ^ false_start
you PRP you ^ OK
always RB always ^ OK
got VBN have ^ false_start
something NN something ^ OK
to TO to ^ OK
eat VB eat ^ OK

so UH ^ ^ filler
uh UH ^ ^ filler
we PRP we ^ OK
take VBP take ^ OK
the DT ^ ^ repeat
uh UH ^ ^ filler
the DT the ^ OK
uh UH ^ ^ filler

so UH ^ ^ filler
we PRP we ^ OK
take VBP take ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
those DT those ^ OK
uh UH ^ ^ filler
s- NN ^ ^ repeat
seat NN seat ^ OK
covers VBZ covers ^ OK
they PRP they ^ OK
have VBP have ^ OK
on IN on ^ OK
the DT the ^ OK
back NN back ^ OK

so RB ^ ^ filler
the DT the ^ OK
baby NN baby ^ OK
will MD will ^ OK
survive VB survive ^ OK
and CC and ^ OK
not RB not ^ OK
be VB be ^ OK
pee NN pee ^ OK
pee NN pee ^ OK

but CC ^ ^ false_start
really RB ^ ^ false_start
our PRP ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
uh UH ^ ^ filler
go VB go ^ OK
around RB around ^ OK
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
to IN ^ ^ false_start
everybody NN ^ ^ false_start

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
a DT a ^ OK
really RB really ^ OK
out RB out ^ OK
out RB going ^ false_start
person NN person ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
a DT ^ ^ false_start
really RB really ^ OK
outgoing JJ outgoing ^ OK

oh UH ^ ^ filler
and CC ^ ^ false_start
they PRP they ^ OK
probably RB probably ^ OK
'd MD ^ ^ repeat
would MD would ^ OK
send VB send ^ OK
me PRP me ^ OK
up RP up ^ OK
and CC ^ ^ repeat
and CC and ^ OK
uh UH ^ ^ filler
check VB check ^ OK
on IN on ^ OK
the DT the ^ OK
pilot NN pilot ^ OK

ah UH ^ ^ filler
the DT the ^ OK
sight NN sight ^ OK
of IN of ^ OK
it PRP it ^ OK
just RB just ^ OK
f- XX f- ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
say VBP ^ ^ false_start
you PRP you ^ OK
know VBP know ^ OK
how WRB how ^ OK
sometimes RB sometimes ^ OK
a DT a ^ OK
plane NN plane ^ OK
is VBZ is ^ OK
just RB ^ ^ false_start
up IN up ^ OK
in IN in ^ OK
the DT the ^ OK
sky NN sky ^ OK
and CC and ^ OK
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden JJ sudden ^ OK
it PRP it ^ OK
just RB just ^ OK
booms UH ^ ^ filler
drops VBZ drops ^ OK
down RB down ^ OK

or CC ^ ^ false_start
they PRP they ^ OK
uh UH ^ ^ filler
or CC ^ ^ false_start
get VBP get ^ OK
in IN in ^ OK
conversation NN conversation ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
get VBP get ^ OK
to IN to ^ OK
chit-chatting NN ^ ^ repeat
chatting NN chatting ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
the DT the ^ OK
next JJ next ^ OK
thing NN thing ^ OK
you PRP you ^ OK
know VBP know ^ OK
it NP-1 it ^ OK
's PRP 's ^ OK
down BES down ^ OK
in RB in ^ OK
the IN the ^ OK
sea DT sea ^ OK
or NN or ^ OK
no- CC ^ ^ false_start
in XX in ^ OK
your IN your ^ OK
trees PRP trees ^ OK
or NNS or ^ OK
in CC in ^ OK
somebody IN somebody ^ OK
's NN 's ^ OK
yard BES yard ^ OK
or NN or ^ OK
on CC on ^ OK
their IN their ^ OK
house PRP house ^ OK
or NN ^ ^ false_start
some CC ^ ^ false_start
way DT ^ ^ false_start

f- RB ^ ^ repeat
forever RB forever ^ OK
oh UH ^ ^ filler

you PRP you ^ OK
thinking VBG 're ^ false_start
thinking VBG thinking ^ OK
like UH ^ ^ filler
t- XX ^ ^ false_start
on IN on ^ OK
the DT the ^ OK
survivors NNS survivors ^ OK
were VBD were ^ OK
it PRP it ^ OK
w- XX w- ^ OK

y- XX ^ ^ false_start
right UH right ^ OK

but CC ^ ^ false_start
w- XX ^ ^ false_start
b- XX ^ ^ false_start
you PRP ^ ^ repeat
you PRP you ^ OK
brought VBD brought ^ OK
up RP up ^ OK
a DT a ^ OK
good JJ good ^ OK
point NN point ^ OK
out IN out ^ OK
there RB there ^ OK

the DT ^ ^ repeat
the DT the ^ OK
planes NNS planes ^ OK
are VBP are ^ OK
not RB not ^ OK
maintained VBN maintained ^ OK

any DT any ^ OK
time NN time ^ OK
you PRP you ^ OK
take VBP take ^ OK
a DT a ^ OK
plane NN plane ^ OK
from IN from ^ OK
one CD one ^ OK
s- NN ^ ^ repeat
uh UH ^ ^ filler
side NN side ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK
almost RB ^ ^ false_start
to IN to ^ OK
the DT the ^ OK
other JJ other ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
sitting VBG sitting ^ OK
down RP down ^ OK
on IN on ^ OK
the DT the ^ OK
ground NN ground ^ OK
for IN for ^ OK
two CD two ^ OK
hours NNS hours ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
back RB back ^ OK
up RB up ^ OK
doing VBG doing ^ OK
the DT the ^ OK
same JJ same ^ OK
thing NN thing ^ OK
back RB back ^ OK
and CC and ^ OK
forth RB forth ^ OK

and CC ^ ^ false_start
this DT this ^ OK
is VBZ is ^ OK
a DT a ^ OK
twenty-four CD twenty-four ^ OK
hour NN hour ^ OK
ritual NN ritual ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
sitting VBG sitting ^ OK
on IN on ^ OK
the DT the ^ OK
ground NN ground ^ OK
long RB long ^ OK
enough RB enough ^ OK
for IN for ^ OK
n- DT ^ ^ repeat
no DT any ^ false_start
real JJ real ^ OK
mechanic NN mechanics ^ false_start
to TO to ^ OK
put VB put ^ OK
any DT any ^ OK
real JJ real ^ OK
parts NNS parts ^ OK
or CC or ^ OK
do VBP do ^ OK
any DT any ^ OK
real JJ real ^ OK
work NN work ^ OK
to IN to ^ OK
it PRP it ^ OK

you ADVP-1 ^ ^ false_start
're PRP ^ ^ false_start
you VBP you ^ OK
got PRP have ^ false_start
a VBN a ^ OK
point DT point ^ OK
there NN there ^ OK

you PRP you ^ OK
got VBN got ^ OK
a DT a ^ OK

i PRP ^ ^ filler
think VBP ^ ^ false_start
the DT the arg1 OK
big JJ big arg1 OK
p- XX ^ ^ repeat
question NN question arg1 OK
for IN for arg1 false_start
me PRP me arg1 false_start
would MD would ^ OK
be VB be predicate OK
like UH ^ ^ filler
what WP what arg2 OK
's BES 's arg2 OK
the DT the arg1 OK
magnitude NN magnitude arg1 OK
of IN of arg1 OK
the DT the arg1 OK
terrorist JJ terrorist arg1 OK
situation NN situation arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like NP-1 ^ ^ filler
if UH if ^ OK
it IN it ^ OK
is PRP is ^ OK
it VBZ ^ ^ repeat
something PRP something ^ OK
like NN like ^ OK
you IN ^ ^ repeat
yourself PRP you ^ false_start
are PRP being ^ false_start
threatened VBP threatened ^ OK
directly VBN directly ^ OK

because IN because ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
in IN ^ ^ repeat
like UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
example NN example ^ OK
with IN with ^ OK
the DT the ^ OK
airplane NN airplane ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
one CD one arg0 OK
person NN person arg0 OK
decides VBZ decides predicate OK
they PRP they arg0 OK
're VBP 're arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
start VB start arg1 OK
acting VBG acting arg1 OK
crazy JJ crazy arg1 OK
that WDT that arg0 OK
could MD could ^ OK
lead VB lead predicate OK
to IN to arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
serious JJ serious arg1 OK
lives NNS lives arg1 OK
being VBG being arg1 OK
taken VBN taken arg2 OK

it PRP it arg1 OK
and CC ^ ^ false_start
's BES 's predicate OK
not RB not arg2 OK
like IN like arg2 OK
anyone NN anyone arg0 OK
was VBD was arg2 OK
actually RB actually arg2 OK
telling VBG telling arg2 OK
them PRP them arg2 OK
that IN ^ ^ filler
hey UH hey arg1 OK
we PRP we arg0 OK
're VBP 're arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
go VB go arg1 OK
crash VB crash arg1 OK
this DT this arg1 OK
into IN into arg1 OK
a DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
building NN building arg1 OK

i PRP ^ arg1 filler
mean VBP ^ ^ filler
they PRP they arg0 OK
probably RB probably ^ OK
knew VBD knew predicate OK
more RBR more ^ false_start
or CC or ^ false_start
less RBR less ^ false_start
just RB that ^ false_start
just RB ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg1 OK
're VBP were arg1 false_start
being VBG being arg1 OK
hijacked VBN hijacked arg2 OK

just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
freak VB freak ^ OK
out RP out ^ OK

like UH ^ ^ filler
people NNS people arg0 OK
with IN ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
th- RB ^ ^ false_start
you PRP you arg0 false_start
're VBP 're arg0 false_start
there RB there arg0 false_start
with IN with arg0 false_start
on IN on arg0 OK
the DT the arg0 OK
plane NN plane arg0 OK
like UH ^ ^ filler
say UH say predicate OK
your PRP your arg0 OK
kids NNS kids arg0 OK
it PRP ^ arg1 false_start
's BES are ^ false_start
going VBG going arg1 OK
to TO to arg1 OK
make VB make arg1 OK
it PRP it arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
different JJ more ^ false_start
different JJ different arg1 OK
because IN because ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
want VB want predicate OK
to TO to arg1 OK
make VB make arg1 OK
your PRP your arg1 OK
kids NNS kids arg1 OK
scared JJ scared arg1 OK

you PRP you arg0 OK
're VBP 're ^ OK
just RB just ^ OK
thinking VBG thinking predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg1 OK
only JJ only arg1 OK
thing NN thing arg1 OK
between IN between arg1 OK
me PRP me arg1 OK
and CC and arg1 OK
the DT the arg1 OK
door NN door arg1 OK
is VBZ are arg1 false_start
these DT these arg2 OK
people NNS people arg2 OK

um UH ^ ^ filler
i PRP i arg0 OK
got VBD got predicate OK
a DT a arg1 OK
d. NN d. arg1 OK
v. NN v. arg1 OK
d. NN d. arg1 OK
for IN for arg1 OK
free JJ free arg1 OK
about IN about arg1 OK
a DT ^ ^ false_start
from IN ^ ^ false_start
uh UH ^ ^ filler
the DT the arg1 OK
world NNP world arg1 OK
trade NNP trade arg1 OK
center NNP center arg1 OK

and CC ^ ^ false_start
there EX there arg1 OK
was VBD was predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
portion NN portion arg2 OK
of IN on arg2 false_start
the DT the arg2 OK
documentary NN documentary arg2 OK
where WRB where arg2 OK
there EX there arg2 OK
was VBD was arg2 OK
a DT a arg0 OK
guy NN guy arg0 OK
that WDT that arg1 OK
um UH ^ ^ filler
carried VBD carried arg1 OK
a DT a arg1 OK
dude NN dude arg1 OK
that WDT that arg1 OK
was VBD was arg1 OK
in IN in arg2 OK
a DT a arg2 OK
wheel NN wheel arg2 OK
chair NN chair arg2 OK

i PRP ^ ^ false_start
thought VBD ^ ^ false_start
that DT ^ ^ false_start
was VBD ^ ^ false_start
really RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
even RB even ^ OK
imagine VB imagine predicate OK
being VBG being arg1 OK
in IN in arg1 OK
a DT a arg1 OK
situation NN situation arg1 OK
like IN like arg1 OK
that DT that arg1 OK

i PRP i arg0 OK
'd MD 'd ^ OK
be VB ^ ^ false_start
much RB ^ ^ false_start
thinking VBG think predicate false_start
way RB way arg1 OK
too RB too arg1 OK
much RB much arg1 OK
about IN about arg1 OK
myself PRP myself arg1 OK
to TO to arg1 OK
think VB think arg1 OK
about IN about arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
this DT this arg1 OK
person NN person arg1 OK
or CC or arg1 OK
that DT that arg1 OK
person NN person arg1 OK
especially RB especially ^ OK
if IN if ^ OK
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know predicate OK
him PRP him arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
in IN in arg1 false_start
a DT a arg1 false_start
scenario NN scenario arg1 false_start
like IN like arg1 false_start
that DT that arg1 false_start

i PRP ^ arg2 filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg1 OK
whole JJ whole arg1 OK
place NN place arg1 OK
is VBZ is predicate OK
like UH like arg2 OK
it PRP it arg1 OK
's BES 's arg2 OK
on IN on arg2 OK
fire NN fire arg2 OK
smoldering VBG or ^ false_start
smoldering VBG smoldering arg2 OK
and CC ^ ^ false_start
whatnot NN ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
fire NN fire ^ OK
fighter NN fighter ^ OK
or CC or ^ OK
not RB not ^ OK
that DT ^ ^ repeat
that DT that arg1 OK
was VBD was predicate OK
bold JJ bold arg2 OK

well UH well ^ OK
i PRP i ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
was VBD was ^ OK
div- JJ ^ ^ repeat
divorced JJ divorced ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP i ^ OK
got VBD got ^ OK
married VBN married ^ OK
too RB too ^ OK
early RB early ^ OK

so UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
it PRP it ^ OK
makes VBZ makes ^ OK
some DT some ^ OK
pe- NN ^ ^ repeat
people NNS people ^ OK
maybe RB maybe ^ OK
not RB not ^ OK
think VBP ^ ^ false_start
take VB take ^ OK
marriage NN marriage ^ OK
as RB as ^ OK
seriously RB seriously ^ OK
as IN as ^ OK
they PRP they ^ OK
would MD would ^ OK
have VB have ^ OK
otherwise RB otherwise ^ OK

do VBP ^ ^ false_start
are VBP are ^ OK
most JJS most ^ OK
of IN of ^ OK
your PRP your ^ OK
friends NNS friends ^ OK
' POS ' ^ OK
parents NNS parents ^ OK
not RB not ^ OK
divorced JJ divorced ^ OK

a DT a ^ OK
l- JJ ^ ^ repeat
little JJ little ^ OK
trend NN trend ^ OK
there RB there ^ OK

w- XX ^ ^ false_start
yeah UH yeah ^ OK

in IN in ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
parents NNS parents ^ OK
' POS ' ^ OK
generation NN generation ^ OK
hardly RB hardly ^ OK
anybody NN anybody ^ OK
got VBD got ^ OK
divorced VBN divorced ^ OK

i PRP ^ ^ repeat
remem- VB ^ ^ repeat
i PRP i ^ OK
remember VBP remember ^ OK
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
growing VBG growing ^ OK
up RB up ^ OK
there ADVP-1 there ^ OK
was EX was ^ OK
one VBD one ^ OK
divorced CD divorced ^ OK
woman JJ woman ^ OK
up NN up ^ OK
the IN the ^ OK
street DT street ^ OK
who NN who ^ OK
had WP had ^ OK
a VBD a ^ OK
daughter DT daughter ^ OK
my NN my ^ OK
age PRP age ^ OK

the DT the ^ OK
way NN way ^ OK
the DT the ^ OK
rest NN rest ^ OK
of IN of ^ OK
the DT the ^ OK
neighborhood NN neighborhood ^ OK
acted VBD acted ^ OK
you ADVP-1 ^ ^ false_start
'd PRP ^ ^ false_start
as- MD ^ ^ false_start
you XX ^ ^ filler
know PRP ^ ^ filler
you VBP you ^ OK
would PRP would ^ OK
think MD think ^ OK
that VB that ^ OK
there IN there ^ OK
'd EX 'd ^ OK
be MD be ^ OK
something VB something ^ OK
really NN really ^ OK
different RB different ^ OK
about JJ about ^ OK
their IN their ^ OK
house PRP house ^ OK
that NN that ^ OK
there IN there ^ OK
's EX 's ^ OK
something BES something ^ OK
really NN really ^ OK
weird RB weird ^ OK
about JJ about ^ OK
this IN this ^ OK
person DT person ^ OK
because NN because ^ OK
it IN it ^ OK
was PRP was ^ OK
so VBD so ^ OK
unusual RB unusual ^ OK

the DT ^ ^ repeat
the DT the ^ OK
one CD one ^ OK
thing NN thing ^ OK
that WDT that ^ OK
i PRP i ^ OK
regret VBP regret ^ OK
when WRB when ^ OK
i PRP i ^ OK
think VBP think ^ OK
back RB back ^ OK
on IN on ^ OK
my PRP my ^ OK
first JJ first ^ OK
marriage NN marriage ^ OK
is ADVP-TMP- 3 is ^ OK
that VBZ that ^ OK
i IN i ^ OK
did PRP did ^ OK
n't VBD n't ^ OK
realize RB realize ^ OK
how VB how ^ OK
much WRB much ^ OK
it RB it ^ OK
affected PRP affected ^ OK
other VBD other ^ OK
people JJ people ^ OK
besides NNS besides ^ OK
just IN just ^ OK
us RB us ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
realize VB realize ^ OK
that IN ^ ^ repeat
that IN ^ ^ false_start
our PRP ^ ^ false_start
bo- NN ^ ^ false_start
that IN that ^ OK
his PRP his ^ OK
parents NNS parents ^ OK
and CC and ^ OK
my PRP my ^ OK
parents NNS parents ^ OK
would MD would ^ OK
just RB ^ ^ false_start
be VB be ^ OK
completely RB completely ^ OK
devastated VBN devastated ^ OK
because IN because ^ OK
it PRP it ^ OK
was VBD was ^ OK
such PDT such ^ OK
a DT a ^ OK
different JJ different ^ OK
thing NN thing ^ OK
for IN for ^ OK
them PRP them ^ OK

my PRP ^ ^ repeat
my PRP my ^ OK
husband NN husband ^ OK
was VBD was ^ OK
divorced VBN divorced ^ OK
also RB also ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
she PRP ^ ^ repeat
she PRP she ^ OK
seems VBZ seems ^ OK
all RB all ^ OK
right JJ right ^ OK

she PRP ^ ^ repeat
she PRP she ^ OK
was VBD was ^ OK
five CD five ^ OK
when WRB when ^ OK
they PRP they ^ OK
got VBD got ^ OK
divorced VBN divorced ^ OK

or CC or ^ OK
four CD four ^ OK
i PRP i ^ OK
guess VBP guess ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
about RB about ^ OK
half PDT half ^ OK
her PRP her ^ OK
friends NNS friends ^ OK
had VBD had ^ OK
divorced VBN divorced ^ OK
parents NNS parents ^ OK

so UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
she PRP she ^ OK
did VBD did ^ OK
n't RB n't ^ OK
think VB think ^ OK
anything NN anything ^ OK
of IN of ^ OK
it PRP it ^ OK
really RB really ^ OK

it PRP it ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
seem VB seem ^ OK
like IN like ^ OK
anybody NN anybody ^ OK
would MD would ^ OK
say VB say ^ OK
well UH ^ ^ filler
let VB ^ ^ filler
's PRP ^ ^ filler
see VB ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
think VB think ^ OK
i PRP i ^ OK
want VBP want ^ OK
to TO to ^ OK
get VB get ^ OK
divorced VBN divorced ^ OK
when WRB ^ ^ repeat
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
get VBP get ^ OK
older JJR older ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
everybody NN ^ ^ repeat
everybody NN everybody ^ OK
must MD must ^ OK
hope VB hope ^ OK
their PRP their ^ OK
marriage NN marriage ^ OK
is VBZ is ^ OK
going VBG going ^ OK
to TO to ^ OK
last VB last ^ OK

but CC but ^ OK
i PRP i arg0 false_start
prefer VBP prefer predicate false_start
anything NN anything arg1 OK
whether IN ^ ^ false_start
they PRP ^ ^ false_start
're VBP ^ ^ false_start
black JJ ^ ^ false_start
with IN with arg1 OK
a DT a arg1 OK
good JJ good arg1 OK
plot NN plot arg1 OK
and CC ^ ^ false_start
a DT ^ ^ false_start
good JJ ^ ^ false_start
that WDT that arg0 OK
has VBZ has arg1 OK
character NN character arg1 OK
development NN development arg1 OK

they PRP they arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
seem VB seem predicate OK
to TO to arg2 OK
be VB be arg2 OK
s- VBG ^ ^ repeat
spending VBG spending arg2 OK
as RB as arg1 OK
much JJ much arg1 OK
time NN time arg1 OK
as SBAR-2 ^ ^ false_start
acting IN acting arg2 OK
in VBG in arg1 OK
the IN the arg1 OK
films DT films arg1 OK
as NNS as arg2 OK
playing IN playing arg2 OK
in VBG in arg1 OK
the IN the arg1 OK
films DT films arg1 OK
if NNS if ^ OK
that IN that arg0 OK
makes DT makes predicate OK
sense VBZ sense arg1 OK
to NN to arg3 OK
you IN you arg3 OK

but CC but ^ OK
they PRP ^ ^ repeat
n- XX ^ ^ false_start
they PRP they arg0 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
letting VBG letting predicate OK
everything NN everything arg0 OK
else RB else arg0 OK
around IN around arg0 OK
them PRP them arg0 OK
act VBP act arg1 OK
for IN for arg1 OK
them PRP them arg1 OK

well UH ^ ^ filler
there EX there ^ OK
's BES 're predicate false_start
some DT some arg1 OK
films NNS films arg1 OK
th- WDT ^ ^ repeat
that WDT that arg1 OK
n't RB ^ ^ false_start
fi- XX ^ ^ false_start
e UH ^ ^ false_start
you PRP you arg0 OK
you PRP ^ ^ repeat
do VBP ^ ^ false_start
n't RB ^ ^ false_start
kno- VB ^ ^ false_start
you PRP ^ ^ repeat
u- XX ^ ^ repeat
do VBP ^ ^ false_start
e UH ^ ^ filler
like VBP like arg1 OK
because IN because arg1 OK
they PRP they arg0 OK
make VBP make arg1 OK
you PRP you arg0 OK
think VB think arg1 OK

but CC but ^ OK
they PRP they arg1 OK
're VBP 're predicate OK
not RB not arg2 OK
enjoyable JJ enjoyable arg2 OK
f- NNS ^ ^ repeat
films NNS films arg2 OK
because IN because ^ OK
they PRP they arg0 OK
make VBP make predicate OK
you PRP you arg0 OK
think VB think arg1 OK
about IN about arg1 OK
things NNS things arg1 OK
that WDT that arg1 OK
you PRP you arg0 OK
try VBP try arg1 OK
to TO to arg1 OK
avoid VB avoid arg1 OK
most JJS most argM_tmp OK
of IN of argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

although IN although ^ OK
it PRP it arg0 OK
has VBZ has predicate OK
no DT no arg1 OK
real JJ real arg1 OK
actors NNS actors arg1 OK
in IN in arg1 OK
there RB it arg1 false_start
well UH ^ ^ filler
um UH ^ ^ filler
one CD one arg1 false_start
of IN of arg1 false_start
the DT the arg1 false_start
best JJS best arg1 false_start
films NNS films arg1 false_start
it PRP ^ ^ false_start
's BES is predicate OK
voice NN ^ ^ false_start
act- NN ^ ^ false_start
finding NNP finding arg2 OK
nemo NNP nemo arg2 OK

well UH well ^ OK
not RB not ^ OK
only RB only ^ OK
that DT that ^ OK

it PRP it arg1 OK
has VBZ has predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
value NN value arg2 OK
in IN in arg2 OK
d- XX ^ ^ false_start
what WP what arg2 OK
it PRP it arg0 OK
teaches VBZ ^ ^ repeat
teaches VBZ teaches arg2 OK
people NNS ^ ^ repeat
kids NNS kids arg2 OK

even RB even ^ OK
though IN though ^ OK
it PRP it arg0 OK
has VBZ has predicate OK
animation NN animation arg1 OK
it PRP it arg0 OK
has VBZ has predicate OK
all PDT all arg1 OK
the DT the arg1 OK
characteristics NNS characteristi cs arg1 OK
you PRP you arg0 OK
describe VBP describe arg1 OK
in IN ^ ^ repeat
in IN in arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
ol- JJR ^ ^ repeat
older JJR older arg2 OK
films NNS films arg2 OK
in IN ^ ^ repeat
in IN in arg2 OK
a DT ^ ^ repeat
an DT an arg2 OK
car- NN ^ ^ repeat
animation NN animation arg2 OK

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
talked VBN talked predicate OK
to IN to arg2 OK
more JJR more arg0 OK
adults NNS adults arg0 OK
than IN than arg0 false_start
the DT ^ ^ repeat
kids NNS kids arg0 false_start
who WP who arg0 OK
have VBP have arg2 OK
seen VBN seen arg2 OK
it PRP it arg1 OK
more RBR more arg1 OK
than IN than arg1 OK
once RB once arg1 OK

but CC but ^ OK
other JJ other arg0 OK
adults NNS adults arg0 OK
who WP who ^ OK
do VBP do ^ OK
n't RB n't ^ OK
b- VB ^ ^ repeat
buy VB buy predicate OK
films NNS films arg1 OK
are VBP are ^ OK
buying VBG buying predicate OK
this DT this arg1 OK

because IN because ^ OK
it PRP it arg1 OK
is VBZ is predicate OK
very RB very arg2 OK
high JJ high arg2 OK
quality NN quality arg2 OK
um UH ^ ^ filler
unlike IN unlike arg2 OK
a- NNPS ^ ^ false_start
charlie NNP charlie arg2 OK
's POS 's arg2 OK
angels NNPS angels arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
wo MD wo ^ OK
n't RB n't ^ OK
p- VBP ^ ^ repeat
pay VB pay predicate OK

i PRP i arg0 OK
'll MD 'll ^ OK
maybe RB maybe ^ OK
do VBP ^ ^ false_start
uh UH ^ ^ filler
rent VB rent predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
in IN ^ ^ repeat
on IN ^ ^ repeat
on IN on arg1 OK
a DT ^ ^ repeat
a DT a arg1 OK
de- XX ^ ^ repeat
d. NN d. arg1 OK
v. NN v. arg1 OK
d. NN d. arg1 OK

like UH ^ ^ filler
i- PRP ^ ^ false_start
this DT this arg1 OK
is VBZ is predicate OK
not RB not arg2 OK
out IN out arg2 OK
of IN of arg2 OK
my PRP my arg2 OK
pocket NN pocket arg2 OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

with IN with ^ OK
the DT the ^ OK
eh UH ^ ^ filler
high JJ high ^ OK
rate NN rate ^ OK
of IN of ^ OK
divorces NNS divorces ^ OK
in IN in ^ OK
this DT this ^ OK
country NN country ^ OK
i PRP i ^ OK
think VBP think ^ OK
that DT ^ ^ repeat
that DT ^ ^ repeat
that DT that ^ OK
point NN point ^ OK
's BES ^ ^ repeat
is VBZ is ^ OK
lost VBN lost ^ OK
on IN on ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
people NNS people ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK
the DT the ^ OK
right JJ right ^ OK
answer NN answer ^ OK
is VBZ is ^ OK

but CC but ^ OK
boy UH boy ^ OK
i- XX ^ ^ repeat
if IN if ^ OK
uh UH ^ ^ filler
a DT a ^ OK
lot NN lot ^ OK
more JJR more ^ OK
people NNS people ^ OK
have VBP have ^ OK
those DT those ^ OK
views NNS views ^ OK
i PRP i ^ OK
think VBP think ^ OK
we PRP we ^ OK
'd MD 'd ^ OK
probably RB probably ^ OK
be VB be ^ OK
a DT a ^ OK
lot NN lot ^ OK
better JJR better ^ OK
off RB off ^ OK

i PRP i ^ OK
've VBP 've ^ OK
uh UH ^ ^ filler
only RB only ^ OK
been VBN ^ ^ repeat
been VBN been ^ OK
married JJ married ^ OK
for IN for ^ OK
uh UH ^ ^ filler
five CD five ^ OK
and CC and ^ OK
a DT a ^ OK
half DT half ^ OK
years NNS years ^ OK
myself PRP myself ^ OK

even UNK even ^ OK
people UNK for ^ false_start
a UNK a ^ OK
lot UNK lot ^ OK
of UNK of ^ OK
people UNK people ^ OK
that UNK that ^ OK
i UNK ^ ^ false_start
'm UNK ^ ^ false_start
i UNK ^ ^ false_start
'm UNK ^ ^ false_start
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ false_start
know UNK ^ ^ false_start
and UNK ^ ^ false_start
know UNK ^ ^ false_start
of UNK of ^ OK
it UNK it ^ OK
's UNK 's ^ OK
almost UNK almost ^ OK
like UNK like ^ OK
a UNK a ^ OK
mm UNK ^ ^ filler
convenience UNK convenience ^ OK
thing UNK thing ^ OK
with UNK with ^ OK
them UNK them ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
're VBP ^ ^ false_start
not RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
they PRP they ^ OK
take VBP take ^ OK
it PRP it ^ OK
seriously RB seriously ^ OK
enough RB enough ^ OK
to TO to ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
make VB make ^ OK
things NNS things ^ OK
last VB last ^ OK
long JJ long ^ OK
term NN term ^ OK

w- PRP ^ ^ repeat
we PRP we ^ OK
have VBP have ^ OK
two CD two ^ OK
and CC and ^ OK
one CD one ^ OK
on IN on ^ OK
the DT the ^ OK
way NN way ^ OK

we PRP ^ ^ false_start
're VBP ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
right JJ right ^ OK

it PRP it ^ OK
's S-1 's ^ OK
tough BES tough ^ OK
to JJ ^ ^ false_start
as XX as ^ OK
you IN you ^ OK
have PRP have ^ OK
kids VBP kids ^ OK
and NNS ^ ^ filler
you CC ^ ^ filler
know PRP ^ ^ filler
ha- VBP ^ ^ repeat
having VB having ^ OK
everything VBG everything ^ OK
going NN going ^ OK
on VBG on ^ OK
all RP all ^ OK
the PDT the ^ OK
time DT time ^ OK

it- PRP ^ ^ false_start
to IN to ^ OK
me PRP me ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
really RB really ^ OK
m- VB ^ ^ repeat
make VB make ^ OK
time NN time ^ OK
to TO to ^ OK
do VB do ^ OK
that DT that ^ OK
type NN type ^ OK
of IN of ^ OK
stuff NN stuff ^ OK
because ADVP-TMP- 2 because ^ OK
if IN if ^ OK
not IN not ^ OK
it RB it ^ OK
wo PRP wo ^ OK
n't MD n't ^ OK
happen RB happen ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
only RB only ^ OK
half NN half ^ OK
as RB as ^ OK
fun JJ fun ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
times NNS times ^ OK
without IN ^ ^ repeat
the DT ^ ^ filler
eh UH ^ ^ filler
without IN without ^ OK
the DT ^ ^ repeat
the DT the ^ OK
ki- NNS ^ ^ repeat
kids NNS kids ^ OK

eh UNK ^ ^ filler
i UNK i ^ OK
do UNK do ^ OK
n't UNK n't ^ OK
know UNK know ^ OK
what UNK what ^ OK
it UNK it ^ OK
's UNK 's ^ OK
like UNK like ^ OK
to UNK to ^ OK
have UNK have ^ OK
a UNK ^ ^ repeat
uh UNK ^ ^ filler
a UNK a ^ OK
quiet UNK quiet ^ OK
dinner UNK dinner ^ OK
anymore UNK anymore ^ OK

if IN if ^ OK
every DT every ^ OK
now RB now ^ OK
and CC and ^ OK
then RB then ^ OK
when WRB when ^ OK
we PRP we ^ OK
do VBP do ^ OK
i ADVP-TMP- 1 ^ ^ repeat
i XX i ^ OK
n- PRP ^ ^ repeat
do PRP do ^ OK
n't VBP n't ^ OK
know RB know ^ OK
what VB what ^ OK
to WP to ^ OK
think TO think ^ OK

y- XX y- ^ OK
alright UH alright ^ OK

and CC ^ ^ false_start
how WRB ^ ^ repeat
what WP ^ ^ false_start
are VBP ^ ^ false_start
their- PRP ^ ^ false_start
er UH ^ ^ filler
how WRB how ^ OK
ol- JJ ^ ^ repeat
old JJ old ^ OK
are VBP are ^ OK
your PRP your ^ OK
kids NNS kids ^ OK

eh UH ^ ^ filler
we PRP we ^ OK
had VBD had ^ OK
a DT a ^ OK
miscarriage NN miscarriage ^ OK
in IN in ^ OK
between RB between ^ OK

actually RB actually ^ OK
no UH no ^ OK

t- TO ^ ^ repeat
to TO to ^ OK
start VB start ^ OK
off RP off ^ OK
we PRP we ^ OK
had VBD had ^ OK
one CD one ^ OK
miscarriage NN miscarriage ^ OK

so UH so ^ OK
she PRP ^ ^ false_start
's BES ^ ^ false_start
we PRP we ^ OK
're VBP 're ^ OK
only RB only ^ OK
i PRP i ^ OK
think VBP think ^ OK
two CD two ^ OK
and CC and ^ OK
a DT a ^ OK
half NN half ^ OK
months NNS months ^ OK
along RB along ^ OK
on IN on ^ OK
the DT the ^ OK
third JJ third ^ OK
one NN one ^ OK

oh UH oh ^ OK
neat UH neat ^ OK

maybe RB maybe ^ OK
ah UH ^ ^ filler
i PRP i ^ OK
might MD might ^ OK
think VB think ^ OK
mm UH ^ ^ filler
d XX ^ ^ filler
uh UH ^ ^ filler

but CC ^ ^ false_start
this DT this arg1 OK
is VBZ is predicate OK
a DT the arg2 false_start
good JJ good arg2 OK
u. NNP u. arg2 OK
s. NNP s. arg2 OK
a. NNP a. arg2 OK
of IN of arg2 OK
america NNP america arg2 OK

eh UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
true JJ true ^ OK

that DT ^ ^ repeat
ah UH ^ ^ filler
that DT that ^ OK
is VBZ is ^ OK
so RB so ^ OK
true JJ true ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
th- XX ^ ^ false_start
suppose VBN suppose predicate OK
people NNS people arg0 OK
in IN in arg0 OK
your PRP your arg0 OK
family NN family arg0 OK
need VBP need arg1 OK
you PRP you arg1 OK

eh UH ^ ^ filler
have VBP ^ ^ repeat
have VBP have ^ OK
you PRP ^ ^ repeat
you PRP you arg1 OK
ever RB ^ ^ repeat
ever RB ever ^ OK
be- VBN ^ ^ repeat
been VBN been predicate OK
to IN to arg2 OK
england NNP england arg2 OK

were VBD ^ ^ false_start
you PRP ^ ^ false_start
able JJ ^ ^ false_start
to TO ^ ^ false_start
were VBD were predicate OK
you PRP you arg1 OK
working VBG working arg2 OK
over IN over argM_tmp OK
there RB there argM_tmp OK

or CC ^ ^ false_start
what WP ^ ^ repeat
what WP what arg2 OK
were VBD ^ ^ repeat
was VBD was predicate OK
your PRP ^ ^ repeat
your PRP your arg1 OK
reason NN reason arg1 OK
for IN for arg1 OK
being VBG being arg1 OK
there RB there arg1 OK

that DT ^ ^ false_start
's BES ^ ^ false_start
pre- XX ^ ^ false_start
that DT that ^ OK
's BES 's predicate OK
a DT a arg2 OK
very RB very arg2 OK
scary JJ scary arg2 OK
thing NN thing arg2 OK

that DT ^ ^ repeat
that DT that arg1 OK
is VBZ is predicate OK
scary JJ scary arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
we PRP ^ ^ repeat
we PRP we arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
all PDT ^ ^ repeat
all DT all arg2 OK
in IN in arg2 OK
agreement NN agreement arg2 OK

no DT no ^ OK
leaving VBG leaving ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
a. NNP a. ^ OK
without IN without ^ OK
being VBG being ^ OK
able JJ able ^ OK
to TO to ^ OK
come VB come ^ OK
back RB back ^ OK

um UH ^ ^ filler
ah UH ^ ^ filler
i- PRP ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
there EX there arg1 OK
's BES 's predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
problems NNS problems arg2 OK
here RB here argM_loc OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
think VB think predicate OK
so RB so arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
a DT a ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK
and CC and ^ OK
being VBG being ^ OK
unemployed JJ unemployed ^ OK
in IN in ^ OK
a DT a ^ OK
strange JJ strange ^ OK
culture NN culture ^ OK
with IN with ^ OK
a DT a ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
a. NNP a. ^ OK
attitude NN attitude ^ OK

well UH ^ ^ repeat
well UH ^ ^ repeat
well UH ^ ^ repeat
first RB first ^ OK
of IN of ^ OK
all DT all ^ OK
i- PRP ^ ^ repeat
i- VBZ ^ ^ repeat
wi- XX ^ ^ repeat
wi- XX ^ ^ OK
i PRP i arg0 OK
g-i XX ^ ^ repeat
guess VBP guess predicate OK
they PRP they arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
have VB have arg1 OK
any DT any arg1 OK
respect NN respect arg1 OK
for IN for arg1 OK
people NNS people arg1 OK
from IN from arg1 OK
the DT the arg1 OK
united NNP united arg1 OK
states NNP states arg1 OK
period NN ^ ^ false_start

we PRP we arg1 OK
we PRP are predicate false_start
just RB just arg2 OK
impolite JJ impolite arg2 OK

and CC and ^ OK
eh UH ^ ^ filler

it PRP ^ arg2 repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
good UH ^ ^ false_start
morning UH a ^ false_start
good UH good arg2 OK
morning UH morning arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when argM_tmp OK
you PRP you arg0 OK
see VBP see argM_tmp OK
people NNS people arg1 OK
on IN on arg1 OK
the DT the arg1 OK
street NN street arg1 OK

where WRB where argM_loc OK
you PRP do ^ false_start
you PRP you arg0 OK
live VB live predicate OK
at IN at ^ OK

c- XX ^ ^ false_start
you PRP you arg1 OK
are VBP are predicate OK
here RB ^ ^ false_start
on IN on arg2 OK
here RB ^ ^ false_start
this DT this arg2 OK
here RB ^ ^ false_start
crowded JJ crowded arg2 OK
here RB ^ ^ false_start
subway NN subway arg2 OK

and CC ^ ^ false_start
no- NN ^ ^ repeat
nobody NN nobody arg0 OK
wants VBZ wants predicate OK
you PRP you arg0 OK
to TO to arg1 OK
touch VB touch arg1 OK
them PRP them arg1 OK

and CC ^ ^ false_start
folks NNS folks ^ OK
not RB not ^ OK
speaking VBG speaking ^ OK
english NNP english ^ OK
taking VBG taking ^ OK
me PRP me ^ OK
all RB ^ ^ repeat
all RB all ^ OK
over IN ^ ^ repeat
over IN over ^ OK
th- DT ^ ^ repeat
new NNP new ^ OK
york NNP york ^ OK

with IN ^ ^ repeat
with IN ^ ^ repeat
with IN with ^ OK
what WDT what ^ OK
company NN company ^ OK

along IN ^ ^ false_start
with IN ^ ^ false_start
the DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
as RB ^ ^ repeat
eh UH ^ ^ filler
as RB as ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
goes VBZ ^ ^ false_start
long RB long ^ OK
as IN as ^ OK
in IN in ^ OK
the DT the ^ OK
end NN end ^ OK
it PRP it ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
hurt VB hurt ^ OK
anybody NN anybody ^ OK

and CC ^ ^ repeat
then RB ^ ^ repeat
and CC ^ ^ false_start
then RB then ^ OK
again RB again ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
sometimes RB sometimes ^ OK
lying VBG lying arg1 OK
is VBZ is predicate OK
n't RB n't ^ OK
really RB really arg2 OK
lying VBG lying arg2 OK

all DT all ^ OK
in IN in ^ OK
all DT all ^ OK
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
would MD would arg1 OK
have VB have arg1 OK
to TO to arg1 OK
say VB say arg1 OK
it PRP it arg0 OK
depends VBZ depends arg1 OK
on IN on arg1 OK
the DT the arg1 OK
situation NN situation arg1 OK

then RB ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
then RB then ^ OK
the- RB ^ ^ repeat
again RB again ^ OK
aga- RB ^ ^ repeat
um UH ^ ^ filler
and CC ^ ^ repeat
uh UH ^ ^ filler
it PRP it arg0 OK
's BES 's ^ OK
all RB all ^ OK
based VBN based predicate OK
on IN on arg1 OK
who WP ^ ^ repeat
who WP who arg1 OK
knows VBZ knows arg1 OK

um UH ^ ^ filler
n- RB ^ ^ repeat
not RB ^ ^ repeat
not RB not ^ OK
to TO ^ ^ repeat
to TO to ^ OK
make VB ^ ^ repeat
make VB make ^ OK
it PRP it ^ OK
sound VB sound ^ OK
more RBR more ^ OK
illegal JJ illegal ^ OK
than IN than ^ OK
it PRP it ^ OK
really RB really ^ OK
is VBZ is ^ OK

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
defending VBG defending ^ OK
somebody NN somebody ^ OK
and CC and ^ OK
um UH ^ ^ filler
they PRP they ^ OK
asked VBD asked ^ OK
you PRP you ^ OK
to TO to ^ OK
bend VB bend ^ OK
the DT the ^ OK
truth NN truth ^ OK
for IN for ^ OK
them PRP them ^ OK
you PRP ^ ^ filler
know VBP ^ ^ OK
for IN for ^ OK
their PRP their ^ OK
own JJ own ^ OK
good JJ good ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
you PRP you ^ OK
and CC and ^ OK
nobody NN nobody ^ OK
else RB else ^ OK
knows VBZ knows ^ OK
about IN about ^ OK
it PRP it ^ OK
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
eh UH ^ ^ filler

but CC but ^ OK
then RB then ^ OK
again RB again ^ OK
we PRP we arg0 OK
're VBP 're ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
keying VBG keying arg1 OK
a DT a arg1 OK
car NN car arg1 OK
rather RB rather arg1 OK
than IN than arg1 OK
uh UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
like UH ^ ^ filler
dealing VBG dealing arg1 OK
drugs NNS drugs arg1 OK
for IN for arg1 OK
your PRP your arg1 OK
brother NN brother arg1 OK
who WP who arg1 OK
's BES 's arg1 OK
sickly RB sickly arg2 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

not RB ^ ^ filler
no UH ^ ^ repeat
no UH ^ ^ repeat
not RB not ^ OK
that IN that ^ OK
i PRP i arg0 OK
did VBD did predicate OK
that DT that arg1 OK

it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK

and CC ^ ^ false_start
then RB then ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
putting VBG putting predicate OK
yourself PRP yourself arg1 OK
in IN ^ ^ repeat
in IN in argM_loc OK
you PRP ^ ^ filler
know VBP ^ ^ filler
jeopardy NN jeopardy argM_loc OK
there RB there argM_loc OK

maybe RB maybe ^ OK
ah UH ^ ^ filler
i PRP i arg0 OK
might MD might ^ OK
think VB think ^ OK
mm UH ^ ^ filler
d XX ^ ^ filler
uh UH ^ predicate filler

but CC but ^ OK
this DT this arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
good JJ good arg2 OK
u. NNP u. arg2 OK
s. NNP s. arg2 OK
a. NNP a. arg2 OK
of IN ^ ^ false_start
america NNP ^ ^ repeat

eh UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
true JJ true arg2 OK

that DT ^ ^ repeat
ah UH ^ ^ filler
that DT that arg1 OK
is VBZ is predicate OK
so RB so arg2 OK
true JJ true arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
th- XX ^ ^ repeat
suppose VBN suppose predicate OK
people NNS people arg0 OK
in IN in arg0 OK
your PRP your arg0 OK
family NN family arg0 OK
need VBP need arg1 OK
you PRP you arg1 OK

eh UH ^ ^ filler
have VBP ^ ^ repeat
have VBP have ^ OK
you PRP ^ ^ repeat
you PRP you arg1 OK
ever RB ^ ^ repeat
ever RB ever ^ OK
be- VBN ^ ^ repeat
been VBN been predicate OK
to IN to arg4 OK
england NNP england arg4 OK

were VBD ^ ^ repeat
were VBD were ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
able JJ ^ ^ repeat
to TO ^ ^ repeat
working VBG working predicate OK
over IN over argM_loc OK
there RB there argM_loc OK

or CC ^ ^ false_start
what WP ^ ^ repeat
what WP what arg1 OK
were VBD ^ ^ repeat
was VBD was predicate OK
your PRP ^ ^ repeat
your PRP your arg1 OK
reason NN reason arg2 OK
for IN for arg2 OK
being VBG being arg2 OK
there RB there argM_loc OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT a arg2 OK
pre- XX ^ ^ repeat
very RB very arg2 OK
scary JJ scary arg2 OK
thing NN thing arg2 OK

that DT ^ ^ repeat
that DT that arg1 OK
is VBZ is predicate OK
scary JJ scary arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
we PRP we arg1 OK
we PRP ^ ^ repeat
're VBP 're ^ OK
're VBP ^ predicate repeat
all PDT ^ ^ repeat
all DT all arg2 OK
in IN in arg2 OK
agreement NN agreement arg2 OK

no DT no ^ OK
leaving VBG leaving ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
a. NNP a. ^ OK
without IN without ^ OK
being VBG being ^ OK
able JJ able ^ OK
to TO to ^ OK
come VB come ^ OK
back RB back ^ OK

um UH ^ ^ filler
ah UH ^ ^ filler
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES are predicate false_start
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
problems NNS problems arg1 OK
here RB here arg1 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
think VB think predicate OK
so RB so arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
a DT having ^ false_start
a DT a ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK
and CC and ^ OK
being VBG being ^ OK
unemployed JJ unemployed ^ OK
in IN in ^ OK
a DT a ^ OK
strange JJ strange ^ OK
culture NN culture ^ OK
with IN with ^ OK
a DT a ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
a. NNP a. ^ OK
attitude NN attitude ^ OK

well UH ^ ^ filler
well UH ^ ^ filler
well UH ^ ^ filler
first RB first ^ OK
of IN of ^ OK
all DT all ^ OK
i- PRP ^ ^ repeat
i- VBZ ^ ^ repeat
wi- XX ^ ^ false_start
wi- XX ^ ^ repeat
i PRP i arg0 OK
g-i XX ^ ^ repeat
guess VBP guess predicate OK
they PRP they arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
have VB have arg1 OK
any DT any arg1 OK
respect NN respect arg1 OK
for IN for arg1 OK
people NNS people arg1 OK
from IN from arg1 OK
the DT the arg1 OK
united NNP united arg1 OK
states NNP states arg1 OK
period NN ^ ^ false_start

we PRP we arg1 OK
we PRP are predicate false_start
just RB just arg2 OK
impolite JJ impolite arg2 OK

and CC and ^ OK
eh UH ^ ^ filler

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
good UH good ^ OK
morning UH morning ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
see VBP see ^ OK
people NNS people ^ OK
on IN on ^ OK
the DT the ^ OK
street NN street ^ OK

where WRB where argM_loc OK
you PRP do ^ false_start
you PRP you arg0 OK
live VB live ^ OK
at IN ^ predicate false_start

you PRP you arg1 OK
are VBP are predicate OK
c- XX ^ ^ repeat
here RB here argM_loc false_start
on IN on argM_loc OK
this DT this argM_loc OK
crowded JJ crowded argM_loc OK
subway NN subway argM_loc OK

and CC ^ ^ false_start
no- NN ^ ^ repeat
nobody NN nobody arg0 OK
wants VBZ wants predicate OK
you PRP you arg0 OK
to TO to arg1 OK
touch VB touch arg1 OK
them PRP them arg1 OK

and CC ^ ^ false_start
folks NNS folks arg0 OK
not RB not arg0 OK
speaking VBG speaking arg0 OK
english NNP english arg0 OK
taking VBG take predicate false_start
me PRP me arg1 OK
all RB ^ ^ repeat
th- DT ^ ^ repeat
all RB all argM_loc OK
over IN ^ ^ repeat
over IN over argM_loc OK
new NNP new argM_loc OK
york NNP york argM_loc OK

with IN ^ ^ repeat
with IN ^ ^ repeat
with IN with ^ OK
what WDT what ^ OK
company NN company ^ OK

and CC ^ ^ false_start
so UH ^ ^ filler
how WRB how ^ OK
long RB long ^ OK
have VBP have ^ OK
you PRP you ^ OK
been VBN been ^ OK
with IN with ^ OK
the DT ^ ^ repeat
the DT the ^ OK
boyfriend NN boyfriend ^ OK
you PRP you ^ OK
're VBP 're ^ OK
with IN with ^ OK
now NP-1 now ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
a DT a ^ OK

course NN ^ ^ filler
we PRP we ^ OK
were VBD were ^ OK
both DT both ^ OK
at IN at ^ OK
weird JJ weird ^ OK
t- NNS ^ ^ repeat
times NNS times ^ OK
in IN in ^ OK
our PRP our ^ OK
life NN life ^ OK
too RB too ^ OK

what WP ^ ^ repeat
what WP what ^ OK
d- VBP ^ ^ repeat
do VBP do ^ OK
you PRP you ^ OK
look VB look ^ OK
for IN for ^ OK
in NP-1 in ^ OK
a IN a ^ OK
life DT life ^ OK
partner NN partner ^ OK
cause NN cause ^ OK
i- IN ^ ^ repeat
i PRP i ^ OK
had PRP had ^ OK
never VBD never ^ OK
really RB really ^ OK
given RB given ^ OK
it VBN it ^ OK
any PRP any ^ OK
thought DT thought ^ OK

i PRP i ^ OK
just RB just ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
really RB ^ ^ false_start
loo- VB ^ ^ false_start
i PRP i ^ OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
have VB have ^ OK
any DT any ^ OK
specifications NNS specification s  ^ OK
he PRP he ^ OK
had VBD had ^ OK
to TO to ^ OK
meet VB meet ^ OK
or NP-2 ^ ^ false_start
anything CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

why WRB ^ ^ false_start
this RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
know VB know ^ OK
that IN that ^ OK
there EX there ^ OK
was VBD was ^ OK
anything NN anything ^ OK
specific JJ specific ^ OK
to TO to ^ OK
look VB look ^ OK
for IN for ^ OK

and CC ^ ^ false_start
if IN if ^ OK
we PRP we ^ OK
'd VBD 'd ^ OK
had VBN had ^ OK
him PRP him ^ OK
first JJ first ^ OK
in IN in ^ OK
our PRP our ^ OK
relationship NN relationship ^ OK

it PRP it ^ OK
's S-1 's ^ OK
real BES real ^ OK
hard RB hard ^ OK
to JJ to ^ OK
consider TO consider ^ OK
spending VB spending ^ OK
the VBG the ^ OK
rest DT rest ^ OK
of NN of ^ OK
your IN your ^ OK
life PRP life ^ OK
with NN with ^ OK
somebody IN somebody ^ OK
if NN ^ ^ repeat
if IN ^ ^ repeat
if XX if ^ OK
y- IN ^ ^ repeat
they IN they ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
have RB have ^ OK
faith VB faith ^ OK
they IN ^ ^ false_start
you IN and ^ false_start
if NN if ^ OK
you IN you ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
have RB have ^ OK
faith VB faith ^ OK
in NN in ^ OK
god IN god ^ OK
because NNP because ^ OK
then IN then ^ OK
it RB ^ ^ false_start
just PRP ^ ^ false_start
becomes RB ^ ^ false_start
you VBZ you ^ OK
become PRP become ^ OK
a VBP a ^ OK
statistic DT statistic ^ OK
i NN i ^ OK
think PRP think ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
had VBD ^ ^ repeat
had VBD had ^ OK
just RB just ^ OK
grown VBN grown ^ OK
up RP up ^ OK
in IN in ^ OK
a DT a ^ OK
christian JJ christian ^ OK
home NN home ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
had VBD had ^ OK
n't RB n't ^ OK
basically RB ^ ^ filler

and CC ^ ^ false_start
uh UH ^ ^ filler
he PRP ^ ^ false_start
is VBZ ^ ^ false_start
just RB ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
something NN something ^ OK
he PRP ^ ^ repeat
he PRP ^ ^ repeat
he PRP he ^ OK
had VBD ^ ^ repeat
'd VBD ^ ^ repeat
had VBD had ^ OK
never RB ^ ^ repeat
never RB never ^ OK
been VBN been ^ OK
taught VBN taught ^ OK

had VBD he ^ false_start
never RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
never RB never ^ OK
really RB ^ ^ repeat
really RB really ^ OK
had VBD ^ ^ repeat
had VBD had ^ OK
any DT any ^ OK
real RB real ^ OK
good JJ good ^ OK
role NN role ^ OK
models NNS models ^ OK
for IN for ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
thing NN thing ^ OK

uh UH ^ ^ filler
really RB ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
surprised JJ ^ ^ false_start
our PRP ^ ^ false_start
our PRP ^ ^ false_start
he PRP he ^ OK
did VBD did ^ OK
n't RB n't ^ OK
really RB really ^ OK
have VB have ^ OK
eh UH ^ ^ filler
views NNS views ^ OK
one CD one ^ OK
way NN way ^ OK
or CC or ^ OK
the DT the ^ OK
other JJ other ^ OK

he PRP he ^ OK
was VBD was ^ OK
n't RB n't ^ OK
anti JJ anti ^ OK
christian JJ christian ^ OK

but CC ^ ^ false_start
he PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he ^ OK
just RB just ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
a DT a ^ OK
believer NN believer ^ OK

it PRP ^ ^ false_start
was VBD ^ ^ false_start
and CC ^ ^ filler
we PRP we ^ OK
did VBD did ^ OK
n't RB n't ^ OK
really RB really ^ OK
fuss VB fuss ^ OK
and CC and ^ OK
fight VB fight ^ OK
about IN about ^ OK
it PRP it ^ OK
either RB either ^ OK

it PRP ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
really RB ^ ^ false_start
a DT ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
knew VBD knew ^ OK
where WRB where ^ OK
i PRP i ^ OK
was VBD was ^ OK
with IN with ^ OK
my PRP my ^ OK
faith NN faith ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
d- VBD ^ ^ false_start
at IN at ^ OK
the DT the ^ OK
time NN time ^ OK
i PRP ^ ^ false_start
really RB ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
um UH ^ ^ filler
it PRP it ^ OK
did SBAR-1 did ^ OK
n't VBD n't ^ OK
bother RB bother ^ OK
me VB me ^ OK
that PRP that ^ OK
he IN he ^ OK
did PRP did ^ OK
n't VBD n't ^ OK
have RB have ^ OK
a VB a ^ OK
lot DT lot ^ OK
of NN of ^ OK
faith IN faith ^ OK

well UH ^ ^ filler
um UH ^ ^ filler
there EX ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
heard VBD heard ^ OK
on IN on ^ OK
the DT the ^ OK
news NN news ^ OK
about IN about ^ OK
uh UH ^ ^ filler
this DT this ^ OK
one CD one ^ OK
guy NN guy ^ OK
that WDT that ^ OK
killed VBD killed ^ OK
a DT a ^ OK
cop NN cop ^ OK

now RB ^ ^ filler
he PRP he ^ OK
done VBN ^ ^ false_start
did VBD did ^ OK
like UH ^ ^ filler
at RB at ^ OK
least RBS least ^ OK
thirty-five CD thirty-five ^ OK
years NNS years ^ OK
in IN in ^ OK
jail NN jail ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
'd MD ^ ^ false_start
but CC ^ ^ false_start
i- PRP ^ ^ false_start
tell VBP tell ^ OK
you PRP you ^ OK
the DT the ^ OK
truth NN truth ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

tha- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
right JJ right ^ OK

he PRP he ^ OK
was VBD was ^ OK
in IN ^ ^ false_start
uh UH ^ ^ filler
um UH ^ ^ filler
one CD one ^ OK
of IN of ^ OK
bikers NNS the ^ false_start
bike- NNS ^ ^ repeat
them DT ^ ^ false_start
bikers NNS bikers ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start

well UH ^ ^ filler
they PRP ^ ^ false_start
say VBP ^ ^ false_start
wel- UH ^ ^ false_start
the DT the ^ OK
way NN way ^ OK
i PRP i ^ OK
got VBD got ^ OK
it PRP it ^ OK
they ADVP-MNR- 1 ^ ^ false_start
do- PRP ^ ^ false_start
they VBP ^ ^ repeat
they PRP they ^ OK
want PRP want ^ OK
to VB to ^ OK
let TO let ^ OK
him VB him ^ OK
go PRP go ^ OK

and CC ^ ^ false_start
somebody NN ^ ^ false_start
up IN ^ ^ false_start
in IN ^ ^ false_start
the- DT ^ ^ false_start
then RB ^ ^ filler
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
k- VB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
keep VB keep ^ OK
him PRP him ^ OK
in IN in ^ OK
jail NN jail ^ OK

regardless RB regardless ^ OK
who WP who ^ OK
he PRP he ^ OK
killed VBD killed ^ OK
you NP-1 ^ ^ filler
know PRP ^ ^ filler
you VBP you ^ OK
should PRP should ^ OK
've MD 've ^ OK
let VB let ^ OK
him VB him ^ OK
go PRP go ^ OK

th- PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they ^ OK
have VBP have ^ OK
other JJ other ^ OK
people NNS people ^ OK
that DT ^ ^ repeat
that WDT that ^ OK
killed VBD killed ^ OK
cops NNS cops ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
they PRP ^ ^ false_start
out RB are ^ false_start
out RB out ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
he PRP he ^ OK
he PRP ^ ^ false_start
been VBN 's ^ false_start
been VBN been ^ OK
in IN in ^ OK
jail NN jail ^ OK
for IN for ^ OK
thirty-five CD thirty-five ^ OK
years NNS years ^ OK

so UH ^ ^ filler
what WP ^ ^ repeat
uh UH ^ ^ filler
wha- WP ^ ^ repeat
wha- WP ^ ^ repeat
what WP what ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
the DT the ^ OK
hang NN hang ^ OK
up RP up ^ OK
in IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in ^ OK
turning VBG turning ^ OK
him PRP him ^ OK
loose JJ loose ^ OK

me PRP me ^ OK
neither RB neither ^ OK

me PRP me ^ OK
neither RB neither ^ OK

noth- JJ ^ ^ repeat
nobody NN nobody ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
ai VBP ^ ^ repeat
ai VBP is ^ false_start
n't RB ^ ^ repeat
n't RB ^ ^ false_start
going VBG going ^ OK
to TO to ^ OK
make VB make ^ OK
me PRP me ^ OK
do VB do ^ OK
nothing NN anything ^ false_start
to IN to ^ OK
them PRP them ^ OK
that WDT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that ^ OK
will MD will ^ OK
carry VB carry ^ OK
a DT a ^ OK
time NN time ^ OK
like IN like ^ OK
that DT that ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
other RB ^ ^ false_start
than IN ^ ^ false_start
that DT ^ ^ false_start
i PRP ^ ^ false_start
would MD ^ ^ false_start
n't RB ^ ^ false_start
even RB ^ ^ false_start
man UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
they PRP their ^ false_start
thing NN thing ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
like IN like ^ OK
this DT this ^ OK
no DT no ^ OK
matter NN matter ^ OK
what WP what ^ OK
you PRP you ^ OK
do VBP do ^ OK

i NP-1 i ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
knock RB knock ^ OK
it VB it ^ OK

because IN ^ ^ false_start
if IN if ^ OK
that DT that ^ OK
was VBD was ^ OK
the DT the ^ OK
case NN case ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there ^ OK
's BES are ^ false_start
some DT some ^ OK
people NNS people ^ OK
in IN in ^ OK
my PRP my ^ OK
family NN family ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
have VB have ^ OK
got VBN gotten ^ false_start
rid VBN rid ^ OK
of IN of ^ OK
a NP-1 a ^ OK
long DT long ^ OK
time JJ time ^ OK
ago NN ago ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
li- IN ^ ^ repeat
like IN ^ ^ filler
now RB now ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
get VB get ^ OK
in IN in ^ OK
touch NN touch ^ OK
with IN with ^ OK
me PRP me ^ OK
because IN because ^ OK
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
where WRB where ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
at IN at ^ OK
or ADVP-1 ^ ^ false_start
nothing CC ^ ^ false_start

i PRP i ^ OK
just RB just ^ OK
lea- VBP ^ ^ repeat
leave VBP leave ^ OK
it PRP it ^ OK
at IN at ^ OK
that DT that ^ OK

that DT that ^ OK
way NN way ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
s- VBZ ^ ^ repeat
s- VBZ ^ ^ repeat
saves VBZ saves ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
heartaches NNS ^ ^ false_start
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
there RB heartache ^ false_start

you PRP ^ ^ repeat
you PRP you ^ OK
live VBP live ^ OK
much RB much ^ OK
easier RBR easier ^ OK

my PRP ^ ^ false_start
s- NNS ^ ^ false_start
i PRP i ^ OK
got VBP have ^ false_start
a DT a ^ OK
couple NN couple ^ OK
sons NNS sons ^ OK

yeah UH ^ ^ filler
but CC ^ ^ false_start
they PRP they ^ OK
they PRP ^ ^ false_start
crazy JJ are ^ false_start
crazy JJ crazy ^ OK

they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
even RB even ^ OK
know VB know ^ OK
where WRB where ^ OK
i PRP i ^ OK
live VBP live ^ OK
at IN ^ ^ false_start
or ADVP-1 ^ ^ false_start
nothing CC ^ ^ false_start

nobody NN nobody ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
look UH ^ ^ false_start
look UH ^ ^ false_start
eh UH ^ ^ filler
me- XX ^ ^ false_start
ai VBP is ^ false_start
n't RB ^ ^ false_start
here NAC-1 here ^ OK
but RB but ^ OK
my CC ^ ^ repeat
well JJS ^ ^ filler
well UH ^ ^ filler
my UH my ^ OK
oldest PRP ^ ^ repeat
oldest PRP oldest ^ OK
two JJS two ^ OK
daughters CD daughters ^ OK

well UH ^ ^ filler
my PRP my ^ OK
they PRP ^ ^ false_start
oldest JJS oldest ^ OK
they PRP ^ ^ false_start
daughters NNS daughters ^ OK
they PRP ^ ^ false_start
're VBP are ^ OK
my- PRP ^ ^ repeat
my PRP my ^ OK
g- NNS ^ ^ repeat
girls NNS girls ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
know VBP know ^ OK
where WRB where ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
at IN at ^ OK

they PRP they ^ OK
come VBP come ^ OK
see VB see ^ OK
me PRP me ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
my PRP my ^ OK
boys NNS boys ^ OK
hey UH ^ ^ filler

and CC ^ ^ false_start
i PRP i ^ OK
tell VBP tell ^ OK
my PRP my ^ OK
girls NNS girls ^ OK
if IN if ^ OK
they PRP they ^ OK
ever RB ever ^ OK
give VBP give ^ OK
my PRP my ^ OK
address NN address ^ OK
or RP or ^ OK
phone CC phone ^ OK
number NN number ^ OK
out NAC-1 out ^ false_start
i NN i ^ OK
wo PRP wo ^ OK
n't MD n't ^ OK
even RB even ^ OK
mess RB mess ^ OK
with VB with ^ OK
them IN them ^ OK

jackie NNP jackie ^ OK
jackie NNP ^ ^ false_start
twenty-one CD ^ ^ false_start
twenty-nine CD is ^ false_start
twenty-one CD ^ ^ repeat
i PRP ^ ^ filler
'm VBP ^ ^ filler
sorry JJ ^ ^ filler
eighteen CD ^ ^ false_start
i PRP ^ ^ filler
mean- VBP ^ ^ filler
oh UH ^ ^ filler
boy UH ^ ^ filler
twenty-one CD twenty-one ^ OK
and CC or ^ false_start
twenty-nine CD twenty-nine ^ OK

eh UH eh ^ OK

my PRP my ^ OK
we PRP ^ ^ false_start
wife NN wife ^ OK
we PRP ^ ^ false_start
and CC ^ ^ false_start
we PRP and ^ false_start
so UH ^ ^ filler
me PRP ^ ^ false_start
we PRP i ^ false_start
and CC ^ ^ false_start
here RB are ^ false_start
here RB here ^ OK
jus- RB ^ ^ repeat
just RB just ^ OK
and CC ^ ^ false_start
her PRP her ^ OK
and CC and ^ OK
i PRP i ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
we PRP we ^ OK
we PRP ^ ^ false_start
doing VBG are ^ false_start
doing VBG doing ^ OK
all RB all ^ OK
right RB right ^ OK

um UH ^ ^ filler
one CD one ^ OK
nine CD nine ^ OK
one CD one ^ OK
seven CD seven ^ OK
and CC and ^ OK
one CD one ^ OK
five CD five ^ OK

well UH ^ ^ filler
with IN ^ ^ repeat
with IN with ^ OK
children NNS children ^ OK
it PRP it ^ OK
it PRP ^ ^ repeat
is VBZ is ^ OK
because IN because ^ OK
you PRP you ^ OK
've VBP 've ^ OK
got VBN got ^ OK
the DT the ^ OK
easter NNP easter ^ OK
egg NNP egg ^ OK
hunt NN hunt ^ OK

and CC ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
associated VBN associated ^ OK
with IN with ^ OK
any DT any ^ OK
denom- NN ^ ^ repeat
denomination NN denomination ^ OK
or CC or ^ OK
if IN if ^ OK
you PRP you ^ OK
went VBD went ^ OK
to IN to ^ OK
church NN church ^ OK
then RB then ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX there ^ OK
would MD would ^ OK
be VB be ^ OK
gatherings NNS gatherings ^ OK
there RB there ^ OK
and CC and ^ OK
then CC then ^ OK
gatherings NNS gatherings ^ OK
with IN with ^ OK
family NN family ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

an- CC ^ ^ repeat
and CC ^ ^ false_start
so RB so ^ OK
do VBP do ^ OK
i ADVP-PRD- 1 i ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
also RB also ^ OK
catholic JJ catholic ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
associate VBP associate ^ OK
with IN with ^ OK
that DT that ^ OK
too RB too ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
also RB also ^ OK
with IN with ^ OK
nature NN nature ^ OK
itself PRP itself ^ OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
's BES _ARG_ ^ false_start

um UH ^ ^ filler
so UH ^ ^ filler
an- CC ^ ^ repeat
and CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
love VBP love ^ OK
that DT that ^ OK

after IN ^ ^ repeat
after IN after ^ OK
everything NN everything ^ OK
's HVS 's ^ OK
been VBN been ^ OK
dead JJ dead ^ OK
and CC and ^ OK
we PRP we ^ OK
've VBP 've ^ OK
celebrated VBN celebrated ^ OK
winter NN winter ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT that ^ OK
would MD would ^ OK
be VB be ^ OK
a DT a ^ OK
very RB very ^ OK
good JJ good ^ OK
holiday NN holiday ^ OK
to TO ^ ^ repeat
to TO to ^ OK
celebrate VB celebrate ^ OK

m- XX ^ ^ filler
yeah UH yeah ^ OK

well UH ^ ^ filler
here RB ^ ^ false_start
in IN ^ ^ false_start
boston NNP ^ ^ false_start
we PRP ^ ^ false_start
i PRP i ^ OK
live VBP live ^ OK
in IN in ^ OK
boston NNP boston ^ OK
and CC and ^ OK
we PRP we ^ OK
have VBP have ^ OK
this DT this ^ OK
thing NN thing ^ OK
called VBN called ^ OK
bunker NNP bunker ^ OK
hill NNP hill ^ OK
day NN day ^ OK

and CC ^ ^ false_start
that DT that ^ OK
was VBD was ^ OK
when WRB when ^ OK
bunk NNP ^ ^ false_start
uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
battle NN battle ^ OK
of IN of ^ OK
bunker NNP bunker ^ OK
hill NNP hill ^ OK
the DT ^ ^ false_start
battle NN _ARG_ ^ false_start

it PRP ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
very RB ^ ^ false_start
mu- XX ^ ^ false_start
and CC ^ ^ false_start
so RB ^ ^ filler
of IN ^ ^ repeat
of IN of ^ OK
course NN ^ ^ repeat
course NN course ^ OK
is VBZ ^ ^ repeat
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the ^ OK
government NN ^ ^ repeat
government NN government ^ OK
workers NNS workers ^ OK
are VBP are ^ OK
off JJ off ^ OK

and CC ^ ^ false_start
n- XX ^ ^ repeat
n- XX ^ ^ false_start
unless IN unless ^ OK
you PRP you ^ OK
are VBP are ^ OK
from IN from ^ OK
boston NNP boston ^ OK
which WDT which ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK

but CC ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
from IN from ^ OK
boston NNP boston ^ OK
and CC and ^ OK
you PRP you ^ OK
were VBD were ^ OK
raised VBN raised ^ OK
here RB here ^ OK
everyone NN everyone ^ OK
knows VBZ knows ^ OK
about IN about ^ OK
it PRP it ^ OK

especially RB especially ^ OK
when WRB when ^ OK
people NNS people ^ OK
start VBP start ^ OK
talking VBG talking ^ OK
that DT ^ ^ false_start
an- CC ^ ^ repeat
and CC and ^ OK
stuff NN ^ ^ false_start
like IN ^ ^ false_start
in IN in ^ OK
the DT the ^ OK
movies NNS movies ^ OK

well UH ^ ^ filler
uh UH ^ ^ filler
my PRP ^ ^ false_start
movie NN ^ ^ false_start
going NN ^ ^ false_start
i PRP i arg1 OK
probably RB probably ^ OK
go VBP go predicate OK
maybe RB ^ ^ filler
once RB once arg2 OK
a DT a arg2 OK
month NN month arg2 OK
uh UH ^ ^ filler
because IN because ^ OK
i PRP i arg0 OK
do VBP ^ ^ false_start
have VB have predicate OK
a DT a arg1 OK
home NN home arg1 OK
based VBN based arg1 OK
business NN business arg1 OK

got VBD got ^ OK
a DT a ^ OK
coup- JJ ^ ^ repeat
lot NN lot ^ OK
things NNS things ^ OK
going VBG going ^ OK

and CC ^ ^ filler
so UH ^ ^ filler
uh UH ^ ^ filler
just RB just ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
busier JJR busier ^ OK
than IN than ^ OK
normal JJ normal ^ OK

and CC ^ ^ false_start
so RB ^ ^ filler
but CC ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
try VBP try predicate OK
to TO to arg1 OK
get VB get arg1 OK
out RB out arg1 OK
at RB at argM_tmp OK
least RB least argM_tmp OK
once RB once argM_tmp OK
a DT a argM_tmp OK
month NN month argM_tmp OK
to TO to arg1 OK
see VB see arg1 OK
a DT a arg1 OK
real RB real arg1 OK
good JJ good arg1 OK
movie NN movie arg1 OK

i PRP i arg1 OK
'd MD 'd ^ OK
actually RB ^ ^ false_start
uh UH actually ^ filler
just RB just ^ OK
been VBN been predicate OK
to IN to arg2 OK
one CD one arg2 OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
days NNS days ^ OK
ago RB ago ^ OK
this DT this argM_loc OK
last JJ ^ ^ false_start
past JJ past argM_loc OK
weekend NN weekend argM_loc OK

and CC ^ ^ false_start
gosh UH ^ ^ filler
what WP ^ ^ repeat
it PRP ^ ^ repeat
what WP what arg2 OK
was VBD was predicate OK
that DT that arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
actually UH actually ^ false_start
took VBD ^ ^ repeat
sort RB ^ ^ filler
of RB ^ ^ filler
took VBD took predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
date NN date arg1 OK

and CC ^ ^ false_start
she PRP ^ ^ repeat
she PRP she arg0 OK
picked VBD picked predicate OK
it PRP it arg1 OK
out RP out ^ OK

it PRP it arg1 OK
uh UH ^ ^ filler
w- XX ^ ^ false_start
actually RB actually ^ false_start
was VBD was predicate OK
n't RB n't ^ OK
a DT a arg2 OK
chick NN chick arg2 OK
flick NN flick arg2 OK

la- NNP ^ ^ repeat
yeah UH yeah ^ OK

you PRP ^ ^ false_start
and CC ^ ^ false_start
uh UH ^ ^ filler
it PRP it arg1 OK
was VBD was predicate OK
another DT another arg2 OK
guy NN guy arg2 OK
in SBAR-1 in arg2 OK
there IN there arg2 OK
that RB that arg1 OK
was WDT was predicate OK
kind VBD kind arg2 OK
of RB of arg2 OK
popular RB popular arg2 OK

but CC but ^ OK
uh UH ^ ^ filler

for IN for ^ OK
example NN example ^ OK
if IN if ^ OK
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
rainy JJ rainy ^ OK
stormy JJ stormy ^ OK
day NN ^ ^ repeat
day NN day ^ OK
or CC ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
in IN in arg2 OK
texas NNP texas arg2 OK
and CC ^ ^ false_start
so UH so ^ OK
our PRP ^ ^ repeat
our PRP ^ ^ false_start
it PRP it arg0 OK
can MD can ^ OK
get VB get predicate OK
really RB really arg1 OK
cold JJ cold arg1 OK
here RB here argM_loc OK

so UH so ^ OK
if IN if ^ OK
it PRP it ^ OK
's BES 's ^ OK
like UH ^ ^ filler
a DT a ^ OK
gloomy JJ gloomy ^ OK
cold JJ cold ^ OK
day NN day ^ OK
now UH then ^ false_start
that DT ^ ^ repeat
that DT it ^ false_start
's BES ^ ^ repeat
's BES 's ^ OK
a DT a ^ OK
great JJ great ^ OK
time NN time ^ OK
to TO to ^ OK
go VB go ^ OK
rent VB rent ^ OK
movies NNS movies ^ OK

ah UH ^ ^ filler
most RBS most ^ OK
definitely RB definitely ^ OK
because IN because ^ OK
you PRP ^ ^ filler
you PRP you arg0 OK
can MD can ^ OK
hear VB hear predicate OK
all PDT all arg1 OK
the DT of ^ false_start
the DT the arg1 OK
effects NNS effects arg1 OK

ther- XX ^ ^ repeat
i PRP i arg0 OK
did VBD did ^ OK
see VB see predicate OK
that DT that arg1 OK

no UH no ^ OK
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it arg1 OK
really RB really ^ OK
is VBZ is predicate OK
n't RB n't arg2 OK

now UH now ^ OK
what WDT what ^ OK
kind NN kind ^ OK
of IN of ^ OK
movies NNS movies ^ OK
do VBP do ^ OK
you PRP you arg0 OK
get VB get predicate OK
into IN into arg1 OK

if IN if arg0 OK
you PRP you ^ OK
had VBD had predicate OK
all PDT ^ ^ repeat
all PDT all arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
movies NNS movies arg2 OK
are VBP ^ ^ false_start
at IN at arg2 OK
the DT the arg2 OK
theater NN theater arg2 OK
and CC and ^ OK
you PRP you arg0 OK
said VBD said predicate OK
okay UH okay arg1 OK
would MD ^ ^ repeat
would MD would ^ OK
it PRP ^ ^ repeat
it PRP it arg1 OK
be VB be predicate OK
comedy NN comedy arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
my PRP the arg1 false_start
number NN number arg1 OK
number NP-2 ^ ^ repeat
one CD one arg1 OK
one NN ^ ^ repeat
thing NN thing arg1 OK
i PRP i arg1 OK
'd MD 'd arg1 OK
go VB go arg1 OK
see VB see arg1 OK
is CD is arg2 OK
action-packed VBZ action-packed arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
have VBP have ^ OK
you PRP you arg0 OK
seen VBN seen predicate OK
bad NNP bad arg1 OK
boys NNPS boys arg1 OK
uh UH ^ ^ filler
two CD two arg1 OK

now UH now ^ OK
that DT ^ ^ repeat
that DT that arg1 OK
was VBD was predicate OK
good JJ good arg2 OK
action NN action arg2 OK

um UH ^ ^ filler
to IN ^ ^ false_start
me PRP ^ ^ false_start
a- XX ^ ^ false_start
so- DT ^ ^ repeat
some DT some arg1 OK
of IN of arg1 OK
my PRP my arg1 OK
family NN family arg1 OK
members NNS members arg1 OK
are VBP are predicate OK
my PRP my arg2 OK
best JJS best arg2 OK
friends NNS friends arg2 OK

h- WRB ^ ^ repeat
how WRB how ^ OK
about IN about ^ OK
you PRP you ^ OK

where WRB ^ ^ false_start
so RB ^ ^ repeat
y- PRP ^ ^ repeat
do VB ^ ^ false_start
y- PRP ^ ^ false_start
so RB ^ ^ filler
is VBZ ^ ^ repeat
is VBZ is predicate OK
she PRP she arg1 OK
distant JJ distant arg2 OK
from IN from arg2 OK
you PRP you arg2 OK
then RB then arg2 OK
um UH ^ ^ filler
l- RB ^ ^ repeat
location NN location arg2 OK
wise RB wise arg2 OK

where WRB ^ ^ repeat
where WRB where argM_loc OK
d- VBP ^ ^ repeat
do VBP do ^ OK
you PRP you arg0 OK
live VB live predicate OK
right RB right argM_tmp OK
now RB now argM_tmp OK

so RB ^ ^ repeat
mos- JJ ^ ^ repeat
so UH ^ ^ repeat
so UH ^ ^ repeat
most RBS ^ ^ false_start
so UH ^ ^ filler
your PRP your arg1 OK
sister NN sister arg1 OK
's BES 's predicate OK
in IN in arg2 OK
california NNP california arg2 OK

and CC ^ ^ repeat
and CC and ^ OK
everyo- NN ^ ^ false_start

how WRB how ^ OK
about IN about ^ OK
kids NNS kids ^ OK
or CC or ^ OK
nieces NNS nieces ^ OK
or CC or ^ OK
nephews NNS nephews ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
two CD two arg1 OK
year NN year arg1 OK
old JJ old arg1 OK
child NN child arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
married JJ married arg2 OK

and CC ^ ^ false_start
my PRP my arg1 OK
parents NNS parents arg1 OK
are VBP are predicate OK
still RB still arg2 OK
i- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
very RB very arg2 OK
m- JJ ^ ^ repeat
maternal JJ maternal arg2 OK
and CC and arg2 OK
paternal JJ paternal arg2 OK

they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
definitely RB ^ ^ repeat
definitely RB definitely arg2 OK
more RBR more arg2 OK
lenient JJ lenient arg2 OK

and CC ^ ^ false_start
he PRP he arg0 OK
says VBZ says predicate OK
remember VB remember arg1 OK
when WRB when arg1 OK
you PRP you arg1 OK
were VBD were arg1 OK
growing VBG growing arg1 OK
up RP up arg_particl OK
i ADVP-TMP- 1 i arg0 OK
told PRP told arg1 OK
you VBD you arg2 OK
i PRP i arg0 OK
was PRP was arg1 OK
going VBD going arg1 OK
to VBG to arg1 OK
get TO get arg1 OK
you VB you arg1 OK
back PRP back arg1 OK
with RP ^ ^ false_start
your IN ^ ^ false_start
gr- PRP ^ ^ false_start
when NN when arg1 OK
you WRB you arg0 OK
had PRP had arg1 OK
kids VBD kids arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
um UH ^ ^ filler
children NNS children arg1 OK
definitely RB definitely arg2 false_start
are VBP ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
are VBP are arg1 OK
a DT a arg2 OK
blessing NN blessing arg2 OK

but CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
work NN work arg2 OK
e- XX ^ ^ false_start
when WRB when ^ OK
it PRP it arg1 OK
's BES 's predicate OK
your PRP your arg2 OK
own JJ own arg2 OK
child NN child arg2 OK

but CC but ^ OK
when WRB ^ ^ repeat
when WRB when ^ OK
you PRP you arg0 OK
're VBP 're predicate OK
a DT a arg2 OK
grandparent NN grandparent arg2 OK
or CC or ^ OK
or CC have predicate false_start
th- XX ^ ^ false_start
say UH ^ ^ false_start
nephews NNS nephews arg1 OK
and CC and arg1 OK
nieces NNS nieces arg1 OK
you ADVP-TMP- 1 you arg0 OK
get PRP get predicate OK
all VBP ^ ^ repeat
all DT all arg1 OK
of RB ^ ^ repeat
of DT of arg1 OK
the IN ^ ^ repeat
the IN the arg1 OK
benefits DT benefits arg1 OK

but CC but ^ OK
none NN none ^ OK
of IN of ^ OK
th- XX ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler

like UH ^ ^ filler
for IN for ^ OK
instance NN instance ^ OK
my PRP my arg0 OK
husband NN husband arg0 OK
we PRP ^ ^ false_start
and CC and arg0 OK
we PRP ^ ^ false_start
i PRP i arg0 OK
we PRP ^ ^ false_start
were VBD ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
ha- XX ^ ^ false_start
were VBD were ^ OK
recently RB ^ ^ repeat
recently RB recently ^ OK
going VBG going predicate OK
through IN through arg_particl OK
financial JJ financial arg1 OK
hardship NN hardships arg1 false_start
and CC and ^ OK
um UH ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
were VBD were ^ OK
moving VBG moving predicate OK

and CC ^ ^ false_start
um UH ^ ^ filler
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
my PRP ^ ^ repeat
my PRP ^ ^ repeat
my PRP my arg1 OK
f- NN ^ ^ repeat
f- NN ^ ^ repeat
family NN family arg1 OK
is VBZ is predicate OK
within IN within arg2 OK
driving NN driving arg2 OK
distance NN distance arg2 OK

so RB ^ ^ false_start
it PRP it arg1 OK
's S-1 's ^ OK
just HVS just ^ OK
been RB been predicate OK
such VBN such arg2 OK
a PDT a arg2 OK
blessing DT blessing arg2 OK
to NN to arg2 OK
have TO have arg2 OK
them VB them arg1 OK
near PRP near argM_loc OK
because RB because ^ OK
like IN ^ ^ filler
say UH ^ ^ filler
my UH my arg0 OK
sister PRP sister arg0 OK
was NN was ^ OK
able VBD able ^ OK
to JJ to ^ OK
babysit TO babysit predicate OK
my VB my arg1 OK
son PRP son arg1 OK
for NN for argM_tmp OK
a IN ^ ^ repeat
a DT a argM_tmp OK
day DT day argM_tmp OK
or NN or argM_tmp OK
two CC two argM_tmp OK

so RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
e- XX ^ ^ false_start
um UH ^ ^ filler

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
ha- VBP ^ ^ false_start

so RB ^ ^ false_start
do VBP do ^ OK
you PRP you arg0 OK
see VB see predicate OK
your PRP ^ ^ repeat
your PRP your arg1 OK
sister NN sister arg1 OK
's POS 's arg1 OK
kids NNS kids arg1 OK
a DT a ^ OK
lot NN lot ^ OK

or CC or ^ OK
are VBP ^ ^ repeat
you PRP ^ ^ false_start
are VBP are predicate OK
they PRP they arg1 OK
all DT all arg2 OK
in IN in arg2 OK
california NNP california arg2 OK

that DT that ^ OK
's BES 's ^ OK
really RB really ^ OK
uh UH ^ ^ filler
tough JJ tough ^ OK
when WRB when ^ OK
it PRP it ^ OK
comes VBZ comes ^ OK
to IN to ^ OK
death NN death ^ OK
and ADVP-TMP- 1 and ^ OK
if CC if ^ OK
there IN there ^ OK
's EX 's ^ OK
like BES ^ ^ filler
an UH an ^ OK
estate DT estate ^ OK
left NN left ^ OK
behind VBN behind ^ OK

because RP because ^ OK
my IN ^ ^ repeat
my PRP my arg1 OK
grandfather PRP grandfather arg1 OK
recently NN recently argM_tmp OK
died RB died predicate OK

and CC ^ ^ false_start
some DT ^ ^ repeat
of IN ^ ^ repeat
u- PRP ^ ^ repeat
some DT ^ ^ false_start
of IN ^ ^ false_start
us PRP ^ ^ false_start
like IN ^ ^ false_start
me PRP ^ ^ false_start
um UH ^ ^ filler
i PRP i ^ OK
do- VBZ do- ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
just RB ^ ^ repeat
like UH ^ ^ filler
we PRP ^ ^ repeat
we PRP ^ ^ repeat
just RB ^ ^ false_start
we PRP we arg0 OK
kind RB kind ^ OK
of RB of ^ OK
have VBP ^ ^ repeat
have VBP ^ ^ repeat
have VBP ^ ^ repeat
of RB have predicate false_start
an DT an arg1 OK
issue NN issue arg1 OK
going VBG going arg1 OK

it PRP it ^ OK
's HVS 's ^ OK
pretty RB pretty ^ OK
much RB much ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ false_start
uh UH ^ ^ filler
become VBN become ^ OK
very RB very ^ OK
established JJ established ^ OK

uh UH ^ ^ filler
many JJ many ^ OK
countries NNS countries ^ OK
uh UH ^ ^ filler
and CC and ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
major JJ major ^ OK
universities NNS universities ^ OK
do VBP do ^ OK
require VB require ^ OK
uh UH ^ ^ filler
a DT a ^ OK
foreign JJ foreign ^ OK
language NN language ^ OK

um UH ^ ^ filler
but CC but ^ OK
there EX ^ ^ false_start
's BES ^ ^ false_start
so RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
for IN for ^ OK
example NN example ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
say UH ^ ^ repeat
say UH say ^ OK
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
going VBG going ^ OK
to IN to ^ OK
college NN college ^ OK
to TO to ^ OK
be VB be ^ OK
a DT ^ ^ repeat
a DT a ^ OK
like UH ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
uh UH ^ ^ filler
dental JJ dental ^ OK
assistant NN assistant ^ OK
or CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
really RB really ^ OK
do VBP do ^ OK
n't RB n't ^ OK
see VB see ^ OK
too RB too ^ OK
much JJ much ^ OK
of IN of ^ OK
a DT a ^ OK
point NN point ^ OK
of IN of ^ OK
requiring VBG requiring ^ OK
that IN that ^ OK
you PRP you ^ OK
have VBP have ^ OK
a DT a ^ OK
foreign JJ foreign ^ OK
language NN language ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
've VBP ^ ^ false_start
personally RB ^ ^ false_start
all UH ^ ^ false_start
right UH ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
more RBR more ^ OK
you PRP you ^ OK
know VBP know ^ OK
the NP-1 the ^ OK
better DT better ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
all RB all ^ OK
for IN for ^ OK
learning VBG learning ^ OK
languages NNS languages ^ OK

but CC but ^ OK
is VBZ ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
it PRP it ^ OK
being VBG being ^ OK
a DT a ^ OK
requirement NN requirement ^ OK
per FW per ^ OK
se FW se ^ OK
i PRP i ^ OK
mean VBP mean ^ OK
there EX there ^ OK
's BES 's ^ OK
other JJ other ^ OK
important JJ important ^ OK
things NNS things ^ OK
too RB too ^ OK

i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
they PRP they ^ OK
should MD should ^ OK
give VB give ^ OK
uh UH ^ ^ filler
students NNS students ^ OK
a DT a ^ OK
much RB much ^ OK
broader JJR broader ^ OK
like UH ^ ^ filler
a DT ^ ^ repeat
a DT a ^ OK
more JJR more ^ OK
world NN world ^ OK
view NN view ^ OK
of IN of ^ OK
things NNS things ^ OK

an- CC ^ ^ repeat
and CC ^ ^ false_start
that DT that ^ OK
would MD would ^ OK
i PRP i ^ OK
think VBP think ^ OK
get VB get ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
kids NNS kids ^ OK
maybe RB maybe ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
actually RB actually ^ OK
interested JJ interested ^ OK
in IN in ^ OK
taking VBG taking ^ OK
up RP up ^ OK
some DT some ^ OK
kind NN kind ^ OK
of IN of ^ OK
foreign JJ foreign ^ OK
language NN language ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
would MD would ^ OK
give VB give ^ OK
them PRP them ^ OK
more JJR more ^ OK
incentive NN incentive ^ OK
of IN of ^ OK
learning VBG learning ^ OK
it PRP it ^ OK

but CC but ^ OK
other JJ other ^ OK
countries NNS countries ^ OK
require VBP require ^ OK
their PRP their ^ OK
people NNS people ^ OK
their PRP their ^ OK
students NNS students ^ OK
their PRP and ^ false_start
their PRP their ^ OK
children NNS children ^ OK
to TO to ^ OK
learn VB learn ^ OK
english NNP english ^ OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
uh UH ^ ^ repeat
we PRP we ^ OK
as IN as ^ OK
americans NNPS americans ^ OK
or CC or ^ OK
english NNP english ^ OK
speaking VBG speaking ^ OK
people NNS people ^ OK

i PRP i ^ OK
have VBP have ^ OK
n't RB n't ^ OK
had VBN had ^ OK
any DT any ^ OK
problems NNS problems ^ OK
in IN in ^ OK
my PRP my ^ OK
travels NNS travels ^ OK

although RB although ^ OK
when WRB when ^ OK
i PRP i ^ OK
do VBP do ^ OK
travel VB travel ^ OK
to IN to ^ OK
foreign JJ foreign ^ OK
countries NNS countries ^ OK
i ADVP-TMP- 1 i ^ OK
will PRP will ^ OK
uh MD ^ ^ filler
bone UH bone ^ OK
up VB up ^ OK
on RP on ^ OK
their IN their ^ OK
language PRP language ^ OK
you NN ^ ^ filler
know PRP ^ ^ filler
enough VBP enough ^ OK
to RB to ^ OK
get TO get ^ OK
by VB by ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
kind RB ^ ^ filler
of RB ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
think VB think ^ OK
that IN that ^ OK
probably RB probably ^ OK
in IN in ^ OK
spanish NNP spanish ^ OK
and CC and ^ OK
also RB also ^ OK
at IN at ^ OK
this DT this ^ OK
time NN time ^ OK
it PRP it ^ OK
's BES ^ ^ false_start
probably RB probably ^ OK
would MD would ^ OK
be VB be ^ OK
wise JJ wise ^ OK

for IN ^ ^ false_start
like UH ^ ^ filler
i PRP i ^ OK
know VBP know ^ OK
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
coming VBG ^ ^ false_start
up RB ^ ^ false_start
in IN ^ ^ false_start
th- DT ^ ^ false_start
when WRB ^ ^ false_start
i- VBZ ^ ^ false_start
educated VBN educated ^ OK
in IN in ^ OK
the DT the ^ OK
fifties NNS fifties ^ OK
they ADVP-TMP- 1 they ^ OK
did PRP did ^ OK
i- VBD ^ ^ repeat
h- IN ^ ^ repeat
here RB here ^ OK
in RB in ^ OK
elementary IN elementary ^ OK
school JJ school ^ OK
also NN also ^ OK
always RB always ^ OK
make RB make ^ OK
reference VB reference ^ OK
to NN to ^ OK
arabic IN arabic ^ OK

i PRP i ^ OK
think VBP think ^ OK
we PRP we ^ OK
need VBP need ^ OK
to TO to ^ OK
return VB return ^ OK
to IN to ^ OK
them DT those ^ false_start
days NNS days ^ OK
because IN because ^ OK
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
influence NN influence ^ OK
is VBZ is ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
uh UH ^ ^ filler
returning VBG returning ^ OK
now RB now ^ OK
basically RB basically ^ OK
because IN because ^ OK
of IN of ^ OK
the DT the ^ OK
economics NNS economics ^ OK
right RB right ^ OK
now RB now ^ OK
particularly RB particularly ^ OK
with IN with ^ OK
this DT this ^ OK
oil NN oil ^ OK
problem NN problem ^ OK
world NN world ^ OK
wide JJ wide ^ OK

but CC but ^ OK
in IN in ^ OK
college NN college ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
think VB ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
say VB say ^ OK
that IN that ^ OK
they PRP they ^ OK
do VBP do ^ OK
probably RB probably ^ OK
need VB need ^ OK
to TO to ^ OK
i PRP ^ ^ false_start
go VB go ^ OK
along RB along ^ OK
with IN with ^ OK
you PRP you ^ OK
would MD ^ ^ false_start
to TO to ^ OK
encourage VB encourage ^ OK
it PRP it ^ OK

but CC but ^ OK
um UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
you PRP you ^ OK
were VBD were ^ OK
right RB right ^ OK
in IN ^ ^ false_start
re- NN ^ ^ false_start
in IN in ^ OK
a DT a ^ OK
regard NN regard ^ OK
to IN to ^ OK
english NNP english ^ OK
is VBZ is ^ OK
the DT the ^ OK
big JJ big ^ OK
language NN language ^ OK
to TO to ^ OK
know VB know ^ OK

well UH ^ ^ false_start
they PRP they ^ OK
do VBP do ^ OK
intersect VB intersect ^ OK
with IN with ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
spanish NNP spanish ^ OK
speaking VBG speaking ^ OK
for IN for ^ OK

ah UH ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK
using VBG using ^ OK
examples NNS examples ^ OK
spanish NNP of ^ false_start
spanish NNP spanish ^ OK
speaking VBG speaking ^ OK
people NNS people ^ OK

like UH ^ ^ filler
like IN ^ ^ filler
today NN ^ ^ repeat
actually RB actually ^ OK
in IN in ^ OK
uh UH ^ ^ filler
one CD one ^ OK
uh UH of ^ false_start
the DT the ^ OK
things NNS things ^ OK
i PRP i ^ OK
was VBD was ^ OK
doing VBG doing ^ OK
today RB today ^ OK

it PRP it ^ OK
's S-1 's ^ OK
not BES not ^ OK
a RB a ^ OK
requirement DT requirement ^ OK
to NN to ^ OK
know TO know ^ OK
spanish VB spanish ^ OK
because NNP because ^ OK
i IN i ^ OK
'm PRP 'm ^ OK
speaking VBP speaking ^ OK
only VBG only ^ OK
to RB to ^ OK
spanish IN spanish ^ OK
speaking NNP speaking ^ OK
people VBG people ^ OK

you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
enough JJ enough ^ OK
room NN room ^ OK
on IN ^ ^ repeat
uh UH ^ ^ filler
in IN in ^ OK
your PRP ^ ^ repeat
your PRP your ^ OK
graduation NN graduation ^ OK
requirements NNS requirements ^ OK
to TO to ^ OK
but CC but ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
seeing VBG seeing ^ OK
more RBR more ^ OK
and CC and ^ OK
more RBR more ^ OK
in IN in ^ OK
the DT the ^ OK
job NN job ^ OK
market NN market ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
wanting VBG wanting ^ OK
people NNS people ^ OK
to TO to ^ OK
be VB be ^ OK
bilingual JJ bilingual ^ OK

but- CC but- ^ OK
i- IN ^ ^ repeat
in IN in ^ OK
my PRP my ^ OK
travels NNS travels ^ OK
it PRP it ^ OK
is VBZ is ^ OK
an DT an ^ OK
asset NN asset ^ OK

that DT ^ ^ repeat
that DT ^ ^ false_start
well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
noticing VBG noticing ^ OK
that IN that ^ OK
every DT in ^ OK
every DT every ^ OK
country NN country ^ OK
i PRP i ^ OK
go VBP go ^ OK
to IN to ^ OK
english NP-1 english ^ OK
is NNP is ^ OK
known VBZ known ^ OK
by VBN by ^ OK
the IN the ^ OK
school DT school ^ OK
children NN children ^ OK

even RB even ^ OK
in IN in ^ OK
canada NNP canada ^ OK
in IN ^ ^ false_start
french NNP ^ ^ false_start
speak- VBG ^ ^ false_start
in IN ^ ^ repeat
in IN in ^ OK
quebec NNP quebec ^ OK
montreal NNP montreal ^ OK
specifically RB specifically ^ OK
i PRP i ^ OK
know VBP know ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that IN that ^ OK
they PRP they ^ OK
know VBP know ^ OK
how WRB how ^ OK
to TO to ^ OK
speak VB speak ^ OK
english NNP english ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
to TO to ^ OK
get VB get ^ OK
the DT the ^ OK
higher RBR higher ^ OK
paying VBG paying ^ OK
jobs NNS jobs ^ OK
in IN in ^ OK
um UH ^ ^ filler
canada NNP canada ^ OK
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
know VB know ^ OK
english NNP english ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
finding VBG finding ^ OK
throughout IN throughout ^ OK
the DT ^ ^ false_start
coun- NN ^ ^ false_start
the DT ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
the DT the ^ OK
world NN world ^ OK
i PRP i ^ OK
was VBD was ^ OK
like UH like ^ OK
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
in IN in ^ OK
saudi NNP saudi ^ OK
arabia NNP arabia ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
in IN in ^ OK
tunisia NNP tunisia ^ OK
in IN in ^ OK
africa NNP africa ^ OK

in UNK in ^ OK
france UNK france ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
they UNK they ^ false_start
know UNK know ^ OK
engli- UNK english ^ OK

th- UNK they ^ false_start
might UNK might ^ OK
not UNK not ^ OK
want UNK want ^ OK
to UNK to ^ OK
speak UNK speak ^ OK
it UNK it ^ OK
but UNK but ^ OK
they UNK they ^ OK
know UNK know ^ OK

so UH so ^ OK
oh UH oh ^ OK
no UH no ^ OK

it PRP it ^ OK
had VBD had ^ OK
n't RB n't ^ OK
really RB really ^ OK
really RB _VERB_ ^ false_start

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
m- NN ^ ^ repeat
media NN media arg1 OK

like UH ^ ^ filler
right RB right argM_tmp OK
after IN after argM_tmp OK
nine CD nine argM_tmp OK
eleven CD eleven argM_tmp OK
happened VBD happened argM_tmp OK
a DT ^ ^ repeat
of IN ^ ^ repeat
or UH ^ ^ false_start
my PRP my arg0 OK
friend NN ^ ^ repeat
friend NN friend arg0 OK
's POS 's arg0 OK
parents NNS parents arg0 OK
owned VBD owned predicate OK
a DT a arg1 OK
uh UH ^ ^ filler
deli NN deli arg1 OK

it PRP it ^ OK
seems VBZ seems predicate OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK
know VB know arg1 OK
people NNS people arg1 OK
uh UH ^ ^ filler
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK

and CC ^ ^ false_start
like UH ^ ^ filler
they PRP they arg0 OK
searched VBD searched predicate OK
me PRP me arg1 OK
three CD three argM_tmp OK
times NNS times argM_tmp OK
like UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
for IN for ^ OK
i PRP i arg0 OK
d- XX ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
looking VBG looking predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
scummy JJ scummy arg1 OK

but CC but ^ OK
like UH ^ ^ filler
it PRP it ^ OK
just SBAR-1 ^ ^ false_start
seemed RB seemed predicate OK
kind VBD ^ arg1 false_start
of RB ^ arg1 false_start
bizarre RB bizarre arg1 OK
that JJ that ^ OK
like IN ^ ^ filler
i UH i arg0 OK
do PRP do ^ OK
n't VBP n't ^ OK
know RB know predicate OK
really VB really ^ OK
appearance RB appearance arg1 OK
matters NN matters predicate OK
now VBZ now ^ OK

i PRP i ^ OK

you UNK ^ ^ filler
know UNK ^ ^ filler
i- UNK ^ ^ false_start
i UNK ^ ^ false_start
thi- UNK ^ ^ false_start
i- UNK ^ ^ false_start
my UNK my ^ OK
know UNK ^ ^ filler
like UNK ^ ^ filler
i UNK ^ ^ false_start
do UNK ^ ^ false_start
n't UNK ^ ^ false_start
think UNK ^ ^ false_start
that UNK ^ ^ false_start
you UNK ^ ^ filler
feeling UNK feeling ^ OK
is UNK ^ ^ repeat
is UNK is ^ OK
that UNK that ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
the UNK the ^ OK
harder UNK harder ^ OK
you UNK you ^ OK
make UNK make ^ OK
something UNK something ^ OK
to UNK to ^ OK
get UNK get ^ OK
the UNK the ^ OK
more UNK more ^ OK
interested UNK interested ^ OK
people UNK people ^ OK
are UNK are ^ OK
in UNK in ^ OK
getting UNK getting ^ OK
it UNK it ^ OK

it PRP ^ ^ false_start
ca MD ^ ^ false_start
n't RB ^ ^ false_start
they PRP ^ ^ false_start
always RB ^ ^ false_start
the- PRP ^ ^ repeat
their PRP their ^ OK
big JJ big ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
that IN that ^ OK
it PRP ^ ^ false_start
leads VBZ ^ ^ false_start
they PRP they ^ OK
think VBP think ^ OK
that IN that ^ OK
when WRB when ^ OK
people NNS people ^ OK
smoke VBP smoke ^ OK
it PRP ^ ^ repeat
it ADVP-TMP- 1 it ^ OK
'll PRP 'll ^ OK
lead MD lead ^ OK
them VB them ^ OK
to PRP to ^ OK
crack IN crack ^ OK
use NN use ^ OK
and NN and ^ OK
things CC things ^ OK
like NNS like ^ OK
that IN that ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK

i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
be VB be ^ OK
a DT a ^ OK
good JJ good ^ OK
pain NN pain ^ OK
reliever NN reliever ^ OK
for IN for ^ OK
people NNS people ^ OK
who WP who ^ OK
are VBP are ^ OK
suffering VBG suffering ^ OK
like UH ^ ^ filler
who WP who ^ OK
are VBP are ^ OK
in IN in ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
pain NN pain ^ OK
with IN with ^ OK
like UH ^ ^ filler
bone NN bone ^ OK
cancer NN cancer ^ OK
and CC and ^ OK
things NNS things ^ OK
like IN like ^ OK
that DT that ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
see VB see ^ OK
what WP what ^ OK
the DT the ^ OK
big JJ big ^ OK
deal NN deal ^ OK
is VBZ is ^ OK

they PRP ^ ^ false_start
sa- XX ^ ^ false_start
uh UH ^ ^ filler
they PRP ^ ^ false_start
ah UH ^ ^ filler
to IN to ^ OK
me PRP me ^ OK
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK

they PRP they ^ OK
talk VBP talk ^ OK
about IN about ^ OK
how WRB how ^ OK
if IN if ^ OK
you PRP you ^ OK
smoke VBP smoke ^ OK
even RB even ^ OK
cigarettes NNS cigarettes ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
then RB then ^ OK
it PRP it ^ OK
leads VBZ leads ^ OK
you PRP you ^ OK
to TO to ^ OK
smoke VB smoke ^ OK
marijuana NN marijuana ^ OK

and CC ^ ^ false_start
then RB then ^ OK
if IN if ^ OK
you PRP you ^ OK
smoke VBP smoke ^ OK
marijuana NN marijuana ^ OK
it PRP it ^ OK
leads VBZ leads ^ OK
you PRP you ^ OK
to TO to ^ OK
smoke VB smoke ^ OK
all PDT all ^ OK
the DT the ^ OK
other JJ other ^ OK
things NNS things ^ OK
or CC or ^ OK
take VB take ^ OK
u- XX ^ ^ false_start
illegal JJ illegal ^ OK
drugs NNS drugs ^ OK

but CC but ^ OK
i PRP i ^ OK
know VBP know ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
people NNS people ^ OK
who WP who ^ OK
smoke VBP smoke ^ OK
marijuana NN marijuana ^ OK
who WP who ^ OK
never RB never ^ OK
took VBD took ^ OK
any DT any ^ OK
other JJ ^ ^ repeat
other JJ other ^ OK
illegal JJ illegal ^ OK
drugs NNS drugs ^ OK
and CC and ^ OK
did VBD did ^ OK
n't RB n't ^ OK
get VB get ^ OK
hooked VBN hooked ^ OK
on IN on ^ OK
anything NN anything ^ OK

so UH so ^ OK
we PRP we ^ OK
're VBP 're ^ OK

it PRP it ^ OK
would MD would ^ OK
probably RB probably ^ OK
bring VB bring ^ OK
down RP down ^ OK
the DT the ^ OK
price NN price ^ OK
a DT a ^ OK
lot NN lot ^ OK
if IN if ^ OK
it PRP it ^ OK
was VBD was ^ OK
legalized VBN legalized ^ OK

so RB so ^ OK
the DT the ^ OK
drug NN drug ^ OK
dealers NNS dealers ^ OK
would MD would ^ OK
n't RB n't ^ OK
like VB like ^ OK
it PRP it ^ OK
being VBG being ^ OK
legalized VBD legalized ^ OK
too RB too ^ OK
much JJ much ^ OK

it PRP it ^ OK
would MD would ^ OK
chill VB chill ^ OK
everybody NN everybody ^ OK
out RP out ^ OK
a DT a ^ OK
little JJ little ^ OK
too RB too ^ OK
much JJ much ^ OK

just RB ^ ^ false_start
a- XX ^ ^ false_start
i PRP ^ ^ false_start
see UH ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
about IN about ^ OK
alcohol NN alcohol ^ OK
and CC and ^ OK
how WRB how ^ OK
over IN over ^ OK
in IN ^ ^ repeat
in IN in ^ OK
europe NNP europe ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kids NNS kids ^ OK
can MD can ^ OK
get VB get ^ OK
alcohol NN alcohol ^ OK
without IN without ^ OK
any DT any ^ OK
problem NN problem ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
big JJ big ^ OK
alcoholism NN alcoholism ^ OK
problems NNS problems ^ OK
like IN like ^ OK
we PRP we ^ OK
do VBP do ^ OK
here RB here ^ OK
n- XX ^ ^ false_start
ag- XX ^ ^ false_start
except IN except ^ OK
for IN for ^ OK
maybe RB maybe ^ OK
russia NNP russia ^ OK

but CC but ^ OK
i PRP i ^ OK
know VBP know ^ OK
like UH ^ ^ filler
my PRP ^ ^ repeat
my PRP my ^ OK
husband NN husband ^ OK
's POS 's ^ OK
f- NN ^ ^ repeat
family NN family ^ OK
is VBZ is ^ OK
from IN from ^ OK
italy NNP italy ^ OK

where WRB ^ ^ repeat
where WRB where ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
from IN from ^ OK

where UNK where ^ OK
you UNK you ^ OK
at UNK at ^ OK
in UNK in ^ OK
jersey UNK jersey ^ OK

i PRP ^ ^ false_start
probably RB ^ ^ repeat
probably RB probably ^ OK
about RB about ^ OK
eight CD eight ^ OK
years NNS years ^ OK
now RB now ^ OK

i PRP ^ ^ false_start
usually RB ^ ^ false_start
go VBP ^ ^ false_start
now RB ^ ^ repeat
now RB now ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
married JJ married ^ OK
and CC and ^ OK
have VBP have ^ OK
kids NNS kids ^ OK

i PRP i ^ OK
go VBP go ^ OK
to IN to ^ OK
ocean NNP ocean ^ OK
city NNP city ^ OK
and CC and ^ OK
wildwood NNP wildwood ^ OK
because IN because ^ OK
there EX there ^ OK
's BES 's ^ OK
more RBR more ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
kiddie NN kiddie ^ OK
stuff NN stuff ^ OK

i- XX i- ^ OK
per- XX per- ^ OK

is VBZ is ^ OK
that DT that ^ OK
why WRB why ^ OK
you PRP you ^ OK
're VBP 're ^ OK
heading VBG heading ^ OK
out IN out ^ OK
to IN to ^ OK
hawaii NNP hawaii ^ OK

but CC but ^ OK
um UH ^ ^ filler
she PRP ^ ^ repeat
we- VBD ^ ^ repeat
she PRP ^ ^ false_start
went VBD ^ ^ false_start
to IN ^ ^ false_start
ha- NNP ^ ^ false_start
she PRP ^ ^ false_start
's BES ^ ^ false_start
a- XX ^ ^ false_start
a- XX ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
she PRP she ^ OK
's BES 's ^ OK
going VBG going ^ OK
back RB back ^ OK
to IN to ^ OK
hawaii NNP hawaii ^ OK
now RB now ^ OK

and CC ^ ^ false_start
now RB now ^ OK
i PRP i ^ OK
think VBP think ^ OK
she PRP she ^ OK
's BES 's ^ OK
going VBG going ^ OK
back RB back ^ OK
to IN to ^ OK
hawaii NNP hawaii ^ OK
again RB again ^ OK

i PRP ^ ^ false_start
sure UH ^ ^ false_start
everybody NN everybody ^ OK
knows VBZ knows ^ OK
everybody NN everybody ^ OK
is VBZ is ^ OK
getting VBG getting ^ OK
high JJ high ^ OK

so UH so ^ OK
what WP what ^ OK
made VBD made ^ OK
you PRP you ^ OK
do VB do ^ OK
this DT ^ ^ repeat
surve- NN ^ ^ false_start
uh UH ^ ^ filler
this DT this ^ OK
study NN study ^ OK

that RB that arg1 OK
that RB 's predicate false_start
what WP what arg0 OK
makes VBZ makes arg2 OK
the DT the arg0 OK
world NN world arg0 OK
go VB go arg1 OK
round RB round arg4 OK

it PRP ^ ^ false_start
makes VBZ ^ ^ false_start
all DT ^ ^ false_start
it PRP it arg0 OK
takes S-1 takes predicate OK
all VBZ all arg0 OK
different DT different arg0 OK
kind JJ kinds arg0 false_start
of NN of arg0 OK
people IN people arg0 OK
to NNS to ^ OK
make TO make predicate OK
this VB this arg0 OK
world DT world arg0 OK
go NN go arg1 OK
round VB round arg1 OK
and RB and arg1 OK
function CC function arg1 OK

why WRB why ^ OK
are VBP are ^ OK
you PRP you arg0 OK
laughing VBG laughing predicate OK
david NNP david ^ OK

where WRB where arg2 OK
you PRP ^ ^ false_start
at IN are predicate false_start
you PRP you arg1 OK

well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
they PRP are ^ false_start
they PRP they arg0 OK
fixing VBG fixing predicate OK
it PRP it arg1 OK
up RP ^ ^ false_start

honey NN honey ^ OK
the DT ^ ^ repeat
the DT the arg1 OK
work NN work arg1 OK
is VBZ is predicate OK
almost RB almost arg2 OK
about RB ^ ^ false_start
completed VBN completed arg2 OK

well UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
what WP what arg2 OK
they PRP they arg0 OK
they PRP are arg2 false_start
all DT all arg2 OK
doing VBG doing arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB not ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
new NNP new arg1 OK
york NNP york arg1 OK

i PRP i arg0 OK
'm VBP 'm ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
manhattan NNP manhattan arg1 OK
harlem NNP harlem arg1 OK

they PRP they arg0 OK
build VBP build predicate OK
up RP up arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
these DT ^ ^ false_start
buildings NNS buildings arg1 OK
that WDT that arg1 OK
were VBD were predicate OK
abandoned VBN abandoned arg2 OK
almost RB almost argM_tmp OK
thirty CD thirty argM_tmp OK
forty CD or ^ false_start
forty CD forty argM_tmp OK
years NNS years argM_tmp OK
years NNS ago argM_tmp false_start

and CC ^ argM_tmp false_start
they PRP they arg0 OK
getting VBG are ^ false_start
getting VBG getting predicate OK
rid VBN rid arg1 OK
of IN of arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
the DT the arg1 OK
people NNS people arg1 OK
that WDT that arg0 OK
used VBD ^ ^ false_start
to TO have ^ false_start
live VB lived predicate false_start
in IN in arg1 OK
this DT this arg1 OK
community NN community arg1 OK
a DT for ^ false_start
a DT a argM_tmp OK
long JJ long argM_tmp OK
time NN time argM_tmp OK

but CC ^ ^ repeat
they PRP ^ ^ repeat
but CC ^ ^ false_start
they PRP they arg0 OK
are VBP ^ ^ repeat
are VBP are ^ OK
building VBG building predicate OK
it PRP it arg1 OK
up RP up ^ OK
to TO to ^ OK
make VB make predicate OK
it PRP it arg1 OK
a DT a arg1 OK
beautiful JJ beautiful arg1 OK
place NN place arg1 OK

it PRP it arg1 OK
's BES 's predicate OK
worthwhile JJ worthwhile arg2 OK
well UH ^ ^ repeat
y- PRP ^ ^ false_start
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
to IN to arg2 false_start
an DT an arg2 false_start
extent NN extent arg2 false_start

if IN if ^ OK
people NNS people arg1 OK
was VBD were predicate false_start
treated VBN treated arg2 OK
fairly RB fairly arg2 OK
i PRP then ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
would MD would arg1 OK
be VB be arg1 OK
worthwhile JJ worthwhile arg2 OK

understand VB understand predicate OK
it PRP ^ arg1 false_start
's BES that ^ false_start
a DT a arg0 OK
studio NN studio arg0 OK
apartment NN apartment arg0 OK
costs VBZ costs arg1 OK
eleven CD eleven arg1 OK
hundred CD hundred arg1 OK
dollars NNS dollars arg1 OK

that DT that arg0 OK
do VBP does ^ false_start
n't RB n't ^ OK
even RB even ^ OK
include VB include predicate OK
light NN light arg1 OK
and CC and arg1 OK
gas NN gas arg1 OK

not RB not ^ OK
at IN at ^ OK
the DT the ^ OK
rate NN rate ^ OK
that WDT that ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
working VBG working ^ OK
and ADVP-1 and ^ OK
the CC the ^ OK
jobs DT jobs ^ OK
they NNS they ^ OK
work PRP work ^ OK
on VBP on ^ OK

most JJS ^ ^ false_start
of IN ^ ^ false_start
them PRP ^ ^ false_start
m- JJS ^ ^ repeat
most JJS ^ ^ false_start
money NN ^ ^ false_start
t- XX ^ ^ false_start
most JJS most arg0 OK
of IN of arg0 OK
um UH ^ ^ filler
their PRP their arg0 OK
money NN money arg0 OK
goes VBZ goes predicate OK
on IN to arg4 false_start
the DT the arg4 OK
rent NN rent arg4 OK
and CC and arg4 OK
con NNP con arg4 OK
edison NNP edison arg4 OK

and CC ^ arg1 false_start
so RB ^ ^ filler
you PRP you arg0 OK
know VBP know predicate OK
what WDT what arg1 OK
a DT kind ^ false_start
a DT of ^ false_start
m- NN ^ ^ repeat
mess NN mess arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
in IN in arg2 OK

i PRP i ^ OK
i PRP have arg1 false_start
been VBN been predicate OK
here RB here arg2 OK
all DT all argM_tmp OK
my PRP my argM_tmp OK
life NN life argM_tmp OK

those DT those arg1 OK
buildings NNS buildings arg1 OK
been VBN have ^ false_start
been VBN been predicate OK
tore VBN torn arg2 false_start
up RP up arg2 OK
forty CD for ^ false_start
forty CD forty argM_tmp OK
years NNS years argM_tmp OK

but CC ^ ^ false_start
then RB ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
getting VBG ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's ^ OK
beginning VBG beginning predicate OK
to TO to arg1 OK
be VB be arg1 OK
for IN ^ ^ repeat
uh UH ^ ^ filler
for IN for arg2 OK
people NNS people arg2 OK
with IN with arg2 OK
money NN money arg2 OK

everything UNK everything ^ OK
they UNK they ^ OK
they UNK are ^ false_start
building UNK building ^ OK
up UNK up ^ OK
the UNK there ^ false_start

they PRP ^ arg2 false_start
got VBD ^ ^ false_start
just RB just arg1 OK
about RB about arg1 OK
everything NN everything arg1 OK
they PRP they arg1 OK
had VBD had arg1 OK
downtown NN downtown arg1 OK
is NP-1 is predicate OK
up VBZ up arg2 OK
here IN here arg2 OK
right RB ^ ^ false_start
there RB ^ ^ false_start
on IN on arg2 false_start
hundred NNP one ^ false_start
hundred NNP hundred arg2 false_start
twenty-fifth NNP twenty-fifth arg2 false_start
street NN street arg2 false_start

we PRP we arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
everything NN everything arg1 OK
on IN on argM_loc OK
twenty-fifth NNP twenty-fifth argM_loc OK
street NN street argM_loc OK

a UNK a ^ OK

so RB so ^ OK
christmas NNP christmas ^ OK
christmas NNP ^ ^ false_start
thanksgiving NNP and ^ false_start
thanksgiving NNP thanksgiving ^ OK
are VBP are ^ OK
h- NNS ^ ^ repeat
holidays NNS holidays ^ OK
but CC but ^ OK
really RB really ^ OK
they PRP they ^ OK
're VBP 're ^ OK
more RBR more ^ OK
family NN family ^ OK
oriented JJ oriented ^ OK

whereas IN whereas ^ OK
july NNP july ^ OK
fourth JJ fourth ^ OK
is VBZ is ^ OK
more JJR more ^ OK
friends NNS friends ^ OK
oriented NAC-1 oriented ^ OK
and JJ ^ ^ false_start
family CC ^ ^ false_start

though RB though ^ OK
you PRP you ^ OK
might MD might ^ OK
get VB get ^ OK

and CC ^ ^ false_start
well RB well ^ OK
not RB not ^ OK
lately RB lately ^ OK
especially RB especially ^ OK

where WRB ^ ^ repeat
where WRB where ^ OK
do VBP do ^ OK
you PRP you ^ OK
reside VB reside ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
how WRB how ^ OK
long RB long ^ OK
are VBP are ^ OK
these DT these ^ OK
little JJ little ^ OK
interviews NNS ^ ^ false_start
discussions NNS discussions ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
to TO last ^ false_start

or CC ^ ^ repeat
or CC ^ ^ false_start
a DT a ^ OK
li- JJ ^ ^ repeat
little JJ little ^ OK
bell NN bell ^ OK
goes VBZ goes ^ OK
off RB off ^ OK
or CC ^ ^ false_start
some DT ^ ^ false_start
such JJ ^ ^ false_start

i PRP i ^ OK
think VBP think ^ OK
that DT that ^ OK
's BES 's ^ OK

well UH ^ ^ false_start
we PRP ^ ^ false_start
teachers NNS teachers ^ OK
' POS ' ^ OK
day NN day ^ OK

how WRB how ^ OK
about IN about ^ OK
a DT a ^ OK
legal JJ legal ^ OK
holiday NN holiday ^ OK
in IN in ^ OK
terms NNS terms ^ OK
of IN of ^ OK
business NN business ^ OK
because IN because ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
the DT the ^ OK
economic JJ economic ^ OK
repercussions NNS repercussions ^ OK
of IN of ^ OK
w- XX ^ ^ false_start
yet RB yet ^ OK
one CD one ^ OK
more JJR more ^ OK
paid VBN paid ^ OK
holiday NN holiday ^ OK
on IN on ^ OK
the DT the ^ OK
economy NN economy ^ OK

so RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
how WRB how ^ OK
would MD would ^ OK
you PRP you ^ OK
celebrate VB celebrate ^ OK
it PRP it ^ OK

thank VBP thank ^ OK
that DT that ^ OK
one CD one ^ OK
teacher NN teacher ^ OK
that WDT that ^ OK
gave VBD gave ^ OK
you PRP you ^ OK
the DT the ^ OK
inspiration NN inspiration ^ OK
to TO to ^ OK
finish VB finish ^ OK
school NN school ^ OK
i PRP ^ ^ false_start
suppose VBP ^ ^ false_start

or CC ^ ^ false_start
i PRP i ^ OK
remember VBP remember ^ OK
i PRP i ^ OK
had VBD had ^ OK
a DT a ^ OK
teacher NN teacher ^ OK
like IN like ^ OK
that DT that ^ OK
who WP who ^ OK

well UH ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
without IN without ^ OK
him PRP him ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK
might MD might ^ OK
've VBP 've ^ OK
happened VBN happened ^ OK

but CC but ^ OK
he PRP he ^ OK
did VBD did ^ OK
sort RB sort ^ OK
of RB of ^ OK
kindle VB kindle ^ OK
that DT that ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
inquisitive JJ inquisitive ^ OK
mind NN mind ^ OK

that DT ^ ^ repeat
that DT that ^ OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
really RB really ^ OK
create VB create ^ OK
chaos NN chaos ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
like VBP like ^ OK
the DT the ^ OK
idea NN idea ^ OK

but CC but ^ OK
oh UH ^ ^ filler
a DT ^ ^ repeat
a DT a ^ OK
lot NN ^ ^ repeat
lot NN lot ^ OK
of IN ^ ^ repeat
of IN of ^ OK
places NNS places ^ OK
and CC and ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
political JJ political ^ OK
offices NNS offices ^ OK
have VBP have ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
mayor NN mayor ^ OK
for IN for ^ OK
a DT a ^ OK
day NN day ^ OK
kind NN ^ ^ false_start
of IN ^ ^ false_start
a DT ^ ^ false_start
thing NN ^ ^ false_start

but CC but ^ OK
if IN if ^ OK
you PRP you ^ OK
could MD could ^ OK
actually RB actually ^ OK
sit VB sit ^ OK
down RP down ^ OK
and CC and ^ OK
actually RB actually ^ OK
participate VB participate ^ OK
in IN in ^ OK
a DT a ^ OK
vote NN vote ^ OK
that WDT that ^ OK
counted VBN counted ^ OK
for IN for ^ OK
real JJ real ^ OK

but CC but ^ OK
you PRP ^ ^ repeat
know VBP ^ ^ repeat
ho- WRB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
many JJ many ^ OK
political JJ political ^ OK
people NNS people ^ OK
would MD would ^ OK
strategize VB strategize ^ OK
and CC and ^ OK
try VB try ^ OK
to TO to ^ OK
stack VB stack ^ OK
the DT the ^ OK
deck NN deck ^ OK
for IN for ^ OK
that DT that ^ OK
one CD one ^ OK
day NN day ^ OK

but CC but ^ OK
uh UH uh ^ OK
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
if IN if ^ OK
actually RB actually ^ OK
actually UH ^ ^ repeat
the DT the ^ OK
people NNS people ^ OK
could MD could ^ OK

if IN if ^ OK
their PRP their ^ OK
voices NNS voices ^ OK
could MD could ^ OK
actually RB actually ^ OK
be VB be ^ OK
heard VBN heard ^ OK
and NP-1 and ^ OK
the CC the ^ OK
vote DT vote ^ OK
actually NN actually ^ OK
be RB be ^ OK
based VB based ^ OK
on VBN on ^ OK
what IN what ^ OK
the WP the ^ OK
constituency DT constituency ^ OK
wants NN wants ^ OK

i- PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
sorry JJ sorry ^ OK
because IN because ^ OK
now RB now ^ OK
it PRP it ^ OK
's BES 's ^ OK
all RP all ^ OK
well UH well ^ OK
i PRP i ^ OK
'll MD 'll ^ OK
vote VB vote ^ OK
for IN for ^ OK
this DT this ^ OK
if IN if ^ OK
you PRP you ^ OK
'll MD 'll ^ OK
vote VB vote ^ OK
for IN for ^ OK
that DT that ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
well UH well ^ OK
i PRP i ^ OK
'll MD 'll ^ OK
vote VB vote ^ OK
for IN for ^ OK
this DT this ^ OK
bill NN bill ^ OK

because IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
friendship NN friendship arg1 OK
worth JJ is predicate false_start
worth JJ worth arg2 OK
more JJR more arg2 OK
than IN than arg2 OK
money NN money arg2 OK

u- XX ^ ^ false_start
that DT ^ ^ repeat
that DT that predicate OK
i- VBZ ^ ^ repeat
is VBZ is arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
was VBD ^ ^ repeat
was VBD was ^ OK
thinking VBG thinking predicate OK
the DT the arg1 OK
same JJ same arg1 OK
thing NN thing arg1 OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

because IN ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
build VBP build ^ OK
a DT a ^ OK
relationship NN relationship ^ OK
with IN with ^ OK
somebody NN somebody ^ OK
like IN like ^ OK
that DT that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
as IN as ^ OK
a DT a ^ OK
friend NN friend ^ OK
you PRP you ^ OK
could MD could ^ OK
n't RB n't ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
about IN about ^ OK
that DT that ^ OK

well UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
s- NN ^ ^ repeat
's BES 's predicate OK
something NN something arg2 OK
you PRP ^ ^ repeat
you PRP you arg0 OK
ca MD ^ ^ repeat
ca MD ca arg2 OK
n't RB ^ ^ repeat
n't RB n't arg2 OK
buy VB buy arg2 OK
off RP off arg1 OK

m- XX ^ ^ false_start
yeah UH yeah ^ OK

you PRP ^ ^ repeat
you PRP you arg0 OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
be VB ^ ^ repeat
be VB be predicate OK
blessed VBN ^ ^ repeat
blessed VBN blessed arg2 OK
to TO to ^ OK
have VB have predicate OK
a DT a arg1 OK
few JJ few arg1 OK
good JJ good arg1 OK
friends NNS friends arg1 OK

i PRP i ^ OK
'm VBP 'm ^ OK
uh UH ^ ^ filler

b- VBN ^ ^ repeat
born VBN born ^ OK
and CC and ^ OK
raised VBN raised ^ OK

y- XX ^ ^ false_start
ah UH ah ^ OK

i PRP i arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
friends NNS friends arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
've VBP 've arg1 OK
been VBN ^ ^ false_start
having VBG had arg1 false_start
since IN since argM_tmp OK
i PRP i arg1 OK
was VBD was argM_tmp OK
a DT a arg2 OK
kid NN kid arg2 OK

well UH ^ ^ filler
i PRP i arg0 OK
only RB only ^ OK
moved VBD moved predicate OK
probably RB ^ ^ filler
when WRB when argM_tmp OK
i PRP i arg1 OK
was VBD was argM_tmp OK
little JJ little arg2 OK

i- ADVP-TMP- 1 ^ ^ false_start
we PRP we arg0 OK
probably PRP probably ^ OK
moved RB moved predicate OK
a VBD a ^ OK
total DT total ^ OK
of NN of ^ OK
only RB only ^ false_start
three IN three ^ OK
four CD four ^ OK
times CD times ^ OK
maybe NNS ^ ^ false_start

so UH ^ ^ filler
but CC ^ ^ false_start
we PRP ^ ^ repeat
m- XX ^ ^ repeat
excuse VB ^ ^ false_start
me PRP ^ ^ false_start
we PRP we arg0 OK
always RB ^ ^ repeat
always RB always ^ OK
moving VBG moved predicate false_start
around IN around arg1 OK
the DT the arg1 OK
same JJ same arg1 OK
neighborhoods NNS neighborhoods arg1 OK

because IN ^ ^ false_start
i PRP i arg0 OK
remember VBP remember predicate OK
when WRB ^ ^ repeat
um UH ^ ^ filler
once RB ^ ^ repeat
when WRB ^ ^ repeat
when WRB when argM_tmp OK
we PRP ^ ^ repeat
i PRP i argM_tmp OK
wer- VBD ^ ^ repeat
was VBD was argM_tmp OK
little JJ little argM_tmp OK
and ADVP-TMP- 1 and argM_tmp OK
i CC i argM_tmp OK
had PRP had argM_tmp OK
just VBD just argM_tmp OK
started RB started argM_tmp OK
junior VBN junior argM_tmp OK
high JJ high argM_tmp OK
school JJ school argM_tmp OK
and CC ^ ^ filler
um UH ^ ^ filler
we PRP we arg0 OK
had VBD had argM_mod OK
to TO to argM_mod OK
move VB move arg1 OK
because IN because argM_cause OK
our PRP ^ ^ repeat
our PRP our arg0 OK
h- NN ^ ^ repeat
house NN house arg0 OK
had VBD had argM_cause OK
burnt VBN burned argM_cause false_start
up RP down argM_cause false_start

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
from IN ^ ^ repeat
from IN from arg2 OK
atlanta NNP atlanta arg2 OK

that IN ^ ^ filler
that IN ^ ^ filler
i PRP i arg0 OK
talk VBP speak predicate false_start
southern JJ southern arg1 OK

th- IN ^ ^ filler
that IN ^ ^ filler
i PRP i arg0 OK
talk VBP talk predicate OK
like IN like ^ OK
i PRP i arg1 OK
'm VBP 'm predicate OK
from IN from arg2 OK
the DT the arg2 OK
south NN south arg2 OK

i PRP i arg0 false_start
think VBP think predicate false_start
uh UH ^ ^ filler
two CD ^ ^ repeat
two CD two arg1 OK
or CC ^ ^ repeat
or CC or arg1 OK
three CD three arg1 OK
times NNS times arg1 OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
uh UH ^ ^ filler
three CD ^ ^ false_start
ti- NNS ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
you PRP you arg0 OK
can MD can arg1 OK
do VB do arg1 OK
it PRP it arg1 OK
uh UH ^ ^ filler
three CD three arg1 OK
times NNS times arg1 OK

eh UH ^ arg2 filler
uh UH ^ ^ filler
uh UH ^ ^ filler
this DT this arg1 OK
you PRP is predicate false_start
you PRP your ^ false_start
first JJ first arg2 OK
time NN time arg2 OK
calling VBG calling arg2 OK

that DT that ^ OK
's BES 's ^ OK
yeah UH ^ ^ filler
about RB about ^ OK
ye- UH ^ ^ repeat

i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD had ^ OK
n't RB n't ^ OK
heard VBN heard predicate OK
anything NN anything arg1 OK
about IN about arg1 OK
her PRP her arg1 OK
on IN on ^ OK
the DT the arg2 OK
news NN news arg2 OK
lately RB lately argM_tmp OK

he PRP he ^ OK
got VBD got ^ OK
yeah UH ^ ^ filler

they PRP ^ ^ repeat
uh UH ^ ^ filler
they PRP they arg1 OK
they PRP are predicate false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
big JJ big arg2 OK
time NN time arg2 OK
crooks NNS crooks arg2 OK
and CC and ^ OK
some DT ^ ^ repeat
some DT some arg1 false_start
of IN of arg1 false_start
corporate JJ the ^ false_start
uh UH ^ ^ filler
corporate JJ corporate arg1 OK
them PRP ^ ^ false_start
people NNS people arg1 OK
them PRP ^ arg1 false_start
up IN up arg1 OK
there RB there arg1 OK
can MD can ^ OK
be VB also ^ false_start
be VB be predicate OK

that DT that ^ OK
's BES 's ^ OK
what WP what ^ OK
i PRP i ^ OK

sets VBZ sets ^ OK
a DT a ^ OK
yeah UH ^ ^ filler

uh UH ^ ^ filler
uh UH ^ ^ filler
yeah UH yeah ^ OK

they PRP they arg0 OK
come VBP come predicate OK
on RB on arg1 OK
and CC ^ ^ repeat
and CC and ^ OK
let VB let predicate OK
us PRP us arg0 OK
know VB know arg1 OK
when WRB when arg1 OK
we PRP we arg1 OK
get VBP are arg1 false_start
through RB through arg2 OK
with IN with arg2 OK
the DT the arg2 OK
conversation NN conversation arg2 OK

i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
think VB think predicate OK
of IN of arg1 OK
it PRP it arg1 OK
neither RB either ^ false_start

clinton NNP clinton arg1 OK
he PRP ^ ^ repeat
he PRP ^ ^ false_start
's BES ^ ^ repeat
was VBD ^ ^ repeat
ah UH ^ ^ filler
was VBD was predicate OK
ah UH ^ ^ filler
ah UH ^ ^ filler
what WP what arg2 OK
you PRP you arg0 OK
call VBP call arg2 OK
a DT a arg1 OK
character NN character arg1 OK

ah UH ^ ^ filler
no UH no ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
uh UH ^ ^ filler
know VB know predicate OK
too RB too arg1 OK
much RB much arg1 OK
more JJR more arg1 OK
about IN ^ ^ repeat
uh UH ^ ^ filler
like IN ^ ^ filler
you PRP ^ ^ filler
said VBD ^ ^ filler
about IN ^ ^ repeat
about IN about arg1 OK
martha NNP ^ ^ repeat
martha NNP martha arg1 OK
stewart NNP stewart arg1 OK
and CC and arg1 OK
that DT that arg1 OK
other JJ ^ ^ filler
other JJ other arg1 OK
guy NN guy arg1 OK

but CC ^ ^ false_start
i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
quite RB ^ ^ repeat
quite RB quite ^ OK
think VB think predicate OK
of IN of arg1 OK
his PRP his arg1 OK
name NN name arg1 OK

so UH ^ ^ filler
you PRP you arg0 OK
have VBP have ^ OK
to TO to ^ OK
walk VB walk predicate OK
all RB all arg1 OK
over IN over arg1 OK
campus NN campus arg1 OK

um UH ^ ^ filler
i PRP i arg0 OK
am VBP am ^ OK
dorming VBG dorming predicate OK
right RB right argM_tmp OK
now RB now argM_tmp OK

uh UH ^ ^ filler
um UH ^ ^ filler
i PRP i arg0 OK
am VBP am ^ OK
majoring VBG majoring predicate OK
in IN in ^ OK
psychology NN psychology arg1 OK

we PRP we argM_tmp OK
moved VBD moved predicate OK
um UH ^ ^ filler
right RB right arg2 OK
here RB ^ ^ repeat
there RB there arg2 OK
the DT at ^ false_start
the DT the argM_tmp OK
beginning NN beginning argM_tmp OK
of IN of argM_tmp OK
my PRP my argM_tmp OK
eighth JJ eighth argM_tmp OK
grade NN grade argM_tmp OK
year NN year argM_tmp OK

i PRP i arg0 OK
moved VBD moved predicate OK
with IN with ^ OK
ah UH ^ ^ filler
my PRP my ^ OK
mother NN mother ^ OK
my PRP my ^ OK
step NN step ^ OK
dad NN dad ^ OK
and CC and ^ OK
my PRP my ^ OK
younger JJR younger ^ OK
sister NN sister ^ OK

if IN if ^ OK
anything NN anything ^ OK
they PRP they arg0 OK
have VBP have predicate OK
on-campus JJ on-campus arg1 OK
jobs NNS jobs arg1 OK

what WP ^ ^ repeat
uh UH ^ ^ filler
what WP what arg2 OK
's BES ^ ^ repeat
's BES 's predicate OK
your PRP ^ ^ repeat
your PRP your arg1 OK
actual JJ actual arg1 OK
birthday NN birthday arg1 OK

um UH ^ ^ filler
actually UH actually ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
guess VBP ^ ^ repeat
guess VBP guess predicate OK
you PRP you arg0 OK
could MD could arg1 OK
say VB say arg1 OK
my PRP my arg1 OK
girlfriend NN girlfriend arg1 OK

well UH ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
've VBP 've ^ OK
got VBN got ^ OK
nothing NN nothing ^ OK
to TO to ^ OK
lose VB lose ^ OK
then NP-1 then ^ OK
so RB ^ ^ filler
why RB why ^ OK
not WRB not ^ OK
for RB go ^ false_start
for RB for ^ OK
it IN it ^ OK

and CC ^ ^ false_start
the DT the ^ OK
topic NN topic ^ OK
that WDT that ^ OK
that DT that ^ OK
one NN one ^ OK
was VBD ^ ^ repeat
was NP-PRD-1 was ^ OK
um VBD ^ ^ filler
if UH if ^ OK
you IN you ^ OK
were PRP were ^ OK
at VBD at ^ OK
your IN your ^ OK
fiance PRP fiance ^ OK
's NN 's ^ OK
house POS house ^ OK

we PRP we ^ OK
we PRP ^ ^ false_start
people NNS are ^ false_start
the DT the ^ OK
same JJ same ^ OK
people NNS people ^ OK

but CC ^ ^ false_start
um UH ^ ^ filler
now UH ^ ^ filler
that DT that ^ OK
topic NN topic ^ OK
there RB there ^ OK

r- UH ^ ^ false_start
right UH right ^ OK

eh UH eh ^ OK

how WRB how ^ OK
many JJ many ^ OK
times NNS times ^ OK
have VBP have ^ OK
you PRP you ^ OK
done VBN done ^ OK
this DT this ^ OK
so RB so ^ OK
far RB far ^ OK

have NP-ADV-1 have ^ OK
they VBP they ^ OK
called PRP called ^ OK
you VBN you ^ OK

now RB ^ ^ filler
in IN in ^ OK
order NN order ^ OK
to TO to ^ OK
have VB have ^ OK
it PRP it ^ OK
done VBN done ^ OK
do VBP ^ ^ repeat
do NP-4 do ^ OK
you PRP ^ ^ repeat
you VB you ^ OK
have VB ^ ^ repeat
have PRP have ^ OK
to TO ^ ^ repeat
to VBP to ^ OK
be TO be ^ OK
the VB the ^ OK
one DT one ^ OK
to NN to ^ OK
call TO call ^ OK
in VB in ^ OK

i PRP i ^ OK
only RB only ^ OK
remember VBP remember ^ OK
once IN once ^ OK
my PRP my ^ OK
phone NN phone ^ OK
rings VBZ rings ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB not ^ OK
thinking VBG thinking ^ OK
about IN about ^ OK
making VBG making ^ OK
a DT a ^ OK
damn JJ damn ^ OK
phone NN phone ^ OK
ca- NN call ^ false_start

i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's HVS 's ^ OK
only RB only ^ OK
missed VBN missed ^ OK
me PRP me ^ OK
like UH ^ ^ filler
maybe RB maybe ^ OK
th- XX ^ ^ false_start
twice RB twice ^ OK

maybe RB maybe ^ OK
twice RB twice ^ OK

but CC ^ ^ false_start
um UH um ^ OK

and CC ^ ^ false_start
we PRP we ^ OK
got VBD have ^ false_start
until IN until ^ OK
when RB when ^ OK

w- XX ^ ^ false_start
i- XX i- ^ OK

actually RB ^ ^ repeat
actually RB actually ^ OK
i PRP i ^ OK
got VBD got ^ OK
the DT the ^ OK
paperwork NN paperwork ^ OK
in IN in ^ OK
the DT the ^ OK
mail NN mail ^ OK
yesterday NN yesterday ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
all DT all ^ OK
i PRP i ^ OK
have VBP have ^ OK
to TO to ^ OK
do VB do ^ OK
is NP-2 is ^ OK
read VBZ read ^ OK
that VB that ^ OK

hm UH ^ ^ filler
oh UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
at RB at ^ OK
least RBS least ^ OK
six CD ^ ^ repeat
six CD six ^ OK
calls NNS calls ^ OK

eh UH ^ ^ filler
they PRP they ^ OK
would MD would ^ OK
send VB send ^ OK
out RB out ^ OK
a DT a ^ OK
check NN check ^ OK
in IN in ^ OK
the DT the ^ OK
mail NN mail ^ OK

me PRP me ^ OK
either RB either ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

and CC ^ ^ false_start
then RB ^ ^ false_start
the DT ^ ^ false_start
other JJ ^ ^ false_start
thing NN ^ ^ false_start
was VBD ^ ^ false_start
i PRP i ^ OK
told VBD told ^ OK
them PRP them ^ OK
to TO to ^ OK
call VB call ^ OK
me PRP me ^ OK
between IN between ^ OK
five CD five ^ OK
and CC and ^ OK
seven CD seven ^ OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
it PRP it ^ OK
's HVS 's ^ OK
been VBN been ^ OK
okay JJ okay ^ OK
because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
able JJ able ^ OK
to TO to ^ OK
take VB take ^ OK
the DT the ^ OK
call NN call ^ OK

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP ^ ^ repeat
thought VBD thought ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
s- VBD ^ ^ repeat
said VBD said ^ OK
it PRP it ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
over RB over ^ OK
on IN on ^ OK
the DT the ^ OK
over RB ^ ^ false_start
on IN _ARG_ ^ false_start

well UH ^ ^ filler
maybe RB ^ ^ false_start
not RB ^ ^ false_start
the DT ^ ^ false_start
was VBD was ^ OK
it PRP it ^ OK
the DT the ^ OK
eighteenth NN eighteenth ^ OK
of IN of ^ OK
october NNP october ^ OK

i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
like IN ^ ^ filler
i PRP i ^ OK
said VBD said ^ OK
i PRP ^ ^ repeat
i S i ^ OK
g- VBD ^ ^ repeat
got PRP got ^ OK
this VBD this ^ OK
thing DT thing ^ OK
in NN in ^ OK
the IN the ^ OK
mail DT mail ^ OK

i PRP i ^ OK
just RB just ^ OK
got VBD got ^ OK
to TO to ^ OK
read VB read ^ OK
it PRP it ^ OK
through RB through ^ OK
to TO to ^ OK
see VB see ^ OK
when WRB when ^ OK
this DT this ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
over RB over ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
'll MD ^ ^ false_start
you PRP you ^ OK
got VBD got ^ OK
it PRP it ^ OK
out IN out ^ OK
of IN of ^ OK
the DT the ^ OK
city NNP city ^ OK
paper NNP paper ^ OK

eh UH ^ ^ filler
so UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK

this DT ^ ^ false_start
is VBZ ^ ^ false_start
a DT ^ ^ false_start
my PRP my ^ OK
mom NN mom ^ OK
told VBD told ^ OK
me PRP me ^ OK
about IN about ^ OK
this DT this ^ OK
one CD one ^ OK

so UH ^ ^ filler
i PRP i ^ OK
had VBD had ^ OK
grabbed VBN grabbed ^ OK
the DT the ^ OK
city NNP city ^ OK
paper NNP paper ^ OK
another DT another ^ OK
time NN time ^ OK
before RB before ^ OK

because IN ^ ^ false_start
i PRP i ^ OK
hardly RB hardly ^ OK
ever RB ever ^ OK
read VBP read ^ OK
the DT the ^ OK
city NNP city ^ OK
paper NNP paper ^ OK

as RB as ^ OK
well UH ^ ^ false_start
uh UH ^ ^ filler
far RB far ^ OK
as IN as ^ OK
overeating NN overeating ^ OK
goes VBZ goes ^ OK
um UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP ^ ^ repeat
l- XX ^ ^ repeat
i PRP i ^ OK
like VBP like ^ OK
to TO to ^ OK
eat VB eat ^ OK
all PDT all ^ OK
the DT the ^ OK
time NN time ^ OK

but CC but ^ OK
um UH ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
sh- XX sh- ^ OK

but CC but ^ OK
what WP ^ ^ repeat
what WP what ^ OK
mm UH ^ ^ filler
really RB really ^ OK
uh UH ^ ^ filler

mm UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
no DT no ^ OK
doubt NN doubt ^ OK
that IN that ^ OK
uh UH ^ ^ filler
t. NN t. ^ OK
v. NN v. ^ OK
has VBZ has ^ OK
had VBN had ^ OK
a DT a ^ OK
big JJ big ^ OK
impact NN impact ^ OK
on IN ^ ^ repeat
uh UH ^ ^ filler
on IN on ^ OK
the DT the ^ OK
social JJ social ^ OK
life NN life ^ OK

well UH ^ ^ false_start
it PRP it ^ OK
's S-1 's ^ OK
much BES ^ ^ filler
much RB much ^ OK
better RB better ^ OK
for JJR for ^ OK
the IN the ^ OK
imagination DT imagination ^ OK
development NN development ^ OK
you NN ^ ^ filler
know PRP ^ ^ filler
to VBP ^ ^ repeat
to TO to ^ OK
get TO get ^ OK
out VB out ^ OK
and RB and ^ OK
play CC play ^ OK
games VB games ^ OK
and NNS ^ ^ repeat
and CC ^ ^ false_start
all CC ^ ^ false_start
that PDT ^ ^ false_start
too DT ^ ^ false_start

i PRP ^ ^ repeat
w- XX ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
fifty-five CD fifty-five ^ OK
now RB now ^ OK

but CC but ^ OK
um UH um ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
eh UH ^ ^ filler
people NNS people ^ OK
uh UH ^ ^ filler
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
do VBP ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
can MD can ^ OK
get VB ^ ^ repeat
g- XX ^ ^ repeat
be VB be ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
hurtful JJ hurtful ^ OK
uh UH ^ ^ filler
that DT that ^ OK
way NN way ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
amazed JJ amazed ^ OK
how WRB how ^ OK
many JJ many ^ OK
people NNS people ^ OK
still RB still ^ OK
smoke VB smoke ^ OK
here RB here ^ OK
in IN in ^ OK
philadelphia NNP philadelphia ^ OK
in IN in ^ OK
uh UH ^ ^ filler
this DT this ^ OK
part NN part ^ OK
of IN of ^ OK
the DT the ^ OK
country NN country ^ OK

eh UH ^ ^ filler
l. NNP l. ^ OK
s. NNP s. ^ OK
m. NNP m. ^ OK
f. NNP f. ^ OK
t. NNP t. ^ OK

uh UH ^ ^ filler
when WRB ^ ^ repeat
when WRB when ^ OK
our PRP our ^ OK
kids NNS kids ^ OK
were VBD were ^ OK
little JJ little ^ OK
one ADVP-TMP- 1 one ^ OK
time CD time ^ OK
we NN we ^ OK
went PRP went ^ OK
into VBD into ^ OK
a IN a ^ OK
store DT store ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we ^ OK
were VBD were ^ OK
having VBG having ^ OK
a DT a ^ OK
tough JJ tough ^ OK
time NN time ^ OK
family NN with ^ false_start
family NN a ^ false_start
young JJ young ^ OK
family NN family ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start

and CC ^ ^ false_start
i PRP i ^ OK
said VBD said ^ OK
i PRP i ^ OK
just RB just ^ OK
can MD can ^ OK
not RB not ^ OK
spend VB spend ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
money NN money ^ OK
taking VBG ^ ^ repeat
taking VBG taking ^ OK
the DT the ^ OK
food NN food ^ OK
out IN out ^ OK
of IN of ^ OK
these DT these ^ OK
kids NNS kids ^ OK
' POS ' ^ OK
mouths NNS mouths ^ OK

but CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
the DT the arg0 OK
artist NN artist arg0 OK
should MD should argM_mod OK
censor VB censor arg1 OK
himself PRP himself arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
there EX ^ ^ false_start
was VBD ^ ^ false_start
a DT ^ ^ false_start
time NN ^ ^ false_start
when WRB when argM_tmp OK
i PRP ^ ^ false_start
my PRP my argM_tmp OK
i PRP ^ ^ repeat
mom NN mom argM_tmp OK
was VBD ^ ^ repeat
was VBD was argM_tmp OK
younger JJR ^ ^ repeat
younger JJR younger argM_tmp OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
the ADVP-TMP- 1 the arg0 OK
they NN ^ ^ false_start
music DT music arg0 OK
they NN ^ ^ false_start
implied PRP implied predicate OK
a VBD a arg1 OK
lot DT lot arg1 OK
of NN of arg1 OK
things IN things arg1 OK

they PRP they arg0 OK
never RB never argM_neg OK
came VBD came predicate OK
right RB right arg4 OK
out RB out arg4 OK
and CC ^ ^ repeat
and CC and arg4 OK
said VBD said arg4 OK
it PRP it arg1 OK

i PRP i arg0 OK
have VBP have predicate OK
little JJ little arg1 OK
nieces NNS nieces arg1 OK
and CC ^ ^ repeat
and CC and arg1 OK
little JJ little arg1 OK
nephews NNS nephews arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
little RB little arg2 OK
upsetting JJ upsetting arg2 OK
and CC ^ ^ false_start
to TO to arg2 false_start
hear VB hear arg2 false_start
and CC and arg2 false_start
then RB then argM_adverb false_start
singing VBG sing arg2 false_start
his PRP his arg1 false_start
songs NNS ^ arg1 false_start
it PRP songs ^ false_start

today NN in argM_loc false_start
today NN today argM_loc false_start
's POS 's argM_loc false_start
society NN society argM_loc false_start
and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
kids NNS kids arg1 OK
grow VBP grow arg1 OK
up RB up arg_particl OK
a DT a argM_mnr OK
lot NN lot argM_mnr OK
faster RBR faster argM_mnr OK
because IN because argM_cause OK
of IN of argM_cause OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the argM_cause OK
media NN media argM_cause OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and argM_cause OK
w- WP ^ ^ repeat
uh UH ^ ^ filler
what WP what arg1 OK
's BES 's argM_cause OK
allowed VBN allowed argM_cause OK
on IN on argM_loc OK
t. NN t. argM_loc OK
v. NN v. argM_loc OK

there EX there arg1 OK
's BES 're predicate false_start
certain JJ certain arg1 OK
things NNS things arg1 OK
that WDT that arg1 OK
was VBD were arg2 false_start
not RB not argM_neg OK
on IN on arg2 OK
television NN television arg2 OK
when WRB when argM_tmp OK
i PRP i arg1 OK
was VBD was arg2 OK
growing VBG growing arg2 OK
up RB up arg_particl OK

just RB ^ ^ false_start
you PRP you arg0 OK
would MD would argM_mod OK
never RB never argM_neg OK
see VB see predicate OK
what WP what arg1 OK
you PRP you arg0 OK
see VBP see arg1 OK
now RB now argM_tmp OK

they PRP they arg0 OK
're VBP 're ^ OK
showing VBG showing predicate OK
two CD ^ ^ repeat
eh UH ^ ^ filler
two CD two arg1 OK
wo- NNS ^ ^ repeat
w- NNS ^ ^ repeat
women NNS women arg1 OK
in IN in arg1 OK
bed NN bed arg1 OK
together RB together arg1 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
it PRP ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
to TO to ^ OK
shock VB shock predicate OK
someone NN someone arg1 OK
you PRP ^ ^ false_start
they PRP they arg1 OK
would MD would argM_mod OK
really RB really argM_adverb OK
have VB have argM_mod OK
to TO to argM_mod OK
be VB be predicate OK
like UH ^ ^ filler
off RB off arg2 OK

now UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
w- NN ^ ^ false_start
after IN after argM_tmp OK
that DT that argM_tmp OK
one CD one argM_tmp OK
what WP what arg1 OK
else RB else arg1 OK
can MD can argM_mod OK
you PRP you arg0 OK
say VB say predicate OK

so UH ^ ^ false_start
is VBZ is predicate OK
that DT that arg1 OK
how WRB how argM_mnr OK
you PRP you arg1 OK
got VBD got arg2 OK
involved VBN involved arg1 OK
in IN in arg2 OK
the DT the arg2 OK
study NN study arg2 OK

supposed VBN i arg2 false_start
supposed VBN supposed predicate OK
if IN that ^ false_start
if IN if argM_adverb OK
cell NN cell arg1 OK
phones NNS phones arg1 OK
better JJR were predicate false_start
better JJR better arg2 OK
because IN because ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
because IN _ARG_ argM_cause false_start

improve VB improve ^ OK
uh UH ^ ^ filler
cell NN ^ ^ repeat
cell NN cell ^ OK
phones NNS ^ ^ repeat
phone NN phone ^ OK
technology NN technology ^ OK

i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
samsung NNP samsung arg1 OK
uh UH ^ ^ filler
one CD one arg1 OK
thousand CD thousand arg1 OK

and CC ^ ^ false_start
that DT ^ ^ repeat
and CC ^ ^ false_start
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
what WP what arg2 OK
i PRP i arg0 OK
heard VBD heard arg2 OK
too NP-1 too argM_discou OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
not RB ^ ^ false_start
being VBG ^ ^ false_start
being VBG ^ ^ false_start
reg- XX ^ ^ false_start
i PRP i arg0 OK
actually RB actually argM_adverb OK
got VBD got predicate OK
a DT a arg1 OK
cell NN cell arg1 OK
phone NN phone arg1 OK
because IN because argM_cause OK
i PRP ^ ^ repeat
i PRP i arg0 OK
travel VBP travel argM_cause OK
a DT a argM_extent OK
lot NN lot argM_extent OK

so UH ^ ^ filler
i PRP i arg0 OK
needed VBD needed predicate OK
it PRP it arg1 OK
like UH ^ ^ filler
if IN ^ ^ repeat
if IN ^ ^ repeat
if IN if argM_adverb OK
i PRP i arg1 OK
get VBP get argM_purpos OK
lost JJ lost arg1 OK
or CC or arg1 OK
break VBP break arg1 OK
down RP down argM_dir OK

but CC ^ ^ false_start
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i arg1 OK
was VBD was predicate OK
in IN ^ ^ repeat
the DT ^ arg2 repeat
in IN in arg2 OK
mall NN the ^ false_start
king NNP king arg2 OK
of IN of arg2 OK
prussia NNP prussia arg2 OK
mall NN mall arg2 repeat
mall NN ^ ^ OK
today NN today argM_tmp false_start

it PRP ^ ^ repeat
it PRP it arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
unbelievable JJ unbelievable arg2 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ filler
oh UH ^ ^ filler
i PRP i arg0 OK
'm VBP 'm ^ OK
shopping VBG shopping predicate false_start
in IN in argM_loc OK
the DT the argM_loc OK
mall NN mall argM_loc OK
now RB now argM_tmp OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ false_start
god UH ^ ^ false_start
i PRP ^ ^ false_start
could MD ^ ^ false_start
i PRP i arg0 OK
seen VBN have ^ false_start
never RB never argM_neg OK
seen VBN seen predicate OK
so RB so arg1 OK
many JJ many arg1 OK
people NNS people arg1 OK
in IN in arg1 OK
one CD one arg1 OK
place NN place arg1 OK
with IN with arg1 OK
so RB so arg1 OK
many JJ many arg1 OK
cell NN cell arg1 OK
phones NNS phones arg1 OK

i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP said predicate false_start
ach UH ach arg1 OK

it PRP it ^ OK
's BES 's ^ OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
it PRP it arg1 OK
activated VBN activated arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
oh UH oh arg1 OK
my UH my arg1 OK
god UH god arg1 OK

oh UH ^ ^ filler
i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP said predicate false_start
i PRP i arg0 OK
i PRP ^ ^ repeat
'm VBP 'm arg1 OK
'm VBP ^ ^ false_start
getting VBG getting arg1 OK
getting VBG ^ predicate repeat
it PRP it arg1 OK
it PRP ^ ^ repeat
activated VBN activated arg1 OK
a- VBN ^ predicate false_start

it PRP it arg1 OK
's SBAR-3 's predicate OK
terrible BES terrible arg2 OK
when JJ when argM_tmp OK
you WRB you arg0 OK
've PRP 've arg2 OK
broken VBP broken arg2 OK
down VBN down argM_dir OK
and RP and arg2 OK
you CC you arg1 OK
're PRP 're arg2 OK
stranded VBP stranded arg2 OK
and JJ and arg2 OK
you CC you arg0 OK
're PRP ^ arg2 false_start
like VBP say predicate false_start
oh RP oh arg1 OK
lord UH lord arg1 OK

i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
unlimited JJ unlimited ^ OK
cash NN cash ^ OK
stores NNS stores ^ OK

bills NNS ^ ^ false_start
would MD ^ ^ false_start
n't RB ^ ^ false_start
be VB ^ ^ false_start
an DT ^ ^ false_start
iss- NN ^ ^ false_start
someone NN someone ^ OK
to TO to ^ OK
pay VB pay ^ OK
my PRP my ^ OK
bills NNS bills ^ OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
like UH ^ ^ repeat
like UH like ^ OK
an DT ^ ^ repeat
an DT an ^ OK
hour NN hour ^ OK
drive NN drive ^ OK

um UH ^ ^ filler
actually RB actually ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
work VBP work ^ OK
in IN in ^ OK
health NN health ^ OK
services NNS services ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
check VBP check ^ OK
out RP out ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
like UH ^ ^ filler
different JJ different ^ OK
clinics NNS clinics ^ OK
and CC and ^ OK
lots NNS lots ^ OK
of IN of ^ OK
different JJ different ^ OK
centers NNS centers ^ OK
and CC and ^ OK
see VB see ^ OK
how WRB how ^ OK
they PRP they ^ OK
're VBP 're ^ OK
running VBG running ^ OK

bring VB ^ ^ false_start
help VB I ^ false_start
bring VB bring ^ OK
them PRP them ^ OK
information NN information ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB ^ ^ filler
of RB ^ ^ filler
help VB help ^ OK
them PRP them ^ OK
out RP out ^ OK
when WRB when ^ OK
they PRP they ^ OK
're VBP 're ^ OK
like UH ^ ^ filler
short-staffed JJ short-staffed ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP you ^ OK
get VBP ^ ^ repeat
get VBP get ^ OK
to TO ^ ^ repeat
to TO to ^ OK
s- VB ^ ^ repeat
see VB see ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
different JJ different ^ OK
people NNS people ^ OK

right UH ^ ^ filler
right UH ^ ^ filler
e- DT ^ ^ repeat
every DT every ^ OK
once RB once ^ OK
in IN in ^ OK
a DT a ^ OK
while NN while ^ OK
it PRP it ^ OK
does VBZ does ^ OK
get VB get ^ OK
a DT a ^ OK
little RB little ^ OK
stressful JJ stressful ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
pretty RB pretty ^ OK
good JJ good ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
thought VBD thought ^ OK
i PRP i ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
move VB move ^ OK
to IN ^ ^ repeat
to IN to ^ OK
uh UH ^ ^ filler
washington NNP washington ^ OK
d. NNP d. ^ OK
c. NNP c. ^ OK

so UH ^ ^ filler
but CC ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
sent VBD sent ^ OK
it PRP it ^ OK
to IN to ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT ^ ^ repeat
all PDT all ^ OK
the DT ^ ^ repeat
the DT the ^ OK
different JJ different ^ OK
cities NNS cities ^ OK
and CC and ^ OK
it PRP it ^ OK
got VBD got ^ OK
picked VBN picked ^ OK
up RP up ^ OK
here RB here ^ OK

i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
here RB here ^ OK
a DT a ^ OK
year NN year ^ OK

um UH ^ ^ filler
it PRP ^ ^ false_start
's HVS ^ ^ false_start
got VBN ^ ^ false_start
s- RB ^ ^ false_start
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
so RB so ^ OK
much JJ much ^ OK

like UH ^ ^ filler
in IN in ^ OK
comparison NN comparison ^ OK
to IN to ^ OK
baltimore NNP baltimore ^ OK
it PRP ^ ^ false_start
which WDT which ^ OK
just RB ^ ^ false_start
is VBZ ^ ^ false_start
a DT ^ ^ false_start
r- XX ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
's BES ^ ^ repeat
's BES is ^ false_start
a DT a ^ OK
big JJ big ^ OK
city NN city ^ OK

um UH ^ ^ filler
so UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
definitely RB ^ ^ repeat
definitely RB definitely ^ OK
like VBP like ^ OK
philadelphia NNP philadelphia ^ OK
better RBR better ^ OK

and CC ^ ^ false_start
there EX ^ ^ false_start
's HVS ^ ^ false_start
more RBR ^ ^ false_start
di- NN ^ ^ false_start
the DT ^ ^ false_start
the DT the ^ OK
people NNS people ^ OK
are VBP are ^ OK
mi- XX ^ ^ false_start
more RBR more ^ OK
diverse JJ diverse ^ OK

mean VBP ^ ^ false_start
not RB ^ ^ false_start
i PRP i ^ OK
mean VBP ^ ^ filler
it PRP ^ ^ filler
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
being VBG being ^ OK
stereotypical JJ stereotypical ^ OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
comfortable JJ comfortable ^ OK
city NN city ^ OK

it PRP it ^ OK
's BES 's ^ OK
like UH ^ ^ filler
a DT a ^ OK
great JJ great ^ OK
place NN place ^ OK
to TO to ^ OK
settle VB settle ^ OK
down RP down ^ OK
and CC and ^ OK
raise VB raise ^ OK
a DT a ^ OK
family NN family ^ OK
um ADVP-LOC- 1 ^ ^ filler
like UH ^ ^ filler
because UH because ^ OK
it IN it ^ OK
that NNS ^ ^ false_start
cities XX ^ ^ false_start
's PRP 's ^ OK
have NNS ^ ^ false_start
got HVS got ^ OK
a VBN a ^ OK
lot DT lot ^ OK
of NN of ^ OK
resources IN resources ^ OK
s- WDT ^ ^ false_start

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
bit NN bit ^ OK
t- JJR ^ ^ repeat
tamer JJR tamer ^ OK
like UH ^ ^ filler
than IN than ^ OK
philadelphia NNP philadelphia ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
not RB ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
the DT the ^ OK
pace NN pace ^ OK
is VBZ is ^ OK
slower JJR slower ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
does VBZ does ^ OK
wonders NNS wonders ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
from IN from ^ OK
preschool NN preschool ^ OK
age NN age ^ OK
sometimes RB sometimes ^ OK
younger JJR younger ^ OK
ah UH ^ ^ filler
on RB on ^ OK
up RB up ^ OK

um UH ^ ^ filler
because IN because argM_discou OK
we PRP we arg0 OK
all DT all arg0 OK
use VBP use predicate OK
the DT the arg1 OK
computers NNS computers arg1 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
we PRP we arg0 OK
have VBP have predicate OK
adults NNS adults arg0 OK
who WP who arg0 OK
may MD may argM_mod OK
have VB have argM_mod OK
to TO to argM_mod OK
turn VB turn arg1 OK
in RP in arg_particl OK
reports NNS reports arg1 OK
or CC ^ ^ repeat
or CC or arg1 OK
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
look VB look arg1 OK
for IN for arg1 OK
information NN information arg1 OK
for IN for arg1 OK
whatever WP whatever arg1 OK
uh UH ^ ^ filler
topic NN topic arg1 OK
is VBZ is arg1 OK
needed VBN needed arg1 OK

or NP-3 ^ ^ repeat
or CC ^ ^ false_start
where CC what ^ false_start
they WRB ^ ^ repeat
they VBP they ^ OK
have PRP ^ ^ repeat
have PRP have ^ OK
to VBP to ^ OK
do TO do ^ OK
for VB for ^ OK
school IN school ^ OK
um NN ^ ^ filler
or UH or ^ OK
college CC college ^ OK

and CC and ^ OK
um UH ^ ^ filler

the DT the ^ OK
so UH ^ ^ filler
th- DT ^ ^ repeat
computers NNS computers ^ OK

i- PRP ^ arg1 repeat
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP ^ ^ false_start
was VBD ^ ^ false_start
who- JJ ^ ^ repeat
whoever WP whoever arg0 OK
came VBD came arg0 OK
up RP up arg0 OK
with IN with arg0 OK
it PRP it arg0 OK
gave VBD gave predicate OK
gave VBD _ARG_ ^ false_start
to IN to arg2 OK
whomever WP whomever arg0 OK
came VBD came arg2 OK
up RP up arg_particl OK
with IN with arg1 OK
it PRP it arg1 OK

uh UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's SBAR-1 's arg1 OK
great BES great arg2 OK
you JJ ^ ^ filler
know PRP ^ ^ filler
that VBP that arg2 OK
they IN they arg0 OK
've PRP 've arg2 OK
done VBP done arg2 OK
that VBN that arg1 OK

it PRP it arg0 OK
saves VBZ saves predicate OK
trips NNS trips arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when argM_cause OK
you PRP you arg0 OK
have VBP have argM_mod OK
to TO to argM_mod OK
um UH ^ ^ filler
uh UH ^ ^ filler
have VB have argM_cause OK
information NN information arg1 OK
and CC and argM_cause OK
get VB ^ ^ repeat
get VB get argM_cause OK
your PRP your arg1 OK
um UH ^ ^ filler
papers NNS papers arg1 OK
and CC and arg1 OK
everything NN everything arg1 OK
together RB together arg1 OK
for IN for arg4 OK
school NN school arg4 OK

you PRP you arg1 OK
can MD can argM_mod OK
sit VB sit predicate OK
at IN ^ ^ false_start
in IN in arg2 OK
the DT the arg2 OK
comfort NN comfort arg2 OK
of IN of arg2 OK
your PRP your arg2 OK
own JJ own arg2 OK
home NN home arg2 OK
and CC and ^ OK
go VB go predicate OK
on IN on argM_loc OK
your PRP your argM_loc OK
computer NN computer argM_loc OK

you PRP ^ ^ filler
know VBP ^ ^ filler
an- CC ^ ^ repeat
and CC ^ ^ false_start
unfortunately RB fortunately argM_adverb false_start
though RB ^ ^ repeat
those DT those arg0 OK
they PRP ^ ^ false_start
who WP who arg0 OK
do VBP do arg0 OK
not RB not arg0 OK
own VB own arg0 OK
their PRP their arg0 OK
own JJ own arg0 OK
computer NN computer arg0 OK
can MD can argM_mod OK
go VB go predicate OK
to IN to argM_loc OK
the DT the argM_loc OK
library NN library argM_loc OK
^ ^ and ^ OK
um UH ^ ^ filler
look VB look predicate OK
up RP up arg_particl OK
any DT any arg1 OK
information NN information arg1 OK
that WDT that arg1 OK
they PRP they arg0 OK
need VBP need arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT a arg2 OK
great JJ great arg2 OK
improvement NN improvement arg2 OK

that DT that arg1 OK
tha- DT ^ ^ repeat
tha- DT is predicate false_start
point NN a ^ false_start
great JJ great arg2 OK
point NN point arg2 OK

and CC ^ argM_mod false_start
then RB ^ ^ false_start
either CC ^ ^ false_start
you PRP you arg0 OK
have VBP 'd ^ false_start
have VBP have predicate OK
some DT some arg0 OK
that WDT that arg0 OK
would MD would arg0 OK
much RB much arg0 OK
rather RB rather arg0 OK
do SBAR-2 do arg0 OK
that VB that arg0 OK
than DT than argM_discou OK
have IN have argM_discou OK
the VB the arg1 OK
pressure DT pressure arg1 OK
of NN of arg1 OK
um IN ^ ^ filler
a UH a arg1 OK
professor DT professor arg1 OK
or NN or arg1 OK
teacher CC teacher arg1 OK
over NN over arg1 OK
them IN them arg1 OK

so UH ^ ^ filler
uh UH ^ ^ filler
i- PRP ^ ^ repeat
it PRP it arg1 OK
could MD could argM_mod OK
go VB go predicate OK
both DT both arg4 OK
ways NNS ways arg4 OK

but CC but argM_discou OK
i PRP ^ ^ repeat
i PRP i arg0 OK
stand VBP stand predicate OK
in IN in argM_mnr OK
agreement NN agreement argM_mnr OK
with IN with arg2 OK
you PRP you arg2 OK
on IN on arg1 OK
that DT that arg1 OK
one CD one arg1 OK

um UH ^ arg2 filler
yet RB yet argM_discou OK
overall RB overall argM_discou OK
the DT the arg1 OK
computers NNS computers arg1 OK
um UH ^ ^ filler
are VBP are predicate OK
a DT a arg2 OK
great JJ great arg2 OK
addition NN addition arg2 OK
to IN to arg2 OK
classroom NN the ^ false_start
classroom NN classroom arg2 OK

and CC ^ arg2 false_start
it PRP it arg1 OK
's BES 's predicate OK
aid NN a ^ false_start
ah UH ^ ^ filler
great JJ great arg2 OK
aid NN aid arg2 OK
to IN to arg2 OK
the DT the arg2 OK
students NNS students arg2 OK

also RB also argM_discou OK
i PRP i arg0 OK
think VBP think predicate OK
the DT the arg1 false_start
computers NNS ^ arg1 false_start
they PRP computers ^ false_start
are VBP are arg1 OK
a DT a arg2 OK
great JJ great arg2 OK
asset NN asset arg2 OK
t- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN for arg2 OK
intellectuals NNS intellectual arg2 false_start
uh UH ^ ^ filler
learning VBG learning arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
in IN in ^ OK
your PRP your ^ OK
spare JJ spare ^ OK
time NN time ^ OK

even RB even ^ OK
away RB away ^ OK
from IN from ^ OK
the DT the ^ OK
classroom NN classroom ^ OK
just RB just ^ OK
to TO to ^ OK
study VB study ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
um UH ^ ^ filler
improve VB improve ^ OK
on IN ^ ^ false_start
yourself PRP yourself ^ OK
and CC and ^ OK
um UH ^ ^ filler
probably RB probably ^ OK
get VB get ^ OK
ahead RB ahead ^ OK
in IN in ^ OK
class NN class ^ OK
also RB also ^ OK

improve VB improve ^ OK
in IN in ^ OK
math NN math ^ OK

eh UH ^ ^ filler
the DT the arg1 OK
computer NN computer arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
a DT a arg2 OK
great JJ great arg2 OK
asset NN asset arg2 OK
in IN in arg2 OK
so RB so arg2 OK
many JJ many arg2 OK
areas NNS areas arg2 OK

this DT this arg0 false_start
school NN school arg0 false_start
it PRP ^ ^ false_start
here RB ^ ^ false_start
in IN ^ ^ false_start
system NN system arg0 false_start
especially RB especially argM_extent false_start
ah UH ^ ^ filler
the DT the argM_extent false_start
public JJ public argM_extent false_start
school NN school argM_extent false_start
system NN system argM_extent false_start
has VBZ has predicate OK
a DT a arg1 OK
great JJ great arg1 OK
need NN need arg1 OK
for IN for arg1 OK
them PRP them arg1 OK

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
great JJ great arg2 OK
especially RB especially argM_extent OK
when WRB when arg0 OK
the DT the arg0 OK
computers NNS computers arg0 OK
are VBP are arg0 OK
donated VBN donated arg0 OK
to TO to argM_purpos OK
help VB help argM_purpos OK
these DT these arg2 OK
kids NNS kids arg2 OK

um UH ^ ^ filler
especially RB especially ^ false_start
and CC ^ ^ false_start
improving VBG improving ^ OK
in IN ^ ^ false_start
their PRP their ^ OK
reading NN reading ^ OK
um UH ^ ^ filler
and CC and ^ OK
math NN math ^ OK
skills NNS skills ^ OK

i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
and CC ^ ^ false_start
uh UH ^ ^ filler
along IN along arg1 false_start
with IN with arg1 false_start
the DT the arg1 false_start
teachers NNS teachers arg1 false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
aid VB aid arg1 OK
the DT the arg2 OK
children NNS children arg2 OK
in IN in argM_mnr OK
a DT a argM_mnr OK
great JJ great argM_mnr OK
way NN way argM_mnr OK

the DT the ^ OK
what WDT what ^ OK
factor NN factor ^ OK

i PRP ^ ^ false_start
just RB ^ ^ false_start
oh UH ^ ^ filler
i PRP i ^ OK
could MD could ^ OK
n't RB n't ^ OK
believe VB believe ^ OK
it PRP it ^ OK

it PRP it ^ OK
just RB just ^ OK
gets VBZ gets ^ OK

like IN like ^ OK
you PRP you ^ OK
said VBD said ^ OK
y- PRP ^ ^ false_start
when WRB when ^ OK
you PRP you ^ OK
wince VBP wince ^ OK
it ADVP-TMP- 1 it ^ OK
's PRP 's ^ OK
time BES time ^ OK
to NN to ^ OK
turn TO turn ^ OK
the VB the ^ OK
channel DT channel ^ OK

i PRP ^ ^ false_start
w- XX ^ ^ false_start
i PRP i ^ OK
fall VBP fall ^ OK
asleep RB asleep ^ OK
to IN to ^ OK
that DT that ^ OK
too RB too ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
like VBP like ^ OK
the DT ^ ^ false_start
um UH ^ ^ filler
oh UH ^ ^ filler
when WRB when ^ OK
he PRP he ^ OK
does VBZ does ^ OK
the DT the ^ OK
headlines NNS headlines ^ OK

but CC ^ ^ false_start
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
few JJ few ^ OK
of IN of ^ OK
them PRP them ^ OK
i- XX ^ ^ false_start
even RB even ^ OK
he PRP he ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
say VB say ^ OK
out RB out ^ OK
loud RB loud ^ OK
that WDT that ^ OK
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
read VB read ^ OK

a- CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
line NN line ^ OK
gets VBZ gets ^ OK
moved VBN moved ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
further RBR further ^ OK
and CC and ^ OK
further RBR further ^ OK
away RB away ^ OK

i PRP ^ ^ false_start
n- XX ^ ^ false_start
i PRP i ^ OK
have VBP have ^ OK
five CD five ^ OK
children NNS children ^ OK

y- PRP ^ ^ false_start
we PRP ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
we PRP we ^ OK
draw VBP draw ^ OK
the DT the ^ OK
line NN line ^ OK
before IN before ^ OK
that DT that ^ OK
and CC and ^ OK
explain VBP explain ^ OK

we PRP ^ ^ false_start
no UH no ^ OK

that DT that ^ OK
's BES 's ^ OK

they PRP they ^ OK
just RB just ^ OK

we PRP we ^ OK
have VBP have ^ OK
w- XX ^ ^ false_start
um UH ^ ^ filler
something NN something ^ OK
on IN on ^ OK
our PRP our ^ OK
t. NN t. ^ OK
v. NN v. ^ OK
that WDT that ^ OK
cuts VBZ cuts ^ OK
that DT that ^ OK
out RP out ^ OK

so UH ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
really RB really ^ OK
good JJ good ^ OK

um UH ^ ^ filler
i PRP i ^ OK
like VBP like ^ OK
um UH ^ ^ filler
whose WP whose ^ OK
line NN line ^ OK
is VBZ is ^ OK
it PRP it ^ OK
anyway RB anyway ^ OK

i PRP i ^ OK
just RB just ^ OK
bust VB bust ^ OK
up RP up ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
just RB just ^ OK
blocks VBZ blocks ^ OK
it PRP it ^ OK
out RP out ^ OK

and CC ^ ^ false_start
you PRP you ^ OK
can MD can ^ OK
still RB still ^ OK
laugh VB laugh ^ OK
at IN at ^ OK
it PRP it ^ OK
w- IN ^ ^ repeat
without IN without ^ OK
the DT the ^ OK
bad JJ bad ^ OK
language NN language ^ OK

i PRP ^ ^ repeat
got VBD ^ ^ repeat
i PRP i arg0 OK
got VBD got predicate OK
sun NN sun arg1 OK
poisons NNS poisons arg1 OK

so RB ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
know VBP know predicate OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
they PRP they arg1 OK
were VBD were ^ OK
born VBN born predicate OK
closer RBR closer argM_loc OK
to IN to argM_loc OK
the DT the argM_loc OK
equator NN equator argM_loc OK
than IN than ^ OK
we PRP we arg1 OK
were VBD were predicate OK

and CC ^ ^ false_start
then RB then ^ OK
they PRP they arg0 OK
end VBP end predicate OK
up RP up arg_particl OK
getting VBG getting arg1 OK
darker JJR darker arg1 OK
and CC and arg1 OK
darker JJR darker arg1 OK
and CC and arg1 OK
darker JJR darker arg1 OK

than IN than ^ OK

it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler

there EX there ^ OK
's BES 's predicate OK
dark JJ dark arg1 OK
skinned NNP skinned arg1 OK
mexicans NNPS mexicans arg1 OK
and CC ^ ^ repeat
and CC and arg1 OK
white JJ white arg1 OK

there EX there ^ OK
's BES 's predicate OK
white JJ white arg1 OK
mexicans NNPS mexicans arg1 OK
and CC and arg1 OK
black JJ black arg1 OK
mexicans NNPS mexicans arg1 OK
too RB too arg1 OK

the DT the arg0 OK
light NN light arg0 OK
skinned VBD skinned arg0 OK
mexicans NNPS mexicans arg0 OK
they PRP ^ ^ false_start
look VBP look predicate OK
white JJ white arg1 OK

and CC ^ ^ false_start
they PRP they arg0 OK
got VBN got predicate OK

and CC ^ ^ false_start
you PRP you arg0 OK
see VBP see predicate OK
um UH ^ ^ filler
chinese JJ chinese arg0 OK
and CC and arg0 OK
japanese JJ japanese arg0 OK
w- NNS ^ ^ repeat
women NNS women arg0 OK
have VBP have arg1 OK
smaller JJR smaller arg1 OK
feet NNS feet arg1 OK
because IN because ^ OK
they PRP they arg0 OK
tie VBP tie predicate OK
their PRP their arg1 OK
shoes NNS shoes arg1 OK
and CC and arg1 OK
their PRP their arg1 OK
feet NNS feet arg1 OK
or CC or ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

only JJ only ^ OK
thing NN thing ^ OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
like VB like predicate OK
right RB right argM_tmp OK
no- RB ^ ^ repeat
now RB now argM_tmp OK
in IN in argM_tmp OK
this DT this argM_tmp OK
day NN day argM_tmp OK
and CC and argM_tmp OK
time NN time argM_tmp OK
is VBZ is arg1 OK
because IN because arg1 OK
of IN of arg1 OK
nine CD nine arg1 OK
eleven CD eleven arg1 OK
all PDT all arg1 OK
the DT the arg1 OK
mixed JJ mixed arg1 OK
children NNS children arg1 OK
and CC and arg1 OK
all PDT all arg1 OK
the DT the arg1 OK
oriental JJ oriental arg1 OK
children NNS children arg1 OK
are VBP are arg1 OK
being VBG being arg1 OK
treated VBN treated arg1 OK
different RB differently arg1 false_start
because IN because ^ OK
they PRP they arg0 OK
think VBP think predicate OK
they PRP they arg1 OK
're VBP 're arg1 OK
from IN from arg2 OK
over IN over arg2 OK
there RB there arg2 OK
with IN with ^ OK
what WP what arg1 OK
happened VBD happened predicate OK
on IN on argM_tmp OK
nine CD nine argM_tmp OK
eleven CD eleven argM_tmp OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
like VB ^ ^ false_start
m- PRP ^ ^ false_start
plus CC plus ^ OK
my PRP my ^ OK
son NN son ^ OK
he PRP ^ ^ repeat
he PRP he arg1 OK
c- VBZ ^ ^ repeat
comes VBZ comes predicate OK
up IN up arg4 OK
to IN to arg4 OK
me PRP me arg4 OK

he PRP he arg1 OK
's BES 's predicate OK
like RP like arg2 OK
mommy NNP mommy arg2 OK
what WDT what arg2 OK
color NN color arg2 OK
am VBP am arg2 OK
i PRP i arg2 OK
because NP-PRD-1 ^ ^ repeat
because IN because ^ OK
he IN he arg1 OK
's PRP 's predicate OK
not BES not arg2 OK
like RB like arg2 OK
his IN his arg2 OK
daddy PRP daddy arg2 OK

he PRP he arg1 OK
's BES 's predicate OK
like RP like arg2 OK
what WP what arg2 OK
am VBP am arg2 OK
i PRP i arg1 OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like RP ^ ^ false_start
i PRP i arg0 OK
ca- XX ^ ^ false_start
tell VBP tell predicate OK
him PRP him arg2 OK
biracial JJ biracial arg1 OK

i PRP i arg1 OK
'm VBP 'm predicate OK
like RP like arg2 OK
well UH ^ ^ filler
you PRP you arg1 OK
're VBP 're arg2 OK
a DT a arg2 OK
little JJ little arg2 OK
bit NN bit arg2 OK
of IN of arg2 OK
mommy NN mommy arg2 OK

he PRP he arg1 OK
's BES 's predicate OK
like RP like arg2 OK
w- WRB ^ ^ repeat
why WRB why arg2 OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
he PRP he arg0 OK
has VBZ has predicate OK
this DT ^ ^ repeat
this DT this arg1 OK
conversation NN conversation arg1 OK
that WDT that arg1 OK
you PRP you arg0 OK
ca MD ca arg1 OK
n't RB n't arg1 OK
answer VB answer arg1 OK

oh UNK ^ ^ filler
well UNK ^ ^ filler
i UNK i arg0 OK
do UNK do predicate OK
n't UNK n't ^ OK
exercise UNK exercise arg1 OK
at UNK at ^ OK
all UNK all ^ OK
because UNK because ^ OK
i UNK i arg0 OK
have UNK have predicate OK
um UNK ^ ^ filler
a UNK a arg1 OK
chronic UNK chronic arg1 OK
condition UNK condition arg1 OK
called UNK called predicate OK
c. UNK c. arg2 OK
o. UNK o. arg2 OK
p. UNK p. arg2 OK
d. UNK d. arg2 OK

so UH so ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
ca MD ^ ^ repeat
do VBP ^ ^ repeat
do VBP do predicate OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
n't RB n't ^ OK
really RB ^ ^ repeat
m- VB ^ ^ repeat
have VB ^ ^ repeat
a DT ^ ^ repeat
lot NN ^ ^ repeat
of IN ^ ^ repeat
mo- NN ^ ^ repeat
move VB move arg1 OK
around RB around ^ OK
a DT a ^ OK
whole JJ whole ^ OK
lot NN lot ^ OK

i PRP i arg1 OK
basically RB am ^ false_start
ah UH ^ ^ filler
basically RB basically ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
like VBP ^ ^ filler
stuck VBN stuck predicate OK
in IN in arg2 OK
houses NNS houses arg2 OK

so UH ^ ^ filler
i PRP i arg0 OK
looked VBD looked predicate OK

this DT this arg1 OK
was VBD was predicate OK
a DT a arg1 OK
s- NN ^ ^ repeat
subject NN subject arg1 OK
for IN for ^ OK
me PRP me ^ OK
that WDT that ^ OK
i PRP i arg0 OK
thought VBD thought predicate OK
oh UH oh arg1 OK
boy UH boy arg1 OK
of IN of arg1 OK
all DT all arg1 OK
subjects NNS subjects arg1 OK
to TO to arg1 OK
get VB get arg1 OK
right NP-1 ^ predicate filler

have VBP ^ ^ repeat
have VBP have ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
be- RB ^ ^ repeat
done VBN done predicate OK
this DT this arg1 OK
call NN call arg1 OK
before RB before argM_tmp OK

have VBP ^ ^ repeat
have VBP have ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
made VBN made predicate OK
these DT these arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
calls NNS calls arg1 OK
before RB before argM_tmp OK

eh UH eh ^ OK

i PRP ^ ^ false_start
this DT this arg1 OK
is VBZ is predicate OK
my PRP my arg2 OK
first JJ first arg2 OK
call NN call arg2 OK
to RB to arg2 OK
to RB _NOUN_ arg2 false_start

not RB _NOUN_ arg0 false_start
not RB am predicate false_start
not RB not arg2 OK
sure JJ sure arg2 OK
how WRB ^ ^ repeat
how WRB how arg2 OK
to TO ^ ^ repeat
to TO to arg2 OK
proceed VB proceed arg2 OK
with IN with arg1 OK
it PRP it arg1 OK
because ADVP-MNR- 1 because ^ OK
uh IN ^ ^ filler
i UH ^ ^ repeat
i WRB i arg0 OK
know PRP ^ ^ repeat
know PRP know predicate OK
how VBP ^ ^ repeat
how VBP how arg1 OK
important WRB important arg2 OK
fitness JJ fitness arg1 OK
and NN and arg1 OK
exercise CC exercise arg1 OK
is NN is arg2 OK

and CC ^ ^ false_start
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
was VBD was ^ OK
younger JJR younger ^ OK
i ADVP-TMP- 1 i ^ OK
used PRP used ^ OK
to VBD to ^ OK
do TO do ^ OK
a VB a ^ OK
lot DT lot ^ OK
of NN of ^ OK
things IN things ^ OK

and CC ^ ^ false_start
but CC ^ ^ false_start
as IN ^ ^ false_start
i PRP ^ ^ false_start
got VBD ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
am VBP am predicate OK
fifty CD ^ ^ repeat
fifty CD fifty arg2 OK
seven CD seven arg2 OK
years NNS years arg2 OK
old JJ old arg2 OK

so UH ^ ^ filler
i PRP i ^ OK
imagine VBP imagine ^ OK
your PRP you ^ false_start
your PRP 're ^ false_start
what UH what ^ OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
old JJ old arg2 OK
enough RB enough arg2 OK
to TO to arg2 OK
be VB be arg2 OK
your PRP your arg2 OK
grandmother NN grandmother arg2 OK
over IN ^ ^ false_start
here RB ^ ^ false_start

well UH ^ ^ filler
tell VB tell predicate OK
me PRP me arg2 OK
little JJ a ^ false_start
little JJ little arg1 OK
bit NN bit arg1 OK
about IN about arg1 OK
yourself PRP yourself arg1 OK
in IN ^ ^ repeat
in IN in arg1 OK
hawaii NNP hawaii arg1 OK

and CC ^ ^ false_start
what WP ^ ^ repeat
what WP what arg1 OK
are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
taking VBG taking predicate OK
honey NN honey ^ OK

i PRP i arg1 OK
use VBD use ^ OK
to TO to ^ OK
be VB be predicate OK
in IN ^ ^ repeat
um UH ^ ^ filler
a DT a arg2 OK
director NN director arg2 OK
at IN at arg2 OK
erie NNP erie arg2 OK
business NNP business arg2 OK
center NNP center arg2 OK
here RB here arg2 OK
in IN in arg2 OK
erie NNP erie arg2 OK

in IN in ^ OK
a DT a ^ OK
college NN college ^ OK
with IN with ^ OK
a DT a ^ OK
business NN business ^ OK
college NN college ^ OK
though RB though ^ OK

i PRP i arg1 OK
was VBD was predicate OK
assistant JJ assistant arg2 OK
director NN director arg2 OK
dow- RB ^ ^ repeat
i- IN ^ ^ repeat
in IN in arg2 OK
here RB here arg2 OK
when WRB when argM_tmp OK
i PRP i arg0 OK
was VBD was argM_tmp OK
able JJ able arg2 OK
to TO to arg2 OK
work VB work arg2 OK

because IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
hear VB hear predicate OK
the DT the arg1 OK
hawaiian JJ hawaiian arg1 OK
accent NN accent arg1 OK

but CC but ^ OK
uh UH ^ ^ filler

oh UH ^ ^ filler
and CC ^ ^ repeat
this DT ^ ^ repeat
and CC ^ ^ false_start
this DT ^ ^ false_start
making VBG making arg0 false_start
these DT these arg0 false_start
calls NNS calls arg0 false_start
still RB ^ ^ repeat
gives VBZ ^ ^ repeat
gives VBZ gives predicate OK
you PRP ^ ^ repeat
you PRP you arg2 OK
little JJ little arg1 OK
bit NN bit arg1 OK
of IN of arg1 OK
money NN money arg1 OK
too RB too ^ OK

that DT ^ ^ false_start
's BES ^ ^ false_start
so RB so ^ OK
i PRP i ^ OK
will MD will ^ OK
give VB give ^ OK
you PRP you ^ OK
twenty CD twenty ^ OK
bucks NNS bucks ^ OK

i PRP i arg0 OK
just RB just ^ OK
hope VBP hope predicate OK
that IN that ^ OK
the DT the arg1 OK
company NN company arg1 OK
is VBZ is arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
all DT all arg2 OK
that WDT that arg2 OK
it PRP ^ ^ repeat
it PRP it arg0 OK
says VBZ says arg2 OK
it PRP it arg1 OK
's BES 's arg1 OK
going VBG going arg2 OK
to TO to arg2 OK
be VB be arg2 OK

that DT that arg1 OK
will MD will ^ OK
be VB be predicate OK
ni- XX ^ ^ repeat
an DT an arg0 OK
easy JJ easy arg0 OK
way NN way arg0 OK
to TO to arg2 OK
make VB make arg2 OK
some DT some arg1 OK
money NN money arg1 OK

um UH ^ ^ filler
well UH ^ ^ false_start
that DT that arg1 OK
was VBD was predicate OK
my PRP my arg2 OK
job NN job arg2 OK
when WRB ^ ^ repeat
before IN ^ ^ repeat
before IN before argM_tmp OK
i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD ^ ^ repeat
got VBD got argM_tmp OK
to TO to arg2 OK
be VB be arg2 OK
assistant JJ assistant arg2 OK
director NN director arg2 OK

i PRP i arg0 OK
use VBD ^ ^ repeat
um UH ^ ^ filler
they PRP used ^ false_start
to TO ^ ^ repeat
said VBD to ^ false_start
make VB make predicate OK
telephone NN telephone arg1 OK
calls NNS calls arg1 OK

have VBP ^ ^ repeat
have VBP have ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
ever RB ever ^ OK
met VBN met predicate OK
anybody NN anybody arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
internet NNP internet argM_loc OK

and CC ^ ^ false_start
he PRP he arg0 OK
was VBD was predicate OK
in IN in argM_loc OK
calgary NNP calgary arg1 OK
canada NNP canada arg1 OK
which WP which ^ OK
is VBZ is predicate OK
about RB about arg2 OK
three CD three arg2 OK
thousand CD thousand arg2 OK
miles NNS miles arg2 OK
away RB away arg2 OK
from IN from arg2 OK
where WRB where arg2 OK
i PRP i arg0 OK
live VBP live arg2 OK

and CC ^ ^ false_start
we PRP we arg0 OK
have VBP have ^ OK
now RB now ^ OK
been VBN been ^ OK
married JJ married ^ OK
uh UH ^ predicate filler
married JJ for ^ false_start
it PRP ^ ^ false_start
will MD ^ ^ false_start
be VB ^ ^ false_start
four CD four argM_tmp OK
years NNS years argM_tmp OK
in IN in argM_tmp OK
may NNP may argM_tmp OK

and CC ^ ^ false_start
now RB ^ ^ false_start
uh UH ^ ^ filler
he PRP ^ ^ repeat
he PRP he arg1 OK
came VBD ^ ^ repeat
came VBD came predicate OK
three CD three arg2 OK
thousand CD thousand arg2 OK
miles NNS miles arg2 OK
to TO to ^ OK
be VB be predicate OK
here RB here arg2 OK

he PRP he arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know predicate OK
what WP what arg1 OK
he PRP he arg0 OK
was VBD was arg1 OK
getting VBG getting arg1 OK
into IN into arg1 OK

but CC but ^ OK
um UH ^ ^ filler

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
when WRB ^ ^ repeat
before IN before argM_tmp OK
the DT the arg1 OK
internet NN internet arg1 OK
got VBD got argM_tmp OK
bad JJ bad arg2 OK
with IN with argM_tmp OK
all PDT all argM_tmp OK
the DT the arg1 OK
perversion NN perversion arg1 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
that WDT that argM_tmp OK
's BES 's argM_tmp OK
going VBG going argM_tmp OK
on RP on arg_particl OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

and CC ^ ^ false_start
none NN none arg1 OK
of IN of arg1 OK
these DT these arg1 OK
freakos NNS freakos arg1 OK
are VBP are predicate OK
online RB online arg2 OK

anyway UNK anyway ^ OK
okay UNK okay ^ OK
so UNK so ^ OK

i PRP i arg0 OK
definitely RB definitely ^ OK
think VBP think predicate OK
i PRP i arg1 OK
would MD would arg1 OK
panic VB panic arg1 OK
just RB ^ ^ false_start
because IN because ^ OK
it PRP it ^ OK
's SBAR-3 's predicate OK
natural BES natural arg1 OK
that JJ that ^ OK
if IN if ^ OK
you IN you arg1 OK
're PRP 're ^ OK
being VBP being ^ OK
hurt VBG hurt predicate OK
or VBN or ^ OK
somebody NP-1 somebody ^ OK
around CC around ^ OK
you NN you arg1 OK
's IN 's ^ OK
being PRP being ^ OK
hurt BES hurt predicate OK
my VBG my arg0 OK
first VBN first ^ OK
reaction NP-2 reaction ^ OK
would PRP would ^ OK
be JJ be ^ OK
to NN to ^ OK
run MD run ^ OK
right VB ^ predicate false_start

i PRP i arg0 OK
think VBP think predicate OK
if IN if arg1 OK
i PRP i arg1 OK
was VBD was arg1 OK
in IN in arg2 OK
that DT that arg2 OK
situation NN situation arg2 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would arg1 OK
try VB try arg1 OK
to TO to arg1 OK
do VB do arg1 OK
that DT that arg1 OK

i PRP i ^ OK
g- XX g- ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
i PRP i arg0 OK
definitely RB definitely ^ OK
d- XX ^ ^ false_start
could MD could ^ OK
say VB say predicate OK
a DT a arg1 OK
lot NN lot arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
how WRB how arg1 OK
do VBP do arg1 OK
you PRP you arg0 OK
feel VB feel arg1 OK
was ADVP-MNR- 1 was predicate OK
i VBD i arg0 OK
do PRP do arg1 OK
n't VBP n't arg1 OK
know RB know arg1 OK

um UH ^ ^ filler
if IN if ^ OK
a DT a arg1 OK
terrorist JJ terrorist arg1 OK
attack NN attack arg1 OK
t- XX ^ ^ false_start
happened VBD happened predicate OK

eh UH ^ ^ filler
it PRP it ^ OK
depends VBZ depends predicate OK
on IN on arg1 OK
like UH ^ ^ filler
where WRB where ^ OK
where WRB ^ arg1 false_start
when WRB and ^ false_start
when WRB when ^ OK
like UH ^ ^ filler

if IN if ^ OK
i PRP i arg0 OK
was VBD was predicate OK
at IN at arg1 OK
work NN work arg1 OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP i ^ OK
'd MD 'd ^ OK
probably RB probably ^ OK
probably RB _VERB_ ^ false_start

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
a- XX ^ ^ false_start
honestly RB honestly ^ OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

now UH ^ ^ false_start
that IN ^ ^ false_start
if IN if ^ OK
it PRP it ^ OK
was VBD was predicate OK
n't RB n't arg1 OK
close RB close arg1 OK
to IN to arg1 OK
home NN home arg1 OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
would MD ^ ^ repeat
would MD would arg1 OK
be VB be arg1 OK
just RB ^ ^ repeat
just RB ^ ^ false_start
sympathetic JJ sympathetic arg2 OK
if IN ^ ^ repeat
was VBD ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg0 OK
hurt VBD hurt predicate OK
anybody NN anybody arg1 OK

which WDT ^ arg1 false_start
i PRP i ^ OK
think VBP think predicate OK
that DT that ^ OK
's BES 's predicate OK
whole JJ whole ^ OK
point NN point ^ OK
of IN of ^ OK
a DT a ^ OK
terrorist JJ terrorist ^ OK
attack NN attack ^ OK

but CC but ^ OK
if IN if ^ OK
it PRP it arg1 OK
happened VBD happened predicate OK
like UH ^ ^ filler
to IN to arg2 OK
family NN family arg2 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
no UH no ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's S-1 's predicate OK
really BES really arg1 OK
hard JJ ^ ^ repeat
hard RB hard arg1 OK
to JJ to arg1 OK
tell TO tell arg1 OK
for VB for arg1 OK
me IN me arg1 OK
when PRP when ^ OK

it PRP ^ ^ false_start
i PRP i arg0 OK
would MD ^ ^ repeat
'd MD 'd ^ OK
have VB ^ ^ repeat
have VB have ^ OK
to TO ^ ^ repeat
to TO to ^ OK
get VB get predicate OK
more JJR more arg1 OK
detail NN detail arg1 OK
about IN about arg1 OK
when WRB when arg1 OK
and CC and ^ OK
where WRB where arg2 OK
it PRP ^ ^ false_start
was VBD ^ ^ false_start
i PRP i arg1 OK
would MD would ^ OK
be VB be predicate OK
at IN at arg2 OK

but CC but ^ OK
if IN if ^ OK
it PRP it ^ OK
happened VBD happened predicate OK
to IN to arg1 OK
me PRP me arg1 OK
i PRP ^ ^ repeat
i PRP i arg1 OK
definitely RB ^ ^ repeat
definitely RB definitely ^ OK
would MD would ^ OK
be VB be ^ OK
worried JJ worried predicate OK

and CC ^ ^ repeat
and CC and ^ OK

anyway UH ^ ^ false_start
so UH ^ ^ false_start
what WP ^ ^ repeat
how WRB how arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
feel VB feel predicate OK
about IN about arg2 OK
the DT the arg2 OK
war NN war arg2 OK
itself PRP itself arg2 OK

i PRP ^ ^ repeat
because IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
do VBP ^ ^ repeat
do VBP ^ ^ repeat
n't RB n't ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
know VB know ^ OK
know VB ^ ^ repeat
if IN if ^ OK
i PRP i ^ OK
like UH ^ ^ filler
have VB have ^ OK
a DT a ^ OK
quote RB quote ^ OK
unquote RB unquote ^ OK
best JJS best ^ OK
friend NN friend ^ OK

n- XX ^ ^ false_start
yeah UH yeah ^ OK

i- PRP ^ ^ repeat
it PRP it ^ OK
must MD must ^ OK
have VB have ^ OK
got VBN got ^ OK
disconnected VBN disconnected ^ OK
somehow RB somehow ^ OK

i PRP i ^ OK
'd MD 'd ^ OK
flat RB flat ^ OK
out RB out ^ OK
say VB say ^ OK
it PRP it ^ OK

there EX there ^ OK
's BES 's ^ OK
no DT no ^ OK
way NN way ^ OK
in IN in ^ OK
hell NN hell ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
pick VB pick ^ OK
around IN around ^ OK
it PRP it ^ OK
or CC ^ ^ repeat
or CC or ^ OK
finish VB finish ^ OK
it PRP it ^ OK
or CC or ^ OK
be VB be ^ OK
fake JJ fake ^ OK

i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
bug NN bug ^ OK
in IN in ^ OK
my PRP my ^ OK
food NN food ^ OK

i PRP i ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
out RB out ^ OK
to IN to ^ OK
mcdonald NNP mcdonald ^ OK
's POS 's ^ OK
and CC and ^ OK
eat VBP to ^ false_start
eat VBP eat ^ OK
them DT ^ ^ false_start
roaches NNS roaches ^ OK
i PRP i ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
see VB see ^ OK

but CC ^ ^ false_start
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
do VB do ^ OK
it PRP it ^ OK
eve- DT ^ ^ repeat
every DT every ^ OK
night NN night ^ OK

same JJ same ^ OK
here RB here ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
he- VBP ^ ^ repeat
hear VBP hear ^ OK
it PRP it ^ OK
on IN on ^ OK
my PRP my ^ OK
answering NN answering ^ OK
machine NN machine ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP ^ ^ false_start
like RP say ^ false_start
uh UH ^ ^ filler
okay UH okay ^ OK

i PRP i ^ OK
thought VBD thought ^ OK
you PRP you ^ OK
meant VBD meant ^ OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT ^ ^ false_start
right JJ ^ ^ false_start
this DT this ^ OK
phone NN phone ^ OK
call NN call ^ OK
right RB right ^ OK
now RB now ^ OK

it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler

i PRP ^ ^ repeat
i PRP i ^ OK
have VBP have ^ OK
no DT no ^ OK
idea NN idea ^ OK

well UH ^ ^ filler
and CC ^ ^ false_start
survey VB survey ^ OK
and CC and ^ OK
then RB then ^ OK
get VB get ^ OK
too RB too ^ OK
many JJ many ^ OK
um UH ^ ^ filler
applicants NNS applicants ^ OK
for IN for ^ OK
it PRP it ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP ^ ^ repeat
guess VBP guess ^ OK

that DT that ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
get VB get ^ OK
flu NN flu ^ OK
shots NNS shots ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
get VB get ^ OK
sick JJ sick ^ OK
very RB very ^ OK
often RB often ^ OK
actually RB actually ^ OK

i PRP ^ ^ false_start
have VBP ^ ^ false_start
n't RB ^ ^ false_start
been VBN ^ ^ false_start
sick JJ ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
ha- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
've VBP 've ^ OK
had VBN had ^ OK
a DT a ^ OK
cold NN cold ^ OK
in IN in ^ OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
years NNS years ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
sinus NN sinus ^ OK
infections NNS infections ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
get VBP get ^ OK
those DT those ^ OK
instead IN instead ^ OK
of IN of ^ OK
a DT a ^ OK
cold NN cold ^ OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
the DT the ^ OK
air NN air ^ OK
is VBZ is ^ OK
around IN around ^ OK
here RB here ^ OK

eh UH eh ^ OK
yeah UH yeah ^ OK

it PRP it ^ OK
just RB just ^ OK
wrecks VBZ wrecks ^ OK
your PRP your ^ OK
immune JJ immune ^ OK
system NN system ^ OK

you PRP you ^ OK
get VBP get ^ OK
a DT a ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
school NN school ^ OK
jobs NNS jobs ^ OK
that DT that ^ OK
sort NN sort ^ OK
of IN of ^ OK
thing NN thing ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
one CD ^ ^ repeat
one CD one ^ OK
thing NN thing ^ OK
about IN about ^ OK
the DT ^ ^ repeat
the DT the ^ OK
w- NN ^ ^ repeat
weather NN weather ^ OK

maybe RB maybe ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
people NNS people ^ OK
get VBP get ^ OK
stressed VBN stressed ^ OK
out RP out ^ OK
over IN over ^ OK
the DT the ^ OK
holidays NNS holidays ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
the DT the ^ OK
air NN air ^ OK
's BES 's ^ OK
all RB all ^ OK
stale JJ stale ^ OK
and CC and ^ OK
dust NN ^ ^ false_start
and CC ^ ^ false_start
stuff NN dusty ^ false_start

i PRP ^ ^ false_start
d- VBP ^ ^ false_start
me PRP me ^ OK
neither RB neither ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
hate VBP hate ^ OK
it PRP it ^ OK

uh UH ^ ^ filler
you PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
try VBP try ^ OK
to TO to ^ OK
eat VB eat ^ OK
well RB well ^ OK
also RB also ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
i PRP i ^ OK
really RB really ^ OK
do VBP do ^ OK
watch VB watch ^ OK
what WP what ^ OK
i PRP i ^ OK
eat VBP eat ^ OK

probably RB probably ^ OK
about RB about ^ OK
twenty CD twenty ^ OK
percent NN percent ^ OK
of IN of ^ OK
the DT the ^ OK
stuff NN stuff ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
get VBP get ^ OK
is NP-1 is ^ OK
organic VBZ organic ^ OK
food JJ food ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
buy VBP buy ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
stuff NN stuff ^ OK
at IN at ^ OK
the DT the ^ OK
grocery NN grocery ^ OK
store NN store ^ OK

but CC but ^ OK
sometimes RB sometimes ^ OK
especially RB especially ^ OK
stores NNS at ^ false_start
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
stores NNS stores ^ OK
around IN around ^ OK
here RB here ^ OK
you PRP you ^ OK
can MD can ^ OK
go VB buy ^ false_start
to IN ^ ^ false_start
the NP-1 ^ ^ false_start
sa- DT ^ ^ false_start
eh XX ^ ^ filler
like UH ^ ^ filler
wild IN wild ^ OK
oats NNP oats ^ OK

where WRB ^ ^ repeat
where WRB ^ ^ repeat
where WRB where ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
a- XX ^ ^ repeat
you PRP you ^ OK

people NNS people ^ OK
's BES 's ^ OK
republic NNP republic ^ OK
of IN of ^ OK
boulder NNP boulder ^ OK

i PRP i ^ OK
like VBP like ^ OK
boulder NNP boulder ^ OK

you PRP you ^ OK
got VBD have ^ false_start
that DT that ^ OK
denver NNP ^ ^ repeat
denver NNP denver ^ OK
denver NNP ^ ^ false_start
boulder NNP and ^ false_start
boulder NNP boulder ^ OK
metro NN metro ^ OK
area NN area ^ OK
air NN air ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
p- XX ^ ^ repeat
perfect JJ perfect ^ OK

but CC but ^ OK
it PRP it ^ OK
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
better JJR better ^ OK

we PRP we ^ OK
're VBP 're ^ OK
sort RB sort ^ OK
of RB of ^ OK
in IN in ^ OK
between IN between ^ OK
fort NNP fort ^ OK
collins NNP collins ^ OK
and CC and ^ OK
boulder NNP boulder ^ OK

so UH ^ ^ false_start
we PRP ^ ^ false_start
and CC ^ ^ false_start
since IN since ^ OK
the DT the ^ OK
air NN air ^ OK
comes VBZ comes ^ OK
from IN from ^ OK
the DT the ^ OK
west NNP west ^ OK
we PRP we ^ OK
have VBP have ^ OK
fresher JJR fresher ^ OK
air NN air ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
the DT the ^ OK
same JJ same ^ OK
sort NN sort ^ OK
of IN of ^ OK
thing NN thing ^ OK
only RB only ^ OK
down IN down ^ OK
there RB there ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
know VB know ^ OK
how WRB how ^ OK
to TO to ^ OK
do VB do ^ OK
winter NN winter ^ OK

because IN because ^ OK
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
to IN to arg2 OK
the DT the arg2 OK
south NNP south arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
everyone NN everyone arg0 OK
does VBZ does arg1 OK
it PRP it arg1 OK
there RB there argM_loc OK

but CC but ^ OK
maybe RB maybe ^ OK
everyone NN everyone arg0 OK
that WDT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that arg0 OK
g- VBZ ^ ^ repeat
goes VBZ goes arg0 OK
to IN to arg0 OK
bars NNS bars arg0 OK
does VBZ ^ ^ repeat
does VBZ does predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
is VBZ is predicate OK
here RB here arg2 OK

they PRP they arg0 OK
banned VBD banned predicate OK
it PRP it arg1 OK
here RB here argM_loc OK
probably RB probably ^ OK
a DT ^ ^ repeat
a DT a argM_tmp OK
c- NN ^ ^ repeat
couple NN couple argM_tmp OK
of IN of argM_tmp OK
years NNS years argM_tmp OK
ago RB ago argM_tmp OK

because UH because ^ OK
so UH ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
heard VBN ^ ^ false_start
stories NNS ^ ^ false_start
er UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
read VBN read predicate OK
in IN in arg1 OK
the DT the arg1 OK
paper NN paper arg1 OK
where WRB ^ ^ repeat
where WRB where arg3 OK
someone NN someone arg0 OK
will MD will arg3 OK
be VB be arg3 OK
smoking VBG smoking arg3 OK
in IN in argM_loc OK
a DT a argM_loc OK
bar NN bar argM_loc OK

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
th- XX ^ ^ repeat
as IN as ^ OK
a DT a ^ OK
non-smoker NN non-smoker ^ OK
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
good JJ good arg2 OK

but CC but ^ OK
then RB then ^ OK
if IN if ^ OK
i PRP i ^ OK
was VBD was ^ OK
a DT a ^ OK
smoker NN smoker ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
be VB be ^ OK
like RP ^ ^ filler
hey UH ^ ^ filler

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
every- RB ^ ^ repeat
you PRP ^ ^ OK
know VBP ^ ^ filler
everywhere RB everywhere argM_loc OK
you PRP you argM_loc OK
go VBP go argM_loc OK
people ADVP-DIR- 1 people arg0 OK
are NNS are ^ OK
smoking VBP smoking predicate OK
and VBG and ^ OK
drinking CC drinking predicate OK

you PRP you ^ OK
really RB really ^ OK

so UH ^ ^ false_start
w- PRP ^ ^ repeat
we PRP we arg1 OK
're VBP 're predicate OK
at IN at arg2 OK
the DT the arg2 OK
beach NN beach arg2 OK

and CC ^ ^ false_start
then RB then ^ OK
so UH ^ ^ filler
it PRP it arg1 OK
seems VBZ seems predicate OK
like IN like arg1 OK
the DT ^ ^ repeat
the DT the arg0 OK
more RBR more arg0 OK
mountainy JJ mountainy arg0 OK
communities NNS communities arg0 OK
like UH ^ ^ filler
to IN to arg0 OK
the DT the arg0 OK
north NNP north arg0 OK
south NNP south arg0 OK
and CC and arg0 OK
east NNP east arg0 OK
of IN of arg0 OK
us PRP us arg0 OK
all RB all arg0 OK
got VBD got arg1 OK
it PRP it arg1 OK

that DT ^ ^ repeat
that DT that arg0 OK
has VBZ has ^ OK
to TO to ^ OK
do VB do predicate OK
with IN with arg_particl OK
smoking NN smoking arg1 OK

we PRP we ^ OK
're VBP 're ^ OK

my PRP my arg1 OK
sister NN sister arg1 OK
's POS 's arg1 OK
house NN house arg1 OK
was VBD was predicate OK
pretty RB pretty arg2 OK
close JJ close arg2 OK
to IN ^ ^ repeat
to IN to arg2 OK
uh UH ^ ^ filler
one CD one arg2 OK
of IN of arg2 OK
them PRP them arg2 OK

and CC ^ ^ false_start
so RB ^ ^ false_start
that DT that arg1 OK
was VBD was predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
scary JJ scary arg2 OK
for IN for argM_tmp OK
a DT a argM_tmp OK
couple NN couple argM_tmp OK
of IN of argM_tmp OK
days NNS days argM_tmp OK

and CC ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
like UH ^ ^ filler
the DT the arg2 OK
only RB only arg2 OK
just RB just arg2 OK
get VB get arg2 OK
that DT that arg1 OK
thing NN thing arg1 OK
away RB away arg2 OK
from IN from arg2 OK
me PRP me arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
person NN person arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
especially RB ^ ^ false_start
now RB ^ ^ false_start
that IN ^ ^ false_start
i PRP ^ ^ false_start
have VBP ^ ^ false_start
a DT ^ ^ false_start
ba- NN ^ ^ false_start
i PRP i arg0 OK
just RB just ^ OK
just RB ^ ^ repeat
never RB never argM_neg OK
you PRP ^ ^ filler
had VBD had predicate OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the arg1 OK
know VBP ^ ^ filler
desire NN desire arg1 OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
probably RB probably ^ OK
like RP like ^ OK
yeah UH ^ ^ filler

and CC ^ ^ false_start
i PRP ^ ^ repeat
it PRP it arg0 OK
must MD must ^ OK
have VB have ^ OK
looked VBN looked predicate OK
ridiculous JJ ridiculous arg1 OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
sh- PRP ^ ^ false_start
i PRP i arg0 OK
had VBD had predicate OK
no DT no arg1 OK
idea NN idea arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
i PRP i arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
smoke VB smoke predicate OK

and CC ^ ^ false_start
i PRP i ^ OK
went VBD went ^ OK
oh UH ^ ^ filler
my UH ^ ^ filler
god UH ^ ^ filler

a DT a arg1 OK
case NN case arg1 OK
is VBZ is arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
thirty CD thirty ^ OK
thirty CD or arg2 false_start
forty CD forty arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
whatever UH ^ ^ false_start

i PRP i ^ OK
was VBD was ^ OK
like RP like ^ OK
wow UH ^ ^ filler

i PRP ^ ^ repeat
th- VBP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
even RB even ^ OK
know VB know predicate OK

maybe RB maybe ^ OK
a- XX a- ^ OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
so RB so arg1 OK

so UH ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
're VBP ^ ^ repeat
do VBP do argM_neg OK
n't RB n't argM_neg OK
h- WRB ^ ^ repeat
have VB have predicate OK
any DT any arg1 OK
money NN money arg1 OK
how WRB how ^ OK
do VBP do ^ OK
you PRP you arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
afford VB afford predicate OK
it PRP it arg1 OK

it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
an DT an arg2 OK
expensive JJ expensive arg2 OK
habit NN habit arg2 OK

then RB then ^ OK
we PRP we arg0 OK
could MD could ^ OK
sit VB sit predicate OK
and CC and ^ OK
argue VB argue ^ OK
and CC ^ ^ false_start
stuff NN ^ predicate false_start

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD did argM_neg OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
write VB write predicate OK
it PRP it arg1 OK
down RP down arg1 OK

but CC but ^ OK
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
every- NN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
's S-1 's ^ OK
kind BES kind ^ OK
of RB of ^ OK
hard RB hard ^ OK
to JJ to ^ OK
stay TO stay ^ OK
in VB in ^ OK
boundaries IN boundaries ^ OK
you NNS ^ ^ filler
know PRP ^ ^ filler
with VBP with ^ OK
the IN ^ ^ false_start
so DT so ^ OK
much RB much ^ OK
stuff JJ stuff ^ OK
that NN that ^ OK
's WDT 's ^ OK
out BES out ^ OK
now RB now ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
yeah UH ^ ^ false_start
everybody NN everybody ^ OK
can MD can ^ OK
look VBP look ^ OK
at IN at ^ OK
it PRP it ^ OK
and CC and ^ OK
then RB then ^ OK
say VBP say ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
well UH ^ ^ false_start
let VB let ^ OK
's PRP 's ^ OK
take VB take ^ OK
a DT a ^ OK
look NN look ^ OK

um UH ^ ^ filler
what WP ^ ^ false_start
's BES ^ ^ false_start
that DT ^ ^ false_start
w- XX ^ ^ false_start
what WP what ^ OK
's BES 's ^ OK
the DT the ^ OK
book NN book ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
everybody NN everybody ^ OK
could MD could ^ OK
find VB find ^ OK
like UH ^ ^ filler

you PRP ^ ^ filler
know VBP ^ ^ filler
oh UH ^ ^ filler
definitely RB definitely ^ OK
too RB too ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
taking VBG taking ^ OK
hallucinogens NNS hallucinogens ^ OK

j- RB ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
just RB just ^ OK
coming VBG coming ^ OK
out RP out ^ OK

but CC but ^ OK
another DT another ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
p- VBP ^ ^ repeat
pay VBP pay ^ OK
for IN for ^ OK
these DT these ^ OK
things NNS things ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH so ^ OK
if IN if ^ OK
you PRP you ^ OK
did VBD did ^ OK
n't RB n't ^ OK
want VB want ^ OK
to TO ^ ^ repeat
to TO ^ ^ repeat
um UH ^ ^ filler
to TO to ^ OK
buy VB buy ^ OK
it PRP it ^ OK
you PRP you ^ OK
should MD should ^ OK
n't RB n't ^ OK
go VB go ^ OK
see VB see ^ OK
it PRP it ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
did VBD did ^ OK
n't RB n't ^ OK
want VB want ^ OK
to TO to ^ OK
see VB see ^ OK
it PRP it ^ OK
you PRP you ^ OK
should MD should ^ OK
n't RB n't ^ OK
go VB go ^ OK
pay VB pay ^ OK
for IN for ^ OK
it PRP it ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
was VBD ^ ^ repeat
wa- VBD ^ ^ repeat
was VBD was ^ OK
just RB just ^ OK
watching VBG watching ^ OK
wrestling NN wrestling ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he ^ OK
's BES 's ^ OK
up IN up ^ OK
there RB there ^ OK
cursing VBG cursing ^ OK
and CC and ^ OK
everything NN everything ^ OK
like IN like ^ OK
that DT that ^ OK

yeah UH yeah ^ OK
oh UH ^ ^ false_start
my UH ^ ^ false_start
goo- UH ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK

he PRP ^ ^ repeat
he PRP ^ ^ repeat
he PRP ^ ^ repeat
h- PRP ^ ^ repeat
he PRP he ^ OK
hit VBD hit ^ OK
somebody NN somebody ^ OK
in IN in ^ OK
the DT the ^ OK
head NN head ^ OK
with IN with ^ OK
a DT a ^ OK
beer NN beer ^ OK
can NN can ^ OK

it PRP ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
he PRP he ^ OK
gets VBZ gets ^ OK
up RB up ^ OK

i PRP i ^ OK
could MD could ^ OK
tell VB tell ^ OK

eh UH ^ ^ filler
yeah UH ^ ^ repeat
eh UH ^ ^ filler
yeah UH yeah ^ OK
kids NNS kids ^ OK
d- VBP ^ ^ repeat
do VBP do ^ OK
get VB get ^ OK
a DT a ^ OK
s- XX s- ^ OK

and CC ^ ^ false_start
if IN if ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
someone NN someone ^ OK
says VBZ says ^ OK
something NN something ^ OK
to IN to ^ OK
them PRP them ^ OK
you PRP it ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
do VBP does ^ false_start
n't RB n't ^ OK
much RB much ^ OK
matter VB matter ^ OK
how WRB how ^ OK
big JJ big ^ OK
they PRP they ^ OK
are VBP are ^ OK
you ADJP-PRD- 2 ^ ^ filler
know PRP ^ ^ filler
giving VBP giving ^ OK
stone VBG stone ^ OK
cold NNP cold ^ OK
one NNP one ^ OK
finger CD finger ^ OK
salute NN salute ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
eh UH ^ ^ filler
really RB really ^ OK
it PRP it ^ OK
's S-1 's ^ OK
kind BES kind ^ OK
of RB of ^ OK
hard RB hard ^ OK
to JJ to ^ OK
say TO say ^ OK
if VB if ^ OK
eh IN ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
like VBP ^ ^ filler
say UH say ^ OK
marilyn UH marilyn ^ OK
manson NNP manson ^ OK
or NNP or ^ OK
eminem CC eminem ^ OK
and NNP and ^ OK
all CC all ^ OK
those PDT those ^ OK
like DT ^ ^ filler
characters UH characters ^ OK
make NNS make ^ OK
people VB people ^ OK
go NNS go ^ OK
out VB out ^ OK
and RB and ^ OK
kill CC kill ^ OK
people VB people ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
want VB ^ ^ false_start
to TO ^ ^ false_start
talk VB ^ ^ false_start
these DT these ^ OK
people NNS people ^ OK
um UH ^ ^ filler
must MD must ^ OK
have VB have ^ OK
some DT some ^ OK
kind NN kind ^ OK
of IN of ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
other JJ other ^ OK
issues NNS issues ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
yeah UH yeah ^ OK
it PRP it ^ OK
's BES 's ^ OK
definitely RB definitely ^ OK
other JJ other ^ OK
issues NNS issues ^ OK
in IN in ^ OK
that DT that ^ OK

eh UH ^ ^ filler
they PRP they ^ OK
just RB just ^ OK
may MD may ^ OK
have VB have ^ OK
been VBN been ^ OK
listening VBG listening ^ OK
to IN to ^ OK
something NN something ^ OK
eh UH ^ ^ filler
like IN like ^ OK
that DT that ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
just RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
happen VB happen ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
as IN ^ ^ repeat
as IN as ^ OK
uh UH ^ ^ filler
people NNS people ^ OK
get VBP get ^ OK
married VBN married ^ OK
they NP-1 they ^ OK
move PRP move ^ OK

they PRP they ^ OK
m- XX ^ ^ false_start
have VBP have ^ OK
other JJ other ^ OK
people NNS people ^ OK
that WDT that ^ OK
they PRP they ^ OK
need VBP need ^ OK
to TO to ^ OK
be VB be ^ OK
with IN with ^ OK
because NP-2 because ^ OK
they IN they ^ OK
bring PRP bring ^ OK
in VBP in ^ OK
another RP ^ ^ repeat
you DT ^ ^ filler
know PRP ^ ^ filler
another VBP another ^ OK
side DT side ^ OK
of NN of ^ OK
the IN the ^ OK
family DT family ^ OK

so RB ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
not RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
starts VBZ starts ^ OK
just RB just ^ OK
to TO to ^ OK
split VB split ^ OK
off RP off ^ OK
a DT a ^ OK
lot NN lot ^ OK

but CC but ^ OK
then RB then ^ OK
we PRP ^ ^ false_start
at IN ^ ^ repeat
at IN at ^ OK
christmas NNP christmas ^ OK
time NN time ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
get VBP get ^ OK
to TO to ^ OK
spend VB spend ^ OK
time NN time ^ OK
with IN with ^ OK
all PDT all ^ OK
the DT the ^ OK
people NNS people ^ OK
that WDT that ^ OK
i PRP i ^ OK
like VBP like ^ OK
and NP-2 and ^ OK
uh CC ^ ^ filler
the UH the ^ OK
family DT family ^ OK
that NN that ^ OK
i WDT i ^ OK
like PRP like ^ OK

and CC ^ ^ false_start
at IN at ^ OK
other JJ other ^ OK
times NNS times ^ OK
um UH ^ ^ filler
say UH say ^ OK
like UH ^ ^ filler
for IN ^ ^ false_start
the DT the ^ OK
fourth JJ fourth ^ OK
of IN of ^ OK
july NNP july ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
might MD might ^ OK
go VB go ^ OK
with IN ^ ^ repeat
in- NN ^ ^ repeat
with IN with ^ OK
the DT ^ ^ repeat
the DT the ^ OK
other JJ other ^ OK
side NN side ^ OK
of IN of ^ OK
th- DT ^ ^ repeat
the DT the ^ OK
husband NN husband ^ OK
's POS 's ^ OK
family NN family ^ OK
or CC or ^ OK
the DT the ^ OK
wife NN wife ^ OK
's POS 's ^ OK
family NN family ^ OK

mm UH mm ^ OK
mm UH mm ^ OK

i PRP i ^ OK

i PRP i ^ OK
think VBP think ^ OK
if IN if ^ OK
i PRP i ^ OK
had VBD had ^ OK
to TO to ^ OK
n- VB ^ ^ repeat
name VB name ^ OK
something NN something ^ OK
for IN for ^ OK
our PRP our ^ OK
family NN family ^ OK
i PRP i ^ OK
i- XX ^ ^ repeat
would MD would ^ OK
say VB say ^ OK
we PRP we ^ OK
're VBP 're ^ OK
more JJR more ^ OK
of IN of ^ OK
a DT a ^ OK
uh UH ^ ^ filler
spiritual JJ spiritual ^ OK
family NN family ^ OK

and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK

the DT the ^ OK
holiday NNP holiday ^ OK
is VBZ is ^ OK
more RBR more ^ OK
centered VBN centered ^ OK
around IN around ^ OK
us PRP us ^ OK
as IN as ^ OK
a DT a ^ OK
family NN family ^ OK
than IN ^ ^ repeat
as IN ^ ^ false_start
a DT ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
than IN ^ ^ repeat
than IN than ^ OK
religion NN religion ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
more RBR more ^ OK
about IN ^ ^ repeat
about IN about ^ OK
us PRP us ^ OK

that DT ^ ^ false_start
's BES ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
sa- VBP ^ ^ false_start
w- WP ^ ^ false_start
um UH ^ ^ filler
we PRP we ^ OK
celebrate VBP celebrate ^ OK
our PRP our ^ OK
s- XX ^ ^ false_start
family NN family ^ OK
more RBR more ^ false_start
than IN ^ ^ repeat
than IN ^ ^ repeat
than IN ^ ^ repeat
the DT ^ ^ false_start
than IN than ^ OK
uh UH ^ ^ filler
a DT a ^ OK
religious JJ religious ^ OK
holiday NN holiday ^ OK

and CC ^ ^ false_start
if IN if ^ OK
i PRP i ^ OK
had VBD had ^ OK
to TO to ^ OK
create VB create ^ OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a ^ OK
holiday NN holiday ^ OK
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it ^ OK
would MD would ^ OK
be VB be ^ OK
around IN around ^ OK
children NNS children ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP ^ ^ repeat
we PRP we ^ OK
'd MD 'd ^ OK
celebrate VB celebrate ^ OK
it PRP it ^ OK
by IN by ^ OK
celebrating VBG celebrating ^ OK
children NNS children ^ OK
just RB just ^ OK
letting VBG ^ ^ repeat
lettin- VBG ^ ^ repeat
letting VBG letting ^ OK
them PRP ^ ^ repeat
n- XX ^ ^ repeat
them PRP them ^ OK
have VB have ^ OK
a DT ^ ^ repeat
a DT a ^ OK
f- JJ ^ ^ repeat
fun JJ fun ^ OK
day NN day ^ false_start
because IN because ^ OK
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
holidays NNS holidays ^ OK
a- VBP ^ ^ repeat
are VBP are ^ OK

regardless RB regardless ^ OK
eh UH ^ ^ filler

because IN ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
had VBN had predicate OK
these DT these arg1 OK
friends NNS friends arg1 OK
for IN for argM_tmp OK
a DT a argM_tmp OK
long JJ ^ ^ repeat
long JJ long argM_tmp OK
time NN time argM_tmp OK
and CC and ^ OK
i PRP i arg0 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
going VBG going arg2 OK
to TO to arg2 OK
risk VB risk arg2 OK
loosing VBG losing arg1 false_start
them PRP them arg1 OK
because IN ^ arg2 false_start
of IN ^ ^ false_start
a DT for ^ false_start
uh UH ^ ^ filler
a DT ^ ^ repeat
million CD ^ ^ repeat
dol- NNS ^ ^ repeat
a DT a arg2 OK
whatever WDT ^ ^ false_start
millionaire NN millionaire arg2 OK
or CC ^ ^ false_start

eh UH ^ ^ filler
ah UH ^ ^ filler
s- XX ^ ^ repeat
yeah UH yeah ^ OK

and CC ^ ^ false_start
look VB ^ ^ repeat
how WRB ^ ^ repeat
many JJ ^ ^ repeat
ah UH ^ ^ filler
l- VB ^ ^ repeat
look VB look predicate OK
how WRB at ^ false_start
how WRB how arg0 OK
many JJ many arg0 OK
of IN of arg0 OK
our PRP our arg0 OK
men NNS men arg0 OK
are VBP are ^ OK
dying VBG dying predicate OK
in IN in argM_loc OK
iraq NNP iraq argM_loc OK

and CC ^ ^ false_start
ah UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
w- PRP ^ ^ repeat
wh- XX ^ ^ repeat
we PRP we arg0 OK
're VBP 're ^ OK
loosing VBG losing predicate false_start
our PRP our arg1 OK
men NNS men arg1 OK
one CD one ^ OK
by IN by ^ OK
one CD one ^ OK

and CC ^ ^ false_start
is VBZ is predicate OK
it PRP it arg1 OK
worth JJ worth arg2 OK
it PRP it arg2 OK

is VBZ is predicate OK
it PRP it arg1 OK
really PRP really arg2 OK
worth SBAR-1 worth arg2 OK
it JJ it arg2 OK
for RB for ^ OK
our IN our arg0 OK
men PRP men arg0 OK
to NNS to ^ OK
go TO go predicate OK
there VB there arg4 OK
and RB and ^ OK
help CC help predicate OK
them VB them arg2 OK
to PRP ^ ^ OK
rebuild TO rebuild arg1 OK

they PRP they ^ OK
eh UH ^ ^ filler

and CC ^ ^ false_start
now RB ^ ^ false_start
's BES is predicate false_start
this DT ^ ^ false_start
paul NNP paul arg1 OK
brennan NNP brennan arg1 OK
he PRP ^ ^ false_start
the DT the arg2 OK
one CD one arg2 OK
that WDT that arg1 OK
's BES 's predicate OK
in IN in arg2 OK
iraq NNP iraq arg2 OK

i PRP i arg0 OK
just RB have ^ false_start
just RB just ^ OK
seen VBN seen predicate OK
him PRP him arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
news NN news argM_loc OK
with IN with ^ OK
president NNP president ^ OK
bush NNP bush ^ OK
today NN today ^ OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
he PRP ^ ^ repeat
s- VBD ^ ^ repeat
he PRP he arg0 OK
claims VBZ claims predicate OK
oh UH ^ ^ filler
they PRP they arg0 OK
're VBP 're arg1 OK
getting VBG getting arg1 OK
better JJR better arg1 OK
and CC ^ ^ false_start
better JJR ^ ^ false_start
and CC ^ ^ false_start
better JJR ^ ^ false_start

it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
bull NN bull arg2 OK

that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
way NN way arg2 OK
i PRP i arg0 OK
put VBP put predicate OK
it PRP it arg1 OK

i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
without IN without arg2 OK
money NN money arg2 OK
i PRP ^ ^ repeat
uh-huh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all argM_tmp false_start
these DT these argM_tmp false_start
years NNS years argM_tmp false_start

i PRP ^ ^ repeat
had VBD ^ ^ repeat
i PRP i arg0 OK
had VBD had predicate OK
a DT a arg1 OK
guardian NN guardian arg1 OK
angel NN angel arg1 OK
already RB already ^ OK

and CC ^ ^ false_start
then RB ^ ^ false_start
this DT this argM_tmp OK
may NNP may argM_tmp OK
i PRP i arg0 OK
took VBD had predicate false_start
a DT a arg1 OK
heart NN heart arg1 OK
attack NN attack arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
money NN money arg1 OK
is VBZ is predicate OK
nothing NN nothing arg2 OK

i- PRP ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
how WRB ^ ^ false_start
your PRP your arg1 OK
health NN health arg1 OK
is VBZ is predicate OK
more RBR more arg2 OK
important JJ important arg2 OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
notice VBP notice predicate OK
that IN that arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
always RB always argM_tmp OK
the DT the arg0 OK
good JJ good arg0 OK
people NNS people arg0 OK
they PRP that arg1 false_start
die VBP die arg1 OK

and CC ^ ^ false_start
the DT the arg1 OK
bad JJ bad arg1 OK
are VBP are predicate OK
still RB still arg2 OK
around RB around arg2 OK

and CC ^ ^ false_start
th- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
another DT another ^ OK
thing NN thing ^ OK

but CC ^ ^ false_start
ah UH ^ ^ filler
li- IN ^ ^ repeat
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
i PRP ^ ^ repeat
god NNP god arg0 OK
could MD could ^ OK
have VB have ^ OK
taken VBN taken predicate OK
me PRP me arg1 OK
some RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
three CD three ^ OK
times NNS times ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
goi- VBG ^ ^ repeat
now RB now argM_tmp OK
i PRP i arg1 OK
'm VBP 'm ^ OK
supposed VBN supposed predicate OK
to TO to arg2 OK
go VB go arg2 OK
for IN for arg4 OK
a DT a arg4 OK
triple JJ triple arg4 OK
bypass NN bypass arg4 OK

and CC ^ ^ filler
i PRP ^ ^ repeat
that DT ^ ^ repeat
's BES ^ ^ repeat
a DT ^ ^ repeat
that WDT ^ ^ repeat
's BES ^ ^ repeat
a DT ^ ^ repeat
li- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
'm VBP 'm ^ OK
thinking VBG thinking predicate OK
about IN about arg1 OK
that DT that arg1 OK

uh UH ^ ^ filler
w- XX ^ ^ false_start
w- XX ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
for IN for ^ OK
us PRP us ^ OK
uh UH ^ ^ filler
having VBG having ^ OK
the DT the ^ OK
same JJ same ^ OK
eh UH ^ ^ filler
life NN life ^ OK
goals NNS goals ^ OK
and CC and ^ OK
uh UH ^ ^ filler
things NNS things ^ OK
that WDT that ^ OK
are VBP are ^ OK
important JJ important ^ OK
to IN to ^ OK
you PRP you ^ OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
eh UH ^ ^ filler
so UH ^ ^ filler
those DT ^ ^ false_start
it- XX ^ ^ false_start
uh UH ^ ^ filler
strength NN strength ^ OK
and CC and ^ OK
faith NN faith ^ OK
are VBP are ^ OK
eh UH ^ ^ filler
things NNS things ^ OK
that WDT that ^ OK
guide VB guide ^ OK
us PRP us ^ OK
or CC or ^ OK
uh UH ^ ^ filler
help VB help ^ OK
us PRP us ^ OK
link VB link ^ OK
together RB together ^ OK

w- XX ^ ^ false_start
uh UH ^ ^ filler
one CD ^ ^ false_start
thing NN ^ ^ false_start
w- PRP ^ ^ repeat
uh UH ^ ^ filler
we PRP we ^ OK
try VBP ^ ^ repeat
uh UH ^ ^ filler
eh UH ^ ^ filler
started VBD started ^ OK
early RB early ^ OK
e- XX ^ ^ repeat
uh UH ^ ^ filler
never RB never ^ OK
to TO to ^ OK
use VB use ^ OK
the DT the ^ OK
word NN word ^ OK
divorce NN divorce ^ OK
uh UH ^ ^ filler
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
once IN once ^ OK
you PRP you ^ OK
say VBP say ^ OK
it PRP it ^ OK
it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK
you PRP you ^ OK
like UH ^ ^ filler
kind RB kind ^ OK
of RB of ^ OK
encourage VB encourage ^ OK
it PRP it ^ OK
to TO to ^ OK
come VBN come ^ OK
up RP up ^ OK
again RB again ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
the DT the ^ OK
mutual JJ mutual ^ OK
uh UH ^ ^ filler
aim NN aim ^ OK
to TO to ^ OK
not RB not ^ OK
just RB just ^ OK
be VB be ^ OK
partners NNS partners ^ OK
but CC but ^ OK
to TO to ^ OK
work VB work ^ OK
on IN on ^ OK
your PRP your ^ OK
relationship NN relationship ^ OK
and CC ^ ^ false_start
uh UH ^ ^ filler
as IN as ^ OK
friends NNS friends ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
as RB ^ ^ repeat
as IN ^ ^ repeat
w- XX ^ ^ repeat
as IN as ^ OK
kids NNS kids ^ OK
come VBP come ^ OK
along RB along ^ OK
we PRP we ^ OK
have VBP have ^ OK
six CD six ^ OK

ri- UH ri- ^ OK
yeah UH yeah ^ OK

sometimes RB sometimes ^ OK
you PRP you ^ OK
feel VBP feel ^ OK
like IN like ^ OK
well UH well ^ OK
what WP what ^ OK
do VBP do ^ OK
we PRP we ^ OK
do VB do ^ OK
now RB now ^ OK

we PRP ^ ^ false_start
got VBD ^ ^ false_start
we PRP ^ ^ false_start
w- PRP ^ ^ false_start
u- XX ^ ^ false_start
d- XX ^ ^ false_start
we PRP we ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
any DT any ^ OK
kids NNS kids ^ OK
to TO to ^ OK
do VB do ^ OK

eh UH ^ ^ filler
uh UH ^ ^ filler
where WRB where ^ OK
do VBP do ^ OK
you PRP you ^ OK
live VB live ^ OK

in IN ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
uh UH ^ ^ filler
up RB ^ ^ false_start
in IN ^ ^ false_start
from IN ^ ^ false_start
n- RB ^ ^ filler
north RB north ^ OK
from IN from ^ OK
chattanooga NNP chattanooga ^ OK

uh UH ^ ^ filler
we PRP ^ ^ repeat
we PRP we ^ OK
ha- VBP ^ ^ repeat
bought VBD bought ^ OK
a DT ^ ^ repeat
a DT a ^ OK
seventeen CD seventeen ^ OK
foot NN foot ^ OK
canoe NN canoe ^ OK

so UH so ^ OK
we PRP we ^ OK
can MD can ^ OK
all DT all ^ OK
g- XX ^ ^ false_start
ride VB ride ^ OK
in IN in ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
especially RB especially ^ OK
weight-wise RB weight-wise ^ OK

uh UH ^ ^ filler
we PRP we ^ OK
usually RB usually ^ OK
u- XX ^ ^ false_start
have VBP have ^ OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
the DT the ^ OK
mini JJ mini ^ OK
lounge NN lounge ^ OK
chairs NNS chairs ^ OK
that WDT that ^ OK
we PRP we ^ OK
put VBP put ^ OK
in IN in ^ OK
there RB there ^ OK
or CC or ^ OK
recli- NNS ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB ^ ^ filler
uh UH ^ ^ false_start
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
lawn NN lawn ^ OK
chairs NNS chairs ^ OK
they PRP ^ ^ false_start
call VBP ^ ^ false_start
them PRP ^ ^ false_start

oh UH ^ ^ filler
we PRP we ^ OK
sent VBD ^ ^ repeat
eh UH ^ ^ filler
set VBD set ^ OK
a DT a ^ OK
couple NN couple ^ OK
low JJ low ^ OK
rider NN rider ^ OK
types NNS types ^ OK
in IN in ^ OK
the DT the ^ OK
s- XX ^ ^ false_start
uh UH ^ ^ filler
bottom NN bottom ^ OK
of IN of ^ OK
the DT the ^ OK
canoe NN canoe ^ OK

and CC ^ ^ repeat
and CC usually ^ false_start
usually RB ^ ^ false_start
my PRP my ^ OK
wife NN wife ^ OK
she PRP ^ ^ false_start
eh UH ^ ^ filler
she PRP ^ ^ repeat
's BES ^ ^ repeat
eh UH ^ ^ filler
uh UH ^ ^ filler
she PRP ^ ^ repeat
does VBZ ^ ^ repeat
's BES 's ^ OK
n't RB ^ ^ repeat
not RB not ^ OK
a DT a ^ OK
real JJ real ^ OK
water NN water ^ OK
person NN person ^ OK

but CC but ^ OK
she PRP she ^ OK
usually RB usually ^ OK
sits VBZ sits ^ OK
up RB up ^ OK
on IN on ^ OK
the DT the ^ OK
bank NN bank ^ OK
and CC and ^ OK
r- VBZ ^ ^ repeat
reads VBZ reads ^ OK
a DT a ^ OK
book NN book ^ OK
or CC ^ ^ false_start
eh UH ^ ^ filler
something NN ^ ^ false_start
while IN while ^ OK
we PRP we ^ OK
canoe VBP canoe ^ OK
back RB back ^ OK
and CC and ^ OK
forth RB forth ^ OK

and CC ^ ^ false_start
we PRP we ^ OK
usually RB usually ^ OK
go VBP go ^ OK
um UH ^ ^ filler
paddle VB paddle ^ OK
down IN down ^ OK
the DT the ^ OK
river NN river ^ OK

we PRP we ^ OK
live VBP live ^ OK
um UH ^ ^ filler
about RB about ^ OK
half PDT half ^ OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a ^ OK
m- NN ^ ^ repeat
mile NN ^ ^ repeat
mile NN mile ^ OK
from IN from ^ OK
the DT the ^ OK
tennessee NNP tennessee ^ OK
river NNP river ^ OK

from IN from ^ OK
five CD five ^ OK
to IN to ^ OK
nineteen CD nineteen ^ OK

and CC ^ ^ false_start
we PRP we ^ OK
had VBD had ^ OK
uh UH ^ ^ filler
two CD two ^ OK
miscarriages NNS miscarriages ^ OK
in IN in ^ OK
there RB there ^ OK
also RB also ^ OK

and CC ^ ^ false_start
w- PRP ^ ^ repeat
so UH ^ ^ false_start
we PRP we ^ OK
had VBD had ^ OK
the DT the ^ OK
first JJ first ^ OK
two CD two ^ OK

then RB then ^ OK
we PRP we ^ OK
have VBP have ^ OK
a DT ^ ^ repeat
a DT a ^ OK
seventeen CD seventeen ^ OK
year NN year ^ OK
old JJ old ^ OK
girl NN girl ^ OK

a DT a ^ OK
boy NN boy ^ OK
that WDT that ^ OK
turned VBD turned ^ OK
eleven CD eleven ^ OK
in IN in ^ OK
oc- NNP ^ ^ false_start
no UH ^ ^ false_start
uh UH ^ ^ filler
november NNP november ^ OK

and CC ^ ^ false_start
then RB then ^ OK
a DT a ^ OK
nine CD nine ^ OK
year NN year ^ OK
old JJ old ^ OK
in IN in ^ OK
august NNP august ^ OK

and CC ^ ^ false_start
then RB then ^ OK
we PRP we ^ OK
had VBD had ^ OK
a DT a ^ OK
miscarriage NN miscarriage ^ OK
between IN between ^ OK
her PRP her ^ OK
and CC and ^ OK
the DT the ^ OK
five CD five ^ OK
year NN year ^ OK
old JJ old ^ OK
eh UH ^ ^ filler
that WDT that ^ OK
turned VBD turned ^ OK
five CD five ^ OK
in IN in ^ OK
au- NNP ^ ^ false_start
uh UH ^ ^ filler
april NNP april ^ OK

so UH ^ ^ false_start
uh UH ^ ^ filler
like UH ^ ^ filler
uh UH ^ ^ filler
when WRB ^ ^ repeat
a- XX ^ ^ false_start
m- JJS ^ ^ false_start
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
time NN time ^ OK
w- PRP ^ ^ repeat
we PRP ^ ^ repeat
we PRP ^ ^ repeat
we PRP ^ ^ repeat
can MD ^ ^ repeat
we PRP we ^ OK
eh UH ^ ^ filler
scrunch VB scrunch ^ OK
in RP in ^ OK
instead IN instead ^ OK
of IN of ^ OK
going VBG going ^ OK
out RB out ^ OK
to TO to ^ OK
eat VB eat ^ OK
on IN on ^ OK
friday NNP friday ^ OK
nights NNS nights ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

and CC ^ ^ false_start
we PRP we ^ OK
just RB just ^ OK
make VBP make ^ OK
a DT ^ ^ false_start
w- XX ^ ^ false_start
a DT ^ ^ false_start
w- XX ^ ^ false_start
a DT a ^ OK
h- XX ^ ^ false_start
eh UH ^ ^ filler
bread NN bread ^ OK
recipe NN recipe ^ OK
makes VBZ that ^ false_start
makes VBZ makes ^ OK
two CD two ^ OK
loaves NNS loaves ^ OK
of IN of ^ OK
bread NN bread ^ OK

but CC but ^ OK
we PRP ^ ^ repeat
uh UH ^ ^ filler
we PRP we ^ OK
make VBP make ^ OK
homemade JJ homemade ^ OK
pizza NN pizza ^ OK
just RB just ^ OK
about RB about ^ OK
every DT every ^ OK
friday NNP friday ^ OK
night NN night ^ OK

it PRP it arg1 OK
's BES 's predicate OK
like IN like arg2 OK
blind NNP blind arg2 OK
date NNP date arg2 OK

it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK
blind NNP blind ^ OK
date NNP date ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what arg2 OK
it PRP it arg1 OK
was VBD was predicate OK

it PRP it arg1 OK
's BES 's ^ OK
supposed VBN supposed predicate OK
to TO to arg2 OK
have VB have arg2 OK
been VBN been arg2 OK
just RB just arg2 OK
clean JJ clean arg2 OK
f- NN ^ ^ repeat
fun NN fun arg2 OK
where WRB where arg2 OK
they PRP they arg0 OK
were VBD were arg2 OK
just RB just arg2 OK
dating VBG dating arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
not RB not arg2 OK
our PRP ^ ^ repeat
our PRP our arg2 OK
population NN population arg2 OK
anymore RB anymore arg2 OK

people NNS people arg1 OK
are VBP are predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
more RBR more arg2 OK
wild JJ wild arg2 OK
than IN than arg2 OK
that DT that arg2 OK
unfortunately RB unfortunately arg2 OK

they PRP ^ ^ repeat
they PRP they ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP ^ ^ repeat
also RB ^ ^ false_start
th- VBP ^ ^ false_start
i PRP i arg0 OK
happen VBP happen predicate OK
to TO to arg1 OK
think VB think arg1 OK
some DT some arg1 OK
of IN of arg1 OK
t- XX ^ ^ repeat
these DT these arg1 OK
shows NNS shows arg1 OK
that WDT that arg1 OK
are VBP are arg1 OK
supposed VBN supposed arg1 OK
to TO to arg2 OK
be VB be arg2 OK
geared VBN geared arg2 OK
towards IN towards arg2 OK
kids NNS kids arg2 OK
are VBP are arg1 OK
very RB very arg2 OK
violent JJ violent arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they arg0 OK
have VBP have predicate OK
cartoons NNS cartoons arg1 OK
that WDT that arg1 OK
are VBP are arg1 OK
violent JJ violent arg2 OK

see UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have predicate OK
any DT any arg1 OK
children NNS children arg1 OK

but CC but ^ OK
if IN if ^ OK

like UH ^ ^ filler
when WRB when ^ OK
we PRP we arg0 OK
w- XX ^ ^ repeat
grew VBD grew predicate OK
up RP up ^ OK
it ADVP-TMP- 1 ^ ^ false_start
's PRP ^ ^ false_start
you BES ^ ^ filler
know PRP ^ ^ filler
they VBP they arg0 OK
did PRP did ^ OK
n't VBD n't ^ OK
need RB need predicate OK
to VB to arg1 OK
get TO get arg1 OK
involved VB involved arg2 OK
as JJ as arg2 OK
much RB much arg2 OK

maybe RB maybe ^ OK
they PRP they arg0 OK
'd VBD ^ ^ repeat
should MD should ^ OK
've VB 've ^ OK
gotten VBN gotten predicate OK
more RBR more arg2 OK
involved JJ involved arg2 OK
because IN because ^ OK
we PRP when ^ false_start
we PRP we arg0 OK
grew VBD grew predicate OK
up RP up ^ OK
our ADVP-TMP- 1 our ^ OK
parents PRP parents arg0 OK
were NNS were ^ OK
n't VBD n't ^ OK
involved RB involved predicate OK

now RB now ^ OK
it PRP ^ ^ false_start
gotten VBN ^ ^ false_start
everything NN everything arg1 OK
's HVS ^ ^ repeat
is VBZ is predicate OK
very RB very arg2 OK
re- XX ^ ^ repeat
risque JJ risque arg2 OK

it PRP ^ arg1 false_start
that IN ^ ^ false_start
what WP what arg0 OK
's BES 's predicate OK
on IN on arg2 OK
regular JJ regular arg2 OK
t. NN t. arg2 OK
v. NN v. ^ OK
amazes VBZ amazes predicate false_start
me PRP me ^ false_start

they PRP ^ ^ false_start
're VBP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
t. NN t. arg1 OK
v. NN v. arg1 OK
has VBZ has ^ OK
gotten VBN gotten predicate OK
very RB ^ ^ repeat
very RB very arg2 OK
ris- JJ ^ ^ repeat
risque JJ risque arg2 OK
this DT ^ ^ repeat
these DT these arg2 OK
day NN ^ ^ repeat
days NNS days arg2 OK

but CC but ^ OK
if IN if ^ OK
i PRP i ^ OK
had VBD had ^ OK
the DT the ^ OK
kids NNS kids ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK
i PRP i ^ OK
would MD would ^ OK
do VB do ^ OK
because NP-1 because ^ OK
it IN it ^ OK
really PRP really ^ OK
is RB is ^ OK

my PRP my arg1 OK
he- PRP ^ ^ false_start
nephew NN nephew arg1 OK
just RB just ^ OK
turned VBD turned predicate OK
ten CD ten arg2 OK

and CC ^ ^ false_start
they PRP they arg0 OK
actually RB actually ^ OK
had VBD had predicate OK
the DT ^ ^ repeat
she PRP ^ ^ false_start
the DT the arg1 OK
t. NN t. arg1 OK
t- XX ^ ^ repeat
v. NN v. arg1 OK
cut VBN cut arg2 OK
off RP off arg2 OK
for IN for argM_tmp OK
ten CD ten argM_tmp OK
days NNS days argM_tmp OK

was VBD was predicate OK
it PRP it ^ OK
actually UH actually arg1 false_start
ten CD ten arg1 OK

d- XX ^ ^ repeat
no UH no ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
but CC but ^ OK
then RB then ^ OK
it PRP ^ ^ repeat
it PRP it arg0 OK
started VBN started predicate OK
with IN with arg2 OK
the DT the arg2 OK
video JJ video arg2 OK
games NNS games arg2 OK

eh UH ^ ^ filler
it PRP it arg1 OK
was VBD was predicate OK
about RB about arg2 OK
forty-seven CD forty-seven arg2 OK
dollars NNS dollars arg2 OK
and CC ^ ^ false_start
something NN ^ ^ false_start

it PRP ^ ^ repeat
um UH ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
c- XX ^ ^ repeat
's BES 's predicate OK
a DT a arg1 OK
new JJ new arg1 OK
s- NN ^ ^ repeat
style NN style arg1 OK
they PRP they arg0 OK
're VBP 're arg2 OK
coming VBG coming arg2 OK
out RB out arg_particl OK
with IN with arg2 OK

but CC ^ arg3 false_start
you PRP you arg0 OK
can MD can ^ OK
get VB ^ ^ repeat
get VB get predicate OK
e- XX ^ ^ repeat
them PRP them arg1 OK
like UH ^ ^ filler
at IN at argM_loc OK
a DT a argM_loc OK
store NN store argM_loc OK
like IN like argM_loc OK
wal-mart NNP wal-mart argM_loc OK
or CC for ^ false_start
or CC ^ ^ false_start
something NN ^ ^ false_start
really RB really arg3 OK
cheap RB cheap arg3 OK

actually RB actually ^ false_start
they PRP they arg1 OK
go VBP go predicate OK
w- XX ^ ^ filler
under IN under arg3 OK
that DT that arg3 OK

you PRP you arg0 OK
can MD can ^ OK
choose VB choose predicate OK
from IN from arg2 OK
uh UH ^ ^ filler
philips NNP philips arg2 OK
or CC or arg2 OK
sony NNP sony arg2 OK
or CC or arg2 OK
basically RB basically arg2 OK
whatever WDT whatever arg1 OK
you PRP you arg0 OK
want VBP want arg2 OK

but CC ^ arg0 false_start
i PRP i ^ OK
think VBP think predicate OK
they PRP they arg1 OK
were VBD were predicate OK
quite RB quite arg2 OK
more RBR more arg2 OK
expensive JJ expensive arg2 OK

probably RB probably ^ OK
like UH ^ ^ filler
a DT a ^ OK
thousand CD thousand ^ OK
five CD five ^ OK
hundred CD hundred ^ OK
a DT a ^ OK
piece NN piece ^ OK

they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
like UH ^ ^ filler
charge VB charge arg1 OK
uh UH ^ ^ filler
fees NNS fees arg1 OK
for IN for arg3 OK
it PRP it arg3 OK
every DT every argM_tmp OK
time NN time argM_tmp OK
you PRP you arg0 OK
were VBD were argM_tmp OK
to TO to argM_tmp OK
download VB download argM_tmp OK
a- CC ^ ^ repeat
like UH ^ ^ filler
a DT a arg1 OK
song NN song arg1 OK

i PRP ^ arg1 repeat
i PRP ^ ^ false_start
uh UH ^ ^ filler
there EX ^ ^ repeat
there EX there arg1 OK
's BES ^ ^ repeat
's BES 're arg1 false_start
some DT some arg1 OK
towns NNS towns arg1 OK
out IN out arg1 OK
in IN in arg1 OK
california NNP california arg1 OK
the DT where ^ false_start
the DT the arg1 OK
minimum JJ minimum arg1 OK
wage NN wage arg1 OK
is VBZ is arg1 OK
uh UH ^ ^ filler
ten CD ten arg1 OK
or CC or arg1 OK
twelve CD twelve arg1 OK
dollars NNS dollars arg1 OK
an DT an arg1 OK
hour NN hour arg1 OK
i PRP i arg0 OK
think VBP think predicate OK

but CC but ^ OK
in IN in ^ OK
minnesota NNP minnesota ^ OK
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
working VBG working ^ OK
for IN for ^ OK
minimum JJ minimum ^ OK
wage NN wage ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ repeat
that IN that ^ OK

if IN if ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
working VBG working predicate OK
for IN for arg3 OK
minimum JJ minimum arg3 OK
wage NN wage arg3 OK
and CC and ^ OK
the DT ^ ^ false_start
pay NN ^ ^ false_start
you PRP ^ ^ false_start
get VBP ^ ^ false_start
you RB ^ ^ filler
know PRP ^ ^ filler
it VBP ^ ^ repeat
it VBZ ^ ^ repeat
it VB it arg0 OK
ca NP-1 ^ ^ repeat
does- PRP ^ ^ repeat
does PRP ^ ^ repeat
does PRP does ^ OK
n't MD ^ ^ repeat
n't VBZ ^ ^ repeat
n't VBZ n't ^ OK
help RB help predicate OK
ends VB ends arg1 OK
meet RB ^ ^ repeat
meet NNS meet arg1 OK
then VB then ^ OK
you RB you arg0 OK
probably PRP probably ^ OK
need RB need predicate OK
to VBP to arg1 OK
look TO look arg1 OK
for VB for arg1 OK
some IN some arg1 OK
skilled DT skilled arg1 OK
labor JJ labor arg1 OK
or NN or arg1 OK
some CC some arg1 OK
assistance DT assistance arg1 OK
from NN from arg1 OK
the IN the arg1 OK
government DT government arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
no DT ^ ^ repeat
o- NN ^ ^ false_start
no DT ^ ^ false_start
one NN ^ ^ false_start
's BES ^ ^ false_start
really RB ^ ^ false_start
it PRP it ^ OK
all DT all ^ OK
depends VBZ depends predicate OK
how WRB how arg1 OK
you PRP you arg0 OK
look VBP look arg1 OK
at IN at arg1 OK
it PRP it arg1 OK
an- ADVP-MNR- 2 ^ ^ repeat
and CC ^ ^ repeat
and WP and arg1 OK
who CC ^ ^ repeat
who CC who arg0 OK
's WP 's arg1 OK
giving BES giving arg1 OK
an VBG an arg1 OK
opinion DT opinion arg1 OK

if IN ^ ^ repeat
if IN if ^ OK
your- PRP ^ ^ repeat
you PRP you arg1 OK
're VBP 're predicate OK
an DT an arg2 OK
employer NN employer arg2 OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you arg0 OK
'd MD ^ ^ repeat
would MD ^ ^ repeat
n't RB ^ ^ repeat
'd MD 'd ^ OK
want VB ^ ^ repeat
want VB want predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
minimum JJ ^ ^ repeat
minimum JJ minimum arg1 OK
wage NN ^ ^ repeat
wage NN wage arg1 OK
to TO to arg1 OK
s- XX ^ ^ repeat
stay VB stay arg1 OK
where WRB where arg2 OK
it PRP it arg1 OK
is VBZ is arg3 OK
because ADVP-LOC- PRD-1 because ^ OK
you IN you arg0 OK
do PRP do ^ OK
n't VBP n't ^ OK
want RB want predicate OK
to VB to arg1 OK
have TO have arg1 OK
to VB to arg1 OK
pay TO pay arg1 OK
people VB people arg2 OK
any NNS any arg1 OK
more DT more arg1 OK
than JJR than arg1 OK
you IN you arg0 OK
already PRP already arg1 OK
are RB are arg1 OK
paying VBP paying arg1 OK
them VBG them arg2 OK

but CC but ^ OK
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you arg1 OK
're VBP 're predicate OK
someone NN someone arg0 OK
who WP who arg2 OK
's BES 's arg2 OK
working VBG working arg2 OK
for IN for arg3 OK
minimum JJ minimum arg3 OK
wage NN wage arg3 OK
or CC or ^ OK
someone NN someone arg0 OK
you PRP you arg1 OK
're VBP 're predicate OK
dependent JJ dependent arg2 OK
on IN on arg2 OK
is NP-2 is ^ OK
working VBZ working predicate OK
for VBG for arg3 OK
minimum IN minimum arg3 OK
wage JJ wage arg3 OK
then NN then ^ OK
you RB you arg0 OK
would PRP would ^ OK
want MD want predicate OK
the VB the arg1 OK
minimum DT minimum arg1 OK
wage JJ wage arg1 OK
to NN to arg1 OK
go TO go arg1 OK
up VB up arg1 OK

but CC but ^ OK
then RB then ^ OK
in IN in ^ OK
your PRP your ^ OK
case NN case ^ OK
when WRB when ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
working VBG working predicate OK
as IN as arg1 OK
a DT ^ ^ repeat
a DT a arg1 OK
nur- NN ^ ^ repeat
nursing NN nursing arg1 OK
assistant NN assistant arg1 OK
or CC or arg1 OK
helping VBG helping arg1 OK
someone NN someone arg2 OK
with IN with arg1 OK
health NN health arg1 OK
care NN care arg1 OK
you ADVP-TMP- 1 you arg0 OK
're PRP 're ^ OK
making VBP making predicate OK
nine VBG nine arg1 OK
dollars CD dollars arg1 OK
an NNS an arg1 OK
hour DT hour arg1 OK

do VBP do arg1 OK
you PRP you arg0 OK
want VB want predicate OK
to TO to arg1 OK
work VB work arg1 OK
hard RB as ^ false_start
hard RB hard arg1 OK
as IN as arg1 OK
a- XX a arg0 false_start
in IN ^ ^ repeat
nursing NN nurse arg0 false_start
who WP who arg0 OK
makes VBZ makes arg1 OK
nine CD nine arg1 OK
dollars NNS dollars arg1 OK
an DT an arg1 OK
hour NN hour arg1 OK

so UH ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
just RB ^ ^ repeat
basically RB basically ^ OK
living VBG living predicate OK
on IN on arg2 OK
the DT the arg2 OK
money NN money arg1 OK
they PRP they arg0 OK
made VBD made arg2 OK
over IN over arg2 OK
the DT the arg2 OK
summer NN summer arg2 OK

but CC but ^ OK
they PRP ^ ^ repeat
also RB ^ ^ repeat
they PRP they arg0 OK
ge- VBP ^ ^ repeat
get VBP get predicate OK
free JJ free arg1 OK
rent NN rent arg1 OK
up IN up argM_loc OK
here RB here argM_loc OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg1 OK
go VBP go predicate OK
to IN to arg4 OK
the DT the arg4 OK
western NNP western arg4 OK
unions NNPS unions arg4 OK
and CC and arg4 OK
those DT those arg4 OK
money NN money arg4 OK
grams NNS grams arg4 OK

they PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know predicate OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
how WRB how arg1 OK
the DT the arg0 OK
program NN program arg0 OK
works VBZ works arg1 OK
exactly RB exactly arg1 OK

but CC but ^ OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
legal JJ legal arg2 OK

but CC but ^ OK
i PRP ^ ^ false_start
just RB ^ ^ false_start
as IN as ^ OK
i PRP i ^ OK
was VBD was ^ OK
walking VBG walking ^ OK
around IN around ^ OK
the DT the ^ OK
airport NN airport ^ OK
i PRP i ^ OK
was VBD was ^ OK
thinking VBG thinking ^ OK
there EX there ^ OK
are VBP are ^ OK
so RB so ^ OK
many JJ many ^ OK
ways NNS ways ^ OK
that WDT that ^ OK
somebody NN somebody ^ OK
could MD could ^ OK
get VB get ^ OK
something NN something ^ OK
on IN on ^ OK
board NNP board ^ OK
an DT an ^ OK
airplane NN airplane ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
the DT ^ ^ repeat
the DT ^ ^ false_start
food NN ^ ^ false_start
service NN ^ ^ false_start
people NNS ^ ^ false_start
and CC ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK
they PRP they ^ OK
check VBP check ^ OK
with IN with ^ OK
food NN food ^ OK
service NN service ^ OK

well UH ^ ^ false_start
it PRP it ^ OK
seems VBZ seems ^ OK
as IN as ^ OK
if IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
they PRP they ^ OK
're VBP 're ^ OK
doing VBG doing ^ OK
more JJR more ^ OK
training NN training ^ OK
they PRP so ^ false_start
they PRP they ^ OK
must MD must ^ OK
be VB be ^ OK
paying VBG paying ^ OK
more JJR more ^ OK

so UH ^ ^ false_start
have VBP have ^ OK
you PRP you ^ OK
ever RB ever ^ OK
been VBN been ^ OK
frisked VBN frisked ^ OK
or NP-1 ^ ^ repeat
or CC or ^ OK
told CC told ^ OK
to VBD to ^ OK
undo TO undo ^ OK
your VB your ^ OK
luggage PRP luggage ^ OK
or NN or ^ OK
anything CC anything ^ OK

i PRP i ^ OK
think VBP think ^ OK
i PRP i ^ OK
've VBP 've ^ OK
only RB only ^ OK
been VBN been ^ OK
frisked VBN frisked ^ OK
once RB once ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
run VBP run ^ OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a ^ OK
reader NN reader ^ OK
of IN of ^ OK
some DT some ^ OK
sort NN ^ ^ repeat
sort NN sort ^ OK
of IN ^ ^ repeat
over IN over ^ OK
you PRP you ^ OK

looking VBG looking argM_cause false_start
around RB around argM_cause false_start
at IN ^ ^ repeat
at IN at argM_cause false_start
the DT the argM_cause false_start
passengers NNS passengers argM_cause false_start
well UH ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
wondered VBN wondered predicate OK
which WDT which arg1 OK
of IN of arg1 OK
us PRP us arg1 OK
they PRP they arg0 OK
're VBP 're arg1 OK
trained VBN trained arg1 OK
to TO to arg1 OK
to TO _VERB_ arg1 false_start

i- XX ^ ^ repeat
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
they PRP they ^ OK
must MD must ^ OK
watch VB watch ^ OK
videos NNS videos ^ OK
of IN of ^ OK
passengers NNS passengers ^ OK

and CC ^ ^ false_start
somebody NN somebody ^ OK
says VBZ says ^ OK
now UH ^ ^ filler
see VB see ^ OK
that DT that ^ OK
person NN person ^ OK

i PRP i ^ OK
've VBP ^ ^ repeat
um UH ^ ^ filler
have VBP have ^ OK
n't RB n't ^ OK
had VBN had ^ OK
to TO to ^ OK
ta- VB ^ ^ false_start
open VB open ^ OK
it PRP it ^ OK
up RP up ^ OK
and CC and ^ OK
turn VBP turn ^ OK
it PRP it ^ OK
on RP on ^ OK
and CC and ^ OK
find VB find ^ OK
files NNS files ^ OK
or CC or ^ OK
anything NN anything ^ OK

or CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
being VBG being ^ OK
on IN on ^ OK
a DT a ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
uh UH ^ ^ filler
faraway JJ faraway ^ OK
um UH ^ ^ filler
um UH ^ ^ filler
what UH ^ ^ false_start
tropical JJ tropical ^ OK
island NN island ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
it PRP it ^ OK
says VBZ says ^ OK

i PRP ^ ^ false_start
guess VBP ^ ^ false_start
it PRP it ^ OK
says VBZ says ^ OK
ignore VB ignore ^ OK
what UH ^ ^ false_start
all DT all ^ OK
finances NNS finances ^ OK
and CC and ^ OK
stuff NN stuff ^ OK

but CC ^ ^ repeat
but CC but ^ OK
the DT the ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
i PRP i ^ OK
think VBP think ^ OK
that DT ^ ^ false_start
would MD ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
be VB ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
too RB too ^ OK
long JJ long ^ OK

a DT ^ ^ false_start
peace NN peace ^ OK
of IN of ^ OK
mind NN mind ^ OK
would MD would ^ OK
be VB be ^ OK
one CD one ^ OK
of IN of ^ OK
the DT the ^ OK
things NNS things ^ OK

you PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP ^ ^ false_start
'd MD ^ ^ false_start
pick VB ^ ^ false_start
what WP what ^ OK
do VBP do ^ OK
you PRP you ^ OK
like VB like ^ OK
about IN about ^ OK
los NNP los ^ OK
angeles NNP angeles ^ OK
so RB so ^ OK
much RB much ^ OK
you PRP you ^ OK
think VBP think ^ OK

i PRP ^ ^ repeat
me PRP me ^ OK
too RB too ^ OK
also RB also ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
the DT ^ ^ repeat
a DT a ^ OK
nice JJ nice ^ OK
little JJ little ^ OK
getaway NN getaway ^ OK
for IN for ^ OK
a DT a ^ OK
vacation NN vacation ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
everybody NN everybody ^ OK
likes VBZ likes ^ OK
to TO to ^ OK
get VB get ^ OK
away RB away ^ OK
every DT every ^ OK
now RB now ^ OK
and CC and ^ OK
then RB then ^ OK

well UH ^ ^ false_start
i PRP i ^ OK
i PRP have ^ false_start
never RB never ^ OK
been VBN been ^ OK
to IN to ^ OK
los NNP los ^ OK
angeles NNP angeles ^ OK
before RB before ^ OK

so RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
too RB too ^ OK
much JJ much ^ OK
about IN about ^ OK
that DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that ^ OK
place NN place ^ OK

because IN because ^ OK
see UH ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
n- XX n- ^ OK

but CC but ^ OK
this DT this ^ OK
bora NNP bora ^ OK
bora NNP bora ^ OK
really RB really ^ OK
got VBD got ^ OK
me PRP me ^ OK
too RB too ^ OK

i PRP i ^ OK
think VBP think ^ OK
i PRP i ^ OK
would MD would ^ OK
like VB like ^ OK
to TO to ^ OK
find VB find ^ OK
little RB little ^ OK
more JJR more ^ OK
information NN information ^ OK
on IN ^ ^ repeat
about IN about ^ OK
that DT that ^ OK
place NN place ^ OK
there RB there ^ OK

i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
that DT ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
just RB just ^ OK
too RB too ^ OK
much JJ much ^ OK

you PRP you ^ OK
just RB just ^ OK
want VBP want ^ OK
to TO to ^ OK
be VB be ^ OK
somewhere NN somewhere ^ OK
where WRB where ^ OK
you PRP ^ ^ repeat
if IN ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
going VBG ^ ^ repeat
going VBG going ^ OK
to TO ^ ^ repeat
to TO to ^ OK
vacation VB vacation ^ OK
or ADVP-DIR- 4 or ^ OK
any CC any ^ OK
other DT other ^ OK
place JJ place ^ OK
that NN that ^ OK
you WRB you ^ OK
want PRP want ^ OK
to VBP to ^ OK
go TO go ^ OK

so RB ^ ^ false_start
you PRP you ^ OK
can MD can ^ OK
just RB just ^ OK
relax VB relax ^ OK
and CC and ^ OK
just RB just ^ OK
sit VB sit ^ OK
back RB back ^ OK
and CC and ^ OK
observe VB observe ^ OK
and CC and ^ OK
check VB check ^ OK
the DT the ^ OK
scenery NN scenery ^ OK
out RP out ^ OK

well UH ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
they PRP they arg0 OK
asked VBD asked predicate OK
um UH ^ ^ filler
whether IN whether arg1 OK
we PRP we arg0 OK
think VBP think arg1 OK
most JJS most arg0 OK
people NNS people arg0 OK
would MD would arg1 OK
panic VB panic arg1 OK
in IN in argM_loc OK
a DT a argM_loc OK
terrorist JJ terrorist argM_loc OK
situation NN situation argM_loc OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
like IN ^ ^ filler
i- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ false_start
have VBP ^ ^ false_start
something NN something arg1 OK
really RB ^ ^ false_start
horrific JJ horrific arg1 OK
happen VB happens predicate false_start

but CC ^ ^ false_start
most JJS most arg0 OK
people NNS people arg0 OK
in IN in argM_loc OK
the DT the argM_loc OK
rest NN rest argM_loc OK
of IN of argM_loc OK
the DT the argM_loc OK
country NN country argM_loc OK
do VBP do ^ OK
n't RB n't argM_neg OK
feel VB feel predicate OK
like IN like arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
in IN in arg2 OK
a DT a arg2 OK
target NN target arg2 OK
area NN area arg2 OK
exactly RB ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
nobody NN nobody arg0 OK
's BES 's ^ OK
like UH ^ ^ filler
offering VBG offering predicate OK
counseling NN counseling arg1 OK
to IN to ^ OK
everybody NN everybody arg3 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
like IN ^ ^ filler
you PRP you arg1 OK
do VBP do ^ OK
n't RB n't argM_neg OK
really RB ^ ^ false_start
know VB know predicate OK
of IN of arg2 OK
what WP what arg2 OK
to TO to arg1 OK
be VB be arg1 OK
scared JJ scared arg1 OK

although IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
was VBD ^ ^ false_start
actually RB ^ ^ false_start
when WRB when argM_tmp OK
the DT the argM_tmp OK
blackout NN blackout argM_tmp OK
happened VBD happened argM_tmp OK
you ADVP-TMP- 1 ^ ^ filler
know PRP ^ ^ filler
people VBP ^ ^ false_start
were NNS ^ ^ false_start
re- VBD ^ ^ false_start
you XX ^ ^ filler
know PRP ^ ^ filler
there VBP ^ ^ repeat
there VBD there ^ OK
was EX ^ ^ repeat
was EX was predicate OK
no VBD no arg1 OK
rioting DT rioting arg1 OK

and CC ^ arg1 false_start
at RB at argM_tmp OK
least RB least argM_tmp OK
in IN in argM_tmp OK
the DT the argM_tmp OK
beginning NN beginning argM_tmp OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
we PRP we arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
really RB ^ ^ false_start
any DT ^ ^ false_start
way NN ^ ^ false_start
of IN ^ ^ false_start
knowing VBG know predicate false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
whether IN whether arg1 OK
reason NN the ^ false_start
reason NN reason arg1 false_start
for IN for arg1 false_start
the DT the arg1 false_start
there EX ^ ^ false_start
blackout NN ^ arg1 false_start
to TO ^ ^ false_start
happen VB blackout ^ false_start
was VBD was arg1 false_start
a DT ^ ^ false_start
some DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
non-innocent JJ innocent arg2 false_start

i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
think VB think predicate OK
about IN about arg1 OK
um UH ^ ^ filler
airport NN airport arg1 OK
surveillance NN surveillance arg1 OK

i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
feel VBP ^ ^ false_start
like IN ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
airport NNP airport arg0 OK
security NNP security arg0 OK
it PRP ^ ^ false_start
actually RB ^ ^ false_start
worked VBD worked predicate OK
i PRP i arg1 OK
would MD would ^ OK
n't RB n't argM_neg OK
mind VB mind predicate OK
being VBG being arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
held VBN held arg1 OK
up RP up argM_neg OK
by IN ^ ^ false_start
and CC ^ ^ false_start
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
thing NN ^ ^ false_start

i PRP ^ ^ false_start
feel VBP ^ ^ false_start
like IN ^ ^ false_start
what WP what arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
doing VBG doing arg1 OK
is NP-1 ^ ^ repeat
is VBZ is predicate OK
really VBZ really arg2 OK
ineffective RB ineffective arg2 OK

so UH ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
scary JJ scary arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
especially RB ^ ^ false_start
you PRP ^ ^ false_start
have VBP ^ ^ false_start
um UH ^ ^ filler
there EX there ^ OK
was VBD was predicate OK
a DT a arg1 OK
story NN story arg1 OK
in IN in arg1 OK
the DT the arg1 OK
news NN news arg1 OK
recently RB recently argM_tmp OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
like UH ^ ^ filler
i PRP i arg0 OK
remember VBP ^ ^ repeat
remember VBP remember predicate OK
reading VBG reading arg1 OK
stories NNS ^ ^ false_start
about IN about arg1 OK
people NNS ^ ^ repeat
who WP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
uh UH ^ ^ filler
people NNS people arg0 OK
who WP who arg0 OK
had VBD had arg1 OK
a DT a arg1 OK
gun NN gun arg1 OK
on IN on arg1 OK
them PRP them arg1 OK
because IN because ^ OK
they PRP they arg1 OK
were VBD were predicate OK
a DT a arg2 OK
security NN security arg2 OK
guard NN guard arg2 OK
or CC or arg2 OK
a DT a arg2 OK
hunter NN hunter arg2 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

but CC ^ ^ OK
they PRP ^ ^ repeat
probably RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
not RB not argM_neg OK
really RB ^ ^ false_start
helping VBG helping ^ OK
things NNS ^ predicate false_start

which WDT ^ ^ OK
which WDT which ^ OK
is VBZ is ^ OK
good JJ good ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
have VB have predicate OK
those DT ^ ^ false_start
sort NN ^ ^ false_start
of IN ^ ^ false_start
plain JJ ^ arg1 false_start
clothes NNS plain-clothes ^ false_start
people NNS people arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
plane NN plane argM_loc OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
funny JJ funny arg2 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ repeat
we PRP we arg0 OK
've VBP 've ^ OK
always RB always argM_tmp OK
had VBN had predicate OK
them PRP them arg2 OK

but CC ^ ^ false_start
there EX there ^ OK
is VBZ were predicate false_start
just RB ^ ^ false_start
so RB so arg1 OK
few JJ few arg1 OK
of IN of arg1 OK
them PRP them arg1 OK

so RB ^ arg1 false_start
chances NNS chances arg1 OK
were VBD were predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX there arg2 OK
would MD would arg2 OK
never RB never argM_tmp OK
be VB ^ ^ repeat
actually RB ^ ^ false_start
be VB be arg2 OK
on IN _NOUN_ ^ false_start
on IN on arg2 OK
your PRP your arg2 OK
plane NN plane arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
so RB so ^ OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX there ^ OK
w- XX ^ ^ repeat
were VBD were predicate OK
n't RB n't argM_neg OK
very RB very arg1 OK
many JJ many arg1 OK
of IN of arg1 OK
them PRP them arg1 OK

but CC ^ ^ false_start
the DT the arg1 OK
idea NN idea arg1 OK
was VBD was predicate OK
that IN that arg2 OK
everybody NN everybody arg0 OK
would MD would arg2 OK
think VB think arg2 OK
that IN that arg1 OK
they PRP ^ ^ repeat
there EX there arg1 OK
might MD ^ ^ repeat
might MD might arg1 OK
be VB be arg1 OK
one CD one arg1 OK

i PRP i arg0 OK
kind RB kind ^ OK
of RB of ^ OK
seen VBN see predicate false_start
it PRP it arg1 OK
too RB too arg1 OK

c- XX ^ ^ repeat
my PRP my arg0 OK
husband NN husband arg0 OK
gets VBZ gets predicate OK
those DT ^ ^ repeat
those DT those arg1 OK
computers NNS computers arg1 OK

you PRP you arg0 OK
heard VBD heard predicate OK
about IN about arg1 OK
that DT that arg1 OK

because IN ^ ^ false_start
i PRP ^ ^ false_start
i PRP ^ ^ repeat
like RP ^ ^ filler
i PRP i arg0 OK
was VBD ^ ^ false_start
thinking VBG ^ ^ false_start
was VBD ^ ^ repeat
wonder VBP wonder predicate OK
how WRB how arg2 OK
would MD would arg1 OK
that RB that arg1 OK
be VB be arg1 OK

plus CC plus ^ OK
and CC ^ ^ false_start
i PRP ^ ^ false_start
mea- VB ^ ^ false_start
i PRP i arg0 OK
like UH ^ ^ repeat
like VB like predicate OK
the DT the arg1 OK
computer NN computer arg1 OK
because IN because ^ OK
i PRP ^ ^ repeat
was VBD ^ ^ false_start
saying VBG ^ ^ false_start
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
typewriter NN typewriter arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
i PRP i arg1 OK
was VBD was ^ OK
trying VBG trying predicate OK
to TO to arg1 OK
get VB get arg1 OK
rid VBN rid arg2 OK
of IN of arg2 OK
it PRP it arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
thought VBD thought predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
have VBP have arg1 OK
a DT a arg0 OK
daughter NN daughter arg0 OK
here SBAR-1 here arg1 OK
who RB who arg1 OK
might WP might arg1 OK
need MD ^ ^ repeat
need DT need arg1 OK
a VBP a arg1 false_start
typewriters VB typewriter arg1 false_start
eventually NNS eventually arg1 OK
just RB just arg1 OK
to RB to arg1 OK
start TO start arg1 OK
out VB out arg1 OK
on RP on arg1 OK

i PRP i arg0 OK
was VBD was ^ OK
thinking VBG thinking predicate OK
th- DT ^ ^ repeat
that DT that arg1 OK
would MD would arg1 OK
pretty RB be predicate false_start
pretty RB pretty arg2 OK
interesting JJ interesting arg2 OK
because IN because ^ OK
like IN ^ ^ filler
me PRP ^ ^ false_start
myself PRP ^ ^ false_start
i PRP i arg0 OK
i PRP ^ ^ repeat
would MD would ^ OK
'd MD ^ ^ repeat
get VB get ^ OK
get VB ^ ^ repeat
tired JJ tired ^ OK
tired JJ ^ predicate repeat
of IN of arg0 OK
of IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
the DT the arg0 OK
wires NNS wires arg0 OK
and CC and arg0 OK
plugging VBG plugging arg0 OK
things NNS things arg1 OK
in RB in arg0 OK

times NNS times ^ OK
where WRB where ^ OK
you PRP you ^ OK
get VBP get ^ OK
the DT the ^ OK
wires NNS wires ^ OK
to IN ^ ^ repeat
to IN to ^ OK
the DT ^ ^ repeat
the DT the ^ OK
cigarette NN cigarette ^ OK
lighter NN lighter ^ OK
plug ADVP-TMP- 1 plug ^ OK
up VBP up ^ OK
things RP things ^ OK

but CC ^ arg1 false_start
that DT ^ ^ repeat
that DT ^ ^ false_start
w- XX ^ ^ false_start
i PRP i arg0 OK
wonder VBP wonder predicate OK
if IN if arg1 OK
that DT that arg0 OK
going VBG is ^ false_start
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
taking VBG taking arg1 OK
over RP over arg1 OK
the DT the arg1 OK
regular JJ regular arg1 OK
ones NNS ones arg1 OK
eventually RB eventually arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
get VBP ^ ^ repeat
a DT ^ ^ repeat
lot NN ^ ^ repeat
of IN ^ ^ repeat
s- XX ^ ^ false_start
e- XX ^ ^ repeat
i PRP i arg0 OK
get VBP get predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
like UH ^ ^ filler
educational JJ educational arg1 OK
stuff NN stuff arg1 OK
for IN for arg1 OK
the DT the arg1 OK
kids NNS kids arg1 OK
off IN off argM_loc OK
of IN of argM_loc OK
there RB there argM_loc OK
too RB too argM_loc OK

like IN like ^ OK
their PRP their ^ OK
basic JJ basic ^ OK
a. NN a. ^ OK
b. NN b. ^ OK
c.s NNS c.s ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

i PRP i arg0 OK
'll MD 'll ^ OK
print VB print predicate OK
off IN from argM_loc false_start
the DT the argM_loc OK
computer NN computer argM_loc OK
too RB too ^ OK

because UNK ^ ^ false_start
i UNK i ^ OK
do UNK do ^ OK
n't UNK n't ^ OK
get UNK get ^ OK
anything UNK anything ^ OK
else UNK else ^ OK
except UNK except ^ OK
for UNK for ^ OK

you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
to TO to ^ OK
go VB go predicate OK
to IN to arg4 OK
library NN library arg4 OK
to TO to ^ OK
look VBP ^ ^ repeat
at IN ^ ^ false_start
a DT ^ ^ false_start
look VB look predicate OK
to TO to ^ OK
see VB see predicate OK
if IN if arg1 OK
the DT the arg1 OK
book NN book arg1 OK
was VBD was arg1 OK
there RB there arg2 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
catch VB catch predicate OK
too RB too arg1 OK
many JJ many arg1 OK
vickys NNPS vickys arg1 OK
up RP ^ ^ false_start

i PRP i arg1 OK
'm VBP 'm predicate OK
way RB way arg2 OK
on IN ^ ^ repeat
the DT ^ ^ repeat
kind RB ^ ^ false_start
of RB ^ ^ false_start
almo- RB ^ ^ false_start
on IN on arg2 OK
the DT the arg2 OK
other JJ other arg2 OK
side NN side arg2 OK
of IN of arg2 OK
the DT the arg2 OK
map NN map arg2 OK

but CC ^ ^ false_start
her- XX ^ ^ false_start
mm UH ^ ^ filler
mm UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
gets VBZ ^ ^ false_start
of- RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
off RB off ^ OK
and CC and ^ OK
on RB on ^ OK

which WDT ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
ready JJ ready arg2 OK
for IN for arg2 OK
the DT the arg2 OK
chilly JJ chilly arg2 OK
weather NN weather arg2 OK
myself PRP myself arg2 OK

i PRP ^ ^ repeat
i PRP i ^ OK
jus- RB ^ ^ false_start
w- VBD just ^ false_start

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
buy VBP ^ ^ repeat
buy VBP buy predicate OK
stuff NN stuff arg1 OK
at IN ^ ^ false_start
like UH ^ ^ filler
anywhere RB anywhere argM_loc OK
like IN like argM_loc OK
virgin NNP virgin argM_loc OK
or CC or argM_loc OK
like UH ^ ^ filler
e- XX ^ ^ false_start
smaller JJR smaller argM_loc OK
stores NNS stores argM_loc OK
too RB too ^ OK

i PRP i ^ OK
uh UH ^ ^ filler

i PRP i arg0 OK
used VBD used ^ OK
to TO to ^ OK
play VB play predicate OK
uh UH ^ ^ filler
piano NN piano arg1 OK
as NAC-2 ^ ^ false_start
well RB ^ ^ false_start
and RB and arg1 OK
a CC ^ ^ false_start
little DT some arg1 false_start
guitar JJ guitar arg1 OK

or CC or ^ OK
just RB just ^ OK
for IN for ^ OK

um UH ^ ^ filler
uh UH ^ ^ filler
what WP ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
y- PRP ^ ^ repeat
so UH ^ ^ filler
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
like VB like predicate OK
britney NNP britney arg1 OK
spears NNP spears arg1 OK

what WDT ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
what WDT what arg1 OK
kind NN ^ ^ repeat
kind NN kind arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
music NN music arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
dislike VB dislike predicate OK

i- XX ^ ^ false_start
uh UH ^ ^ filler
why WRB why ^ OK
do VBP do predicate OK
n't RB n't ^ OK
you PRP you arg0 OK

so UH ^ ^ filler
you PRP ^ ^ false_start
just RB ^ ^ false_start
you PRP you arg0 OK
buy VBP buy predicate OK
everything NN everything arg1 OK

i PRP i arg0 OK
and CC ^ ^ false_start
then RB then ^ false_start
remembered VBD remembered predicate OK
oh UH oh arg1 OK
i PRP i arg0 OK
better RB better arg1 OK
do VBP do arg1 OK
that DT that arg1 OK
so IN so arg1 OK
i PRP i arg0 OK
can MD can arg1 OK
get VB get arg1 OK
my PRP my arg1 OK
check NN check arg1 OK

um UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
do VBP do ^ OK
you PRP you arg0 OK
have VB have predicate OK
any DT any arg1 OK
questions NNS questions arg1 OK

um UH ^ ^ filler
i PRP ^ ^ filler
think VBP ^ ^ filler
um UH ^ ^ filler
i PRP ^ ^ false_start
used VBD ^ ^ false_start
to TO ^ ^ false_start
s- RB ^ ^ false_start
i PRP i arg0 OK
actually RB actually ^ false_start
still RB still ^ OK
do VBP ^ ^ false_start
like UH ^ ^ filler
write VB write predicate OK
songs NNS songs arg1 OK
myself PRP myself ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK

i PRP ^ arg1 filler
think VBP ^ ^ filler
it PRP ^ ^ false_start
of IN ^ ^ false_start
like UH ^ ^ false_start
music NN music arg0 OK
i PRP i arg0 OK
used VBD used arg0 OK
to TO to arg0 OK
l- VBD ^ ^ repeat
listen VB listen arg0 OK
to IN to arg0 OK
when NP-1 when arg0 OK
i WRB i arg0 OK
was PRP was arg0 OK
a VBD a arg0 OK
kid DT kid arg0 OK
like UH ^ ^ filler
uh UH ^ ^ filler
kind RB ^ ^ filler
of RB ^ ^ filler
stirs VBZ stirs predicate false_start
my PRP my ^ false_start
memories NNS memories ^ false_start
a DT a ^ false_start
lot NN lot ^ false_start

or CC ^ ^ filler
like UH ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
kind RB ^ ^ filler
of RB ^ ^ filler
a DT a arg2 OK
tool NN tool arg2 OK
for IN for arg2 OK
me PRP me arg2 OK
or CC ^ ^ false_start
i- IN ^ ^ repeat
in IN in arg2 OK
that DT that arg2 OK
way NN way arg2 OK

where WRB ^ ^ false_start
i PRP i arg0 OK
like VBP like predicate OK
to TO to arg1 OK
listen VB listen arg1 OK
to IN to arg1 OK
music NN music arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
used VBD used arg1 OK
to TO to arg1 OK
listen VB listen arg1 OK
to IN to arg1 OK
a NP-3 a argM_tmp OK
long DT long argM_tmp OK
time JJ time argM_tmp OK
ago NN ago argM_tmp OK

how WRB ^ ^ filler
how WRB how ^ OK
has VBZ has ^ OK
it PRP it arg0 OK
touched VBN touched predicate OK
you PRP you arg1 OK

i PRP i arg0 OK
like RP ^ ^ false_start
'm VBP said predicate false_start
hm UH hm arg1 OK

heck UH heck ^ OK
yeah UH yeah ^ OK

it PRP it arg1 OK
's BES 's predicate OK
also RB also arg2 OK
one CD one arg2 OK
of IN of arg2 OK
the DT the arg2 OK
mo- RBS ^ ^ repeat
most RBS most arg2 OK
hectic JJ hectic arg2 OK
times NNS times arg2 OK
though RB though ^ OK

well UH ^ ^ filler
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you arg0 OK
get VBP ^ ^ repeat
get VBP ^ ^ repeat
get VBP get predicate OK
all DT ^ ^ repeat
everybody NN everybody arg1 OK
coming VBG coming arg1 OK
in RB in arg4 OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
like IN ^ ^ false_start
you PRP you arg0 OK
're VBP 're ^ OK
like RP saying predicate false_start
well UH ^ ^ filler
this DT ^ ^ false_start
is VBZ ^ ^ false_start
my PRP ^ ^ false_start
place NN ^ ^ false_start
to TO ^ ^ false_start
this DT this arg1 OK
my PRP is predicate false_start
my PRP my arg2 OK
home NN home arg2 OK
town NN town arg2 OK

we PRP ^ ^ repeat
we PRP we arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
actually RB ^ ^ repeat
only RB only arg2 OK
forty CD forty arg2 OK
minutes NNS minutes arg2 OK
from IN from arg2 OK
m- XX ^ ^ false_start
grand NNP grand arg2 OK
central NNP central arg2 OK
station NNP station arg2 OK

because IN ^ ^ false_start
we PRP we arg0 OK
have VB have predicate OK
this DT ^ ^ repeat
this DT this arg1 OK
bank NN bank arg1 OK
move VB move arg1 OK
in RB in arg2 OK

like UH ^ ^ filler
new NNP new arg0 OK
york NNP york arg0 OK
at RB at ^ OK
least RB least ^ OK
has VBZ ^ ^ repeat
the DT ^ ^ repeat
has VBZ has predicate OK
the DT the arg1 OK
travel NN travel arg1 OK
routes NNS routes arg1 OK
that WDT that arg1 OK
you PRP you arg0 OK
can MD can arg1 OK
take VB take arg1 OK
even RB even arg1 OK
though IN though arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
jam NN jam arg2 OK
packed VBN packed arg2 OK

you PRP you arg0 OK
're VBP 're ^ OK
like RP saying predicate false_start
come VB come arg1 OK
on RP on arg1 OK

we PRP ^ ^ false_start
had VBD ^ ^ false_start
we PRP we arg0 OK
're VBP 're ^ OK
supposed VBN supposed predicate OK
to TO to arg2 OK
talk VB talk arg2 OK
about IN about arg1 OK
what WDT what arg1 OK
holiday NN holiday arg1 OK
we PRP we arg0 OK
would MD would arg1 OK
create VB create arg1 OK

you PRP you arg0 OK
're VBP 're ^ OK
like RP saying predicate false_start
oh UH ^ ^ filler
that DT that arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
guess NN guess arg2 OK

i PRP i ^ OK
uh UH ^ ^ filler
eh UH ^ ^ filler
see VB see ^ OK
the DT ^ ^ repeat
the DT the ^ OK
dissolution NN dissolution ^ OK
of IN of ^ OK
marriages NNS marriages ^ OK
causing VBG causing ^ OK
children NNS children ^ OK
to TO to ^ OK
have VB have ^ OK
problems NNS problems ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
see VBP see ^ OK
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
single JJ single ^ OK
parent NN parent ^ OK
families NNS families ^ OK

and CC ^ ^ false_start
all DT all ^ OK
of IN of ^ OK
this DT this ^ OK
has VBZ has ^ OK
such PDT such ^ OK
a DT ^ ^ repeat
a DT a ^ OK
negative JJ negative ^ OK
effect NN effect ^ OK
on IN on ^ OK
children NNS children ^ OK
that IN that ^ OK
i PRP i ^ OK
've VBP 've ^ OK
also RB also ^ OK
taken VBN taken ^ OK
a DT a ^ OK
job NN job ^ OK
after IN after ^ OK
school NN school ^ OK
these DT these ^ OK
days NNS days ^ OK
as IN as ^ OK
a DT a ^ OK
coordinator NN coordinator ^ OK
for IN for ^ OK
a DT a ^ OK
group NN group ^ OK
of IN of ^ OK
children NNS children ^ OK
who WP who ^ OK
are VBP are ^ OK
at IN at ^ OK
risk NN risk ^ OK
socially RB socially ^ OK
and CC and ^ OK
academically RB academically ^ OK

and CC ^ ^ false_start
what WP what ^ OK
we PRP we ^ OK
're VBP 're ^ OK
trying VBG trying ^ OK
to TO to ^ OK
do VB do ^ OK
with IN with ^ OK
them PRP them ^ OK
is VBZ is ^ OK
instill VB instill ^ OK
some DT some ^ OK
moral JJ moral ^ OK
values NNS values ^ OK
with IN with ^ OK
them PRP them ^ OK
also RB also ^ OK

but CC but ^ OK
unfortunately RB unfortunately ^ OK
if IN if ^ OK
these DT these ^ OK
children NNS children ^ OK
are VBP are ^ OK
n't RB n't ^ OK
raised VBN raised ^ OK
in IN in ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
f- NN ^ ^ repeat
family NN family ^ OK
homes NNS homes ^ OK
to TO to ^ OK
begin VB begin ^ OK
with RB with ^ OK
it PRP it ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
tough JJ tough ^ OK
to TO to ^ OK
do VB do ^ OK
when NP when ^ OK
you WRB you ^ OK
just PRP just ^ OK
have RB have ^ OK
them VBP them ^ OK
during PRP during ^ OK
the IN the ^ OK
day DT day ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
parents NNS parents ^ OK
need VBP need ^ OK
help NN help ^ OK
probably RB probably ^ OK
as RB as ^ OK
much RB much ^ OK
or CC or ^ OK
more RBR more ^ OK
as IN as ^ OK
the DT the ^ OK
kids NNS kids ^ OK
do VBP do ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
were VBD ^ ^ false_start
i PRP i ^ OK
went VBD went ^ OK
back RB back ^ OK
to IN to ^ OK
work NN work ^ OK
when WRB when ^ OK
my PRP my ^ OK
daughter NN daughter ^ OK
was VBD was ^ OK
um UH ^ ^ filler
three CD three ^ OK
and CC and ^ OK
a DT a ^ OK
half NN half ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
take VB take ^ OK
on RP on ^ OK
any DT any ^ OK
extra JJ extra ^ OK
responsibilitie s NNS responsibili ties ^ OK
in IN in ^ OK
the DT the ^ OK
least JJS least ^ OK

we PRP ^ ^ false_start
were VBD ^ ^ false_start
home RB ^ ^ false_start
my PRP my ^ OK
husband NN husband ^ OK
is VBZ is ^ OK
a DT a ^ OK
principal NN principal ^ OK

and CC ^ ^ false_start
we PRP we ^ OK
were VBD were ^ OK
both RB both ^ OK
off RB off ^ OK
during IN during ^ OK
the DT the ^ OK
summer NN summer ^ OK
as IN as ^ OK
we PRP we ^ OK
still RB still ^ OK
are VBP are ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
just RB ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's SBAR-2 's ^ OK
very BES very ^ OK
important RB important ^ OK
for JJ for ^ OK
kids IN kids ^ OK
to NNS to ^ OK
know TO know ^ OK
that VB that ^ OK
they IN they ^ OK
have PRP have ^ OK
roots VBP roots ^ OK
that NNS that ^ OK
go WDT go ^ OK
back VBP back ^ OK
a RB a ^ OK
long DT long ^ OK
way JJ way ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH so ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
needs VBZ needs ^ OK
to TO to ^ OK
be VB be ^ OK
extended JJ extended ^ OK
families NNS families ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
aunts NNS aunts ^ OK
and CC and ^ OK
uncles NNS uncles ^ OK
and CC and ^ OK
brothers NNS brothers ^ OK
and CC and ^ OK
sisters NNS sisters ^ OK
all DT all ^ OK
need VBP need ^ OK
to TO to ^ OK
keep VB keep ^ OK
in IN in ^ OK
touch NN touch ^ OK

well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
i PRP i arg0 OK
uh UH ^ ^ filler
saw VBD saw predicate OK
shrek NNP shrek arg1 OK
um PRP ^ ^ filler
i UH i arg1 OK
i ADVP-TMP- 1 ^ ^ repeat
was PRP was ^ OK
shocked VBD shocked predicate OK
at VBN at arg2 OK
how IN how arg2 OK
often WRB often arg2 OK
they RB they arg0 OK
um PRP ^ ^ filler
used UH used arg2 OK
the VBD the arg1 OK
term DT term arg1 OK
ass NN ass arg1 OK
for NN for arg2 OK
donkey IN donkey arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
because UH ^ ^ false_start
i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP say predicate false_start
all UH all arg1 OK
right UH right arg1 OK

they PRP they arg0 OK
've VBP have predicate false_start
the DT the arg1 OK
toys NNS toys arg1 OK

they PRP they ^ OK
've VBP 've ^ OK
got VBN got ^ OK

well UH ^ ^ filler
but CC but ^ OK
that DT ^ ^ false_start
's BES ^ ^ false_start
ju- RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
that IN ^ ^ repeat
the DT the arg1 OK
humor NN humor arg1 OK
was VBD was arg1 OK
for IN for arg2 OK
adults NNS adults arg2 OK

a- CC a- ^ OK

i PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg0 OK
friend NN friend arg0 OK
who WP who arg1 OK
had VBD had arg1 OK
a DT a arg1 OK
seven CD seven arg1 OK
year NN year arg1 OK
old NN old arg1 OK

and CC ^ ^ false_start
she PRP she arg0 OK
l VBD ^ ^ repeat
leaned VBD leaned predicate OK
into IN into arg2 OK
him PRP him arg2 OK

and CC ^ ^ false_start
she PRP she arg0 OK
said VBD said predicate OK
you PRP you arg0 OK
know VBP know arg1 OK
ass NN ass arg1 OK
is VBZ is arg1 OK
another DT another arg2 OK
word NN word arg2 OK
for IN for arg2 OK
donkey NN donkey arg2 OK
right UH right arg2 OK

so UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
like UH ^ ^ false_start
and CC ^ ^ repeat
and CC ^ ^ false_start
actually RB actually ^ OK
i PRP i arg1 OK
was VBD was predicate OK
um UH ^ ^ filler
a DT a arg2 OK
little RB little arg2 OK
more RBR more arg2 OK
offended VBN offended arg2 OK
by IN by arg2 OK
it PRP it arg2 OK
than IN than arg2 OK
my PRP ^ ^ repeat
my PRP my arg0 OK
friend NN friend arg0 OK
that WDT that arg2 OK
has VBZ has arg2 OK
the DT the arg1 OK
kids NNS kids arg1 OK

she PRP she arg0 OK
's BES said predicate false_start
like RP ^ ^ filler
i PRP i arg0 OK
really RB really arg1 OK
did VBD did arg1 OK
n't RB n't arg1 OK
think VB think arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
that RB that arg2 OK
big JJ big arg2 OK
of IN of arg2 OK
a DT a arg2 OK
deal NN deal arg2 OK

but CC but ^ OK
i PRP i arg0 OK
just RB just ^ false_start
was VBD ^ ^ false_start
like RP said predicate false_start
i PRP i arg1 OK
'm VBP 'm arg1 OK
kind RB kind arg2 OK
of RB of arg2 OK
offended VBN offended arg2 OK
that IN ^ ^ repeat
that IN that arg1 OK
they PRP they arg0 OK
're VBP 're arg1 OK
pushing VBG pushing arg2 OK
the DT the arg1 OK
envelope NN envelope arg1 OK
in IN in arg1 OK
this DT this arg1 OK
way NN way arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
they PRP they arg0 OK
've VBP 've arg1 OK
kind RB kind arg1 OK
of RB of arg1 OK
mis-marketed VBN mis-marketed arg1 OK
this DT this arg1 OK
movie NN movie arg1 OK
because IN because ^ OK
they PRP they arg0 OK
've VBP 've ^ OK
asked VBN asked predicate OK
these DT these arg2 OK
kids NNS kids arg2 OK
to TO to arg1 OK
come VB come arg1 OK
in RB in arg1 OK
and CC and ^ OK
now RB now ^ OK
they PRP they arg0 OK
're VBP 're ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB kind ^ OK
of RB of ^ OK
throwing VBG throwing predicate OK
this DT this arg1 OK
out RP out arg2 OK
at IN at arg2 OK
them PRP them arg2 OK

it PRP it arg2 OK
was VBD was arg2 OK
n't RB n't arg2 OK
that RB that arg2 OK
big JJ big arg2 OK
of IN of arg2 OK
a DT a arg2 OK
deal NN deal arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
interesting JJ interesting arg2 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
adults NNS adults arg0 OK
designing VBG designing arg1 OK
the DT the arg1 OK
comedy NN comedy arg1 OK

and CC ^ ^ false_start
so RB ^ ^ false_start
uh UH ^ ^ filler
but CC but ^ OK
then RB then ^ OK
there EX ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in ^ OK
tha- DT ^ ^ repeat
those DT those ^ OK
particular JJ particular ^ OK
cases NNS cases ^ OK
if IN if ^ OK
they PRP they arg0 OK
're VBP 're ^ OK
designing VBG designing predicate OK
it PRP it arg1 OK
for IN for arg2 OK
kids NNS kids arg2 OK
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
tough JJ tough arg2 OK
field NN field arg2 OK
because IN because ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
designing VBG designing predicate OK
it PRP it arg1 OK
for IN for arg2 OK
kids NNS kids arg2 OK

but CC but ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
got VBN ^ ^ repeat
to TO ^ ^ repeat
got VBN have predicate false_start
uh UH ^ ^ filler
parents NNS parents arg0 OK
that WDT that arg1 OK
that NP-2 ^ ^ false_start
you PRP you arg0 OK
've VBP 've arg1 OK
are WDT ^ ^ repeat
got VBN got arg1 OK
to TO to arg1 OK
have VB have arg1 OK
willing VBP willing arg1 OK
to JJ to arg1 OK
come TO come arg1 OK
in VB in arg1 OK
and RB and arg1 OK
watch CC watch arg1 OK
it VB it arg1 OK

so UH ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
difference NN difference arg2 OK
in IN ^ ^ repeat
in IN in arg2 OK
whether IN whether arg2 OK
you PRP you arg0 OK
air VBP air arg2 OK
a DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
sitcom NN sitcom arg1 OK
at IN at argM_tmp OK
eight CD eight argM_tmp OK
o'clock NN o'clock argM_tmp OK
in IN in argM_tmp OK
the DT the argM_tmp OK
evening NN evening argM_tmp OK
or CC or arg2 OK
whether IN whether arg2 OK
you PRP you arg0 OK
air VBP air arg2 OK
it PRP it arg1 OK
at IN at argM_tmp OK
nine CD nine argM_tmp OK
or CC or arg2 OK
uh UH ^ ^ filler
whether IN whether arg2 OK
it PRP it arg1 OK
has VBZ has arg2 OK
to TO to arg2 OK
go VB go arg2 OK
to IN to arg4 OK
h. NNP h. arg4 OK
b. NNP b. arg4 OK
o. NNP o. arg4 OK

i PRP i arg0 OK
bet VBP bet predicate OK

they PRP they ^ OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
just RB ^ ^ false_start
saw VBD ^ ^ false_start
on IN ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
forget VBP forget predicate OK
where WRB where arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
going VBG going arg1 OK

but CC but ^ OK
um UH ^ ^ filler
i PRP i arg0 OK
saw VBD saw predicate OK
online JJ online arg1 OK
that IN that arg1 OK
uh UH ^ ^ filler
sex NN ^ ^ false_start
and CC ^ ^ false_start
the DT ^ ^ false_start
city NN ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
're VBP ^ ^ repeat
're VBP 're arg1 OK
going VBG ^ ^ repeat
going VBG going arg1 OK
to TO ^ ^ repeat
to TO to arg1 OK
re-air VB re-air arg1 OK
^ ^ it arg1 OK
on IN ^ ^ repeat
s- XX ^ ^ false_start
in IN in argM_loc OK
more JJR more argM_loc OK
of IN of argM_loc OK
a DT a argM_loc OK
commercial JJ commercial argM_loc OK
broadcast NN broadcast argM_loc OK
area NN area argM_loc OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
sex NN sex arg2 OK
and CC and arg2 OK
the DT the arg2 OK
city NN city arg2 OK
that WDT ^ ^ repeat

uh UH ^ ^ filler
just RB just ^ OK
that IN that ^ OK
they PRP ^ ^ repeat
it PRP it arg1 OK
were VBD ^ ^ repeat
was VBD was ^ OK
going VBG ^ ^ repeat
going VBG going ^ OK
to TO to ^ OK
a- XX ^ ^ repeat
air VB air predicate OK
off IN off argM_loc OK
of IN of argM_loc OK
h. NNP h. argM_loc OK
b. NNP b. argM_loc OK
o. NNP o. argM_loc OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP ^ ^ repeat
guess VBP guess ^ OK
i PRP i ^ OK
feel VBP feel ^ OK
our PRP ^ ^ false_start
problems NNS ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
right RB right ^ OK
now RB now ^ OK
the DT the ^ OK
current JJ current ^ OK
emphasis NN emphasis ^ OK
is VBZ is ^ OK
on IN on ^ OK
iraq NNP iraq ^ OK
but CC but ^ OK
i PRP i ^ OK
feel VBP feel ^ OK
that IN that ^ OK
actually RB actually ^ OK
our PRP our ^ OK
problems NNS problems ^ OK
are VBP are ^ OK
deeper JJR deeper ^ OK
than IN than ^ OK
that DT that ^ OK

that IN that ^ OK
this DT ^ ^ repeat
this DT this ^ OK
is VBZ ^ ^ repeat
just RB ^ ^ repeat
is VBZ is ^ OK
kind RB ^ ^ repeat
kind RB kind ^ OK
of RB ^ ^ repeat
of RB of ^ OK
a DT ^ ^ repeat
a DT a ^ OK
grudge NN grudge ^ OK
match NN match ^ OK
here ADJP-1 here ^ OK
um RB ^ ^ filler
leftover UH leftover ^ OK
from JJ from ^ OK
father IN father ^ OK
bush NNP bush ^ OK

and CC ^ ^ false_start
also RB also ^ OK
that IN that ^ OK
it PRP it ^ OK
's BES 's ^ OK
fueled VBN fueled ^ OK
by IN by ^ OK
oil NN oil ^ OK

um UH ^ ^ filler
i PRP i ^ OK
am VBP am ^ OK
real RB real ^ OK
concerned JJ concerned ^ OK
about IN about ^ OK
the DT the ^ OK
in JJ ^ ^ false_start
equitable JJ inequitable ^ false_start
qual- XX ^ ^ false_start
um UH ^ ^ filler
treatment NN treatment ^ OK
we PRP we ^ OK
give VBP give ^ OK
mainly RB ^ ^ false_start
the DT the ^ false_start
israelis NNPS israelis ^ false_start
people NNS ^ ^ false_start
and CC and ^ false_start
the DT the ^ false_start
palestinians NNPS palestinians ^ false_start
in IN in ^ OK
the DT the ^ OK
mid NNP mid ^ OK
east NNP east ^ OK

we PRP we ^ OK

do VB do ^ OK
whatever WP whatever ^ OK
you PRP you ^ OK
want VBP want ^ OK
with NP-1 with ^ OK
n- IN ^ ^ repeat
no DT no ^ OK
regard DT regard ^ OK
whatsoever NN whatsoever ^ OK
to RB for ^ false_start
the IN the ^ OK
palestinians DT palestinians ^ OK

and CC ^ ^ false_start
considering VBG considering ^ OK
that IN that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
these DT these ^ OK
people NNS people ^ OK
are VBP are ^ OK
essentially RB essentially ^ OK
without IN without ^ OK
a DT a ^ OK
country NN country ^ OK

like IN like ^ OK
i PRP i ^ OK
said VBD said ^ OK
i S i ^ OK
've PRP 've ^ OK
never VBP never ^ OK
done RB done ^ OK
this VBN this ^ OK
before DT before ^ OK

so UH ^ ^ repeat
um UH ^ ^ filler
so UH ^ ^ false_start
got VBN got ^ OK
anymore RB any ^ false_start
anymore RB more ^ false_start
thoughts NNS thoughts ^ OK
on IN on ^ OK
what WP what ^ OK
i PRP i ^ OK
just RB just ^ OK
said VBD said ^ OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB ^ ^ repeat
not RB not ^ OK
real JJ ^ ^ repeat
really RB really ^ OK
good JJ good ^ OK
on IN on ^ OK
the DT the ^ OK
whole JJ whole ^ OK
details NNS details ^ OK
of IN of ^ OK
it PRP it ^ OK

but CC but ^ OK
the DT the ^ OK
way NN way ^ OK
i PRP i ^ OK
understand VBP understand ^ OK
understand VBP it ^ false_start
some ADVP-MNR- 1 some ^ OK
guy DT guy ^ OK
um NN ^ ^ filler
in UH in ^ OK
england IN england ^ OK
great NNP ^ ^ false_start
britain NNP ^ ^ false_start
whatever NNP ^ ^ false_start
in UH in ^ OK
the IN the ^ OK
twenties DT twenties ^ OK
came NNS came ^ OK
up VBD up ^ OK
with RP with ^ OK
this IN this ^ OK
whole DT whole ^ OK
zionist JJ zionist ^ OK
state JJ state ^ OK
idea NN idea ^ OK

so UH ^ ^ false_start
i PRP ^ ^ false_start
just RB ^ ^ false_start
thin- VBP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
hm UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
not RB not ^ OK
like IN like ^ OK
i PRP i ^ OK
think VBP think ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
suicide NN suicide ^ OK
bombing NN bombing ^ OK
is VBZ is ^ OK
a DT a ^ OK
good JJ good ^ OK
thing NN thing ^ OK

but CC but ^ OK
i PRP i ^ OK
can MD can ^ OK
certainly RB certainly ^ OK
understand VB understand ^ OK
why WRB why ^ OK
there EX there ^ OK
are VBP are ^ OK
people NNS people ^ OK
there RB there ^ OK
taking VBG taking ^ OK
those DT those ^ OK
measures NNS measures ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
if IN if ^ OK

well UH ^ ^ false_start
no UH no ^ OK

what WP what ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
saying VBG saying ^ OK
is NP-1 is ^ OK
i VBZ i ^ OK
try PRP try ^ OK
and VBP and ^ OK
imagine CC imagine ^ OK
if VB if ^ OK
i IN i ^ OK
was PRP was ^ OK
living VBD living ^ OK
in VBG in ^ OK
those IN those ^ OK
conditions DT conditions ^ OK

i NNS i ^ OK
would PRP would ^ OK
probably MD probably ^ OK
be RB be ^ OK
driven VB driven ^ OK
to VBN to ^ OK
the IN the ^ OK
same DT same ^ OK
point JJ point ^ OK
of NN of ^ OK
desperation IN desperation ^ OK
and NN and ^ OK
probably CC probably ^ OK
not RB not ^ OK
real RB real ^ OK
clear RB clear ^ OK
thinking JJ thinking ^ OK

you UNK ^ ^ filler
know UNK ^ ^ filler
because UNK ^ ^ false_start
i UNK ^ ^ filler
mean UNK ^ ^ filler
if UNK ^ ^ false_start
i UNK ^ ^ false_start
guess UNK ^ ^ false_start
when UNK ^ ^ false_start
you UNK ^ ^ false_start
well UNK ^ ^ false_start
i UNK i ^ OK
feel UNK feel ^ OK
if UNK if ^ OK
you UNK you ^ OK
get UNK get ^ OK
to UNK to ^ OK
the UNK the ^ OK
point UNK point ^ OK
where UNK where ^ OK
you UNK you ^ OK
have UNK have ^ OK
nothing UNK nothing ^ OK
to UNK to ^ OK
lose UNK lose ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
it UNK it ^ OK
gives UNK gives ^ OK
you UNK you ^ OK
permission UNK permission ^ OK
to UNK to ^ OK
do UNK do ^ OK
things UNK things ^ OK
that UNK ^ ^ repeat
that UNK that ^ OK
you UNK you ^ OK
'd UNK 'd ^ OK
never UNK never ^ OK
do UNK do ^ OK
if UNK if ^ false_start
you UNK you ^ false_start
did UNK did ^ false_start
have UNK ^ ^ repeat
have UNK have ^ false_start
something UNK something ^ false_start
to UNK to ^ false_start
lose UNK lose ^ false_start

so UH ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
that IN ^ ^ repeat
that IN that ^ OK
the DT the ^ OK
world NN world ^ OK
and CC and ^ OK
mainly RB mainly ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
since IN since ^ OK
we PRP we ^ OK
seem VBP seem ^ OK
to TO to ^ OK
be VB be ^ OK
the DT the ^ OK
ones NNS ones ^ OK
with IN with ^ OK
the DT the ^ OK
big JJ big ^ OK
power NN power ^ OK
right RB right ^ OK
now RB now ^ OK
needs VBZ needs ^ OK
to TO to ^ OK
make VB make ^ OK
a DT a ^ OK
real JJ real ^ OK
honest JJ honest ^ OK
effort NN effort ^ OK
of IN of ^ OK
being VBG being ^ OK
equitable JJ equitable ^ OK
and CC and ^ OK
sitting VBG sitting ^ OK
down RP down ^ OK
and CC and ^ OK
working VBG working ^ OK
on IN on ^ OK
peace NN peace ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
see VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
really RB ^ ^ repeat
really RB really ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
understand VB understand ^ OK
what WP ^ ^ repeat
what WP what ^ OK
the DT the ^ OK
complaint NN complaint ^ OK
is PP-2 is ^ OK
about VBZ about ^ OK
him IN him ^ OK
any PRP any ^ OK
more DT more ^ OK
than RBR than ^ OK
anyone IN anyone ^ OK
else NN else ^ OK

i PRP i ^ OK
just RB just ^ OK
think VBP think ^ OK
that IN that ^ OK
with IN ^ ^ repeat
with IN with ^ OK
the DT the ^ OK
things NNS things ^ OK
the DT ^ ^ false_start
they PRP the ^ false_start
israelis NNPS ^ ^ false_start
they PRP israelis ^ false_start
're VBP are ^ false_start
doing VBG doing ^ OK
now RB now ^ OK
they PRP they ^ OK
are VBP are ^ OK
driving VBG driving ^ OK
people NNS people ^ OK
to TO to ^ OK
support VB support ^ OK
yasser NNP yasser ^ OK
arafat NNP arafat ^ OK

certain JJ certain ^ OK
kids NNS kids ^ OK
will MD will ^ OK
just RB just ^ OK
like UH ^ ^ filler
well UH ^ ^ filler

just RB just ^ OK
my PRP my ^ OK
opinion NN opinion ^ OK
of IN of ^ OK
course NN course ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
the DT the ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
unless IN unless ^ OK
they PRP ^ ^ repeat
uh UH ^ ^ filler
they PRP they ^ OK
have VBP have ^ OK
a DT a ^ OK
p- XX ^ ^ false_start
uh UH ^ ^ filler
set VB set ^ OK
up RP up ^ OK
so IN so ^ OK
that IN that ^ OK
they PRP they ^ OK
actually RB actually ^ OK
have VBP have ^ OK
a DT a ^ OK
government NN government ^ OK
and CC and ^ OK
they PRP they ^ OK
can MD can ^ OK
have VB have ^ OK
people NNS people ^ OK
free JJ free ^ OK
to TO to ^ OK
choose VB choose ^ OK

ah UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

how WRB ^ ^ false_start
are VBP ^ ^ false_start
you PRP ^ ^ false_start
even RB ^ ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
have VB ^ ^ false_start
how WRB how ^ OK
can MD can ^ OK
he PRP he ^ OK
even RB even ^ OK
function VB function ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
is VBZ is ^ OK
n't RB n't ^ OK
he PRP he ^ OK
living VBG living ^ OK
in IN in ^ OK
like UH ^ ^ filler
a DT a ^ OK
half RB half ^ OK
blown VBN blown ^ OK
away RP away ^ OK
building VBG building ^ OK
now RB now ^ OK

i PRP i ^ OK
mean VBP mean ^ OK
whenever WRB whenever ^ OK
s- XX s- ^ OK

whenever WRB whenever ^ OK
one CD one ^ OK
suicide NN suicide ^ OK
bomber NN bomber ^ OK
goes VBZ goes ^ OK
out RP out ^ OK
and CC and ^ OK
kills VBZ kills ^ OK
a DT a ^ OK
bunch NN bunch ^ OK
of IN of ^ OK
people NNS people ^ OK
then ADVP-TMP- 1 then ^ OK
you RB ^ ^ filler
know PRP ^ ^ filler
the VBP the ^ OK
israelis DT israelis ^ OK
show NNPS show ^ OK
up VBP up ^ OK
with RP with ^ OK
their IN their ^ OK
tanks PRP tanks ^ OK
and NNS and ^ OK
you CC ^ ^ filler
know PRP ^ ^ filler
bulldoze VBP bulldoze ^ OK
a VB a ^ OK
couple DT couple ^ OK
neighborhoods NN neighborhoods ^ OK

and UNK ^ ^ false_start
it UNK ^ ^ false_start
's UNK ^ ^ false_start
i UNK ^ ^ filler
mean UNK ^ ^ filler
when UNK ^ ^ repeat
when UNK when ^ OK
you UNK you ^ OK
read UNK read ^ OK
the UNK ^ ^ repeat
the UNK the ^ OK
f- UNK ^ ^ repeat
facts UNK facts ^ OK
of UNK of ^ OK
how UNK how ^ OK
many UNK many ^ OK
casualties UNK casualties ^ OK
there UNK there ^ OK
have UNK have ^ OK
been UNK been ^ OK
there UNK there ^ OK
's UNK 's ^ OK
like UNK like ^ OK
three UNK three ^ OK
to UNK to ^ OK
one UNK one ^ OK
palestinians UNK palestinians ^ OK

i PRP i arg1 OK
i PRP ^ ^ repeat
'm VBP 'm ^ OK
'm VBP ^ predicate repeat
the DT ^ ^ repeat
like UH ^ ^ filler
the DT the arg2 OK
kind RB ^ ^ repeat
of RB ^ ^ repeat
the DT ^ ^ repeat
same JJ same arg2 OK
way NN way arg2 OK

uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
s- XX ^ ^ false_start
eh UH ^ ^ filler
especially RB especially ^ OK
like UH ^ ^ filler
with IN with ^ OK
family NN family ^ OK

uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
seem VBP seem predicate OK
to TO to arg2 OK
more RBR ^ ^ false_start
or CC ^ ^ false_start
less RBR ^ ^ false_start
g- VB ^ ^ repeat
gravitate VB gravitate arg2 OK
towards IN towards arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
keeping VBG keeping arg2 OK
my PRP my arg1 OK
family NN family arg1 OK
together RB together arg1 OK

and CC ^ ^ false_start
not RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
listen VBP listen predicate OK
to IN to arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
the DT the arg1 OK
news NN news arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
try VBP try predicate OK
to TO to arg1 OK
keep VB keep arg1 OK
updated JJ updated arg1 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
about IN about arg0 OK
what WP what arg0 OK
's BES 's arg1 OK
going VBG going arg1 OK
on RP on arg2 OK

not RB not ^ OK
anymore RB anymore ^ OK
anyways RB anyways ^ OK

i PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
m- PRP ^ ^ repeat
my PRP ^ ^ repeat
a DT a arg1 OK
daughter NN ^ ^ repeat
daughter NN daughter arg1 OK
up IN up argM_loc OK
in IN in argM_loc OK
caribou NNP caribou arg1 OK
maine NNP maine arg1 OK
uh UH ^ ^ filler
which WDT which arg1 OK
is VBZ is argM_loc OK
a DT ^ ^ false_start
good JJ ^ ^ false_start
ten CD ten arg2 OK
hours NNS hours arg2 OK
away RB away arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
she PRP ^ ^ false_start
could MD ^ ^ false_start
n't RB ^ ^ false_start
be VB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
she PRP she arg1 OK
might MD might argM_mod OK
as RB as argM_discou OK
well RB well argM_discou OK
be VB be predicate OK
in IN in arg2 OK
florida NNP florida arg2 OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
sh- XX ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
she PRP she arg1 OK
'd MD 'd argM_mod OK
be VB be arg1 OK
closer RBR closer arg2 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
like UH ^ ^ filler
forty CD forty arg2 OK
sixty CD sixty arg2 OK
below IN below arg2 OK
zero CD zero arg2 OK
up IN up arg2 OK
there RB there arg2 OK
i- IN ^ ^ repeat
in IN in arg2 OK
the DT the arg2 OK
winter NN winter arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
find VBP find predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
c- MD ^ ^ repeat
ca MD ca argM_mod OK
n't RB n't argM_neg OK
go VB go arg1 OK
up RB up argM_dir OK
and CC and arg1 OK
visit VB visit arg1 OK
her PRP her arg1 OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
nowadays RB nowadays argM_tmp OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
w- MD ^ ^ repeat
wo MD wo argM_mod OK
n't RB n't argM_neg OK
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
putting VBG ^ ^ false_start
do VB ^ ^ false_start
it PRP put predicate false_start
her PRP her arg1 false_start
and CC ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
on IN on argM_loc false_start
a DT a argM_loc false_start
plane NN plane argM_loc false_start

and CC ^ ^ false_start
so RB ^ ^ filler
i PRP i ^ OK
find VBP find ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
the DT the ^ OK
same JJ same ^ OK

my PRP ^ ^ repeat
my PRP my arg1 OK
relatives NNS relatives arg1 OK
are VBP are predicate OK
basically RB basically arg2 OK
all DT all arg2 OK
in IN in arg2 OK
this DT this arg2 OK
area NN area arg2 OK

um UH ^ ^ filler
but CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
basically RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
daughter NN daughter arg1 OK
in IN in argM_loc OK
hartford NNP hartford argM_loc OK
connecticut NNP connecticut argM_loc OK

um UH ^ ^ filler
tho- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
only RB only arg2 OK
four CD four arg2 OK
or CC or arg2 OK
five CD five arg2 OK
hours NNS hours arg2 OK
away RB away arg2 OK

but CC ^ arg0 false_start
they PRP they arg1 OK
're VBP 're predicate OK
far RB far arg2 OK
enough RB enough arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that IN that arg2 OK
keeps VBZ it ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
keeps VBZ keeps arg2 OK
the DT the arg1 OK
family NN family arg1 OK
all RB all arg1 OK
separated JJ separated arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
wish VBP wish predicate OK
everybody NN everybody arg1 OK
was VBD was arg1 OK
closer RBR closer arg2 OK
because IN because argM_cause OK
you PRP you arg0 OK
never RB never argM_neg OK
know VBP know arg1 OK
like UH ^ ^ filler
if IN if argM_adverb OK
something NN something arg1 OK
is PP-2 is arg1 OK
going VBZ going argM_mod OK
to VBG to argM_mod OK
happen TO happen arg1 OK
you VB ^ ^ filler
know PRP ^ ^ filler
like VBP like argM_mnr OK
nine IN nine argM_mnr OK
eleven CD eleven argM_mnr OK

that CD ^ ^ false_start
i WDT ^ ^ filler
mean PRP ^ ^ filler
i VBP i arg1 OK
just PRP just argM_adverb OK
sat RB sat predicate OK
there VBD there argM_loc OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
my PRP my arg0 OK
sister NN sister arg0 OK
had VBD had ^ OK
called VBN called predicate OK
me PRP me arg1 OK

and CC ^ ^ false_start
when WRB when argM_tmp OK
that DT that argM_tmp OK
happened VBD happened argM_tmp OK
she ADVP-TMP- 1 she arg0 OK
had PRP had ^ OK
called VBD called predicate OK
me VBN me arg1 OK
and PRP and ^ OK
said CC said predicate OK
donna VBD donna arg0 OK
put NNP ^ ^ repeat
put DT put arg1 OK
on VBD ^ ^ repeat
on VBN on arg_particl OK
the IN ^ ^ repeat
the RP the arg1 OK
t. DT t. arg1 OK
v. NN v. arg1 OK

you PRP you arg0 OK
k- XX ^ ^ false_start
wo MD wo argM_mod OK
n't RB n't argM_neg OK
believe VB believe predicate OK
what WP what arg1 OK
's BES 's arg1 OK
happening VBG happening arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
wayne NNP wayne argM_discou OK
you PRP you arg1 OK
got VBD have argM_mod false_start
to TO to argM_mod OK
come VB come predicate OK
in IN in arg4 OK
here RB here arg4 OK

i PRP i arg1 OK
am VBP am predicate OK
on IN on arg2 OK
the DT the arg2 OK
outskirts NNS outskirts arg2 OK
of IN of arg2 OK
it PRP it arg2 OK

so RB ^ ^ filler
whenever WRB whenever argM_tmp OK
i PRP i argM_tmp OK
heard VBD heard argM_tmp OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the argM_tmp OK
they PRP ^ ^ false_start
planes NNS planes argM_tmp OK
they PRP ^ ^ false_start
are VBP ^ ^ false_start
taken VBN ^ ^ false_start
out IN ^ ^ false_start
of IN ^ ^ false_start
logan NNP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
were VBD were argM_tmp OK
being VBG being argM_tmp OK
high-jacked VBN high-jacked argM_tmp OK
out IN out argM_tmp OK
of IN of argM_tmp OK
logan NNP logan argM_tmp OK
i ADVP-TMP- 1 i arg0 OK
'm PRP ^ ^ false_start
like VBP said predicate false_start
i RP i arg0 OK
live PRP live arg1 OK
at VBP at arg1 OK
logan IN logan arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
w- PRP ^ ^ repeat
we PRP we arg0 OK
found VBD d predicate OK
out RP out arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
eh UH ^ ^ filler
uh UH ^ ^ filler
the DT the arg0 OK
terrorists NNS terrorists arg0 OK
were VBD were arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
working VBG working arg1 OK
for IN for arg2 OK
a DT a arg0 OK
taxi NN taxi arg0 OK
company NN company arg0 OK
that WDT that arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just argM_adverb OK
happens VBZ happens arg2 OK
to TO to arg1 OK
run VB run arg1 OK
through IN through argM_loc OK
here RB here argM_loc OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

i PRP i arg0 OK
cringe VBP cringe predicate OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
not RB ^ ^ repeat
not RB not ^ OK
a DT ^ ^ repeat
a DT a ^ OK
v- RB ^ ^ repeat
very RB very ^ OK
good JJ good ^ OK
feeling NN feeling ^ OK

but UNK ^ arg2 false_start
what UNK ^ ^ false_start
do UNK ^ ^ false_start
eh UNK ^ ^ filler
uh UNK ^ ^ filler
have UNK ^ ^ false_start
you UNK ^ ^ false_start
tried UNK ^ ^ false_start
to UNK ^ ^ false_start
like UNK ^ ^ filler
eh UNK ^ ^ filler
i UNK i arg0 OK
know UNK know predicate OK
a UNK a arg1 OK
lot UNK lot arg1 OK
of UNK of arg1 OK
people UNK people arg1 OK
have UNK have arg1 OK
been UNK been ^ OK
um UNK ^ predicate filler
been UNK _ARG_ arg1 false_start

uh UH ^ ^ filler
not RB not ^ OK
particularly RB particularly ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
uh UH ^ ^ filler
am VBP am ^ OK
a DT a ^ OK
volunteer NN volunteer ^ OK
on IN on ^ OK
an DT an ^ OK
ambulance NN ambulance ^ OK
squad NN squad ^ OK

so UH so ^ OK
it PRP it ^ OK
's HVS has ^ false_start
affected VBN affected ^ OK
the DT the ^ OK
squad NN squad ^ OK
quite PDT quite ^ OK
a DT a ^ OK
bit NN bit ^ OK

n- UH ^ ^ repeat
no UH no ^ OK

uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we ^ OK
like UH ^ ^ filler
lock VB lock ^ OK
ambulances NNS ambulances ^ OK
up RP up ^ OK
and CC and ^ OK
and CC are ^ false_start
uh UH a ^ false_start
little RB little ^ OK
more RBR more ^ OK
careful JJ careful ^ OK
around IN around ^ OK
the DT the ^ OK
buildings NNS buildings ^ OK
and CC and ^ OK
things NNS things ^ OK
like IN like ^ OK
that DT that ^ OK

eh UH eh ^ OK

but CC but ^ OK
it PRP ^ ^ false_start
was VBD ^ ^ false_start
at IN at ^ OK
the DT the ^ OK
time NN time ^ OK
it PRP it ^ OK
was VBD was ^ OK
centered VBN centered ^ OK
on IN on ^ OK
uh UH ^ ^ filler
what WP what ^ OK
was VBD was ^ OK
then RB then ^ OK
currently RB currently ^ OK
terrorist JJ terrorist ^ OK
activity NN activity ^ OK
which WDT which ^ OK
is VBZ is ^ OK
bombing VBG bombing ^ OK
of IN of ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler

we- XX ^ ^ false_start
i PRP ^ ^ false_start
d- VBP ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
in IN in ^ OK
the DT the ^ OK
same JJ same ^ OK
way NN way ^ OK
it PRP it ^ OK
's HVS has ^ false_start
affected VBN affected ^ OK
my PRP my ^ OK
traveling NN traveling ^ OK
only RB only ^ OK
because IN because ^ OK
it PRP it ^ OK
's S-1 has ^ false_start
become HVS become ^ OK
more VBN more ^ OK
painful RBR painful ^ OK
to JJ to ^ OK
travel TO travel ^ OK

in IN ^ ^ repeat
in IN in ^ OK
flying NN flying ^ OK

the DT the ^ OK
airports NNS airports ^ OK
are VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
take VBP take ^ OK
a DT a ^ OK
lot NN lot ^ OK
longer RBR longer ^ OK
to TO to ^ OK
get VB get ^ OK
through RB through ^ OK

not RB not ^ OK
that WDT that ^ OK
i PRP i ^ OK
know VBP know ^ OK
of IN of ^ OK

course NN of ^ false_start
course NN course ^ OK
n- XX ^ ^ false_start
i PRP i ^ OK
live VBP live ^ OK
closer RBR closer ^ OK
to IN to ^ OK
new NNP new ^ OK
york NNP york ^ OK
than IN than ^ OK
they PRP they ^ OK
do VBP do ^ OK

but CC but ^ OK
w- WP ^ ^ repeat
what WP what ^ OK
do VBP do ^ OK
they PRP they ^ OK
say VB say ^ OK

well UH ^ ^ false_start
let VB ^ ^ false_start
's PRP ^ ^ false_start
see VB ^ ^ false_start
si- XX ^ ^ false_start
for IN for ^ OK
lack NN lack ^ OK
of IN of ^ OK
anything NN anything ^ OK
else RB else ^ OK
there EX ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
the DT the ^ OK
day NN day ^ OK
it PRP it ^ OK
happened VBD happened ^ OK
we ADVP-TMP- 1 we ^ OK
had PRP had ^ OK
visitors VBD visitors ^ OK
at NNS at ^ OK
our IN our ^ OK
plant PRP plant ^ OK

the DT ^ ^ false_start
th- PRP ^ ^ false_start
they PRP ^ ^ false_start
w- VBD ^ ^ false_start
this DT this ^ OK
was VBD was ^ OK
at IN at ^ OK
work NN work ^ OK

eh UH ^ ^ filler
well UH ^ ^ false_start
because IN because ^ OK
i PRP i ^ OK
work VBP work ^ OK
for IN for ^ OK
a DT a ^ OK
military JJ military ^ OK
subcontractor NN subcontractor ^ OK
who WP who ^ OK
also RB also ^ OK
was VBD was ^ OK
making VBG making ^ OK
airport NN airport ^ OK
security NN security ^ OK
equipment NN equipment ^ OK

especially RB especially ^ OK
when WRB when ^ OK
people NNS people ^ OK
start VBP start ^ OK
talking VBG talking ^ OK
that DT ^ ^ false_start
in IN in ^ OK
an- CC ^ ^ repeat
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
the DT the ^ OK
movies NNS movies ^ OK

well UH well ^ OK
uh UH ^ ^ filler
my PRP ^ ^ false_start
movie NN ^ ^ false_start
going NN ^ ^ false_start
i PRP i arg1 OK
go VBP go predicate OK
probably RB ^ ^ repeat
maybe RB maybe arg2 OK
once RB once arg2 OK
a DT a arg2 OK
month NN month arg2 OK
uh UH ^ ^ filler
because IN because ^ OK
i PRP i arg0 OK
do VBP do ^ OK
have VB have predicate OK
a DT a arg1 OK
home NN home arg1 OK
based VBN based arg1 OK
business NN business arg1 OK

got VBD got ^ OK
a DT a ^ OK
coup- JJ ^ ^ repeat
lot NN lot ^ OK
lot NN of ^ false_start
things NNS things ^ OK
going VBG going ^ OK

and CC ^ ^ false_start
so UH ^ ^ false_start
uh UH ^ ^ filler
just RB just ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
busier JJR busier ^ OK
than IN than ^ OK
normal JJ normal ^ OK

and CC ^ ^ false_start
so RB ^ ^ false_start
but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
try VBP try predicate OK
to TO to arg1 OK
get VB get arg1 OK
out RB out arg1 OK
at RB at argM_tmp OK
least RB least argM_tmp OK
once RB once argM_tmp OK
a DT a argM_tmp OK
month NN month argM_tmp OK
to TO to arg1 OK
see VB see arg1 OK
a DT a arg1 OK
real RB real arg1 OK
good JJ good arg1 OK
movie NN movie arg1 OK

actually RB actually ^ OK
uh UH ^ ^ filler
i PRP i arg1 OK
'd MD 'd ^ OK
just RB just ^ OK
been VBN been predicate OK
to IN to arg2 OK
one CD one arg2 OK
a DT ^ ^ false_start
couple NN ^ ^ false_start
of IN ^ ^ false_start
days NNS ^ ^ false_start
ago RB ^ ^ false_start
this DT this argM_tmp OK
last JJ ^ ^ repeat
past JJ past argM_tmp OK
weekend NN weekend argM_tmp OK

and CC ^ ^ false_start
gosh UH ^ ^ filler
what WP ^ ^ repeat
what WP what arg2 OK
it PRP ^ ^ repeat
was VBD was predicate OK
that DT that arg1 OK

actually UH actually ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
took VBD ^ ^ repeat
sort RB ^ ^ false_start
of RB ^ ^ false_start
took VBD took predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
date NN date arg1 OK

and CC ^ ^ false_start
she PRP ^ ^ repeat
she PRP she arg0 OK
picked VBD picked predicate OK
it PRP it arg1 OK
out RP out arg1 OK

uh UH ^ ^ filler
w- XX ^ ^ repeat
actually RB actually ^ OK
it PRP it arg1 OK
was VBD was predicate OK
n't RB n't argM_neg OK
a DT a arg2 OK
chick NN chick arg2 OK
flick NN flick arg2 OK

la- NNP ^ ^ repeat
yeah UH yeah ^ OK

you PRP ^ ^ false_start
and CC ^ ^ false_start
uh UH ^ ^ filler
it PRP there arg1 false_start
was VBD was predicate OK
another DT another arg2 OK
guy NN guy arg2 OK
in SBAR-1 in arg2 OK
there IN there arg2 OK
that RB that arg1 OK
was WDT was arg2 OK
kind VBD kind arg2 OK
of RB of arg2 OK
popular RB popular arg2 OK

but CC but ^ OK
uh UH uh ^ OK

for IN for ^ OK
example NN example ^ OK
if IN if ^ OK
it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
rainy JJ ^ ^ repeat
stormy JJ stormy arg2 OK
day NN ^ ^ repeat
day NN day arg2 OK
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
in IN in argM_loc OK
texas NNP texas argM_loc OK
and CC ^ ^ repeat
so UH ^ ^ repeat
our PRP ^ ^ repeat
our PRP ^ ^ repeat
it PRP it arg1 OK
can MD can ^ OK
get VB get predicate OK
really RB really arg2 OK
cold JJ cold arg2 OK
here RB here argM_loc OK

so UH ^ ^ false_start
if IN if ^ OK
it PRP it arg1 OK
's BES 's predicate OK
like UH ^ ^ filler
a DT a arg2 OK
gloomy JJ gloomy arg2 OK
cold JJ cold arg2 OK
day NN day arg2 OK
now UH ^ ^ repeat
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT a arg2 OK
great JJ great arg2 OK
time NN time arg2 OK
to TO to arg2 OK
go VB go arg2 OK
rent VB rent arg2 OK
movies NNS movies arg1 OK

ah UH ^ ^ filler
most RBS most ^ OK
definitely RB definitely ^ OK
because IN because ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
can MD can ^ OK
hear VB hear ^ OK
all PDT all ^ OK
the DT the ^ OK
effects NNS effects ^ OK

ther- XX ^ ^ repeat
i PRP i arg0 OK
did VBD did ^ OK
see VB see predicate OK
that DT that arg1 OK

no UH no ^ OK
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it ^ OK
really RB really ^ OK
is VBZ is ^ OK
n't RB n't ^ OK

now UH now argM_tmp OK
what WDT what arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
movies NNS movies arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
get VB get predicate OK
into IN into arg1 OK

if IN ^ ^ false_start
you PRP ^ ^ false_start
had VBD ^ ^ false_start
all PDT ^ ^ repeat
all PDT all arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
movies NNS movies arg1 OK
are VBP are predicate OK
at IN at arg2 OK
the DT the arg2 OK
theater NN theater arg2 OK
and CC and ^ OK
you PRP you arg0 OK
said VBD said predicate OK
okay UH okay arg1 OK

would MD ^ ^ repeat
would MD would arg2 OK
it PRP ^ ^ repeat
it PRP it arg1 OK
be VB be predicate OK
comedy NN comedy arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
my PRP the ^ false_start
number NN number arg1 OK
number NP-2 ^ ^ repeat
one CD one arg1 OK
one NN ^ ^ repeat
thing NN thing arg1 OK
i PRP i arg0 OK
'd MD 'd arg1 OK
go VB go arg1 OK
see VB see arg1 OK
is CD is arg1 OK
action-packed VBZ action-packed arg1 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
have VBP have ^ OK
you PRP you arg0 OK
seen VBN seen predicate OK
bad NNP bad arg1 OK
boys NNPS boys arg1 OK
uh UH ^ ^ filler
two CD two arg1 OK

now UH now ^ OK
that DT ^ ^ repeat
that DT that arg1 OK
was VBD was predicate OK
good JJ good arg2 OK
action NN action arg2 OK

uh UH ^ ^ filler
jus- RB ^ ^ false_start
it PRP ^ ^ false_start
it PRP it ^ OK
goes VBZ goes ^ OK
by IN by ^ OK
the DT the ^ OK
income NN income ^ OK
of IN of ^ OK
your PRP your ^ OK
family NN family ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
know VBP know ^ OK
i- PRP i- ^ OK

i PRP ^ ^ false_start
know VBP ^ ^ false_start
um UH ^ ^ filler
uh UH ^ ^ filler
i PRP i ^ OK
se- VBP se- ^ OK

i PRP i ^ OK
sent VBD sent ^ OK
two CD ^ ^ repeat
two CD two ^ OK
children NNS children ^ OK
through IN ^ ^ repeat
through IN through ^ OK
school- NN ^ ^ repeat
college NN college ^ OK

uh UH ^ ^ filler
they PRP they ^ OK
wen- VBD wen- ^ OK

uh UH ^ ^ filler
no UH ^ ^ filler
they PRP they ^ OK

ah UH ^ ^ filler
was VBD ^ ^ false_start
uh UH ^ ^ filler
back RB back ^ OK
then RB then ^ OK
it PRP it ^ OK
was VBD was ^ OK
uh UH ^ ^ filler
like UH ^ ^ filler
twenty-seven CD twenty-seven ^ OK
thousand CD thousand ^ OK
a DT a ^ OK
year NN year ^ OK

believe VB believe ^ OK
it PRP it ^ OK
or CC or ^ OK
not RB not ^ OK
i PRP i ^ OK
retired VBD retired ^ OK
the DT the ^ OK
first JJ first ^ OK
of IN of ^ OK
the DT the ^ OK
year NN year ^ OK

i PRP i ^ OK
m- XX m- ^ OK

my PRP ^ ^ repeat
my PRP my ^ OK
son NN son ^ OK
started VBD started ^ OK
out RP out ^ OK
as IN as ^ OK
an DT an ^ OK
engineering NN engineering ^ OK
student NN student ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
took VBD took ^ OK
an DT an ^ OK
n. NN n. ^ OK
r. NN r. ^ OK
o. NN o. ^ OK
t. NN t. ^ OK
c. NN c. ^ OK
g- XX ^ ^ false_start
uh UH ^ ^ filler
scholarship NN scholarship ^ OK
for IN for ^ OK
a DT a ^ OK
year NN year ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP ^ ^ repeat
he PRP he ^ OK
paid VBD paid ^ OK
for IN for ^ OK
a DT a ^ OK
semester NN semester ^ OK

but CC ^ ^ false_start
he PRP ^ ^ repeat
uh UH ^ ^ filler
he PRP he ^ OK
had VBD had ^ OK
a DT a ^ OK
job NN job ^ OK
in IN in ^ OK
uh UH ^ ^ filler
some DT some ^ OK
big JJ big ^ OK
restaurant NN restaurant ^ OK

he PRP he ^ OK
's BES 's ^ OK

trades VBZ ^ ^ false_start
st- NNS ^ ^ false_start
day NN day ^ OK
trader NN trader ^ OK

yeah UNK ^ ^ repeat
yeah UNK yeah ^ OK

uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
other JJ other ^ OK
pro- NN pro- ^ OK

what WP ^ ^ repeat
what WP ^ ^ repeat
what WDT what ^ OK
kind NN kind ^ OK
of IN of ^ OK
movies NNS movies ^ OK
do VBP do ^ OK
we PRP we ^ OK
like VB like ^ OK

i PRP i ^ OK
says VBZ said ^ false_start
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
go VB go ^ OK
to IN to ^ OK
the DT the ^ OK
movies NNS movies ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
w- VBD ^ ^ repeat
watch VBP watch ^ OK
pay VB pay ^ OK
per IN per ^ OK
view NN view ^ OK

i PRP i ^ OK
wa- VBP ^ ^ repeat
wait VBP wait ^ OK
till IN till ^ OK
they PRP they ^ OK
come VBP come ^ OK
on IN on ^ OK
that DT that ^ OK

uh UH ^ ^ filler
the DT the ^ OK
last JJ last ^ OK
movie NN movie ^ OK
i PRP i ^ OK
went VBD went ^ OK
to TO to ^ OK
see VB see ^ OK
was NP-2 was ^ OK
the VBD the ^ OK
horse DT horse ^ OK
whisperer NN whisperer ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
made VBD ^ ^ repeat
made VBD made ^ OK
a DT ^ ^ repeat
a DT a ^ OK
lot NN ^ ^ repeat
lot NN lot ^ OK
of IN ^ ^ repeat
of IN of ^ OK
money NN ^ ^ repeat
money NN money ^ OK
on IN on ^ OK
it PRP it ^ OK

uh UH ^ ^ filler
i PRP i ^ OK

you PRP ^ ^ repeat
you PRP you ^ OK
know VBP ^ ^ repeat
know VBP know ^ OK
where WRB ^ ^ repeat
where WRB where ^ OK
creskill NNP creskill ^ OK
is VBZ is ^ OK

but CC ^ ^ false_start
those DT ^ ^ repeat
those DT those arg1 OK
are VBP ^ ^ repeat
are VBP are predicate OK
so RB so arg2 OK
delicious JJ delicious arg2 OK

d- RB ^ ^ repeat
deep RB deep ^ OK
um UH ^ ^ filler
fried JJ fried ^ OK
turkey NNP turkey ^ OK
does VBZ does ^ OK
n't RB n't ^ OK

it PRP it arg1 OK
would MD would ^ OK
n't RB n't ^ OK
be VB be predicate OK
the DT the arg2 OK
place NN place arg2 OK
where WRB where arg2 OK
i PRP i arg1 OK
would MD would arg2 OK
take VB take arg2 OK
those DT those arg2 OK
extra JJ extra arg2 OK
calories NNS calories arg2 OK
i ADVP-1 ^ ^ false_start
guess PRP ^ ^ false_start

so RB ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
have VB have predicate OK
that DT that arg1 OK
option NN option arg1 OK
of IN of arg1 OK
cooking NN cooking arg1 OK
s- RB ^ ^ repeat
so RB so arg1 OK
much RB much arg1 OK

and CC ^ ^ filler
w- WP ^ ^ repeat
what WP ^ ^ false_start
's BES ^ ^ false_start
lu- XX ^ ^ false_start
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it arg0 OK
also RB also ^ OK
gets VBZ gets predicate OK
pretty RB pretty arg1 OK
expensive JJ expensive arg1 OK

which WDT which ^ OK
you PRP you ^ OK
never RB never ^ OK
realize VBP realize ^ OK
when WRB when ^ OK
you PRP you ^ OK
eat VBP eat ^ OK
at IN at ^ OK
home NN home ^ OK
whenever WRB whenever ^ OK
you PRP you ^ OK
feel VBP feel ^ OK
like IN like ^ OK
it PRP it ^ OK

so RB ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
come VBN come ^ OK
to TO to ^ OK
appreciate VB appreciate predicate OK
that DT that arg1 OK
in IN in arg1 OK
a DT a arg1 OK
whole JJ whole arg1 OK
new JJ new arg1 OK
way NN way arg1 OK

we PRP we arg0 OK
um UH ^ ^ filler
and CC ^ ^ false_start
actually RB actually ^ false_start
have VBP have predicate OK
w- XX ^ ^ repeat
w- XX ^ ^ repeat
one CD one arg1 OK
stove NN stove arg1 OK
for IN for arg1 OK
our PRP our arg1 OK
whole JJ whole arg1 OK
building NN building arg1 OK
um UH ^ ^ filler
which WDT which arg1 OK
is VBZ is predicate OK
n't RB n't ^ OK
really RB really arg2 OK
m- JJ ^ ^ repeat
much JJ much arg2 OK
of IN of arg2 OK
a DT a arg2 OK
cooking NN cooking arg2 OK
facility NN facility arg2 OK

um UH ^ ^ filler
so UH ^ ^ filler
preparation NN preparation arg1 OK
of IN of arg1 OK
your PRP your arg1 OK
own JJ own arg1 OK
food NN food arg1 OK
is VBZ is predicate OK
n't RB n't ^ OK
m- JJ ^ ^ repeat
much JJ much arg2 OK
of IN of arg2 OK
an DT an arg2 OK
option NN option arg2 OK

e- XX ^ ^ repeat
e- XX ^ ^ repeat
even RB even ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when ^ OK
i PRP i arg0 OK
make VBP make predicate OK
popcorn NN popcorn arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
microwave NN microwave argM_loc OK
you ADVP-TMP- 1 you arg0 OK
get PRP get predicate OK
people VBP people arg0 OK
coming NNS coming arg1 OK
by VBG by arg4 OK
just RB just arg1 OK
to RB to arg1 OK
m- TO ^ ^ false_start
have XX have arg1 OK
a VB a arg1 OK
bite DT bite arg1 OK

um UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg0 OK
ranges VBZ ranges predicate OK

um UH ^ ^ filler
i PRP i arg0 OK
love VBP love predicate OK
dairy NN dairy arg1 OK
products NNS products arg1 OK
uh UH like ^ false_start
uh UH ^ ^ filler
cheese NN cheese ^ OK
milk NN milk ^ OK
ice NN ice ^ OK
cream NN cream ^ OK
even RB even ^ false_start
m- XX ^ ^ false_start
yogurt NN yogurt ^ OK

um UH ^ ^ filler
m- XX ^ ^ filler
love VBP love ^ OK
all PDT all ^ OK
that DT that ^ OK
stuff NN stuff ^ OK

um UH ^ arg1 filler
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
do VBP do predicate OK
my PRP my arg1 OK
best JJS best arg1 OK
to TO to ^ OK
have VB have predicate OK
as RB as arg1 OK
much JJ much arg1 OK
as IN as arg1 false_start
i PRP i arg0 false_start
can MD can predicate false_start
of IN of arg1 OK
that DT that arg1 OK

i PRP ^ ^ repeat
in IN in ^ OK
terms NNS terms ^ OK
of IN of ^ OK
like UH ^ ^ filler
ethnic JJ ethnic ^ OK
food NN food ^ OK
l- XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP i arg0 OK
like VBP ^ ^ repeat
like VBP like predicate OK
chinese JJ chinese arg1 OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
could MD could ^ OK
eat VB eat predicate OK
any DT any arg1 OK
of IN of arg1 OK
it PRP those arg1 false_start

and CC ^ ^ false_start
i PRP ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
e- XX ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP i arg0 OK
s- RB ^ ^ repeat
somehow RB somehow ^ OK
thought VBD thought predicate OK
it PRP it arg1 OK
'd MD 'd arg1 OK
be VB be arg1 OK
more RBR more arg2 OK
different JJ different arg2 OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
e- XX ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
like IN like arg2 OK
a DT a arg2 OK
dry JJ dry arg2 OK
hamburger NN hamburger arg2 OK

i PRP i arg0 OK
've VBP 've ^ OK
never RB never ^ OK
tried VBN tried predicate OK
venison NN venison arg1 OK
which WDT but ^ false_start
i PRP i arg0 OK
want VBP want predicate OK
to TO to ^ OK
try VB ^ ^ false_start

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
guess VBP ^ ^ repeat
guess VBP guess predicate OK
i PRP ^ ^ false_start
feel VBP ^ ^ false_start
our PRP ^ ^ false_start
problems NNS ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
right RB right argM_tmp OK
now RB now argM_tmp OK
the DT the arg1 OK
current JJ current arg1 OK
emphasis NN emphasis arg1 OK
is VBZ is arg1 OK
on IN on arg2 OK
iraq NNP iraq arg2 OK
but CC but argM_discou OK
i PRP i arg0 OK
feel VBP feel predicate OK
that IN that arg1 OK
our PRP our arg1 OK
problems NNS problems arg1 OK
are VBP are arg1 OK
actually RB actually argM_adverb false_start
deeper JJR deeper arg2 OK
than IN than arg2 OK
that DT that arg2 OK

that IN ^ ^ false_start
this DT ^ ^ repeat
this DT this arg0 OK
is VBZ ^ ^ repeat
is VBZ is arg0 OK
just RB ^ ^ repeat
kind RB ^ ^ repeat
kind RB kind arg0 OK
of RB ^ ^ repeat
of RB of arg0 OK
a DT ^ ^ repeat
a DT a arg0 OK
grudge NN grudge arg0 OK
match NN match arg0 OK
here ADJP-1 ^ ^ false_start
um RB ^ ^ filler
leftover UH leftover arg2 OK
from JJ from arg2 OK
father IN father arg2 OK
bush NNP bush arg2 OK
and CC and arg2 OK
also RB also argM_discou OK
that IN ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
fueled VBN fueled arg2 OK
by IN by arg2 OK
oil NN oil arg2 OK

um UH ^ ^ filler
i PRP i arg1 OK
am VBP am predicate OK
real RB real argM_adverb OK
concerned JJ concerned ^ OK
about IN about arg0 OK
the DT the arg1 OK
in JJ ^ ^ false_start
equitable JJ inequitable arg1 false_start
qual- XX ^ ^ false_start
um UH ^ ^ filler
treatment NN treatment arg1 OK
we PRP we arg0 OK
give VBP give arg0 OK
people NNS people arg2 OK
in IN in arg2 OK
the DT the arg2 OK
mid NNP mid arg2 OK
east NNP east arg2 OK
mainly RB mainly arg2 OK
the DT the arg2 OK
israelis NNPS israelis arg2 OK
and CC and arg2 OK
the DT the arg2 OK
palestinians NNPS palestinians arg2 OK

we PRP we arg0 OK
do VB do predicate OK
whatever WP whatever arg1 OK
you PRP you arg0 OK
want VBP want arg1 OK
with NP-1 with argM_mnr OK
n- IN ^ ^ repeat
no DT no argM_mnr OK
regard DT regard argM_mnr OK
whatsoever NN ^ ^ false_start
to RB to argM_mnr OK
the IN the argM_mnr OK
palestinians DT palestinians argM_mnr OK

and CC ^ ^ false_start
considering VBG considering ^ OK
that IN that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
these DT these ^ OK
people NNS people ^ OK
are VBP are ^ OK
essentially RB essentially ^ OK
without IN without ^ OK
a DT a ^ OK
country NN country ^ OK

like IN like ^ OK
i PRP i arg0 OK
said VBD said predicate OK
i S i arg0 OK
've PRP 've arg1 OK
never VBP never argM_neg OK
done RB done arg1 OK
this VBN this arg1 OK
before DT before argM_tmp OK

got VBN do arg0 false_start
got VBN you ^ false_start
so UH ^ ^ filler
um UH ^ ^ filler
so UH ^ ^ filler
got VBN have predicate false_start
anymore RB anymore arg1 OK
thoughts NNS thoughts arg1 OK
on IN on arg1 OK
what WP what arg1 OK
i PRP i arg0 OK
just RB just argM_adverb OK
said VBD said arg1 OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
not RB ^ ^ repeat
not RB not argM_neg OK
real JJ ^ ^ repeat
really RB really argM_adverb OK
good JJ good arg2 OK
on IN on arg2 OK
the DT the arg2 OK
whole JJ ^ ^ false_start
details NNS details arg2 OK
of IN of arg2 OK
it PRP it arg2 OK

but CC but arg1 OK
the DT the argM_mnr OK
way NN way argM_mnr OK
i PRP i arg0 OK
understand VBP understand predicate OK
understand VBP it ^ false_start
some ADVP-MNR- 1 some arg0 OK
guy DT guy arg0 OK
um NN ^ ^ filler
in UH in arg0 OK
england IN ^ ^ false_start
great NNP great arg0 OK
england IN ^ ^ false_start
britain NNP britain arg0 OK
whatever NNP ^ ^ false_start
in UH in argM_tmp OK
the IN the argM_tmp OK
twenties DT twenties argM_tmp OK
came NNS came arg2 OK
up VBD up arg_particl OK
with RP with arg1 OK
this IN this arg1 OK
whole DT whole arg1 OK
zionist JJ zionist arg1 OK
state JJ state arg1 OK
idea NN idea arg1 OK

not RB it arg0 false_start
like IN 's ^ false_start
so UH ^ ^ filler
i PRP ^ ^ false_start
just RB ^ ^ false_start
thin- VBP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
hm UH ^ ^ filler
i PRP ^ ^ repeat
mean VBP ^ ^ repeat
and CC ^ ^ false_start
not RB not argM_neg OK
like IN like predicate OK
i PRP i arg0 OK
think VBP think arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
suicide NN suicide arg1 OK
bombing NN bombing arg1 OK
is VBZ is arg1 OK
a DT a arg2 OK
good JJ good arg2 OK
thing NN thing arg2 OK

but CC ^ ^ false_start
i PRP i arg0 OK
can MD can argM_mod OK
certainly RB certainly argM_adverb OK
understand VB understand predicate OK
why WRB why argM_purpos OK
there EX there arg1 OK
are VBP are arg1 OK
people NNS people arg0 OK
there RB there argM_loc OK
taking VBG taking arg2 OK
those DT those arg1 OK
measures NNS measures arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
if IN if ^ OK
if IN _ARG_ ^ false_start

well UH ^ arg2 filler
no UH ^ ^ filler
what WP what arg1 OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
saying VBG saying arg1 OK
is NP-1 is predicate OK
i VBZ that ^ false_start
i VBZ i arg0 OK
try PRP try arg2 OK
and VBP and arg1 OK
imagine CC imagine arg1 OK
if VB if argM_adverb OK
i IN i arg0 OK
was PRP was arg1 OK
living VBD living arg1 OK
in VBG in argM_loc OK
those IN those argM_loc OK
conditions DT conditions argM_loc OK
i NNS i arg0 OK
would PRP would argM_mod OK
probably MD probably argM_adverb OK
be RB be arg1 OK
driven VB driven arg1 OK
to VBN to arg1 OK
the IN the arg1 OK
same DT same arg1 OK
point JJ point arg1 OK
of NN of arg1 OK
desperation IN desperation arg1 OK
and NN and arg1 OK
probably CC probably arg1 OK
not RB not arg1 OK
real RB real arg1 OK
clear RB clear arg1 OK
thinking JJ thinking arg1 OK

you UNK ^ ^ filler
know UNK ^ ^ filler
because UNK ^ ^ false_start
i UNK ^ ^ filler
mean UNK ^ ^ filler
if UNK ^ ^ false_start
i UNK i arg0 OK
guess UNK guess predicate OK
when UNK ^ ^ false_start
you UNK ^ ^ false_start
well UNK ^ ^ filler
i UNK i arg0 OK
feel UNK feel arg1 OK
if UNK if argM_adverb OK
you UNK you arg1 OK
get UNK get arg1 OK
to UNK to arg2 OK
the UNK the arg2 OK
point UNK point arg2 OK
where UNK where argM_loc OK
you UNK you arg0 OK
have UNK have arg2 OK
nothing UNK nothing arg1 OK
to UNK to arg1 OK
lose UNK lose arg1 OK
you UNK ^ ^ filler
know UNK ^ ^ filler
it UNK it arg0 OK
gives UNK gives arg1 OK
you UNK you arg0 OK
permission UNK permission arg1 OK
to UNK to arg1 OK
do UNK do arg1 OK
things UNK things arg1 OK
that UNK ^ ^ repeat
that UNK that arg1 OK
if UNK if arg1 OK
you UNK you arg1 OK
did UNK did arg1 OK
have UNK ^ ^ repeat
have UNK have arg1 OK
something UNK something arg1 OK
to UNK to arg1 OK
lose UNK lose arg1 OK
you UNK you arg0 OK
'd UNK 'd argM_mod OK
never UNK never argM_neg OK
do UNK do arg2 OK

so UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that IN ^ ^ repeat
that IN that arg1 OK
the DT the arg0 OK
world NN world arg0 OK
and CC and arg0 OK
mainly RB mainly arg0 OK
the DT the arg0 OK
u. NNP u. arg0 OK
s. NNP s. arg0 OK
since IN since argM_discou OK
we PRP we arg1 OK
seem VBP seem arg1 OK
to TO to arg2 OK
be VB be arg2 OK
the DT the arg2 OK
ones NNS ones arg2 OK
with IN with arg2 OK
the DT the arg2 OK
big JJ big arg2 OK
power NN power arg2 OK
right RB right argM_tmp OK
now RB now argM_tmp OK
needs VBZ needs arg1 OK
to TO to arg1 OK
make VB make arg1 OK
a DT a arg1 OK
real JJ real arg1 OK
honest JJ honest arg1 OK
effort NN effort arg1 OK
of IN of arg1 OK
being VBG being arg1 OK
equitable JJ equitable arg2 OK
and CC ^ ^ false_start
sitting VBG ^ ^ false_start
down RP ^ ^ false_start
and CC and arg1 OK
working VBG working arg1 OK
on IN on arg1 OK
peace NN peace arg1 OK

um UH ^ ^ filler
you PRP ^ ^ filler
see VBP ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
really RB ^ ^ repeat
really RB really argM_adverb OK
do VBP ^ ^ repeat
do VBP do arg1 OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
understand VB understand arg1 OK
what WP ^ ^ repeat
what WP what arg2 OK
the DT the arg1 OK
complaint NN complaint arg1 OK
is PP-2 is arg1 OK
about VBZ about arg2 OK
him IN him arg2 OK
any PRP any argM_extent OK
more DT more argM_extent OK
than RBR than argM_extent OK
anyone IN anyone argM_extent OK
else NN else argM_extent OK

i PRP i arg0 OK
just RB just argM_adverb OK
think VBP think predicate OK
that IN that arg1 OK
with IN ^ ^ repeat
with IN ^ ^ false_start
the DT the arg0 OK
things NNS things arg0 OK
they PRP ^ ^ false_start
the DT ^ arg0 false_start
they PRP the ^ false_start
israelis NNPS ^ arg0 false_start
they PRP israelis ^ false_start
're VBP 're arg0 OK
doing VBG doing arg0 OK
now RB now argM_tmp OK
are VBP are arg1 OK
driving VBG driving arg1 OK
people NNS people arg0 OK
to TO to arg2 OK
support VB support arg2 OK
yasser NNP yasser arg1 OK
arafat NNP arafat arg1 OK

certain JJ certain ^ OK
kids NNS kids ^ OK
will MD will ^ OK
just RB just ^ OK
like UH ^ ^ filler
well UH ^ ^ filler
just RB _ARG_ ^ false_start

just RB just ^ OK
my PRP my ^ OK
opinion NN opinion ^ OK
of IN of ^ OK
course NN course ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
the DT ^ ^ false_start
thing NN ^ ^ false_start
is VBZ ^ ^ false_start
unless IN unless ^ OK
they PRP ^ ^ repeat
uh UH ^ ^ filler
they PRP they ^ OK
have VBP have ^ OK
^ ^ a ^ OK
p- XX ^ ^ false_start
uh UH ^ ^ filler
set VB set ^ OK
up RP up ^ OK
so IN so ^ OK
that IN that ^ OK
they PRP they ^ OK
actually RB actually ^ OK
have VBP have ^ OK
a DT a ^ OK
government NN government ^ OK
and CC and ^ OK
they PRP they ^ OK
can MD can ^ OK
have VB have ^ OK
people NNS people ^ OK
free JJ free ^ OK
to TO to ^ OK
choose VB choose ^ OK
ah UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start

how WRB ^ ^ false_start
are VBP ^ ^ false_start
you PRP ^ ^ false_start
even RB ^ ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
have VB ^ ^ false_start
how WRB how argM_mnr OK
can MD can argM_mod OK
he PRP he arg0 OK
even RB even argM_adverb OK
function VB function predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
is VBZ is ^ OK
n't RB n't argM_neg OK
he PRP he arg0 OK
living VBG living predicate OK
in IN in argM_loc OK
like UH ^ ^ filler
a DT a argM_loc OK
half RB half argM_loc OK
blown VBN blown argM_loc OK
away RP away argM_loc OK
building VBG building argM_loc OK
now RB now argM_tmp OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
whenever WRB ^ ^ repeat
whenever WRB whenever argM_tmp OK
one CD one arg0 OK
s- XX ^ ^ repeat
suicide NN suicide arg0 OK
bomber NN bomber arg0 OK
goes VBZ goes predicate OK
out RP out arg4 OK
and CC and ^ OK
kills VBZ kills predicate OK
a DT a arg1 OK
bunch NN bunch arg1 OK
of IN of arg1 OK
people NNS people arg1 OK
then ADVP-TMP- 1 then argM_adverb OK
you RB ^ ^ filler
know PRP ^ ^ filler
the VBP the arg0 OK
israelis DT israelis arg0 OK
show NNPS show predicate OK
up VBP up arg_particl OK
with RP with argM_mnr OK
their IN their argM_mnr OK
tanks PRP tanks argM_mnr OK
and NNS and ^ OK
you CC ^ ^ filler
know PRP ^ ^ filler
bulldoze VBP bulldoze predicate OK
a VB a arg1 OK
couple DT couple arg1 OK
neighborhoods NN neighborhoods arg1 OK

and UNK ^ ^ false_start
it UNK ^ ^ false_start
's UNK ^ ^ false_start
i UNK ^ ^ filler
mean UNK ^ ^ filler
when UNK ^ ^ repeat
when UNK when argM_tmp OK
you UNK you arg0 OK
read UNK read predicate OK
the UNK ^ ^ repeat
the UNK the arg1 OK
f- UNK ^ ^ repeat
facts UNK facts arg1 OK
of UNK of arg1 OK
how UNK how arg2 OK
many UNK many arg2 OK
casualties UNK casualties arg2 OK
there UNK there arg1 OK
have UNK have arg1 OK
been UNK been arg1 OK
there UNK there arg1 OK
's UNK 's predicate OK
like UNK ^ ^ filler
three UNK three arg2 OK
to UNK to arg2 OK
one UNK one arg2 OK
palestinians UNK palestinians arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
as IN ^ ^ repeat
as IN as ^ OK
uh UH ^ ^ filler
people NNS people arg1 OK
get VBP get ^ OK
married VBN married predicate OK
they NP-1 they arg0 OK
move PRP move predicate OK

they PRP they arg0 OK
m- XX ^ ^ repeat
have VBP have predicate OK
other JJ other arg2 OK
people NNS people arg2 OK
that WDT that arg1 OK
they PRP they arg1 OK
need VBP need arg1 OK
to TO to arg1 OK
be VB be arg1 OK
with IN with arg2 OK
because NP-2 because ^ OK
they IN they arg0 OK
bring PRP bring predicate OK
in VBP in arg1 OK
another RP ^ ^ repeat
you DT ^ ^ filler
know PRP ^ ^ filler
another VBP another arg1 OK
side DT side arg1 OK
of NN of arg1 OK
the IN the arg1 OK
family DT family arg1 OK

so RB ^ ^ false_start
it PRP ^ ^ repeat
's BES ^ ^ false_start
not RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
starts VBZ starts predicate OK
just RB just arg1 OK
to TO to arg1 OK
split VB split arg1 OK
off RP off arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK

but CC but ^ OK
then RB then ^ OK
at IN ^ ^ repeat
at IN at ^ OK
christmas NNP christmas ^ OK
time NN time ^ OK
we PRP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
get VBP get ^ OK
to TO to ^ OK
spend VB spend predicate OK
time NN time arg1 OK
with IN with arg4 OK
all PDT all arg4 OK
the DT the arg1 OK
people NNS people arg1 OK
that WDT that arg4 OK
i PRP i arg0 OK
like VBP like arg4 OK
and NP-2 and arg4 OK
uh CC ^ ^ filler
the UH the arg1 OK
family DT family arg1 OK
that NN that arg4 OK
i WDT i arg0 OK
like PRP like arg4 OK

and CC ^ ^ false_start
at IN at ^ OK
other JJ other ^ OK
times NNS times ^ OK
they PRP ^ ^ false_start
um UH ^ ^ filler
say UH ^ ^ false_start
like UH like ^ OK
for IN for ^ OK
the DT the ^ OK
fourth JJ fourth ^ OK
of IN of ^ OK
july NNP july ^ OK
they PRP they arg1 OK
might MD might ^ OK
go VB go predicate OK
with IN ^ ^ repeat
with IN with ^ OK
the DT ^ ^ repeat
the DT the ^ OK
other JJ other ^ OK
in- NN ^ ^ repeat
side NN side ^ OK
of IN of ^ OK
th- DT ^ ^ repeat
the DT the ^ OK
husband NN husband ^ OK
's POS 's ^ OK
family NN family ^ OK
or CC or ^ OK
the DT the ^ OK
wife NN wife ^ OK
's POS 's ^ OK
family NN family ^ OK

mm UH mm ^ OK
mm UH mm ^ OK

i PRP i ^ OK

i PRP i arg0 OK
think VBP think predicate OK
if IN if arg1 OK
i PRP i arg0 OK
had VBD had arg1 OK
to TO to arg1 OK
n- VB ^ ^ repeat
name VB name arg1 OK
something NN something arg1 OK
for IN for arg1 OK
our PRP our arg1 OK
family NN family arg1 OK
i PRP i arg0 OK
i- XX ^ ^ repeat
would MD would arg1 OK
say VB say arg1 OK
we PRP we arg1 OK
're VBP 're arg1 OK
more JJR more arg2 OK
of IN of arg2 OK
a DT a arg2 OK
uh UH ^ ^ filler
spiritual JJ spiritual arg2 OK
family NN family arg2 OK

and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK

the DT the arg1 OK
holiday NNP holiday arg1 OK
is VBZ is predicate OK
more RBR more arg2 OK
centered VBN centered arg2 OK
around IN around arg2 OK
us PRP us arg2 OK
as IN as arg2 OK
a DT a arg2 OK
family NN family arg2 OK
than IN ^ ^ repeat
as IN ^ ^ false_start
a DT ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
than IN ^ ^ repeat
than IN than arg2 OK
religion NN religion arg2 OK
because IN because ^ OK
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
more RBR more arg2 OK
about IN ^ ^ repeat
about IN about arg2 OK
us PRP us arg2 OK

that DT ^ ^ false_start
's BES ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
sa- VBP ^ ^ false_start
w- WP ^ ^ false_start
um UH ^ ^ filler
we PRP we arg0 OK
celebrate VBP celebrate predicate OK
our PRP our arg1 OK
s- XX ^ ^ repeat
family NN family arg1 OK
more RBR more arg1 false_start
than IN ^ ^ repeat
than IN ^ ^ repeat
than IN ^ ^ repeat
than IN than arg1 OK
the DT ^ ^ repeat
uh UH ^ ^ filler
a DT a arg1 OK
religious JJ religious arg1 OK
holiday NN holiday arg1 OK

and CC ^ ^ false_start
if IN if ^ OK
i PRP i arg0 OK
had VBD had ^ OK
to TO to ^ OK
create VB create predicate OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a arg1 OK
holiday NN holiday arg1 OK
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it arg1 OK
would MD would ^ OK
be VB be predicate OK
around IN around arg2 OK
children NNS children arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP ^ ^ false_start
we PRP we ^ OK
'd MD 'd ^ OK
celebrate VB celebrate ^ OK
it PRP it ^ OK
by IN by ^ OK
celebrating VBG celebrating ^ OK
children NNS children ^ OK
just RB just ^ OK
letting VBG ^ ^ repeat
lettin- VBG ^ ^ repeat
n- XX ^ ^ repeat
letting VBG letting ^ OK
them PRP ^ ^ repeat
them PRP them ^ OK
have VB have ^ OK
a DT ^ ^ repeat
a DT a ^ OK
f- JJ ^ ^ repeat
fun JJ fun ^ OK
day NN day ^ OK
because IN because ^ OK
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
holidays NNS holidays ^ OK
a- VBP ^ ^ repeat
are VBP are ^ OK

i PRP i arg0 OK
think VBP think predicate OK
for IN ^ ^ false_start
me PRP ^ ^ false_start
the DT the arg1 OK
big JJ big arg1 OK
p- XX ^ ^ repeat
question NN question arg1 OK
would MD would arg1 OK
be VB be arg1 OK
like UH ^ ^ filler
what WP what arg1 OK
's BES 's arg2 OK
the DT the arg2 OK
magnitude NN magnitude arg2 OK
of IN of arg2 OK
the DT the arg2 OK
terrorist JJ terrorist arg2 OK
situation NN situation arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ repeat
i PRP ^ ^ repeat
mean VBP ^ ^ filler
like NP-1 ^ ^ filler
if UH ^ ^ repeat
is PRP is ^ OK
it IN ^ ^ repeat
it VBZ it ^ OK
something PRP something ^ OK
like NN ^ ^ filler
you IN you ^ OK
yourself PRP yourself ^ OK
are PRP are ^ OK
threatened VBP threatened ^ OK
directly VBN directly ^ OK

because IN because ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
in IN ^ ^ repeat
like UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
example NN example ^ OK
with IN with ^ OK
the DT the ^ OK
airplane NN airplane ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
one CD one arg0 OK
person NN person arg0 OK
decides VBZ decides predicate OK
they PRP they arg0 OK
're VBP 're arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
start VB start arg1 OK
acting VBG acting arg1 OK
crazy JJ crazy arg1 OK
that WDT then ^ false_start
that WDT that arg0 OK
could MD could arg1 OK
lead VB lead predicate OK
to IN to arg4 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
serious JJ serious arg4 OK
lives NNS lives arg4 OK
being VBG being arg4 OK
taken VBN taken arg4 OK

it PRP it arg1 OK
and CC ^ ^ false_start
's BES 's predicate OK
not RB not arg2 OK
like IN like arg2 OK
anyone NN anyone arg0 OK
was VBD was arg2 OK
actually RB actually arg2 OK
telling VBG telling arg2 OK
them PRP them arg2 OK
that IN that arg1 OK
hey UH ^ ^ false_start
we PRP we arg0 OK
're VBP 're arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
go VB go arg1 OK
crash VB crash arg1 OK
this DT this arg1 OK
into IN into arg1 OK
a DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
building NN building arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they arg0 OK
probably RB probably ^ OK
more RBR more ^ OK
or CC or ^ OK
less RBR less ^ OK
knew VBD knew predicate OK
just RB ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg2 OK
're VBP 're arg1 OK
being VBG being arg1 OK
hijacked VBN hijacked arg1 OK

just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
freak VB freak ^ OK
out RP out ^ OK

like UH ^ ^ filler
people NNS people ^ OK
on IN on ^ OK
the DT the ^ OK
plane NN plane ^ OK
with IN with ^ OK

like UH if ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
th- RB ^ ^ false_start
you PRP you arg1 OK
're VBP 're predicate OK
there RB there arg2 OK
with IN with arg2 OK
like UH ^ ^ false_start
say UH ^ ^ false_start
your PRP your arg2 OK
kids NNS kids arg2 OK
it PRP it arg0 OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
make VB make predicate OK
it PRP it arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
different JJ different arg1 OK
because IN because ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
want VB want predicate OK
to TO to arg1 OK
make VB make arg1 OK
your PRP your arg1 OK
kids NNS kids arg1 OK
scared JJ scared arg1 OK

you PRP you arg0 OK
're VBP 're ^ OK
just RB just ^ OK
thinking VBG thinking predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg1 OK
only JJ only arg1 OK
thing NN thing arg1 OK
between IN between arg1 OK
me PRP me arg1 OK
and CC and arg1 OK
the DT the arg1 OK
door NN door arg1 OK
is VBZ is arg1 OK
these DT these arg2 OK
people NNS people arg2 OK

um UH ^ ^ filler
i PRP i arg0 OK
got VBD got predicate OK
a DT a arg1 OK
d. NN d. arg1 OK
v. NN v. arg1 OK
d. NN d. arg1 OK
for IN for arg3 OK
free JJ free arg3 OK
about IN ^ ^ repeat
from IN from arg2 OK
a DT ^ ^ repeat
uh UH ^ ^ filler
the DT the arg2 OK
world NNP world arg2 OK
trade NNP trade arg2 OK
center NNP center arg2 OK

and CC ^ ^ false_start
there EX there ^ OK
was VBD was predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
portion NN portion arg2 OK
of IN of arg2 OK
the DT the arg2 OK
documentary NN documentary arg2 OK
where WRB where arg2 OK
there EX there arg2 OK
was VBD was arg2 OK
a DT a arg0 OK
guy NN guy arg0 OK
that WDT that arg2 OK
um UH ^ ^ filler
carried VBD carried arg2 OK
a DT a arg1 OK
dude NN dude arg1 OK
that WDT that arg1 OK
was VBD was arg1 OK
in IN in arg2 OK
a DT a arg2 OK
wheel NN wheel arg2 OK
chair NN chair arg2 OK

i PRP ^ ^ repeat
thought VBD ^ ^ false_start
that DT ^ ^ false_start
was VBD ^ ^ false_start
really RB ^ ^ false_start
i PRP ^ ^ repeat
mean VBP ^ ^ filler
i PRP i arg1 OK
ca MD ca ^ OK
n't RB n't ^ OK
even RB even ^ OK
imagine VB imagine predicate OK
being VBG being arg1 OK
in IN in arg2 OK
a DT a arg2 OK
situation NN situation arg2 OK
like IN like arg2 OK
that DT that arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
in IN in ^ OK
a DT a ^ OK
scenario NN scenario ^ OK
like IN like ^ OK
that DT that ^ OK
i PRP i arg0 OK
'd MD 'd ^ OK
be VB be ^ OK
much RB ^ ^ repeat
thinking VBG thinking predicate OK
way RB way arg1 OK
too RB too arg1 OK
much RB much arg1 OK
about IN about arg1 OK
myself PRP myself arg1 OK
to TO to arg1 OK
think VB think arg1 OK
about IN about arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
this DT this arg1 OK
person NN person arg1 OK
or CC or arg1 OK
that DT that arg1 OK
person NN person arg1 OK
especially RB especially arg1 OK
if IN if arg1 OK
i PRP i arg0 OK
did VBD did arg1 OK
n't RB n't arg1 OK
know VB know arg1 OK
him PRP him arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
whole JJ ^ ^ repeat
place NN ^ ^ repeat
like UH ^ ^ filler
it PRP it arg0 OK
is VBZ ^ ^ repeat
's BES 's predicate OK
on IN on arg2 OK
fire NN fire arg2 OK
and CC and ^ false_start
smoldering VBG smoldering ^ OK
whatnot NN ^ predicate false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
fire NN fire ^ OK
fighter NN fighter ^ OK
or CC or ^ OK
not RB not ^ OK
that DT ^ ^ repeat
that DT that arg1 OK
was VBD was predicate OK
bold JJ bold arg2 OK

but CC but ^ OK
i PRP i arg0 OK
remember VBP remember predicate OK
when WRB when arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
o- NNP ^ ^ repeat
o. NNP o. arg1 OK
j. NNP j. arg1 OK
trial NN trial arg1 OK
that WDT ^ arg1 false_start
was VBD was arg1 OK
the DT the arg2 OK
only JJ only arg2 OK
thing NN thing arg2 OK
anybody NN anybody arg0 OK
talked VBD talked arg2 OK
about IN about arg2 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
think VBP think predicate OK
it PRP it arg1 OK
's SBAR-1 's arg1 OK
important BES important arg2 OK
that JJ that arg2 OK
it IN it arg1 OK
be PRP be arg2 OK
available VB available arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
like VB like predicate OK
to TO to arg1 OK
see VB see arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
more JJR more arg1 OK
trials NNS trials arg1 OK
um UH ^ ^ filler
televised VBN televised arg1 OK

uh UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
the DT ^ arg1 false_start
it PRP the ^ false_start
ah UH ^ ^ filler
being VBG ^ ^ false_start
able JJ ^ arg1 false_start
it PRP ability ^ false_start
to TO ^ arg1 false_start
it PRP to ^ false_start
watch VB ^ arg1 false_start
it PRP watch predicate false_start
those DT ^ arg1 false_start
it PRP those ^ false_start
trials NNS ^ arg1 false_start
it PRP trials ^ false_start
's BES is arg1 false_start
less RBR less arg2 OK
important JJ important arg2 OK

how WRB how ^ OK
can MD can ^ OK
i PRP i arg0 OK
put VB put predicate OK
this DT this arg1 OK
best JJS best arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's SBAR-1 's arg1 OK
less BES less arg2 OK
important RBR important arg2 OK
that JJ that arg2 OK
i SBAR-3 i arg0 OK
personally IN personally arg2 OK
see PRP see arg2 OK
o. RB o. arg1 OK
j. VBP j. arg1 OK
's NNP 's arg1 OK
trial NNP trial arg1 OK
or POS ^ ^ repeat
or NN or arg1 OK
ah CC ^ ^ filler
what CC ^ ^ false_start
's UH ^ ^ false_start
the WP ^ ^ false_start
guy BES ^ ^ false_start
blake DT blake arg1 OK
his NN 's ^ false_start
trial NP-PRD-2 trial arg1 OK
than NNP than arg2 OK
it PRP ^ arg1 false_start
is NN ^ arg1 false_start
the IN the arg1 OK
trials PRP trials arg1 OK
in VBZ in arg1 OK
general DT general arg1 OK
be NNS be arg2 OK
public IN public arg2 OK
because JJ because ^ OK
it VB ^ ^ repeat
it PRP ^ ^ repeat
it VBZ it arg0 OK
keeps JJ ^ ^ repeat
keeps DT keeps predicate OK
the IN ^ ^ repeat
the PRP ^ ^ repeat
the NN the arg1 OK
la- PRP ^ ^ repeat
law VBZ ^ ^ repeat
legal NN legal arg1 OK
system DT ^ ^ repeat
system NN system arg1 OK
in DT in arg1 OK
general JJ general arg1 OK
honest NN honesty arg1 false_start

i PRP i arg0 OK
must MD must ^ OK
admit VB admit predicate OK
the DT ^ ^ repeat
ah UH ^ ^ filler
the DT the arg1 false_start
idea NN idea arg1 false_start
of IN of arg1 false_start
a DT a arg1 false_start
celebrity NN celebrity arg1 false_start
trial NN trial arg1 false_start
is VBZ ^ ^ repeat
is VBZ is arg1 OK
a DT ^ ^ repeat
a DT a arg2 OK
little JJ little arg2 OK
off-putting JJ off-putting arg2 OK
to IN to arg2 OK
me PRP me arg2 OK
just RB just ^ OK
because IN because ^ OK
it PRP it arg1 OK
's BES 's predicate OK
such PDT such arg2 OK
a DT a arg2 OK
media NN media arg2 OK
circus NN circus arg2 OK

the DT the ^ OK
ah UH ^ ^ filler

you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
we PRP we ^ OK
watch VBP watch ^ OK
the DT ^ ^ repeat
these DT ^ ^ repeat
ah UH ^ ^ filler
these DT these ^ OK
celebrity NN celebrity ^ OK
trials NNS trials ^ OK
i ADVP-TMP- 1 i ^ OK
have PRP have ^ OK
to VBP to ^ OK
admit TO admit ^ OK
i VB i ^ OK
think PRP think ^ OK
the VBP ^ ^ repeat
the NN the ^ OK
celebrity DT celebrity ^ OK
trial DT ^ ^ repeat
trials NN trials ^ OK
more NNS more ^ OK
than RBR than ^ OK
the IN the ^ OK
oh DT ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
joe VBP joe ^ OK
dokes NNP dokes ^ OK
gets NNP gets ^ OK
pulled VBZ pulled ^ OK
over VBN over ^ OK
for RP for ^ OK
speeding IN speeding ^ OK
for VBG for ^ OK
the IN the ^ OK
fifth DT fifth ^ OK
time JJ time ^ OK
trials NN trials ^ OK

um NNS ^ ^ filler
i UH i arg0 OK
think PRP think predicate OK
they VBP they arg1 OK
're PRP 're arg2 OK
actually VBP actually arg2 OK
a RB ^ ^ repeat
a DT ^ ^ repeat
um JJ ^ ^ filler
a UH a arg2 OK
good DT ^ ^ repeat
good DT good arg2 OK
advertisement JJ advertisement arg2 OK
for NN for arg2 OK
not IN not argM_neg OK
televising RB televising arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
the DT ^ ^ repeat
ah UH ^ ^ filler
the DT the arg0 OK
defense NN defense arg0 OK
uh UH ^ ^ filler
especially RB especially arg1 OK
very RB very arg1 OK
often RB often arg1 OK
want VBP ^ ^ repeat
wants VBZ wants arg1 OK
to TO to arg1 OK
play VB play arg1 OK
out RP out arg_particl OK
the DT the arg1 OK
trial NN trial arg1 OK
in IN in arg1 OK
the DT the arg1 OK
media NN media arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
not RB not ^ OK
so RB so ^ OK
much RB much ^ OK
working SBAR-1 working predicate OK
the VBG the arg1 OK
court DT court arg1 OK
as NN as ^ OK
they IN they arg0 OK
are PRP are ^ OK
working VBP working predicate OK
the VBG the arg1 OK
papers DT papers arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
good JJ good arg2 OK
thing NN thing arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
you PRP you arg1 OK
're VBP 're arg1 OK
right JJ right arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
the DT ^ ^ repeat
ah UH ^ ^ filler
the DT ^ ^ false_start
whole JJ ^ ^ false_start
playing VBG playing arg1 OK
the DT the arg1 OK
media NN media arg1 OK
is VBZ ^ ^ repeat
is VBZ is arg1 OK
a DT a arg2 OK
bad JJ bad arg2 OK
idea NN idea arg2 OK

the DT the arg0 OK
newspapers NNS newspapers arg0 OK
were VBD were ^ OK
forbidden VBN forbidden predicate OK
to TO to arg1 OK
bring VB bring arg1 OK
photography NN photography arg1 OK
equipment NN equipment arg1 OK
into IN into arg2 OK
the DT the arg2 OK
trial NN trial arg2 OK
for IN for argM_tmp OK
just RB just argM_tmp OK
years NNS years argM_tmp OK
and CC and argM_tmp OK
years NNS years argM_tmp OK

and CC ^ ^ false_start
i PRP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
mistake NN mistake arg2 OK

i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
we PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg0 OK
the DT the arg0 OK
people NNS people arg0 OK
should MD ^ ^ repeat
should MD should arg1 OK
be VB ^ ^ repeat
be VB be arg1 OK
able JJ ^ ^ repeat
able JJ able arg2 OK
to TO to arg2 OK
see VB see arg2 OK
our PRP our arg1 OK
government NN government arg1 OK
in IN in arg1 OK
action NN action arg1 OK

well UH ^ ^ false_start
see UH ^ ^ false_start
i PRP ^ ^ false_start
've VBP ^ ^ false_start
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
do VBP ^ ^ false_start
n't RB ^ ^ false_start
uh UH ^ ^ filler
see UH ^ ^ repeat
i PRP ^ ^ repeat
've VBP ^ ^ repeat
uh UH ^ ^ filler
see UH ^ ^ repeat
i PRP i ^ OK
have VBP have ^ OK
been VBN been ^ OK
in IN in ^ OK
the DT the ^ OK
company NN company ^ OK
of IN of ^ OK
people NNS people ^ OK
taking VBG taking ^ OK
drugs NNS drugs ^ OK
before RB before ^ OK

it PRP it ^ OK
make S-1 makes ^ false_start
me VB me ^ OK
sick PRP sick ^ OK
just JJ just ^ OK
to RB to ^ OK
be TO be ^ OK
around VB around ^ OK
that IN that ^ OK
smoke DT smoke ^ OK

it PRP it ^ OK
make VB makes ^ false_start
me PRP me ^ OK
sick JJ sick ^ OK

and CC ^ ^ false_start
some DT some ^ OK
people NNS people ^ OK
they PRP ^ ^ false_start
just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
care VB care ^ OK
where WRB where ^ OK
they PRP they ^ OK
at IN are ^ false_start
at IN at ^ OK

they PRP they'd ^ false_start
be VB be ^ OK
d- XX ^ ^ false_start
on IN on ^ OK
the DT the ^ OK
buses NNS buses ^ OK
or CC ^ ^ repeat
or CC or ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
movies NNS movies ^ OK
in IN in ^ OK
the DT the ^ OK
bath NN bathroom ^ false_start

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'd- MD ^ ^ repeat
'd- MD ^ ^ repeat
get VBP ^ ^ repeat
get VBP get ^ OK
a XX ^ ^ repeat
away RB away ^ OK
from IN from ^ OK
them PRP them ^ OK

once IN once ^ OK
it PRP it ^ OK
get VB gets ^ false_start
in IN in ^ OK
your PRP your ^ OK
system NN system ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
then RB then ^ OK
you PRP you ^ OK
might MD might ^ OK
want VB want ^ OK
to TO to ^ OK
have VB have ^ OK
it PRP it ^ OK

they PRP ^ ^ repeat
s- RB ^ ^ repeat
man UH ^ ^ false_start
they PRP ^ ^ repeat
they PRP they ^ OK
got VBP ^ ^ repeat
got VBN ^ ^ repeat
can MD can ^ OK
do VB do ^ OK
so RB so ^ OK
much JJ much ^ OK
today SBAR-2 today ^ OK
man NN man ^ OK
man JJ ^ ^ repeat
you UH you ^ OK
'd PRP 'd ^ OK
be MD be ^ OK
surprised VB surprised ^ OK

oh UH ^ ^ filler
the DT the ^ OK
phone NN phone ^ OK
number NN number ^ OK
is VBZ is ^ OK
uh UH ^ ^ filler
oh UH ^ ^ filler
wait VB wait ^ OK
a DT a ^ OK
minute NN minute ^ OK
uh UH ^ ^ filler
one CD one ^ OK
eight CD eight ^ OK
hundred CD hundred ^ OK

uh UH ^ ^ filler
one CD one ^ OK
three CD three ^ OK
one CD ^ ^ repeat
one CD one ^ OK
f- CD ^ ^ repeat
five CD five ^ OK

some DT ^ ^ repeat
some DT ^ ^ repeat
some DT some ^ OK
spots NNS spots ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
uh UH ^ ^ filler
g- XX ^ ^ false_start
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
drugs NNS drugs ^ OK

it PRP it ^ OK
's S-1 's ^ OK
hard BES hard ^ OK
to JJ to ^ OK
move TO move ^ OK
in VB in ^ OK
a IN a ^ OK
neighborhood DT neighborhood ^ OK
where NN ^ ^ repeat
where WRB where ^ OK
nobody RB nobody ^ OK
do WRB ^ ^ repeat
n't VBP ^ ^ repeat
do NN ^ ^ repeat
n't VBP ^ ^ repeat
mess RB messes ^ false_start
with VB with ^ OK
drugs IN drugs ^ OK

but CC ^ ^ false_start
i PRP i arg0 OK
remember VBP remember predicate OK
when WRB ^ ^ false_start
the DT ^ ^ repeat
the DT the arg1 OK
o- NNP ^ ^ repeat
o. NNP o. arg1 OK
j. NNP j. arg1 OK
trial NN trial arg1 OK
that WDT ^ ^ false_start
was VBD was arg1 OK
the DT the arg2 OK
only JJ only arg2 OK
thing NN thing arg2 OK
anybody NN anybody arg0 OK
talked VBD talked arg2 OK
about IN about arg_particl OK

i PRP ^ ^ repeat
'm VBP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's SBAR-1 's arg1 OK
important BES important arg2 OK
that JJ that arg1 OK
it IN it arg1 OK
be PRP be arg1 OK
available VB available arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
like VB like predicate OK
to TO to arg1 OK
see VB see arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
more JJR more arg1 OK
trials NNS trials arg1 OK
um UH ^ ^ filler
televised VBN televised arg1 OK

uh UH ^ arg1 filler
i PRP i ^ false_start
think VBP think predicate false_start
the DT ^ ^ false_start
ah UH ^ ^ filler
being VBG being arg1 OK
it PRP ^ predicate false_start
able JJ able arg1 OK
to TO to arg1 OK
watch VB watch arg1 OK
those DT those arg1 OK
trials NNS trials arg1 OK
's BES is predicate false_start
less RBR less arg2 OK
important JJ important arg2 OK

how WRB how ^ OK
can MD can ^ OK
i PRP i arg0 OK
best JJS best ^ false_start
put VB put predicate OK
this DT this arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's SBAR-1 's arg1 OK
less BES less arg2 OK
important RBR important arg2 OK
that JJ that arg1 OK
i SBAR-3 i arg0 OK
personally IN personally arg1 OK
see PRP see arg1 OK
o. RB o. arg1 OK
j. VBP j. arg1 OK
's NNP 's arg1 OK
or POS ^ ^ repeat
or NN or arg1 OK
ah CC ^ ^ filler
what CC ^ ^ false_start
's UH ^ ^ false_start
the WP ^ ^ false_start
guy BES ^ ^ false_start
blake DT ^ arg1 false_start
his NN blake's ^ false_start
trial NNP ^ ^ false_start
trial NP-PRD-2 trial arg1 OK
than NNP than arg1 OK
it PRP ^ ^ false_start
is NN ^ ^ false_start
the IN that arg1 false_start
trials PRP trials arg1 OK
in VBZ in arg1 OK
general DT general arg1 OK
be NNS be arg1 OK
public IN public arg2 OK
because JJ because arg1 OK
it VB ^ ^ repeat
it PRP ^ ^ repeat
it VBZ it arg0 OK
keeps JJ ^ ^ repeat
keeps DT keeps arg1 OK
the IN ^ ^ repeat
the PRP ^ ^ repeat
the NN the arg1 OK
la- PRP ^ ^ repeat
law VBZ ^ ^ repeat
legal NN legal arg1 OK
system DT ^ ^ repeat
system NN system arg1 OK
in DT ^ ^ false_start
general JJ ^ ^ false_start
honest NN honest arg1 OK

the DT ^ ^ repeat
ah UH ^ ^ filler
the DT the arg1 OK
idea NN idea arg1 OK
of IN of arg1 OK
a DT a arg1 OK
celebrity NN celebrity arg1 OK
trial NN trial arg1 OK
i PRP ^ ^ false_start
must MD ^ ^ false_start
admit VB ^ ^ false_start
is VBZ ^ ^ repeat
is VBZ is predicate OK
a DT ^ ^ repeat
a DT ^ ^ false_start
little JJ ^ ^ false_start
off-putting JJ off-putting arg2 OK
to IN to ^ OK
me PRP me ^ OK
just RB ^ ^ false_start
because IN because ^ OK
it PRP it arg1 OK
's BES 's predicate OK
such PDT ^ ^ false_start
a DT a arg2 OK
media NN media arg2 OK
circus NN circus arg2 OK

the DT the ^ OK
ah UH ^ ^ filler

the DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB ^ ^ false_start
we PRP ^ ^ false_start
watch VBP ^ ^ false_start
these DT ^ ^ false_start
ah UH ^ ^ filler
these DT ^ ^ false_start
i ADVP-TMP- 1 ^ ^ false_start
have PRP ^ ^ false_start
to VBP ^ ^ false_start
admit TO ^ ^ false_start
i VB i arg0 OK
think PRP think predicate OK
the VBP ^ ^ repeat
the NN the arg1 OK
celebrity NN ^ ^ repeat
celebrity DT celebrity arg1 OK
trials NNS ^ ^ repeat
trial DT ^ ^ repeat
trials NN trials arg1 OK
they VBP ^ ^ repeat
um NNS ^ ^ filler
i UH ^ ^ repeat
think PRP ^ ^ repeat
're PRP are arg1 OK
more NNS more arg1 false_start
than RBR than arg1 false_start
the IN the arg1 false_start
oh DT ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
joe VBP ^ ^ false_start
dokes NNP ^ ^ false_start
gets NNP ^ ^ false_start
pulled VBZ ^ ^ false_start
over VBN ^ ^ false_start
for RP ^ ^ false_start
speeding IN speeding arg1 false_start
for VBG ^ ^ false_start
the IN ^ ^ false_start
fifth DT ^ ^ false_start
time JJ ^ ^ false_start
trials NN trials arg1 false_start
actually VBP ^ ^ false_start
a RB ^ ^ repeat
a DT ^ ^ repeat
good DT ^ ^ repeat
um JJ ^ ^ filler
a UH a arg2 OK
good DT good arg2 OK
advertisement JJ advertisement arg2 OK
for NN for arg2 OK
not IN not arg2 OK
televising RB televising arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
especially RB especially arg0 false_start
the DT ^ ^ repeat
ah UH ^ ^ filler
the DT the arg0 OK
defense NN defense arg0 OK
uh UH ^ ^ filler
very RB ^ ^ false_start
often RB often argM_tmp OK
want VBP ^ ^ repeat
wants VBZ wants arg1 OK
the DT the arg1 false_start
trial NN trial arg1 false_start
to TO to arg1 OK
play VB play arg1 OK
out RP out arg_particl OK
in IN in argM_loc OK
the DT the argM_loc OK
media NN media argM_loc OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
they IN ^ ^ repeat
're VBP ^ ^ repeat
're VBP 're arg0 OK
are PRP ^ ^ repeat
not RB not ^ OK
working SBAR-1 working ^ OK
working VBP ^ predicate repeat
the VBG the arg1 OK
court DT court arg1 OK
so RB as arg1 false_start
much RB much arg1 false_start
as NN as arg1 OK
the VBG the arg1 OK
papers DT papers arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
good JJ good arg2 OK
thing NN thing arg2 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
you PRP you arg1 OK
're VBP 're arg1 OK
right JJ right arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
the DT ^ ^ repeat
ah UH ^ ^ filler
the DT ^ ^ false_start
whole JJ ^ ^ false_start
playing VBG playing arg1 OK
the DT the arg1 OK
media NN media arg1 OK
is VBZ ^ ^ repeat
is VBZ is arg1 OK
a DT a arg2 OK
bad JJ bad arg2 OK
idea NN idea arg2 OK

the DT the arg0 OK
newspapers NNS newspapers arg0 OK
were VBD were ^ OK
forbidden VBN forbidden predicate OK
to TO to arg1 OK
bring VB bring arg1 OK
photography NN photography arg1 OK
equipment NN equipment arg1 OK
into IN to argM_loc false_start
the DT the argM_loc OK
trial NN trial argM_loc OK
for IN for argM_tmp OK
just RB ^ ^ false_start
years NNS years argM_tmp OK
and CC ^ ^ repeat
years NNS ^ ^ repeat

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
mistake NN mistake arg2 OK

i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
we PRP ^ ^ repeat
know VBP ^ ^ filler
we PRP we arg0 OK
you PRP ^ ^ filler
the DT the arg0 OK
people NNS people arg0 OK
should MD ^ ^ repeat
should MD should arg1 OK
be VB ^ ^ repeat
be VB be arg1 OK
able JJ ^ ^ repeat
able JJ able arg2 OK
to TO to argM_other OK
see VB see argM_other OK
our PRP our arg1 OK
government NN government arg1 OK
in IN in arg1 OK
action NN action arg1 OK

uh UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
because IN because argM_cause OK
i PRP i arg1 OK
get VBP get arg2 OK
to TO to arg1 OK
be VB be arg1 OK
something NN something arg2 OK
that WDT that arg2 OK
i PRP i arg1 OK
'm VBP 'm arg2 OK
not RB not argM_neg OK

i PRP i arg0 OK
really RB really argM_extent OK
like VBP like predicate OK
um UH ^ ^ filler
to TO to arg1 OK
see VB see arg1 OK
other JJ other arg1 OK
people NNS people arg1 OK
on IN on argM_tmp OK
halloween NNP halloween argM_tmp OK

so UH ^ ^ false_start
it PRP ^ ^ false_start
we PRP we arg0 OK
thought VBD thought predicate OK
that DT that arg1 OK
was VBD was arg1 OK
pretty RB pretty arg2 OK
funny JJ funny arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
christmas NNP christmas arg1 OK
would MD would argM_mod OK
be VB be arg1 OK
my PRP ^ ^ repeat
my PRP my arg2 OK
second RB second arg2 OK
favorite JJ favorite arg2 OK
holiday NN holiday arg2 OK

as RB ^ ^ false_start
far RB ^ ^ false_start
as IN ^ ^ false_start
are VBP are predicate OK
you PRP you arg1 OK
a DT a arg2 OK
religious JJ religious arg2 OK
person NN person arg2 OK

do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
like VB like predicate OK
it PRP it arg1 OK
for IN for argM_purpos OK
religious JJ religious argM_purpos OK
reasons NNS reasons argM_purpos OK
as RB ^ ^ false_start
well RB ^ ^ false_start

we- XX ^ ^ false_start
wel- XX ^ ^ false_start
my PRP my arg1 OK
girlfriend NN girlfriend arg1 OK
and CC and arg1 OK
i PRP i arg1 OK
went VBD went predicate OK
to IN to arg4 OK
a DT a arg4 OK
wedding NN wedding arg4 OK
this DT this argM_tmp OK
weekend NN weekend argM_tmp OK
at IN at argM_loc OK
the DT the argM_loc OK
beach NN beach argM_loc OK

and CC ^ ^ false_start
um UH ^ ^ filler
we PRP we arg0 OK
were VBD were ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
how WRB how argM_mnr OK
at IN at argM_loc OK
the DT the argM_loc OK
beach NN beach argM_loc OK
for IN for argM_cause OK
some DT some argM_cause OK
reason NN reason argM_cause OK
they PRP ^ ^ repeat
they PRP they arg0 OK
seem VBP seem arg1 OK
to TO ^ ^ false_start
really RB ^ ^ false_start
to TO to arg2 OK
play VB play arg2 OK
up RP up arg_particl OK
the DT the arg1 OK
santa NNP santa arg1 OK
claus NNP claus arg1 OK
aspect NN aspect arg1 OK
of IN of arg1 OK
christmas NNP christmas arg1 OK

and CC ^ ^ false_start
there EX there ^ OK
's BES 's ^ OK
just RB just ^ OK
just RB _ARG_ ^ false_start

i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP guess ^ OK

and CC ^ ^ false_start
we PRP ^ ^ false_start
're VBP ^ ^ false_start
we PRP we arg0 OK
decided VBD decided predicate OK
that IN that arg1 OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's arg1 OK
because IN because argM_cause OK
the DT ^ ^ false_start
th- EX ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there arg1 OK
are VBP are arg2 OK
just RB just argM_discou OK
so RB so arg2 OK
many JJ many arg2 OK
souvenir NN souvenir arg2 OK
shops NNS shops arg2 OK
at IN at arg2 OK
the DT the arg2 OK
beach NN beach arg2 OK

and CC ^ arg1 false_start
we PRP we arg0 OK
figured VBD figured predicate OK
that IN that arg1 OK
santa NNP santa arg1 OK
claus NNP claus arg1 OK
was VBD was arg1 OK
the DT the arg2 OK
ultimate JJ ultimate arg2 OK
cliche NN cliche arg2 OK
for IN for arg2 OK
christmas NNP christmas arg2 OK
in IN in arg2 OK
a DT a arg2 OK
consumer NN consumer arg2 OK
culture NN culture arg2 OK
etcetera FW ^ ^ false_start
etcetera FW ^ ^ false_start

and CC ^ ^ repeat
and CC ^ ^ false_start
um UH um ^ OK

so UH ^ ^ filler
we PRP we arg0 OK
just RB just argM_tmp OK
decided VBD decided predicate OK
that IN that arg1 OK
that DT that arg1 OK
's BES 's arg1 OK
why WRB why argM_cause OK
there EX there arg1 OK
were VBD were arg2 OK
so RB so arg2 OK
many JJ many arg2 OK
santa NNP santa arg2 OK
decorations NNS decorations arg2 OK
at IN at arg2 OK
the DT the arg2 OK
beach NN beach arg2 OK

um UH ^ ^ filler
so UH ^ ^ false_start
well UH ^ ^ filler
another DT another arg1 OK
thing NN thing arg1 OK
i PRP i arg1 OK
like VBP like arg1 OK
about IN about arg1 OK
christmas NNP christmas arg1 OK
is VBZ is predicate OK
the DT ^ ^ repeat
um UH ^ ^ filler
the DT ^ ^ repeat
the DT the arg2 OK
family NN family arg2 OK
aspect NN aspect arg2 OK
of IN of arg2 OK
it PRP it arg2 OK
and CC and arg2 OK
just RB just argM_discou OK
not RB not argM_neg OK
doing VBG doing arg2 OK
anything NN anything arg1 OK
for IN for argM_tmp OK
a DT a argM_tmp OK
whole JJ whole argM_tmp OK
day NN day argM_tmp OK
but CC but argM_discou OK
getting VBG getting arg2 OK
to TO to arg1 OK
hang VB hang arg1 OK
out RP out arg2 OK
with IN with arg2 OK
my PRP my arg2 OK
family NN family arg2 OK

um UH ^ ^ filler
so UH ^ ^ filler
for IN for arg1 OK
the DT the arg1 OK
second JJ second arg1 OK
part NN part arg1 OK
which WDT which arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
guess VBP guess predicate OK
you PRP you arg0 OK
did VBD did arg1 OK
n't RB n't argM_neg OK
hear VB hear arg1 OK
i PRP ^ ^ repeat
i NP-1 i arg0 OK
'm VBP ^ ^ repeat
'm PRP 'm ^ OK
thinking VBG ^ ^ repeat
thinking VBP thinking predicate OK
the VBG ^ ^ false_start
if IN if argM_adverb OK
i IN i arg0 OK
had PRP had argM_mod OK
to VBD to argM_mod OK
make TO make arg1 OK
up VB up arg_particl OK
a RP a arg1 OK
holiday DT holiday arg1 OK
it NN it arg0 OK
would PRP would argM_mod OK
combine MD combine arg1 OK
halloween VB halloween arg1 OK
and NNP and arg1 OK
christmas CC christmas arg2 OK
kind NNP ^ ^ false_start
of RB ^ ^ false_start
like RB like arg3 OK
a IN a arg3 OK
nightmare DT nightmare arg3 OK
before NNP before arg3 OK
christmas IN christmas arg3 OK

if IN if ^ OK
you PRP you ^ OK
could MD could ^ OK
dress VB dress ^ OK
up RP up ^ OK
and CC and ^ OK
be VB be ^ OK
something NN something ^ OK
that WDT that ^ OK
your PRP you ^ false_start
your PRP 're ^ false_start
not RB not ^ OK

that DT ^ ^ repeat
that DT that arg1 OK
'd MD ^ ^ repeat
'd MD 'd argM_mod OK
be VB ^ ^ repeat
be VB be predicate OK
pretty RB pretty arg2 OK
neat JJ neat arg2 OK

and CC ^ ^ repeat
nobody NN ^ ^ repeat
and CC ^ ^ false_start
nobody NN nobody arg1 OK
gets VBZ ^ ^ repeat
makes VBZ makes arg1 OK
a DT ^ arg0 repeat
a DT a arg1 OK
big JJ big arg1 OK
turkey NN turkey arg1 OK
or CC or arg1 OK
ham NN ham arg1 OK
or CC or arg3 OK
anything NN anything arg3 OK
for IN for ^ OK
halloween NNP halloween ^ OK

how WRB ^ ^ repeat
how WRB how ^ OK
did VBD did ^ OK
you PRP you arg0 OK
do VB do predicate OK
that DT that arg1 OK
at IN at argM_tmp OK
that DT the argM_tmp OK
time NN time argM_tmp OK

how WRB how ^ OK
long RB long ^ OK
does VBZ does ^ OK
it PRP it arg0 OK
take S-1 take predicate OK
to VB ^ ^ repeat
to TO to ^ OK
do TO do predicate OK
that VB that arg1 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
can MD ^ ^ repeat
can MD ^ ^ repeat
can MD can ^ OK
understand VB understand predicate OK
that DT that arg1 OK
argument NN argument arg1 OK

so UH so ^ OK
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
hard JJ hard ^ OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
good JJ good arg2 OK
thing NN thing arg2 OK

boston NNP boston arg0 OK
recently RB recently ^ OK
banned VBD banned predicate OK
that DT that arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
thing NN thing arg1 OK
in IN in argM_loc OK
all DT all argM_loc OK
of IN of argM_loc OK
the DT the argM_loc OK
bars NNS bars argM_loc OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
and CC and argM_loc OK
nightclubs NNS nightclubs argM_loc OK
and CC and argM_loc OK
restaurants NNS restaurants argM_loc OK
here RB here argM_loc OK
i PRP ^ ^ false_start
think VBP ^ ^ false_start

but CC ^ ^ false_start
there EX there arg1 OK
are VBP are predicate OK
a DT a arg2 OK
few JJ few arg2 OK
bars NNS bars arg2 OK
that WDT that arg0 OK
ah UH ^ ^ filler
had VBD had arg2 OK
applied VBN applied arg2 OK
for IN for arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
specific JJ specific arg1 OK
smoking NN smoking arg1 OK
license NN license arg1 OK
before IN before argM_tmp OK
that DT that arg0 OK
ban NN ban arg0 OK
took VBD took argM_tmp OK
effect NN effect arg1 OK

but CC ^ ^ false_start
ah UH ^ ^ filler
ah UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
have VBP ^ ^ repeat
have VB have ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
heard VBN heard predicate OK
any DT any arg1 OK
more JJR more arg1 OK
about IN about arg1 OK
those DT those arg1 OK
programs NNS programs arg1 OK

it PRP it arg0 false_start
seems VBZ seems predicate false_start
you PRP ^ ^ repeat
yeah UH ^ ^ filler
you PRP ^ ^ repeat
you PRP you arg0 OK
're VBP ^ ^ repeat
're VBP ^ ^ repeat
're VBP 're arg1 OK
preaching VBG preaching arg1 OK
to IN to arg1 OK
the DT the arg1 OK
wrong JJ wrong arg1 OK
people NNS people arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
like IN ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
know VBP know predicate OK
a DT a arg1 OK
lo- NN lot arg1 false_start

everybody NN everybody arg0 OK
knows VBZ knows predicate OK
the DT the arg1 OK
risk NN risk arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
by IN by argM_tmp false_start
now RB now argM_tmp false_start

but CC ^ ^ false_start
they PRP they arg0 OK
just RB just ^ OK
decided VBD decided predicate OK
that IN that arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
worth JJ worth arg2 OK
it PRP it arg2 OK
to IN to arg2 OK
them PRP them arg2 OK

how WRB ^ ^ repeat
um UH ^ ^ filler
how WRB how ^ OK
would MD ^ ^ repeat
would MD would ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
go VB go ^ OK
about RB about ^ OK
opening VBG opening ^ OK
it PRP it ^ OK
if IN if ^ OK
money NN money ^ OK
's BES 's ^ OK
not RB not ^ OK
an DT an ^ OK
issue NN issue ^ OK

um UH ^ ^ filler
mine PRP ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
w- MD ^ ^ repeat
'd MD ^ ^ repeat
would MD would ^ OK
pick VB pick ^ OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
different JJ different ^ OK
things NNS things ^ OK

eh UH ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
either RB either ^ OK
open VB open ^ OK
up RP up ^ OK
my PRP my ^ OK
own JJ own ^ OK
daycare NN daycare ^ OK
center NN center ^ OK
or CC or ^ OK
like UH ^ ^ filler
in IN in ^ OK
advertising NN advertising ^ OK
because IN because ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
like VBP ^ ^ repeat
like VBP like ^ OK
working VBG working ^ OK
with IN with ^ OK
like UH ^ ^ filler
children NNS children ^ OK

but CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i ^ OK
would MD would ^ OK
have VB have ^ OK
to TO to ^ OK
go VB go ^ OK
and CC and ^ OK
and CC ^ ^ repeat
um UH ^ ^ filler
take VB take ^ OK
take VB ^ ^ repeat
a DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
courses NNS courses ^ OK
the DT ^ ^ repeat
classes NNS ^ ^ repeat
on IN on ^ OK
how WRB ^ ^ false_start
to TO ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
everything NN everything ^ OK
about IN about ^ OK
the DT the ^ OK
daycare NN daycare ^ OK
center NN center ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
learn VB learn ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
everything NN everything ^ OK
there EX there ^ OK
is VBZ is ^ OK
about IN about ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
like UH ^ ^ filler
a DT a ^ OK
they PRP ^ ^ false_start
lot NN lot ^ OK
they PRP ^ ^ false_start
of IN of ^ OK
they PRP ^ ^ false_start
people NNS people ^ OK
they PRP ^ ^ false_start
that WDT that ^ OK
i PRP i ^ OK
know VBP know ^ OK
like UH ^ ^ filler
at IN at ^ OK
w- NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
work NN work ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
they PRP ^ ^ false_start
will MD ^ ^ false_start
've VBP have ^ false_start
told VBN told ^ OK
me PRP me ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
they PRP they ^ OK
want VBP want ^ OK
their PRP their ^ OK
children NNS children ^ OK
to TO to ^ OK
go VB go ^ OK
to IN to ^ OK
daycare NN daycare ^ OK

and UNK ^ ^ false_start
they UNK they ^ OK
say UNK say ^ OK
it UNK it ^ OK
's UNK 's ^ OK
so UNK ^ ^ filler
hard UNK hard ^ OK
to UNK to ^ OK
try UNK try ^ OK
to UNK to ^ OK
find UNK find ^ OK
a UNK a ^ OK
place UNK place ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
to UNK to ^ OK
put UNK put ^ OK
their UNK their ^ OK
kids UNK kids ^ OK
in UNK in ^ OK
daycare UNK daycare ^ OK
because UNK because ^ OK
there UNK there ^ OK
's UNK are ^ false_start
like UNK ^ ^ filler
like UNK ^ ^ filler
l- UNK ^ ^ repeat
long UNK long ^ OK
waiting UNK ^ ^ repeat
waiting UNK waiting ^ OK
lists UNK ^ ^ repeat
lists UNK lists ^ OK
because UNK because ^ OK
people UNK people ^ OK
are UNK are ^ OK
picky UNK picky ^ OK
about UNK about ^ OK
who UNK who ^ OK
they UNK they ^ OK
take UNK take ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
have VB have ^ OK
to TO to ^ OK
consider VB consider ^ OK
all PDT all ^ OK
the DT the ^ OK
options NNS options ^ OK
about IN about ^ OK
what WP what ^ OK
kind NN kind ^ OK
of IN of ^ OK
children NNS children ^ OK
i PRP i ^ OK
would MD would ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
allow VB allow ^ OK
in IN in ^ OK
my PRP my ^ OK
daycare NN daycare ^ OK
center NN center ^ OK
because IN because ^ OK
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
be VB be ^ OK
cautious JJ cautious ^ OK
about IN about ^ OK
things NNS things ^ OK
like IN like ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
lice NN lice ^ OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
sit- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
germs NNS germs ^ OK

and CC ^ ^ false_start
you PRP ^ ^ repeat
you PRP you ^ OK
n- RB ^ ^ repeat
never RB never ^ OK
know VBP know ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
think VB think ^ OK
about IN about ^ OK
those DT those ^ OK
kind NN kind ^ OK
of IN of ^ OK
things NNS things ^ OK
and CC and ^ OK
just RB ^ ^ filler
like UH ^ ^ filler
the DT the ^ OK
regulations NNS regulations ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
like UH ^ ^ filler
i PRP ^ ^ false_start
'd MD ^ ^ false_start
like IN like ^ OK
you PRP you ^ OK
said VBD said ^ OK
i PRP i ^ OK
would MD would ^ OK
have VB have ^ OK
to TO to ^ OK
advertise VBP advertise ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN for ^ OK
my PRP my ^ OK
business NN business ^ OK

and CC ^ ^ false_start
um UH um ^ OK

i PRP ^ ^ false_start
w- MD ^ ^ false_start
i PRP ^ ^ false_start
myself PRP ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
i PRP i ^ OK
would MD would ^ OK
be VB be ^ OK
picky JJ picky ^ OK
about IN about ^ OK
it PRP it ^ OK

i PRP i ^ OK
w- MD ^ ^ repeat
would MD would ^ OK
want VB want ^ OK
them PRP them ^ OK
to TO to ^ OK
be VB be ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
just RB just ^ OK
going VBG going ^ OK
to TO to ^ OK
have VB have ^ OK
daycare NNP a ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
small JJ small ^ OK
daycare NNP daycare ^ OK
center NNP center ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
if IN ^ ^ repeat
you PRP ^ ^ repeat
if IN ^ ^ false_start
you PRP ^ ^ false_start
really RB ^ ^ false_start
wanted VBD ^ ^ false_start
to TO ^ ^ false_start
you VP ^ ^ filler
know PRP ^ ^ filler
i VBP i ^ OK
guess PRP guess ^ OK
they VBP they ^ OK
really PRP really ^ OK
would RB would ^ OK
n't MD n't ^ OK
have RB have ^ OK
to VB to ^ OK

but CC ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
maybe RB maybe ^ OK
you PRP you ^ OK
could MD could ^ OK
get VB get ^ OK
more JJR more ^ OK
business NN business ^ OK
that DT that ^ OK
way NN way ^ OK

i PRP ^ ^ false_start
w- MD ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
just RB ^ ^ false_start
it PRP it ^ OK
seems VBZ seems ^ OK
like IN like ^ OK
it PRP it ^ OK
'd S-1 'd ^ OK
be MD be ^ OK
a VB a ^ OK
lot DT lot ^ OK
more NN more ^ OK
easier RBR easier ^ OK
to JJR to ^ OK
you TO ^ ^ filler
know PRP ^ ^ filler
have VBP have ^ OK
some VB some ^ OK
sort DT ^ ^ filler
of NN ^ ^ filler
standards IN standards ^ OK
you NNS ^ ^ filler
know PRP ^ ^ filler
like VBP ^ ^ filler
certain UH ^ ^ false_start
things JJ ^ ^ false_start
like NNS ^ ^ false_start
that IN ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
would MD would ^ OK
have VB have ^ OK
to TO to ^ OK
be VB be ^ OK
for IN for ^ OK
uh UH a ^ false_start
d- XX ^ ^ false_start
number NN number ^ OK
of IN of ^ OK
rooms NNS rooms ^ OK

so UH ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
roommate NN roommate arg1 OK

so UH ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
is NP-1 ^ ^ false_start
she VBZ she arg0 OK
smokes PRP smokes predicate OK
out VBZ out argM_loc OK
on IN on argM_loc OK
the IN the argM_loc OK
patio DT patio argM_loc OK
uh NN ^ ^ filler
and UH ^ ^ repeat
and CC ^ ^ repeat
and VBZ and ^ OK
cl- CC ^ ^ repeat
closes CC ^ ^ repeat
closes DT closes predicate OK
the VBZ ^ ^ repeat
the VBZ the arg1 OK
patio DT patio arg1 OK
door NN door arg1 OK

which WDT which arg1 OK
is VBZ is predicate OK
nice JJ nice arg2 OK
of IN of arg2 OK
her PRP her arg2 OK

it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
weird JJ weird ^ OK
because IN because ^ OK
well UH well ^ OK
i PRP ^ ^ repeat
would MD ^ ^ repeat
just RB ^ ^ repeat
it PRP ^ ^ repeat
's BES ^ ^ repeat
just RB ^ ^ repeat
like UH ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
smoke VB smoke ^ OK
then RB then ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
that RB that ^ OK
uh UH ^ ^ filler

it PRP it ^ OK
's BES 's ^ OK
this DT this ^ OK
last JJ last ^ OK
year NN year ^ OK
in IN in ^ OK
new NNP new ^ OK
york NNP york ^ OK
well UH ^ ^ filler
because UH because ^ OK

i PRP i arg1 OK
go VBP go predicate OK
back RB back arg4 OK
to IN to arg4 OK
new NNP new arg4 OK
york NNP york arg4 OK

no DT no ^ OK
smoking NN smoking predicate OK
in IN ^ ^ repeat
in IN in argM_loc OK
restaurants NNS restaurants argM_loc OK
because IN because ^ OK
that DT that arg1 OK
was VBD was predicate OK
always RB always arg2 OK
weird JJ weird arg2 OK
back RB back arg2 OK
there RB there arg2 OK

you PRP you ^ OK
'd MD 'd ^ OK
be VB be ^ OK
eating VBG eating ^ OK
breakfast NN breakfast ^ OK
breakfast NN or ^ false_start
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK
and CC and ^ OK
having VBG having ^ OK
a DT a ^ OK
nice JJ nice ^ OK
dinner NN dinner ^ OK

and CC ^ ^ false_start
back RB back ^ OK
there RB there ^ OK
was VBD was ^ OK
like UH ^ ^ filler
a DT a ^ OK
big JJ big ^ OK
to TO to ^ OK
do VB do ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
an- CC ^ ^ repeat
an- CC ^ ^ repeat
and CC ^ ^ repeat
finally RB ^ ^ repeat
and CC ^ ^ repeat
finally RB finally ^ OK
peop- NNS ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS people arg1 OK
did VBD did argM_neg OK
n't RB n't argM_neg OK
go VB go predicate OK
out IN out arg4 OK
of IN of arg4 OK
business NN business arg4 OK

it PRP it ^ OK
just RB just ^ OK

well UH well ^ OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
my PRP ^ ^ repeat
my PRP ^ ^ repeat
my PRP my arg1 OK
friends NNS friends arg1 OK
are VBP are predicate OK
on IN on arg2 OK
the DT the arg2 OK
program NN program arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK

i PRP i arg1 OK
'm VBP 'm predicate OK
mild JJ mild arg2 OK
about IN about arg2 OK
it PRP it arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK

but CC ^ ^ repeat
but CC but ^ OK
at IN ^ ^ repeat
i PRP i arg0 OK
mo- XX ^ ^ repeat
have VBP have predicate OK
friends NNS friends arg1 OK
on IN on arg1 OK
the DT the arg1 OK
program NN program arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg1 OK
used VBD used ^ OK
to TO to ^ OK
be VB be predicate OK
a DT a arg2 OK
musician NN musician arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
so UH ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

um UH ^ ^ filler
as IN as ^ false_start
i PRP i arg0 false_start
said VBD said predicate false_start
i PRP i arg1 OK
'm VBP 'm arg1 OK
not RB not arg2 OK
quite RB quite arg2 OK
sure JJ sure arg2 OK
what S ^ ^ repeat
what WP what arg1 OK
they WP they arg0 OK
're PRP 're arg1 OK
looking VBP looking arg1 OK
for VBG for arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
guess VBP ^ ^ repeat
i- XX ^ ^ repeat
th- XX ^ ^ repeat
be VB ^ ^ repeat
cut VB cut ^ OK
it PRP it ^ OK
down RP down ^ OK
to IN to ^ OK
the DT the ^ OK
chase NNP chase ^ OK

the DT the arg1 OK
biggest JJS biggest arg1 OK
pain NN pain arg1 OK
in IN in arg1 OK
the DT the arg1 OK
ass NN ass arg1 OK
is VBZ is predicate OK
somebody NN somebody arg2 OK
who WP ^ ^ repeat
who WP who arg1 OK
's BES 's arg2 OK
a DT a arg2 OK
drunk NN drunk arg2 OK
and CC and arg2 OK
who WP who arg0 OK
smokes VBZ smokes arg2 OK

and CC and ^ OK
uh UH uh ^ OK

it PRP it ^ OK
's BES 's ^ OK

it PRP it arg0 OK
's BES 's ^ OK
like RP like ^ OK
am VBP i ^ false_start
am VBP 'm ^ false_start
watching VBG watching predicate OK
the DT the arg1 OK
baseball NN baseball arg1 OK
game NN game arg1 OK
now RB now argM_tmp OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX ^ ^ repeat
there EX there arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a UH ^ ^ repeat
jennifer NNP jennifer arg2 OK
and CC ^ ^ repeat
uh UH ^ ^ filler
and CC and arg2 OK
ben NNP ben arg2 OK

yeah UNK yeah ^ OK
i UNK i ^ OK
sometimes UNK sometimes ^ OK
so UNK ^ ^ filler
and UNK ^ ^ filler
uh UNK ^ ^ filler

it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ repeat
's BES ^ ^ repeat
well UH well ^ OK
we PRP we arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
know VB know predicate OK
how WRB how arg2 OK
old JJ old arg2 OK
you PRP you arg1 OK
are VBP are arg1 OK
but ADJP-PRD- 1 but ^ OK
i CC ^ ^ repeat
i VBP i arg1 OK
'm PRP ^ ^ repeat
'm PRP 'm predicate OK
sixty VBP sixty arg2 OK

but CC but ^ OK
the DT the ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB ^ ^ repeat
when WRB when ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
hit VBP ^ ^ repeat
hit VBD hit predicate OK
like UH ^ ^ filler
fifty CD fifty arg1 OK
the ADVP-TMP- 1 the arg1 OK
metabolism DT metabolism arg1 OK
stopped NN stopped predicate OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
walk VBP walk predicate OK
two CD two arg1 OK
two CD or arg1 false_start
three CD three arg1 OK
miles NNS miles arg1 OK
a DT a argM_tmp OK
day NN day argM_tmp OK

and CC ^ ^ repeat
you PRP ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ OK
you PRP you arg0 OK
just RB ^ ^ repeat
just RB just ^ OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
eat VB eat predicate OK
at RB at ^ OK
all RB all ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
at RB ^ ^ repeat
all RB ^ ^ repeat
and CC ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
ju- RB ^ ^ repeat
just RB just arg2 OK
that IN that arg2 OK
well UH ^ arg2 filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
's BES ^ ^ repeat
l- XX ^ ^ repeat
i- XX ^ ^ repeat
you PRP ^ ^ filler
mean VBP ^ ^ filler
the DT ^ ^ repeat
my PRP my arg1 OK
metab- NN ^ ^ repeat
metabolism NN metabolism arg1 OK
is VBZ is arg2 OK
zero CD zero arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
one CD ^ ^ false_start
of IN ^ ^ false_start
my PRP ^ ^ false_start
i PRP i arg0 OK
walk VBP walk predicate OK
everyday RB everyday argM_tmp OK

but CC but ^ OK
still RB still argM_tmp OK
i PRP i arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
hardly RB ^ ^ false_start
you PRP ^ ^ filler
know VBP hardly ^ filler
lose VB lose predicate OK
any DT any arg1 OK
weight NN weight arg1 OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
not RB ^ ^ repeat
and CC ^ ^ false_start
as RB as ^ OK
much JJ much ^ OK
as IN as ^ OK
i PRP i arg0 OK
would MD would ^ OK
like VB like ^ OK
to TO to ^ OK
exercise VB exercise predicate OK
more RBR more ^ OK
it PRP ^ ^ repeat
's BES ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
find VBP find predicate OK
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP it arg1 OK
very RB ^ ^ repeat
very RB very arg1 OK
difficult JJ difficult arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
always RB always argM_tmp OK
've VBP ^ ^ repeat
've VBP ^ ^ repeat
have VB have ^ OK
found VBN found predicate OK
it PRP it arg1 OK
difficult S-2 difficult arg1 OK
to JJ to arg1 OK
get TO get arg1 OK
uh VB ^ ^ filler
what UH ^ ^ false_start
's WP ^ ^ false_start
the BES ^ ^ false_start
word DT ^ ^ false_start
am NN ^ ^ false_start
looking VBP ^ ^ false_start
for VBG ^ ^ false_start
disciplined IN disciplined arg1 OK

that DT that arg1 OK
's BES 's predicate OK
why WRB why arg2 OK
i PRP i arg0 OK
hitch VB hitch arg2 OK

i PRP i arg0 OK
usually RB usually ^ OK
walk VBP walk predicate OK
to IN to arg1 OK
toluca NNP toluca arg1 OK
lake NNP lake arg1 OK
every DT every argM_tmp OK
morning NN morning argM_tmp OK

that DT that ^ OK
way NN way ^ OK
at RB at ^ OK
least RBS least ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
seeing VBG seeing predicate OK
some DT some arg1 OK
scenery NN scenery arg1 OK
and CC and arg1 OK
some DT some arg0 OK
people NNS people arg0 OK
walking VBG walking arg1 OK
by RB by arg1 OK
or CC or arg1 OK
cars NNS cars arg0 OK
walking VBG driving arg1 false_start
by RB by arg1 OK
and CC ^ arg1 false_start
something NN ^ arg1 false_start

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
eighty CD eighty arg2 OK
degrees NNS degrees arg2 OK
today NN today argM_tmp OK

i PRP ^ ^ repeat
i PRP i ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'm VBP 'm ^ OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
trying VBG trying ^ OK
trying VBG ^ ^ repeat
trying VBG ^ ^ repeat
to TO ^ ^ repeat
to TO to ^ OK
yo- XX ^ ^ repeat
get VB ^ ^ repeat
get VB get ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
credit NN credit ^ OK
together RB together ^ OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
everything NN everything ^ OK
's BES 's ^ OK
based VBN based ^ OK
on IN on ^ OK
credit NN credit ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB ^ ^ repeat
when WRB ^ ^ repeat
when WRB when ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
go VBP ^ ^ repeat
go VBP go ^ OK
f- IN ^ ^ repeat
for IN for ^ OK
the DT the ^ OK
house NN house ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
everything NN everything ^ OK

i PRP ^ ^ repeat
well UH ^ ^ false_start
i PRP i ^ OK
said VBD ^ ^ repeat
said VBD said ^ OK
look UH ^ ^ false_start
i PRP i ^ OK
'll MD 'll ^ OK
go VB go ^ OK
through IN through ^ OK
the DT the ^ OK
trials NNS trials ^ OK
and CC and ^ OK
tribulations NNS tribulations ^ OK
right RB right ^ OK
now RB now ^ OK

pay- VB ^ ^ false_start
i PRP i ^ OK
paid VBD paid ^ OK
my PRP my ^ OK
landlord NN landlord ^ OK
the DT the ^ OK
rent NN rent ^ OK

eh UH ^ ^ filler
oh UH ^ ^ filler
yeah UH yeah ^ OK

you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
forty CD ^ ^ repeat
f- CD ^ ^ repeat
forty-five CD ^ ^ repeat
forty-five CD forty-five ^ OK

well UH ^ ^ false_start
it PRP it ^ OK
used VBD used ^ OK
to TO to ^ OK
be VB be ^ OK
thirty CD thirty ^ OK

it PRP it ^ OK
was VBD was ^ OK
forty-five CD forty-five ^ OK
days NNS days ^ OK
from IN from ^ OK
the DT the ^ OK
date NN date ^ OK
of IN of ^ OK
your PRP your ^ OK
due JJ due ^ OK
date NN date ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so RB so ^ OK
if IN if ^ OK
you PRP you ^ OK
due JJ are ^ false_start
due JJ due ^ OK
on IN on ^ OK
the DT the ^ OK
first NN first ^ OK
you PRP you ^ OK
got VBP got ^ OK
forty-five CD forty-five ^ OK
days NNS days ^ OK
to TO to ^ OK
pay VB pay ^ OK
that DT that ^ OK
rent NN rent ^ OK

now UH ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
owe VBP owe ^ OK
like UH ^ ^ filler
three CD three ^ OK
hundred CD hundred ^ OK
and CC and ^ OK
fifty CD fifty ^ OK
dollars NNS dollars ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your ^ OK
stuff NN stuff ^ OK
is VBZ is ^ OK
more JJR more ^ OK
than IN than ^ OK
three CD three ^ OK
hundred CD hundred ^ OK
and CC and ^ OK
fifty CD fifty ^ OK
dollars NNS dollars ^ OK

um UH ^ ^ filler
university NNP university ^ OK
city NNP city ^ OK
would MD would ^ OK
be VB be ^ OK
nice JJ nice ^ OK
because IN because ^ OK
of IN of ^ OK
the DT the ^ OK
houses NNS houses ^ OK

now UH now ^ OK
the DT the ^ OK
rent NN ^ ^ repeat
rent NN rent ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
expensive JJ expensive ^ OK
uh UH ^ ^ filler
way RB way ^ OK
up RB up ^ OK
in IN in ^ OK
mount NNP mount ^ OK
what WP ^ ^ filler
's BES ^ ^ filler
that DT ^ ^ filler
chestnut NNP chestnut ^ OK
hill NNP hill ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
quiet JJ quiet ^ OK

only RB only ^ OK
th- DT ^ ^ false_start
maybe RB maybe ^ OK
the DT ^ ^ false_start
post NN ^ ^ false_start
off- NN ^ ^ false_start
the DT the ^ OK
postman NNP postman ^ OK
knows VBZ knows ^ OK

wa- XX ^ ^ false_start
away RB away ^ OK
from IN from ^ OK
things NNS things ^ OK
because IN because ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
got VBP ^ ^ repeat
got VBD got ^ OK
certain JJ certain ^ OK
places NNS places ^ OK
in IN ^ ^ repeat
in IN in ^ OK
philadelphia NNP philadelphia ^ OK
that WDT that ^ OK
's BES 's ^ OK
like UH ^ ^ filler
dead JJ dead ^ OK
end NN end ^ OK
streets NNS streets ^ OK
maybe RB maybe ^ OK
like UH ^ ^ filler
two CD two ^ OK
three CD three ^ OK
houses NNS houses ^ OK
on IN on ^ OK
the DT the ^ OK
street NN street ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
postman NNP postman ^ OK
know VBP knows ^ false_start
shoot UH ^ ^ false_start
i PRP i ^ OK
may MD may ^ OK
not RB not ^ OK
even RB even ^ OK
have VB have ^ OK
my PRP my ^ OK
mail NN mail ^ OK
sent VBN sent ^ OK
there RB there ^ OK

may MD may ^ OK
ha- VB ^ ^ repeat
have VB have ^ OK
it PRP it ^ OK
sent VBN sent ^ OK
to IN to ^ OK
a DT a ^ OK
post NN post ^ OK
office NN office ^ OK
box NN box ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB ^ ^ repeat
not RB not ^ OK
trying VBG trying ^ OK
to TO to ^ OK
go VB go ^ OK
there RB there ^ OK
man UH ^ ^ filler
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
'd MD ^ ^ repeat
'd MD ^ ^ repeat
'd MD 'd ^ OK
be VB be ^ OK
on IN on ^ OK
even RB even ^ OK
if IN if ^ OK
you PRP ^ ^ false_start
get VBP ^ ^ false_start
a DT ^ ^ false_start
house NN ^ ^ false_start
you PRP you ^ OK
got VBD got ^ OK
a DT a ^ OK
deal NN deal ^ OK
on IN on ^ OK
a DT a ^ OK
house NN house ^ OK
with IN with ^ OK
a DT ^ ^ repeat
a DT a ^ OK
whole JJ whole ^ OK
bunch NN bunch ^ OK
of IN of ^ OK
people NNS people ^ OK
people NNS 's ^ false_start
kids NNS kids ^ OK
running VBG running ^ OK
aroun- RB around ^ false_start

p- NNS ^ ^ false_start
ki- XX ^ ^ false_start
people NNS people ^ OK
sitting VBG sitting ^ OK
on IN on ^ OK
your PRP your ^ OK
step NN step ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
wan- VBP ^ ^ repeat
i PRP ^ ^ repeat
want VBP ^ ^ repeat
to TO ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
want VBP ^ ^ repeat
to TO ^ ^ repeat
have VB ^ ^ repeat
i PRP ^ ^ repeat
want VBP ^ ^ repeat
to TO ^ ^ repeat
have VB ^ ^ repeat
ch- XX ^ ^ repeat
um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ false_start
would MD ^ ^ false_start
like VB ^ ^ false_start
to TO ^ ^ false_start
h- VB ^ ^ false_start
a DT a ^ OK
nice JJ nice ^ OK
three CD three ^ OK
story NN story ^ OK
house NN house ^ OK
would MD would ^ OK
be VB be ^ OK
nice JJ nice ^ OK

i- PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
trying VBG trying ^ OK
to TO to ^ OK
get VB get ^ OK
into IN into ^ OK
one CD one ^ OK
of IN of ^ OK
them DT them ^ OK
programs NNS programs ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that ^ OK
they PRP they ^ OK
look VBP look ^ OK
at IN at ^ OK
your PRP your ^ OK
income NN income ^ OK

that DT that ^ OK
because IN because ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
spending VBG ^ ^ false_start
three CD ^ ^ false_start
hundred CD ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
spending VBG spending ^ OK
almost RB almost ^ OK
four CD four ^ OK
hundred CD hundred ^ OK
dollars NNS dollars ^ OK

i PRP i ^ OK
can MD can ^ OK
mess VB mess ^ OK
around RB around ^ OK
and CC and ^ OK
have VB have ^ OK
two CD two ^ OK
three CD three ^ OK
houses NNS houses ^ OK
yo- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
according VBG according ^ OK
to IN to ^ OK
the DT the ^ OK
mortgage NN mortgage ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
getting VBG ^ ^ false_start
credit NN ^ ^ false_start
k- XX ^ ^ false_start
get VBP ^ ^ repeat
get VB get ^ OK
the DT the ^ OK
credit NN credit ^ OK
together RB together ^ OK
and CC and ^ OK
you PRP you ^ OK
know VBP know ^ OK
that DT that ^ OK
's BES 's ^ OK
that DT that ^ OK

what WP ^ ^ repeat
what WP what ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
with IN with ^ OK
that DT that ^ OK

uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
can MD can ^ OK
you PRP you ^ OK
do VB do ^ OK
something NN something ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
is VBZ ^ ^ repeat
that DT ^ ^ repeat
is VBZ is ^ OK
that DT that ^ OK

uh UH ^ ^ filler
uh UH ^ ^ filler
the DT the ^ OK

you PRP ^ ^ false_start
uh UH ^ ^ filler
your PRP ^ ^ repeat
your PRP your ^ OK
cr- NN ^ ^ repeat
credit NN credit ^ OK
's BES 's ^ OK
messed JJ messed ^ OK
up RP up ^ OK

because IN because ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
d- VBP ^ ^ repeat
did VBD did ^ OK
a DT a ^ OK
little JJ little ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
background NN background ^ OK
checking NN checking ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ repeat
just RB just ^ OK
g- VB ^ ^ repeat
give VB give ^ OK
me PRP me ^ OK
a DT a ^ OK
house NN house ^ OK

i PRP i ^ OK
got VBD got ^ OK
a DT a ^ OK
couple JJ couple ^ OK
credit NN credit ^ OK
cards NNS cards ^ OK

you PRP you ^ OK
know VBP know ^ OK
how WRB how ^ OK
them DT them ^ OK
credit NN credit ^ OK
cards NNS cards ^ OK
is VBZ is ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
preapprove VBP preapprove ^ OK
you PRP you ^ OK

they UNK ^ ^ false_start
w- UNK ^ ^ false_start
it UNK it ^ OK
would UNK would ^ OK
definitely UNK definitely ^ OK
not UNK not ^ OK
have UNK have ^ OK
to UNK to ^ OK
be UNK be ^ OK
an UNK an ^ OK
issue UNK issue ^ OK
because UNK because ^ OK
things UNK things ^ OK
are UNK are ^ OK
so UNK so ^ OK
expensive UNK expensive ^ OK
where UNK where ^ OK
we UNK we ^ OK
live UNK live ^ OK
like UNK like ^ OK
um UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
p- UNK ^ ^ repeat
places UNK places ^ OK
to UNK to ^ OK
rent UNK rent ^ OK
for UNK for ^ OK
a UNK a ^ OK
business UNK business ^ OK
or UNK ^ ^ false_start
whatever UNK ^ ^ false_start

um UH ^ ^ filler
well UH ^ ^ filler
the DT ^ ^ false_start
first JJ ^ ^ false_start
thing NN ^ ^ false_start
i PRP ^ ^ false_start
would MD ^ ^ false_start
do VB ^ ^ false_start
is NP-1 ^ ^ false_start
eh VBZ ^ ^ filler
i UH ^ ^ false_start
'm PRP ^ ^ false_start
in VBP ^ ^ false_start
the IN ^ ^ false_start
process DT ^ ^ false_start
of NN ^ ^ false_start
i IN ^ ^ repeat
i VBP i ^ OK
'm PRP ^ ^ repeat
'm PRP 'm ^ OK
strongly VBP strongly ^ OK
considering RB considering ^ OK
taking VBG taking ^ OK
a VBG a ^ OK
p- DT ^ ^ repeat
p. NN p. ^ OK
c. NN c. ^ OK
repair NN repair ^ OK
course NN course ^ OK

and CC ^ ^ false_start
so UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
other JJ other ^ OK
thing NN thing ^ OK
would MD would ^ OK
be VB be ^ OK
location NN location ^ OK
location NN location ^ OK
location NN location ^ OK
and CC and ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
advertising NN advertising ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
if IN if ^ OK
money NN money ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
no DT ^ ^ repeat
not RB not ^ OK
a DT a ^ OK
i- XX ^ ^ repeat
problem NN problem ^ OK
that DT ^ ^ false_start
would MD ^ ^ false_start
n't RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all ^ OK
that DT that ^ OK
would MD would ^ OK
just RB just ^ OK
fall VB fall ^ OK
together RB together ^ OK

well UH ^ ^ filler
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
places NNS places ^ OK
around IN around ^ OK
here RB here ^ OK
i PRP i ^ OK
think VBP think ^ OK
they PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
e- XX ^ ^ false_start
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
take VB take ^ OK
them PRP them ^ OK
until IN until ^ OK
they PRP they ^ OK
're VBP 're ^ OK
e- RB ^ ^ repeat
either RB either ^ OK
potty NN potty ^ OK
trained JJ trained ^ OK

the DT ^ ^ false_start
uh UH ^ ^ filler
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
commercial JJ commercial ^ OK
daycares NNS daycares ^ OK
will MD will ^ OK
take VB take ^ OK
them PRP them ^ OK
like UH ^ ^ filler
at IN at ^ OK
six CD six ^ OK
months NNS months ^ OK

but CC ^ ^ false_start
then RB ^ ^ filler
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
at IN at ^ OK
they PRP ^ ^ false_start
home NN home ^ OK
they PRP ^ ^ false_start
ones NNS ones ^ OK
they PRP ^ ^ false_start
want VBP want ^ OK
them PRP them ^ OK
potty NN potty ^ OK
trained JJ trained ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
the DT the ^ OK
clientele NNS clientele ^ OK
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
be VB be ^ OK
kind RB ^ ^ filler
of RB ^ ^ filler
picky JJ picky ^ OK
about IN about ^ OK
them PRP them ^ OK
too RB too ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
scree- XX ^ ^ false_start
because IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
know VBP ^ ^ false_start
eh UH ^ ^ filler
i PRP i ^ OK
used VBD used ^ OK
to TO to ^ OK
work VB work ^ OK
for IN for ^ OK
a DT a ^ OK
law NN law ^ OK
firm NN firm ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
most RB most ^ OK
most RB ^ ^ false_start
girls NNS of ^ false_start
all PDT ^ ^ false_start
the DT the ^ OK
girls NNS girls ^ OK
had VBD had ^ OK
their PRP their ^ OK
children NNS children ^ OK
in IN in ^ OK
the DT the ^ OK
same JJ same ^ OK
daycare NN daycare ^ OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
took VBD ^ ^ false_start
like UH ^ ^ filler
they PRP ^ ^ repeat
oh UH ^ ^ filler
th- PRP ^ ^ repeat
like UH ^ ^ filler
they PRP they ^ OK
had VBD ^ ^ repeat
had VBD had ^ OK
one CD one ^ OK
room NN room ^ OK
for IN for ^ OK
like UH ^ ^ filler
six CD ^ ^ false_start
months NNS ^ ^ false_start
to IN ^ ^ false_start
nine CD ^ ^ false_start
mon- NNS ^ ^ false_start
well UH ^ ^ filler
i PRP ^ ^ false_start
eh UH ^ ^ repeat
it PRP ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
that RB ^ ^ false_start
old JJ ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ filler
less JJR ^ ^ false_start
than IN ^ ^ false_start
that DT ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ filler
infants NP-PRD-1 infants ^ false_start

and CC ^ ^ false_start
then RB then ^ OK
they PRP they ^ OK
had VBD had ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
da- NN ^ ^ false_start
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
teachers NNS teachers ^ OK
or CC ^ ^ repeat
or CC or ^ OK
daycare NN daycare ^ OK
attendants NNS attendants ^ OK
or CC ^ ^ false_start
whatnot NN ^ ^ false_start
in IN ^ ^ repeat
in IN in ^ OK
each DT each ^ OK
one CD one ^ OK
and CC and ^ OK
um UH ^ ^ filler
a DT a ^ OK
big JJ big ^ OK
common JJ common ^ OK
play NN play ^ OK
area NN area ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
the DT the ^ OK
parents NNS parents ^ OK
i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
had VBD had ^ OK
to TO to ^ OK
sen- VB ^ ^ false_start
provide VB provide ^ OK
the DT ^ ^ false_start
uh UH ^ ^ filler
the DT the ^ OK
snacks NNS snacks ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
then RB then ^ OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the ^ OK
daycare JJ daycare ^ OK
providers NNS providers ^ OK
had VBD had ^ OK
to TO to ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
feed VB feed ^ OK
them PRP them ^ OK

w- XX ^ ^ false_start
uh UH ^ ^ filler
it PRP it ^ OK
was VBD was ^ OK
like IN ^ ^ filler
a DT ^ ^ repeat
a DT a ^ OK
half NN half ^ OK
eh UH ^ ^ filler
like UH ^ ^ filler
a DT a ^ OK
doughnut NN doughnut ^ OK
type NN type ^ OK
of IN of ^ OK
um UH ^ ^ filler
um UH ^ ^ filler
bench NN bench ^ OK
with IN with ^ OK
a DT a ^ OK
little JJ little ^ OK
table NN table ^ OK
in IN in ^ OK
front NN front ^ OK
of IN of ^ OK
it PRP it ^ OK
that WDT that ^ OK
had VBD had ^ OK
little JJ little ^ OK
holes NNS holes ^ OK
in IN in ^ OK
it PRP it ^ OK
where WRB where ^ OK
you PRP you ^ OK
could MD could ^ OK
like UH ^ ^ filler
put VB put ^ OK
bowls NNS bowls ^ OK
in IN in ^ OK
front NN front ^ OK
of IN of ^ OK
it PRP it ^ OK

but CC but ^ OK
um UH ^ ^ filler

well UH ^ ^ filler
he PRP he ^ OK
comes VBZ comes ^ OK
back RB back ^ OK
two CD two ^ OK
or CC or ^ OK
three CD three ^ OK
times NNS times ^ OK
a DT a ^ OK
year NN year ^ OK
if IN ^ ^ repeat
if VP if ^ OK
he PRP ^ ^ repeat
he IN he ^ OK
can MD ^ ^ false_start
you PRP ^ ^ filler
know PRP ^ ^ filler
uh VBP ^ ^ filler
gets UH gets ^ OK
a VBZ a ^ OK
chance DT chance ^ OK

uh UH ^ ^ filler
what WP what ^ OK
are VBP are ^ OK
prices NNS prices ^ OK
in IN in ^ OK
real JJ real ^ OK
estate NN estate ^ OK
down IN down ^ OK
there RB there ^ OK
like IN ^ ^ false_start

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
do VB do ^ OK
any DT any ^ OK
flu NN flu ^ OK
shots NNS shots ^ OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

that- XX that- ^ OK
ye- XX ye- ^ OK

you PRP you ^ OK
never RB never ^ OK
kn- VBP ^ ^ false_start
really RB really ^ OK
know VBP know ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
act VBP act ^ OK
like IN like ^ OK
it PRP it ^ OK
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
um UH ^ ^ filler
cure VB cure ^ OK
all RB all ^ OK
for IN for ^ OK
all PDT all ^ OK
these DT these ^ OK
diseases NNS diseases ^ OK

so UH ^ ^ filler
you PRP ^ ^ false_start
're VBP ^ ^ false_start
b- XX ^ ^ false_start
b- XX ^ ^ false_start
we- UH ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
may- RB ^ ^ false_start
in IN in ^ OK
your PRP your ^ OK
thirties NNS thirties ^ OK
about RB ^ ^ false_start

so RB ^ ^ filler
y- PRP ^ ^ repeat
you PRP you ^ OK
're VBP 're ^ OK
in IN in ^ OK
college NN college ^ OK

about RB ^ ^ repeat
what UH ^ ^ false_start
about RB about ^ OK
a DT ^ ^ repeat
a DT a ^ OK
month NN ^ ^ repeat
month NN ^ ^ repeat
month NN month ^ OK
an- CC ^ ^ repeat
and CC and ^ OK
a DT a ^ OK
half NN half ^ OK
ago RB ^ ^ repeat
ago RB ago ^ OK

and CC and ^ OK
uh UH ^ ^ filler

well UH ^ ^ filler
i PRP ^ ^ repeat
've VBP ^ ^ repeat
got VBN ^ ^ repeat
i PRP ^ ^ false_start
've VBP ^ ^ false_start
got VBN ^ ^ false_start
um UH ^ ^ filler
they PRP they ^ OK
're VBP 're ^ OK
eight CD eight ^ OK
ten CD ten ^ OK
and CC and ^ OK
twelve CD twelve ^ OK
now RB now ^ OK

so UH ^ ^ filler
we PRP we ^ OK
um UH ^ ^ filler

and CC ^ ^ false_start
i PRP i ^ OK
have VBP have ^ OK
t- CD ^ ^ repeat
two CD two ^ OK
grown JJ grown ^ OK
kids NNS kids ^ OK

and CC and ^ OK
um UH ^ ^ filler

i PRP i ^ OK
i PRP ^ ^ false_start
sure JJ 'm ^ false_start
not RB not ^ OK
sure JJ sure ^ OK

i PRP i ^ OK
think VBP think ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
just RB ^ ^ repeat
just RB just ^ OK
bring VBP bring ^ OK
one NN one ^ OK
up RP up ^ OK
at IN at ^ OK
a DT a ^ OK
time NN time ^ OK

um UH ^ ^ filler
i PRP i ^ OK

maybe RB ^ ^ repeat
um UH ^ ^ filler
maybe RB maybe ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
the DT ^ ^ repeat
that DT that ^ OK
mosquito JJ mosquito ^ OK
v- NN ^ ^ repeat
virus NN virus ^ OK
that WDT that ^ OK
's BES 's ^ OK
heading VBG heading ^ OK
west RB west ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start

i- PRP i- ^ OK

uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
think VB think ^ OK
anything NN anything ^ OK
like IN like ^ OK
that DT that ^ OK
has VBZ has ^ OK
showed VBN shown ^ false_start
up RB up ^ OK

and CC ^ ^ false_start
then RB ^ ^ false_start
they PRP they ^ OK
had VBD had ^ OK
that DT ^ ^ repeat
that DT that ^ OK
scare NN scare ^ OK
with IN with ^ OK
the DT the ^ OK
sars NN sars ^ OK
virus NN virus ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
th- VBP ^ ^ repeat
think VBP think ^ OK
maybe RB maybe ^ OK
like UH ^ ^ filler
a DT a ^ OK
bed NN bed ^ OK
and CC and ^ OK
breakfast NN breakfast ^ OK
would MD would ^ OK
be VB be ^ OK
a DT a ^ OK
neat JJ neat ^ OK
business NN business ^ OK
to TO to ^ OK
run VB run ^ OK

it PRP it ^ OK
's BES 's ^ OK
eh UH ^ ^ filler

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
interesting JJ interesting ^ OK

i PRP ^ ^ repeat
eh UH ^ ^ filler
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
i PRP i ^ OK
would MD would ^ OK
to VP to ^ OK
be TO be ^ OK
honest VB honest ^ OK

with IN with ^ OK
the DT the ^ OK
bed NN bed ^ OK
and CC and ^ OK
breakfast NN breakfast ^ OK
idea NN idea ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP ^ ^ repeat
guess VBP guess ^ OK
it PRP it ^ OK
could MD could ^ OK
be VB be ^ OK

i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
a DT a ^ OK
big JJ big ^ OK
risk NN risk ^ OK
taker NN taker ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK

just RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
niche NN niche ^ OK
for IN for ^ OK
it PRP it ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
eh UH ^ ^ filler
um UH ^ ^ filler
i PRP i ^ OK
was VBD was ^ OK
n't RB n't ^ OK
clear VB clear ^ OK
on IN on ^ OK
that DT that ^ OK
part NN part ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
going VBG ^ ^ false_start
august NNP ^ ^ false_start
july NNP in ^ false_start
august NNP august ^ OK
august NNP ^ ^ false_start
july NNP or ^ false_start
july NNP july ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
want VBP want ^ OK
to TO to ^ OK
pick VB pick ^ OK
it PRP it ^ OK
up RP up ^ OK

i PRP i ^ OK
went VBD went ^ OK
to IN to ^ OK
eh UH ^ ^ filler
brussels NNP brussels ^ OK
actually RB actually ^ OK

i PRP i ^ OK
got VBD got ^ OK
back RB back ^ OK
in IN in ^ OK
august NNP august ^ OK
two CD ^ ^ repeat
two CD two ^ OK
thousand CD ^ ^ repeat
thousand CD thousand ^ OK

at IN at ^ OK
one CD one ^ OK
time NN time ^ OK
i PRP i ^ OK
thought VBD thought ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
going VBG ^ ^ repeat
going VBG going ^ OK
to TO ^ ^ repeat
to TO to ^ OK
be VB ^ ^ repeat
go VB go ^ OK
into IN into ^ OK
business NN business ^ OK

like UH ^ ^ filler
i PRP i ^ OK
thought VBD thought ^ OK
i PRP i ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
get VB get ^ OK
an DT an ^ OK
m. NNP m. ^ OK
b. NNP b. ^ OK
a. NNP a. ^ OK

that DT that ^ OK
's BES 's ^ OK
for IN for ^ OK
sure JJ sure ^ OK

why UH why ^ OK
more RBR more ^ OK
has VBZ has ^ OK
to TO to ^ OK
be VB be ^ OK
be VB ^ ^ repeat
put VBN put ^ OK
into IN into ^ OK
it PRP it ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
at RB ^ ^ repeat
least RB ^ ^ repeat
at RB at ^ OK
least RB least ^ OK
they PRP they ^ OK
're VBP 're ^ OK
aware JJ aware ^ OK
of IN of ^ OK
the DT the ^ OK
problem NN problem ^ OK
can MD can ^ OK
happen VB happen ^ OK
i PRP i ^ OK
guess VBP guess ^ OK

not RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
firstly RB firstly ^ OK
that IN that ^ OK
you PRP you ^ OK
and CC and ^ OK
i PRP i ^ OK
can MD can ^ OK
do VB do ^ OK
anything NN anything ^ OK
about IN about ^ OK
it PRP it ^ OK

you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
put VB put ^ OK

the DT ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
very RB very ^ OK
scary JJ scary ^ OK

my PRP my ^ OK
grandfather NN grandfather ^ OK
i- VBZ i- ^ OK

my PRP my ^ OK
grandfather NN grandfather ^ OK
was VBD was ^ OK
gassed VBN gassed ^ OK
in IN in ^ OK
world NNP ^ ^ false_start
war NNP ^ ^ false_start
two CD ^ ^ false_start
so UH ^ ^ filler
uh UH ^ ^ filler
world NNP world ^ OK
war NNP war ^ OK
one CD one ^ OK
i PRP ^ ^ filler
'm VBP ^ ^ filler
sorry JJ ^ ^ filler

i PRP i ^ OK
know VBP know ^ OK
exactly RB exactly ^ OK
what WP what ^ OK
you PRP you ^ OK
're VBP 're ^ OK
talking VBG talking ^ OK
about IN about ^ OK
there NP-1 there ^ OK

he PRP he ^ OK
suffered VBD suffered ^ OK
from IN from ^ OK
it PRP it ^ OK
all PDT all ^ OK
his PRP his ^ OK
life NN life ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
glad JJ glad ^ OK

they PRP ^ ^ false_start
going VBG are ^ false_start
so UH ^ ^ filler
they PRP they ^ OK
going VBG going ^ OK
to TO to ^ OK
tell VB tell ^ OK
us PRP us ^ OK
when WRB when ^ OK
to TO to ^ OK
shut VB shut ^ OK
up RP up ^ OK
on IN on ^ OK
here RB here ^ OK

or CC ^ ^ false_start
we PRP ^ ^ false_start
just RB ^ ^ false_start
we PRP we ^ OK

we UNK we ^ OK
decide UNK decide ^ OK
this UNK this ^ OK
we UNK ^ ^ false_start

the DT ^ ^ false_start
i PRP i ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
one CD one ^ OK
of IN of ^ OK
those DT those ^ OK
things NNS things ^ OK
like IN ^ ^ filler
i PRP i ^ OK
say VBP say ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
think VB ^ ^ repeat
th- IN ^ ^ repeat
think VB think ^ OK
we PRP we ^ OK
can MD can ^ OK
whol- JJ ^ ^ repeat
do VB do ^ OK
a DT a ^ OK
whole JJ whole ^ OK
lot NN lot ^ OK
about IN about ^ OK
it PRP it ^ OK

eh UH ^ ^ filler
so UH ^ ^ filler
uh UH uh ^ OK

i PRP i ^ OK
said VBD said ^ OK
why WRB why ^ OK
depress VB depress ^ OK
everybody NN everybody ^ OK
trying VBG trying ^ OK
to TO to ^ OK
talk VB talk ^ OK
about IN about ^ OK
the DT the ^ OK
subject NN subject ^ OK

oh UH ^ ^ filler
it PRP it ^ OK
it PRP ^ ^ false_start
be VB would ^ false_start
be VB be ^ OK
a DT a ^ OK
wonderful JJ wonderful ^ OK
experience NN experience ^ OK

all DT all ^ OK
appreciate VBP appreciate ^ OK
more RBR more ^ OK
what WP what ^ OK
they PRP they ^ OK
have VBP have ^ OK

um UH ^ ^ filler
well UH ^ ^ filler
a- XX ^ ^ false_start
m- XX ^ ^ false_start
part NN part arg0 OK
of IN of arg0 OK
me PRP me arg0 OK
says VBZ says predicate OK
yeah UH ^ ^ filler
we PRP we arg0 OK
know VBP know arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
more JJR more arg1 OK
than IN than arg1 OK
when WRB when arg1 OK
the DT the arg0 OK
united NNP united arg0 OK
states NNP states arg0 OK
did VBD did arg1 OK
nuclear JJ nuclear arg1 OK
testing NN testing arg1 OK
um UH ^ ^ filler
and CC and ^ OK
part NN part arg0 OK
of IN of arg0 OK
me PRP me arg0 OK
goes VBZ says predicate false_start
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
never RB never argM_neg OK
asked VBD asked arg1 OK
permission NN permission arg1 OK
while IN while argM_tmp OK
we PRP we arg0 OK
were VBD were argM_tmp OK
testing VBG testing argM_tmp OK

gee UH ^ ^ filler
why WRB why argM_cause OK
are VBP are predicate OK
n't RB n't argM_neg OK
there EX there arg1 OK
any DT any arg2 OK
terrorists NNS terrorists arg2 OK
in IN in arg2 OK
iraq NNP iraq arg2 OK

i PRP i arg0 OK
found VBD found predicate OK
out RP out arg_particl OK
from IN from argM_mnr OK
a DT a arg0 OK
friend NN friend arg0 OK
who WP who arg0 OK
lived VBD lived argM_mnr OK
in IN in argM_loc OK
japan NNP japan argM_loc OK
for IN for argM_tmp OK
a DT a argM_tmp OK
number NN number argM_tmp OK
of IN of argM_tmp OK
years NNS years argM_tmp OK
that IN that arg1 OK
um UH ^ ^ filler
the DT the arg0 OK
japanese NNPS japanese arg0 OK
thought VBD thought arg1 OK
land NN land arg1 OK
in IN in arg1 OK
the DT the arg1 OK
u. NNP u. arg1 OK
s. NNP s. arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
businesses NNS businesses arg1 OK
and CC ^ ^ repeat
and CC and arg1 OK
apartment NN apartment arg1 OK
buildings NNS buildings arg1 OK
and CC and arg1 OK
office NN office arg1 OK
building NN building arg1 OK
were VBD were arg1 OK
such PDT such arg2 OK
a DT a arg2 OK
bargain NN bargain arg2 OK

well UH ^ ^ filler
they PRP they arg1 OK
were VBD were ^ OK
compared VBN compared predicate OK
to IN to arg2 OK
the DT ^ ^ repeat
um UH ^ ^ filler
the DT the arg2 OK
japanese JJ japanese arg2 OK
uh UH ^ ^ filler
real JJ real arg2 OK
estate NN estate arg2 OK

it UNK it arg1 OK
's UNK 's predicate OK
actually UNK actually argM_adverb OK
cheaper UNK cheaper arg2 OK
to UNK to arg2 OK
make UNK make arg2 OK
something UNK something arg1 OK
in UNK in argM_loc OK
japan UNK japan argM_loc OK
and UNK and arg2 OK
ship UNK ship arg2 OK
it UNK it arg1 OK
to UNK to arg2 OK
the UNK the arg2 OK
u. UNK u. arg2 OK
s. UNK s. arg2 OK
and UNK and arg2 OK
sell UNK sell arg2 OK
it UNK it arg1 OK
there UNK there argM_loc OK
than UNK than argM_extent OK
it UNK it arg1 OK
is UNK is predicate OK
to UNK to arg2 OK
get UNK get arg2 OK
it UNK it arg1 OK
through UNK through argM_loc OK
the UNK the ^ OK
um UNK ^ ^ filler
e- UNK ^ ^ false_start
u- UNK ^ ^ false_start
the UNK _ARG_ argM_loc false_start

there UNK there arg1 OK
's UNK 's predicate OK
this UNK this arg2 OK
chain UNK chain arg2 OK
of UNK ^ ^ false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
from UNK from arg2 OK
the UNK the arg2 OK
manufacturer UNK manufacturer arg2 OK
to UNK to arg2 OK
the UNK the arg2 OK
wholesaler UNK wholesaler arg2 OK
to UNK ^ ^ false_start
th- UNK ^ ^ false_start
e- UNK ^ ^ false_start
ther- UNK ^ ^ false_start
with UNK with arg2 OK
lots UNK lots arg2 OK
of UNK of arg2 OK
steps UNK steps arg2 OK
in UNK in arg2 OK
between UNK between arg2 OK
there UNK there arg2 OK

got VBD _ARG_ arg0 false_start
got VBD got predicate OK
a DT a arg1 OK
four CD four arg1 OK
this DT this argM_tmp OK
last JJ last argM_tmp OK
time NN time argM_tmp OK

i PRP ^ ^ false_start
kno- VBP ^ ^ false_start
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
believe VB believe predicate OK
it PRP it arg1 OK
at IN at argM_tmp OK
first JJ first argM_tmp OK
either RB either argM_discou OK

um UH ^ arg1 filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
why WRB why argM_cause OK
they PRP they ^ OK
they PRP _ARG_ arg0 false_start

it PRP it arg1 OK
was VBD was predicate OK
um UH ^ ^ filler
turf NN turf arg2 OK
club NN club arg2 OK
in IN in arg2 OK
um UH ^ ^ filler
s- NNP ^ ^ repeat
center NNP center arg2 OK
city NNP city arg2 OK

mm UH ^ ^ filler
when WRB when argM_tmp OK
it PRP it argM_tmp OK
was VBD was argM_tmp OK
c- VBN ^ ^ false_start
fully RB fully argM_tmp OK
cooked VBN cooked argM_tmp OK
it ADVP-TMP- 2 it arg1 OK
was PRP was predicate OK
pretty VBD pretty arg2 OK
good RB good arg2 OK

it PRP it arg0 OK
depend VBP depends predicate false_start
on IN on arg1 OK
who WP who ^ OK
who WP ^ arg0 false_start
cooking VBG 's ^ false_start
cooking VBG cooking arg1 OK

that DT that arg1 OK
's BES 's predicate OK
probably RB probably arg2 OK
ever- RB ^ ^ repeat
everywhere RB everywhere arg2 OK
now RB now arg2 OK

they PRP they arg2 OK
about RB are predicate false_start
the DT the arg1 OK
f- RB ^ ^ repeat
few JJ few arg1 OK
restaurants NNS restaurants arg1 OK
out RB out arg1 OK
there RB there arg1 OK
that WDT ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
that WDT that ^ OK
that WDT are arg1 false_start
not RB not argM_neg OK
that DT as arg2 false_start
high JJ high ^ OK
high JJ as arg2 false_start
the DT the arg2 OK
chinese JJ chinese arg2 OK
restaurants NNS restaurants arg2 OK

i PRP ^ ^ false_start
drunk JJ ^ ^ false_start
so UH ^ ^ filler
i PRP i arg0 OK
drunk VBD drunk predicate OK
about RB about arg1 OK
two CD two arg1 OK
more JJR more arg1 OK

ye- UH ^ ^ repeat
yeah UH yeah ^ OK

um UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
n- XX ^ ^ false_start
n- XX ^ ^ false_start
what WP what arg1 OK
i PRP i arg0 OK
enjoy VBP enjoy arg1 OK
most JJS most arg1 OK
of IN of arg1 OK
all DT all arg1 OK
is VBZ is arg2 OK
just RB ^ arg2 false_start
walking VBG walking arg1 OK
around IN around arg1 OK
the DT the arg1 OK
city NN city arg1 OK

i PRP ^ ^ filler
which WDT which ^ OK
i PRP i arg0 OK
love VBP love predicate OK
doing VBG doing arg1 OK

i- PRP i- ^ OK

oh UH ^ ^ filler
oh UH ^ ^ filler
oh UH ^ ^ filler
um UH ^ ^ filler
no UH no ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
hav- VBP ^ ^ repeat
have VBP have ^ OK
n't RB n't ^ OK
rowed VBN rowed predicate OK
since IN since ^ OK
um UH ^ ^ filler

that DT ^ ^ false_start
's BES ^ ^ false_start
sounds VBZ ^ ^ false_start
i PRP i ^ OK
would MD would ^ OK

eh UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
a DT a argM_neg OK
big JJ big argM_neg OK
uh UH ^ ^ filler
canoer NN canoer argM_neg OK
rower NN rower argM_neg OK

um UH ^ ^ filler
a- CC a- ^ false_start

love VBP _NOUN_ arg0 false_start
roll- NN ^ ^ false_start
um UH ^ ^ filler
love VBP love predicate OK
to TO to arg1 OK
to TO _VERB_ arg1 false_start

i PRP i ^ OK
have VBP have ^ OK
n't RB n't ^ OK
really RB really ^ OK
i PRP ^ ^ false_start

w- WP ^ ^ repeat
what WP ^ ^ false_start
um UH ^ ^ filler
what WP what arg2 OK
are VBP ^ ^ false_start
is VBZ is predicate OK
you PRP ^ ^ false_start
your PRP your arg1 OK
best JJS best arg1 OK
activity NN activity arg1 OK
outside RB outside argM_loc OK

wher- JJ ^ ^ false_start
do VBP do ^ OK
you PRP you arg0 OK
live VB live predicate OK
in IN ^ ^ repeat
in IN in argM_loc OK
los NNP los argM_loc OK
angeles NNP angeles argM_loc OK

so UH so ^ OK
wh- XX ^ ^ false_start
j- XX ^ ^ false_start

which WDT ^ ^ repeat
which WDT which ^ OK
i PRP i arg0 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
is VBZ is arg2 OK
lovely JJ lovely arg1 OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP ^ ^ false_start
to IN to ^ OK
me PRP me ^ OK
there EX there ^ OK
's BES 's ^ OK
nothing NN nothing ^ OK
like IN like ^ OK
just RB ^ ^ false_start
w- VBG ^ ^ repeat
walking VBG walking predicate OK
around IN around argM_loc OK
the DT the argM_loc OK
city NN city argM_loc OK

a- CC ^ ^ repeat
and CC ^ ^ false_start
and CC ^ ^ false_start
it PRP it arg0 OK
never RB never ^ OK
ceases VBZ ceases predicate OK
to TO to arg1 OK
amaze VB amaze arg1 OK
me PRP me arg1 OK

unfortunately RB unfortunately ^ OK
he PRP he arg1 OK
's BES 's predicate OK
now RB now arg2 OK
in IN in arg2 OK
florida NNP florida arg2 OK
which WDT ^ ^ repeat
which WDT which ^ OK
is VBZ is predicate OK
just RB ^ ^ false_start
weird JJ weird arg1 OK

um UH ^ ^ filler
and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
j- RB ^ ^ false_start
to IN to ^ OK
me PRP me ^ OK
it PRP it ^ OK
's BES 's predicate OK
just RB ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
window NN window arg1 OK
shopping NN shopping arg1 OK
just RB and ^ false_start
just RB ^ ^ false_start
looking VBG looking predicate OK
at IN at arg1 OK
architecture NN architecture arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
so RB ^ ^ repeat
so RB so arg1 OK
stimulating JJ stimulating arg1 OK

oh UH ^ ^ filler
as XX as ^ OK

um UH ^ ^ filler
fortunately RB fortunately ^ OK
i PRP i arg0 OK
did VBD did ^ OK
miss VB miss predicate OK
the DT the arg1 OK
um UH ^ ^ filler
blackout NN blackout arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
city NN city argM_loc OK

but CC ^ ^ false_start
um UH um ^ filler

not RB ^ ^ repeat
not RB not ^ OK
that RB that ^ OK
many JJ many arg0 OK
people NNS people arg0 OK
even RB ^ ^ false_start
remember VB remember predicate OK
mccormick NNP mccormick arg1 OK
's POS 's arg1 OK

now RB ^ ^ false_start
that DT that ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
that DT that ^ OK
's BES 's ^ OK

i- PRP ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
an DT an arg1 OK
interesting JJ interesting arg1 OK
city NN city arg1 OK

eh UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
think VB think predicate OK
of IN of arg1 OK
anything NN anything arg1 OK
really SBAR-1 ^ ^ false_start
that RB ^ ^ false_start

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP ^ ^ repeat
re- XX ^ ^ repeat
today NN today ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
was VBD ^ ^ repeat
was VBD was ^ OK
just RB ^ ^ repeat
just RB ^ ^ false_start
walking VBG walking predicate OK
down IN down argM_loc OK
through IN through argM_loc OK
um UH ^ ^ filler
soho NNP soho argM_loc OK

and CC ^ ^ false_start
um UH ^ ^ filler
it PRP it arg0 OK
amazes SBAR-1 amazes predicate OK
me VBZ me arg1 OK
that PRP ^ ^ repeat
that IN that ^ OK
this IN ^ ^ false_start
even DT even ^ OK
if RB if ^ OK
you IN you arg0 OK
think PRP think predicate OK
that VBP that arg1 OK
you IN you arg0 OK
know PRP know arg1 OK
you VBP ^ ^ false_start
know PRP ^ ^ false_start
if VBP if ^ OK
you IN you arg0 OK
walked PRP walked predicate OK
around VBD around argM_loc OK
the IN the argM_loc OK
city DT city argM_loc OK
that NN ^ ^ false_start
i IN ^ ^ false_start
mean PRP ^ ^ false_start
you VBP ^ ^ false_start
can PRP ^ ^ false_start
wal- MD ^ ^ false_start
i VB i arg0 OK
can PRP can ^ OK
stumble MD stumble predicate OK
onto VB onto argM_loc OK
a IN a argM_loc OK
block DT block argM_loc OK
that NN that ^ OK
i WDT i ^ OK
'm PRP 'm predicate OK
totally VBP totally arg1 OK
unfamiliar RB unfamiliar arg1 OK
with JJ with arg1 OK

um UH ^ ^ filler
i PRP ^ ^ false_start
live VBP ^ ^ false_start
near IN ^ ^ false_start
um UH ^ ^ filler
do VB do ^ OK
you PRP you arg0 OK
know VBP know predicate OK
where WRB where arg2 OK
stuyvesant NN stuyvesant arg1 OK
stuyvesant NN is arg1 false_start

um UH ^ arg1 filler
so UH ^ ^ filler
it PRP it ^ OK
's BES 's predicate OK
down IN down ^ OK
a- XX ^ ^ repeat
down IN _NOUN_ arg1 false_start

but UNK ^ ^ false_start
i UNK ^ ^ false_start
mean UNK ^ ^ false_start
i UNK i arg0 OK
discovered UNK discovered predicate OK
avenues UNK avenues arg1 OK
um UNK ^ ^ filler
like UNK ^ ^ filler
beyond UNK beyond argM_loc OK
a. UNK a. argM_loc OK
b. UNK b. argM_loc OK
and UNK and argM_loc OK
c. UNK c. argM_loc OK

when WRB when ^ OK
you PRP you ^ OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
beyond IN beyond ^ OK
those DT those ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ false_start
def- RB ^ ^ false_start
i PRP i arg0 OK
see VBP see predicate OK
the DT the arg1 OK
pros NNS pros arg1 OK
and CC and arg1 OK
the DT the arg1 OK
cons NNS cons arg1 OK

i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
if IN if ^ OK
we PRP we ^ OK
had VBD had ^ OK
a DT ^ ^ repeat
uh UH ^ ^ filler
a DT a ^ OK
perfect JJ perfect ^ OK
society NN society ^ OK
where WRB where ^ OK
you PRP you ^ false_start
would MD would ^ false_start
n't RB n't ^ false_start
even RB even ^ false_start
put VB put ^ false_start
your PRP your ^ false_start
race NN race ^ false_start
on IN on ^ false_start
there EX there ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
fill VBP fill ^ OK
applications NNS applications ^ OK
and CC and ^ OK
just RB just ^ OK
go VB go ^ OK
strictly RB strictly ^ OK
by IN by ^ OK
uh UH ^ ^ filler
the DT the ^ OK
qualifications NNS qualification s  ^ OK
and CC and ^ OK
hire VB hire ^ OK
somebody NN somebody ^ OK
off IN off ^ OK
of IN of ^ OK
that DT that ^ OK
you ADVP-LOC- 3 ^ ^ filler
know PRP ^ ^ filler
eh VBP ^ ^ filler
i UH i ^ OK
would PRP would ^ OK
be MD be ^ OK
really VB ^ ^ repeat
really RB really ^ OK
interested RB interested ^ OK
to JJ to ^ OK
see TO see ^ OK
how VB how ^ OK
that WRB that ^ OK
turned DT turned ^ OK
out VBD out ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
in IN ^ ^ false_start
the DT ^ ^ false_start
spirit NN ^ ^ false_start
that WDT ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
created VBN ^ ^ false_start
back RB ^ ^ false_start
in IN ^ ^ false_start
was VBD was predicate OK
it PRP it arg1 OK
kennedy NNP kennedy arg2 OK
who WP who arg0 OK
u- XX ^ ^ filler
started VBD started predicate OK
it PRP it arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that IN ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
was VBD was arg1 OK
kennedy NNP kennedy arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
you PRP you arg0 OK
have VBP have predicate OK
some DT some arg1 OK
people NNS people arg1 OK
who WP who arg0 OK
w- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just arg1 OK
want VB want arg1 OK
certain JJ certain arg1 OK
people NNS people arg1 OK
in IN in arg1 OK
there RB there arg1 OK

and CC ^ ^ false_start
this DT ^ ^ false_start
guy NN ^ ^ false_start
is VBZ ^ ^ false_start
y- XX ^ ^ filler
uh UH ^ ^ filler
they PRP they arg0 OK
're VBP 're ^ OK
doing VBG doing predicate OK
the DT the arg1 OK
same JJ same arg1 OK
thing NN thing arg1 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
eh UH ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
in IN ^ ^ false_start
ninety-eight NNP ^ ^ false_start
when WRB ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
was VBD was ^ OK
either RB either ^ OK
eight CD eight ^ OK
or CC or ^ OK
n- XX ^ ^ repeat
ninety-nine CD ninety-nine ^ OK
when WRB when ^ OK
they PRP they ^ OK
were VBD were ^ OK
looking VBG looking ^ OK
at IN at ^ OK
the DT the ^ OK
whole JJ whole ^ OK
school NN school ^ OK
um UH ^ ^ filler
the DT the ^ OK
admission NN admission ^ OK
policies NNS policies ^ OK
as ADVP-TMP- 1 as ^ OK
far RB far ^ OK
as RB as ^ OK
schools IN schools ^ OK
are NNS are ^ OK
concerned VBP concerned ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
have VBP ^ ^ false_start
every DT ^ ^ false_start
it PRP it ^ OK
's BES 's predicate OK
like UH like arg1 OK
a DT a arg1 OK
whole JJ whole arg1 OK
nother JJ another arg1 false_start
w- XX ^ ^ repeat
country NN country arg1 OK
over IN over arg1 OK
there RB there arg1 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
got VBN 've ^ false_start
got VBN got predicate OK
a- XX ^ ^ filler
l- XX ^ ^ repeat
lu- XX ^ ^ repeat
ru- XX ^ ^ repeat
uh UH ^ ^ filler
laws NNS laws arg1 OK
and CC and arg1 OK
rules NNS rules arg1 OK
that WDT that arg1 OK
nobody NN nobody arg0 OK
else RB else arg0 OK
has VBZ has arg1 OK

it PRP it arg1 OK
was VBD was predicate OK
the DT the arg2 OK
supreme NNP supreme arg2 OK
court NNP court arg2 OK
um UH ^ ^ filler
i- PRP ^ ^ false_start
because IN because ^ OK
it PRP it arg1 OK
went VBD went predicate OK
all PDT all arg4 OK
the DT the arg4 OK
way NN way arg4 OK
up IN up arg4 OK
there RB there arg4 OK

they PRP they arg0 OK
said VBD said predicate OK
that IN that arg1 OK
universities NNS universities arg0 OK
could MD could arg1 OK
use VB use arg1 OK
race NN race arg1 OK
as IN as arg2 OK
a DT a arg2 OK
factor NN factor arg2 OK
ah UH ^ ^ filler
with IN with arg2 OK
selecting VBG selecting arg2 OK
students NNS students arg1 OK
for IN for arg3 OK
admission NN admission arg3 OK

n- XX ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
the DT the ^ OK
specifics NNS specifics ^ OK
behind IN behind ^ OK
you PRP ^ ^ filler
know VB ^ ^ filler
that DT that ^ OK
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
why WRB why ^ OK
they PRP they ^ OK
ruled VBD ruled ^ OK
that IN that ^ OK
they PRP they ^ OK
had VBD had ^ OK
to TO to ^ OK
or VP ^ ^ repeat
or ADVP-2 or ^ OK
what CC what ^ OK
even CC even ^ OK
led WP led ^ OK
to RB to ^ OK
them VBD them ^ OK
coming IN coming ^ OK
up PRP up ^ OK
to VBG to ^ OK
that RP that ^ OK
because IN because ^ OK
you DT ^ ^ filler
know IN ^ ^ filler
th- PRP th- ^ OK
a- VBP a- ^ OK

and CC ^ ^ false_start
then RB ^ ^ false_start
and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
remember VB remember predicate OK
when RB when arg1 OK
because IN because ^ OK
when WRB when argM_tmp OK
i PRP i argM_tmp OK
was VBD was argM_tmp OK
in IN in argM_tmp OK
school NN school argM_tmp OK
i ADVP-TMP- 1 ^ ^ filler
mean PRP ^ ^ filler
that VBP that arg1 OK
was DT was predicate OK
a VBD a arg2 OK
factor DT factor arg2 OK

and CC ^ ^ false_start
then RB then ^ OK
it PRP it arg0 OK
came VBD came predicate OK
back RB back argM_other OK
this DT this argM_tmp OK
year NN year argM_tmp OK
saying VBG saying predicate OK
that IN that arg1 OK
uh UH ^ ^ filler
y- XX ^ ^ filler
they PRP they arg0 OK
could MD could arg1 OK
use VB use arg1 OK
that DT that arg1 OK
as IN as arg2 OK
a DT a arg2 OK
factor NN factor arg2 OK
to IN to arg2 OK
um UH ^ ^ filler
selecting VBG select arg2 false_start
students NNS students arg1 OK
for IN for arg3 OK
admission NN admission arg3 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
w- XX ^ ^ filler
hey UH ^ ^ filler
what WP what arg1 OK
did VBD did ^ OK
you PRP you arg0 OK
make VB make predicate OK
on IN on argM_loc OK
the DT the argM_loc OK
a. NN a. argM_loc OK
c. NN c. argM_loc OK
t. NN t. argM_loc OK

um UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
n- XX ^ ^ repeat
n- XX ^ ^ repeat
what WP what arg1 OK
i PRP i arg0 OK
enjoy VBP enjoy arg1 OK
most JJS most arg1 OK
of IN of arg1 OK
all DT all arg1 OK
is VBZ is arg1 OK
just RB ^ ^ false_start
walking VBG walking arg2 OK
around IN around arg1 OK
the DT the arg1 OK
city NN city arg1 OK

which WDT which ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
love VBP love ^ OK
doing VBG doing ^ OK

i- PRP i- ^ OK

oh UH ^ ^ filler
oh UH ^ ^ filler
oh UH ^ ^ filler
um UH ^ ^ filler
no UH no ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
hav- VBP ^ ^ repeat
have VBP have ^ OK
n't RB n't ^ OK
rowed VBN rowed predicate OK
since IN since argM_tmp OK
um UH ^ ^ filler
since IN _NOUN_ argM_tmp false_start

that DT ^ ^ false_start
's BES ^ ^ false_start
sounds VBZ ^ ^ false_start
i PRP i ^ OK
would MD would ^ OK

eh UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
a DT a arg2 OK
big JJ big arg2 OK
uh UH ^ ^ filler
canoer NN ^ ^ false_start
rower NN rower arg2 OK

um UH ^ ^ filler
a- CC a- ^ OK

roll- NN ^ ^ false_start
um UH ^ ^ filler
love VBP love ^ OK
to TO to ^ OK

i PRP i ^ OK
i PRP ^ ^ repeat
have VBP have ^ OK
n't RB n't ^ OK
really RB really ^ OK

w- WP ^ ^ repeat
what WP ^ ^ false_start
are VBP ^ ^ false_start
you PRP ^ ^ false_start
um UH ^ ^ filler
what WP what arg2 OK
is VBZ is predicate OK
your PRP your arg1 OK
best JJS best arg1 OK
activity NN activity arg1 OK
outside RB outside argM_loc OK

wher- JJ ^ ^ false_start
do VBP do ^ OK
you PRP you arg1 OK
live VB live predicate OK
in IN ^ ^ repeat
in IN in argM_loc OK
los NNP los argM_loc OK
angeles NNP angeles argM_loc OK

so UH ^ ^ false_start
wh- XX ^ ^ repeat
j- XX j- ^ OK

which WDT ^ ^ repeat
which WDT which ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
sure JJ sure ^ OK
is VBZ is ^ OK
lovely JJ lovely ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
to IN to ^ OK
i PRP ^ ^ false_start
me PRP me arg0 OK
there EX there ^ OK
's BES 's predicate OK
nothing NN nothing arg2 OK
like IN like arg2 OK
just RB ^ ^ false_start
w- VBG ^ ^ repeat
walking VBG walking arg1 OK
around IN around arg1 OK
the DT the arg1 OK
city NN city arg1 OK

a- CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
it PRP it arg0 OK
never RB never argM_tmp OK
ceases VBZ ceases predicate OK
to TO to arg1 OK
amaze VB amaze arg1 OK
me PRP me arg1 OK

unfortunately RB unfortunately ^ OK
he PRP he arg1 OK
's BES 's predicate OK
now RB now argM_tmp OK
in IN in arg2 OK
florida NNP florida arg2 OK
which WDT ^ ^ OK
which WDT which arg1 OK
is VBZ is predicate OK
just RB ^ ^ false_start
weird JJ weird arg2 OK

um UH ^ arg2 filler
and CC ^ ^ false_start
to IN to argM_other OK
me PRP me argM_other OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
j- RB ^ ^ repeat
just RB just arg2 OK
just RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
window NN window arg2 OK
shopping NN shopping arg2 OK
looking VBG and ^ false_start
looking VBG looking arg2 OK
at IN at arg1 OK
architecture NN architecture arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
so RB ^ ^ repeat
so RB so arg2 OK
stimulating JJ stimulating arg2 OK

oh UH ^ ^ filler
as XX as ^ OK

um UH ^ ^ filler
fortunately RB fortunately ^ OK
i PRP i arg0 OK
did VBD ^ ^ false_start
miss VB missed predicate false_start
the DT the arg1 OK
um UH ^ ^ filler
blackout NN blackout arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
city NN city argM_loc OK

but CC but ^ OK
um UH ^ ^ filler

not RB ^ ^ repeat
not RB not arg0 OK
that RB that arg0 OK
many JJ many arg0 OK
people NNS people arg0 OK
even RB ^ ^ false_start
remember VB remember predicate OK
mccormick NNP mccormick arg1 OK
's POS 's arg1 OK

now RB ^ ^ false_start
that DT ^ ^ repeat
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK

i- PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
an DT an arg2 OK
interesting JJ interesting arg2 OK
city NN city arg2 OK

eh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
think VB think predicate OK
of IN of arg1 OK
anything NN anything arg1 OK
really SBAR-1 ^ ^ false_start
that RB ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
re- XX ^ ^ false_start
today NN today argM_tmp OK
i PRP ^ ^ repeat
i PRP i arg0 OK
was VBD ^ ^ repeat
was VBD was ^ OK
just RB ^ ^ false_start
just RB ^ ^ false_start
walking VBG walking predicate OK
down IN ^ ^ false_start
through IN through arg1 OK
um UH ^ ^ filler
soho NNP soho arg1 OK

and CC ^ ^ false_start
um UH ^ ^ filler
it PRP it ^ OK
amazes SBAR-1 amazes predicate OK
me VBZ me arg1 OK
that PRP ^ ^ false_start
that IN ^ ^ repeat
this IN ^ ^ false_start
even DT ^ ^ false_start
if RB ^ ^ false_start
you IN ^ ^ false_start
think PRP ^ ^ false_start
that VBP ^ ^ false_start
you IN ^ ^ repeat
know PRP ^ ^ repeat
you VBP ^ ^ filler
know PRP ^ ^ filler
if VBP if arg0 OK
you IN i arg0 false_start
walked PRP walk arg0 false_start
around VBD around arg1 OK
the IN the arg1 OK
city DT city arg1 OK
that NN ^ ^ false_start
i IN ^ ^ filler
mean PRP ^ ^ filler
you VBP ^ ^ false_start
can PRP ^ ^ false_start
wal- MD ^ ^ false_start
i VB i arg0 OK
can PRP can arg0 OK
stumble MD stumble arg0 OK
onto VB onto argM_loc OK
a IN a arg2 OK
block DT block arg2 OK
that NN that arg0 OK
i WDT i arg1 OK
'm PRP 'm arg0 OK
totally VBP ^ ^ false_start
unfamiliar RB unfamiliar arg2 OK
with JJ with arg2 OK

um UH ^ ^ filler
i PRP ^ ^ false_start
live VBP ^ ^ false_start
near IN ^ ^ false_start
um UH ^ ^ filler
do VB do ^ OK
you PRP you arg0 OK
know VBP know predicate OK
where WRB where arg2 OK
stuyvesant NN stuyvesant arg1 OK
stuyvesant NN is arg1 false_start

um UH ^ ^ filler
so UH ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
down IN down ^ OK
a- XX ^ ^ false_start

but UNK ^ ^ false_start
i UNK ^ ^ false_start
mean UNK ^ ^ false_start
i UNK i arg0 OK
discovered UNK discovered predicate OK
avenues UNK avenues arg1 OK
um UNK ^ ^ filler
like UNK ^ ^ filler
beyond UNK beyond argM_loc OK
a. UNK a. argM_loc OK
b. UNK b. argM_loc OK
and UNK and argM_loc OK
c. UNK c. argM_loc OK

when WRB ^ ^ false_start
you PRP ^ ^ false_start
sort RB ^ ^ filler
of RB ^ ^ filler
beyond IN beyond ^ OK
those DT those ^ OK

well UH ^ ^ filler
being VBG being ^ OK
in IN in ^ OK
the DT the ^ OK
linguistics NN linguistics ^ OK
department NN department ^ OK
um UH ^ ^ filler

but CC ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
enough JJ enough arg1 OK
money NN money arg1 OK
because IN because argM_cause OK
eh UH ^ ^ filler
where WRB where argM_loc OK
i PRP i argM_loc OK
'm VBP 'm argM_loc OK
from IN from argM_loc OK
there ADVP-1 there arg1 OK
's RB 're argM_cause false_start
a BES a arg2 OK
lot DT lot arg2 OK
of NN of arg2 OK
um IN ^ ^ filler
mexicans UH mexicans arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
hey UH ^ ^ filler
um UH ^ ^ filler
i PRP i arg0 OK
'm VBP 'm arg1 OK
going VBG going argM_mod OK
to TO to argM_mod OK
teach VB teach arg1 OK
your PRP your arg2 OK
employees NNS employees arg2 OK
english NNP english arg1 OK

like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
and CC ^ ^ false_start
then RB ^ ^ false_start
we PRP ^ ^ false_start
'll MD ^ ^ false_start
pay VBP pay predicate OK
me PRP me arg2 OK
and CC ^ ^ false_start
money NN ^ ^ false_start
to TO to arg3 OK
do VB do arg3 OK
this DT this arg3 OK

and CC ^ ^ false_start
he PRP he arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
yeah UH ^ ^ filler
come VB come arg1 OK
back RB back arg4 OK
when WRB when argM_tmp OK
you PRP you arg0 OK
um UH ^ ^ filler
are VBP are argM_tmp OK
able JJ able arg2 OK
to TO to arg2 OK
pay VB pay arg2 OK
for IN for arg3 OK
that DT that arg3 OK

and CC ^ ^ false_start
he PRP he arg0 OK
's BES ^ ^ false_start
like RP said predicate false_start
yeah UH yeah arg1 OK

so UH ^ ^ filler
but CC ^ ^ false_start
that DT that arg1 OK
was VBD was predicate OK
like UH ^ ^ filler
eh UH ^ ^ filler
three CD three arg2 OK
years NNS years arg2 OK
ago RB ago arg2 OK

me PRP me ^ OK
either RB either ^ OK

you PRP you arg1 OK
'd MD 'd argM_mod OK
have VB have argM_mod OK
to TO to argM_mod OK
go VB go ^ OK
like UH ^ predicate filler

like IN ^ ^ filler
lincoln NNP lincoln ^ OK
city NNP city ^ OK
oregon NNP oregon ^ OK

um UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
my PRP my arg1 OK
business NN business arg1 OK
would MD would argM_mod OK
be VB be arg1 OK
successful JJ successful arg2 OK
because IN because argM_cause OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
d- XX ^ ^ false_start
like UH ^ ^ filler
there EX there arg1 OK
's BES 's argM_cause OK
tons NNS tons arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
who WP who arg0 OK
have VBP have argM_mod OK
to TO to argM_mod OK
learn VB learn arg2 OK
english NNP english arg1 OK
that WDT that arg2 OK
are VBP are arg2 OK
always RB always argM_tmp OK
looking VBG looking arg2 OK
to TO to arg1 OK
learn VB learn arg1 OK

especially RB especially ^ OK
people NNS people ^ OK
like IN ^ ^ false_start
that DT ^ ^ false_start
that WDT that ^ OK
are VBP are ^ OK
working VBG working ^ OK
at IN at ^ OK
temp NN temp ^ OK
agencies NNS agencies ^ OK
which WDT which ^ OK
are VBP are ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
them PRP them ^ OK

um UH ^ ^ filler
what WP what arg1 OK
else RB else arg1 OK
are VBP are ^ OK
we PRP we arg0 OK
supposed VBN supposed predicate OK
to TO to arg2 OK
talk VB talk arg2 OK
about IN about arg1 OK

when WRB when argM_tmp OK
did VBD did ^ OK
we PRP we arg0 OK
start VB start predicate OK
eh UH ^ ^ filler
talking VBG talking arg1 OK

that DT that arg1 OK
's BES 's predicate OK
probably RB probably arg2 OK
good JJ good arg2 OK
because IN because argM_cause OK
i- IN ^ ^ false_start
like UH ^ ^ filler
eh UH ^ ^ filler
sometimes RB sometimes argM_tmp OK
if IN ^ ^ repeat
if IN if argM_adverb OK
you PRP ^ ^ repeat
you PRP you arg0 OK
speak VBP speak argM_cause OK
a DT a arg1 OK
language NN language arg1 OK
then RB then argM_adverb OK
they PRP they arg0 OK
use VBP use argM_cause OK
it PRP it arg1 OK
as IN as arg2 OK
a DT a arg2 OK
crutch NN crutch arg2 OK

so UH ^ ^ filler
was VBD was ^ OK
it PRP it ^ OK
in IN in ^ OK
a DT a ^ OK

eh UH ^ ^ filler
oh UH ^ ^ filler
go VB go predicate OK
ahead RB ahead argM_dir OK

oh UH ^ ^ filler
i PRP i arg0 OK
studied VBD studied predicate OK
french JJ french arg1 OK
a DT a argM_tmp OK
long JJ long argM_tmp OK
t- NN ^ ^ false_start
f- XX ^ ^ false_start
time NN time argM_tmp OK
ago RB ago argM_tmp OK

because IN because ^ OK
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
where WRB where arg1 OK
exactly RB exactly arg1 OK
is VBZ is arg1 OK
safe JJ safe arg1 OK

mm UH ^ ^ filler
that DT ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
honestly RB honestly ^ OK
feel VBP feel predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
uh UH ^ ^ filler
something NN something arg1 OK
personal JJ personal arg1 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
with IN ^ ^ repeat
with IN ^ ^ false_start
saddam NNP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
everybody NN ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
thought VBD thought predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
osama NNP osama arg1 OK
bin NNP bin arg1 OK
laden NNP laden arg1 OK
was VBD was arg1 OK
the DT the arg2 OK
person NN person arg2 OK
that WDT that arg2 OK
they PRP they arg0 OK
're VBP 're arg2 OK
supposed VBN supposed arg2 OK
to TO to arg1 OK
be VB be arg1 OK
looking VBG looking arg1 OK
for IN for arg1 OK

and CC ^ ^ false_start
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden JJ sudden ^ OK
i PRP i arg0 OK
hear VBP hear predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
saddam NNP saddam arg1 OK

it PRP it arg1 OK
was VBD was predicate OK
just RB ^ ^ false_start
like IN ^ ^ filler
in IN in ^ OK
in IN _NOUN_ arg1 false_start

the DT ^ ^ false_start
thing NN ^ ^ false_start
is VBZ ^ ^ false_start
that IN ^ ^ false_start
right RB right ^ OK
after IN after ^ OK
september NNP september ^ OK
eleventh JJ eleventh ^ OK
it PRP ^ ^ repeat
like IN ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
just RB ^ ^ false_start
became VBD became predicate OK
like UH ^ ^ filler
a DT a arg2 OK
joke NN joke arg2 OK
to IN to ^ OK
some DT some ^ OK
people NNS people ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
want VBP want predicate OK
to TO to arg1 OK
send VB send arg1 OK
you PRP you arg1 OK
emails NNS emails arg2 OK
online RB online arg2 OK

and CC ^ arg1 false_start
they PRP they arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
realize VB realize predicate OK
that IN that arg1 OK
they PRP they arg0 OK
're VBP 're arg1 OK
affecting VBG affecting arg1 OK
the DT the arg0 OK
people NNS people arg0 OK
that WDT that arg1 OK
lost VBD lost predicate OK
lost VBD _ARG_ arg1 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
i PRP i arg0 OK
have VBP have predicate OK
a DT ^ ^ false_start
um UH ^ ^ filler
a DT a arg0 OK
family NN family arg0 OK
member NN member arg0 OK
who WP who arg1 OK
lost VBD lost arg1 OK
her PRP her arg1 OK
a DT ^ ^ false_start
uh UH ^ ^ filler
best JJS best arg1 OK
friend NN friend arg1 OK
in IN in arg2 OK
the DT the arg2 OK
world NNP world arg2 OK
trade NNP trade arg2 OK
center NNP center arg2 OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
're VBP ^ ^ repeat
they PRP they arg0 OK
're VBP 're ^ OK
the DT the ^ OK
ones NNS ones ^ OK
fighting VBG fighting predicate OK
for IN for arg2 OK
us PRP us arg2 OK

i PRP ^ ^ repeat
i PRP ^ ^ false_start
've VBP ^ ^ false_start
um UH ^ ^ filler
i PRP i arg1 OK
ended VBD ended predicate OK
up RP up arg_particl OK
going VBG going arg1 OK
out IN out arg4 OK
of IN of arg4 OK
state NN state arg4 OK
last JJ last argM_tmp OK
month NN month argM_tmp OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
like UH ^ ^ filler
i PRP i arg1 OK
was VBD ^ ^ repeat
was VBD was ^ OK
just RB ^ ^ repeat
just RB just ^ OK
going VBG going predicate OK
crazy JJ crazy arg4 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
b- XX ^ ^ false_start
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
have VB have predicate OK
any DT any arg1 OK
metal NN metal arg1 OK
objects NNS objects arg1 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
they PRP they arg0 OK
said VBD said predicate OK
it PRP ^ ^ repeat
ha- VBZ ^ ^ repeat
it PRP it arg1 OK
has VBZ ^ ^ repeat
carries VBZ carries arg1 OK
a DT a arg1 OK
metal NN metal arg1 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD was predicate OK
glad JJ glad arg2 OK
that IN that arg2 OK
they PRP they arg0 OK
did VBD did arg2 OK
that DT that arg1 OK
because IN because ^ OK
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like RP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
at RB at ^ OK
least RB least ^ OK
i PRP i arg0 OK
know VBP know predicate OK

m- PRP ^ ^ repeat
my PRP my arg0 OK
father NN father arg0 OK
smoked VBD smoked predicate OK
from IN from argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK
he PRP he arg1 OK
was VBD was argM_tmp OK
thirteen CD thirteen arg2 OK
to ADVP-TMP- 1 to argM_tmp OK
the IN the argM_tmp OK
time DT time argM_tmp OK
he NN he arg1 OK
was PRP was argM_tmp OK
like VBD ^ ^ filler
fifty UH fifty arg2 OK

so UH ^ ^ false_start
in IN in ^ OK
general JJ general ^ OK
i PRP i arg0 OK
am VBP am ^ OK
in IN in arg_particl OK
favor NN favor predicate OK
of IN of arg1 OK
pretty RB pretty arg0 OK
much JJ much arg0 OK
anything NN anything arg0 OK
to TO ^ ^ repeat
uh UH ^ ^ filler
to TO to arg1 OK
encourage VB encourage arg1 OK
people NNS people arg0 OK
not RB not arg2 OK
to TO to arg2 OK
smoke VB smoke arg2 OK

i- PRP i- ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
know VBP ^ ^ repeat
know VBP know predicate OK
it PRP it arg0 OK
took VBD took arg1 OK
my PRP my arg0 false_start
father NN father arg0 false_start
like UH ^ ^ filler
three CD three arg1 OK
or CC or arg1 OK
four CD four arg1 OK
time- NNS ^ ^ repeat
times NNS times arg1 OK
to TO to arg1 OK
quit VB quit arg1 OK

well UH ^ ^ filler
uh UH ^ ^ filler
w- XX ^ ^ filler
there EX there ^ OK
's BES 's predicate OK
uh UH ^ ^ filler
no DT no arg1 OK
smoking NN smoking arg1 OK
in IN in argM_loc OK
restaurants NNS restaurants argM_loc OK

uh UH ^ ^ filler
i PRP i ^ OK
know VBP know ^ OK
in IN ^ ^ repeat
uh UH ^ ^ filler
in IN in ^ OK
a DT ^ ^ repeat
a DT a ^ OK
lot NN ^ ^ repeat
lot NN lot ^ OK
of IN ^ ^ repeat
of IN of ^ OK
places NNS places ^ OK
like IN like ^ OK
uh UH ^ ^ filler
outside IN outside ^ OK
of IN of ^ OK

well UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
a DT a arg2 OK
college NN college arg2 OK
student NN student arg2 OK

they PRP ^ ^ repeat
they PRP they ^ OK
might MD might ^ OK

but CC but ^ OK
probably RB probably ^ OK
not RB not ^ OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
'd MD 'd arg1 OK
be VB be arg1 OK
good JJ good arg2 OK
if IN if arg2 OK
they PRP they arg0 OK
did VBD did arg2 OK
because VP because arg1 OK
there IN there arg1 OK
's EX 's arg1 OK
a BES a arg2 OK
lot DT lot arg2 OK
of NN of arg2 OK
people IN people arg2 OK
that NNS that arg0 OK
smoke WDT smoke arg2 OK
on VBP on argM_loc OK
campus IN campus argM_loc OK

w- UH ^ ^ repeat
well UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
good JJ good arg2 OK

but CC but ^ OK
uh UH uh ^ OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
a DT ^ ^ false_start
like UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg0 OK
he- VBZ ^ ^ repeat
helps VBZ helps arg1 OK
people NNS people arg1 OK
that WDT ^ ^ repeat
that WDT that arg0 OK
are VBP ^ ^ repeat
would MD would arg1 OK
going VBG ^ ^ repeat
probably RB probably arg1 OK
to TO ^ ^ repeat
be VB be arg1 OK
quit VB ^ ^ repeat
quitting VBG quitting arg1 OK
anyway RB anyway arg1 OK

i- PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
glad JJ glad arg2 OK
they PRP they arg1 OK
exist VBP exist arg2 OK

but CC but ^ OK
uh UH uh ^ OK

just RB ^ ^ repeat
just RB just ^ false_start
themselves PRP themselves ^ OK

i UNK ^ ^ repeat
i UNK i arg0 OK
definitely UNK definitely ^ OK
a UNK have predicate false_start
a UNK a arg1 false_start
problem UNK problem arg1 OK
you UNK ^ ^ filler
know UNK ^ ^ filler

but CC but ^ OK
nothing NN nothing ^ OK
like UH ^ ^ filler
real RB real ^ OK
bad JJ bad ^ OK
going VBG is ^ false_start
going VBG going ^ OK
on RB on ^ OK

because IN because ^ OK
i PRP i ^ OK
have VBP have ^ OK
lot NN lot ^ OK
of IN of ^ OK
neighbors NNS neighbors ^ OK
around IN around ^ OK
here RB here ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
most JJS most ^ OK
of IN of ^ OK
them PRP them ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
even RB even ^ OK
know VB know ^ OK
their PRP their ^ OK
names NNS names ^ OK
really RB really ^ OK

m- XX m- ^ OK
yeah UH yeah ^ OK

use VB use ^ OK
this DT this ^ OK
money NN money ^ OK
to TO to ^ OK
pay VB ^ ^ repeat
pay VB pay ^ OK
th- DT ^ ^ repeat
the DT the ^ OK
cell NN cell ^ OK
phone NN phone ^ OK
bill NN bill ^ OK

so UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
feel VB feel ^ OK
unsafe JJ unsafe ^ OK
or CC or ^ OK
anything NN anything ^ OK

but CC ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
i PRP i ^ OK
know VBP know ^ OK
there EX there ^ OK
's BES 's ^ OK
like UH ^ ^ filler
people NNS people ^ OK
watching VBG watching ^ OK
out RP out ^ OK
for IN for ^ OK
everyone NN everyone ^ OK

then RB then ^ OK
it PRP it ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
's BES ^ ^ false_start
reassures VBZ reassures ^ OK
you PRP you ^ OK

and UNK ^ ^ false_start
then UNK then ^ OK
when UNK when ^ OK
you UNK you ^ OK
look UNK look ^ OK
out UNK out ^ OK
your UNK your ^ OK
house UNK house ^ OK
and UNK and ^ OK
you UNK you ^ OK
see UNK see ^ OK
all UNK all ^ OK
the UNK the ^ OK
litter UNK litter ^ OK
everywhere UNK everywhere ^ OK
and UNK and ^ OK
the UNK the ^ OK
graffiti UNK graffiti ^ OK
really UNK really ^ OK
lessens UNK it ^ false_start
lessens UNK lessens ^ OK
your UNK your ^ OK
view UNK view ^ OK
of UNK of ^ OK
the UNK the ^ OK
whole UNK whole ^ OK
community UNK community ^ OK
and UNK and ^ OK
life UNK life ^ OK
an- UNK ^ ^ repeat
and UNK and ^ OK
everything UNK everything ^ OK

i PRP i ^ OK
've VBP 've ^ OK
only RB only ^ OK
been VBN been ^ OK
doing VBG doing ^ OK
this DT this ^ OK
for IN for ^ OK
m- XX ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
a DT a ^ OK
week NN week ^ OK
now RB now ^ OK

might MD might ^ OK
have VB have ^ OK
came VBN came ^ OK
already RB already ^ OK

we PRP we ^ OK
got VBD got ^ OK
out IN out ^ OK
on IN on ^ OK
the DT the ^ OK
boat NN boat ^ OK
twice RB ^ ^ repeat
two CD two ^ OK
or CC or ^ OK
three CD three ^ OK
times NNS times ^ OK
a DT a ^ OK
week NN week ^ OK
at RB at ^ OK
least RBS least ^ OK

they PRP they ^ OK
're VBP 're ^ OK

well UH ^ ^ false_start
two CD two ^ OK
of IN of ^ OK
they PRP ^ ^ repeat
them PRP them ^ OK
're VBP ^ ^ repeat
are VBP are ^ OK
in IN in ^ OK
jersey NNP jersey ^ OK

oh UH ^ ^ filler
and CC ^ ^ false_start
then RB then ^ OK
when WRB when ^ OK
the DT the ^ OK
phone NN phone ^ OK
rang VBD rang ^ OK
i ADVP-TMP- 1 i ^ OK
said PRP said ^ OK
i VBD i ^ OK
bet PRP bet ^ OK
you VBP you ^ OK
it PRP it ^ OK
's PRP 's ^ OK
probably BES probably ^ OK
someone RB someone ^ OK
calling NN calling ^ OK
me VBG me ^ OK
now PRP now ^ OK

and CC ^ ^ false_start
then RB ^ ^ repeat
then RB then ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
goes VBZ goes ^ OK
up RP up ^ OK

eh UH eh ^ OK
yeah UH yeah ^ OK

i PRP ^ ^ false_start
guess VBP ^ ^ false_start
they PRP ^ ^ repeat
they PRP they ^ OK
were VBD were ^ OK
giving VBG giving ^ OK
out RP out ^ OK
quite PDT quite ^ OK
a DT a ^ OK
few JJ few ^ OK
mo- NN ^ ^ repeat
uh UH ^ ^ filler
money NN dollars ^ false_start
last JJ last ^ OK
year NN year ^ OK

that IN ^ ^ false_start
toward IN toward ^ OK
the DT the ^ OK
end NN end ^ OK
if IN if ^ OK
you PRP you ^ OK
made VBN made ^ OK
your PRP your ^ OK
twelve CD twelve ^ OK
calls NNS calls ^ OK
uh UH ^ ^ filler
they PRP ^ ^ repeat
uh UH ^ ^ filler
they PRP they ^ OK
gave VBD ^ ^ repeat
had VBD had ^ OK
uh UH ^ ^ filler
like UH ^ ^ filler
a DT a ^ OK
pool NN pool ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
r- RB ^ ^ repeat
really RB really ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

it PRP it ^ OK
was VBD was ^ OK
up- XX up- ^ OK

ninety-six CD ninety-six ^ OK
ninety-six CD ^ ^ false_start
ninety-seven CD or ^ false_start
ninety-seven CD ninety-seven ^ OK
ninety-seven CD ^ ^ false_start
something NN or ^ false_start
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

oh UH ^ ^ filler
you PRP you ^ OK
're VBP 're ^ OK
probably RB probably ^ OK
getting VBG getting ^ OK
that DT that ^ OK
storm NN storm ^ OK
that WDT that ^ OK
we PRP we ^ OK
had VBD had ^ OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
weeks NNS weeks ^ OK
ago RB ago ^ OK

we PRP we ^ OK
had VBD had ^ OK
er UH ^ ^ filler
a DT a ^ OK
hurricane NN hurricane ^ OK

oh UH ^ ^ filler
we PRP ^ ^ repeat
usually RB ^ ^ repeat
we PRP we ^ OK
spend VBP spend ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
time NN time ^ OK
up IN up ^ OK
north RB north ^ OK

we PRP ^ ^ false_start
grew VBD ^ ^ false_start
up RP ^ ^ false_start
we PRP we ^ OK
got VBD have ^ false_start
friends NNS friends ^ OK
in IN in ^ OK
jersey NNP jersey ^ OK

eh UH ^ ^ filler
um UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg0 OK
it PRP ^ ^ repeat
probably RB probably argM_adverb OK
does VBZ does arg1 OK
have VB have arg1 OK
like UH ^ ^ filler
a DT a arg1 OK
pretty RB pretty arg1 OK
good JJ good arg1 OK
effect NN effect arg1 OK

um UH ^ ^ filler
but CC ^ ^ false_start
there EX ^ ^ false_start
are VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
like IN like arg2 OK
other JJ other arg2 OK
weird NN weird arg2 OK
stuff NN stuff arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
where WRB where argM_loc OK
like UH ^ ^ filler
people NNS people arg1 OK
will MD will argM_mod OK
get VB get arg2 OK
like UH ^ ^ filler
searched VBD searched arg2 OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

because IN ^ ^ false_start
of IN ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
like UH ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
friend NN friend arg1 OK
who WP who arg1 OK
's BES 's arg1 OK
israeli JJ israeli arg2 OK

exactly UH ^ ^ filler
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD had predicate OK
like UH ^ ^ filler
another DT another arg0 OK
friend NN friend arg0 OK
who WP who arg0 OK
like UH ^ ^ filler
would MD would argM_mod OK
go VB go arg1 OK
to IN to arg4 OK
like UH ^ ^ filler
protests NNS protests arg4 OK
an- NAC-2 ^ ^ repeat
all CC all argM_tmp OK
the PDT the argM_tmp OK
time DT time argM_tmp OK
and NN ^ ^ false_start
stuff CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start
like DT ^ ^ filler
i- UH ^ ^ false_start
like XX ^ ^ filler
for UH for argM_purpos OK
like IN ^ ^ filler
th- UH the argM_purpos false_start
uh DT ^ ^ filler
world UH world argM_purpos OK
bank NNP bank argM_purpos OK
and NNP ^ ^ false_start
stuff CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

every DT every argM_tmp OK
time NN time argM_tmp OK
he PRP he argM_tmp OK
flies VBZ flies argM_tmp OK
and CC ^ ^ false_start
like UH ^ ^ filler
he PRP he arg1 false_start
gets ADVP-TMP- 1 gets predicate OK
pulled VBZ pulled predicate OK
out VBN out arg_particl OK
like RP ^ ^ filler
randomly UH randomly argM_adverb OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
like UH ^ ^ filler
like UH ^ ^ filler
when WRB ^ ^ false_start
i PRP ^ ^ false_start
my PRP my arg0 OK
she PRP ^ ^ false_start
israeli JJ israeli arg0 OK
she PRP ^ ^ false_start
friend NN friend arg0 OK
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
con- XX ^ ^ false_start
she PRP ^ ^ false_start
does VBZ does arg1 OK
n't RB n't argM_neg OK
seem VB seem arg1 OK
to TO to arg2 OK
mind VB mind arg2 OK
very RB very argM_extent OK
much RB much argM_extent OK

you PRP ^ ^ filler
know VBP ^ ^ filler
because UH ^ ^ false_start
i PRP i ^ OK
mean VBP mean ^ OK
like UH ^ ^ filler
they PRP ^ ^ false_start
ca- MD ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start

this DT ^ ^ repeat
this DT this arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
the DT ^ ^ repeat
the DT the arg2 OK
f- JJ ^ ^ repeat
first JJ first arg2 OK
one CD one arg2 OK
like UH ^ ^ filler
i PRP i arg1 OK
've VBP 've arg2 OK
been VBN been arg2 OK
called VBN called arg2 OK
for IN for arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
if IN if argM_adverb OK
they PRP they arg0 OK
just RB just argM_adverb OK
cut VB cut arg1 OK
us PRP us arg1 OK
off RP off arg_particl OK
eventually RB eventually argM_tmp OK

but CC but ^ OK
um UH ^ ^ filler

the DT the arg1 OK
airport NN airport arg1 OK
security NN security arg1 OK
's BES 's predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
a DT a arg2 OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
quick JJ ^ ^ repeat
quick JJ quick arg2 OK
um UH ^ ^ filler
thing NN thing arg2 OK

what WP what ^ OK
do VBP do ^ OK
you PRP you ^ OK
th- VB th- ^ OK

and CC ^ ^ false_start
that DT ^ ^ repeat
's BES ^ ^ repeat
that DT ^ ^ false_start
's BES ^ ^ false_start
always RB ^ ^ false_start
the DT ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP what arg1 OK
they PRP they arg1 OK
say VBP say arg1 OK
about IN about arg1 OK
like UH ^ ^ filler
guns NNS guns arg1 OK
at IN at arg1 OK
home NN home arg1 OK
too RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
is VBZ is arg1 OK
that IN that arg2 OK
like UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
guns NNS guns arg0 OK
like UH ^ ^ filler
do VBP do arg2 OK
n't RB n't argM_neg OK
really RB really argM_adverb OK
care VB care arg2 OK
like UH ^ ^ filler
who WP who arg0 OK
's BES 's arg1 OK
shooting VBG shooting arg1 OK
them PRP them arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ false_start
like UH ^ ^ filler
if IN if ^ OK
there EX there ^ OK
like UH ^ ^ filler
's BES 's ^ OK
a DT a ^ OK
gun NN gun ^ OK
for IN for ^ OK
the DT the ^ OK
pilot NN pilot ^ OK

like UH ^ ^ filler
if IN if ^ OK
they PRP they ^ OK
can MD can ^ OK
like UH ^ ^ filler
spray VB spray ^ OK
the DT the ^ OK
pilot NN pilot ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
and CC and ^ OK
you PRP you ^ OK
get VB get ^ OK
the DT the ^ OK
gun NN gun ^ OK
from IN from ^ OK
him PRP him ^ OK
then RB then ^ OK
they PRP they ^ OK
they PRP _ARG_ ^ false_start

me PRP me ^ OK
neither RB neither ^ OK

at RB at argM_discou false_start
least RBS least argM_discou false_start
it PRP it arg0 OK
probably RB probably argM_adverb OK
like UH ^ ^ filler
will MD will argM_mod OK
prevent VB prevent predicate OK
like UH ^ ^ filler
like UH ^ ^ filler
the DT ^ ^ false_start
r- JJ ^ ^ false_start
like UH ^ ^ filler
just RB ^ ^ false_start
like UH ^ ^ filler
the DT the arg1 OK
random JJ random arg1 OK
like UH ^ ^ filler
attack NN attack arg1 OK
type NN ^ ^ false_start
people NNS people arg1 OK

like UH ^ ^ filler
if IN ^ ^ repeat
like UH ^ ^ filler
if IN ^ ^ false_start
probably RB probably ^ OK
like UH ^ ^ filler
if IN if ^ OK
al NNP al ^ OK
qaeda NNP qaeda ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start

so UH ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg2 OK
good JJ good arg2 OK
in IN in arg2 OK
that DT that arg2 OK
regard NN regard arg2 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
still RB ^ ^ repeat
not RB ^ ^ repeat
not RB not argM_neg OK
totally RB totally argM_extent OK
convinced JJ convinced predicate OK
it PRP it arg1 OK
's BES 's arg2 OK
never RB never argM_neg OK
going VBG going argM_mod OK
to TO to argM_mod OK
happen VB happen arg2 OK
again RB again argM_tmp OK
though RB though argM_discou OK

i PRP i arg0 OK
go VBP go predicate OK
to IN to arg2 OK
a- XX ^ ^ false_start
ohio NNP ohio arg2 OK
state NNP state arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
well UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg0 OK
're VBP 're predicate OK
about JJ about argM_tmp OK
to TO to argM_tmp OK
do VB do arg2 OK
like UH ^ ^ filler
the DT ^ ^ repeat
the DT the arg1 OK
uh UH ^ ^ filler
fiesta NNP fiesta arg1 OK
bowl NNP bowl arg1 OK
there RB there argM_loc OK

they PRP they arg0 OK
had VBD had ^ OK
like UH ^ ^ filler
like UH ^ ^ filler
nineteen CD ^ ^ repeat
twenty CD twenty arg1 OK
ca- NNS ^ ^ repeat
cars NNS cars arg1 OK
flipped VBN flipped predicate OK
and NP and ^ OK
all CC all arg1 OK
these PDT these arg1 OK
cars DT cars arg1 OK
set NNS set predicate OK
on VBN on arg2 OK
fire IN fire arg2 OK
and NN ^ ^ false_start
stuff CC ^ ^ false_start

like UH ^ ^ filler
a DT a arg1 OK
ton NN ton arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
were VBD were predicate OK
on IN on arg1 OK
like UH ^ ^ filler
this DT this arg1 OK
street NN street arg1 OK
i PRP i arg0 OK
lived VBD lived arg2 OK
on IN on arg1 OK
like NP-1 ^ ^ filler
just UH just argM_adverb OK
last RB last argM_tmp OK
year JJ year argM_tmp OK

it PRP it arg1 OK
's BES 's predicate OK
like UH ^ ^ filler
real RB ^ ^ repeat
real RB real arg2 OK
w- JJ ^ ^ repeat
weird JJ weird arg2 OK

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
almost RB almost arg2 OK
like UH ^ ^ repeat
like UH ^ ^ filler
right RB right arg2 OK
in IN in arg2 OK
the DT the arg2 OK
middle NN middle arg2 OK
of IN of arg2 OK
it PRP it arg2 OK

eh UH ^ ^ filler
we PRP we arg0 OK
beat VBD beat predicate OK
michigan NNP michigan arg1 OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
beat VBD beat predicate OK
us PRP us arg1 OK
most JJS most argM_tmp OK
of IN of argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
really RB ^ ^ repeat
really RB really ^ OK
um UH ^ ^ filler

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
there EX there ^ OK
's BES 's ^ OK
um UH ^ ^ filler

e- XX ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
seen VBN seen predicate OK
people NNS people arg1 OK
from IN from arg1 OK
india NNP india arg1 OK
that WDT ^ ^ repeat
that WDT that ^ OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
taught VBD taught predicate OK
tennis NN tennis arg1 OK
with IN with ^ OK
that NP-1 that arg1 OK
were DT were predicate OK
much VBD much arg2 OK
darker RB darker arg2 OK
than JJR than arg2 OK
most IN most arg2 OK
of JJS of arg2 OK
the IN the arg2 OK
blacks DT blacks arg2 OK
in NNS in argM_loc OK
the IN the argM_loc OK
part DT part argM_loc OK
of NN of argM_loc OK
mississippi IN mississippi argM_loc OK
i NNP i arg0 OK
grew PRP grew arg2 OK
up VBD up arg_particl OK
in RB in arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
then RB ^ ^ false_start
i PRP i ^ OK
found VBD found ^ OK
out RP out ^ OK
that DT ^ ^ false_start
's BES ^ ^ false_start
t- XX ^ ^ false_start
um UH ^ ^ filler
dark JJ dark ^ OK
skinned JJ skinned ^ OK
blacks NNS blacks ^ OK
are VBP are ^ OK
treated VBN treated ^ OK
worse RBR worse ^ OK
by IN by ^ OK
light JJ light ^ OK
skinned JJ skinned ^ OK
blacks NNS blacks ^ OK
which WDT which ^ OK
was VBD was ^ OK
shocking JJ shocking ^ OK
to IN to ^ OK
me PRP me ^ OK

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
know VBP ^ ^ repeat
know VBP know ^ OK
in IN in ^ OK
africa NNP africa ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
've VBP 've ^ OK
got VBN got ^ OK
like UH ^ ^ filler
um UH ^ ^ filler

and CC ^ ^ false_start
others NNS others arg1 OK
are VBP are predicate OK
um UH ^ ^ filler
extrem- RB ^ ^ false_start
incredibly RB incredibly arg2 OK
short JJ short arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
average JJ average ^ OK
height NN height ^ OK

really RB ^ ^ false_start
t- XX ^ ^ filler
like UH ^ ^ filler
the DT ^ ^ false_start
maasai NNPS ^ ^ false_start
uh UH ^ ^ filler
the DT the arg1 OK
average JJ average arg1 OK
height NN height arg1 OK
is VBZ is predicate OK
seven CD seven arg2 OK
feet NNS feet arg2 OK
tall JJ tall arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
so RB ^ ^ false_start
that DT that arg0 OK
means VBZ means predicate OK
they PRP they arg0 OK
they PRP have arg1 false_start
got VBD got arg1 OK
a DT a arg1 OK
bunch NN bunch arg1 OK
of IN of arg1 OK
people NNS people arg1 OK
over IN over arg1 OK
seven CD seven arg1 OK
feet NNS feet arg1 OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
to TO ^ ^ repeat
to TO to arg1 OK
have VB have arg1 OK
that DT that arg1 OK
average NN average arg1 OK
be VB be arg1 OK
that RB that arg2 OK
high JJ high arg2 OK

certain JJ in argM_loc false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
ta- XX ^ ^ false_start
and CC ^ ^ repeat
and CC ^ ^ false_start
like UH ^ ^ filler
um UH ^ ^ filler
certain JJ certain argM_loc OK
parts NNS parts argM_loc OK
in IN in argM_loc OK
africa NNP africa argM_loc OK
th- DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg1 OK
average JJ average arg1 OK
height NN height arg1 OK
's BES 's predicate OK
seven CD seven arg2 OK
feet NNS feet arg2 OK
tall JJ tall arg2 OK

which WDT ^ ^ filler
which WDT which ^ OK
kind RB kind ^ OK
of RB of ^ OK
i- VBZ ^ ^ repeat
i- VBZ ^ ^ repeat
is VBZ ^ ^ repeat
is VBZ is ^ OK
a DT ^ ^ false_start
just RB just ^ OK
as RB as ^ OK
big JJ big ^ OK
a DT a ^ OK
difference NN difference ^ OK
in IN in ^ OK
color NN color ^ OK
of IN of ^ OK
skin NN skin ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
um UH ^ ^ filler
there- EX ^ ^ repeat
there EX there ^ OK
's BES 's predicate OK
all DT all arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
um UH ^ ^ filler
variations NNS variations arg1 OK
of IN of arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
height NN height arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and arg1 OK
colors NNS colors arg1 OK
of IN of arg1 OK
skin NN skin arg1 OK
and CC ^ ^ repeat
and CC and arg1 OK
um UH ^ ^ filler
uh UH ^ ^ filler
of IN of arg1 OK
course NN course arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
asian JJ asian arg1 OK
um UH ^ ^ filler
thing NN thing arg1 OK
with IN with arg1 OK
the DT the arg1 OK
eyes NNS eyes arg1 OK
being VBG being arg1 OK
um UH ^ ^ filler
slanted JJ slanted arg2 OK

i- PRP ^ ^ repeat
i PRP i ^ OK
just RB just ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler

d- XX ^ ^ filler
eh UH ^ ^ filler
mm UH ^ ^ filler
d- XX ^ ^ filler
uh UH ^ ^ filler
why WRB ^ ^ false_start
would MD ^ ^ false_start
s- NN ^ ^ false_start
how WRB ^ ^ repeat
how WRB how ^ OK
would MD would ^ OK
somebody NN somebody arg1 OK
's POS 's arg1 OK
eyes NNS eyes arg1 OK
get VB get predicate OK
slanted JJ slanted arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
ho- WRB ^ ^ false_start
where WRB ^ ^ false_start
wou- MD ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
where WRB ^ ^ false_start
would MD ^ ^ false_start
that DT ^ ^ false_start
come VB ^ ^ false_start
fr- IN ^ ^ false_start
and CC ^ ^ false_start
how WRB how ^ OK
did VBD did ^ OK
that DT that arg1 OK
happen VB happen predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
can MD can ^ OK
understand VB understand predicate OK
pigmentation NN pigmentation arg1 OK
of IN of arg1 OK
skin NN skin arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
it PRP it ^ OK
's BES 's predicate OK
like RP like arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
like RP ^ ^ filler
who WP ^ ^ repeat
who WP who arg0 OK
decided VBD decided arg1 OK
oh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
we PRP we arg0 OK
need VBP need arg1 OK
to TO to arg1 OK
start VB start arg1 OK
bounding VBG binding arg1 false_start
people NNS people arg1 OK
's POS 's arg1 OK
feet NNS feet arg1 OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
who- JJ ^ ^ repeat
who- NN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
y- XX ^ ^ filler
was VBD ^ ^ false_start
it PRP ^ ^ false_start
a DT ^ ^ false_start
k- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
the DT the arg1 OK
reason NN reason arg1 OK
men NNS men arg1 OK
have VBP have arg1 OK
to TO to arg1 OK
wear VB wear arg1 OK
neckties NNS neckties arg1 OK
to TO to arg1 OK
be VB be arg1 OK
dressed JJ dressed arg1 OK
up RP up arg1 OK
is ADVP-3 is predicate OK
because VBZ because arg2 OK
uh IN ^ ^ filler
some UH some arg0 OK
uh DT ^ ^ filler
king UH king arg0 OK
w- NNP ^ ^ filler
w- XX ^ ^ filler
forgot XX forgot arg0 OK
to VBD to arg1 OK
take TO take arg1 OK
his VB his arg1 OK
bib PRP bib arg1 OK
off NN off arg_particl OK
after RP after argM_tmp OK
a IN a argM_tmp OK
feast DT feast argM_tmp OK

otherwise RB otherwise ^ OK
the DT the arg0 OK
king NNP king arg0 OK
woul- MD ^ ^ repeat
would MD would ^ OK
look VB look predicate OK
foolish JJ foolish arg1 OK
if IN if ^ OK
everybody NN everybody arg0 OK
else RB else arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
had VBD had ^ OK
taken VBN taken predicate OK
their PRP their arg1 OK
napkin NN napkin arg1 OK
off RP off arg_particl OK

and CC ^ ^ false_start
so RB ^ ^ false_start
r- XX ^ ^ false_start
to TO ^ ^ false_start
in IN in ^ OK
order NN order ^ OK
to TO ^ ^ repeat
to TO to ^ OK
not RB not argM_neg OK
make VB make predicate OK
the DT the arg1 OK
king NN king arg1 OK
look VB look arg1 OK
foolish JJ foolish arg1 OK
everyone NN everyone arg0 OK
left VBD left predicate OK
their PRP their arg1 OK
napkin NN napkin arg1 OK
on IN on argM_loc OK
their PRP their argM_loc OK
neck NN neck argM_loc OK

and CC ^ ^ repeat
and CC ^ ^ false_start
it PRP it arg1 OK
became VBD became predicate OK
a DT a arg2 OK
fashion NN fashion arg2 OK
thing NN thing arg2 OK

men NNS men arg0 OK
have VBP have ^ OK
had VBN had ^ OK
to TO to ^ OK
wear VB wear predicate OK
ties NNS ties arg1 OK
and CC ^ ^ false_start
so RB ^ ^ false_start
now RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
or UH ^ ^ false_start
for IN for argM_tmp false_start
hundreds NNS hundreds argM_tmp false_start
of IN of argM_tmp false_start
years NNS years argM_tmp false_start
now RB now argM_tmp false_start
because IN because ^ OK
some DT some arg0 OK
m- NN ^ ^ repeat
monarch NN monarch arg0 OK
made VBD made predicate OK
a DT a arg1 OK
mistake NN mistake arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
stuff NN ^ ^ false_start
like IN ^ ^ false_start
tha- DT ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
history NN history arg1 OK
's BES 's predicate OK
just RB just arg2 false_start
full JJ full arg2 OK
of IN of arg2 OK
w- JJ ^ ^ repeat
weird JJ weird arg2 OK
uh UH ^ ^ filler
quirks NNS quirks arg2 OK

it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES ^ ^ OK
's BES 's ^ OK
like UH ^ ^ filler
um UH ^ ^ filler

well UH ^ ^ filler
from IN from ^ OK
a DT a ^ OK
standpoint NN standpoint ^ OK
of IN ^ ^ repeat
of IN of ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
um UH ^ ^ filler

my PRP ^ ^ false_start
uh UH ^ ^ filler
obviously RB obviously ^ OK
my PRP ^ ^ repeat
my PRP my arg0 OK
b- NN ^ ^ repeat
brother NN brother arg0 OK
's BES 's arg0 OK
and CC and arg0 OK
his PRP his arg0 OK
wife NN wife arg0 OK
wife NN 's arg0 false_start
uh UH ^ ^ filler
adopted VBN adopted arg0 OK
baby NN baby arg0 OK
is VBZ is ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
growing VBG growing predicate OK
up RB up arg_particl OK
at IN at argM_tmp OK
some DT some argM_tmp OK
point NN point argM_tmp OK
and CC and ^ OK
realize VB realize predicate OK
that IN that arg1 OK
hey UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
have VBP have arg1 OK
straight JJ straight arg1 OK
black JJ black arg1 OK
hair NN hair arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
media NNS media arg0 OK
coverage NN coverage arg0 OK
has VBZ has arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
to TO to arg1 OK
do VB do arg1 OK
with IN with arg1 OK
people NNS people arg0 OK
thinking VBG thinking arg1 OK
that IN that arg1 OK
there EX there arg1 OK
's BES 's arg1 OK
more JJR more arg2 OK
things NNS things arg2 OK
wrong JJ wrong arg2 OK
with IN with arg2 OK
s- NNS ^ ^ repeat
schools NNS schools arg2 OK
than IN than arg2 OK
there EX there arg2 OK
really RB really arg2 OK
are VBP are arg2 OK
i NP-PRD ^ ^ false_start
guess PRP ^ ^ false_start

like UH ^ ^ filler
after IN after ^ OK
all PDT all ^ OK
the DT the ^ OK

but CC but ^ OK
i- PRP ^ ^ false_start

pe- XX ^ ^ false_start
uh UH ^ ^ filler
do VBP do ^ OK
you PRP you ^ OK

what WP what arg1 OK
do VBP do ^ OK
do VBP you arg0 false_start
think VB think predicate OK
about IN about arg1 OK
like UH ^ ^ filler
private JJ private arg1 OK
schools NNS schools arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
churche- NNS ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

or CC or ^ OK
like UH ^ ^ filler
how WRB ^ ^ false_start
what WP what arg1 OK
's BES 's predicate OK
wrong JJ wrong arg2 OK
with IN with arg2 OK
the DT the arg2 OK
schools NNS schools arg2 OK
in IN in argM_loc OK
california NNP california argM_loc OK

is VBZ is predicate OK
that DT that arg1 OK
because IN because arg2 OK
they PRP they arg1 OK
're VBP 're arg2 OK
kind RB kind arg2 OK
of RB of arg2 OK
building VBG building arg2 OK
it PRP it arg2 OK
around IN around arg2 OK
like UH ^ ^ filler
a DT a arg2 OK
standardized JJ standardized arg2 OK
testing NN testing arg2 OK
or CC or arg2 OK
something NN ^ ^ false_start
like UH ^ ^ filler
the DT the arg2 OK
curriculum NN curriculum arg2 OK

so UH ^ ^ false_start
what WP what arg1 OK
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
think VB think predicate OK
they PRP they arg0 OK
could MD could arg1 OK
do VB do arg1 OK
like UH ^ ^ filler
to TO to arg1 OK
fix VB fix arg1 OK
it PRP it arg1 OK

i PRP i arg0 false_start
guess VBP guess predicate false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
like UH ^ ^ filler
other RB ^ ^ false_start
than IN ^ ^ false_start
just RB ^ ^ repeat
just RB just arg1 OK
straight JJ straight arg1 OK
up RB up arg1 OK
funding NN funding arg1 OK
is VBZ is arg1 OK
the DT the arg2 OK
only JJ only arg2 OK
way NN way arg2 OK
you PRP you arg0 OK
can MD can arg2 OK
really RB really arg2 OK
fix VB fix arg2 OK
your PRP your arg1 OK
california NNP california arg1 OK
schools NNS schools arg1 OK
or CC or arg1 OK
your PRP your arg1 OK
public JJ public arg1 OK
schools NNS schools arg1 OK
there RB there argM_loc OK

but CC but ^ OK
it PRP it ^ OK
seems VBZ seems predicate OK
like IN like arg1 OK
our PRP our arg1 OK
school NN school arg0 OK
's BES 's arg1 OK
always RB always argM_tmp OK
buying VBG buying arg1 OK
like UH ^ ^ filler
new JJ ^ ^ repeat
er UH ^ ^ filler
new JJ new arg1 OK
tech- NN ^ ^ repeat
like UH ^ ^ filler
technology NN technology arg1 OK
things NNS things arg1 OK

is VBZ is predicate OK
that DT ^ ^ repeat
that DT that arg1 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
a DT a arg2 OK
problem NN problem arg2 OK

well UH ^ ^ filler
see UH ^ ^ filler
i PRP ^ ^ false_start
've VBP ^ ^ false_start
i- PRP ^ ^ false_start
i- PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
uh UH ^ ^ filler
see UH ^ ^ filler
i PRP ^ ^ false_start
've VBP ^ ^ false_start
uh UH ^ ^ filler
see UH ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
been VBN been ^ OK
in IN in ^ OK
the DT the ^ OK
company NN company ^ OK
of IN of ^ OK
people NNS people ^ OK
taking VBG taking ^ OK
drugs NNS drugs ^ OK
before RB before ^ OK

it PRP it ^ OK
make S-1 makes ^ false_start
me VB me ^ OK
sick PRP sick ^ OK
just JJ just ^ OK
to RB to ^ OK
be TO be ^ OK
around VB around ^ OK
that IN that ^ OK
smoke DT smoke ^ OK

it PRP it ^ OK
make VB makes ^ false_start
me PRP me ^ OK
sick JJ sick ^ OK

and CC ^ ^ false_start
some DT ^ ^ false_start
people NNS ^ ^ false_start
just RB ^ ^ false_start
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
care VB care ^ OK
where WRB where ^ OK
they PRP they ^ OK
they PRP ^ ^ false_start
at IN are ^ false_start
at IN at ^ OK

they PRP they ^ OK
they PRP ^ ^ false_start
be VB would ^ false_start
be VB be ^ OK
d- XX ^ ^ false_start
on IN on ^ OK
the DT the ^ OK
buses NNS buses ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
movies NNS movies ^ OK
or CC ^ ^ repeat
or CC or ^ false_start
in IN in ^ OK
the DT the ^ OK
bath NN bath ^ OK

i PRP ^ ^ false_start
'd- MD ^ ^ false_start
i PRP ^ ^ false_start
'd- MD ^ ^ false_start
i PRP ^ ^ false_start
get VBP ^ ^ false_start
a XX ^ ^ false_start
i PRP i ^ OK
i PRP 'd ^ false_start
get VBP get ^ OK
away RB away ^ OK
from IN from ^ OK
them PRP them ^ OK

once IN once ^ OK
it PRP it ^ OK
get VB gets ^ false_start
in IN in ^ OK
your PRP your ^ OK
system NN system ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
then RB then ^ OK
you PRP you ^ OK
might MD might ^ OK
want VB want ^ OK
to TO to ^ OK
have VB have ^ OK
it PRP it ^ OK

they PRP ^ ^ false_start
got VBP ^ ^ false_start
s- RB ^ ^ false_start
man UH ^ ^ filler
they PRP ^ ^ false_start
got VBN ^ ^ false_start
they PRP they ^ OK
can MD can ^ OK
do VB do ^ OK
so RB so ^ OK
much JJ much ^ OK
today SBAR-2 today ^ OK

man NN ^ ^ filler
you UH you ^ OK
'd PRP 'd ^ OK
be MD be ^ OK
surprised VB surprised ^ OK
man JJ ^ ^ filler

oh UH ^ ^ filler
the DT the ^ OK
phone NN phone ^ OK
number NN number ^ OK
is VBZ is ^ OK
uh UH ^ ^ filler
oh UH ^ ^ filler
wait VB ^ ^ filler
a DT ^ ^ filler
minute NN ^ ^ filler
uh UH ^ ^ filler
one CD one ^ OK
eight CD eight ^ OK
hundred CD hundred ^ OK

uh UH ^ ^ filler
one CD one ^ OK
three CD three ^ OK
one CD ^ ^ repeat
one CD one ^ OK
f- CD ^ ^ repeat
five CD five ^ OK

some DT ^ ^ repeat
some DT ^ ^ repeat
some DT some ^ OK
spots NNS spots ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
uh UH ^ ^ filler
g- XX ^ ^ false_start
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
drugs NNS drugs ^ OK

it PRP it ^ OK
's S-1 's ^ OK
hard BES hard ^ OK
to JJ to ^ OK
move TO move ^ OK
in VB in ^ OK
a IN a ^ OK
neighborhood DT neighborhood ^ OK
where NN ^ ^ repeat
where WRB where ^ OK
do WRB ^ ^ false_start
n't VBP ^ ^ false_start
nobody RB nobody ^ OK
do NN ^ ^ repeat
n't VBP ^ ^ repeat
mess RB messes ^ false_start
with VB with ^ OK
drugs IN drugs ^ OK

so RB ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
not RB not ^ OK
like UH ^ ^ filler
a DT a ^ OK
day NN day ^ OK
time NN time ^ OK
in IN in ^ OK
the DT the ^ OK
car NN car ^ OK
chain NN chain ^ OK
smoker NN smoker ^ OK
kind NN kind ^ OK
of IN of ^ OK
person NN person ^ OK

so UH so ^ OK
it PRP it ^ OK
's BES 's ^ OK
only RB only ^ OK

at IN ^ ^ repeat
at IN at ^ OK
night NN night ^ OK
only RB only ^ OK

it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK

especially RB especially ^ OK
at IN ^ ^ repeat
at IN at ^ OK
work NN work ^ OK
too RB too ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
have VBP have ^ OK
people NNS people ^ OK
standing VBG standing ^ OK
outside RB outside ^ OK
on IN on ^ OK
their PRP their ^ OK
fifteen CD fifteen ^ OK
minute NN minute ^ OK
break NN break ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN ^ ^ repeat
uh UH ^ ^ filler
for IN for ^ OK
the DT the ^ OK
most JJS most ^ OK
part NN part ^ OK
i PRP i ^ OK
know VBP know ^ OK
that IN that ^ OK
people NNS ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
really RB a ^ false_start
really RB really ^ OK
sensitive JJ sensitive ^ OK
topic NN topic ^ OK
because IN because ^ OK
i PRP i ^ OK
know VBP know ^ OK
when WRB when ^ OK
they PRP they ^ OK
were VBD were ^ OK
talking VBG talking ^ OK
about IN about ^ OK
doing VBG doing ^ OK
it PRP it ^ OK
up IN up ^ OK
in IN in ^ OK
princeton NNP princeton ^ OK
you ADVP-TMP- 1 ^ ^ filler
know PRP ^ ^ filler
the VBP the ^ OK
people DT people ^ OK
were NNS ^ ^ repeat
were VBD were ^ OK
just VBD just ^ OK
up RB up ^ OK
there IN there ^ OK
pitching RB pitching ^ OK
a VBG a ^ OK
fit DT fit ^ OK
about NN about ^ OK
oh IN ^ ^ false_start
it UH it ^ OK
's PRP ^ ^ false_start
not BES ^ ^ false_start
fair RB ^ ^ false_start

but CC but ^ OK
i PRP ^ ^ repeat
think VBP ^ ^ repeat
they PRP ^ ^ false_start
still RB ^ ^ false_start
public JJ public ^ OK
places NNS places ^ OK
should MD should ^ OK
also RB also ^ OK
include VB include ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN ^ ^ false_start
what WP what ^ OK
people NNS people ^ OK
want VBP want ^ OK
to TO to ^ OK
do VB do ^ OK

i PRP ^ ^ false_start
know VBP ^ ^ false_start
w- XX ^ ^ false_start
i PRP i ^ OK
travel VBP travel ^ OK
a DT a ^ OK
lot NN lot ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
they PRP they ^ OK
feel VBP feel ^ OK
that IN that ^ OK
that DT ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
infringes VBZ ^ ^ false_start
upon IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ repeat
they PRP they ^ OK
need VBP ^ ^ repeat
have VBP have ^ OK
to TO to ^ OK
be VB be ^ OK
excluded VBN excluded ^ OK
or CC or ^ OK
singled VBN singled ^ OK
out RP out ^ OK
to TO to ^ OK
keep VB keep ^ OK
up RP up ^ OK
a DT a ^ OK
habit NN habit ^ OK
that WDT that ^ OK
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
keep VB keep ^ OK
up RP up ^ OK

so RB ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
not RB not ^ OK
really RB really ^ OK
a DT a ^ OK
public JJ public ^ OK
place NN place ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
kind RB kind ^ OK
of RB of ^ OK
understand VBP understand ^ OK
that DT that ^ OK
from IN ^ ^ repeat
a- DT ^ ^ repeat
from IN from ^ OK
that DT that ^ OK
point NN point ^ OK
of IN of ^ OK
view NN view ^ OK

but CC but ^ OK
i PRP i ^ OK
do VBP ^ ^ repeat
i PRP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
think VB ^ ^ repeat
think VB think ^ OK
that IN ^ ^ repeat
the DT ^ ^ repeat
that IN that ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
ever RB ^ ^ repeat
ever RB ever ^ OK
get VB ^ ^ repeat
get VB get ^ OK
passed VBN passed ^ OK
out IN out ^ OK
here RB here ^ OK

i- XX ^ ^ repeat
it PRP it ^ OK
just RB just ^ OK
's BES ^ ^ repeat
seems VBZ seems ^ OK
that DT ^ ^ repeat
that DT that ^ OK
way NN way ^ OK

uh UH ^ ^ filler
i PRP ^ ^ filler
well UH ^ ^ false_start
my PRP my ^ OK
job NN job ^ OK
moved VBD moved ^ OK
me PRP me ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
think VB think ^ OK
that IN that ^ OK
people NNS people ^ OK
are VBP are ^ OK

but CC but ^ OK
i PRP i ^ OK
've VBP 've ^ OK
lived VBN lived ^ OK
most JJS most ^ OK
of IN of ^ OK
my PRP my ^ OK
life NN life ^ OK
in IN in ^ OK
l. NNP l. ^ OK
a. NNP a. ^ OK

and CC and ^ OK
i PRP i ^ OK

i PRP i ^ OK
just RB just ^ OK
think VBP think ^ OK
that IN that ^ OK
um UH ^ ^ filler
well UH ^ ^ filler
people NNS people ^ OK
like IN ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
earlier RBR ^ ^ false_start
are VBP are ^ OK
a DT a ^ OK
little RB little ^ OK
more RBR more ^ OK
health NN health ^ OK
conscious JJ conscious ^ OK

they PRP they ^ OK
are VBP are ^ OK
healthier JJR healthier ^ OK
definitely RB definitely ^ OK

and CC ^ ^ false_start
with IN with ^ OK
better JJR better ^ OK
weather NN weather ^ OK
people NNS people ^ OK
are VBP are ^ OK
a DT a ^ OK
little RB little ^ OK
more RBR more ^ OK
in IN in ^ OK
shape NN shape ^ OK
and CC and ^ OK
very RB very ^ OK
very RB very ^ OK
health NN health ^ OK
conscious JJ conscious ^ OK

um UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
on IN on ^ OK
the DT the ^ OK
whole JJ whole ^ OK
eh UH ^ ^ filler
generically RB generically ^ OK
i PRP i ^ OK
would MD would ^ OK
say VB say ^ OK
yeah UH yeah ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
there EX there ^ OK
's BES 's ^ OK
eh UH ^ ^ filler
beautiful JJ beautiful ^ OK
things NNS things ^ OK
about IN about ^ OK
the DT the ^ OK
east NNP east ^ OK
coast NNP coast ^ OK
too RB too ^ OK

april NNP april ^ OK
fool NNP fool ^ OK
's POS 's ^ OK
huh UH ^ ^ filler

well UH ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
only JJ only ^ OK
time NN time ^ OK
me PRP me ^ OK
and CC and ^ OK
my PRP my ^ OK
entire JJ entire ^ OK
family NN family ^ OK
ever RB ever ^ OK
get VBP get ^ OK
together RB together ^ OK

for IN for ^ OK
all DT all ^ OK
of IN of ^ OK
us PRP us ^ OK
m- XX ^ ^ false_start
citizens NNS citizens ^ OK
that WDT that ^ OK
are VBP are ^ OK
not RB not ^ OK
politicians NNS politicians ^ OK
can MD can ^ OK
take VB take ^ OK
the DT the ^ OK
seat NN seat ^ OK
of IN ^ ^ false_start
a DT ^ ^ false_start
se- NN ^ ^ false_start
of IN of ^ OK
a DT a ^ OK
politician NN politician ^ OK
of IN of ^ OK
a DT a ^ OK
senator NN senator ^ OK
or CC or ^ OK
a DT a ^ OK
house NN house ^ OK
rep NN rep ^ OK
for IN for ^ OK
the DT the ^ OK
day NN day ^ OK

and CC ^ ^ false_start
actually RB actually ^ OK
say VB say ^ OK
yea UH yea ^ OK
or CC or ^ OK
nay UH nay ^ OK
instead IN instead ^ OK
of IN of ^ OK
letting VBG letting ^ OK
them PRP them ^ OK
make VB make ^ OK
the DT the ^ OK
decisions NNS decisions ^ OK
for IN for ^ OK
us PRP us ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK

well UH ^ ^ false_start
one CD one ^ OK
thing NN thing ^ OK
bad RB bad ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
a DT a ^ OK
good JJ good ^ OK
researcher NN researcher ^ OK
and CC and ^ OK
you PRP you ^ OK
know VBP know ^ OK
what WP what ^ OK
the DT the ^ OK
bills NNS bills ^ OK
are VBP are ^ OK
they NP-PRD-1 they ^ OK
're PRP 're ^ OK
already VBP already ^ OK
out RB out ^ OK
there RB there ^ OK
on RB on ^ OK
the IN the ^ OK
table DT table ^ OK
and NN and ^ OK
you CC you ^ OK
've PRP 've ^ OK
researched VBP researched ^ OK
them VBN them ^ OK
before PRP before ^ OK
that IN that ^ OK
day DT day ^ OK
comes NN comes ^ OK
then VBZ then ^ OK
you RB you ^ OK
know PRP know ^ OK
what VBP what ^ OK
you WP you ^ OK
're PRP 're ^ OK
heading VBP heading ^ OK
for VBG for ^ OK

and CC ^ ^ false_start
instead RB instead ^ OK
of IN of ^ OK
them PRP them ^ OK
bickering VBG bickering ^ OK
back RB back ^ OK
and CC and ^ OK
forth RB forth ^ OK
and CC and ^ OK
everything NN everything ^ OK
else RB else ^ OK
you PRP you ^ OK
can MD can ^ OK
actually RB actually ^ OK
get VB get ^ OK
people NNS people ^ OK
's POS 's ^ OK
viewpoints NNS viewpoints ^ OK
and CC and ^ OK
everything NN everything ^ OK
and CC and ^ OK
just RB just ^ OK
write VBP write ^ OK
it PRP it ^ OK
all DT all ^ OK
down RB down ^ OK

and CC ^ ^ false_start
then RB then ^ OK
whenever WRB whenever ^ OK
the DT ^ ^ false_start
l- NN ^ ^ repeat
legislation NN ^ ^ false_start
the DT the ^ OK
senators NNS senators ^ OK
all DT all ^ OK
come VBP come ^ OK
back RB back ^ OK
and CC and ^ OK
go VBP go ^ OK
okay UH okay ^ OK

we PRP we ^ OK
can MD can ^ OK
say VB say ^ OK
yea UH yea ^ OK
or CC or ^ OK
nay UH nay ^ OK

d- XX ^ ^ false_start
uh UH ^ ^ filler
you PRP you arg0 OK
're VBP 're ^ OK
calling VBG calling predicate OK
me PRP me arg1 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
in IN in arg2 OK
brigantine NNP brigantine arg2 OK
new NNP new arg2 OK
jersey NNP jersey arg2 OK

i PRP ^ arg2 repeat
mm UH ^ ^ filler
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
like UH ^ ^ filler
up RB up arg2 OK
little JJ a ^ false_start
little JJ little arg2 OK
bit NN bit arg2 OK
more RBR more arg2 OK
on IN on arg2 OK
the DT the arg2 OK
west JJ west arg2 OK
end NN end arg2 OK

but CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
nice JJ nice arg2 OK

it PRP ^ ^ repeat
uh UH ^ ^ filler
very RB ^ ^ false_start
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
nice JJ nice arg2 OK
now RB now argM_tmp OK
because IN because argM_cause OK
no DT no arg1 OK
one NN one arg1 OK
's BES 's argM_cause OK
like UH ^ ^ filler
really RB really arg2 OK
here RB here arg2 OK

it PRP it ^ OK
's BES 's ^ OK

i PRP ^ ^ repeat
i PRP i arg1 OK
just RB just argM_adverb OK
was VBD was predicate OK
n't RB n't argM_neg OK
familiar JJ familiar arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
um UH ^ ^ filler
yeah UH yeah ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
wa- VBZ ^ ^ false_start
no UH ^ ^ filler
he PRP he arg0 OK
works VBZ works predicate OK
for IN for arg2 OK
all PDT all arg2 OK
the DT the arg2 OK
casinos NNS casinos arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
not RB not argM_neg OK
that RB that arg2 OK
great JJ great arg2 OK
as IN as arg2 OK
it PRP it arg1 OK
used VBD used argM_mod OK
to TO to argM_mod OK
be VB be arg2 OK
though ADJP-PRD though argM_discou OK

and CC ^ ^ false_start
a- XX ^ ^ false_start
they PRP ^ ^ false_start
were VBD ^ ^ false_start
ma- VBG ^ ^ false_start
and CC ^ ^ false_start
the DT the arg0 OK
doormen NNS doormen arg0 OK
were VBD were ^ OK
making VBG making predicate OK
so RB so arg1 OK
much JJ much arg1 OK
money NN money arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
an- CC ^ ^ repeat
and CC ^ ^ false_start
everybody NN ^ ^ repeat
everybody NN everybody arg0 OK
was VBD was ^ OK
making VBG making predicate OK
so RB so arg1 OK
much JJ much arg1 OK
money NN money arg1 OK

it PRP it arg1 OK
's BES 's predicate OK
just RB just argM_adverb OK
like IN that arg0 false_start
no DT no arg0 OK
one NN one arg0 OK
has VBZ has arg2 OK
anymore JJR anymore arg1 OK
money NN money arg1 OK

but CC ^ ^ false_start
they PRP ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
you PRP ^ ^ false_start
still RB ^ ^ false_start
get VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
still RB ^ ^ false_start
get VBP ^ ^ false_start
the DT ^ ^ false_start
little JJ ^ ^ false_start
old JJ ^ ^ false_start
la- NN ^ ^ false_start
how WRB how argM_mnr OK
do VBP do ^ OK
you PRP you arg1 OK
like VB like predicate OK
being VBG being arg1 OK
a DT a arg2 OK
professor NN professor arg2 OK

w- NN ^ ^ repeat
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
profess VB profess predicate OK

teach VBP do ^ false_start
uh UH ^ ^ filler
d- XX ^ ^ false_start
e- XX ^ ^ false_start
you PRP you arg0 OK
teach VBP teach predicate OK
students NNS students arg2 OK
germanic JJ germanic arg1 OK
languages NNS languages arg1 OK

well UH ^ ^ filler
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
know VB ^ ^ repeat
know VB know predicate OK
w- WP ^ ^ repeat
what WP what arg1 OK
they PRP they arg0 OK
pay VBP pay arg1 OK
professors NNS professors arg2 OK
these DT these argM_tmp OK
days NNS days argM_tmp OK

bu- CC ^ ^ repeat
but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
y- XX ^ ^ false_start
living VBG living arg1 OK
it PRP ^ predicate false_start
out IN out arg1 OK
in IN in arg1 OK
uh UH ^ ^ filler
university NNP university arg1 OK
city NNP city arg1 OK
e- XX ^ ^ false_start
gets VBZ gets arg1 OK
expensive JJ expensive arg2 OK

and CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
only RB only arg2 OK
for IN for arg2 OK
what UH ^ ^ filler
eighteen CD eighteen arg2 OK
days NNS days arg2 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

so UH ^ ^ filler
are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you arg1 OK
married JJ ^ ^ repeat
married VBN married predicate OK
david NNP david argM_discou OK

but CC but ^ OK
they PRP they ^ OK
nev- RB ^ ^ false_start

makes VBZ it arg0 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
it PRP ^ ^ false_start
you PRP ^ ^ false_start
just RB just argM_adverb OK
makes VBZ makes predicate OK
you PRP you arg0 OK
wonder VB wonder arg1 OK
like UH ^ ^ filler
how WRB how argM_mnr OK
you PRP ^ ^ false_start
people NNS people arg1 OK
get VBP ^ ^ false_start
stay VBP stay arg1 OK
in IN in arg2 OK
business NN business arg2 OK
when WRB when argM_tmp OK
they PRP they arg2 OK
're VBP 're argM_tmp OK
not RB not argM_neg OK
getting VBG getting argM_tmp OK
paid VBN paid arg1 OK

um UH ^ ^ filler
not RB not ^ OK
andre NNP andre ^ OK
's POS 's ^ OK
um UH ^ ^ filler

andre NNP andre arg0 OK
they PRP ^ ^ false_start
's BES 's arg0 OK
they PRP ^ ^ false_start
have VBP has predicate false_start
the DT the arg1 OK
great JJ great arg1 OK
like UH ^ ^ filler
rosemary NN rosemary arg1 OK
pizza NN pizza arg1 OK
there RB there argM_loc OK

it PRP it ^ OK
's BES 's ^ OK

did VBD ^ ^ false_start
you PRP ^ ^ false_start
um UH ^ ^ filler
they PRP they arg0 OK
air VB air predicate OK
it PRP it arg1 OK
here RB here argM_loc OK
in IN in argM_loc OK
california NNP california argM_loc OK

um UH ^ ^ filler
that IN ^ ^ false_start
they PRP ^ ^ false_start
were VBD ^ ^ false_start
they PRP ^ ^ false_start
were VBD ^ ^ false_start
looking VBG ^ ^ false_start
they PRP they arg0 OK
were VBD were ^ OK
advertising VBG advertising predicate OK
like UH ^ ^ filler
dumb JJ dumb arg1 OK
criminals NNS criminals arg1 OK
on IN on argM_loc OK
this DT this argM_loc OK
dumbest NNP dumbest argM_loc OK
criminals NNPS criminals argM_loc OK
show NN show argM_loc OK

and CC ^ ^ false_start
when WRB when ^ OK
he PRP he arg0 OK
went VBD went predicate OK
in RB in arg1 OK
to TO to arg1 OK
test VB test arg1 OK
um ADVP-TMP- 2 ^ ^ filler
ag- UH ^ ^ repeat
apparently XX apparently ^ OK
the RB ^ ^ false_start
f- DT ^ ^ false_start
the XX the arg0 OK
parole DT parole arg0 OK
officer NN officer arg0 OK
gotten NN got predicate false_start
a VBN ^ ^ repeat
a DT a arg1 OK
phone DT phone arg1 OK
call NN call arg0 OK
saying NN saying arg1 OK
that VBG that arg1 OK
they IN they arg0 OK
believe PRP believe arg1 OK
this VBP this arg0 OK
parolee DT parolee arg0 OK
was NN was arg1 OK
doing VBD doing arg1 OK
drugs VBG drugs arg1 OK
on NNS on arg1 OK
the IN the arg1 OK
job DT job arg1 OK

so RB ^ ^ filler
the DT the arg0 OK
parole NN parole arg0 OK
officer NN officer arg0 OK
called VBD called predicate OK
the DT the arg1 OK
guy NN guy arg1 OK
in RB in ^ OK

and CC and ^ OK
or CC ^ ^ filler
he PRP he ^ OK
say VBP said ^ false_start
okay UH okay ^ OK

and CC ^ ^ false_start
then RB then ^ OK
the DT the arg0 OK
gentleman NN gentleman arg0 OK
said VBD said predicate OK
the DT the arg0 OK
guy NN guy arg0 OK
said VBD said arg1 OK
well UH well arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
ca MD ca arg1 OK
n't RB n't arg1 OK
use VB use arg1 OK
it PRP it arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
they PRP they arg0 OK
said VBD said predicate OK
well UH well arg1 OK
we PRP we arg0 OK
got VBD got arg1 OK
good JJ good arg1 OK
news NN news arg1 OK
and CC and arg1 OK
bad JJ bad arg1 OK
news NN news arg1 OK

but CC ^ ^ false_start
the DT the arg1 OK
bad JJ bad arg1 OK
news NN news arg1 OK
is VBZ is predicate OK
you PRP you arg1 OK
're VBP 're arg2 OK
pregnant JJ pregnant arg2 OK

so UH ^ ^ repeat
so UH ^ ^ filler
so UH so ^ OK
he PRP ^ ^ repeat
'd VBD ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he arg0 OK
use- VBN ^ ^ false_start
used VBD used predicate OK
his PRP his arg1 OK
wife NN wife arg1 OK
's POS 's arg1 OK
or CC ^ ^ false_start
whatever WP ^ ^ false_start
's BES ^ ^ false_start
urine NN urine arg1 OK
to TO to arg1 OK
pass VB pass arg1 OK
a DT a arg1 OK
drug NN drug arg1 OK
test NN test arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
those DT those arg1 OK
tests NNS tests arg1 OK
could MD could ^ OK
be VB be predicate OK
accurate JJ accurate arg2 OK

but CC ^ ^ false_start
what WP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
wh- WP ^ ^ repeat
what WP what ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
do VB do predicate OK
when WRB when argM_tmp OK
a DT a arg0 OK
company NN company arg0 OK
do VBP does argM_tmp false_start
invade VB invade argM_tmp OK
your PRP your arg1 OK
privacy NN privacy arg1 OK
and CC and argM_tmp OK
you PRP you arg1 OK
're VBP 're argM_tmp OK
not RB not argM_tmp OK
one CD one arg2 OK

that DT ^ ^ repeat
's BES ^ ^ repeat
that DT that arg0 OK
's BES 's predicate OK
truly RB truly arg2 OK
would MD ^ ^ false_start
feeling VBG ^ ^ false_start
like IN like arg2 OK
an DT an arg2 OK
invasion NN invasion arg2 OK
opposed VBN as ^ false_start
opposed VBN opposed ^ OK
to IN to ^ OK
being VBG being predicate OK
a DT a arg1 OK
tuck- NN ^ ^ repeat
truck NN truck arg1 OK
driver NN driver arg1 OK
or CC or ^ OK
operating VBG operating predicate OK
heavy JJ heavy arg1 OK
machinery NN machinery arg1 OK
or CC ^ ^ repeat
or CC or ^ OK
dealing VBG dealing predicate OK
with IN with arg1 OK
children NNS children arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
or CC or ^ OK
someone NN someone arg0 OK
at IN at argM_loc OK
work NN work argM_loc OK
dealing VBG dealing predicate OK
with IN with arg1 OK
children NNS children arg1 OK

and CC ^ ^ false_start
they PRP ^ ^ filler
they PRP ^ ^ repeat
i PRP ^ ^ filler
think VBP ^ ^ filler
they PRP they arg0 OK
should MD should ^ OK
possibly RB possibly ^ OK
be VB be predicate OK
tested VBN tested arg1 OK
for IN for arg1 OK
drugs NNS drugs arg1 OK
so RB ^ ^ false_start
when WRB ^ ^ false_start
tested VBN ^ ^ false_start
because IN because ^ OK
you PRP you arg0 OK
see VBP see predicate OK
so RB so arg1 OK
many JJ many arg1 OK
people NNS people arg1 OK
on RB on arg1 OK
watching VBG watching arg1 OK
your PRP your arg1 OK
kids NNS kids arg1 OK
and CC and arg1 OK
they PRP they arg0 OK
have VBP have arg1 OK
the DT the arg1 OK
cameras NNS cameras arg1 OK
hidden VBN hidden arg1 OK
and NP-2 and arg1 OK
beating CC beating arg1 OK
your VBG your arg1 OK
kids PRP kids arg1 OK

so RB ^ ^ filler
you PRP you arg0 OK
wonder VBP wonder predicate OK
wow UH wow arg1 OK
somebody NN somebody arg0 OK
could MD could arg1 OK
do VB do arg1 OK
that DT that arg1 OK
to IN to arg1 OK
a DT a arg1 OK
kid NN kid arg1 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
eh UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
texas NNP ^ ^ false_start
you PRP ^ ^ false_start
guys NNS ^ ^ false_start
are VBP ^ ^ false_start
pretty JJ ^ ^ false_start
eh UH ^ ^ filler
drugs NNS drugs arg1 OK
are VBP are predicate OK
pretty RB pretty arg2 OK
bad JJ bad arg2 OK
there RB there arg2 OK
too RB too arg2 OK

th- NN ^ ^ false_start
and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP ^ ^ false_start
always RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
hear VBP hear ^ OK
texas NNP in ^ false_start
texas NNP texas ^ OK
eh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
y- XX ^ ^ repeat
eh UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
you PRP you ^ OK
can MD can ^ OK
just RB just ^ OK
come VB come ^ OK
out RB out ^ OK
and CC and ^ OK

oh UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
what WDT what arg1 OK
part NN part arg1 OK
of IN of arg1 OK
texas NNP texas arg1 OK
you PRP you arg0 OK
live VBP live arg1 OK
live VBP in arg1 false_start

but CC ^ arg1 false_start
i PRP i arg0 OK
heard VBD heard predicate OK
they PRP they arg0 false_start
say VBP say arg1 false_start
dallas NNP in ^ false_start
dallas NNP dallas arg1 OK
and CC and arg1 OK
houston NNP houston arg1 OK
when WRB when arg1 OK
you PRP you arg0 OK
come VBP go arg1 false_start
there RB there arg1 OK
you ADVP-TMP- 1 ^ ^ repeat
you PRP you arg0 OK
will PRP will arg1 OK
be MD be arg1 OK
able VB able arg1 OK
to JJ to arg1 OK
find TO find arg1 OK
a VB a arg1 OK
job DT job arg1 OK

you PRP you argM_tmp OK
get VBP get ^ OK
hired VBN hired predicate OK
some DT at ^ false_start
some DT some arg1 OK
companies NNS companies arg1 OK
same JJ the ^ false_start
same JJ same argM_tmp OK
day NN day argM_tmp OK

so UH ^ ^ filler
d- VBP ^ ^ repeat
do VBP do ^ OK
they PRP they arg0 OK
do VB do predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
drug NN drug arg1 OK
testing NN testing arg1 OK
there RB there argM_loc OK
though RB though ^ OK

and CC ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
just RB just arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
procedure NN procedure arg2 OK
they PRP they arg0 OK
go VBP go arg2 OK
through IN through arg1 OK
huh NP-1 ^ ^ filler

i PRP ^ ^ repeat
i PRP ^ ^ filler
guess VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
well UH ^ ^ filler
they PRP ^ ^ false_start
the DT the arg0 OK
companies NNS companies arg0 OK
know VBP know predicate OK

the PRP they arg0 false_start
have VBP have predicate OK
their PRP their arg1 OK
reasons NNS reasons arg1 OK
for IN for arg1 OK
having VBG having arg1 OK
certain JJ certain arg1 OK
positions NNS positions arg1 OK

just RB ^ ^ repeat
just RB just arg1 OK
about RB ^ ^ repeat
about RB about arg1 OK
any DT any arg1 OK
job NN job arg1 OK
i PRP i arg0 OK
've VBP 've predicate OK
w- VBN ^ ^ repeat
went VBN ^ ^ false_start
to TO ^ ^ false_start
applied VBN applied arg1 OK
for IN for ^ OK
probably NP-1 probably ^ OK
eighty RB eighty arg0 OK
percent CD percent arg0 OK
they NN ^ ^ repeat
they PRP ^ ^ repeat
th- PRP ^ ^ repeat
they PRP ^ ^ false_start
uh PRP ^ ^ filler
required UH required predicate OK
me VBD me arg0 OK
ah PRP ^ ^ filler
to UH to arg2 OK
take TO take arg2 OK
a VB a arg1 OK
drug DT drug arg1 OK
test NN test arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
dri- VB ^ ^ repeat
driving NN driving arg1 OK

well UH ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
they PRP they arg0 OK
asked VBD asked predicate OK
um UH ^ ^ filler
whether IN whether arg1 OK
we PRP we arg0 OK
think VBP think arg1 OK
most JJS most arg1 OK
people NNS people arg1 OK
would MD would arg1 OK
panic VB panic arg1 OK
in IN in arg1 OK
a DT a arg1 OK
terrorist JJ terrorist arg1 OK
situation NN situation arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
like IN ^ ^ false_start
i- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
have VBP have predicate OK
something NN something arg1 OK
really RB really arg1 OK
horrific JJ horrific arg1 OK
happen VB happen arg1 OK

but CC but ^ OK
most JJS most arg0 OK
people NNS people arg0 OK
in IN in arg0 OK
the DT the arg0 OK
rest NN rest arg0 OK
of IN of arg0 OK
the DT the arg0 OK
country NN country arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
feel VB feel predicate OK
like IN like arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
exactly RB exactly arg2 false_start
in IN in arg2 OK
a DT a arg2 OK
target NN target arg2 OK
area NN area arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
nobody NN nobody arg0 OK
's BES 's ^ OK
like UH ^ ^ filler
offering VBG offering predicate OK
counseling NN counseling arg1 OK
to IN to arg3 OK
everybody NN everybody arg3 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
sort RB ^ ^ false_start
of RB ^ ^ false_start
like IN ^ ^ false_start
you PRP you arg1 OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
know VB know predicate OK
what WP what arg1 OK
to TO to arg1 OK
be VB be arg1 OK
scared JJ scared arg2 OK
of IN of arg2 OK

although IN although ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
was VBD ^ ^ false_start
actually RB ^ ^ false_start
when WRB when ^ OK
the DT the arg1 OK
blackout NN blackout arg1 OK
happened VBD happened predicate OK
you ADVP-TMP- 1 ^ ^ filler
know PRP ^ ^ filler
people VBP ^ ^ repeat
you XX ^ ^ filler
know PRP ^ ^ filler
there VBP ^ ^ repeat
there VBD there ^ OK
were NNS ^ ^ repeat
was EX ^ ^ repeat
was EX was predicate OK
no VBD no arg2 OK
re- VBD ^ ^ repeat
rioting DT rioting arg2 OK

and CC ^ ^ false_start
at RB at ^ OK
least RB least ^ OK
in IN in ^ OK
the DT the ^ OK
beginning NN beginning ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
we PRP we arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
really RB really ^ OK
really RB _verb_ ^ false_start
any DT any ^ OK
way NN way ^ OK
of IN of ^ OK
knowing VBG knowing predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
whether IN whether arg1 OK
there EX there arg1 OK
was VBD was arg1 OK
a DT ^ ^ repeat
some DT some arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
non-innocent JJ non-innocent arg2 OK
reason NN reason arg2 OK
for IN for arg2 OK
the DT the arg1 OK
blackout NN blackout arg1 OK
to TO to arg2 OK
happen VB happen arg2 OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
what WP what ^ OK
do VBP do ^ OK
you PRP you arg0 OK
think VB think predicate OK
about IN about arg1 OK
um UH ^ ^ filler
airport NN airport arg1 OK
surveillance NN surveillance arg1 OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
feel VBP ^ ^ false_start
like IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
airport NNP airport arg0 OK
security NNP security arg0 OK
actually RB actually ^ OK
worked VBD worked predicate OK
i PRP i arg0 OK
would MD would ^ OK
n't RB n't ^ OK
mind VB mind predicate OK
being VBG being arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
held VBN held arg1 OK
up RP up arg1 OK
by IN by arg1 OK
it PRP it arg0 OK
and CC ^ ^ false_start
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
thing NN ^ ^ false_start

i PRP ^ ^ false_start
feel VBP ^ ^ false_start
like IN ^ ^ false_start
what WP what arg1 OK
they PRP they arg0 OK
're VBP 're ^ OK
doing VBG doing predicate OK
is NP-1 ^ ^ repeat
is VBZ is predicate OK
really VBZ really arg2 OK
ineffective RB ineffective arg2 OK

so UH ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
scary JJ scary arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
especially RB ^ ^ false_start
you PRP ^ ^ false_start
have VBP ^ ^ false_start
um UH ^ ^ filler
there EX there ^ OK
was VBD was predicate OK
a DT a arg1 OK
story NN story arg1 OK
in IN in arg2 OK
the DT the arg2 OK
news NN news arg2 OK
recently RB recently arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
like UH ^ ^ filler
i PRP i arg0 OK
remember VBP ^ ^ repeat
remember VBP remember predicate OK
reading VBG reading arg1 OK
stories NNS stories arg1 OK
about IN about arg1 OK
people NNS ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
uh UH ^ ^ filler
people NNS people arg0 OK
who WP ^ ^ repeat
who WP who arg1 OK
had VBD had arg1 OK
a DT a arg1 OK
gun NN gun arg1 OK
on IN on arg1 OK
them PRP them arg1 OK
because IN because arg1 OK
they PRP they arg1 OK
were VBD were arg1 OK
a DT a arg2 OK
security NN security arg2 OK
guard NN guard arg2 OK
or CC or arg2 OK
a DT a arg2 OK
hunter NN hunter arg2 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

but CC but ^ OK
they PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
not RB not ^ OK
probably RB ^ ^ repeat
really RB really ^ OK
helping VBG helping predicate OK
things NNS things arg1 OK

which WDT ^ ^ repeat
which WDT which ^ OK
is VBZ is ^ OK
good JJ good ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
have VB have predicate OK
those DT those arg1 OK
sort NN sort arg1 OK
of IN of arg1 OK
plain JJ plain arg1 OK
clothes NNS clothes arg1 OK
people NNS people arg1 OK
on IN on arg1 OK
the DT the arg1 OK
plane NN plane arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
funny JJ funny arg2 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ repeat
we PRP we arg0 OK
've VBP 've ^ OK
always RB always ^ OK
had VBN had predicate OK
them PRP them arg1 OK

but CC but ^ OK
there EX there ^ OK
is VBZ are predicate false_start
just RB just arg1 OK
so RB so arg1 OK
few JJ few arg1 OK
of IN of arg1 OK
them PRP them arg1 OK

so RB ^ ^ false_start
chances NNS chances arg1 OK
were VBD were predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX they arg1 false_start
would MD would arg2 OK
never RB never arg2 OK
actually RB actually arg2 OK
be VB ^ arg2 repeat
be VB be arg2 OK
on IN on arg2 OK
your PRP your arg2 OK
plane NN plane arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
so RB so ^ OK

but CC but ^ OK
it PRP ^ ^ repeat
's BES ^ ^ repeat
just RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX there ^ OK
w- XX ^ ^ repeat
were VBD were predicate OK
n't RB n't ^ OK
very RB very arg1 OK
many JJ many arg1 OK
of IN of arg1 OK
them PRP them arg1 OK

but CC but ^ OK
the DT the arg1 OK
idea NN idea arg1 OK
was VBD was predicate OK
that IN that arg2 OK
everybody NN everybody arg0 OK
would MD would arg2 OK
think VB think arg2 OK
that IN that arg2 OK
they PRP ^ ^ repeat
there EX there arg2 OK
might MD ^ ^ repeat
might MD might arg2 OK
be VB be arg2 OK
one CD one arg1 OK

i PRP ^ ^ false_start
'd MD ^ ^ false_start
just RB ^ ^ false_start
be VB ^ ^ false_start
like IN ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
first JJ first arg1 OK
thing NN thing arg1 OK
i PRP i arg0 OK
'd MD 'd arg1 OK
do VB do arg1 OK
like UH ^ ^ filler
if IN if arg1 OK
they PRP they arg0 OK
sit VBP sit arg1 OK
there RB there arg1 OK
like UH ^ ^ filler
okay UH ^ ^ filler

i PRP i arg0 OK
'm VBP 'm ^ OK
going VBG going ^ OK
take VB to ^ false_start
take VB take predicate OK
over RP over arg1 OK
the DT the arg1 OK
plane NN plane arg1 OK
i PRP i arg0 OK
'd MD 'd ^ OK
probably RB probably ^ OK
just RB ^ ^ false_start
like UH ^ ^ filler
tackle VB tackle predicate OK
them PRP them arg1 OK

but CC but ^ OK
if IN ^ ^ false_start
like UH ^ ^ filler
um UH ^ ^ filler
if IN if ^ OK
attack NN attack ^ OK
yeah UH ^ ^ filler

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
'd MD ^ ^ repeat
'd MD 'd arg1 OK
panic VB panic arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP i arg0 OK
think VBP think predicate OK
y- XX ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP i arg0 OK
'd MD 'd arg1 OK
probably RB probably arg1 OK
have VB have arg1 OK
like UH ^ ^ filler
a DT a arg1 OK
panic NN panic arg1 OK
attack NN attack arg1 OK
or CC or arg1 OK
something NN something arg1 OK
and CC and ^ OK
just RB just ^ OK
be VB be ^ OK
like UH ^ ^ filler
stuck VBN stuck predicate OK
frightened VBN frightened predicate OK

it PRP it ^ OK
was VBD was predicate OK
something NN something arg1 OK
like IN ^ ^ filler
um UH ^ ^ filler

how WRB how arg2 OK
would MD would ^ OK
you PRP you arg0 OK
react VB react predicate OK
if IN ^ ^ false_start
it PRP ^ ^ false_start
w- XX ^ ^ false_start
to IN to arg1 OK
a DT ^ ^ false_start
panic NN ^ ^ false_start
a- CC ^ ^ false_start
um UH ^ ^ filler
a DT a arg1 OK
terrorist JJ terrorist arg1 OK
attack NN attack arg1 OK

well UH ^ ^ filler
how WRB how arg2 OK
would MD would ^ OK
you PRP you arg0 OK
react VB react predicate OK
to IN to arg1 OK
a DT ^ ^ false_start
pa- NN ^ ^ false_start
a DT ^ ^ false_start
a DT a arg1 OK
terrorist JJ terrorist arg1 OK
attack NN attack arg1 OK

if IN if ^ OK
i PRP i arg1 OK
got VBD got ^ OK
a- VBN ^ ^ repeat
attacked VBN attacked predicate OK
in IN in ^ OK
my PRP my ^ OK
neighborhood NN neighborhood ^ OK
what UH ^ ^ false_start
by IN by ^ OK
some DT some ^ OK
terrorists NNS terrorists ^ OK

first JJ first ^ OK
things NNS things ^ OK
first JJ first ^ OK
i PRP i arg0 OK
would MD would ^ OK
have VB have ^ OK
to TO to ^ OK
get VB get predicate OK
the DT the arg1 OK
little JJ little arg1 OK
kids NNS kids arg1 OK
as RB as arg1 OK
far RB far arg1 OK
away RB away arg1 OK
as IN as arg1 OK
possible JJ possible arg1 OK

and CC ^ ^ false_start
also RB also ^ OK
if IN if ^ OK
i PRP i arg0 OK
found VBD found predicate OK
out RP out arg_particl OK
there EX there arg1 OK
was VBD was arg1 OK
like UH ^ ^ filler
a DT a arg1 OK
terrorist JJ terrorist arg1 OK
attack NN attack arg1 OK
like UH ^ ^ filler
on IN on arg1 OK
the DT the arg1 OK
news NN news arg1 OK
or CC or ^ OK
something NN something ^ OK
i PRP i arg0 OK
'd MD 'd ^ OK
still RB still ^ OK
have VB have ^ OK
to TO to ^ OK
like UH ^ ^ filler
call VB call predicate OK
family NN family arg1 OK
because IN because ^ OK
i PRP i arg0 OK
know VBP know predicate OK
that IN that arg1 OK
they PRP they arg0 OK
travel VBP travel arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK

you PRP you arg0 OK
still RB still ^ OK
got VBP got ^ OK
to TO to ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
make VB make predicate OK
sure JJ sure arg1 OK
of IN of arg1 OK
st- NN ^ ^ repeat
stuff NN stuff arg1 OK
like IN like arg1 OK
that DT that arg1 OK
because IN because ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
one CD one arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
could MD could ^ OK
be VB be predicate OK
in IN in arg2 OK
the DT the arg2 OK
hospital NN hospital arg2 OK

uh UH ^ ^ filler
i PRP i arg0 OK
fund NN ^ ^ false_start
raise VBP fundraise predicate false_start
for IN for arg1 OK
the DT the arg1 OK
arts NNP arts arg1 OK
for IN for argM_purpos OK
a DT a argM_purpos OK
living NN living argM_purpos OK

so RB ^ ^ filler
what WP what ^ OK
would MD would ^ OK
you PRP you ^ OK
d- VB d- ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
really RB ^ ^ false_start
like UH ^ ^ false_start
cute JJ ^ ^ false_start
little JJ ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
completely RB completely arg2 OK
abandoned JJ abandoned arg2 OK

n- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do predicate OK
a DT a arg1 OK
japanese JJ japanese arg1 OK
dance NN dance arg1 OK
form NN form arg1 OK
called VBN called arg1 OK
butoh NNP butoh arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
then RB then argM_adverb OK
i PRP i arg0 OK
would MD would argM_mod OK
have VB have predicate OK
a DT a arg2 OK
place NN place arg2 OK
to TO to arg1 OK
house VB house arg1 OK
all DT all arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
performances NNS performances arg1 OK
because ADVP-1 because argM_cause OK
there IN there arg1 OK
's EX 's argM_cause OK
so BES so arg1 OK
much RB much arg1 OK
wonderful RB wonderful arg1 OK
theater JJ theater arg1 OK
going NN going arg2 OK
on VBG on arg_particl OK
in RP in argM_loc OK
this IN this argM_loc OK
town DT town argM_loc OK

and CC ^ ^ false_start
uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the arg0 OK
big JJ big arg0 OK
theaters NNS theaters arg0 OK
are VBP are ^ OK
n't RB n't argM_neg OK
necessarily RB necessarily argM_adverb OK
picking VBG picking predicate OK
it PRP it arg1 OK
up RP up arg_particl OK

we PRP we arg0 OK
're VBP 're ^ OK
doing VBG doing predicate OK
the DT the arg1 OK
nutcracker NNP nutcracker arg1 OK
out IN out argM_loc OK
here RB here argM_loc OK
at IN at argM_loc OK
the DT ^ ^ false_start
seattle NNP ^ ^ false_start
symphony NNP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ filler
'm VBP ^ ^ filler
sorry JJ ^ ^ filler
the DT the argM_loc OK
seattle NNP seattle argM_loc OK
pacific NNP pacific argM_loc OK
northwest NNP northwest argM_loc OK
ballet NNP ballet argM_loc OK

they PRP they arg0 OK
definitely RB definitely argM_adverb OK
make VBP make predicate OK
a DT a argM_extent OK
lot NN lot argM_extent OK
more JJR more argM_extent OK
money NN money arg1 OK
if IN if argM_adverb OK
it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
po- XX ^ ^ false_start
more RBR more arg2 OK
familiar JJ familiar arg2 OK
name NN name arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
very RB very arg2 OK
prevalent JJ prevalent arg2 OK
for IN ^ ^ false_start
sure JJ ^ ^ false_start

it PRP it arg1 OK
j- XX ^ ^ false_start
goes VBZ goes predicate OK
on RB on arg_particl OK
and CC and arg_particl OK
on RB on arg_particl OK
and CC ^ ^ false_start
on RB ^ ^ false_start

everyone NN everyone arg0 OK
does VBZ does predicate OK
the DT the arg1 OK
same JJ same arg1 OK
performance NN performance arg1 OK
art NN art arg1 OK
over RB over argM_tmp OK
and CC and argM_tmp OK
over RB ^ ^ false_start
and CC ^ ^ false_start
over RB over argM_tmp OK
again RB again argM_tmp OK

the DT the arg1 OK
fine JJ fine arg1 OK
arts NNS arts arg1 OK
in IN in arg1 OK
every DT every arg1 OK
aspect NN aspect arg1 OK
are VBP ^ ^ repeat
are VBP are predicate OK
just RB just argM_adverb OK
as RB as arg2 OK
present JJ present arg2 OK

so RB ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
what WP what arg1 OK
get VBP get arg2 OK
sold VBN sold arg1 OK

images NNS ^ ^ false_start
in IN ^ ^ false_start
i- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
van NNP van ^ OK
gogh NNP gogh ^ OK
and CC and ^ OK
picasso NNP picasso ^ OK
and CC and ^ OK
matisse NNP matisse ^ OK

me PRP me ^ OK
neither RB neither ^ OK

you PRP ^ arg1 false_start
think VB ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
s- XX ^ ^ false_start
a DT a ^ OK
um UH ^ ^ filler
well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
do VBP ^ ^ false_start
lot NN lot ^ OK
of IN of ^ OK
times NNS times ^ OK
it PRP ^ ^ repeat
it PRP it ^ false_start
uh UH ^ ^ filler
seems VBZ seems predicate OK
our PRP our arg1 OK
well UH ^ ^ filler
legal JJ legal arg1 OK
system NN system arg1 OK
it PRP ^ ^ OK
's BES ^ ^ repeat
either RB ^ ^ repeat
appears VBZ ^ ^ repeat
to TO ^ ^ repeat
be VB ^ ^ repeat
is VBZ is arg1 false_start
just RB ^ ^ false_start
a DT a arg2 OK
big JJ big arg2 OK
circus NN circus arg2 OK
to IN ^ ^ false_start
us PRP ^ ^ false_start
or CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
of IN ^ ^ repeat
there EX there ^ OK
are VBP are predicate OK
so RB so arg1 OK
many JJ many arg1 OK
different JJ different arg1 OK
ways NNS ways arg1 OK
that WDT ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
entities NNS ^ ^ false_start
can MD ^ ^ false_start
appeal VB to ^ false_start
appeal VB appeal arg1 false_start
decisions NNS decisions arg1 OK
and CC and arg1 OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
say VBP say arg1 OK
that IN that arg1 OK
some DT ^ ^ false_start
things NNS things arg1 OK
are VBP ^ ^ repeat
are VBP are arg1 OK
un- JJ ^ ^ repeat
unfound- JJ ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
unfounded JJ unfounded arg2 OK
evidence NN evidence arg2 OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

what WDT ^ ^ false_start
peop- NNS ^ ^ false_start
who WP ^ ^ false_start
someone NN someone arg1 OK
because IN ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
all RB ^ ^ false_start
just RB ^ ^ false_start
abou- IN ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
all DT ^ ^ false_start
just RB ^ ^ false_start
about IN ^ ^ false_start
like UH ^ ^ filler
is VBZ is predicate OK
obviously RB obviously arg2 false_start
lying VBG lying arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
in IN in ^ OK
every DT every ^ OK
court NN court ^ OK
case NN case ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
someone NN someone arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
usually RB usually ^ false_start
telling VBG telling arg2 OK
the DT the arg2 OK
truth NN truth arg2 OK
and CC and ^ OK
someone NN someone arg0 OK
's BES is ^ false_start
lying VBG lying predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
so RB ^ ^ false_start
it PRP ^ ^ false_start
always RB ^ ^ false_start
just RB ^ ^ false_start
eh UH ^ ^ filler
it PRP ^ ^ false_start
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ false_start
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES is predicate false_start
a DT ^ ^ repeat
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
um UH ^ ^ filler
dishonesty NN dishonesty arg1 OK
um UH ^ ^ filler
in IN in argM_loc OK
the DT the argM_loc OK
air NN air argM_loc OK

and CC ^ ^ false_start
you PRP ^ ^ repeat
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
can MD ^ ^ repeat
can MD can ^ OK
just RB ^ ^ false_start
feel VB feel predicate OK
the DT the arg1 OK
tension NN tension arg1 OK

that IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
like UH ^ ^ filler
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
obviously RB obviously ^ OK
someone NN someone arg1 OK
's BES is predicate false_start
lying VBG lying arg2 OK

and CC ^ ^ false_start
there EX there ^ OK
's BES 's predicate OK
no DT no arg1 OK
real JJ real arg1 OK
way NN way arg1 OK
that WRB ^ ^ false_start
we PRP ^ ^ false_start
're VBP ^ ^ false_start
going VBG ^ ^ false_start
to TO to arg1 OK
know VB know arg1 OK
who WP who arg2 OK
it PRP it arg1 OK
is VBZ is arg1 OK
um NP-PRD-2 ^ ^ filler
you ADVP-MNR- 1 ^ ^ filler
know UH ^ ^ filler
because PRP because ^ OK
if VBP if ^ OK
it IN it arg1 OK
was IN was predicate OK
that PRP that arg2 OK
cut VBD cut arg2 OK
and RB and arg2 OK
dry JJ dry arg2 OK
there CC ^ ^ repeat
you JJ ^ ^ filler
know EX ^ ^ filler
there PRP there ^ OK
would VBP would ^ OK
n't EX n't argM_neg OK
be MD be predicate OK
you RB ^ ^ filler
know VB ^ ^ filler
a PRP a arg1 OK
case VBP case arg1 OK
really DT ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
like UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
do VBP ^ ^ repeat
these DT ^ ^ repeat
do VBP do arg1 OK
s- XX ^ ^ repeat
crimes NNS crimes arg1 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in argM_tmp OK
um UH ^ ^ filler
the DT the argM_tmp OK
heat NN heat argM_tmp OK
of IN of argM_tmp OK
the DT the argM_tmp OK
moment NN moment argM_tmp OK

but CC but ^ OK
um UH ^ ^ filler

uh UH ^ ^ filler
being VBG being ^ OK
tele- VBP ^ ^ repeat
televised VBN televised ^ OK
and CC and ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
have VB having ^ false_start
your PRP your ^ OK
whole JJ whole ^ OK
life NN life ^ OK
i UH ^ ^ repeat
there RB ^ ^ false_start
in IN in ^ OK
front NN front ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK

to IN to argM_other false_start
but CC ^ ^ false_start
everybody NN everybody argM_other OK
them PRP ^ ^ false_start
else RB else argM_other OK
it PRP it arg1 OK
's BES 's predicate OK
just RB ^ ^ repeat
just RB just arg2 OK
s- NN ^ ^ repeat
another DT another arg2 OK
soap NN soap arg2 OK
opera NN opera arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler

i PRP ^ ^ filler
mean VBP ^ ^ filler
um UH ^ ^ filler
however RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
uh UH ^ ^ filler
with IN ^ ^ false_start
all PDT all ^ OK
those DT those ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
michael NNP michael ^ OK
jackson NNP jackson ^ OK
uh UH ^ ^ filler
i- XX ^ ^ repeat
um UH ^ ^ filler
cases NNS cases ^ OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
and CC and ^ OK
settlements NNS settlements ^ OK

not RB not ^ OK
just RB just ^ OK
in IN in ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
europe NNP europe ^ OK
or CC or ^ OK
the DT the ^ OK
rest NN rest ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
he PRP ^ ^ repeat
he PRP he arg0 OK
's HVS 's ^ OK
recently RB recently argM_tmp OK
done VBN done predicate OK
like UH ^ ^ filler
works NNS works arg1 OK

wi- UNK ^ ^ repeat
he UNK ^ ^ repeat
like UNK ^ ^ filler
he UNK he arg0 OK
'll UNK ^ ^ repeat
'll UNK 'll ^ OK
have UNK have predicate OK
new UNK new arg1 OK
albums UNK albums arg1 OK
come UNK come arg1 OK
out UNK out argM_other OK
and UNK and ^ OK
just UNK ^ ^ false_start
like UNK ^ ^ filler
the UNK ^ ^ false_start
um UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
will UNK will ^ OK
top UNK top predicate OK
the UNK the arg1 OK
charts UNK charts arg1 OK
and UNK ^ ^ false_start
everything UNK ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he arg0 OK
just RB ^ ^ false_start
settled VBN settled predicate OK
with IN with ^ OK
anyone NN ^ ^ false_start
everybody NN everybody arg0 OK
that WDT ^ ^ repeat
um UH ^ ^ filler
that WDT that arg2 false_start
filed VBD filed arg2 false_start
charges NNS charges arg1 false_start
against IN against arg2 false_start
him PRP him arg3 false_start

kind RB kind ^ OK
of RB of ^ OK
but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- XX ^ ^ false_start

but CC ^ ^ false_start
then RB ^ ^ false_start
and CC ^ ^ false_start
then RB ^ ^ false_start
um UH ^ ^ filler
but CC ^ ^ false_start
then RB ^ ^ false_start
again RB ^ ^ false_start
like UH ^ ^ false_start
let VB ^ ^ false_start
's PRP ^ ^ false_start
say VB ^ ^ false_start
like UH ^ ^ filler
o. NNP o. ^ OK
j. NNP j. ^ OK
simpson NNP simpson ^ OK
trials NNS trials ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
out IN ^ ^ false_start
of IN ^ ^ false_start
out IN ^ ^ false_start
of IN ^ ^ false_start
trials NNS ^ ^ false_start
being VBG ^ ^ false_start
televised VBN ^ ^ false_start
because IN ^ ^ false_start
everybody NN ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
i PRP i arg0 OK
remember VBP remember predicate OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
just RB ^ ^ repeat
i PRP i arg1 OK
was VBD ^ ^ repeat
was VBD was arg1 OK
in IN in arg2 OK
high JJ high arg2 OK
school NN school arg2 OK
when WRB ^ ^ repeat
that DT ^ ^ repeat
when WRB when argM_tmp OK
that DT that arg1 OK
happened VBD happened argM_tmp OK

and CC ^ ^ false_start
and CC ^ ^ false_start
then RB ^ ^ false_start
there EX there ^ OK
was VBD was predicate false_start
a DT a arg1 OK
this DT ^ ^ repeat
like UH ^ ^ filler
huge JJ huge arg1 OK
um UH ^ ^ filler
racism NN racism arg1 false_start
th- XX ^ ^ repeat
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
issues NNS issue arg1 false_start
with IN ^ ^ repeat
with IN with ^ OK
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
saying VBG saying predicate OK
that IN that arg1 OK
all DT all arg1 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
african JJ ^ arg1 false_start
american JJ african-ameri can ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS people arg1 OK
that WDT ^ ^ false_start
were VBD ^ ^ repeat
were VBD were arg1 OK
like UH ^ ^ filler
um UH ^ ^ filler
so RB ^ ^ false_start
uh UH ^ ^ filler
glad JJ glad arg2 OK
that IN that arg2 OK
he PRP he arg1 OK
was VBD ^ ^ repeat
got VBD got arg2 OK
off RP off arg_particl OK
on IN ^ ^ false_start
innocent JJ innocent arg2 OK

but CC but ^ OK
no ADVP-2 not ^ false_start
i PRP ^ ^ filler
mean VBZ ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
they PRP they arg1 OK
were VBD were predicate OK
to TO to arg2 OK
put VB ^ ^ false_start
to IN ^ ^ false_start
where WRB where arg2 OK
i PRP i arg0 OK
could MD could arg2 OK
n't RB n't arg2 OK
speak VB speak arg2 OK
to IN to arg2 OK
like UH ^ ^ filler
my PRP my arg2 OK
children NNS children arg2 OK
again RB again arg2 OK

there EX ^ ^ repeat
there- EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES 're predicate false_start
a DT ^ ^ repeat
a DT a arg1 OK
lo- NN ^ ^ repeat
lot NN lot arg1 OK
of IN of arg1 OK
things NNS things arg1 OK
that WDT that arg2 OK
are VBP are arg2 OK
worth JJ worth arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
more JJR more arg2 OK
than IN than arg2 OK
money NN money arg2 OK

you PRP you ^ OK
know VBP know ^ OK
and CC and ^ OK
um UH ^ ^ filler

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
money NN money arg0 OK
does VBZ does ^ OK
n't RB n't ^ OK
make VB make predicate OK
the DT the arg1 OK
person NN person arg1 OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler

that DT ^ ^ repeat
that WDT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
weird- JJ ^ ^ repeat
weird JJ weird arg1 OK
question NN question arg1 OK
to TO to arg2 OK
be VB be arg2 OK
asking VBG asking arg2 OK

what- WDT ^ ^ repeat
what WDT what arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
question NN question arg2 OK
is VBZ is predicate OK
that DT that arg1 OK

if IN if ^ OK
if IN ^ ^ repeat
you PRP you ^ OK
y- PRP ^ ^ repeat
got VBN have ^ false_start
to TO to ^ OK

you PRP ^ ^ repeat
you PRP you arg0 OK
ca- MD ^ ^ repeat
ca MD ca ^ OK
n't RB n't ^ OK
buy VB buy predicate OK
a DT a arg1 OK
friend NN friend arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
one DT one arg1 OK
really RB really arg1 OK
good JJ good arg1 OK
one NN one arg1 OK
that WDT that arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
's BES ^ ^ repeat
've VBP 've arg1 OK
had VBN had arg1 OK
for IN for argM_tmp OK
like UH ^ ^ filler
twenty CD twenty argM_tmp OK
years NNS years argM_tmp OK
now RB now argM_tmp OK

and CC and ^ OK
uh UH ^ ^ filler

always RB always ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
uh UH ^ ^ filler
no UH no ^ OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
could MD could ^ OK
n't RB n't ^ OK
accept VB accept predicate OK
that DT that arg1 OK

i PRP i ^ OK
i- PRP ^ ^ repeat
mean VBP mean ^ OK

and CC ^ ^ false_start
i- IN ^ ^ repeat
if IN if ^ OK
you PRP you arg0 OK
're VBP 're predicate OK
lucky JJ lucky arg2 OK
enough RB enough arg2 OK
in S-2 in arg2 OK
your IN your arg2 OK
lifetime PRP lifetime arg2 OK
to NN to arg2 OK
even TO even arg2 OK
have RB have arg2 OK
one VB one arg1 OK
friend CD friend arg1 OK
then NN then ^ OK
you- RB ^ ^ repeat
you PRP you arg0 OK
've PRP 've ^ OK
done VBP done predicate OK
something VBN something arg1 OK
you NN ^ ^ filler
know PRP ^ ^ filler
because VBP because ^ OK
i IN ^ ^ filler
mean PRP ^ ^ filler
most VBP most arg0 OK
people JJS people ^ OK
go NNS go predicate OK
through VBP through arg2 OK
life IN life arg2 OK
and NN and ^ OK
people JJS ^ arg0 false_start
have RB do ^ false_start
not CC not ^ OK
really RB really ^ OK
have RB have predicate OK
any VBP any arg1 OK
real DT real arg1 OK
friends JJ friends arg1 OK

the DT the ^ OK
way NN way ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
look VBP look predicate OK
at IN at arg1 OK
it PRP it arg1 OK
i ADVP-2 i arg0 OK
feel PRP feel predicate OK
blessed VBP blessed arg1 OK
to JJ to arg2 OK
just TO just arg2 OK
have RB have arg2 OK
one VB one arg1 OK
really DT really arg1 OK
good RB good arg1 OK
one JJ one arg1 OK

and CC ^ ^ false_start
even RB ^ ^ repeat
e- RB ^ ^ repeat
even RB even ^ OK
if IN if ^ OK
it PRP it arg1 OK
was VBD was predicate OK
ten CD ten arg2 OK
million CD million arg2 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
accept VB accept predicate OK
it PRP it arg1 OK
because IN because ^ OK
th- XX ^ ^ false_start
you PRP you arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
put VB put predicate OK
a DT a arg1 OK
price NN price arg1 OK
on IN on argM_loc OK
friendship NN friendship argM_loc OK

where WRB ^ ^ repeat
where WRB where arg2 OK
you PRP are predicate false_start
you PRP ^ ^ repeat
you PRP you arg1 OK
from- IN ^ ^ repeat
from IN from arg2 OK
sean ADVP-2 sean ^ OK

i PRP i arg1 OK
'm VBP 'm predicate OK
from IN from arg2 OK
panama NNP panama arg2 OK
city NN city arg2 OK
florida NNP florida arg2 OK

i PRP i arg1 OK
not RB am predicate false_start
not RB not arg2 OK
a DT a arg2 OK
military NN military arg2 OK
brat NN brat arg2 OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
unfortunate JJ unfortunate arg2 OK
there RB ^ ^ false_start
because IN because ^ OK
we PRP we arg0 OK
moved VBD moved predicate OK
so RB so ^ OK
many JJ many ^ OK
times NNS times ^ OK
when SBAR-3 when ^ OK
i WRB i arg1 OK
was PRP was predicate OK
little VBD little arg2 OK
that JJ that ^ OK
i ADVP-TMP- 1 i arg0 OK
do IN do ^ OK
n't PRP n't ^ OK
have VBP have predicate OK
any RB any arg1 OK
friends VB friends arg1 OK
that DT that arg1 OK
go NNS go arg1 OK
all WDT all arg2 OK
the VBP the arg2 OK
way PDT way arg2 OK
back DT back arg2 OK
to NN to arg2 OK
my RB my arg2 OK
childhood IN childhood arg2 OK

which WDT which ^ OK
i PRP i arg0 OK
wish VBP wish predicate OK
i PRP i arg0 OK
did VBD did arg1 OK
you NP-1 ^ ^ filler
know PRP ^ ^ filler
because VBP because ^ OK
i IN i arg0 OK
feel PRP feel predicate OK
you VBP ^ ^ filler
know PRP ^ ^ filler
y- VBP ^ ^ repeat
people XX people arg1 OK
that NNS that arg1 OK
do WDT do arg1 OK
have VBP have arg1 OK
that VB that arg1 OK
are WDT are arg1 OK
definitely VBP definitely arg2 OK
more RB more arg2 OK
blessed RBR blessed arg2 OK
and JJ and arg2 OK
more CC more arg2 OK
fortunate RBR fortunate arg2 OK
than JJ than arg2 OK
people IN people arg0 OK
that NNS that arg2 OK
got XX got arg2 OK
m- WDT ^ ^ repeat
moved VBD moved arg2 OK
around VBN around arg2 OK
a RP a arg2 OK
lot DT lot arg2 OK
like NN like arg2 OK
i IN i arg0 OK
did PRP did arg2 OK

well UH ^ arg2 filler
see UH ^ ^ false_start
we PRP ^ ^ repeat
my- PRP ^ ^ repeat
we PRP we arg0 OK
moved VBD ^ ^ repeat
moved VBD moved predicate OK
from IN from arg2 OK
state NN state arg2 OK
to IN to arg2 OK
state NN state arg2 OK
uh UH and ^ false_start
uh UH ^ ^ filler
city NN city arg2 OK
to IN to arg2 OK
city NN city arg2 OK

so RB ^ ^ false_start
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
never RB ^ ^ false_start
really RB ^ ^ false_start
know- VB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
got VBD ^ ^ repeat
got VBD got predicate OK
to TO ^ ^ repeat
to IN ^ ^ repeat
to IN to arg4 OK
where WRB where arg4 OK
i PRP i arg0 OK
shut VBP shut arg4 OK
people NNS people arg1 OK
out RP out arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler

because IN ^ ^ false_start
i PRP ^ ^ false_start
did VBD ^ ^ false_start
n't RB ^ ^ false_start
you PRP you arg0 OK
know VBP know predicate OK
what WP what arg1 OK
i PRP i arg0 OK
'm VBP 'm arg1 OK
saying VBG saying arg1 OK

because IN because ^ OK
i PRP ^ ^ false_start
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
want VB want ^ OK
to TO to ^ OK
be VB be ^ OK
hurt VBN hurt ^ OK

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
n't RB n't ^ OK
want VB ^ ^ repeat
want VB want predicate OK
to TO to arg1 OK
have VB have arg1 OK
to TO to arg1 OK
say VB say arg1 OK
goodbye UH goodbye arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
say- VBG ^ ^ repeat
saying VBG saying arg1 OK
goodbye UH goodbye arg1 OK
i PRP i arg0 OK
think VBP think predicate OK
to IN ^ ^ false_start
me PRP ^ ^ false_start
is VBZ is arg1 OK
one CD one arg1 OK
of IN of arg1 OK
the DT the arg1 OK
hardest JJS hardest arg1 OK
things NNS things arg1 OK
that WDT that arg2 OK
there EX there arg2 OK
ever RB ^ ^ repeat
ever RB ever arg2 OK
is VBZ is arg2 OK
to TO to arg2 OK
do VB do arg2 OK

so UH ^ ^ filler
um UH ^ ^ filler
you PRP you ^ OK
always RB always ^ OK
planned VBD planned ^ OK
on IN on ^ OK
moving VBG moving ^ OK
into IN into ^ OK
florida NNP florida ^ OK
when WRB when ^ OK
you PRP you ^ OK
retired VBD retired ^ OK
or ADVP-TMP- 2 ^ ^ false_start
something CC ^ ^ false_start

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
nice JJ nice ^ OK

so UH ^ ^ false_start
your PRP your ^ OK
kids NNS kids ^ OK
are VBP are ^ OK
all DT all ^ OK
like UH ^ ^ filler
off RB off ^ OK
doing VBG doing ^ OK
their PRP their ^ OK
thing NN thing ^ OK

so UH ^ ^ false_start
you PRP you ^ OK
had VBD had ^ OK
the DT ^ ^ repeat
the DT the ^ OK
new NNP new ^ OK
yorkers NNPS yorkers ^ OK

eh UH eh ^ OK
yeah UH yeah ^ OK

actually UH actually ^ OK
um UH ^ ^ filler
i PRP ^ ^ false_start
am VBP ^ ^ false_start
a DT ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
work VBP work ^ OK
in IN in ^ OK
the DT the ^ OK
city NN city ^ OK

i PRP i ^ OK
live VBP live ^ OK
in IN in ^ OK
center NNP center ^ OK
city NNP city ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
my PRP my ^ OK
friend NN friend ^ OK
showed VBD showed ^ OK
me PRP me ^ OK
this DT this ^ OK
ad NN ad ^ OK
because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
always RB always ^ OK
on IN on ^ OK
my PRP my ^ OK
phone NN phone ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
wow UH wow ^ OK
two CD two ^ OK
hundred CD hundred ^ OK
dollars NNS dollars ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
yeah UH yeah ^ OK

all DT all ^ OK
i PRP i ^ OK
got VBD have ^ false_start
to TO to ^ OK
do VB do ^ OK
is NP-1 is ^ OK
talk VBZ talk ^ OK
to VB to ^ OK
somebody IN somebody ^ OK
i NN i ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
know RB know ^ OK

o- UH o- ^ OK
oh UH oh ^ OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
kn- XX ^ ^ false_start
do VBP ^ ^ false_start
yo- PRP ^ ^ false_start
how WRB how ^ OK
many JJ many ^ OK
participants NNS participants ^ OK
did VBD did ^ OK
they PRP they ^ OK
have VB have ^ OK
last JJ last ^ OK
year NN year ^ OK

um UH ^ ^ filler
so UH ^ ^ false_start
is VBZ is ^ OK
it PRP it ^ OK
sunny JJ sunny ^ OK
over IN over ^ OK
there RB there ^ OK
in IN in ^ OK
florida NNP florida ^ OK

well UH ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler
foggy JJ foggy ^ OK
humid JJ humid ^ OK
and CC and ^ OK
raining VBG raining ^ OK

it PRP it ^ OK
's HVS 's ^ OK
been VBN been ^ OK
like IN like ^ false_start
this DT this ^ false_start
all DT all ^ OK
weekend NN weekend ^ OK
actually RB actually ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
m- XX ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
watch VB watch ^ OK
the DT the ^ OK
news NN news ^ OK
i PRP i ^ OK
guess VBP guess ^ OK
too RB too ^ OK
much RB much ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
either RB either ^ OK
uh UH ^ ^ filler
in IN in ^ OK
my PRP my ^ OK
office NN office ^ OK
or CC or ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
like UH ^ ^ filler
on IN on ^ OK
the DT the ^ OK
phone NN phone ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
hav- VBP ^ ^ false_start
really RB ^ ^ false_start
have VBP ^ ^ false_start
n't RB ^ ^ false_start
watched VBN ^ ^ false_start
the DT ^ ^ false_start
new- NN ^ ^ false_start
actually RB actually ^ OK
today NN today ^ OK
was VBD was ^ OK
actually RB actually ^ OK
the DT the ^ OK
first JJ first ^ OK
time NN time ^ OK
i PRP i ^ OK
've VBP 've ^ OK
watched VBN watched ^ OK
the DT the ^ OK
news NN news ^ OK
in IN in ^ OK
a DT a ^ OK
while NN while ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
hearing VBG hearing ^ OK
all PDT all ^ OK
these DT these ^ OK
deaths NNS deaths ^ OK
and CC and ^ OK
all PDT ^ ^ repeat
like UH ^ ^ filler
like UH ^ ^ filler
all PDT all ^ OK
this DT ^ ^ repeat
these DT these ^ OK
nat- XX ^ ^ repeat
disasters NNS disasters ^ OK

it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it ^ OK
kind RB ^ ^ repeat
kind RB kind ^ OK
of RB ^ ^ repeat
of RB of ^ OK
just RB ^ ^ repeat
just RB just ^ OK
brings VBZ brings ^ OK
me PRP me ^ OK
do- VBZ ^ ^ repeat
down RB down ^ OK
with IN with ^ OK
the DT the ^ OK
weather NN weather ^ OK
and CC and ^ OK
all DT all ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
sure JJ sure ^ OK
uh UH ^ ^ filler
th- XX ^ ^ false_start
people NNS people ^ OK
do VBP do ^ OK
n't RB n't ^ OK
get VB get ^ OK
sick JJ sick ^ OK
down IN down ^ OK
there RB there ^ OK
huh UH ^ ^ filler

that DT that ^ OK
's BES 's ^ OK
eh UH ^ ^ filler
something NN something ^ OK
interesting JJ interesting ^ OK

well UH ^ ^ false_start
i PRP i ^ OK
hope VBP hope ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
as RB as ^ OK
lucky JJ lucky ^ OK
as IN as ^ OK
you PRP you ^ OK
when WRB when ^ OK
i PRP i ^ OK
retire VBP retire ^ OK

me PRP me ^ OK
either RB either ^ OK

the DT the ^ OK
guy NN guy ^ OK
who WP who ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
sentenced VBN sentenced ^ OK
to IN ^ ^ repeat
to IN to ^ OK
a DT a ^ OK
death NN ^ ^ repeat
death NN death ^ OK
sent- VBN ^ ^ repeat
se- NN ^ ^ repeat
sentence NN sentence ^ OK

but CC but ^ OK
i PRP i ^ OK
know VBP know ^ OK
that IN that ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
trying VBG ^ ^ repeat
trying VBG trying ^ OK
to TO ^ ^ repeat
to TO to ^ OK
kill VB kill ^ OK
him PRP him ^ OK

that DT that ^ OK
's BES 's ^ OK
a DT a ^ OK
really RB really ^ OK
long JJ long ^ OK
time NN time ^ OK

how WRB ^ ^ false_start
ma- JJ ^ ^ false_start
how WRB how ^ OK
old JJ old ^ OK
are VBP are ^ OK
your PRP your ^ OK
sons NNS sons ^ OK

do VBP ^ ^ false_start
you PRP ^ ^ false_start
have VB ^ ^ false_start
any DT ^ ^ false_start
oh UH ^ ^ filler
you PRP you ^ OK
have VBP have ^ OK
three CD three ^ OK
girls NNS girls ^ OK
three CD three ^ OK
granddaughters NNS granddaughter s  ^ OK

there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
f- XX ^ ^ false_start
huge JJ huge ^ OK
age NN age ^ OK
difference NN difference ^ OK
between IN between ^ OK
me PRP me ^ OK
and CC and ^ OK
her PRP her ^ OK

it PRP it ^ OK
's BES 's ^ OK
kind RB kind ^ OK
a DT of ^ false_start
weird JJ weird ^ OK
to RB to ^ OK

i PRP i arg0 false_start
guess VBP guess predicate false_start
he PRP he arg1 false_start
's BES 's arg1 false_start
ah UH ^ ^ filler
kind RB ^ ^ false_start
of RB ^ ^ false_start
from IN from arg2 false_start
texas NNP ^ arg2 false_start
somewhere RB texas ^ false_start

remember VB remember ^ OK
when WRB when ^ OK
his PRP his ^ OK
daughter NN daughter ^ OK
got VBD got ^ OK
ah UH ^ ^ filler
caught VBN caught ^ OK
with IN in ^ false_start
uh UH ^ ^ filler
well UH ^ ^ filler
restaurants NNS restaurants ^ OK
in IN in ^ OK
austin NNP austin ^ OK
drinking VB ^ ^ repeat
drinking VBG drinking ^ OK
alcohol NN alcohol ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

but CC ^ ^ false_start
ah UH ^ ^ filler
i PRP i arg1 OK
do VBP do ^ OK
n't RB n't ^ OK
swing VB swing predicate OK
either DT either ^ OK
way NN way ^ OK

but CC ^ ^ false_start
uh UH ^ ^ filler
family NN family arg1 OK
's BES 's predicate OK
important JJ important arg2 OK
though RB though ^ OK
man UH ^ ^ filler
because IN because ^ OK
without IN without ^ OK
them PRP them ^ OK
man UH ^ ^ filler
going VBG going arg0 OK
through IN through arg0 OK
a DT a arg0 OK
d. NN d. arg0 OK
w. NN w. arg0 OK
i. NN i. arg0 OK
would MD would arg0 OK
really RB really arg0 OK
suck VB suck predicate OK

no DT no ^ OK
matter NN matter ^ OK
what WDT what ^ OK
of IN ^ ^ false_start
a DT ^ ^ false_start
dumb-ass JJ dumb-ass ^ OK
decision NN decision ^ OK
you PRP you ^ OK
make VBP make ^ OK

i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
to IN to ^ OK
crested NNP crested arg4 OK
butte NNP butte arg4 OK

i PRP i arg0 OK
think VBP think predicate OK
and CC ^ ^ false_start
ah UH ^ ^ filler
that DT ^ ^ repeat
that DT those arg1 false_start
's BES ^ ^ repeat
's BES are arg1 false_start
the DT the arg2 OK
only JJ only arg2 OK
places NNS places arg2 OK
i PRP i arg1 OK
've VBP 've arg2 OK
been VBN been predicate OK
been VBN to arg2 false_start

ah UH ^ ^ filler
i PRP i arg0 OK
was VBD was ^ OK
actually RB actually ^ OK
going VBG going ^ OK
to TO to ^ OK
tell VB tell predicate OK
you PRP you arg2 OK
about IN about arg1 OK
family NN family arg1 false_start

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
consider VB consider predicate OK
anybody NN anybody arg1 OK
here RB here arg1 false_start
family NN family arg2 OK

man UH ^ ^ filler
we PRP ^ ^ repeat
we PRP we arg0 OK
had VBD ^ ^ repeat
had VBD had predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
falling NN falling arg1 OK
out RP out arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
totally RB ^ ^ repeat
totally RB totally ^ OK
thought VBD thought predicate OK
i PRP ^ ^ false_start
was VBD ^ ^ false_start
like RP ^ ^ false_start
she PRP she arg1 OK
was VBD was arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
the DT the arg1 OK
one CD one arg1 OK

man UH ^ ^ filler
i PRP i ^ OK
wou- MD would ^ false_start

her PRP her arg0 OK
older JJR older ^ OK
brother NN ^ ^ repeat
brother NN brother ^ OK
he PRP ^ ^ false_start
man UH ^ ^ filler
loved VBD loved predicate OK
me PRP me arg1 OK

and CC ^ ^ false_start
he PRP ^ ^ repeat
he PRP ^ ^ repeat
he PRP he arg1 OK
was VBD ^ ^ false_start
's BES 's predicate OK
ac- RB ^ ^ repeat
actually RB actually ^ OK
younger JJR younger arg2 OK
than IN than arg2 OK
me PRP me arg2 OK

and CC ^ ^ false_start
ah UH ^ ^ filler
he PRP he arg1 OK
's BES 's predicate OK
only RB only arg2 OK
a DT a arg2 OK
year NN year arg2 OK
younger JJR younger arg2 OK
than IN than arg2 OK
me PRP me arg2 OK
though RB though arg2 OK

but CC ^ ^ repeat
uh UH ^ ^ filler
really UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
used VBD used ^ OK
to TO to ^ OK
go VB go ^ OK
babysit VB babysit predicate OK
thei- PRP ^ ^ repeat
her PRP her arg2 OK
little JJ little arg2 OK
brother NN brother arg2 OK
and CC and arg2 OK
sister NN sister arg2 OK
all PDT all ^ OK
the DT the ^ OK
time NN time ^ OK
and CC and ^ OK
play VB play predicate OK
with IN with ^ OK
them PRP them ^ OK

and CC ^ ^ false_start
man UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
alwa- RB ^ ^ repeat
be VB be predicate OK
there RB there arg2 OK
everyday RB everyday arg2 OK
just RB right arg2 false_start
about RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
after IN after arg2 OK
work NN work arg2 OK

it PRP it ^ OK
seems VBZ seems ^ OK
like IN like ^ OK
the DT the ^ OK
th- DT ^ ^ repeat
person NN person ^ OK
with IN with ^ OK
the DT the ^ OK
most JJS most ^ OK
money NN money ^ OK
and CC ^ ^ repeat
or CC or ^ OK
who WP who ^ OK
has VBZ has ^ OK
the DT ^ ^ repeat
the DT the ^ OK
best JJS ^ ^ repeat
best JJS best ^ OK
lawyer NN ^ ^ repeat
lawyer NN lawyer ^ OK

that IN ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
not RB not arg2 OK
about IN about arg2 OK
justice NN justice arg2 OK

well UH ^ ^ false_start
i PRP ^ ^ repeat
wonder VBP ^ ^ false_start
if IN ^ ^ false_start
being VBG ^ ^ false_start
televised VBN ^ ^ false_start
i PRP i arg0 OK
know VBP know predicate OK
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
do VBP do arg1 OK
get VB get arg1 OK
into IN into arg2 OK
it PRP it arg2 OK
and CC and arg1 OK
like VBP like arg1 OK
to TO to arg1 OK
watch VB watch arg1 OK
it PRP it arg1 OK

and CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
sort RB sort arg2 OK
of RB of arg2 OK
like IN like arg2 OK
a DT a arg2 OK
soap NN soap arg2 OK
opera NN opera arg2 OK

i PRP i arg0 OK
wonder VBP wonder predicate OK
if IN if arg1 OK
it PRP it arg1 OK
helps VBZ helps arg1 OK
other JJ other arg0 false_start
celebrities NNS ^ arg0 false_start
anybody NN celebrities ^ repeat
stay VBP ^ ^ repeat
steer VB ^ ^ false_start
away RB ^ ^ false_start
from IN ^ ^ false_start
it PRP ^ ^ false_start
like IN ^ ^ false_start
that WDT that arg1 OK
do VBP do arg1 OK
n't RB n't arg1 OK
want VB want arg1 OK
to TO to arg1 OK
be VB be arg1 OK
televised VBN televised arg1 OK
in IN in arg1 OK
a DT a arg1 OK
court NN court arg1 OK
case NN case arg1 OK
think VB think predicate OK
twice RB twice ^ OK
about IN about arg1 OK
doing VBG doing arg1 OK
something NN something arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
always RB always ^ OK
heard VBN heard predicate OK
that IN that arg1 OK
uh UH ^ ^ filler
publicity NN publicity arg0 OK
whether IN whether arg1 OK
bad JJ bad arg1 OK
or CC or arg1 OK
good JJ good arg1 OK
is VBZ is arg1 OK
still RB still arg2 OK
publicity NN publicity arg2 OK
and CC and arg1 OK
keeps VBZ keeps arg1 OK
you PRP you arg1 OK
in IN in arg1 OK
the DT the arg1 OK
public NN public arg1 OK
's POS 's arg1 OK
eye NN eye arg1 OK

but CC ^ ^ repeat
but CC but ^ OK
i PRP i arg0 OK
think VBP think predicate OK
we PRP we arg0 OK
do VBP do arg1 OK
judge VB judge arg1 OK
uh UH ^ ^ filler
celebrities NNS celebrities arg1 OK
on IN on arg3 OK
bad JJ bad arg3 OK
events NNS events arg3 OK

so UH ^ ^ false_start
it PRP it ^ OK
was VBD was predicate OK
just RB just arg2 OK
m- JJR ^ ^ repeat
more JJR more arg2 OK
rumors NNS rumors arg2 OK
of IN of ^ OK
what WP what arg1 OK
was VBD was ^ OK
being VBG being ^ OK
said VBN said predicate OK
and CC and ^ OK
done VBN done predicate OK

it PRP it ^ OK
was VBD was ^ OK
n't RB n't ^ OK
the DT the ^ OK
same JJ same ^ OK
as IN as ^ OK
watching VBG watching ^ OK
a DT a ^ OK
trial NN trial ^ OK
and CC and ^ OK
it PRP it ^ OK
all DT all ^ OK
being VBG being ^ OK
drug VBN dragged ^ false_start
out RB out ^ OK
and CC and ^ OK

you PRP ^ ^ repeat
you PRP you ^ OK
kno- VBP ^ ^ repeat
know VBP know ^ OK
what WP what ^ OK

i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg0 OK
depends VBZ depends arg1 OK
on IN on arg1 OK
what WP what arg1 OK
y- XX ^ ^ repeat
you PRP you arg0 OK
mean VBP mean arg1 OK
by IN by arg1 OK
wrong NN wrong arg1 OK

like UH ^ ^ filler
is VBZ is predicate OK
it PRP it arg1 OK
the DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg2 OK
social JJ social arg2 OK
problems NNS problems arg2 OK
that WDT that ^ OK
there EX there arg1 OK
's BES 's predicate OK
a DT a arg2 OK
serious JJ serious arg2 OK
problem NN problem arg2 OK
with IN with arg2 OK

y- XX ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
because IN because ^ OK
i PRP i arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
know VB know predicate OK
about IN about arg1 OK
like UH ^ ^ filler
the DT the arg1 OK
test NN test arg1 OK
scores NNS scores arg1 OK
from IN from arg1 OK
private JJ private arg1 OK
schools NNS schools arg1 OK

but CC but ^ OK
um UH ^ ^ filler
i PRP i arg0 false_start
guess VBP guess predicate false_start
there EX there arg1 OK
's BES 's arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
emphasis NN emphasis arg1 OK
put VBN put arg2 OK
on IN on arg2 OK
test NN test arg2 OK
scores NNS scores arg2 OK
in IN ^ ^ false_start
um UH ^ ^ filler
at RB at arg1 OK
least RB least arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
where WRB where argM_loc OK
i PRP i arg1 OK
'm VBP 'm argM_loc OK
from IN from arg2 OK
here ADVP-1 here arg2 OK
in RB in arg2 OK
california IN california arg2 OK

and CC ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ repeat
just RB just ^ OK
think VBP think predicate OK
that IN that arg1 OK
um UH ^ ^ filler
there EX there arg1 OK
's BES 's arg1 OK
more JJR more arg2 OK
to IN to arg2 OK
life NN life arg2 OK
than IN than arg1 OK
testing NN testing arg1 OK

s- RB ^ ^ repeat
so RB ^ ^ false_start
but CC but ^ OK

well UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
um UH ^ ^ filler
there EX there arg1 OK
's BES 's arg1 OK
a DT ^ ^ false_start
not RB not argM_neg OK
enough RB enough arg2 OK
funding NN funding arg2 OK

that DT that ^ OK
's BES 's ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
like UH ^ ^ filler
the DT the ^ OK
biggest JJS biggest ^ OK
thing NN thing ^ OK
for IN ^ ^ repeat
for IN for ^ OK
sort RB sort ^ OK
of RB of ^ OK
having VBG having ^ OK
a DT a ^ OK
well RB well ^ OK
rounded JJ rounded ^ OK
educational JJ educational ^ OK
program NN program ^ OK
because IN because ^ OK
right RB ^ ^ false_start

right RB ^ ^ false_start
now RB ^ ^ false_start
they PRP ^ ^ false_start
're VBP ^ ^ false_start
so RB ^ ^ false_start
focused JJ ^ ^ false_start
on IN ^ ^ false_start
um UH ^ ^ filler
math NN ^ ^ false_start
and CC ^ ^ false_start
english NNP ^ ^ false_start
that IN ^ ^ false_start
they PRP ^ ^ false_start
really RB ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
e UH ^ ^ false_start
e UH ^ ^ false_start
actually UH actually ^ OK
at IN at argM_loc OK
my PRP my argM_loc OK
elementary JJ elementary argM_loc OK
school NN school argM_loc OK
where WRB where ^ OK
i PRP i arg0 OK
teach VBP teach predicate OK
they ADVP-LOC- 1 they arg0 OK
r- PRP ^ ^ repeat
rarely RB rarely argM_tmp OK
have RB have predicate OK
time VBP time arg1 OK
to NN to arg1 OK
do TO do arg1 OK
science VB science arg1 OK
or NN or arg1 OK
social CC social arg1 OK
studies JJ studies arg1 OK
because NNS because ^ OK
it IN it arg1 OK
's PRP 's predicate OK
all BES all arg2 OK
about RB about arg2 OK
math IN math arg2 OK
and NN and arg2 OK
english CC english arg2 OK
and NNP and arg2 OK
um CC ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
raising VBP raising arg2 OK
the VBG the arg1 OK
scores DT scores arg1 OK
on NNS on arg1 OK
that IN that arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
really RB really arg2 OK
too RB too arg2 OK
bad JJ bad arg2 OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
because IN ^ ^ false_start
those DT ^ ^ false_start
and CC ^ ^ false_start
also RB also ^ OK
as IN as ^ OK
you PRP you ^ OK
know VBP ^ ^ filler
or CC ^ arg0 filler
may MD may ^ OK
have VB have ^ OK
heard VBN heard predicate OK
th- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
really RB really arg1 OK
have VB have arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
room NN room arg1 OK
for IN for arg1 OK
extra JJ extra arg1 OK
activities NNS activities arg1 OK
like IN like arg1 OK
music NN music arg1 OK
and CC and arg1 OK
even RB even arg1 OK
p. NN p. arg1 OK
e. NN e. arg1 OK

if IN if ^ OK
i PRP i ^ OK

well UH ^ ^ filler
kind- RB ^ ^ false_start
well UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
all RB all arg1 OK
based VBN based arg1 OK
on IN on arg2 OK
funding NN funding arg2 OK
because IN because ^ OK
there EX there arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
enough JJ enough arg2 OK
f- RB ^ ^ repeat
funding NN funding arg2 OK
to TO to arg2 OK
um UH ^ ^ filler
provide VB provide arg2 OK
these DT these arg2 OK
other JJ other arg2 OK
programs NNS programs arg2 OK
and CC and ^ OK
also RB also ^ OK
because IN because ^ OK
there EX there arg1 OK
's BES 's predicate OK
so RB so arg1 OK
many JJ many arg1 OK
other JJ other arg1 OK
things NNS things arg1 OK
that WDT ^ ^ repeat
that WDT that arg2 OK
could MD could arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
be VB be arg2 OK
done VBN done arg2 OK
at IN at argM_tmp OK
this DT this argM_tmp OK
time NN time argM_tmp OK

we PRP we arg0 OK
have VBP have ^ OK
to TO to ^ OK
just RB just ^ OK
totally RB totally ^ OK
focus VB focus predicate OK
on IN on arg2 OK
reading NN reading arg2 OK
and CC and arg2 OK
math NN math arg2 OK
because IN because ^ OK
that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
only JJ only arg2 OK
way NN way arg2 OK
that WDT that arg2 OK
we PRP we arg0 OK
're VBP 're arg2 OK
going VBG going arg2 OK
to TO to arg2 OK
improve VB improve arg2 OK
those DT those arg1 OK
scores NNS scores arg1 OK

but CC ^ ^ repeat
there EX ^ ^ false_start
's BES ^ ^ false_start
but CC but ^ OK
see UH ^ ^ filler
they PRP they arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
understand VB understand predicate OK

well UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
one CD one arg2 OK
way NN way arg2 OK

um UH ^ ^ filler
another DT another arg1 OK
way NN way arg1 OK
is VBZ is predicate OK
to TO to arg2 OK
hey UH ^ ^ filler
give VB give arg2 OK
teachers NNS teachers arg2 OK
a DT a arg1 OK
little RB little arg1 OK
more JJR more arg1 OK
freedom NN freedom arg1 OK
in IN in arg1 OK
the DT the arg1 OK
classroom NN classroom arg1 OK
because IN because ^ OK
what WP what arg1 OK
they PRP they arg0 OK
're VBP 're ^ OK
starting VBG starting predicate OK
to TO to arg1 OK
do VB do arg1 OK
now RB now argM_tmp OK
is VBZ is ^ OK
adopt VBP ^ ^ false_start
these DT ^ ^ false_start
um UH ^ ^ filler
like UH ^ ^ filler
they PRP they arg0 OK
have VBP have predicate OK
this DT this arg1 OK
totally RB ^ ^ repeat
totally RB totally arg1 OK
scripted JJ ^ ^ repeat
scripted JJ scripted arg1 OK
program NN program arg1 OK
for IN for arg1 OK
reading NN reading arg1 OK

that DT ^ ^ false_start
like UH ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
like IN like arg2 OK
it- PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's arg2 OK
already RB already arg2 OK
there RB there arg2 OK

i PRP ^ ^ repeat
m- VBP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they arg1 OK
could MD could ^ OK
just RB just ^ OK
be VB be predicate OK
robots NNS robots arg2 OK
really RB really arg2 OK

but CC ^ ^ repeat
but CC but ^ OK
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
general JJ general arg2 OK
problem NN problem arg2 OK
with IN with arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
big JJ big arg2 OK
institutions NNS institutions arg2 OK

it PRP it arg1 OK
's S-4 's predicate OK
really BES really arg2 OK
hard RB hard arg2 OK
to JJ to arg2 OK
avoid TO avoid arg2 OK
that WDT that ^ false_start
in VB in ^ OK
that NP-3 that ^ OK
you IN you arg0 OK
have WDT have predicate OK
a PRP a arg1 OK
lot VBP lot arg1 OK
of DT of arg1 OK
people NN people arg1 OK
to IN to arg1 OK
service NNS service arg1 OK
and TO and ^ OK
you VB you arg0 OK
need CC need predicate OK
it PRP it arg1 OK
to VBP to arg1 OK
kind PRP ^ ^ false_start
of TO ^ ^ false_start
be RB be arg1 OK
uh RB ^ ^ filler
standard VB standard arg2 OK
in UH in arg1 OK
what JJ what arg2 OK
you IN you arg1 OK
're WP 're arg1 OK
providing PRP providing arg2 OK

so RB ^ ^ false_start
you PRP you arg0 OK
end VBP end ^ OK
up RP up ^ OK
p- XX ^ ^ false_start
treating VBG treating predicate OK
everybody NN everybody arg1 OK
like UH ^ ^ filler
um UH ^ ^ filler
not RB not arg2 OK
really RB really arg2 OK
as IN ^ ^ repeat
as IN ^ ^ repeat
as IN as arg2 OK
an DT an arg2 OK
individual NN individual arg2 OK

well UH ^ ^ filler
they PRP ^ ^ false_start
um UH ^ ^ filler
well UH ^ ^ filler
actually RB actually ^ OK
technology NN technology arg1 OK
's BES 's predicate OK
a DT a arg2 OK
big JJ big arg2 OK
focus NN focus arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
this DT ^ ^ false_start
uh UH ^ ^ filler
especially RB ^ ^ false_start
the DT ^ ^ repeat
the DT ^ ^ repeat
like UH ^ ^ filler
the DT the arg0 OK
lowest JJS lowest arg0 OK
performing VBG performing arg0 OK
schools NNS schools arg0 OK
they PRP ^ ^ false_start
in IN in arg0 OK
the DT the arg0 OK
poorest JJS poorest arg0 OK
areas NNS areas arg0 OK
like UH ^ ^ filler
have VBP have predicate OK
the DT the arg1 OK
most JJS most arg1 OK
technology NN technology arg1 OK

but CC but ^ OK
i PRP ^ ^ repeat
think VBP ^ ^ repeat
i PRP ^ ^ false_start
think VBP ^ ^ false_start
their PRP ^ ^ false_start
problem NN ^ ^ false_start
is VBZ ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
so RB ^ ^ false_start
much RB ^ ^ false_start
i- PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
exac- RB ^ ^ false_start
really RB really ^ OK
if IN if ^ OK
i PRP i arg0 OK
could MD could ^ OK
pinpoint VB pinpoint predicate OK
one CD one arg1 OK
thing NN thing arg1 OK
i PRP i arg0 OK
would MD would ^ OK
say VB say predicate OK
that IN that arg1 OK
there EX there arg1 OK
's BES 's arg1 OK
very RB very arg2 OK
little JJ little arg2 OK
support NN support arg2 OK
for IN for arg2 OK
the DT the arg2 OK
teachers NNS teachers arg2 OK

but CC but ^ OK
a- IN ^ ^ repeat
at IN at ^ OK
the DT the ^ OK
higher JJR higher ^ OK
levels NNS levels ^ OK
no UH ^ ^ filler

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
actually RB actually ^ OK
'm VBP ^ ^ repeat
am VBP am predicate OK
a DT a arg1 OK
computer NN computer arg1 OK
teacher NN teacher arg1 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
in IN ^ ^ repeat
in IN in arg2 OK
the DT the arg2 OK
computer NN computer arg2 OK
lab NN lab arg2 OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
see VBP see predicate OK
what WP what arg1 OK
goes VBZ goes arg1 OK
on RB on arg_particl OK
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
every DT every argM_tmp OK
day NN day argM_tmp OK

but CC but ^ OK
i PRP i ^ OK
think VBP think ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
more RBR more ^ OK
like IN like ^ OK
just RB just ^ OK
having VBG having ^ OK
more JJR more ^ OK
help NN help ^ OK
and CC and ^ OK
more JJR more ^ OK
support NN support ^ OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
usually RB usually ^ OK
in IN in ^ OK
the DT the ^ OK
lowest JJS lowest ^ OK
performing VBG performing ^ OK
schools NNS schools ^ OK
in IN in ^ OK
the DT the ^ OK
worst JJS worst ^ OK
neighborhoods NNS neighborhoods ^ OK
that WDT that ^ OK
's BES 's ^ OK
where WRB where ^ OK
you PRP you ^ OK
get VBP get ^ OK
the DT the ^ OK
most RBS most ^ OK
inexperienced JJ inexperienced ^ OK
teachers NNS teachers ^ OK
because ADVP-LOC- 1 because ^ OK
that IN that ^ OK
's DT 's ^ OK
how BES how ^ OK
a- WRB ^ ^ false_start
i XX i ^ OK
got PRP got ^ OK
thrown VBD thrown ^ OK
in VBN in ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
sometimes RB sometimes ^ OK
it PRP it ^ OK
could MD could ^ OK
be VB be ^ OK
advantageous JJ advantageous ^ OK
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK

i PRP i arg0 OK
think VBP think predicate OK
one CD one arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
was VBD was arg1 OK

uh UH ^ ^ filler
does VBZ does ^ OK
being VBG being arg0 OK
a DT a arg0 OK
p- XX ^ ^ repeat
pet NN pet arg0 OK
owner NN owner arg0 OK
um UH ^ ^ filler
influence VB influence predicate OK
your PRP your arg1 OK
buying NN buying arg1 OK
decisions NNS decisions arg1 OK

i PRP i ^ OK

i PRP i arg0 OK
but CC ^ ^ false_start
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
how WRB how arg1 OK
much JJ much arg1 OK
an DT ^ ^ false_start
influence NN influence arg1 OK
that DT that arg0 OK
has VBZ has arg1 OK
on IN on arg1 OK
buying VBG buying arg1 OK
stuff NN stuff arg1 OK

d- VBP ^ ^ repeat
do VBP do ^ OK
you PRP you arg0 OK
own VB own predicate OK
pets NNS pets arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ filler
think VBP ^ ^ filler
when WRB when ^ OK
you PRP i arg0 false_start
think VBP think predicate OK
of IN of arg1 OK
testings NNS testing arg1 false_start
i ADVP-TMP- 1 i arg0 OK
always PRP always ^ OK
think RB think predicate OK
of VBP of ^ OK
like IN ^ ^ filler
lab UH lab arg1 OK
rats NN rats arg1 OK
and NNS ^ ^ false_start
stuff CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
it PRP it arg0 OK
really FRAG-2 really ^ OK
does RB does ^ OK
n't VBZ n't ^ OK
make RB make predicate OK
a VB a arg1 OK
difference DT difference arg1 OK
what NN what ^ OK
kind WDT kind ^ OK
of NN of ^ OK
an IN ^ ^ false_start
animal DT animal ^ OK
that NN ^ ^ false_start
they WDT they arg0 OK
're PRP 're ^ OK
testing VBP testing predicate OK
with VBG with ^ OK

i PRP ^ ^ filler
guess VBP ^ ^ filler
it PRP it arg0 OK
would MD would ^ OK
kind RB ^ ^ filler
of RB ^ ^ filler
depend VB depend predicate OK
on IN on arg1 OK
how WRB how arg1 OK
legitimate JJ legitimate arg1 OK
or UH or arg1 OK
how WRB how arg1 OK
um UH ^ ^ filler
beneficial JJ beneficial arg1 OK
the DT the arg1 OK
tests NNS tests arg1 OK
would MD would arg1 OK
be VB be arg1 OK

um UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
is VBZ is predicate OK
a DT a arg2 OK
legitimate JJ legitimate arg2 OK
cure NN cure arg2 OK
for IN for arg2 OK
aids NNP aids arg2 OK
then RB then ^ OK
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
is VBZ is arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
kind RB ^ ^ filler
of RB ^ ^ filler
a DT a arg2 OK
double RB double arg2 OK
edged JJ edged arg2 OK
sword NN sword arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
are VBP are ^ OK
you PRP you arg0 OK
going VBG going ^ OK
to TO to ^ OK
subject VB subject predicate OK
someone NN someone arg1 OK
else RB else arg1 OK
to IN to arg2 OK
that DT that arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
agree VBP agree predicate OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
i PRP i arg0 OK
can MD can arg1 OK
talk VB talk arg1 OK
for IN for arg1 OK
ten CD ten arg1 OK
minutes NNS minutes arg1 OK
about IN about arg1 OK
it PRP it arg1 OK

um UH ^ ^ filler
where WRB ^ ^ repeat
where WRB where arg2 OK
are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 OK

like UH ^ ^ filler
has VBZ has ^ OK
anything NN anything arg0 OK
like UH ^ ^ filler
affected VBN affected predicate OK
you PRP you arg1 OK
personally RB personally ^ OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

eh UH ^ ^ filler
okay UH okay ^ OK

um UH ^ ^ filler
not RB ^ ^ repeat
not RB not ^ OK
really RB really ^ OK
just RB ^ ^ false_start
because IN because ^ OK
i PRP i arg0 OK
never RB never ^ OK
like UH ^ ^ filler
knew VBD knew predicate OK
anyone NN anyone arg1 OK

i PRP i arg1 OK
was VBD was ^ OK
to- XX ^ ^ false_start
like UH ^ ^ filler
directly RB directly ^ OK
like UH ^ ^ filler
involved VBN involved predicate OK
with IN with arg1 OK
anything NN anything arg1 OK
or CC or ^ OK
affected VBN affected predicate OK
by IN by ^ OK
it PRP it ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i arg0 OK
remember VBP remember predicate OK
like UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm arg1 OK
at IN at arg2 OK
school NN school arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
remember VBP remember predicate OK
like UH ^ ^ filler
with IN with arg1 OK
like UH ^ ^ filler
nine CD nine arg1 OK
eleven CD eleven arg1 OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start
like UH ^ ^ filler
everybody NN everybody arg1 OK
at IN at arg1 OK
school NN school arg1 OK
's BES 's arg1 OK
like RP ^ ^ filler
what WP what arg1 OK
's BES 's arg1 OK
going VBG going arg1 OK
on RP on arg1 OK

and CC ^ ^ false_start
mm UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
even RB even arg1 OK
now RB now arg1 OK
when WRB when arg1 OK
i PRP i arg0 OK
go VBP go arg1 OK
to TO to arg1 OK
get VB get arg1 OK
on IN on arg1 OK
a DT a arg1 OK
plane NN plane arg1 OK
i ADVP-TMP- 3 i arg0 OK
think PRP think arg1 OK
like VBP ^ ^ filler
oh RP ^ ^ filler
is UH ^ ^ repeat
you VBZ ^ ^ false_start
know PRP ^ ^ false_start
or VBP ^ ^ false_start
i- UH ^ ^ false_start
is VBZ is arg1 OK
someone VBZ someone arg1 OK
else NN else arg1 OK
going RB going arg1 OK
to VBG to arg1 OK
come TO come arg1 OK
on VBN on arg4 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
i PRP i arg0 false_start
guess VBP guess predicate false_start
have VBP have arg1 OK
something NN something arg1 OK
with IN with arg1 OK
them PRP them arg1 OK
like IN like arg1 OK
some DT some arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
weapon NN weapon arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start

u UH ^ ^ filler
uh UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
kn- VB know predicate false_start

i PRP i ^ OK
absolutely UH absolutely ^ OK

it PRP it ^ OK
's BES 's predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
too RB too arg1 OK
bad JJ bad arg1 OK
because IN because ^ OK
like UH ^ ^ filler
you PRP you arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
help VB help predicate OK
it PRP it arg1 OK

but CC but ^ OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
even RB ^ ^ false_start
like UH ^ ^ filler
i PRP i arg0 OK
have VBP have ^ OK
to TO to ^ OK
admit VB admit predicate OK
even RB even ^ OK
now RB now ^ OK
like UH ^ ^ filler
if IN if arg1 OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
somewhere RB somewhere arg2 OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
and CC and arg1 OK
like UH ^ ^ filler
there EX there arg1 OK
's BES 's arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
like UH ^ ^ filler
arabs NNPS arabs arg1 OK
or CC or ^ OK
something NN something ^ OK

or UH ^ ^ false_start
w- XX ^ ^ false_start
like UH ^ ^ filler
when WRB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
travel VBP travel predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
a DT a ^ OK
lot NN lot ^ OK

and CC ^ ^ false_start
when WRB when ^ OK
i PRP i arg0 OK
do VBP do predicate OK
and ADVP-TMP- 1 and ^ OK
i CC i arg1 OK
like PRP ^ ^ filler
go UH go predicate OK
and VB and ^ OK
i CC i arg0 OK
get PRP get predicate OK
in VBP in arg1 OK
a IN a arg1 OK
plane DT plane arg1 OK
and NN and ^ OK
if CC if ^ OK
there IN there ^ OK
's EX 's predicate OK
someone BES someone arg1 OK
of NN of arg1 OK
like IN ^ ^ filler
arab UH arab arg1 OK
descent JJ descent arg1 OK
like NN ^ ^ filler
i UH ^ ^ false_start
ca PRP ^ ^ false_start
n't MD ^ ^ false_start
help RB ^ ^ false_start
but VB ^ ^ false_start
like CC ^ ^ filler
my UH my arg1 OK
first PRP first arg1 OK
concern JJ concern arg1 OK
is NN is predicate OK
oh VBZ oh arg2 OK
my UH my arg2 OK
god UH god arg2 OK
like UH ^ ^ filler
are UH are arg2 OK
they VBP they arg0 OK
you PRP ^ ^ false_start
know PRP ^ ^ false_start
like VBP ^ ^ filler
going UH going arg2 OK
to VBG to arg2 OK
do TO do arg2 OK
something VB something arg1 OK

but CC but ^ OK
just RB ^ ^ false_start
it PRP it ^ OK
's S-1 's predicate OK
kind BES ^ ^ false_start
of RB ^ ^ false_start
hard RB hard arg1 OK
not JJ not arg1 OK
to RB to arg1 OK
like TO ^ ^ filler
when VP when ^ OK
that UH that ^ OK
's WRB 's predicate OK
like DT ^ ^ filler
the BES the arg1 OK
only UH only arg1 OK
like DT ^ ^ filler
exposure JJ exposure arg1 OK
i UH i arg0 OK
've NN 've arg1 OK
had PRP had arg1 OK
is VBP is predicate OK
like VBN ^ ^ filler
you NP-2 ^ ^ false_start
know VBZ ^ ^ false_start
like UH ^ ^ filler
whatever PRP whatever arg1 OK
you VBP you arg0 OK
hear UH hear arg1 OK
on WP on arg2 OK
the PRP the arg2 OK
news VBP news arg2 OK
and IN ^ ^ false_start
stuff DT ^ ^ false_start
and NN and ^ OK
because CC because ^ OK
i NN i arg0 OK
do CC do ^ OK
n't IN n't ^ OK
really PRP really ^ OK
have VBP have predicate OK
like RB ^ ^ filler
i RB ^ ^ false_start
guess VB ^ ^ false_start
a UH a arg1 OK
very PRP very arg1 OK
diverse VBP diverse arg1 OK
group DT group arg1 OK
of RB of arg1 OK
friends JJ friends arg1 OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
still RB ^ ^ false_start
like UH ^ ^ filler
i PRP ^ ^ false_start
feel VBP ^ ^ false_start
like UH ^ ^ filler
g- XX ^ ^ false_start
like UH ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
seen VBN seen predicate OK
like UH ^ ^ filler
young JJ young arg1 OK
teenage JJ teenage arg1 OK
girls NNS girls arg1 OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start
like UH ^ ^ filler
searched VBD searched arg1 OK
in IN in arg1 OK
the DT the arg1 OK
airports NNS airports arg1 OK

but CC but ^ OK
now RB now ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ filler
you PRP ^ ^ repeat
do VBP ^ ^ repeat
n't RB ^ ^ repeat
know VB ^ ^ repeat
like UH ^ ^ repeat
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
who WP who arg2 OK
they PRP they arg1 OK
're VBP 're arg1 OK
with IN with arg2 OK
and NP-1 ^ ^ false_start
stuff CC ^ ^ false_start

so UH ^ ^ filler
well UH ^ ^ filler
i PRP ^ ^ false_start
gue- VBP ^ ^ false_start
i PRP i arg0 OK
actually RB actually ^ false_start
studied VBD studied predicate OK
abroad RB abroad argM_loc OK

and CC ^ ^ false_start
that DT that ^ OK
was VBD was predicate OK
the DT the arg1 OK
first JJ first arg1 OK
time NN time arg1 OK
like UH ^ ^ filler
that WRB that ^ OK
i PRP i arg1 OK
got VBD got ^ OK
to TO to ^ OK
experience VB experience predicate OK
like UH ^ ^ filler
e- XX ^ ^ false_start
being VBG being arg1 OK
like UH ^ ^ filler
an DT an arg2 OK
american NNP american arg2 OK
from IN from ^ OK
like UH ^ ^ filler
a DT a ^ OK
foreign JJ foreign ^ OK
point NN point ^ OK
of IN of ^ OK
view NN view ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
was S-1 was predicate OK
weird VBD weird arg1 OK
to JJ ^ ^ false_start
like TO ^ ^ filler
have UH ^ ^ false_start
that VB ^ ^ false_start
like DT ^ ^ filler
you UH ^ ^ false_start
know PRP ^ ^ false_start
step VBP ^ ^ false_start
out VB ^ ^ false_start
of IN ^ ^ false_start
um IN ^ ^ filler
i UH ^ ^ false_start
do PRP ^ ^ false_start
n't VBP ^ ^ false_start
know RB ^ ^ false_start
like VB ^ ^ filler
seeing UH seeing predicate OK
everything VBG everything arg1 OK
from NN from arg1 OK
like IN ^ ^ filler
somebody UH somebody arg1 OK
else NN else arg1 OK
's RB 's arg1 OK
point POS point arg1 OK
of NN of arg1 OK
view IN view arg1 OK
and NN ^ ^ false_start
stuff CC ^ ^ false_start

because IN because ^ OK
you PRP you arg0 OK
have VBP have predicate OK
some DT some arg0 OK
people NNS people arg0 OK
that WDT that arg1 OK
e- XX ^ ^ false_start
like UH ^ ^ filler
support VBP support arg1 OK
and CC and ^ OK
other JJ other ^ OK
people NNS people ^ OK
that WDT that ^ OK
do VBP do ^ OK
n't RB n't ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP it ^ OK
was VBD was predicate OK
weird JJ weird arg1 OK
because IN because ^ OK
like UH ^ ^ filler
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD was predicate OK
in IN in arg2 OK
australia NNP australia arg2 OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
at IN ^ ^ false_start
the DT ^ ^ false_start
i PRP i arg0 OK
would MD would ^ OK
meet VB meet predicate OK
people NNS people arg1 OK

and CC ^ arg2 false_start
i PRP ^ arg2 repeat
'm VBP ^ ^ repeat
just RB ^ ^ repeat
like RP ^ ^ repeat
i PRP ^ ^ false_start
was VBD ^ ^ false_start
like RP ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
talk VB talk arg1 OK
about IN about arg1 OK
that DT that arg1 OK
while IN while arg1 OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
over IN over ^ OK
here RB here ^ OK

we PRP ^ ^ false_start
have VBP ^ ^ false_start
a DT ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
have VBP ^ ^ false_start
a DT ^ ^ false_start
uh UH ^ ^ filler
um UH ^ ^ filler
my PRP my arg0 OK
parents NNS parents arg0 OK
have VBP have predicate OK
a DT a arg1 OK
house NN house arg1 OK
in IN in argM_loc OK
brigantine NNP brigantine argM_loc OK

twenty-seventh JJ twenty-sevent h  ^ OK
street NN street ^ OK

d- XX ^ ^ false_start
ah UH ^ ^ filler
september NNP september arg1 OK
is VBZ is predicate OK
the DT the arg2 OK
awesome JJ awesome arg2 OK
month NN month arg2 OK
in IN in arg2 OK
brigantine NNP brigantine arg2 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
the DT ^ ^ false_start
be- XX ^ ^ false_start
i PRP ^ ^ false_start
worked VBD ^ ^ false_start
uh UH ^ ^ filler
one CD one argM_tmp OK
summer NN summer argM_tmp OK
like UH ^ ^ filler
in IN in argM_tmp OK
between IN between argM_tmp OK
college NN college argM_tmp OK
and CC and argM_tmp OK
grad NN grad argM_tmp OK
school NN school argM_tmp OK
i PRP i arg0 OK
worked VBD worked predicate OK
over IN over argM_loc OK
in IN in argM_loc OK
atlantic NNP atlantic argM_loc OK
city NNP city argM_loc OK

i PRP i arg0 OK
tended VBD tended predicate OK
bar NN bar arg1 OK
at IN at argM_loc OK
uh UH ^ ^ filler
the DT the argM_loc OK
pittsburgh NNP pittsburgh argM_loc OK

there EX ^ ^ false_start
's BES ^ ^ false_start
still RB ^ ^ false_start
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
right RB ^ ^ repeat
right RB right arg2 OK
across IN ^ ^ repeat
across IN across arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
st- NN ^ ^ repeat
parking NN parking arg2 OK
lot NN lot arg2 OK
from IN from arg2 OK
the DT the arg2 OK
irish JJ irish arg2 OK
pub NN pub arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
yeah UH yeah ^ OK

eh UH ^ ^ filler
now RB now argM_tmp OK
i PRP i arg1 OK
'm VBP 'm predicate OK
actually RB actually arg2 OK
uh UH ^ ^ filler
a DT a arg2 OK
uh UH ^ ^ filler
professor NN professor arg2 OK
at IN at arg2 OK
drexel NNP drexel arg2 OK
university NNP university arg2 OK

so UH ^ ^ filler
what WP ^ ^ repeat
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
do VB do predicate OK

like UH ^ ^ filler
i PRP ^ ^ false_start
remember VBP ^ ^ false_start
like UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
thirty-seven CD thirty-seven arg2 OK
years NNS years arg2 OK
old JJ old arg2 OK

there EX there arg1 OK
were VBD were predicate OK
people NNS people arg0 OK
who WP who arg0 OK
were VBD were arg0 OK
like UH ^ ^ filler
eighteen CD eighteen arg0 OK
in IN in arg0 OK
nineteen CD nineteen arg0 OK
seventy-nine CD seventy-nine arg0 OK
nineteen-eighty NN nineteen-eigh ty arg0 OK
who WP who arg0 OK
jumped VBD jumped arg2 OK
into IN into arg4 OK
the DT the arg4 OK
casinos NNS casinos arg4 OK
and CC and arg2 OK
were VBD were arg2 OK
making VBG making arg2 OK
like UH ^ ^ filler
fifty CD fifty arg1 OK
grand CD grand arg1 OK

ah UH ^ arg2 filler
ju- XX ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
germanic JJ in ^ false_start
germanic JJ germanic arg2 OK
languages NNS languages arg2 OK

actually UH actually ^ OK
yeah UH yeah ^ OK

basically UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
teach VBP ^ ^ repeat
teach VBP teach predicate OK
german NNP german arg1 OK

i PRP i arg0 OK
do VBP do predicate OK
some DT some arg1 OK
dutch NNP dutch arg1 OK
and CC and arg1 OK
some DT some arg1 OK
danish NNP danish arg1 OK

so UH ^ ^ repeat
like UH ^ ^ filler
but CC ^ ^ false_start
anything NN anything arg1 OK
that DT that arg1 OK
's BES 's predicate OK
upper JJ upper arg2 OK
level NN level arg2 OK

my PRP ^ arg1 repeat
ah UH ^ ^ filler
my PRP my arg1 OK
field NN field arg1 OK
of IN of arg1 OK
expertise NN expertise arg1 OK
is VBZ is predicate OK
actually RB actually argM_adverb OK
german NNP german arg1 OK
in IN in ^ false_start
what WP which ^ false_start
i PRP i arg2 OK
was VBD was arg2 OK
trained VBN trained arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
a DT a arg1 OK
cell NN cell arg1 OK
phone NN phone arg1 OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
like UH ^ ^ filler
these DT these arg1 OK
unlimited JJ unlimited arg1 OK
minutes NNS minutes arg1 OK
free JJ free arg1 OK
nights NNS nights arg1 OK
and CC and arg1 OK
weekends NNS weekends arg1 OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like RP ^ ^ false_start
well UH ^ ^ filler
if IN if arg0 OK
i PRP i arg0 OK
can MD can arg0 OK
turn VB turn arg0 OK
that DT that arg0 OK
into IN into arg0 OK
two CD two arg0 OK
hundred CD hundred arg0 OK
dollars NNS dollars arg0 OK
that DT that arg0 OK
will MD will ^ OK
pay VB pay predicate OK
my PRP my arg1 OK
bills NNS bills arg1 OK
for IN for argM_tmp OK
some DT some argM_tmp OK
time NN time argM_tmp OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
two CD ^ ^ false_start
hundre- CD ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
look VBP look predicate OK
at IN at arg1 OK
it PRP it arg1 OK
as IN as argM_mnr OK
this DT this argM_mnr OK
way NN way argM_mnr OK

if IN if arg1 OK
i PRP i arg1 OK
can MD can arg1 OK
make VB make arg1 OK
two CD two arg1 OK
hundred CD hundred arg1 OK
dollars NNS dollars arg1 OK
in IN in arg1 OK
eighteen CD eighteen arg1 OK
days NNS days arg1 OK
for IN for arg1 OK
five CD five arg1 OK
minutes NNS minutes arg1 OK
a DT a arg1 OK
day NN day arg1 OK
ten CD ten arg1 OK
minutes NNS minutes arg1 OK
a DT a arg1 OK
day NN day arg1 OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
a DT a arg2 OK
worth JJ worth arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
no- RB ^ ^ repeat
not RB not argM_neg OK
a DT a arg2 OK
bad JJ bad ^ OK
bad JJ _ARG_ arg2 false_start

we PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
just RB just argM_adverb OK
g- VBD ^ ^ repeat
got VBD got predicate OK
married VBN married arg2 OK
last JJ last argM_tmp OK
year NN year argM_tmp OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK

that DT ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
probably RB ^ ^ repeat
probably RB probably arg2 OK
not RB not arg2 OK
the DT the arg2 OK
draw NN draw arg2 OK

r- XX ^ ^ false_start
yeah UH yeah ^ OK

uh UH ^ ^ filler
andre NNP andre arg0 OK
's POS 's arg0 OK
is VBZ is ^ OK
like IN like predicate OK
the DT the arg1 OK
life NN life arg1 OK
blood NN blood arg1 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
and CC ^ ^ false_start
to IN ^ ^ false_start
me PRP ^ ^ false_start
then RB ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
still RB still ^ OK
inhaling VBG inhaling ^ OK
second JJ second ^ OK
hand NN hand ^ OK
smoke NN smoke ^ OK

so UH ^ ^ false_start
and CC ^ ^ false_start
and CC ^ ^ false_start
and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
even RB even ^ OK
did VBD did predicate OK
that DT that arg1 OK

so UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
um UH ^ ^ filler
i- PRP ^ ^ repeat
it PRP it ^ OK
was VBD was ^ OK

i PRP i arg0 OK
said VBD said predicate OK
giving VBG giving arg1 OK
up RP up arg1 OK
cigarettes NNS cigarettes arg1 OK
were VBD ^ ^ repeat
no- RB ^ ^ repeat
was VBD was arg1 OK
not RB not argM_neg OK
easy JJ easy arg2 OK
for IN for arg1 false_start
me PRP me arg1 false_start

and CC ^ ^ false_start
i PRP i arg1 OK
was VBD was predicate OK
like UH ^ ^ filler
really RB ^ ^ false_start
a DT a arg2 OK
compulsive JJ compulsive arg2 OK
smoker NN smoker arg2 OK

i PRP i arg0 false_start
think VBP think predicate false_start
because IN ^ ^ false_start
you PRP you arg0 OK
have VBP have arg1 OK
to TO to arg1 OK
find VB find arg1 OK
something NN something arg0 OK
to TO to arg1 OK
take VB take arg1 OK
the DT its arg1 false_start
place NN place arg1 OK
because IN because ^ OK
nicotine NNP nicotine arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
addic- JJ ^ ^ repeat
addictive JJ addictive arg2 OK

it PRP ^ ^ repeat
very RB ^ ^ false_start
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
an DT an arg2 OK
addic- JJ ^ ^ repeat
addiction NN addiction arg2 OK

so UH ^ ^ false_start
i PRP i arg0 OK
found VBD found predicate OK
that IN that arg1 OK
i PRP i arg0 OK
ate VBD ate arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
snacks NNS snacks arg1 OK

then RB ^ ^ false_start
i PRP i arg0 OK
had VBD had ^ OK
to TO to ^ OK
go VB go predicate OK
to IN to ^ OK
weight NNP weight arg4 OK
watchers NNP watchers arg4 OK
ch- XX ^ ^ repeat
eh UH ^ ^ filler
to TO to ^ OK
try VB try predicate OK
to TO to arg1 OK
lose VB lose arg1 OK
the DT ^ ^ false_start
weight NN weight arg1 OK

it PRP ^ arg1 repeat
it PRP ^ ^ repeat
it NN it arg0 false_start
takes VBZ ^ ^ repeat
took VBD ^ ^ repeat
took ADVP-1 took predicate false_start
for IN ^ ^ repeat
me PRP ^ ^ repeat
me PRP me arg2 false_start
like UH ^ ^ filler
about RB ^ ^ repeat
at VBD at arg1 false_start
least PRP least arg1 false_start
about IN ^ ^ false_start
two JJS two arg1 false_start
or RB or arg1 false_start
three CD three arg1 false_start
years CC years ^ false_start
when WRB ^ ^ false_start
i PRP until ^ false_start
i PRP i arg0 OK
just RB ^ ^ false_start
felt VBD felt predicate OK
like IN like arg1 OK
i PRP i ^ OK
really RB ^ ^ false_start
i CC ^ arg0 repeat
did VBD did ^ OK
n't RB n't ^ OK
miss VB miss arg1 OK
them PRP them arg1 OK
and ADVP-1 and arg1 OK
did PRP did arg1 OK
n't VBD n't argM_neg OK
really RB ^ ^ false_start
need RB need arg1 OK
a VB a arg1 OK
cigarette DT cigarette arg1 OK

it PRP ^ ^ false_start
it PRP ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
what WP what ^ OK
i PRP i ^ OK
said VBD said ^ OK

but CC ^ ^ false_start
it PRP it arg0 OK
took VBD took predicate OK
me PRP me arg2 OK
at IN at arg1 OK
least JJS least arg1 OK
three CD three arg1 OK
years NNS years arg1 OK
before IN before ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ false_start
felt VBD felt predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
nicotine NN ^ arg1 false_start
free JJ nicotine-free ^ false_start

so UH ^ ^ false_start
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
even RB ^ ^ false_start
n't RB n't argM_neg OK
drink VB drink predicate OK
any DT ^ ^ false_start
alcohol NN alcohol arg1 OK
anymore RB anymore argM_tmp OK

so UH so ^ false_start
anyway UH anyway ^ OK

so UH ^ ^ false_start
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
drink VB drink ^ OK
at IN and ^ false_start
night NN i- ^ false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ false_start
think VB think predicate OK
that IN that arg1 OK
it PRP it arg1 OK
's S-1 's arg1 OK
a BES ^ ^ false_start
good DT good arg2 OK
thing JJ ^ ^ false_start
to NN ^ ^ repeat
to TO ^ ^ repeat
to TO to arg1 OK
have TO have arg1 OK
a VB a arg1 OK
smoke DT ^ arg1 false_start
free NN smoke-free ^ false_start
environment JJ environment arg1 OK

but CC ^ ^ false_start
a DT a arg0 OK
lot NN lot arg0 OK
they PRP ^ ^ false_start
of IN of arg0 OK
people NNS people arg0 OK
they PRP ^ ^ repeat
are VBP ^ ^ repeat
feel VBP feel predicate OK
like IN ^ ^ false_start
it PRP it arg0 OK
infringes VBZ infringes arg1 OK
on IN on arg_particl OK
their PRP their arg1 OK
equal JJ equal arg1 OK
rights NNS rights arg1 OK

i PRP ^ ^ repeat
we PRP ^ ^ false_start
're VBP ^ ^ false_start
we PRP ^ ^ false_start
're VBP ^ ^ false_start
in IN ^ ^ false_start
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
in IN ^ ^ false_start
close JJ close arg2 OK
proximity NN ^ ^ false_start
of IN to arg2 false_start
delaware NNP delaware arg2 OK

and CC ^ ^ false_start
they PRP they ^ OK
're VBP 're ^ OK

so UH ^ ^ false_start
that DT that arg0 OK
just RB ^ ^ false_start
showed VBD showed predicate OK
how WRB how arg1 OK
strong RB strongly arg1 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
meant VBD meant arg1 OK
what WP ^ ^ false_start
they PRP ^ ^ false_start
said VBD ^ ^ false_start
that NP-1 ^ ^ false_start
you IN ^ ^ filler
know PRP ^ ^ filler
we VBP ^ ^ false_start
're PRP ^ ^ false_start
going VBP ^ ^ false_start
to VBG to arg1 OK
enforce TO enforce arg1 OK
this VB this arg1 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
she PRP she arg0 OK
was VBD ^ ^ false_start
saying VBG said predicate false_start
something NN ^ ^ false_start
about IN ^ ^ false_start
they PRP they arg0 OK
were VBD were arg1 OK
setting VBG setting arg1 OK
up RP up arg_particl OK
different JJ different arg0 OK
programs NNS programs arg0 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
uh UH ^ ^ filler
that DT that arg2 OK
would MD would arg2 OK
help VB help arg2 OK
people NNS people arg0 OK
to TO ^ ^ false_start
um UH ^ ^ filler
kick VB kick arg1 OK
the DT the arg1 OK
habit NN habit arg1 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
will MD will ^ OK
probably RB ^ ^ repeat
probably RB probably ^ false_start
have VB have ^ OK
to TO to ^ OK
do VB do predicate OK
my PRP my arg1 OK
homework NN homework arg1 OK
when WRB when argM_tmp OK
it PRP it ^ OK
comes VBZ comes predicate OK
to IN to arg_particl OK
that DT that arg1 OK

the DT the arg1 OK
ones NNS ones arg1 OK
that WDT that arg1 OK
should MD should arg1 OK
be VB be arg1 OK
ah UH ^ ^ filler
there RB there arg1 OK
are VBP are predicate OK
not RB not argM_neg OK
there RB there arg2 OK
to TO to arg2 OK
hear VB hear arg2 OK
it PRP it arg1 OK

the DT the ^ OK
they PRP ^ ^ false_start
the DT ^ ^ repeat
um UH ^ ^ filler
the DT ^ ^ repeat
classics NNS classics ^ OK
they PRP ^ arg1 false_start
o- XX ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
're VBP are predicate false_start
just RB ^ ^ false_start
the DT the arg2 OK
best JJS best arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
all PDT ^ ^ false_start
those DT ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
wh- WP ^ ^ repeat
what WP what arg1 OK
's BES 's predicate OK
m- JJR ^ ^ repeat
much RB ^ ^ false_start
more JJR more arg2 OK
fun NN fun arg2 OK
than IN ^ ^ repeat
t- XX ^ ^ repeat
than IN than arg2 OK
all DT ^ ^ false_start
um UH ^ ^ filler
all DT ^ ^ filler
what WP ^ ^ false_start
was VBD ^ ^ false_start
it PRP ^ ^ false_start
all NP-PRD-2 all arg2 OK
about DT about arg2 OK
eve IN eve arg2 OK
with NNP with arg2 OK
bette IN bette arg2 OK
davis NNP davis arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
these DT ^ ^ repeat
m- XX ^ ^ false_start
in IN in ^ OK
these DT these ^ OK
films NNS films ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all ^ OK
the DT ^ ^ repeat
the DT the ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
joan NNP joan ^ OK
crawfords NNPS crawfords ^ OK
and CC and ^ OK
lana NNP lana ^ OK
turner NNP turner ^ OK
and CC ^ ^ false_start
oh UH ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
just RB ^ ^ repeat
just RB ^ ^ false_start
wonderful JJ wonderful arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ repeat
's BES ^ ^ repeat
th- DT ^ ^ repeat
that DT that ^ OK
's BES 's predicate OK
those DT those arg1 OK
adventure NN adventure arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
special JJ special arg1 OK
sci- XX ^ ^ false_start
effects NNS effects arg1 OK
that WRB that ^ OK
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
have VB have ^ OK
to TO to ^ OK
have VB have predicate OK
actors NNS actors arg1 OK
like UH ^ ^ filler
because IN because ^ OK
everything NN everything arg1 OK
else RB else arg1 OK
is VBZ is ^ OK
done VBN done predicate OK
for IN for arg2 OK
them PRP them arg2 OK

on SBAR-1 on argM_tmp false_start
saturday IN saturday argM_tmp false_start
um UH ^ ^ filler
i PRP i arg0 OK
did VBD did ^ OK
see VB see predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
s- NN ^ ^ repeat
screening NN screening arg1 OK
of IN of arg1 OK
a DT a arg1 OK
film NN film arg1 OK
that NNP that arg1 OK
i WDT i arg0 OK
think PRP think arg1 OK
is VBP is arg1 OK
really VBZ really ^ OK
really VBZ _ARG_ arg2 false_start

um UH ^ ^ filler
have VBP have ^ OK
you PRP you arg0 OK
heard VBN heard predicate OK
of IN of arg1 OK
the DT the arg1 OK
film NN film arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
h- NNP ^ ^ repeat
human NNP human arg1 OK
stain NNP stain arg1 OK

oh UH oh ^ OK
my UH my ^ OK
god UH god ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
uh UH ^ ^ filler
anthony NNP anthony arg1 OK
hopkins NNP hopkins arg1 OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
one CD one arg1 OK
of IN of arg1 OK
those DT those arg1 OK
films NNS films arg1 OK
that WDT that arg1 OK

uh UH ^ ^ filler
it PRP ^ ^ repeat
um UH ^ ^ filler
it PRP it ^ OK
has VBZ ^ ^ repeat
has VBZ has predicate OK
a DT ^ ^ repeat
a DT ^ ^ repeat
oh UH ^ ^ filler
a DT a arg1 OK
s- NN ^ ^ repeat
s- NN ^ ^ repeat
s- NN ^ ^ repeat
story NN story arg1 OK
to IN to arg1 OK
it PRP it arg1 OK

um UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ false_start
the DT ^ ^ repeat
the DT the ^ OK
dialogue NN dialogue ^ OK
the DT the ^ OK
writing NN writing ^ OK
everything NN everything arg1 OK
is VBZ is predicate OK
just RB ^ ^ false_start
a DT a arg2 OK
cut NN cut arg2 OK
above IN above arg2 OK
what WP what arg2 OK
you PRP you arg0 OK
usually RB usually arg2 OK
see VBP see arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
i PRP ^ ^ false_start
st- XX ^ ^ false_start
i PRP ^ ^ false_start
rement- VBP ^ ^ false_start
i PRP i arg0 OK
recommend VBP recommend predicate OK
seeing VBG seeing arg1 OK
it PRP it arg1 OK
because IN because ^ OK
it PRP it arg0 OK
will MD will ^ OK
at RB at ^ OK
least RBS least ^ OK
make VB make predicate OK
you PRP you arg0 OK
think VB think arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
n- RB ^ ^ repeat
not RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
like VBP like predicate OK
to TO to arg1 OK
go VB go arg1 OK
to IN to arg4 OK
the DT the arg4 OK
movies NNS movies arg4 OK
and CC and ^ OK
be VB be ^ OK
entertained VBN entertained predicate OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
just RB ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ false_start
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
that IN that arg1 OK
the DT the arg1 OK
caliber NN caliber arg1 OK
of IN of arg1 OK
movie NN movie arg1 OK
making VBG making arg1 OK
these DT these arg1 OK
days NNS days arg1 OK
is VBZ ^ ^ repeat
is VBZ is arg1 OK
up IN up arg2 OK
to IN to arg2 OK
par NN par arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
this DT this arg1 OK
film NN film arg1 OK
came VBD came predicate OK
along RB along arg2 OK

it PRP it ^ OK
's BES 's predicate OK
just RB ^ ^ false_start
like IN like arg1 OK
a DT a arg1 OK
a DT _ARG_ arg1 false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
have VBP ^ ^ false_start
a- XX ^ ^ false_start
i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP i arg0 OK
enjoy VBP enjoy predicate OK
really RB really arg1 OK
good JJ good arg1 OK
movie NN movie arg1 OK
making NN making arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
uh UH ^ ^ filler
actually UH ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
waiting VBG waiting predicate OK
for IN for arg1 OK
it PRP it arg1 OK
to TO to arg1 OK
come VB come arg1 OK
on IN on argM_loc OK
cable NN cable argM_loc OK

i PRP i arg0 OK
've VBP 've ^ OK
heard VBN heard predicate OK
wonderful JJ wonderful arg1 OK
wonderful JJ wonderful arg1 OK
things NNS things arg1 OK
about IN about arg1 OK
it PRP it arg1 OK

see UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i- PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
do VBP ^ ^ repeat
just RB ^ ^ false_start
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
really RB ^ ^ repeat
have VB have predicate OK
have VB _ARG_ arg1 OK

a- XX ^ ^ false_start
my PRP my arg1 OK
taste NN taste arg1 OK
does VBZ does ^ OK
n't RB n't ^ OK
really RB really ^ OK
go VB go predicate OK
in IN in arg2 OK
that DT those arg2 false_start
kind NN kind arg2 OK
of IN of arg2 OK
f- NN ^ ^ repeat
film NN ^ ^ repeat
films NNS films arg2 OK

i PRP i ^ OK

i- PRP ^ ^ repeat
i PRP ^ ^ false_start
like UH ^ ^ filler
i PRP i arg0 OK
am VBP am ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
go VB go predicate OK
pay VB pay arg4 OK
money NN money arg1 OK
to TO to arg2 OK
see VB see arg2 OK
drew NNP drew arg1 OK
barrymore NNP barrymore arg1 OK
and CC and arg1 OK
and CC _ARG_ arg1 false_start

i PRP ^ ^ false_start
just RB ^ ^ false_start
they PRP ^ ^ repeat
they PRP ^ ^ false_start
just RB ^ ^ false_start
don- VBP ^ ^ false_start
i PRP i arg0 OK
saw VBD saw predicate OK
the DT the arg1 OK
first JJ first arg1 OK
one NN one arg1 OK

it PRP it arg1 OK
came VBD came predicate OK
on IN on arg2 OK
cable NN cable arg2 OK

if IN if ^ OK
i PRP i arg0 OK
see VBP see predicate OK
them PRP them ^ OK
on IN on arg1 OK
cable NN cable arg1 OK
then RB then ^ OK
i PRP i arg0 OK
'll MD 'll ^ OK
see VB see predicate OK
them PRP them arg1 OK

i PRP i arg0 OK
saw VBD saw predicate OK
another DT ^ ^ repeat
s- XX ^ ^ false_start
another DT another arg1 OK
film NN film arg1 OK

it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it ^ OK
was VBD ^ ^ repeat
's BES 's predicate OK
a DT a arg1 OK
little JJ little arg1 OK
independent NN independent ^ OK
independent NN _ARG_ arg1 false_start

it UNK it ^ OK
's UNK 's ^ OK
um UNK ^ ^ filler

i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
real RB real ^ OK
wild JJ wild ^ OK
about IN about ^ OK
drug NN drug ^ OK
testing NN testing ^ OK

i PRP i ^ OK
can MD can ^ OK
see VB see ^ OK
like UH ^ ^ filler
in IN in ^ OK
certain JJ certain ^ OK
industries NNS industries ^ OK
where WRB where ^ OK
it PRP it ^ OK
is VBZ is ^ OK
kind RB kind ^ OK
of RB of ^ OK
a DT a ^ OK
mandatory JJ mandatory ^ OK

i PRP i ^ OK
feel VBP feel ^ OK
more RBR more ^ OK
c- JJ ^ ^ repeat
comfortable JJ comfortable ^ OK
flying VBG flying ^ OK
on IN on ^ OK
a DT a ^ OK
plane NN plane ^ OK
knowing VBG knowing ^ OK
they PRP they ^ OK
do VBP do ^ OK
that DT that ^ OK

eh UH ^ ^ filler
and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
like UH ^ ^ filler
in IN in ^ OK
transportation NN transportatio n  ^ OK
pretty RB ^ ^ repeat
much RB ^ ^ repeat
basically RB basically ^ OK
i PRP i ^ OK
feel VBP feel ^ OK
more RBR more ^ OK
comfortable JJ comfortable ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
'll MD 'll ^ OK
still RB still ^ OK
hit VB hit ^ OK
it PRP it ^ OK
up RP up ^ OK
anyway RB anyway ^ OK

i PRP i ^ OK
know VBP know ^ OK
uh UH ^ ^ filler
with IN with ^ OK
with IN ^ ^ repeat
my PRP my ^ OK
work NN work ^ OK
like UH ^ ^ filler
uh UH ^ ^ filler
they PRP they ^ OK
test VBP test ^ OK
randomly RB randomly ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
know VBP know ^ OK
that IN that ^ OK
they PRP they ^ OK
can MD can ^ OK

i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
that IN that ^ OK
before RB before ^ OK

they PRP ^ ^ repeat
like UH ^ ^ filler
they PRP they ^ OK
could MD ^ ^ repeat
can MD can ^ OK
actually RB actually ^ OK
uh UH ^ ^ filler
test VB test ^ OK
for IN for ^ OK
secondhand JJ secondhand ^ OK
exposure NN exposure ^ OK

i PRP i ^ OK
was VBD was ^ OK
like RP like ^ OK
wow UH wow ^ OK

so UH ^ ^ false_start
you PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
if IN if ^ OK
it PRP it ^ OK
does VBZ does ^ OK
show VB show ^ OK
up RB up ^ OK
in IN in ^ OK
our PRP our ^ OK
system NN system ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
that DT that ^ OK
certain JJ certain ^ OK
amount NN amount ^ OK
then RB then ^ OK
it PRP ^ ^ false_start
wo MD ^ ^ false_start
n't RB ^ ^ false_start
it PRP ^ ^ false_start
shows VBZ ^ ^ false_start
up RB ^ ^ false_start
that IN ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler
secondhand JJ secondhand ^ OK
smoke NN smoke ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
're VBP 're ^ OK
like RP like ^ OK
yeah UH yeah ^ OK

i PRP ^ ^ false_start
was VBD ^ ^ false_start
like RP ^ ^ false_start
wow UH wow ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
that DT that ^ OK
because IN because ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
they PRP they ^ OK
could MD could ^ OK
test VB test ^ OK
for IN for ^ OK
that DT that ^ OK
much JJ much ^ OK
like UH ^ ^ filler
for IN for ^ OK
amount NN a ^ false_start
uh UH ^ ^ filler
second JJ second ^ OK
hand NN hand ^ OK
amount NN amount ^ OK

what WP ^ ^ repeat
uh UH ^ ^ filler
what WP what ^ OK
is BES ^ ^ repeat
is VBZ is ^ OK
the DT ^ ^ repeat
the DT the ^ OK
phone NN phone ^ OK
number NN number ^ OK
that WDT that ^ OK
you PRP you ^ OK
dial VBP dial ^ OK
dial VB ^ ^ repeat
to TO for ^ false_start
the DT the ^ OK
l. NNP l. ^ OK
d. NNP d. ^ OK
c. NNP c. ^ OK
thing NN thing ^ OK
because IN because ^ OK
i PRP i ^ OK
lost VBD lost ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
uh UH ^ ^ filler
paper NN paper ^ OK

five CD five ^ OK
oh CD oh ^ OK
seven CD seven ^ OK

for IN for ^ OK
the DT the ^ OK
most JJS most ^ OK
part NN part ^ OK
though RB though ^ OK
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
pretty RB ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
pretty RB pretty ^ OK
much RB much ^ OK
like RP ^ ^ filler
in IN in ^ OK
some DT some ^ OK
industries NNS industries ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
see VB see ^ OK
like UH ^ ^ filler
uh UH ^ ^ filler
wha- WP ^ ^ false_start
like UH ^ ^ filler
why WRB why ^ OK
they PRP they ^ OK
have VBP have ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
had VBD ^ ^ false_start
a DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
was SBAR-2 was ^ OK
stated VBD stated ^ OK
in VBN in ^ OK
our IN our ^ OK
policy PRP policy ^ OK
that NN that ^ OK
they IN they ^ OK
could PRP could ^ OK
test MD test ^ OK
you VB you ^ OK
randomly PRP randomly ^ OK
for RB for ^ OK
drugs IN drugs ^ OK

and CC ^ ^ false_start
but CC but ^ OK
it PRP it ^ OK
was VBD was ^ OK
sort RB sort ^ OK
of RB of ^ OK
like UH ^ ^ filler
uh UH ^ ^ filler
like UH ^ ^ filler
a DT a ^ OK
thing NN thing ^ OK
that WDT that ^ OK
they PRP they ^ OK
held VBD held ^ OK
back RB back ^ OK
in IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in ^ OK
case NN ^ ^ repeat
case NN case ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
did VBD ^ ^ repeat
were VBD were ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
satisfied VBN satisfied ^ OK
with IN with ^ OK
your PRP your ^ OK
performance NN performance ^ OK

was RB it ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like NP-1 ^ ^ filler
kind UH ^ ^ filler
of RB ^ ^ filler
t RB ^ ^ filler
was RB was ^ OK
irritating VBD irritating ^ OK
more JJ more ^ OK
than RBR than ^ OK
anything IN anything ^ OK
but NN ^ ^ false_start
uh CC ^ ^ filler
because UH because ^ OK
i- IN ^ ^ repeat
i PRP i ^ OK
'd PRP 'd ^ OK
worked VBD worked ^ OK
at VBN at ^ OK
staples IN staples ^ OK
for NNP for ^ OK
like IN like ^ OK
three UH three ^ OK
years CD years ^ OK
and NNS and ^ OK
never CC never ^ OK
saw RB saw ^ OK
anyone VBD anyone ^ OK
tested NN tested ^ OK
for VBN for ^ OK
drugs IN drugs ^ OK

and CC ^ ^ false_start
there EX there ^ OK
were VBD were ^ OK
numerous JJ numerous ^ OK
occasions NNS occasions ^ OK
where WRB where ^ OK
there EX ^ ^ false_start
were VBD ^ ^ false_start
if IN if ^ OK
they PRP they ^ OK
would MD would ^ OK
have VB have ^ OK
had VBN had ^ OK
testing NN testing ^ OK
they PRP they ^ OK
probably RB probably ^ OK
would MD would ^ OK
have VB have ^ OK
lost VBN lost ^ OK
a DT a ^ OK
few JJ few ^ OK
employees NNS employees ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
just RB just ^ OK
like RP like ^ OK
man UH man ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
this DT ^ ^ repeat
this DT this ^ OK
is VBZ is ^ OK
kind RB kind ^ OK
of RB of ^ OK
amazing JJ amazing ^ OK
to IN to ^ OK
me PRP me ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
intend VB intend ^ OK
to TO to ^ OK
use VB use ^ OK
it PRP it ^ OK
unless IN unless ^ OK
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
get VB get ^ OK
rid VBN rid ^ OK
of IN of ^ OK
a DT a ^ OK
specific JJ specific ^ OK
person NN person ^ OK

i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
need VBP need ^ OK
to TO to ^ OK
come VBN come ^ OK
up RB up ^ OK
with IN with ^ OK
a DT a ^ OK
more RBR more ^ OK
truly RB truly ^ OK
random JJ random ^ OK
system NN system ^ OK
than IN than ^ OK
what WP what ^ OK
they PRP they ^ OK
've VBP 've ^ OK
got VBN got ^ OK
now RB now ^ OK

it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
a DT a ^ OK
little JJ little ^ OK
weird NN weird ^ OK
because IN because ^ OK
there EX there ^ OK
's BES 's ^ OK
so RB so ^ OK
many JJ many ^ OK
industries NNS industries ^ OK
where WRB where ^ OK
if IN if ^ OK
you PRP you ^ OK
've VBP 've ^ OK
got VBN got ^ OK
somebody NN somebody ^ OK
that DT ^ ^ repeat
that WDT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
abusing VBG abusing ^ OK
a DT a ^ OK
substance NN substance ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
'll MD 'll ^ OK
affect VB affect ^ OK
you PRP you ^ OK
your PRP your ^ OK
personal JJ personal ^ OK
safety NN safety ^ OK
directly RB directly ^ OK

m- XX ^ ^ false_start
variables NNS variables ^ OK
that WDT that ^ OK
you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
need VB need ^ OK
to TO to ^ OK
deal VB deal ^ OK
with IN with ^ OK

^ ^ i ^ OK
do UNK do ^ OK
n't UNK n't ^ OK
know UNK know ^ OK
my UNK my ^ OK

i- PRP a ^ false_start
so UH ^ ^ false_start
job NN job ^ OK
opportunity NN opportunity ^ OK
came VBD came ^ OK
up RB up ^ OK
and CC and ^ OK
i PRP i ^ OK
moved VBD moved ^ OK
down IN down ^ OK
here RB here ^ OK

i PRP i arg0 OK
uh UH ^ ^ filler
eh UH ^ ^ filler
see VB see predicate OK
the DT ^ ^ repeat
the DT the arg0 OK
dissolution NN dissolution arg0 OK
of IN of arg0 OK
marriages NNS marriages arg0 OK
causing VBG causing arg1 OK
children NNS children arg0 OK
to TO to arg1 OK
have VB have arg1 OK
problems NNS problems arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
see VBP see predicate OK
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
single JJ single arg1 OK
parent NN parent arg1 OK
families NNS families arg1 OK

and CC ^ ^ false_start
all DT all arg0 OK
of IN of arg0 OK
this DT this arg0 OK
has VBZ has predicate OK
such PDT such arg1 OK
a DT ^ ^ repeat
a DT a arg1 OK
negative JJ negative arg1 OK
effect NN effect arg1 OK
on IN on arg1 OK
children NNS children arg1 OK
that IN that arg1 OK
i PRP i arg0 OK
've VBP 've arg1 OK
also RB also argM_discou OK
taken VBN taken arg1 OK
a DT a arg1 OK
job NN job arg1 OK
after IN after argM_tmp OK
school NN school argM_tmp OK
these DT these argM_tmp OK
days NNS days argM_tmp OK
as IN as arg1 OK
a DT a arg1 OK
coordinator NN coordinator arg1 OK
for IN for arg1 OK
a DT a arg1 OK
group NN group arg1 OK
of IN of arg1 OK
children NNS children arg1 OK
who WP who arg1 OK
are VBP are arg1 OK
at IN at arg2 OK
risk NN risk arg2 OK
socially RB socially arg2 OK
and CC and arg2 OK
academically RB academically arg2 OK

and CC ^ ^ false_start
what WP what arg1 OK
we PRP we arg0 OK
're VBP 're arg1 OK
trying VBG trying arg1 OK
to TO to arg1 OK
do VB do arg1 OK
with IN ^ ^ false_start
with IN with arg1 OK
them PRP ^ ^ false_start
them PRP them arg1 OK
is VBZ is predicate OK
instill VB instill arg2 OK
some DT some arg2 OK
moral JJ moral arg2 OK
values NNS values arg2 OK
also RB ^ ^ false_start

but CC ^ ^ false_start
unfortunately RB unfortunately argM_adverb OK
if IN if argM_adverb OK
these DT these arg0 OK
children NNS children arg0 OK
are VBP are arg0 OK
n't RB n't arg0 OK
raised VBN raised arg0 OK
in IN in arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
f- NN ^ ^ repeat
family NN family arg0 OK
homes NNS homes arg0 OK
to TO to arg3 OK
begin VB begin arg3 OK
with RB with arg2 OK
it PRP it arg1 OK
's BES 's predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
tough JJ tough argM_mnr OK
to TO to arg2 OK
do VB do arg2 OK
when NP when argM_tmp OK
you WRB you arg0 OK
just PRP just argM_adverb OK
have RB have argM_tmp OK
them VBP them arg1 OK
during PRP during argM_tmp OK
the IN the argM_tmp OK
day DT day argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg0 OK
parents NNS parents arg0 OK
need VBP need predicate OK
help NN help arg1 OK
probably RB probably argM_adverb OK
as RB as argM_extent OK
much RB much argM_extent OK
or CC or argM_extent OK
more RBR more argM_extent OK
as IN as argM_extent OK
the DT the arg0 OK
kids NNS kids arg0 OK
do VBP do ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
were VBD ^ ^ false_start
i PRP i arg0 OK
went VBD went predicate OK
back RB back arg4 OK
to IN to arg4 OK
work NN work arg4 OK
when WRB when argM_tmp OK
my PRP my arg1 OK
daughter NN daughter arg1 OK
was VBD was argM_tmp OK
um UH ^ ^ filler
three CD three arg2 OK
and CC and arg2 OK
a DT a arg2 OK
half NN half arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
take VB take predicate OK
on RP on arg_particl OK
any DT any arg1 OK
extra JJ extra arg1 OK
responsibilitie s NNS responsibili ties arg1 OK
in IN ^ ^ false_start
the DT ^ ^ false_start
least JJS ^ ^ false_start

we PRP ^ ^ false_start
were VBD ^ ^ false_start
home RB ^ ^ false_start
my PRP my arg1 OK
husband NN husband arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
principal NN principal arg2 OK

and CC ^ ^ false_start
we PRP we arg1 OK
were VBD were predicate OK
both RB both arg2 OK
off RB off arg2 OK
during IN during arg2 OK
the DT the arg2 OK
summer NN summer arg2 OK
as IN as argM_extent OK
we PRP we arg0 OK
still RB still argM_adverb OK
are VBP are argM_extent OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's SBAR-2 's predicate OK
very BES very arg2 OK
important RB important arg2 OK
for JJ for arg2 OK
kids IN kids arg0 OK
to NNS to arg2 OK
know TO know arg2 OK
that VB that arg1 OK
they IN they arg0 OK
have PRP have arg1 OK
roots VBP roots arg1 OK
that NNS that arg1 OK
go WDT go arg1 OK
back VBP back arg_particl OK
a RB a argM_extent OK
long DT long argM_extent OK
way JJ way argM_extent OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
needs VBZ needs predicate OK
to TO to arg1 OK
be VB be arg1 OK
extended JJ extended arg2 OK
families NNS families arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
aunts NNS aunts arg0 OK
and CC and arg0 OK
uncles NNS uncles arg0 OK
and CC and arg0 OK
brothers NNS brothers arg0 OK
and CC and arg0 OK
sisters NNS sisters arg0 OK
all DT all arg0 OK
need VBP need predicate OK
to TO to arg1 OK
keep VB keep arg1 OK
in IN in arg1 OK
touch NN touch arg1 OK

um UH ^ ^ filler
uh UH ^ ^ filler
there EX there ^ OK
's HVS 's ^ OK
recently RB recently ^ OK
been VBN been ^ OK
some DT some ^ OK
news NN news ^ OK
about IN about ^ OK
portions NNS portions ^ OK
of IN ^ ^ repeat
of IN of ^ OK
food NN food ^ OK
that WDT that ^ OK
you PRP you ^ OK
eat VBP eat ^ OK

eh UH ^ ^ filler
that IN ^ ^ false_start
people NNS people ^ OK
are VBP are ^ OK
eating VBG eating ^ OK
too RB too ^ OK
much JJ much ^ OK
at IN at ^ OK
one CD one ^ OK
time NN time ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
no- RB ^ ^ repeat
not RB not ^ OK
a DT a ^ OK
very RB very ^ OK
heavy JJ heavy ^ OK
person NN person ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
claim VBP claim ^ OK
that IN that ^ OK
overweight JJ overweight ^ OK
people NNS people ^ OK
that WDT that ^ OK
eats VBZ eat ^ false_start
a DT a ^ OK
lot NN lot ^ OK
has VBZ have ^ false_start
a DT a ^ OK
shorter JJR shorter ^ OK
lifespan NN lifespan ^ OK

well UH ^ ^ false_start
er UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
does VBZ does ^ OK
seem VB seem ^ OK
like IN like ^ OK
that IN that ^ OK
um UH ^ ^ filler
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
children NNS children ^ OK
children NNS go ^ false_start
and CC ^ ^ repeat
um UH ^ ^ filler
and CC and ^ OK
these DT these ^ OK
they PRP ^ ^ false_start
uh UH ^ ^ filler
like UH ^ ^ filler
mcdonald NNP mcdonald ^ OK
's POS 's ^ OK
and CC and ^ OK
places NNS places ^ OK
uh UH ^ ^ filler
serve VBP serve ^ OK
such JJ such ^ OK
big JJ big ^ OK
hamburgers NNS hamburgers ^ OK
for IN for ^ OK
a DT a ^ OK
small JJ small ^ OK
child NN child ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
they PRP they ^ OK
say VBP say ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
children NNS children ^ OK
are VBP are ^ OK
overweight JJ overweight ^ OK

which WDT which ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
can MD ^ ^ repeat
can MD can ^ OK
see VB see ^ OK
from IN from ^ OK
my PRP my ^ OK
childhood NN childhood ^ OK

when WRB when ^ OK
we PRP we ^ OK
was VBD were ^ false_start
growing VBG growing ^ OK
up RP up ^ OK
seem RB it ^ false_start
the ADVP-TMP- 1 ^ ^ false_start
um DT ^ ^ filler
did UH did ^ OK
n't VBD n't ^ OK
seem RB seem ^ OK
like VB like ^ OK
there IN there ^ OK
children JJ were ^ false_start
children JJ as ^ false_start
was RB ^ ^ false_start
many VBD ^ ^ false_start
that JJ ^ ^ false_start
many RB many ^ OK
overweight JJ overweight ^ OK
children JJ children ^ OK
as NNS as ^ OK
there IN there ^ OK
are EX are ^ OK
today VBP today ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
think VB think ^ OK
they PRP they ^ OK
exercise VBP exercise ^ OK
like IN like ^ OK
we PRP we ^ OK
did VBD did ^ OK
when WRB when ^ OK
we PRP we ^ OK
was VBD were ^ false_start
young JJ young ^ OK
because ADVP-TMP- 1 ^ ^ false_start
of IN ^ ^ false_start
um IN ^ ^ false_start

and CC ^ ^ false_start
all PDT all ^ OK
these DT these ^ OK
nintendo NNP nintendo ^ OK
games NNS games ^ OK
uh UH ^ ^ filler
instead RB instead ^ OK
of IN of ^ OK
getting VBG getting ^ OK
out RB out ^ OK
and CC and ^ OK
playing VBG playing ^ OK
like IN ^ ^ repeat
like IN like ^ OK
we PRP we ^ OK
used VBD used ^ OK
to TO to ^ OK
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
a DT a ^ OK
kid NN kid ^ OK

i PRP ^ ^ repeat
well UH ^ ^ false_start
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
fifty-nine CD fifty-nine ^ OK
now RB now ^ OK

so RB ^ ^ false_start
we PRP we ^ OK
had VBD had ^ OK
to TO to ^ OK
get VB get ^ OK
out RB out ^ OK
and CC and ^ OK
play VB play ^ OK
instead IN instead ^ OK
of IN of ^ OK
set VB sitting ^ false_start
in IN in ^ OK
the DT the ^ OK
house NN house ^ OK
and CC and ^ OK
play VB playing ^ false_start
those DT those ^ OK
games NNS games ^ OK

eh UH eh ^ OK
yeah UH yeah ^ OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
can MD ^ ^ repeat
ca- XX can ^ false_start
go VB go ^ OK
by IN by ^ OK
my PRP my ^ OK
grandchildren NNS grandchildren ^ OK

uh UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
they PRP they ^ OK
like VBP like ^ OK
to TO to ^ OK
set VB set ^ OK
around IN around ^ OK
the DT the ^ OK
t. NN t. ^ OK
v. NN v. ^ OK
or CC or ^ OK
play VB play ^ OK
those DT those ^ OK
games NNS games ^ OK
instead RB ^ ^ repeat
i- IN ^ ^ repeat
instead IN instead ^ OK
of IN ^ ^ repeat
of IN of ^ OK
getting VBG ^ ^ repeat
getting VBG getting ^ OK
out RP ^ ^ repeat
out RB out ^ OK
and CC and ^ OK
playing VBG playing ^ OK

i PRP i ^ OK
think VBP think ^ OK
that DT that ^ OK
is VBZ is ^ OK
one CD one ^ OK
of IN of ^ OK
the DT the ^ OK
things NNS things ^ OK
that WDT that ^ OK
hurt VBP hurt ^ OK
more JJR more ^ OK
people NNS people ^ OK
than IN than ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT ^ ^ repeat
's BES ^ ^ repeat
that DT ^ ^ false_start
's BES is ^ OK
good JJ good ^ OK

well UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
still RB still ^ OK
a DT a ^ OK
smoker NN smoker ^ OK

uh UH ^ ^ filler
uh UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
not RB ^ ^ repeat
not RB not ^ OK
for IN for ^ OK
it PRP it ^ OK
and CC and ^ OK
would MD would ^ OK
like VB like ^ OK
to TO to ^ OK
quit VB quit ^ OK

but CC but ^ OK
uh UH ^ ^ filler
we PRP we ^ OK
was VBD were ^ false_start
raised VBN raised ^ OK
on IN on ^ OK
a DT a ^ OK
farm NN farm ^ OK

and UNK ^ ^ repeat
and UNK ^ ^ false_start
back UNK back ^ OK
when UNK when ^ OK
i UNK i ^ OK
was UNK was ^ OK
rai- UNK ^ ^ false_start
uh UNK uh ^ OK
growing UNK growing ^ OK
up UNK up ^ OK
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
it UNK ^ ^ repeat
it UNK it ^ OK
's UNK ^ ^ repeat
was UNK was ^ OK
on UNK on ^ OK
television UNK television ^ OK
that UNK that ^ OK
uh UNK ^ ^ filler
winston UNK winston ^ OK
tastes UNK tastes ^ OK
good UNK good ^ OK
like UNK like ^ OK
a UNK a ^ OK
cigarette UNK cigarette ^ OK
should UNK should ^ OK

and CC ^ ^ repeat
uh UH ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
uh UH ^ ^ filler
attempted VBN attempted ^ OK
it PRP it ^ OK
two CD two ^ OK
or CC or ^ OK
three CD three ^ OK
times NNS times ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
know VBP ^ ^ repeat
know VBP know ^ OK
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
bad JJ bad ^ OK
habit NN habit ^ OK

well UH ^ ^ false_start
that DT ^ ^ repeat
that DT ^ ^ repeat
th- DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
one CD one ^ OK
of IN of ^ OK
the DT the ^ OK
bigger JJR bigger ^ OK
things NNS things ^ OK
right RB right ^ OK
now RB now ^ OK
with IN with ^ OK
me PRP me ^ OK

i PRP i arg0 OK
kind RB ^ ^ filler
of RB ^ ^ filler
saved VBD saved predicate OK
up RP up ^ OK
for IN for argM_tmp OK
a DT a argM_tmp OK
while NN while argM_tmp OK

but CC ^ ^ false_start
you PRP ^ ^ repeat
you PRP you arg0 OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
beat VB beat predicate OK
that DT that arg1 OK
big JJ big arg1 OK
picture NN picture arg1 OK

i PRP ^ ^ false_start
w- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

there EX there arg1 OK
's BES are predicate false_start
some DT some arg2 OK
movies NNS movies arg2 OK
out IN out arg2 OK
there RB there arg2 OK
that WDT that arg2 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
'd MD ^ ^ repeat
'd MD 'd arg2 OK
easily RB easily arg2 OK
pay VB pay arg2 OK
for IN for arg1 OK
though NP-1 though arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
when WRB when ^ OK
the DT the arg1 OK
new JJ new arg1 OK
matrix NNP matrix arg1 OK
comes NAC-2 comes predicate OK
out VBZ out arg4 OK
i RB i arg0 OK
'd ADVP-TMP- 1 'd ^ OK
easily PRP easily ^ OK
pay MD pay predicate OK
for RB for arg3 OK
that VB that arg3 OK
one IN one arg3 OK
or DT or arg3 OK
the CD the arg3 OK
new CC new arg3 OK
lord DT lord arg3 OK
of JJ of arg3 OK
the NN the arg3 OK
rings IN rings arg3 OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
since IN since ^ OK
the DT the arg0 OK
ticket NN ticket arg0 OK
prices NNS prices arg0 OK
went VBD went predicate OK
up RB up arg4 OK
so RB so ^ OK
much JJ much ^ OK
i PRP i arg0 OK
just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
go VB go ^ OK
see VB see predicate OK
like UH ^ ^ filler
if JJ iffy arg1 false_start
movies NNS movies arg1 OK

there EX ^ ^ repeat
there EX there arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
mov- NN ^ ^ repeat
movie NN movie arg2 OK
rental NN rental arg2 OK
place NN place arg2 OK
down IN down argM_loc OK
the DT the argM_loc OK
block NN block argM_loc OK

and CC ^ ^ false_start
i PRP i arg0 OK
got VBN have predicate false_start
a DT a arg1 OK
d. NN d. arg1 OK
v. NN v. arg1 OK
d. NN d. arg1 OK
player NN player arg1 OK

that DT that arg1 OK
's BES 's predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
nice JJ nice arg2 OK
because IN because ^ OK
when WRB when ^ OK
you PRP you arg0 OK
watch VBP watch predicate OK
them PRP them arg1 OK
at IN at argM_loc OK
home NN home argM_loc OK
you ADVP-1 you arg0 OK
can PRP can ^ OK
like MD ^ ^ filler
lay UH lay predicate OK
in VB in arg1 OK
bed IN bed arg1 OK

it PRP ^ ^ repeat
eh UH ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
called VBN called arg2 OK
the DT the arg2 OK
bridge NNP bridge arg2 OK
cinema NNP cinema arg2 OK
de NNP ^ arg2 false_start
lux NNP deluxe ^ false_start

it PRP ^ arg1 false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
they PRP they arg0 OK
have VBP have predicate OK
leather NN leather arg1 OK
type NN type arg1 false_start
seating NN seating arg1 false_start
like UH like arg1 OK
lay NNP a ^ false_start
lay NNP lay arg1 OK
z. NNP z. arg1 OK
boy NNP boy arg1 OK

and CC ^ ^ repeat
it PRP ^ ^ repeat
and CC ^ ^ false_start
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
stadium NN stadium arg2 OK
seating NN seating arg2 OK

i PRP i arg0 OK
did VBD did predicate OK
it PRP it arg1 OK
once RB once ^ OK
to TO to ^ OK
see VB see predicate OK
what WP what arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
like IN like arg2 OK

i PRP ^ arg1 repeat
i PRP ^ ^ repeat
i PRP i ^ OK
th- VBD ^ ^ repeat
thought VBD ^ ^ repeat
thought VBD thought predicate OK
it PRP ^ ^ repeat
it PRP it ^ OK
was VBD ^ ^ repeat
was VBD was predicate OK
worth JJ worth ^ OK
it PRP it ^ OK

plus CC plus ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
also RB also ^ false_start
ge- VBP ^ ^ repeat
get VBP get ^ OK
to TO to ^ OK
see VB see predicate OK
movies NNS movies arg1 OK
for IN for arg1 OK
free JJ free arg1 OK

i PRP i arg0 OK
live VBP live predicate OK
in IN in arg1 OK
l. NNP l. arg1 OK
a. NNP a. arg1 OK
by IN by ^ OK
the DT the ^ OK
way NN way ^ OK

so RB ^ arg2 filler
like UH ^ ^ filler
you PRP ^ ^ false_start
you PRP you arg0 OK
never RB never ^ OK
h- VBP ^ ^ false_start
have VBP have ^ OK
to TO to ^ OK
worry VB worry predicate OK
about IN about arg1 OK
someone NN someone arg1 OK
's POS 's arg1 OK
head NN head arg1 OK
being VBG being arg1 OK
in IN in arg2 OK
front NN front arg2 OK
of IN of arg2 OK
you PRP you arg2 OK
because IN because ^ OK
you PRP you arg1 OK
're VBP 're predicate OK
up RB up arg2 OK
like UH about arg2 false_start
a DT a arg2 OK
whole JJ whole arg2 OK
like UH ^ ^ filler
half PDT half arg2 OK
a DT of ^ false_start
a DT a arg2 OK
foot NN foot arg2 OK
above IN above arg2 OK
them PRP them arg2 OK

only RB only ^ OK
at IN at ^ OK
t- XX ^ ^ repeat
the DT the ^ OK
beginning NN beginning ^ OK
of IN of ^ OK
the DT the ^ OK
movie NN movie ^ OK

uh-uh UH uh-uh ^ OK

i PRP i arg0 OK
almost RB almost ^ OK
never RB never ^ OK
went VBD went predicate OK
to IN to arg1 OK
the DT the arg1 OK
theater NN theater arg1 OK
until IN until ^ OK
i PRP i arg0 OK
started VBD started predicate OK
dating VBG dating arg1 OK
a DT a arg1 OK
girl NN girl arg1 OK
a DT a argM_tmp OK
while NN while argM_tmp OK
ago RB ago argM_tmp OK

well UH ^ ^ false_start
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ false_start
maybe RB maybe ^ OK
they PRP they ^ OK
know VBP know ^ OK
something NN something ^ OK
about IN about ^ OK
what WP what ^ OK
happened VBD happened ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
iraq NNP iraq ^ OK
is VBZ is ^ OK
a DT ^ ^ repeat
a DT a ^ OK
very RB very ^ OK
w- JJ ^ ^ repeat
weird JJ weird ^ OK
place NN place ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
so RB so ^ OK
sure JJ sure ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
that IN that ^ OK
there EX there ^ OK
is VBZ is ^ OK
n't RB n't ^ OK
something NN something ^ OK
of IN of ^ OK
benefit NN benefit ^ OK
for IN for ^ OK
uh UH ^ ^ filler
disarming VBG disarming ^ OK
them PRP them ^ OK
because IN because ^ OK
the DT the ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
among IN among ^ OK
other JJ other ^ OK
things NNS things ^ OK
they PRP ^ ^ repeat
uh UH ^ ^ filler
they PRP they ^ OK
were VBD ^ ^ repeat
were VBD were ^ OK
uh UH ^ ^ filler
giving VBG giving ^ OK
twenty-five CD twenty-five ^ OK
thousand CD thousand ^ OK
uh UH ^ ^ filler
dollars NNS dollars ^ OK
to IN to ^ OK
uh UH ^ ^ filler
families NNS families ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
of IN ^ ^ repeat
uh UH ^ ^ filler
of IN of ^ OK
people NNS people ^ OK
that WDT that ^ OK
bombed VBN bombed ^ OK
people NNS people ^ OK

so UH ^ ^ false_start
uh UH ^ ^ filler
that DT that ^ OK
alone RB alone ^ OK
uh UH ^ ^ filler
makes VBZ makes ^ OK
the DT the ^ OK
guy NN guy ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
a DT a ^ OK
nasty JJ nasty ^ OK
son NN son ^ OK
of IN of ^ OK
a DT a ^ OK
bitch NN bitch ^ OK
and CC and ^ OK
very RB very ^ OK
untrustworthy JJ untrustworthy ^ OK

and CC ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
could MD could ^ OK
control VB control ^ OK
iraq NNP iraq ^ OK
and CC ^ ^ repeat
uh UH ^ ^ filler
and CC and ^ OK
iraq NNP ^ ^ repeat
iran NNP iran ^ OK
uh UH ^ ^ filler
from IN ^ ^ repeat
uh UH ^ ^ filler
from IN from ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
t- XX ^ ^ false_start
arming VBG arming ^ OK
the DT ^ ^ repeat
uh UH ^ ^ filler
the DT the ^ OK
terrorist JJ terrorist ^ OK
groups NNS groups ^ OK
that WDT that ^ OK
refuse VBP refuse ^ OK
to TO ^ ^ repeat
uh UH ^ ^ filler
to TO to ^ OK
enforce VB enforce ^ OK
a DT a ^ OK
settlement NN settlement ^ OK
you PRP you ^ OK
could MD could ^ OK
uh UH ^ ^ filler
get VB get ^ OK
a DT a ^ OK
peace NN peace ^ OK
settlement NN settlement ^ OK
there RB there ^ OK

because UH ^ ^ false_start
on IN ^ ^ false_start
the DT ^ ^ false_start
palestinian JJ ^ ^ false_start
sides NNS ^ ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
in IN in ^ OK
israel NNP israel ^ OK
and CC and ^ OK
i PRP i ^ OK
know VBP know ^ OK
plenty NN plenty ^ OK
of IN of ^ OK
palestinians NNPS palestinians ^ OK
they PRP ^ ^ repeat
can MD that ^ false_start
can MD can ^ OK
not RB not ^ OK
talk VB talk ^ OK
in IN ^ ^ false_start
in IN ^ ^ false_start
uh UH ^ ^ filler
because IN because ^ OK
they PRP they ^ OK
will MD will ^ OK
be VB be ^ OK
killed VBN killed ^ OK

probably RB ^ ^ false_start
the DT the ^ OK
reasons NNS reasons ^ OK
being VBG being ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
actually RB actually ^ OK
afraid JJ afraid ^ OK
iraq NNP of ^ false_start
that IN ^ ^ false_start
iraq NNP ^ ^ repeat
i- NNP ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
iraq NNP iraq ^ OK
uh UH ^ ^ filler
because IN because ^ OK
of IN of ^ OK
the DT the ^ OK
huge JJ huge ^ OK
oil NN oil ^ OK
revenues NNS revenues ^ OK

uh UH ^ ^ filler
could MD ^ ^ false_start
uh UH ^ ^ filler
the DT ^ ^ repeat
eh UH ^ ^ filler
the DT the ^ OK
same JJ same ^ OK
as IN as ^ OK
khadafi NNP khadafi ^ OK
has VBZ has ^ OK
tried VBN tried ^ OK
to TO to ^ OK
do VB do ^ OK

bec- IN ^ ^ false_start
but CC but ^ OK
he PRP ^ ^ false_start
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
ha- VB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP he ^ OK
's BES 's ^ OK
away RB away ^ OK
from IN ^ ^ repeat
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
from IN from ^ OK
the DT the ^ OK
critical JJ critical ^ OK
area NN area ^ OK
and CC and ^ OK
the DT the ^ OK
other JJ other ^ OK
players NNS players ^ OK
in IN in ^ OK
the DT the ^ OK
oil NN oil ^ OK
business NN business ^ OK

but CC but ^ OK
they PRP they ^ OK
have VBP have ^ OK
n't RB n't ^ OK
gotten VBN gotten ^ OK
any DT any ^ OK
better JJR better ^ OK

but CC but ^ OK
with IN with ^ OK
the DT the ^ OK
kind NN kind ^ OK
of IN of ^ OK
oil NN oil ^ OK
revenues NNS revenues ^ OK
they PRP they ^ OK
had VBD had ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in ^ OK
the DT the ^ OK
interim NN interim ^ OK
um UH ^ ^ filler
would MD would ^ OK
n't RB n't ^ OK
it PRP it ^ OK
be SBAR-2 be ^ OK
very VB very ^ OK
easy RB easy ^ OK
for JJ for ^ OK
them IN them ^ OK
to PRP to ^ OK
re-arm TO re-arm ^ OK
and VB and ^ OK
be CC be ^ OK
re- VB ^ ^ false_start
more XX more ^ OK
in RBR in ^ OK
position JJ an ^ false_start
advanced IN advanced ^ OK
position JJ position ^ OK
than NN than ^ OK
they IN they ^ OK
were PRP were ^ OK
before VBD before ^ OK

that DT ^ ^ repeat
eh UH ^ ^ filler
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
your PRP ^ ^ repeat
your PRP your ^ OK
problem NN problem ^ OK

eh UH ^ ^ filler
because IN because ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
intelligence NN intelligence ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
talk VB talk ^ OK
to IN to ^ OK
the DT the ^ OK
american JJ american ^ OK
people NNS people ^ OK

if IN ^ ^ repeat
if IN if ^ OK
i- NNP ^ ^ repeat
iran NNP iran ^ OK
was VBD was ^ OK
n't RB n't ^ OK
such PDT such ^ OK
a DT a ^ OK
nasty JJ nasty ^ OK
cou- NN ^ ^ repeat
uh UH ^ ^ filler
country NN country ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
be VB be ^ OK
in IN in ^ OK
favor NN favor ^ OK
of IN of ^ OK
going VBG going ^ OK
after IN after ^ OK
them PRP them ^ OK

well UH ^ ^ false_start
they PRP ^ ^ repeat
he PRP he ^ OK
've VBP ^ ^ repeat
's HVS 's ^ OK
k- VBN ^ ^ repeat
killed VBN killed ^ OK
over IN over ^ OK
a DT a ^ OK
million CD million ^ OK
of IN of ^ OK
his PRP his ^ OK
own JJ own ^ OK
people NNS people ^ OK

we- PRP ^ ^ repeat
heh UH ^ ^ repeat
we PRP ^ ^ repeat
we- PRP ^ ^ repeat
heh UH ^ ^ repeat
we PRP ^ ^ repeat
uh UH ^ ^ filler
we PRP ^ ^ repeat
we PRP we ^ OK
destroyed VBD destroyed ^ OK
the DT the ^ OK
taliban NNP taliban ^ OK
because IN because ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
destroyed VBD destroyed ^ OK
all PDT all ^ OK
the DT the ^ OK
national JJ national ^ OK
monuments NNS monuments ^ OK

he PRP ^ ^ repeat
he PRP ^ ^ repeat
uh UH ^ ^ filler
he PRP he ^ OK
destroyed VBN ^ ^ repeat
destroyed VBD destroyed ^ OK
uh UH ^ ^ filler
an DT ^ ^ repeat
uh UH ^ ^ filler
an DT an ^ OK
arm- NN ^ ^ repeat
area NN area ^ OK
bigger JJR bigger ^ OK
than IN than ^ OK
the DT the ^ OK
everglades NNPS everglades ^ OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
environmentally RB environmental ly ^ OK

uh UH ^ ^ filler
huh UH ^ ^ filler
huh UH ^ ^ filler
and CC ^ ^ false_start
treads VBZ treads ^ OK
tremendous JJ tremendous ^ OK
damage NN damage ^ OK
to IN to ^ OK
uh UH ^ ^ filler
lots NNS lots ^ OK
of IN of ^ OK
species NNS species ^ OK
of IN ^ ^ repeat
of IN of ^ OK
unique JJ unique ^ OK
fish NN fish ^ OK
birds NNS birds ^ OK
and CC and ^ OK
animals NNS animals ^ OK
that WDT that ^ OK
live VBP live ^ OK
there RB there ^ OK

well UH ^ ^ false_start
possibly RB possibly ^ OK
because IN because ^ OK
of IN of ^ OK
what WP what ^ OK
happened VBD happened ^ OK
in IN in ^ OK
nine CD nine ^ OK
eleven CD eleven ^ OK

if IN ^ ^ repeat
if IN if ^ OK
they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP ^ ^ repeat
're VBP ^ ^ repeat
ta- VBP ^ ^ repeat
scare VBP scare ^ OK
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
other JJ other ^ OK
players NNS players ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
you PRP you ^ OK
may MD may ^ OK
end VB end ^ OK
up RP up ^ OK
uh UH ^ ^ filler
with IN with ^ OK
less JJR less ^ OK
problems NNS problems ^ OK
like IN like ^ OK
that DT that ^ OK

in IN in ^ OK
the DT the ^ OK
eh UH ^ ^ filler
eh UH ^ ^ filler
heh UH ^ ^ filler
you PRP ^ ^ filler
know VBP know ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
so RB so ^ OK
sure JJ sure ^ OK
about IN about ^ OK
that DT that ^ OK

eh UH ^ ^ filler
uh UH ^ ^ filler
they PRP they ^ OK
said VBD said ^ OK
the DT the ^ OK
same JJ same ^ OK
things NNS things ^ OK
about IN about ^ OK
afghanistan NNP afghanistan ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
did VBD did ^ OK
n't RB n't ^ OK
destabilize VB destabilize ^ OK
the DT the ^ OK
region NN region ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
uh UH ^ ^ filler
you PRP you ^ OK
've VBP 've ^ OK
got VBN got ^ OK
t- XX ^ ^ repeat
tremendous JJ tremendous ^ OK
s- NN ^ ^ repeat
stability NN stability ^ OK
uh UH ^ ^ filler
in IN ^ ^ repeat
uh UH ^ ^ filler
in IN in ^ OK
iraq NNP iraq ^ OK
and CC and ^ OK
syria NNP syria ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
where WRB where ^ OK
very RB very ^ OK
small JJ small ^ OK
minorities NNS minorities ^ OK
uh UH ^ ^ filler
of IN of ^ OK
like IN like ^ OK
six CD six ^ OK
or CC or ^ OK
eight CD eight ^ OK
percent NN percent ^ OK
of IN of ^ OK
the DT the ^ OK
population NN population ^ OK
sits VBZ sits ^ OK
on IN on ^ OK
top NN top ^ OK
of IN of ^ OK
the DT the ^ OK
other JJ other ^ OK
population NN population ^ OK
and CC and ^ OK
abuses VBZ abuses ^ OK
them PRP them ^ OK

syria NNP syria ^ OK
is VBZ is ^ OK
not RB not ^ OK
a DT ^ ^ repeat
a DT a ^ OK
great JJ ^ ^ repeat
great JJ great ^ OK
place NN place ^ OK
either RB either ^ OK
in IN in ^ OK
terms NNS terms ^ OK
of IN of ^ OK
uh UH ^ ^ filler
human JJ human ^ OK
rights NNS rights ^ OK

but CC but ^ OK
they PRP they ^ OK
're VBP 're ^ OK
a DT a ^ OK
little JJ little ^ OK
quieter NN quieter ^ OK
under SBAR-1 under ^ OK
the IN the ^ OK
son DT son ^ OK
than NN than ^ OK
they IN they ^ OK
were PRP were ^ OK
und- VBD ^ ^ repeat
under IN under ^ OK
the IN the ^ OK
father DT father ^ OK

so RB ^ ^ filler
um UH ^ ^ filler
um UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
seen VBN seen predicate OK
seen VBN _NOUN_ arg1 false_start

i PRP ^ ^ repeat
know VBP ^ ^ repeat
i PRP i arg0 OK
know VBP know predicate OK
there EX there arg1 OK
are VBP are arg1 OK
certain JJ certain arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
jobs NNS jobs arg1 OK
though RB though ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
where WRB where ^ OK
only RB only arg0 OK
certain JJ certain arg0 OK
kind NN kind arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
are VBP are ^ OK
going VBG going ^ OK
to TO to ^ OK
hire VB hire predicate OK
certain JJ certain arg1 OK
other JJ other arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
people NNS people arg1 OK

i PRP ^ ^ false_start
mean VB ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ false_start
go VBP ^ ^ false_start
to TO ^ ^ false_start
go VB ^ ^ false_start
to TO ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
go VB go predicate OK
to TO to arg2 OK
apply VB apply arg2 OK
for IN for arg1 OK
a DT a arg1 OK
job NN job arg1 OK
in IN in arg1 OK
a DT a arg1 OK
indian JJ indian arg1 OK
restaurant NN restaurant arg1 OK
to TO to ^ OK
cook VB cook predicate OK

in IN in ^ OK
a DT a ^ OK
indian JJ indian ^ OK
restaur- NN restaur- ^ OK

mean VBP ^ ^ false_start
in IN ^ ^ repeat
in IN in ^ OK
well UH ^ ^ filler
i PRP ^ ^ false_start
o- JJ ^ ^ repeat
other JJ other ^ OK
words NNS words ^ OK
like UH ^ ^ filler
a DT ^ ^ repeat
an DT an ^ OK
indian JJ indian ^ OK
restaurant NN restaurant ^ OK
with IN with ^ OK
um UH ^ ^ filler

really RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
in IN ^ ^ repeat
in IN in ^ OK
bo- NNP bo- ^ OK

but CC but ^ OK
um UH ^ ^ filler

you PRP you arg0 OK
mean VBP mean predicate OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the arg1 OK
people NNS people arg1 OK
who WP who arg0 OK
've VBP 've arg1 OK
left VBN left arg1 OK

and CC ^ ^ false_start
what WP what ^ OK
i- VBZ ^ ^ false_start

is VBZ is predicate OK
it PRP it arg1 OK
overall RB overall arg2 OK
good JJ ^ ^ false_start
t- XX ^ ^ false_start
worthwhile JJ worthwhile arg2 OK
or CC or arg2 OK
bad JJ bad arg2 OK

actually RB actually ^ OK
i PRP i ^ OK
w- VBD ^ ^ false_start

and CC ^ ^ false_start
actually RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
been VBN ^ ^ repeat
been VBN been predicate OK
in IN ^ ^ repeat
in IN in arg2 OK
the DT ^ ^ repeat
the DT ^ arg2 repeat
the DT the arg2 OK
low JJ ^ arg2 repeat
lowest JJS lowest arg2 OK
income NN ^ arg2 repeat
income NN income arg2 OK
bracket NN ^ arg2 repeat
bracket NN bracket arg2 OK
pretty RB pretty ^ false_start
much JJ much ^ false_start
all PDT all ^ OK
my PRP my ^ OK
life NN life ^ OK

i PRP i arg0 OK
went VBD went predicate OK
to IN to arg1 OK
the DT the arg1 OK
city NNP ^ ^ repeat
city NNP city arg1 OK
college NNP college arg1 OK
of IN of arg1 OK
new NNP new arg1 OK
york NNP york arg1 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i arg1 OK
loved VBD loved predicate OK
being VBG being arg1 OK
there RB there arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
saw VBD ^ ^ repeat
saw VBD saw predicate OK
harlem NNP harlem arg1 OK
before IN before ^ OK
the DT the arg1 OK
gentrification NN gentrificatio n  arg1 OK
began VBD began predicate OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
like UH ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
um UH ^ ^ filler

wave VB wave ^ OK
you PRP you ^ OK
through RB through ^ OK

i PRP ^ ^ repeat
i PRP i arg1 OK
have VBP ^ ^ repeat
have VBP have ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
been VBN been predicate OK
on IN on arg2 OK
a DT ^ ^ repeat
uh UH ^ ^ filler
a DT a arg2 OK
plane NN plane arg2 OK
in IN in arg2 OK
probably RB probably arg2 OK
about RB about arg2 OK
a DT a arg2 OK
year NN year arg2 OK

but CC ^ ^ false_start
one CD one arg1 OK
of IN of arg1 OK
the DT the arg1 OK
things NNS things arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
did VBD did arg1 OK
want VB want arg1 OK
to TO to arg1 OK
do VB do arg1 OK
uh VBD ^ ^ filler
uh UH ^ ^ filler
with UH with arg1 false_start
my IN my arg1 false_start
girlfriend PRP girlfriend arg1 false_start
over NN over arg1 false_start
the IN the arg1 false_start
summer DT summer arg1 false_start
was NP-1 was predicate OK
uh NN ^ ^ filler
we UH ^ ^ false_start
wanted PRP ^ ^ false_start
to VBD to arg2 OK
go TO go arg2 OK
to VB to arg2 OK
uh IN ^ ^ filler
the UH the arg2 OK
airport DT airport arg2 OK
just NN just argM_adverb OK
to RB to arg2 OK
sit TO sit arg2 OK
there VB there argM_loc OK
and RB and arg2 OK
watch CC watch arg2 OK
people VB people arg1 OK
you NNS ^ ^ filler
know PRP ^ ^ filler
because VBP because argM_cause OK
it IN it arg1 OK
's PRP 's argM_cause OK
a BES a arg2 OK
interesting DT interesting arg2 OK
place JJ place arg2 OK

they PRP they arg0 OK
you PRP ^ ^ false_start
ca MD ^ ^ false_start
n't RB ^ ^ false_start
even RB ^ ^ false_start
like UH ^ ^ filler
wo MD wo argM_mod OK
n't RB n't argM_neg OK
even RB even argM_adverb OK
let VB let predicate OK
you PRP you arg1 OK
in IN in arg1 OK
the DT the arg1 OK
door NN door arg1 OK
without IN without arg1 OK
a DT a arg1 OK
ticket NN ticket arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
uh UH ^ ^ filler
so UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK

um UH ^ ^ filler
at IN at argM_loc OK
o'hare NNP o'hare argM_loc OK
there EX ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
they PRP ^ ^ false_start
just RB ^ ^ false_start
have VBP ^ ^ false_start
uh UH ^ ^ filler
every DT ^ ^ false_start
the DT ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
uh UH ^ ^ filler
at IN at argM_loc OK
the DT the argM_loc OK
terminal NN terminal argM_loc OK
entrance NN entrance argM_loc OK
place NN place argM_loc OK
you PRP you arg1 OK
have VBP have argM_mod OK
to TO to argM_mod OK
go VB go predicate OK
like UH ^ ^ filler
down IN down argM_dir OK
uh UH ^ ^ filler
a DT a argM_dir OK
big JJ big argM_dir OK
escalator NN escalator argM_dir OK
and CC and argM_dir OK
then RB then argM_dir OK
across IN across argM_dir OK
to IN to argM_dir OK
like UH ^ ^ filler
the DT the argM_dir OK
opposite JJ opposite argM_dir OK
end NN end argM_dir OK
of IN of argM_dir OK
the DT the argM_dir OK
airport NN airport argM_dir OK

um UH ^ ^ filler
and CC ^ ^ repeat
they PRP ^ ^ repeat
do VBP ^ ^ repeat
and CC ^ ^ false_start
they PRP ^ ^ false_start
do VBP ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
they PRP they arg0 OK
have VBP have arg1 OK
the DT the arg1 OK
security NN security arg1 OK
checks NNS checks arg1 OK
at IN ^ ^ false_start
before IN before argM_tmp OK
you PRP you arg1 OK
go VBP go argM_loc OK
on IN on argM_loc OK
the DT the argM_loc OK
escalator NN escalator argM_loc OK
thing NN thing argM_loc OK
and CC and argM_tmp OK
then RB ^ ^ false_start
after IN after argM_tmp OK

uh UH ^ ^ filler
so UH ^ ^ filler
my PRP my ^ OK
final JJ final ^ OK
answer NN answer ^ OK
with IN with ^ OK
the DT the ^ OK
thing NN thing ^ OK
i PRP ^ ^ repeat
i- PRP ^ ^ false_start

definitely RB definitely argM_adverb OK
i PRP ^ ^ repeat
i PRP i arg0 OK
w- MD ^ ^ repeat
would MD would argM_mod OK
say VB say predicate OK
that IN that arg1 OK
it PRP ^ ^ repeat
it PRP ^ ^ false_start
would MD ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the arg0 OK
more JJR more arg0 OK
money NN money arg0 OK
it PRP ^ ^ false_start
you PRP you arg0 OK
throw VBP throw arg0 OK
at IN ^ ^ repeat
at IN at arg0 OK
a DT a arg0 OK
cause NN cause arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
does VBZ does arg1 OK
have VB have arg1 OK
some DT some arg1 OK
effect NN effect arg1 OK

they PRP ^ ^ repeat
they PRP they arg0 OK
still RB ^ ^ repeat
still RB still argM_adverb OK
s- VBP ^ ^ repeat
uh UH ^ ^ filler
send VBP send predicate OK
them PRP them arg1 OK
through IN through argM_mnr OK
uh UH ^ ^ filler
x. NN x. argM_mnr OK
ray NN ray argM_mnr OK
machines NNP machines argM_mnr OK
there RB there argM_loc OK
though RB though argM_discou OK
right UH ^ ^ filler

they PRP ^ ^ false_start
want VBP ^ ^ false_start
to TO ^ ^ false_start
o- XX ^ ^ false_start
without IN ^ ^ false_start
your PRP ^ ^ repeat
uh UH ^ ^ filler
your PRP ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
uh UH ^ ^ filler
i- XX ^ ^ false_start
because UH ^ ^ false_start
before RB ^ ^ repeat
yeah UH ^ ^ filler
before RB before argM_tmp OK
they PRP ^ ^ repeat
they PRP they arg0 OK
would MD ^ ^ repeat
would MD would argM_mod OK
a- VB ^ ^ repeat
ask VB ask predicate OK

we PRP ^ ^ repeat
oh UH ^ ^ filler
we PRP ^ ^ repeat
we PRP we arg0 OK
always RB ^ ^ repeat
always RB always argM_tmp OK
had VBD ^ ^ repeat
had VBD had predicate OK
the DT the arg1 OK
v- XX ^ ^ false_start
uh UH ^ ^ filler
long JJ long arg1 OK
x. NN x. arg1 OK
ray NN ray arg1 OK
machines NNS machines arg1 OK
um UH ^ ^ filler
at IN at argM_loc OK
o'hare NNP o'hare argM_loc OK

but CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK

ha- XX ^ arg1 false_start
how WRB how arg2 OK
is VBZ is predicate OK
like UH the ^ false_start
like UH ^ ^ filler
airport NN airport arg1 OK
size NN size arg1 OK

is VBZ is arg2 OK
is VBZ it arg1 false_start
comparable JJ comparable arg2 OK
to IN to ^ OK
to IN _ARG_ arg2 false_start

uh UH ^ ^ filler
w- XX ^ ^ false_start
my PRP my arg0 OK
best JJS best arg0 OK
friend NN friend arg0 OK
's BES 's arg0 OK
uh UH ^ ^ filler
mom NN mom arg0 OK
just RB just argM_adverb OK
got VBD got predicate OK
a DT a arg1 OK
job NN job arg1 OK
at IN at argM_loc OK
o'hare NNP o'hare argM_loc OK
as IN as arg1 OK
one CD one arg1 OK
of IN of arg1 OK
the DT the arg1 OK
uh UH ^ ^ filler
like UH ^ ^ filler
scanners NNS scanners arg1 OK

for IN ^ ^ false_start
the DT ^ ^ false_start
the DT ^ ^ repeat
they PRP they arg0 OK
sit VB sit predicate OK
at IN at arg2 OK
the DT the arg2 OK
x. NN x. arg2 OK
ray NN ray arg2 OK
machine NN machine arg2 OK
and CC and ^ OK
uh UH ^ ^ filler
watch VB watch predicate OK

and CC ^ ^ false_start
she PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
she PRP she arg0 OK
went VBD went predicate OK
through IN through arg_particl OK
like UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP ^ ^ repeat
wa- VBD ^ ^ repeat
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like NP-PRD ^ ^ false_start
a UH a arg1 OK
month DT month arg1 OK
worth NN worth arg1 OK
of JJ of arg1 OK
training IN training arg1 OK

um UH ^ ^ filler
but CC ^ ^ false_start
still RB ^ ^ false_start
knowing VBG ^ ^ repeat
knowing VBG knowing predicate OK
her PRP her arg1 OK
she PRP she arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
computer NN computer arg2 OK
literate JJ literate arg2 OK
she PRP ^ ^ false_start
like UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ false_start
because IN because argM_cause false_start
she PRP she arg1 false_start
's BES 's argM_cause false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB kind arg2 false_start
of RB of arg2 false_start
older JJR older arg2 false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ filler
uh UH ^ ^ filler
so UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK

so UH ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
major JJ ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg0 OK
should MD should argM_mod OK
be VB be arg1 OK
taken VBN taken arg1 OK
into IN into arg1 OK
account NN account arg1 OK
too RB too argM_discou OK
that IN that arg0 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
although IN although argM_discou OK
it PRP it arg1 OK
appears VBZ appears arg0 OK
that IN that arg1 OK
you PRP you arg0 OK
have VBP have arg1 OK
the DT the arg0 OK
manpower NN manpower arg0 OK
that DT that arg0 OK
does VBZ does arg1 OK
n't RB n't argM_neg OK
necessarily RB necessarily argM_adverb OK
mean VB mean arg1 OK
that DT ^ ^ repeat
that DT ^ ^ repeat
that DT that arg0 OK
actually RB actually argM_adverb OK
you PRP ^ ^ filler
know VBP ^ ^ filler
stops VBZ stops arg1 OK
anything NN anything arg1 OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
and CC ^ ^ false_start
can MD can ^ OK
see VB see predicate OK
where WRB where arg1 OK
some DT some arg1 OK
people NNS people arg1 OK
would MD would arg1 OK
be VB be arg1 OK
really RB really arg2 OK
upset JJ upset arg2 OK
about IN about arg2 OK
it PRP it arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg0 OK
depends VBZ depends predicate OK
on IN on arg1 OK
what WP what arg2 OK
your PRP ^ ^ repeat
your PRP your arg1 OK
profession NN profession arg1 OK
is VBZ is arg1 OK
and NP-PRD-1 and arg1 OK
what CC what arg1 OK
you WP you arg0 OK
do PRP do arg1 OK

i PRP ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VBP ^ ^ false_start
think VB think predicate OK
it PRP ^ ^ repeat
it PRP it arg0 false_start
really RB really arg1 OK
affects VBZ affects arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
normal JJ normal arg1 OK
everyday JJ everyday arg1 OK
general JJ general arg1 OK
type NN type arg1 OK
people NNS people arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
or CC ^ ^ repeat
or CC or ^ OK
power NN power ^ OK
women NNS women ^ OK

that DT that ^ OK
's BES 's ^ OK
sad JJ sad ^ OK
because IN because ^ OK

it PRP it arg1 false_start
's SBAR-2 's predicate false_start
a BES a arg2 false_start
shame DT shame arg2 false_start
for NN for arg2 false_start
that IN that arg1 false_start
to DT to arg2 false_start
happen TO happen predicate false_start
happen TO to arg2 false_start
anybody NN anybody arg2 OK
that WDT that arg0 OK
works VBZ works arg2 OK
for IN for argM_tmp OK
thirty CD thirty argM_tmp OK
or CC or argM_tmp OK
forty CD forty argM_tmp OK
years NNS years argM_tmp OK
and CC and argM_tmp OK
even RB even argM_tmp OK
say UH ^ ^ filler
like UH ^ ^ filler
the DT the argM_tmp OK
last JJ last argM_tmp OK
ten CD ten argM_tmp OK
or CC or argM_tmp OK
twenty CD twenty argM_tmp OK
years NNS years argM_tmp OK
of IN of argM_tmp OK
their PRP ^ ^ repeat
their PRP their argM_tmp OK
j- NN ^ ^ false_start
career NN career argM_tmp OK

be- XX ^ ^ false_start
now UH now ^ OK
that DT ^ ^ filler
that DT that arg1 OK
would MD would ^ OK
be VB be predicate OK
something NN something arg2 OK
that WDT that arg0 OK
would MD would argM_other OK
upset VB upset arg2 OK
me PRP me arg1 OK

re- XX ^ ^ false_start
that DT ^ ^ false_start
i PRP i arg0 OK
would MD ^ ^ false_start
would MD would argM_other OK
feel VB feel predicate OK
bad JJ bad arg1 OK
for IN for arg2 OK
people NNS people arg2 OK
about IN about ^ OK
that DT that ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
the DT the arg2 OK
bigger JJR bigger arg2 OK
guys NNS guys arg2 OK
that NAC-3 ^ ^ false_start
's WDT ^ ^ false_start
in BES ^ ^ repeat
in DT in arg2 OK
these IN ^ ^ repeat
these IN these arg2 OK
big DT big arg2 OK
corporations JJ corporations arg2 OK
or NNS or arg2 OK
even CC even arg2 OK
the RB the arg2 OK
women DT women arg2 OK
you NNS ^ ^ filler
know PRP ^ ^ filler
that VBP that arg0 OK
are WDT are arg2 OK
creating VBP creating arg2 OK
these VBG these arg1 OK
problems DT problems arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
always RB ^ ^ repeat
always RB always arg2 OK
the DT the arg2 OK
underdog NN underdog arg2 OK
or CC ^ ^ repeat
or CC or arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
normal JJ normal arg2 OK
everyday JJ everyday arg2 OK
business NN business arg2 OK
guy NN guy arg2 OK
that WDT that arg0 OK
goes VBZ goes arg2 OK
to IN to arg2 OK
work NN work arg2 OK
and CC and arg2 OK
supports VBZ supports arg2 OK
himself PRP himself arg1 OK
for IN for arg2 OK
a DT a arg2 OK
family NN family arg2 OK
that WDT that arg0 OK
has VBZ has arg2 OK
the DT the arg1 OK
effects NNS effects arg1 OK
of IN of arg1 OK
what WP what arg1 OK
happens VBZ happens arg1 OK
with IN with arg2 OK
these DT these arg2 OK
scandals NNS scandals arg2 OK
and CC and arg2 OK
with IN with arg2 OK
these DT ^ ^ repeat
these DT these arg2 OK
uh UH ^ ^ filler
guys NNS guys arg2 OK
that WDT that arg1 OK
are VBP are arg2 OK
in IN in arg2 OK
control NN control arg2 OK
of IN of arg2 OK
these DT these arg2 OK
big JJ big arg2 OK
corporations NNS corporations arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
what WP what arg1 OK
happens VBZ happens arg1 OK
is VBZ is arg1 OK
is VBZ that arg2 false_start
it PRP it arg1 OK
goes VBZ goes arg2 OK
to IN to arg4 OK
their PRP their arg4 OK
head NN head arg4 OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
they PRP they arg0 OK
realize VBP realize predicate OK
realize VBP that arg1 false_start
well UH ^ arg1 filler
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
care VB care arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it- PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK

but CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg2 OK
just RB just arg2 OK
a DT a arg2 OK
general JJ general arg2 OK
consensus NN consensus arg2 OK
of IN of arg2 OK
people NNS people arg2 OK
in IN in arg2 OK
the DT the arg2 OK
world NN world arg2 OK
nowadays RB nowadays argM_tmp OK

i PRP i arg0 OK
just RB just ^ OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
that IN that arg1 OK
there EX there arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
whole JJ whole arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
compassion NN compassion arg2 OK
for IN for arg2 OK
people NNS people arg2 OK
period NN period ^ OK

and CC ^ ^ false_start
there EX ^ ^ false_start
was VBD ^ ^ false_start
they PRP ^ ^ repeat
always RB ^ ^ repeat
they PRP they arg0 OK
tried VBD tried predicate OK
to TO to arg1 OK
avoid VB avoid arg1 OK
that DT that arg1 OK
type NN type arg1 OK
of IN of arg1 OK
scandal NN scandal arg1 OK

well UH ^ ^ filler
you PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
only RB ^ ^ repeat
a DT ^ ^ repeat
a DT a arg2 OK
number NN number arg2 OK

the- XX the- ^ OK

and CC ^ ^ false_start
do VBP do ^ OK
n't RB n't ^ OK
even RB even ^ OK
offer VB offer ^ OK
a DT a ^ OK
half-way JJ half-way ^ OK
decent JJ decent ^ OK
package NN package ^ OK

they PRP they arg0 OK
're VBP 're predicate OK
just RB just arg2 OK
like UH ^ ^ filler
tossing VBG tossing arg2 OK
you PRP you arg1 OK
out RP out arg_particl OK
with IN with arg2 OK
like UH a ^ false_start
like UH ^ ^ filler
couple NN couple arg2 OK
of IN of arg2 OK
w- UH ^ ^ repeat
what UH ^ ^ filler
months NNS months arg2 OK
of IN of arg2 OK
unemployment NN unemployment arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ false_start
think VBP think predicate OK
what WP ^ ^ false_start
happens VBZ ^ ^ false_start
is VBZ ^ ^ false_start
that IN that arg1 OK
most JJS most arg0 OK
companies NNS companies arg0 OK
nowadays RB nowadays argM_tmp OK
know VBP know arg1 OK
that IN that arg1 OK
the DT the arg1 OK
economy NN economy arg1 OK
's BES 's arg1 OK
bad JJ bad arg2 OK

tha- DT ^ ^ repeat
yes UH yes ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
like VB like predicate OK
some DT some arg1 OK
of IN of arg1 OK
them PRP those arg1 false_start
that WDT that arg1 OK
were VBD were arg1 OK
n't RB n't argM_neg OK
so RB ^ ^ false_start
much RB ^ ^ false_start
reality NN reality arg2 OK
t. NN t. arg2 OK
v. NN v. arg2 OK

the DT ^ ^ repeat
now UH ^ ^ false_start
that DT that ^ OK
was VBD was ^ OK

and CC ^ ^ false_start
then RB ^ ^ false_start
oh UH ^ ^ filler
what WP ^ ^ repeat
was VBD ^ ^ repeat
that DT ^ ^ repeat
other JJ ^ ^ repeat
one NN ^ ^ repeat
um NP-PRD-1 ^ ^ filler
american UH american ^ OK
idol NNP idol ^ OK

like UH ^ ^ filler
um UH um ^ OK
and CC ^ ^ false_start

i PRP i arg0 OK
liked VBD liked predicate OK
uh UH ^ ^ filler
that DT ^ arg1 false_start
those DT that ^ false_start
comedian NN ^ arg1 false_start
two CD comedian ^ false_start
one CD one arg1 false_start
and CC and arg1 false_start
the DT the arg1 false_start
singers NNS singers arg1 false_start

but CC ^ ^ false_start
other JJ other ^ OK
ones NNS ones ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN like ^ OK
um UH ^ ^ filler
joe NNP joe ^ OK
millionaire NNP millionaire ^ OK
where WRB where ^ OK
all PDT the ^ false_start
all PDT ^ ^ false_start
these DT ^ ^ false_start
women NNS women ^ OK
are VBP are ^ OK
being VBG being ^ OK
lied VBN lied ^ OK
to IN to ^ OK

they PRP they ^ OK
all DT all ^ OK
e- XX ^ ^ false_start

i- XX ^ ^ repeat
e- XX e- ^ OK

and CC ^ arg1 false_start
i PRP i arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
admired VBD admired predicate OK
like UH the ^ false_start
th- CD ^ ^ repeat
h- CD ^ ^ repeat
hundred CD hundred arg1 false_start
thousand CD thousand arg1 false_start
people NNS people arg1 false_start
like UH in ^ false_start
like UH ^ ^ filler
uh UH ^ ^ filler
american NNP american arg1 OK
idol NNP idol arg1 OK
where WRB ^ arg1 false_start
they PRP who ^ false_start
had VBD had arg1 OK
to TO to arg1 OK
stand VB stand arg1 OK
standing VBG ^ predicate repeat
in IN in arg2 OK
in IN ^ ^ repeat
line NN line arg2 OK
line NN ^ ^ repeat
with IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT ^ ^ false_start
and CC for argM_tmp OK
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
two CD two argM_tmp OK
three CD three argM_tmp OK
or CC ^ ^ repeat
or CC or argM_tmp OK
four CD four argM_tmp OK
days NNS days argM_tmp OK
uh UH ^ ^ filler
uh UH ^ ^ filler
w- XX ^ ^ repeat
just RB ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
admired VBD admired predicate OK
that DT that ^ OK
where WRB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
d- XX ^ ^ repeat
y- PRP ^ ^ repeat
you PRP you arg1 OK
have VBP had arg1 false_start
a DT a arg1 OK
one CD one arg1 false_start
in IN in arg1 false_start
chance NN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
million CD million arg1 OK
chance NN chance arg1 OK
to TO to arg1 OK
become VB become arg1 OK
m- XX ^ ^ repeat
a DT a arg2 OK
famous JJ famous arg2 OK
singer NN singer arg2 OK

i- PRP ^ ^ repeat
it PRP it arg1 OK
was VBD was predicate OK
funny JJ funny arg2 OK

but CC ^ ^ repeat
but CC ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
some DT some arg0 OK
of IN of arg0 OK
them PRP them arg0 OK
knew VBD knew arg1 OK
they PRP they arg1 OK
were VBD were arg1 OK
bad JJ bad arg2 OK

but CC ^ ^ repeat
but CC ^ ^ false_start
what WP what arg1 OK
's BES 's arg1 OK
sad JJ sad arg1 OK
is VBZ is predicate OK
some DT some arg0 OK
of IN of arg0 OK
them PRP them arg0 OK
thought VBD thought arg2 OK
they PRP they arg1 OK
were VBD were arg1 OK
good JJ good arg2 OK

some DT some arg0 OK
of IN of arg0 OK
them PRP them arg0 OK
thought VBD thought predicate OK
sh- XX ^ ^ repeat
they PRP they arg0 OK
should MD should arg1 OK
win VB win arg1 OK

it PRP i arg0 false_start
's BES ^ ^ false_start
like RP think predicate false_start
dude NN ^ ^ false_start
you PRP you arg1 OK
're VBP 're arg1 OK
retarded JJ retarded arg2 OK

uh UH ^ ^ filler
when WRB ^ ^ repeat
the- PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they arg1 OK
were VBD were predicate OK
serious JJ serious arg2 OK

i PRP i ^ OK
kn- VBP kn- ^ OK

y- PRP ^ ^ repeat
you PRP ^ ^ repeat
're VBP ^ ^ repeat
because UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP 've ^ OK
had VBN had predicate OK
friends NNS friends arg0 OK
who WP who arg1 OK
think VBP think arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
really RB really arg2 OK
good JJ good arg2 OK

and CC ^ ^ false_start
it PRP i arg0 false_start
's BES ^ ^ false_start
like RP think predicate false_start
y- PRP ^ ^ repeat
you PRP you arg1 OK
're VBP 're arg1 OK
not RB not arg2 OK

you PRP you arg1 OK
stink VBP stink predicate OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when ^ OK
i PRP i arg0 OK
want VBP want predicate OK
to TO to arg1 OK
do VB do arg1 OK
something NN something arg1 OK
i ADVP-TMP- 2 i arg0 OK
always PRP always argM_tmp OK
ask RB ask predicate OK
friends VBP friends arg2 OK
is NNS is arg1 OK
this VBZ this arg1 OK
stupid DT stupid arg2 OK

y- PRP ^ ^ repeat
you PRP you ^ OK
know VBP know ^ OK
i- XX ^ ^ repeat

i PRP ^ ^ filler
mean VBP ^ ^ filler
even RB even ^ OK
i PRP i ^ OK
watched VBD watched ^ OK
th- XX ^ ^ repeat

um UH ^ ^ filler
we PRP we arg0 OK
have VBP have ^ OK
to TO to ^ OK
unplug VB unplug predicate OK
the DT the arg1 OK
phone NN phone arg1 OK

we PRP we arg0 OK
ca MD ca ^ OK
n't RB n't argM_neg OK
talk VB talk predicate OK
to IN to ^ OK
anybody NN anybody arg2 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
fear NNP fear arg1 OK
factor NNP factor arg1 OK
's BES 's predicate OK
on RB on arg2 OK

they PRP they arg1 OK
watching VBG who ^ false_start
watching VBG watch arg1 false_start
this DT this arg1 false_start
junk NN junk arg1 false_start
've VBP have ^ false_start
become VBN become predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
t- NN ^ ^ repeat
t. NN t. arg2 OK
v. NN v. arg2 OK
addicts NNS addicts arg2 OK

they PRP ^ ^ repeat
en- XX ^ ^ repeat
they PRP they arg0 OK
liked VBD ^ ^ repeat
loved VBD loved predicate OK
fear NNP fear arg1 OK
factor NNP factor arg1 OK

i PRP i arg1 OK
do VBP do ^ OK
n't RB n't argM_neg OK
want VB want predicate OK
to TO to arg1 OK
sit VB ^ ^ false_start
and CC ^ ^ false_start
watch VBP watch arg1 OK
watching VBG ^ predicate repeat
ones NNS the ^ false_start
but CC ^ ^ false_start
these DT ^ ^ false_start
other JJ ^ ^ false_start
ones NNS ones arg1 false_start
someone NN where arg1 OK
someone NN someone arg0 OK
make VB makes arg1 false_start
a DT a arg1 OK
fool NN fool arg1 OK
of IN of arg2 OK
themselves PRP themselves arg2 OK
them PRP ^ ^ false_start
or CC or arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
eating VBG ^ ^ repeat
eating VBG eats arg1 false_start
some DT some arg1 OK
disgusting JJ disgusting arg1 OK
uh UH ^ ^ filler
stuff NN stuff arg1 OK
from IN from arg1 OK
a DT a arg1 OK
dead JJ dead arg1 OK
animal NN animal arg1 OK
and CC and arg1 OK
then RB then arg1 OK
puke VB pukes arg1 false_start

so UH ^ ^ filler
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP ^ ^ repeat
've VBP 've ^ OK
been VBN been predicate OK
out IN out arg2 OK
of IN of arg2 OK
high JJ high arg2 OK
school NN school arg2 OK
for IN for arg2 OK
like UH ^ ^ filler
four CD four arg2 OK
years NNS years arg2 OK
or CC or arg2 OK
so RB so arg2 OK

i PRP i arg0 OK
know VBP know predicate OK
we PRP we arg0 OK
went VBD went arg1 OK
when WRB when argM_tmp OK
i PRP i arg1 OK
was VBD was argM_tmp OK
married JJ married arg2 OK

i ADVP-TMP- 2 i arg1 OK
'm PRP 'm ^ OK
not VBP not ^ OK
m- RB ^ ^ repeat
married JJ married predicate OK
anymore JJ anymore ^ OK

after IN after argM_tmp OK
the DT the argM_tmp OK
services NNS services argM_tmp OK
and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP ^ ^ repeat
we PRP we arg0 OK
would MD ^ ^ repeat
woul- VBP ^ ^ repeat
would MD would ^ OK
have VB have predicate OK
uh UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
little JJ little arg1 OK
cookies NNS cookies arg1 OK
and CC and arg1 OK
cakes NNS cakes arg1 OK
and CC and arg1 OK
food NN food arg1 OK

and CC ^ ^ false_start
there EX ^ ^ repeat
a DT ^ ^ filler
there EX there ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
one CD one arg1 OK
way NN way arg1 OK
to TO ^ ^ repeat
to TO to arg1 OK
meet VB meet arg1 OK
people NNS people arg1 OK
when WRB when argM_tmp OK
you PRP you arg0 OK
're VBP 're argM_tmp OK
married JJ married argM_tmp OK

and CC ^ ^ false_start
another DT another ^ OK
reason NN reason ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
probably RB ^ ^ false_start
in IN in ^ OK
your PRP your ^ OK
case NN case ^ OK
and CC and ^ OK
in IN ^ ^ repeat
in IN in ^ OK
th- DT ^ ^ repeat
the DT the ^ OK
case NN case ^ OK
of IN of ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
brother NN brother ^ OK
who WP who arg0 OK
is VBZ is ^ OK
also RB also ^ OK
married JJ married predicate OK
um UH ^ ^ filler
they PRP they arg0 OK
have VBP have predicate OK
neighbors NNS neighbors arg0 OK
stop VB stop predicate OK
by RB by arg_particl OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

especially RB ^ ^ false_start
if IN ^ ^ false_start
you PRP ^ ^ false_start
have VBP ^ ^ false_start
a DT ^ ^ false_start
hou- NN ^ ^ false_start
d- VBP ^ ^ repeat
do VBP do ^ OK
you PRP you arg0 OK
live VB live predicate OK
in IN in argM_loc OK
a DT a argM_loc OK
house NN house argM_loc OK
or CC or argM_loc OK
an DT an argM_loc OK
apartment NN apartment argM_loc OK

i PRP i arg0 false_start
think VBP think predicate false_start
it PRP it arg1 false_start
's BES 's arg1 false_start
a DT a arg2 false_start
little RB little arg2 false_start
more RBR more arg2 false_start
difficult JJ difficult arg2 false_start
but CC ^ ^ false_start
in IN ^ ^ repeat
in IN in ^ OK
a DT ^ ^ repeat
an DT an ^ OK
apartment NN apartment ^ OK

what WP ^ ^ false_start
were VBD ^ ^ false_start
you PRP ^ ^ false_start
guys NNS ^ ^ false_start
uh UH ^ ^ filler
doing VBG ^ ^ false_start
in IN ^ ^ false_start
san NNP ^ ^ false_start
anto- NNP ^ ^ false_start
did VBD did ^ OK
you PRP you arg0 OK
move VB move predicate OK
because IN ^ ^ repeat
uh UH ^ ^ filler
because IN because ^ OK
of IN ^ ^ false_start
someone NN someone arg0 OK
had VBD had predicate OK
a DT a arg1 OK
job NN job arg1 OK
there RB there argM_loc OK
in IN in argM_loc OK
san NNP san argM_loc OK
antonio NNP antonio argM_loc OK

my PRP my arg0 OK
sister NN sister arg0 OK
lives VBZ lives predicate OK
in IN ^ ^ repeat
in IN in argM_loc OK
houston NNP houston argM_loc OK

is VBZ is predicate OK
that DT that arg1 OK
where WRB where arg2 OK
you PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're arg2 OK
at IN at arg2 OK

she PRP she arg0 OK
lives VBZ lives predicate OK
in IN in arg1 OK
houston NNP houston arg1 OK
in IN ^ ^ repeat
uh UH ^ ^ filler
in IN in ^ OK
an DT an ^ OK
area NN area ^ OK
i PRP ^ ^ repeat
you PRP ^ ^ false_start
s- XX ^ ^ false_start
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
called VBN called arg2 OK
friendswood NNP friendswood arg2 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
what WDT what arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
suburb NN suburb arg1 OK

they PRP ^ ^ repeat
they PRP they arg1 OK
were VBD were predicate OK
from IN from arg2 OK
like UH ^ ^ filler
th- DT ^ ^ repeat
the DT the arg2 OK
midwest NNP midwest arg2 OK

and CC ^ ^ false_start
they PRP they arg0 OK
both DT both ^ OK
moved VBD moved predicate OK
down IN ^ ^ repeat
ther- RB ^ ^ false_start
down RB down ^ OK
t- RB ^ ^ repeat
to IN to arg2 OK
texas NNP texas arg2 OK
after IN ^ ^ repeat
after IN after ^ OK
college NN college ^ OK
because IN because ^ OK
he PRP he arg0 OK
got VBD got predicate OK
a DT a arg1 OK
job NN job arg1 OK
with IN with arg1 OK
nasa NNP nasa arg1 OK
which WDT which arg1 OK
is VBZ is predicate OK
like UH ^ ^ filler
one CD one arg1 OK
of IN of arg1 OK
the DT the arg1 OK
best JJS best arg1 OK
jobs NNS jobs arg1 OK
you PRP you arg0 OK
could MD could arg2 OK
have VB have arg2 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
liv- VBG ^ ^ false_start
working VBG working arg2 OK
in IN in arg2 OK
texas NNP texas arg2 OK
unless IN ^ ^ false_start
you PRP ^ ^ false_start
work VBP ^ ^ false_start
for IN ^ ^ false_start
one CD ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
oil NN ^ ^ false_start
unless IN unless ^ OK
you PRP you arg1 OK
're VBP 're predicate OK
an DT an arg2 OK
executive NN executive arg2 OK
for IN for ^ OK
an DT an ^ OK
oil NN oil ^ OK
company NN company ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start

sh- PRP ^ ^ false_start
i PRP ^ ^ false_start
even RB ^ ^ false_start
with IN ^ ^ false_start
her PRP ^ ^ false_start
when WRB when ^ OK
i PRP i arg0 OK
talk VBP talk predicate OK
to IN to arg2 OK
her PRP her arg2 OK
she ADVP-TMP- 1 ^ ^ repeat
she PRP she arg0 OK
has PRP has predicate OK
only VBZ only ^ OK
like RB ^ ^ filler
a UH a arg1 OK
handful DT handful arg1 OK
of NN of arg1 OK
friends IN friends arg1 OK
from NNS from ^ OK
work IN work ^ OK

hm UH ^ ^ filler
did VBD did ^ OK
he PRP he arg0 OK
get VB get predicate OK
him PRP him arg1 OK
wh- WDT ^ ^ false_start
where WRB where arg1 OK
he PRP he arg1 OK
work NN ^ ^ repeat
works VBZ works arg1 OK

here RB here arg0 OK
's BES 's predicate OK
the DT the arg1 OK
key NN key arg1 OK

um UH ^ ^ filler
his PRP ^ ^ false_start
fiancee NN ^ ^ false_start
are VBP are predicate OK
you PRP you arg1 OK
friends NNS friends arg2 OK
just RB ^ ^ false_start
because IN because ^ OK
of IN of ^ OK
the DT the ^ OK
close JJ close ^ OK
proximity NN proximity ^ OK
or CC ^ ^ repeat
or CC ^ ^ repeat
do VBP ^ ^ false_start
you PRP ^ ^ false_start
take VB ^ ^ false_start
or CC or ^ OK
is VBZ is predicate OK
there EX there arg1 OK
like UH ^ ^ filler
common JJ common arg1 OK
interest NN interest arg1 OK
that WDT that arg2 OK
you PRP you arg0 OK
guys NNS guys arg2 OK
share VBP share arg2 OK

so RB ^ ^ filler
you PRP ^ ^ false_start
guys NNS ^ ^ false_start
would MD ^ ^ false_start
be VB ^ ^ false_start
f- NNS ^ ^ false_start
you PRP you arg1 OK
'd MD 'd ^ OK
be VB be predicate OK
friends NNS friends arg2 OK
even RB ^ ^ repeat
even RB even ^ OK
if IN ^ ^ repeat
if IN ^ ^ repeat
um UH ^ ^ filler
if IN if ^ OK
your PRP ^ ^ repeat
your PRP ^ ^ repeat
the DT the arg0 OK
guys NNS guys arg0 OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
in- VB ^ ^ repeat
introduce VB introduce predicate OK
you PRP you arg1 OK

because IN ^ ^ false_start
my PRP ^ ^ false_start
ex-wife NN ^ ^ false_start
we PRP ^ ^ repeat
we PRP ^ ^ repeat
we PRP ^ ^ false_start
neither DT neither arg0 OK
of IN of arg0 OK
us PRP us arg0 OK
really RB really ^ OK
has VBZ has predicate OK
a DT a arg1 OK
a DT _NOUN_ arg1 false_start

i PRP i arg1 OK
was VBD was predicate OK
part NN part arg2 OK
of IN of arg2 OK
a DT a arg2 OK
music NN music arg2 OK
project NN project arg2 OK

so RB ^ ^ filler
i PRP i arg0 OK
moved VBD moved predicate OK
out IN out ^ OK
to IN to arg2 OK
california NNP california arg2 OK
with IN with ^ OK
a DT a arg1 OK
bunch NN bunch arg1 OK
of IN of arg1 OK
people NNS people arg1 OK
that WDT ^ ^ repeat
that WDT that ^ OK
are VBP ^ ^ repeat
were VBD were predicate OK
par- NN ^ ^ repeat
part NN part arg2 OK
of IN of arg2 OK
a DT a arg2 OK
band NN band arg2 OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
part NN part ^ OK
of IN of ^ OK
a DT ^ ^ repeat
like UH ^ ^ filler
a DT ^ ^ repeat
a DT ^ ^ repeat
like UH ^ ^ filler
a DT ^ ^ repeat
a DT a ^ OK
music NN music ^ OK
partnership NN ^ ^ repeat
partnership NN partnership ^ OK

and CC ^ ^ false_start
those DT ^ ^ false_start
that DT that arg1 OK
were VBD ^ ^ false_start
was VBD was predicate OK
our PRP ^ ^ false_start
our PRP our arg2 OK
fr- NNS ^ ^ false_start
family NN family arg2 OK
and CC and arg2 OK
friends NNS friends arg2 OK
just RB ^ ^ false_start
that DT that ^ OK
circle NN circle ^ OK
of IN of ^ OK
like UH ^ ^ filler
with- IN ^ ^ repeat
within IN ^ ^ false_start
ten CD ten ^ OK
people NNS people ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
as IN ^ ^ false_start
as IN as ^ OK
we PRP ^ ^ false_start
it PRP it arg1 OK
slowly RB slowly ^ OK
dis- VBD ^ ^ false_start
disintegrated VBD disintegrated predicate OK
over IN over ^ OK
the DT the ^ OK
years NNS years ^ OK
uh UH ^ ^ filler
ah UH ^ ^ filler
i PRP i arg0 OK
know VBP know predicate OK
i PRP i arg0 OK
never RB never arg1 OK
really RB really arg1 OK
reached VBN reached arg1 OK
out RP out arg1 OK
to IN to arg1 OK
anybody NN anybody arg1 OK
besides IN besides arg1 OK
that DT that arg1 OK
inner JJ inner arg1 OK
circle NN circle arg1 OK
besides IN besides ^ OK
just RB ^ ^ false_start
a DT a ^ OK
few JJ few ^ OK
people NNS people ^ OK
that WDT that arg0 OK
lived VBD lived predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
neighbor- NN neighborhood argM_loc false_start

i PRP i arg0 OK
call VBP call predicate OK
them PRP them arg1 OK
every DT every ^ OK
once RB once ^ OK
in IN in ^ OK
a DT a ^ OK
while NN while ^ OK
even RB even ^ OK
though IN though ^ OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
live VB live predicate OK
there RB there argM_loc OK
anymore RB anymore ^ OK

but CC ^ ^ false_start
um UH ^ ^ filler
she PRP ^ ^ false_start
had VBD ^ ^ false_start
found VBN ^ ^ false_start
she PRP she arg0 OK
worked VBD worked predicate OK
for IN for ^ OK
j. NNP j. arg2 OK
b. NNP b. arg2 OK
l. NNP l. arg2 OK
speaker NN speaker arg2 OK
company NN company arg2 OK

and CC ^ ^ false_start
she PRP ^ ^ false_start
found VBN ^ ^ false_start
like UH ^ ^ false_start
a DT ^ ^ false_start
c- NN ^ ^ false_start
and CC ^ ^ false_start
usually RB usually ^ OK
when IN when ^ OK
people NNS people arg0 OK
work VBP work predicate OK
for IN for ^ OK
big JJ big arg2 OK
corporations NNS corporations arg2 OK
they PRP ^ ^ repeat
uh UH ^ ^ filler
they PRP they arg0 OK
get VBP get predicate OK
together RB together arg_particl OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
company NN company ^ OK
gatherings NNS gatherings ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
and CC ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
how WRB how arg2 OK
she PRP she arg0 OK
met VBD met arg2 OK
a DT a arg1 OK
couple NN couple arg1 OK
of IN of arg1 OK
pretty RB pretty arg1 OK
good JJ good arg1 OK
friends NNS friends arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
up IN up ^ OK
to IN to ^ OK
right RB right ^ OK
now RB now ^ OK
it PRP it arg1 OK
's HVS 's arg1 OK
been VBN been arg1 OK
like UH ^ ^ filler
five CD five arg2 OK
six CD six arg2 OK
years NNS years arg2 OK
ago RB ^ ^ false_start

she PRP she arg1 OK
's BES 's predicate OK
still RB still arg2 OK
very RB very arg2 OK
good JJ good arg2 OK
friends NNS friends arg2 OK
with IN with arg2 OK
this DT this arg2 OK
one CD one arg2 OK
lady NN lady arg2 OK
that WDT ^ ^ repeat
that WDT that ^ OK
she PRP she arg0 OK
met VBD met predicate OK
just RB ^ ^ false_start
through IN through arg1 OK
a DT a arg1 OK
casual JJ casual arg1 OK
work NN work arg1 OK
acquaintance NN acquaintance arg1 OK

but CC but ^ OK
i PRP i arg0 OK
have VBP have ^ OK
n't RB n't ^ OK
really RB really ^ OK
latched VBN latched predicate OK
on RP on ^ OK
to IN to ^ OK
anybody NN anybody arg1 OK

like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP have predicate OK
some DT some arg1 OK
people NNS people arg1 OK
's POS 's arg1 OK
phone NN phone arg1 OK
numbers NNS numbers arg1 OK

and CC ^ ^ false_start
when WRB ^ ^ false_start
when ADVP-TMP- 1 when ^ OK
i PRP ^ ^ false_start
i WRB i arg0 OK
'm VBP ^ ^ false_start
'm PRP 'm ^ OK
working VBG ^ ^ false_start
looking VBP looking predicate OK
for VBG for arg1 OK
work IN work arg1 OK
i NN i arg0 OK
usually ADVP-TMP- 2 usually ^ OK
contact PRP contact predicate OK
them RB them arg1 OK
you VBP ^ ^ false_start
know PRP ^ ^ false_start
for PRP for ^ OK
networking VBP networking ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
th- VBP ^ ^ repeat
think VBP think predicate OK
maybe RB maybe argM_adverb OK
like UH ^ ^ filler
a DT a arg1 OK
bed NN bed arg1 OK
and CC and arg1 OK
breakfast NN breakfast arg1 OK
would MD would argM_mod OK
be VB be arg1 OK
a DT a arg1 OK
neat JJ neat arg1 OK
business NN business arg1 OK
to TO to arg2 OK
run VB run arg2 OK

it PRP it ^ OK
's BES 's ^ OK
eh UH ^ ^ filler

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
interesting JJ interesting arg2 OK

i PRP ^ ^ repeat
eh UH ^ ^ filler
i PRP i arg1 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
know VB know predicate OK
if IN if argM_adverb OK
i PRP i arg0 OK
would MD would ^ OK
would MD _ARG_ argM_mod false_start
to VP to arg1 OK
be TO be arg1 OK
honest VB honest arg2 OK

i PRP ^ arg2 repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
guess VBP ^ ^ repeat
guess VBP guess predicate OK
it PRP it arg1 OK
could MD could argM_mod OK
be VB be predicate OK
be VB _ARG_ arg1 false_start
with IN with arg2 false_start
the DT the arg2 false_start
bed NN bed arg2 false_start
and CC and arg2 false_start
breakfast NN breakfast arg2 false_start
idea NN idea arg2 false_start

i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
a DT a arg2 OK
big JJ big arg2 OK
risk NN risk arg2 OK
taker NN taker arg2 OK

i PRP i ^ OK
'm VBP 'm ^ OK

just RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there arg1 OK
's BES 's predicate OK
a DT a arg2 OK
niche NN niche arg2 OK
for IN for arg2 OK
it PRP it arg2 OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
eh UH ^ ^ filler
um UH ^ ^ filler
i PRP i arg0 OK
was VBD was ^ OK
n't RB n't argM_neg OK
clear VB clear predicate OK
on IN on arg1 OK
that DT that arg1 OK
part NN part arg1 OK

i PRP i arg1 OK
'm VBP 'm ^ OK
going VBG going predicate OK
august NNP in ^ false_start
august NNP august ^ OK
august NNP ^ argM_tmp false_start
july NNP _ARG_ ^ false_start
july NNP july argM_tmp OK

i PRP ^ ^ repeat
i PRP i ^ OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
want VBP want predicate OK
to TO to arg1 OK
pick VB pick arg1 OK
it PRP it arg1 OK
up RP up arg_particl OK

i PRP i arg1 OK
actually RB actually argM_adverb false_start
went VBD went predicate OK
to IN to arg4 OK
eh UH ^ ^ filler
brussels NNP brussels arg4 OK

i PRP i arg0 OK
got VBD got predicate OK
back RB back arg_particl OK
in IN in argM_tmp OK
august NNP august argM_tmp OK
two CD ^ ^ repeat
two CD two argM_tmp OK
thousand CD ^ ^ repeat
thousand CD thousand argM_tmp OK

at IN at argM_tmp OK
one CD one argM_tmp OK
time NN time argM_tmp OK
i PRP i arg0 OK
thought VBD thought predicate OK
i PRP ^ ^ false_start
was VBD ^ ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
be VB ^ ^ false_start
i PRP i arg0 OK
was VBD was arg1 OK
going VBG going argM_mod OK
to TO to argM_mod OK
go VB go arg1 OK
into IN into arg1 OK
business NN business arg1 OK

like UH ^ ^ filler
i PRP i arg0 OK
thought VBD thought predicate OK
i PRP i arg0 OK
was VBD was arg1 OK
going VBG going argM_mod OK
to TO to argM_mod OK
get VB get arg1 OK
an DT an arg1 OK
m. NNP m. arg1 OK
b. NNP b. arg1 OK
a. NNP a. arg1 OK

that DT ^ ^ false_start
's BES ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
just RB ^ ^ repeat
just RB just ^ OK
do VBP do ^ OK
n't RB n't argM_neg OK
get VB get predicate OK
it PRP it arg1 OK
quick RB quickly ^ false_start
enough RB enough ^ OK

though RB though argM_tmp OK
i PRP i arg0 OK
will MD will ^ OK
tell VB tell predicate OK
you PRP you arg2 OK
that IN that arg1 OK
the DT ^ ^ repeat
um UH ^ ^ filler
the DT the arg1 OK
game NN game arg1 OK
that WDT that arg1 OK
i PRP i arg1 OK
absolutely RB absolutely arg1 OK
love VBP love arg1 OK
was RB was predicate false_start
myst VBD myst ^ false_start
tell VB ^ ^ false_start
got PRP and ^ false_start
um NP-1 ^ ^ filler
i UH ^ ^ repeat
i PRP i arg0 OK
got PRP got predicate OK
it VBD it arg1 OK
for PRP for argM_tmp OK
christmas IN christmas argM_tmp OK
well RB ^ ^ filler
i UH ^ ^ filler
guess PRP ^ ^ filler
it VBP ^ ^ false_start
's PRP ^ ^ false_start
more BES more argM_tmp OK
than JJR than ^ false_start
a NNP ^ ^ repeat
a IN a ^ false_start
couple DT ^ ^ repeat
couple DT couple ^ false_start
of NN ^ ^ repeat
of NN of ^ false_start
years IN ^ ^ repeat
years IN years ^ false_start
a- NNS ^ ^ repeat
ago NNS ago ^ false_start
now RB now ^ false_start

i PRP ^ ^ repeat
was VBD ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ repeat
see UH ^ ^ filler
i PRP i arg0 OK
like VBP like predicate OK
those DT those arg1 OK
kinds NNS kinds arg1 OK
of IN of arg1 OK
games NNS games arg1 OK

and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i arg1 OK
was VBD was ^ OK
just RB ^ ^ false_start
blown VBN blown predicate OK
away RB away arg_particl OK
by IN ^ ^ repeat
the DT ^ ^ repeat
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ repeat
by IN by ^ OK
all PDT all arg1 OK
the DT the arg1 OK
work NN work arg1 OK
that WDT that arg0 OK
had VBD had arg0 OK
gone VBN gone arg0 OK
into IN into arg0 OK
it PRP it arg4 OK

i PRP i arg0 OK
just RB ^ ^ false_start
thought VBD thought predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
wa- VBD ^ ^ repeat
was VBD was arg1 OK
awesome JJ awesome arg2 OK

the DT the ^ OK
graphics NNS graphics ^ OK
the DT the ^ OK
sound NN sound ^ OK
the DT ^ ^ false_start
whole JJ ^ ^ false_start
thing NN ^ ^ false_start
was VBD ^ ^ false_start
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i- PRP ^ ^ repeat
the DT the ^ OK
music NN music ^ OK
i- PRP ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
just RB ^ ^ false_start

it PRP ^ ^ repeat
it PRP it arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
like IN ^ ^ repeat
totally RB ^ ^ false_start
like IN like arg2 OK
different JJ a ^ false_start
another DT ^ arg2 false_start
different JJ different arg2 OK
world NN world arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP i arg1 OK
was VBD was predicate OK
on IN on arg2 OK
amazon NNP ^ ^ repeat
um UH ^ ^ filler
amazon NNP amazon arg2 OK
dot NNP dot arg2 OK
com NNP com arg2 OK
uh UH ^ ^ filler
about RB about argM_tmp OK
or CC ^ ^ false_start
so RB ^ ^ false_start
a DT a argM_tmp OK
week NN week argM_tmp OK
ago RB ago argM_tmp OK

and CC ^ ^ false_start
then RB then ^ OK
i PRP i ^ OK
remembered VBD remembered ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'm VBP ^ ^ false_start
telling VBG ^ ^ false_start
you PRP ^ ^ false_start
i PRP i arg0 OK
must MD must ^ OK
have VB have ^ OK
worked VBN worked predicate OK
on IN on arg1 OK
that DT that arg1 OK
game NN game arg1 OK
for IN for argM_tmp OK
a DT a argM_tmp OK
month NN month argM_tmp OK

sometime RB sometimes ^ false_start
until IN until ^ OK
like UH ^ ^ filler
hours NNS hours ^ OK
into IN into ^ OK
the DT the ^ OK
night NN night ^ OK

i PRP ^ ^ repeat
'd MD ^ ^ false_start
just RB ^ ^ false_start
i PRP i arg0 OK
became VBD became predicate OK
obsessed JJ obsessed arg2 OK
with IN with arg2 OK
it PRP it arg1 OK

i PRP ^ ^ repeat
i PRP i ^ OK
know VBP know ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
hate VBP hate predicate OK
to TO to arg1 OK
admit VB admit arg1 OK
it PRP it arg1 OK
but CC but ^ OK
i PRP i arg0 OK
actually RB ^ ^ false_start
did VBD ended ^ OK
end VB ^ predicate false_start
up RP up arg_particl OK
buying VBG buying arg1 OK
one CD one arg1 OK
of IN of arg1 OK
those DT those arg1 OK
little JJ ^ ^ false_start
cheat NN cheat arg1 OK
books NNS books arg1 OK

eh UH ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
hard JJ hard arg2 OK

but CC ^ ^ false_start
so UH ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
that DT that arg1 OK
really RB really arg1 OK
does VBZ does arg1 OK
n't RB n't arg1 OK
come VBN fall arg1 false_start
under IN ^ ^ repeat
u- IN ^ ^ repeat
under IN under arg4 OK
the DT ^ ^ repeat
the DT the arg4 OK
heading NN heading arg4 OK
of IN of arg4 OK
fun NN fun arg4 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
thinking VBG thinking predicate OK
of IN of arg1 OK
games NNS games arg1 OK
and ADVP-TMP- 1 ^ ^ false_start
so CC ^ ^ false_start

eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP i ^ OK
prob- RB ^ ^ repeat
probably RB probably ^ OK
will MD will ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
will MD will ^ OK
probably RB probably ^ false_start
be VB be ^ OK
sucked VBN sucked predicate OK
into IN into ^ OK
it PRP it arg1 OK
again RB again argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
then RB ^ ^ false_start
i PRP i arg0 OK
'll MD 'll ^ OK
have VB ^ ^ repeat
to TO ^ ^ repeat
have VB have predicate OK
one CD one arg1 OK
of IN of arg1 OK
my PRP my arg0 OK
kids NNS kids arg0 OK
come VB come arg1 OK
come VB to arg1 false_start
and CC ^ ^ false_start
help VB help arg2 OK
me PRP me arg2 OK
out RP ^ ^ false_start
because IN because ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
they PRP they arg1 false_start
're VBP 're arg1 false_start
smarter JJR smarter arg2 false_start
than IN than ^ OK
i PRP ^ ^ false_start
am VBP me ^ false_start

and CC ^ ^ false_start
that DT ^ ^ repeat
now UH ^ ^ false_start
you PRP ^ ^ repeat
if IN if ^ OK
you PRP you arg0 OK
play VBP play predicate OK
on IN on arg2 OK
that DT that arg2 OK
computer NN computer arg2 OK
now RB ^ ^ filler
you PRP you arg0 OK
must MD must ^ OK
also RB also ^ OK
too RB ^ ^ false_start
have VB have arg1 OK
x. NNP an ^ false_start
x. NNP x arg1 false_start
box NNP box arg1 OK
or CC or arg1 OK
you PRP a ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
game NNP game arg1 OK
cube NNP cube arg1 OK
or CC ^ ^ false_start
one CD ^ ^ false_start
of IN ^ ^ false_start
those DT ^ ^ false_start
things NNS ^ ^ false_start

and CC ^ ^ false_start
and CC ^ ^ false_start
can MD can ^ OK
you PRP you arg0 OK
write VB write predicate OK
your PRP your arg1 OK
own JJ own arg1 OK
stuff NN stuff arg1 OK

an- XX ^ ^ repeat
y- XX ^ ^ repeat
an- XX ^ ^ repeat
ah UH ah ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
like UH ^ ^ filler
stuff NN stuff ^ OK
like IN ^ ^ filler
that DT that ^ OK
you PRP you ^ OK
were VBD were ^ OK
never RB never ^ OK
allowed VBN allowed ^ OK
to TO to ^ OK
do VB do ^ OK
in IN ^ ^ repeat
like UH ^ ^ filler
in IN in ^ OK
the DT ^ ^ repeat
the DT the ^ OK
real JJ real ^ OK
apartment NN apartment ^ OK

but CC ^ ^ false_start
if IN ^ ^ false_start
ye- XX ^ ^ false_start
but CC ^ ^ false_start
if IN ^ ^ false_start
are VBP are ^ OK
you PRP you arg0 OK
doing VBG doing ^ OK
is VBZ ^ ^ repeat
doing VBG ^ predicate repeat
the DT the arg1 OK
same JJ same arg1 OK
too RB ^ ^ false_start
thing NN thing arg1 OK
that WDT ^ arg1 false_start
your PRP as ^ false_start
your PRP your arg1 OK
brother NN brother arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
maybe RB maybe ^ OK
if IN if ^ OK
you PRP you arg0 OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
checked VBD checked predicate OK
out RP out arg_particl OK
doing VBG doing arg1 OK
some DT some arg1 OK
of IN of arg1 OK
those DT those arg1 OK
things NNS things arg1 OK
or CC or ^ OK
hooked VBD hooked predicate OK
up RP up arg_particl OK
with IN with arg1 OK
him PRP him arg1 OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
had VBD had predicate OK
some DT ^ ^ repeat
some DT some arg1 OK
exa- NNS ^ ^ repeat
samples NNS samples arg1 OK
to TO to arg1 OK
show VB show arg1 OK
that NP-1 that arg0 OK
maybe RB ^ ^ false_start
may DT may ^ OK
make MD make predicate OK
a VB a arg1 OK
difference DT difference arg1 OK

m- JJS ^ ^ repeat
m- JJS ^ ^ repeat
most JJS most ^ OK
of IN of ^ OK
my PRP my ^ OK
family NN family ^ OK
does VBZ does ^ OK
live VB live ^ OK
in IN in ^ OK
new NNP new ^ OK
york NNP york ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
may- RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
w- WRB ^ ^ repeat
where WRB where ^ OK
your PRP your ^ OK
family NN family ^ OK
is VBZ is ^ OK

if ADVP-LOC- PRD-1 if ^ OK
they IN they ^ OK
're PRP 're ^ OK
all VBP all ^ OK
in DT in ^ OK
connecticut IN connecticut ^ OK
or NNP or ^ OK
if CC if ^ OK
they IN they ^ OK
live PRP live ^ OK
in VBP in ^ OK
other IN other ^ OK
places JJ places ^ OK

but CC but ^ OK
if IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
live VBP live ^ OK
in IN in ^ OK
connecticut NNP connecticut ^ OK
the- XX then ^ false_start
you PRP you ^ OK
probably RB probably ^ OK
get VBP get ^ OK
to TO to ^ OK
see VB see ^ OK
all DT all ^ OK
of IN of ^ OK
them PRP them ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
at IN at ^ OK
christmas NNP christmas ^ OK
time NN time ^ OK

they PRP they ^ OK
say VBP say ^ OK
it PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ false_start
it PRP ^ ^ false_start
country NN ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
you NP-1 ^ ^ filler
know PRP ^ ^ filler
you XX ^ ^ filler
know PRP ^ ^ filler
everything VBP ^ ^ false_start
about NN ^ ^ false_start
it IN ^ ^ false_start
you PRP ^ ^ false_start
know PRP ^ ^ false_start
what VBP ^ ^ false_start
i WP ^ ^ false_start
'm PRP ^ ^ false_start
saying VBP country ^ false_start
's BES is ^ OK
really RB really ^ OK
beautiful JJ beautiful ^ OK
the VB ^ ^ false_start
w- DT ^ ^ false_start
the VBG ^ ^ repeat
land NP-2 ^ ^ repeat

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
they NP-1 they ^ OK
say PRP say ^ OK
that VBP that ^ OK
it IN it ^ OK
's PRP 's ^ OK
such BES such ^ OK
a PDT a ^ OK
pretty DT pretty ^ OK
you JJ ^ ^ filler
know PRP ^ ^ filler
and VBP and ^ OK
beautiful CC beautiful ^ OK
place JJ place ^ OK
to NN to ^ OK
go TO go ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
know VBP know ^ OK
we PRP we ^ OK
have VBP have ^ OK
to TO to ^ OK
talk VB talk ^ OK
more RBR more ^ OK
about IN about ^ OK
christmas NNP christmas ^ OK
for IN for ^ OK
the DT the ^ OK
rest NN rest ^ OK
of IN of ^ OK
the DT the ^ OK
time NN time ^ OK

neither RB neither ^ OK
do VBP do ^ OK
i VP i ^ OK

both DT both ^ OK
of IN of ^ OK
us PRP us ^ OK
do VBP do ^ OK
like VP like ^ OK
and UH ^ ^ false_start
you CC ^ ^ filler
know PRP ^ ^ filler
christmas VBP christmas ^ OK

i- NNP ^ ^ false_start
that XX that ^ OK
's DT 's ^ OK
our BES our ^ OK
favorite PRP favorite ^ OK
holiday JJ holiday ^ OK

um UH um ^ OK
mhm UH mhm ^ OK
jul- NNP jul- ^ OK

but CC but ^ OK
christmas NNP christmas ^ OK
is VBZ is ^ OK
a DT a ^ OK
holiday NN holiday ^ OK
where WRB where ^ OK
people NNS people ^ OK
usually RB usually ^ OK
give VB give ^ OK
presents NNS presents ^ OK
or CC ^ ^ repeat
a XX ^ ^ repeat
g- XX ^ ^ repeat
g- XX ^ ^ repeat
or CC or ^ OK
receive VB receive ^ OK
presents NNS presents ^ OK

so RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
usually RB usually ^ OK
more RBR more ^ OK
fun JJ fun ^ OK
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
j- NP-1 ^ ^ false_start
because XX because ^ OK
you IN you ^ OK
g- PRP ^ ^ false_start

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
everybody NP-1 everybody ^ OK
's NN 's ^ OK
r- BES ^ ^ repeat
running VBG running ^ OK
around VBG around ^ OK
looking RB looking ^ OK
for VBG for ^ OK
a IN a ^ OK
christmas DT christmas ^ OK
gift NNP gift ^ OK
especially NN especially ^ OK
at RB at ^ OK
the IN the ^ OK
last DT last ^ OK
moment JJ moment ^ OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
if NP-1 if ^ OK
they IN they ^ OK
wait PRP wait ^ OK
it VBP ^ ^ false_start
's PRP ^ ^ false_start
so BES ^ ^ false_start
the RB the ^ OK
stores DT stores ^ OK
get NNS get ^ OK
really RB really ^ OK
s- VBP ^ ^ repeat
so RB so ^ OK
jam RB jam ^ OK
packed NN packed ^ OK

s- XX s- ^ OK
right UH right ^ OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
i- NP-1 ^ ^ false_start
you XX ^ ^ false_start
know PRP ^ ^ false_start
what VBP ^ ^ false_start
i WP ^ ^ false_start
'm PRP ^ ^ false_start
saying VBP ^ ^ false_start
so VBG ^ ^ false_start
that NP-2 ^ ^ false_start
the RB the ^ OK
city IN city ^ OK
is DT is ^ OK
so NN so ^ OK
busy VBZ busy ^ OK
during RB during ^ OK
that JJ that ^ OK
season IN season ^ OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
and NP-1 ^ ^ false_start
i CC i ^ OK
like PRP like ^ OK
it VBP it ^ OK
because PRP because ^ OK
i IN i ^ OK
'm PRP 'm ^ OK
a VBP a ^ OK
new DT new ^ OK
yorker NNP yorker ^ OK

but CC but ^ OK
you PRP you ^ OK
're VBP 're ^ OK
from IN from ^ OK
connecticut NNP connecticut ^ OK
which WDT which ^ OK
is VBZ is ^ OK
probably RB probably ^ OK
a DT a ^ OK
quieter JJ quieter ^ OK
state NN state ^ OK
than IN than ^ OK
new NNP new ^ OK
york NNP york ^ OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
so NP-1 ^ ^ false_start
you RB ^ ^ filler
know PRP ^ ^ filler
that VBP ^ ^ false_start
even IN even ^ OK
if RB if ^ OK
you IN you ^ OK
do PRP ^ ^ false_start
n't VBP ^ ^ false_start
go RB ^ ^ false_start
in VB ^ ^ false_start
or IN ^ ^ false_start
come UH come ^ OK
into VBP into ^ OK
manhattan IN manhattan ^ OK
with NNP with ^ OK
a IN a ^ OK
car DT car ^ OK
even NN even ^ OK
to RB to ^ OK
walk TO walk ^ OK
around VB around ^ OK
is RB is ^ OK
so VBZ so ^ OK
un- RB un- ^ OK

i PRP i ^ OK
would MD would ^ OK
just RB just ^ OK
say VB say ^ OK
a DT ^ ^ repeat
c- XX ^ ^ repeat
a DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a ^ OK
festive JJ ^ ^ repeat
festive JJ festive ^ OK
holiday NN ^ ^ repeat
holiday NN holiday ^ OK
where WRB where ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
get VBP get ^ OK
to TO to ^ OK
see VB see ^ OK
your PRP your ^ OK
relatives NNS relatives ^ OK
and CC and ^ OK
your PRP your ^ OK
friends NNS friends ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
say VB say ^ OK
something NN something ^ OK
where WRB where ^ OK
you PRP you ^ OK
also RB also ^ OK
give VBP give ^ OK
gifts NNS gifts ^ OK
or CC or ^ OK
get VBP get ^ OK
gifts NNS gifts ^ OK
because ADVP-TMP- 1 because ^ OK
it IN it ^ OK
's PRP 's ^ OK
always S-2 always ^ OK
nice BES nice ^ OK
to RB to ^ OK
get JJ get ^ OK
something TO something ^ OK
you VB ^ ^ false_start
know NN ^ ^ false_start
what PRP ^ ^ false_start
i VBP ^ ^ false_start
'm WP ^ ^ false_start
saying PRP ^ ^ false_start
that VBP that ^ OK
you VBG you ^ OK
've NP-3 've ^ OK
always WDT always ^ OK
wanted PRP wanted ^ OK

you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
saying VBG ^ ^ false_start
and NP-1 ^ ^ false_start
you CC ^ ^ filler
know PRP ^ ^ filler
christmas VBP christmas ^ OK
time NNP time ^ OK
usually NN usually ^ OK
you RB you ^ OK
get PRP get ^ OK
things VBP things ^ OK
that NNS that ^ OK
you WDT ^ ^ repeat
you PRP you ^ OK
need PRP need ^ OK
or VBP or ^ OK
you NP-2 you ^ OK
're CC 've ^ false_start
really PRP really ^ OK
wanted VBP wanted ^ OK

so RB ^ ^ false_start
i PRP i ^ OK
would MD would ^ OK
make VB make ^ OK
a DT a ^ OK
holiday NN holiday ^ OK
where WRB where ^ OK
people NNS people ^ OK
get VBP get ^ OK
to TO to ^ OK
come VB come ^ OK
together RB together ^ OK
and ADVP-TMP- 2 and ^ OK
s- VB ^ ^ repeat
be CC ^ ^ false_start
spend VB spend ^ OK
time VB time ^ OK
with NN with ^ OK
each IN each ^ OK
other DT other ^ OK
and JJ and ^ OK
exchange ADVP-TMP- 2 exchange ^ OK
gifts CC gifts ^ OK
also VB also ^ OK

i UNK ^ ^ repeat
i UNK i ^ OK
would UNK ^ ^ repeat
would UNK would ^ OK
just UNK ^ ^ repeat
just UNK just ^ OK
say UNK say ^ OK
it UNK it ^ OK
just UNK just ^ OK
to UNK to ^ OK
celebrate UNK celebrate ^ OK
um UNK ^ ^ filler

i PRP i arg0 OK
think VBP think predicate OK
media NNS media arg0 OK
coverage NN coverage arg0 OK
has VBZ has arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
to TO to arg1 OK
do VB do arg1 OK
with IN with arg1 OK
people NNS people arg0 OK
thinking VBG thinking arg1 OK
that IN that arg1 OK
there EX there arg1 OK
's BES are arg1 false_start
more JJR more arg1 OK
things NNS things arg1 OK
wrong JJ wrong arg1 OK
with IN with arg1 OK
s- NNS ^ ^ repeat
schools NNS schools arg1 OK
than IN than arg2 OK
there EX there arg2 OK
really RB really arg2 OK
are VBP are arg2 OK
i NP-PRD ^ ^ false_start
guess PRP ^ predicate false_start

like UH ^ ^ filler
after IN after ^ OK
all PDT all ^ OK
the DT the ^ OK
the DT _ARG_ ^ false_start

but CC but ^ OK
i- PRP ^ ^ false_start

pe- XX ^ ^ false_start
uh UH ^ ^ filler
do VBP do ^ OK
you PRP you ^ OK

what WP what arg0 OK
do VBP do ^ OK
think VB _ARG_ ^ false_start
think VB think predicate OK
about IN about arg1 OK
like UH ^ ^ filler
private JJ private arg1 OK
schools NNS schools arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ false_start
churche- NNS ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

or CC ^ ^ false_start
like UH ^ ^ filler
how WRB ^ ^ false_start
what WP what arg1 OK
's BES 's predicate OK
wrong JJ wrong arg2 OK
with IN with arg2 OK
the DT the arg2 OK
schools NNS schools arg2 OK
in IN in arg2 OK
california NNP california arg2 OK

is VBZ is ^ OK
that DT that ^ OK
because IN because ^ OK
they PRP they arg0 OK
're VBP 're ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
building VBG building predicate OK
it PRP it arg1 OK
around IN around ^ OK
like UH ^ ^ filler
a DT ^ ^ false_start
standardized JJ standardized ^ OK
testing NN testing ^ OK
or CC or ^ OK
something NN ^ ^ false_start
like UH ^ ^ false_start
the DT the ^ OK
curriculum NN curriculum ^ OK

so UH ^ ^ false_start
what WP what arg1 OK
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
think VB think predicate OK
they PRP they arg0 OK
could MD could ^ OK
do VB do ^ OK
like UH ^ ^ filler
to TO to ^ OK
fix VB fix predicate OK
it PRP it arg1 OK

i PRP i arg1 false_start
guess VBP guess predicate false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
like UH ^ ^ filler
other RB ^ ^ false_start
than IN ^ ^ false_start
just RB ^ ^ repeat
just RB ^ ^ false_start
straight JJ straightening predicate false_start
up RB up arg1 OK
funding NN funding arg1 OK
is VBZ is arg1 OK
the DT the arg0 OK
only JJ only arg0 OK
way NN way arg0 OK
you PRP you arg0 OK
can MD can argM_mod OK
really RB really argM_extent OK
fix VB fix arg2 OK
your PRP ^ ^ repeat
or CC ^ ^ false_start
your PRP your arg1 OK
california NNP california ^ false_start
public JJ public arg1 OK
schools NNS ^ ^ repeat
schools NNS schools arg1 OK
there RB ^ ^ false_start

but CC ^ ^ false_start
it PRP it ^ OK
seems VBZ seems predicate OK
like IN like arg1 OK
our PRP our arg0 OK
school NN school arg0 OK
's BES 's arg1 OK
always RB always argM_extent OK
buying VBG buying arg1 OK
like UH ^ ^ filler
new JJ ^ ^ repeat
er UH ^ ^ filler
new JJ new arg1 OK
tech- NN ^ ^ repeat
like UH ^ ^ filler
technology NN technology arg1 OK
things NNS ^ ^ false_start

is VBZ is predicate OK
that DT ^ ^ repeat
that DT that arg1 OK
kind RB ^ arg2 false_start
of RB ^ arg2 false_start
a DT a arg2 OK
problem NN problem arg2 OK

i PRP ^ ^ repeat
i PRP i ^ OK
wou- MD ^ ^ repeat
would MD would ^ OK
n't RB n't ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
probably RB probably ^ OK
would MD would ^ OK
'd MD ^ ^ repeat
n't RB n't ^ OK
either RB either ^ OK
if IN if ^ OK
if IN _ARG_ ^ false_start

so UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
might MD might argM_mod OK
take VB take predicate OK
it PRP it arg1 OK
and CC and ^ OK
go VB go predicate OK
live VB live arg1 OK
in IN in argM_loc OK
italy NNP italy argM_loc OK

but CC but argM_discou OK
only RB only argM_discou OK
with IN with argM_discou OK
the DT the argM_discou OK
eh UH ^ ^ filler
stipulation NN stipulation argM_discou OK
that IN that argM_discou OK
i PRP i arg1 OK
could MD could argM_mod OK
return VB return predicate OK
every DT every argM_tmp OK
once RB once argM_tmp OK
in IN in argM_tmp OK
a DT a argM_tmp OK
while NN while argM_tmp OK

it PRP it arg1 OK
's BES 's predicate OK
completely RB a ^ false_start
completely RB completely arg2 OK
different JJ ^ ^ repeat
different JJ different arg2 OK
culture NN culture arg2 OK

and CC ^ ^ false_start
so RB ^ ^ filler
i PRP ^ ^ false_start
that DT that arg1 OK
would MD would argM_mod OK
be VB be predicate OK
one CD one arg0 OK
thing NN thing arg0 OK
that WDT that arg0 OK
kept VBD kept arg2 OK
me PRP me arg1 OK
home RB home argM_loc OK

well UH ^ ^ filler
i- PRP ^ ^ repeat
well UH ^ ^ filler
if IN ^ ^ false_start
i PRP ^ ^ false_start
i PRP i arg0 OK
speak VBP speak predicate OK
italian NNP italian arg1 OK

so UH ^ ^ filler
it PRP ^ ^ repeat
's BES ^ ^ repeat
uh UH ^ ^ filler
so UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
that DT that arg1 OK
would MD would argM_mod OK
n't RB n't argM_neg OK
be VB be predicate OK
as RB as arg2 OK
hard JJ hard arg2 OK

uh UH ^ ^ filler
well UH ^ ^ filler
i PRP i arg0 OK
was VBD was ^ OK
going VBG going argM_mod OK
to TO to argM_mod OK
say VB say predicate OK
i PRP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ false_start
'd MD ^ ^ repeat
'd MD 'd argM_mod OK
miss VB ^ ^ repeat
miss VB miss arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
f- NN ^ ^ repeat
food NN food arg1 OK

so UH ^ ^ filler
but CC ^ ^ false_start
i PRP ^ ^ repeat
would MD ^ ^ repeat
i PRP i arg0 OK
would MD would argM_mod OK
miss VB miss predicate OK
the DT ^ ^ false_start
uh UH ^ ^ filler
th- DT ^ ^ false_start
some DT some arg1 OK
of IN of arg1 OK
the DT the arg1 OK
patriotism NN patriotism arg1 OK

i PRP i argM_discou OK
'd MD 'd argM_mod OK
miss VB miss predicate OK
um UH ^ ^ filler
al- PDT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all arg1 OK
my PRP my arg1 OK
friends NNS friends arg1 OK
here RB here argM_loc OK
but CC but argM_discou OK
uh UH ^ ^ filler
just RB ^ ^ false_start
the DT also ^ false_start
the DT the arg1 OK
freedom NN freedom arg1 OK
tha- WDT ^ ^ repeat
th- WDT ^ ^ repeat
that WDT that arg1 OK
's BES 's predicate OK
here RB here arg2 OK

in IN in argM_loc false_start
italy NNP italy argM_loc false_start
they PRP ^ ^ repeat
they PRP they arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
that DT ^ ^ repeat
that DT that arg1 OK
too RB too argM_discou OK
but CC but argM_discou OK
uh UH ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
quite PDT quite arg2 OK
the DT the arg2 OK
same JJ same arg2 OK

i PRP ^ ^ false_start
'd MD ^ ^ false_start
well UH ^ ^ filler
eh UH ^ ^ filler
there EX there arg1 OK
are VBP are predicate OK
n't RB n't argM_neg OK
very RB very arg2 OK
many JJ many arg2 OK
fast JJ fast arg2 OK
food NN food arg2 OK
restaurants NNS restaurants arg2 OK
in IN in arg2 OK
italy NNP italy arg2 OK

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
n't RB n't argM_neg OK
l- XX ^ ^ repeat
like VB like predicate OK
fast JJ fast arg1 OK
food NN food arg1 OK

so RB ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
w- MD ^ ^ repeat
would MD would argM_mod OK
n't RB n't argM_neg OK
miss VB miss predicate OK
that DT that arg1 OK

e- VB ^ ^ repeat
explain VB explain predicate OK
what WP what arg1 OK
you PRP you arg0 OK
mean VBP mean arg1 OK
by IN by argM_mnr OK
hypocrisy NN hypocrisy argM_mnr OK

i PRP i arg0 OK
think VBP think predicate OK
they PRP ^ ^ false_start
have VBP ^ ^ false_start
the DT ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
best JJS best arg1 OK
government NN government arg1 OK
that WDT that arg1 OK
exists VBZ exists arg2 OK
even RB even argM_adverb OK
though IN though argM_adverb OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg2 OK
no- RB ^ ^ repeat
not RB not argM_neg OK
perfect JJ perfect arg2 OK

and CC ^ ^ false_start
there EX ^ ^ repeat
there EX there arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
hypocrisy NN hypocrisy arg2 OK

uh UH ^ ^ filler
but CC ^ ^ false_start
i PRP ^ ^ false_start
it PRP ^ ^ repeat
eh UH ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
's S-1 's predicate OK
nice BES nice arg2 OK
to JJ to arg2 OK
have TO have arg2 OK
uh VB ^ ^ filler
new UH new arg1 OK
leadership JJ leadership arg1 OK
every NN every argM_tmp OK
four DT four argM_tmp OK
years CD years argM_tmp OK
or CC or arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
at RB at argM_extent OK
least RB least argM_extent OK
a DT ^ ^ repeat
an DT an arg1 OK
election NN election arg1 OK
every DT every argM_tmp OK
four CD four argM_tmp OK
years NNS years argM_tmp OK
and CC ^ ^ false_start
with IN with argM_mnr OK
the DT the argM_mnr OK
uh UH ^ ^ filler
understanding NN understanding argM_mnr OK
that IN that argM_mnr OK
he PRP he arg0 OK
wo MD wo argM_mod OK
n't RB n't argM_neg OK
have VB have argM_mnr OK
more JJR more argM_extent OK
than IN than argM_extent OK
eight CD eight arg1 OK
years NNS years arg1 OK
in IN in arg1 OK
office NN office arg1 OK

there RB there ^ OK
there RB are arg1 false_start
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
countries NNS countries arg0 OK
tha- WDT ^ ^ repeat
that WDT that arg0 OK
uh UH ^ ^ filler
either RB either argM_adverb OK
have VB have arg2 OK
dictators NNS dictators arg1 OK
or CC or arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
yo- XX ^ ^ false_start
eh UH ^ ^ filler
leaders NNS leaders arg1 OK
that WDT that arg1 OK
are VBP are arg1 OK
there RB there arg2 OK
for IN for arg2 OK
life NN life arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
would MD would argM_mod OK
n't RB n't argM_neg OK
like VB like predicate OK
that DT that arg1 OK

eh UH ^ ^ filler
one CD ^ ^ false_start
thing NN ^ ^ false_start
i PRP ^ ^ false_start
would MD ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK

um UH ^ ^ filler
but CC ^ ^ false_start
one CD one arg1 OK
thing NN thing arg1 OK
i PRP i arg1 OK
would MD would arg1 OK
like VB like arg1 OK
is NP-2 is predicate OK
uh VBZ ^ ^ filler
to UH to arg2 OK
have TO have arg2 OK
a VB a arg1 OK
direct DT direct arg1 OK
say JJ say arg1 OK
instead NN instead argM_purpos OK
of IN of argM_purpos OK
just IN just argM_adverb OK
an RB ^ ^ repeat
an DT an arg0 OK
elected DT elected arg0 OK
person JJ person arg0 OK
who NN who arg0 OK
speaks WP speaks argM_purpos OK
for VBZ for argM_purpos OK
me IN me argM_purpos OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
sure JJ sure arg2 OK
of IN ^ ^ repeat
of IN of arg2 OK
a DT ^ ^ repeat
a DT a arg0 OK
country NN country arg0 OK
that WDT that arg0 OK
has VBZ has arg2 OK
exactly RB exactly argM_adverb OK
that DT that arg1 OK

but CC ^ ^ false_start
um UH ^ ^ filler
but CC but ^ OK
anyway UH ^ ^ filler

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
think VB think predicate OK
there EX there arg1 OK
's BES 's arg1 OK
anything NN anything arg1 OK
else RB else arg1 OK
that WDT that arg1 OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would argM_mod OK
miss VB miss arg2 OK

eh UH ^ ^ filler
uh UH ^ ^ filler
a- RB ^ ^ repeat
also RB also argM_discou OK
one CD one arg1 OK
thing NN thing arg1 OK
that WDT that arg1 OK
i PRP i arg1 OK
would MD would arg1 OK
definitely RB definitely arg1 OK
miss VB miss arg1 OK
is NP-1 is predicate OK
the VBZ the arg2 OK
fact DT fact arg2 OK
that NN that arg2 OK
anybody IN ^ ^ repeat
anybody NN anybody arg0 OK
in NN in arg0 OK
the IN the arg0 OK
country DT country arg0 OK
can NN can argM_mod OK
get MD get arg2 OK
a VB a arg1 OK
college DT college arg1 OK
education NN education arg1 OK
now NN now argM_tmp OK

really RB ^ argM_loc false_start
if IN if argM_adverb OK
you PRP you argM_adverb OK
have VBP have argM_adverb OK
the DT the argM_adverb OK
money NN money argM_adverb OK
you PRP you arg0 OK
can MD can argM_mod OK
get VB get predicate OK
an DT an arg1 OK
education NN education arg1 OK
most JJS in ^ false_start
um UH ^ ^ filler
eh UH ^ ^ filler
i- XX ^ ^ false_start
ther- XX ^ ^ false_start
most JJS most argM_loc false_start
countries NNS countries argM_loc false_start

if IN if argM_adverb OK
not RB not argM_neg OK
there EX there arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
a- RB ^ ^ repeat
as RB as argM_extent OK
much JJ much argM_extent OK
government NN government argM_extent OK
assistance NN assistance argM_extent OK
as IN as argM_extent OK
there EX there arg1 OK
is VBZ is arg2 OK
here RB here arg2 OK

they PRP they arg1 OK
have VBP have argM_mod OK
to TO to argM_mod OK
choose VB choose predicate OK
by IN ^ ^ false_start
middle JJ ^ ^ false_start
age NN ^ ^ false_start
my PRP ^ ^ false_start
by IN by argM_tmp OK
uh UH ^ ^ filler
middle JJ middle argM_tmp OK
school NN school argM_tmp OK
age NN age argM_tmp OK
to TO to ^ OK
uh UH ^ ^ filler
to TO _ARG_ arg1 false_start

are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 OK
the DT the arg2 OK
east NNP east arg2 OK
of CC or arg2 false_start
from IN from arg2 OK
the DT the arg2 OK
west NNP west arg2 OK

i PRP ^ ^ repeat
actually UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP ^ ^ repeat
've VBP ^ ^ repeat
've VBP 've ^ OK
never RB ^ ^ repeat
uh UH ^ ^ filler
never RB never argM_neg OK
been VBN been predicate OK
down IN down arg2 OK
there RB there arg2 OK

but CC ^ ^ false_start
eh UH ^ ^ filler
i PRP i arg0 OK
have VBP have predicate OK
lots NNS lots arg1 OK
of IN of arg1 OK
friends NNS friends arg1 OK
that WDT that arg1 OK
are VBP are arg1 OK
from IN from arg2 OK
there RB there arg2 OK

he PRP he ^ OK
kicks VBZ ^ ^ repeat
kicks VBZ kicks ^ OK
back RB ^ ^ repeat
back RB back ^ OK
and CC and ^ OK
relaxes VBZ relaxes ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK
with IN with ^ OK
a DT a ^ OK
cigarette NN cigarette ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
very RB very ^ OK
sensitive JJ sensitive ^ OK
to IN to ^ OK
the DT the ^ OK
smell NN smell ^ OK
and CC ^ ^ repeat
and CC and ^ OK
i- XX ^ ^ false_start
to IN to ^ OK
all PDT all ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
stuff NN stuff ^ OK

so UH ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
if IN if ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
can MD ^ ^ repeat
can MD can ^ OK
whiff VB whiff ^ OK
of IN ^ ^ false_start
it PRP it ^ OK
in IN in ^ OK
a DT a ^ OK
restaurant NN restaurant ^ OK
it PRP it ^ OK
really RB really ^ OK
bothers VBZ bothers ^ OK
me PRP me ^ OK
and CC and ^ OK
bothers VBZ bothers ^ OK
my PRP my ^ OK
eyes NNS eyes ^ OK

at IN at ^ OK

uh UH ^ ^ filler
my PRP my ^ OK
g- XX g- ^ OK
yeah UH ^ ^ filler

i PRP i ^ OK
work VBP work ^ OK
at IN at ^ OK
a DT ^ ^ repeat
a DT a ^ OK
large JJ large ^ OK
m- NN ^ ^ repeat
mortgage NN mortgage ^ OK
company NN company ^ OK

and CC and ^ OK
uh UH uh ^ OK

and CC ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
walk VBP walk ^ OK
out IN out ^ OK
the DT the ^ OK
door NN door ^ OK
and CC and ^ OK
you PRP you ^ OK
just RB just ^ OK
walk VBP walk ^ OK
through IN through ^ OK
it PRP it ^ OK
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
like IN like ^ OK
walking VBG walking ^ OK
through IN through ^ OK
clouds NNS clouds ^ OK
of IN of ^ OK
smoke NN smoke ^ OK
to TO to ^ OK
get VB get ^ OK
to IN to ^ OK
your PRP your ^ OK
car NN car ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i- XX ^ ^ false_start
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
any DT any ^ OK
rights NNS rights ^ OK

uh UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what NN ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
causes VBZ causes ^ OK
cancer NN cancer ^ OK

my PRP ^ ^ repeat
my PRP my ^ OK
father NN father ^ OK
had VBD had ^ OK
cancer NN cancer ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
i- PRP ^ ^ false_start
they PRP ^ ^ repeat
i- PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- XX ^ ^ false_start
they PRP they ^ OK
know VBP know ^ OK
that IN that ^ OK
eh UH ^ ^ filler
it PRP it ^ OK
causes VBZ causes ^ OK
bladder NN bladder ^ OK
cancer NN cancer ^ OK
and CC and ^ OK
different JJ different ^ OK
types NNS types ^ OK
of IN of ^ OK
things NNS things ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
breathing VBG breathing ^ OK
it PRP it ^ OK
in RB in ^ OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
your PRP your ^ OK
rights NNS rights ^ OK
stop VBP stop ^ OK
when WRB when ^ OK
you PRP you ^ OK
're VBP 're ^ OK
affecting VBG affecting ^ OK
other JJ other ^ OK
people NNS people ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
see VBP see ^ OK
your PRP your ^ OK
point NN point ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
life NN ^ ^ repeat
life NN life ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
gray JJ gray ^ OK
areas NNS areas ^ OK

and CC ^ ^ false_start
life NN life ^ OK
is VBZ is ^ OK
a DT a ^ OK
m- NN ^ ^ repeat
matter NN matter ^ OK
of IN of ^ OK
choices NNS choices ^ OK

i PRP ^ ^ false_start
guess VBP ^ ^ false_start
it PRP it ^ OK
is VBZ is ^ OK
more RBR ^ ^ repeat
more RBR more ^ OK
of IN of ^ OK
a DT a ^ OK
complicated JJ ^ ^ repeat
complicated JJ complicated ^ OK
issue NN issue ^ OK
than IN than ^ OK
at IN at ^ OK
first RB first ^ OK
it PRP it ^ OK
seems VBZ seems ^ OK
to TO to ^ OK
be VB be ^ OK

but CC but ^ OK
we PRP ^ ^ repeat
we PRP we ^ OK
t- VBD ^ ^ repeat
talked VBD talked ^ OK
a DT a ^ OK
little JJ little ^ OK
about IN about ^ OK
the DT the ^ OK
topic NN topic ^ OK

i PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
funny JJ funny ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
keep VBP keep ^ OK
hearing VBG hearing ^ OK
about IN about ^ OK
california NNP california ^ OK
california NNP ^ ^ false_start
san NNP and ^ false_start
san NNP san ^ OK
diego NNP diego ^ OK
diego NNP ^ ^ false_start
san NNP and ^ false_start
san NNP san ^ OK
francisco NNP francisco ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
just RB just ^ OK
toying VBG toying ^ OK
around RB around ^ OK
with IN with ^ OK
the DT the ^ OK
idea NN idea ^ OK
of IN of ^ OK
possibly RB possibly ^ OK
relocating VBG relocating ^ OK

just RB ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
heard VBD heard ^ OK
that IN that ^ OK
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
more RBR more ^ OK
naturally RB naturally ^ OK
beautiful JJ beautiful ^ OK
and CC and ^ OK
just RB just ^ OK
a DT a ^ OK
nicer JJR nicer ^ OK
way NN way ^ OK
of IN of ^ OK
living NN living ^ OK
out IN out ^ OK
there RB there ^ OK

what WP ^ ^ repeat
i- XX ^ ^ repeat
what WP what ^ OK
do VBP do ^ OK
you PRP you ^ OK
think VB think ^ OK

well UH ^ ^ false_start
what WP ^ ^ repeat
what WP what ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
have VB have ^ OK
to TO to ^ OK
say VB say ^ OK
about IN about ^ OK
l. NNP l. ^ OK
a. NNP a. ^ OK
and CC and ^ OK
that DT that ^ OK
area NN area ^ OK

the DT ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
the DT the ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
over IN over ^ OK
the DT the ^ OK
weekend NN weekend ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
w- XX ^ ^ repeat
was VBD was ^ OK
up RB up ^ OK
in IN in ^ OK
manhattan NNP manhattan ^ OK
at IN at ^ OK
the DT the ^ OK
the DT ^ ^ repeat
big JJ big ^ false_start
san NNP san ^ OK
gennaro NNP gennaro ^ OK
italian JJ italian ^ false_start
festival NNP festival ^ OK
festival NN ^ ^ repeat

and CC ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
can MD can ^ OK
drive VB drive ^ OK
to IN to ^ OK
the DT the ^ OK
shore NN shore ^ OK
to IN or ^ false_start
to IN to ^ OK
philly NNP philly ^ OK
to IN or ^ false_start
to IN to ^ OK
new NNP new ^ OK
york NNP york ^ OK
to IN or ^ false_start
to IN to ^ OK
d. NNP d. ^ OK
c. NNP c. ^ OK

so UNK ^ ^ false_start
that UNK that ^ OK
's UNK 's ^ OK
the UNK the ^ OK
the UNK the ^ OK
only UNK only ^ OK
thing UNK thing ^ OK
i UNK i ^ OK
was UNK was ^ OK
kind UNK kind ^ OK
of UNK of ^ OK
concerned UNK concerned ^ OK
about UNK about ^ OK
is UNK is ^ OK
that UNK that ^ OK
i UNK ^ ^ repeat
d- UNK ^ ^ false_start
i UNK i ^ OK
just UNK just ^ OK
heard UNK heard ^ OK
that UNK that ^ OK
there UNK there ^ OK
's UNK 's ^ OK
just UNK ^ ^ false_start
i UNK ^ ^ false_start
guess UNK ^ ^ false_start
less UNK less ^ OK

uh UH ^ ^ filler
jus- RB ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
goes VBZ goes ^ OK
by IN by ^ OK
the DT the ^ OK
income NN income ^ OK
of IN of ^ OK
your PRP your ^ OK
family NN family ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
know VBP know ^ OK
i- PRP i- ^ OK

i PRP i ^ OK
know VBP know ^ OK
um UH ^ ^ filler
uh UH ^ ^ filler
i PRP i ^ OK
se- VBP se- ^ OK

i PRP i ^ OK
sent VBD sent ^ OK
two CD ^ ^ repeat
two CD two ^ OK
children NNS children ^ OK
through IN ^ ^ repeat
through IN through ^ OK
school- NN ^ ^ repeat
college NN college ^ OK

uh UH ^ ^ filler
they PRP they ^ OK
wen- VBD wen- ^ OK

uh UH ^ ^ filler
no UH no ^ OK
they PRP they ^ OK

ah UH ^ ^ filler
uh UH ^ ^ filler
back RB back ^ OK
then RB then ^ OK
it PRP it ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
uh UH ^ ^ filler
like UH ^ ^ filler
twenty-seven CD twenty-seven ^ OK
thousand CD thousand ^ OK
a DT a ^ OK
year NN year ^ OK

believe VB believe ^ OK
it PRP it ^ OK
or CC or ^ OK
not RB not ^ OK
i PRP i ^ OK
retired VBD retired ^ OK
the DT the ^ OK
first JJ first ^ OK
of IN of ^ OK
the DT the ^ OK
year NN year ^ OK

i PRP i ^ OK
m- XX m- ^ OK

my PRP ^ ^ repeat
my PRP my ^ OK
son NN son ^ OK
started VBD started ^ OK
out RP out ^ OK
as IN as ^ OK
an DT an ^ OK
engineering NN engineering ^ OK
student NN student ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
took VBD took ^ OK
an DT an ^ OK
n. NN ^ ^ repeat
r. NN r. ^ OK
o. NN o. ^ OK
t. NN t. ^ OK
c. NN c. ^ OK
g- XX ^ ^ false_start
uh UH ^ ^ filler
scholarship NN scholarship ^ OK
for IN for ^ OK
a DT a ^ OK
year NN year ^ OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
he PRP ^ ^ repeat
he PRP he ^ OK
paid VBD paid ^ OK
for IN for ^ OK
a DT a ^ OK
semester NN semester ^ OK

but CC but ^ OK
he PRP ^ ^ repeat
uh UH ^ ^ filler
he PRP he ^ OK
had VBD had ^ OK
a DT a ^ OK
job NN job ^ OK
in IN in ^ OK
uh UH ^ ^ filler
some DT some ^ OK
big JJ big ^ OK
restaurant NN restaurant ^ OK

he PRP he ^ OK
's BES 's ^ OK

trades VBZ ^ ^ false_start
st- NNS ^ ^ false_start
day NN day ^ OK
trader NN trader ^ OK

yeah UNK ^ ^ repeat
yeah UNK yeah ^ OK

uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
other JJ other ^ OK
pro- NN pro- ^ OK

what WP ^ ^ repeat
what WP ^ ^ repeat
what WDT what ^ OK
kind NN kind ^ OK
of IN of ^ OK
movies NNS movies ^ OK
do VBP do ^ OK
we PRP we ^ OK
like VB like ^ OK

i PRP ^ ^ false_start
says VBZ ^ ^ false_start
well UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
go VB go ^ OK
to IN to ^ OK
the DT the ^ OK
movies NNS movies ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
w- VBD ^ ^ repeat
watch VBP watch ^ OK
pay VB pay ^ OK
per IN per ^ OK
view NN view ^ OK

i PRP i ^ OK
wa- VBP ^ ^ repeat
wait VBP wait ^ OK
till IN till ^ OK
they PRP they ^ OK
come VBP come ^ OK
on IN on ^ OK
that DT that ^ OK

uh UH ^ ^ filler
the DT the ^ OK
last JJ last ^ OK
movie NN movie ^ OK
i PRP i ^ OK
went VBD went ^ OK
to TO to ^ OK
see VB see ^ OK
was NP-2 was ^ OK
the VBD the ^ OK
horse DT horse ^ OK
whisperer NN whisperer ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
made VBD ^ ^ repeat
made VBD made ^ OK
a DT ^ ^ repeat
a DT a ^ OK
lot NN ^ ^ repeat
lot NN lot ^ OK
of IN ^ ^ repeat
of IN of ^ OK
money NN ^ ^ repeat
money NN money ^ OK
on IN on ^ OK
it PRP it ^ OK

uh UH ^ ^ filler
i PRP i ^ OK

you PRP ^ ^ repeat
you PRP you ^ OK
know VBP ^ ^ repeat
know VBP know ^ OK
where WRB ^ ^ repeat
where WRB where ^ OK
creskill NNP creskill ^ OK
is VBZ is ^ OK

how WRB ^ ^ repeat
how WRB how ^ OK
did VBD did ^ OK
you PRP you arg0 OK
do VB do predicate OK
that DT that arg1 OK
at IN at argM_tmp OK
that DT that argM_tmp OK
time NN time argM_tmp OK

how WRB how arg2 OK
long RB long arg2 OK
does VBZ does ^ OK
it PRP it ^ OK
take S-1 take predicate OK
to VB ^ ^ repeat
to TO to arg1 OK
do TO do arg1 OK
that VB that arg1 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
can MD ^ ^ repeat
can MD ^ ^ repeat
can MD can ^ OK
understand VB understand predicate OK
that DT that arg1 OK
argument NN argument arg1 OK

so UH ^ ^ false_start
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
hard JJ hard arg2 OK

but CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
good JJ good arg2 OK
thing NN thing arg2 OK

i PRP i arg0 false_start
think VBP think predicate false_start
boston NNP boston arg0 OK
here RB ^ ^ false_start
recently RB recently argM_tmp OK
banned VBD banned arg1 OK
that DT that arg1 OK
kind NN ^ ^ false_start
of IN ^ ^ false_start
thing NN ^ ^ false_start
in IN in argM_loc OK
all DT all argM_loc OK
of IN ^ ^ false_start
the DT the argM_loc OK
bars NNS bars argM_loc OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
nightclubs NNS nightclubs argM_loc OK
and CC and argM_loc OK
restaurants NNS restaurants argM_loc OK

but CC ^ ^ false_start
there EX ^ ^ false_start
are VBP ^ ^ false_start
a DT a arg0 OK
few JJ few arg0 OK
bars NNS bars arg0 OK
that WDT ^ ^ false_start
ah UH ^ ^ filler
had VBD had ^ OK
applied VBN applied predicate OK
for IN for arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a arg1 OK
specific JJ specific arg1 OK
smoking NN smoking arg1 OK
license NN license arg1 OK
before IN before argM_tmp OK
that DT that argM_tmp OK
ban NN ban arg0 OK
took VBD took argM_tmp OK
effect NN effect arg1 OK

but CC ^ ^ false_start
ah UH ^ ^ filler
ah UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
have VBP ^ ^ repeat
have VB have ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
heard VBN heard predicate OK
any DT any arg1 OK
more JJR more arg1 OK
about IN about arg1 OK
those DT those arg1 OK
programs NNS programs arg1 OK

it PRP it arg1 false_start
seems VBZ seems predicate false_start
you PRP ^ ^ repeat
yeah UH ^ ^ filler
you PRP ^ ^ repeat
you PRP you arg0 OK
're VBP ^ ^ repeat
're VBP ^ ^ repeat
're VBP 're arg2 OK
preaching VBG preaching arg2 OK
to IN to argM_other OK
the DT the argM_other OK
wrong JJ wrong argM_other OK
people NNS people argM_other OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
like IN ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
they PRP ^ ^ false_start
they PRP ^ ^ false_start
know VBP ^ ^ false_start
a DT ^ ^ false_start
lo- NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
everybody NN everybody arg0 OK
knows VBZ knows predicate OK
the DT the arg1 OK
risk NN risk arg1 OK
by IN by argM_tmp false_start
now RB now argM_tmp false_start

but CC ^ ^ false_start
they PRP they arg0 OK
just RB ^ ^ false_start
decided VBD decided predicate OK
that IN that ^ OK
it PRP it arg1 OK
's BES 's arg1 OK
worth JJ worth arg2 OK
it PRP it arg2 OK
to IN to arg1 OK
them PRP them arg1 OK

i PRP i ^ OK
kno- VBP kno- ^ OK

i PRP ^ ^ false_start
know VBP ^ ^ false_start
well UH ^ ^ filler
actually UH ^ ^ false_start
um UH ^ ^ filler
one CD one argM_loc OK
airport NN airport argM_loc OK
i PRP i arg1 OK
frequently RB frequently argM_adverb OK
fly VBP fly predicate OK
through IN through argM_dir OK

um NP-1 ^ ^ filler
kind UH ^ ^ false_start
of RB ^ ^ false_start
interesting RB ^ ^ false_start
it JJ ^ ^ false_start
it PRP it arg1 OK
's PRP 's predicate OK
a BES a arg2 OK
small DT small arg2 OK
airport JJ airport arg2 OK

um UH ^ ^ filler
and CC ^ ^ false_start
they PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when argM_tmp OK
we PRP we argM_tmp OK
went VBD went argM_tmp OK
through IN through argM_tmp OK
security NN security argM_tmp OK
it ADVP-TMP- 1 ^ ^ false_start
was PRP ^ ^ false_start
a VBD ^ ^ false_start
lot DT ^ ^ false_start
of NN ^ ^ false_start
it IN it arg1 OK
was PRP was predicate OK
actually VBD actually argM_adverb OK
elderly RB elderly arg0 OK
people JJ people arg0 OK
um NNS ^ ^ filler
manning UH manning arg2 OK
the VBG the arg1 OK
security DT security arg1 OK

that WDT ^ ^ false_start
you PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
then RB then argM_adverb OK
she PRP she arg0 OK
's BES ^ ^ false_start
like RP said predicate false_start
oh UH ^ ^ filler
oh UH ^ ^ filler
wait VB wait arg1 OK
a DT a argM_tmp OK
minute NN minute argM_tmp OK

and CC ^ ^ repeat
and CC ^ ^ false_start
she PRP she arg1 OK
just RB just argM_adverb OK
seemed VBD seemed predicate OK
flustered JJ flustered arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
was VBD was ^ OK
thinking VBG thinking predicate OK
hm UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if argM_adverb OK
they PRP they arg0 OK
had VBD had argM_mod OK
to TO to argM_mod OK
stop VB stop arg1 OK
someone NN someone arg1 OK
what WP what arg1 OK
would MD would argM_mod OK
happen VB happen arg1 OK

but CC ^ ^ false_start
there EX there arg1 OK
were VBD were predicate OK
police NN police arg1 OK
sitting VBG sitting arg2 OK
up IN up argM_dir OK
um UH ^ ^ filler
on IN on argM_loc OK
a DT a argM_loc OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
pedestal NN pedestal argM_loc OK
area NN area argM_loc OK

mm UH ^ ^ filler
mm UH mm ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do predicate OK
too RB too argM_discou OK

in IN in argM_discou OK
fact NN fact argM_discou OK
even RB even argM_adverb OK
before IN ^ ^ repeat
before IN before argM_tmp OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the argM_tmp OK
events NNS events argM_tmp OK
have VBP have argM_tmp OK
happened VBN happened argM_tmp OK
um UH ^ ^ filler
i PRP i arg0 OK
used VBD used argM_mod OK
to TO to argM_mod OK
think VB think predicate OK
gosh UH ^ ^ filler
no DT no arg0 OK
one NN one arg0 OK
's BES 's arg1 OK
ever RB ever argM_adverb OK
paying VBG paying arg1 OK
attention NN attention arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
the DT the ^ OK
job NN job ^ OK
was VBD was ^ OK
very RB very ^ OK
very RB _ARG_ ^ false_start

and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
if IN if argM_adverb OK
w- NNS ^ ^ repeat
wages NNS wages arg1 OK
have VBP have arg1 OK
gone VBN gone arg1 OK
up RP up argM_dir OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

an- CC an- ^ OK

well UH ^ ^ filler
actually UH ^ ^ repeat
well UH ^ ^ filler
actually RB actually argM_adverb OK
it PRP it arg1 OK
's BES 's predicate OK
interesting JJ interesting arg2 OK

um UH ^ ^ filler
when WRB ^ ^ false_start
i PRP ^ ^ false_start
traveled VBD ^ ^ false_start
actually RB ^ ^ filler
it PRP it arg1 OK
was VBD was predicate OK
the DT the arg2 OK
week NN week arg2 OK
before IN ^ ^ repeat
before RB before arg2 OK
nine CD nine arg2 false_start
eleven CD eleven arg2 false_start
um UH ^ ^ filler
when WRB when argM_tmp OK
i PRP i arg1 OK
came VBD came argM_tmp OK
back RB back arg4 OK
to IN to arg4 OK
the DT the arg4 OK
u. NNP u. arg4 OK
s. NNP s. arg4 OK
from IN from arg3 OK
china NNP china arg3 OK

um ADVP-TMP- 2 ^ ^ filler
it UH it arg1 OK
was PRP was predicate OK
interesting VBD interesting arg2 OK
because JJ because argM_cause OK
in IN in argM_loc OK
china IN china argM_loc OK
the RB the arg1 OK
airports DT airports arg1 OK
were NNS were argM_cause OK
already NNP already argM_adverb false_start
very VBD very arg2 OK
strict RB strict arg2 OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS people arg1 OK
could MD could argM_mod OK
n't RB n't argM_neg OK
come VB come predicate OK
in RB ^ arg4 false_start
to IN into ^ false_start
the DT ^ ^ repeat
the DT the arg4 OK
terminal NN terminal arg4 OK
with IN with arg2 OK
you PRP you arg2 OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
say VBP ^ ^ repeat
said VBD said predicate OK
g- UH ^ ^ repeat
goodbye UH goodbye arg1 OK
before IN before argM_tmp OK
you PRP you arg1 OK
went VBD went argM_tmp OK
through IN through argM_loc OK
security NN security argM_loc OK

and CC ^ ^ false_start
it PRP it arg1 OK
was VBD was ^ OK
like RP said predicate false_start
bye UH bye arg1 OK

um UH ^ ^ filler
and CC ^ ^ false_start
on IN on argM_tmp OK
my PRP my argM_tmp OK
way NN way argM_tmp OK
out IN out argM_tmp OK
to IN to argM_tmp OK
china NNP china argM_tmp OK
though RB ^ ^ false_start
i PRP ^ ^ false_start
well UH ^ ^ filler
my PRP my arg0 OK
luggage NN luggage arg0 OK
was VBD was ^ OK
completely RB completely argM_mnr OK
searched VBN searched predicate OK
because IN because argM_cause OK
i PRP i arg0 OK
had VBD had argM_cause OK
this DT ^ ^ repeat
this DT this arg1 OK
transformer NN transformer arg1 OK
thing NN thing arg1 OK

but CC ^ ^ false_start
it PRP it arg1 OK
was VBD was predicate OK
like UH ^ ^ filler
this DT ^ ^ false_start
a DT a arg2 OK
heavy JJ heavy arg2 OK
duty NN duty arg2 OK
one CD one arg2 OK
because IN because argM_purpos OK
um UH ^ ^ filler
we PRP we arg0 OK
use VBP use argM_cause OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
audio JJ audio arg1 OK
visual JJ visual arg1 OK
equipment NN equipment arg1 OK
in IN in arg2 OK
our PRP our arg2 OK
research NN research arg2 OK

so UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ filler
they PRP they arg0 OK
actually RB actually argM_adverb OK
had VBD had argM_mod OK
to TO to argM_mod OK
like UH ^ ^ filler
use VB use predicate OK
this DT this arg1 OK
bomb NN bomb arg1 OK
thing NN thing arg1 OK

but CC ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
i PRP i arg0 OK
have VBP have arg1 OK
n't RB n't argM_neg OK
had VBN had arg1 OK
one CD one arg1 OK
of IN of arg1 OK
those DT those arg1 OK
random JJ random arg1 OK
checks NNS checks arg1 OK

um UH ^ ^ filler
and CC ^ ^ false_start
they PRP they arg0 OK
always RB always argM_tmp OK
seem VBP seem predicate OK
to TO to arg2 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
frisk VB frisk arg2 OK
you PRP you arg1 OK
like UH ^ ^ filler
when WRB when argM_tmp OK
you PRP you arg0 OK
walk VBP walk argM_tmp OK
through RB through arg1 OK

um UH ^ ^ filler
well UH ^ ^ filler
this DT this ^ OK

r- UH ^ ^ repeat
right UH right ^ OK

so UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
um UH ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
pretty RB pretty arg2 OK
interesting JJ interesting arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
seen VBN seen predicate OK
them PRP them arg0 OK
ask VB ask arg1 OK
people NNS people arg0 OK
with IN with arg0 OK
hair NN hair arg0 OK
loss NN loss arg0 OK
to TO to arg1 OK
take VB take arg1 OK
off RP off arg_particl OK
their PRP their arg1 OK
hats NNS hats arg1 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
li- UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
find VBP find predicate OK
that DT that arg1 OK
interesting JJ interesting arg1 OK
because IN because argM_cause OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
w- MD ^ ^ repeat
would MD would argM_mod OK
you PRP you arg0 OK
ask VB ask argM_cause OK
someone NN someone arg0 OK
to TO to arg1 OK
take VB take arg1 OK
off RP off arg_particl OK
their PRP their arg1 OK
pants NNS pants arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
it PRP it arg1 OK
just RB just argM_adverb OK
seems VBZ seems predicate OK
to IN to arg2 OK
me PRP me arg2 OK
that IN that arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
maybe RB maybe arg1 OK
some DT ^ ^ false_start
need VBP with ^ false_start
some DT some arg1 OK
of IN of arg1 OK
the DT the arg1 OK
issues NNS issues arg1 OK
they PRP ^ ^ false_start
've VBP ^ ^ false_start
they PRP they arg0 OK
need VBP need arg1 OK
a DT a arg1 OK
little RB little arg1 OK
more JJR more arg1 OK
sensitivity NN sensitivity arg1 OK

i PRP i arg0 OK
always RB always argM_tmp OK
get VBP get predicate OK
nervous JJ nervous arg1 OK
just RB just argM_adverb OK
walking VBG walking arg1 OK
by RB by arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
wonder VBP wonder predicate OK
if IN if argM_adverb OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg1 OK
person NN person arg1 OK
is VBZ is arg1 OK
someone NN someone arg2 OK
they PRP they arg1 OK
would MD would argM_mod OK
be VB be arg2 OK
suspicious JJ suspicious arg2 OK
of IN of arg2 OK
or NP-1 ^ ^ false_start
whatnot CC ^ ^ false_start

it PRP ^ ^ repeat
it PRP it arg1 OK
is VBZ is predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
neat JJ neat arg2 OK

have VBP ^ ^ false_start
you PRP ^ ^ false_start
had VBN ^ ^ false_start
to TO ^ ^ false_start
um UH ^ ^ filler
have VB ^ ^ false_start
you PRP ^ ^ false_start
had VBD ^ ^ false_start
to TO ^ ^ false_start
like UH ^ ^ filler
do VBP do ^ OK
you PRP you arg0 OK
travel VB travel predicate OK
with IN with argM_mnr OK
a DT a argM_mnr OK
laptop NN laptop argM_mnr OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

i PRP i ^ OK
've VBP 've ^ OK
ha- VB ha- ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
funny JJ funny ^ OK
because IN because ^ OK
i PRP ^ ^ false_start
i PRP i ^ OK
went VBD went ^ OK
through RB through ^ OK

and CC ^ ^ false_start
this DT ^ ^ false_start
was VBD ^ ^ false_start
actually UH ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
bef- IN ^ ^ false_start
because UH ^ ^ false_start
the PRP they arg0 false_start
federalized VBD federalized predicate OK
it PRP it arg1 OK
now RB now argM_tmp OK
have VBP have ^ OK
n't RB n't argM_neg OK
they PRP they arg0 OK

this DT ^ ^ repeat
this DT this arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
a DT a arg2 OK
while NN while arg2 OK
ago RB ago arg2 OK

but CC ^ arg1 false_start
they PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i arg0 OK
had VBD had predicate OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a arg1 OK
rewritable JJ rewritable ^ false_start
rewritable JJ ^ ^ false_start
portable JJ and ^ false_start
portable JJ portable arg1 OK
c. NNP c. ^ false_start
d. NNP d. ^ false_start
drive NN ^ ^ repeat
drive NN ^ ^ false_start
one NN drive ^ false_start

i PRP i ^ false_start
think VBP think ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
uh UH ^ ^ filler
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES are ^ false_start
some DT some ^ OK
towns NNS towns ^ OK
out IN out ^ OK
in IN in ^ OK
california NNP california ^ OK
wage NN ^ ^ false_start
towns NNS where ^ false_start
the DT the ^ OK
minimum JJ minimum ^ OK
wage NN wage ^ OK
is VBZ is ^ OK
uh UH ^ ^ filler
ten CD ten ^ OK
or CC or ^ OK
twelve CD twelve ^ OK
dollars NNS dollars ^ OK
an DT an ^ OK
hour NN hour ^ OK

but CC but ^ OK
in IN in ^ OK
minnesota NNP minnesota ^ OK
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
working VBG working ^ OK
for IN for ^ OK
minimum JJ minimum ^ OK
wage NN wage ^ OK
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ false_start
that IN ^ ^ false_start

if IN if ^ OK
you PRP you ^ OK
're VBP 're ^ OK
working VBG working ^ OK
for IN for ^ OK
minimum JJ minimum ^ OK
wage NN wage ^ OK
and CC and ^ OK
the DT ^ ^ false_start
pay NN ^ ^ false_start
you PRP ^ ^ false_start
get VBP ^ ^ false_start
ca NP-1 ^ ^ false_start
n't MD ^ ^ false_start
you RB ^ ^ filler
know PRP ^ ^ filler
it VBP ^ ^ repeat
it VBZ ^ ^ repeat
it VB it ^ OK
does- PRP ^ ^ repeat
does PRP ^ ^ repeat
does PRP does ^ OK
n't VBZ ^ ^ repeat
n't VBZ n't ^ OK
help RB help ^ OK
ends VB ends ^ OK
meet RB ^ ^ repeat
meet NNS meet ^ OK
then VB then ^ OK
you RB you ^ OK
probably PRP probably ^ OK
need RB need ^ OK
to VBP to ^ OK
look TO look ^ OK
for VB for ^ OK
some IN some ^ OK
skilled DT skilled ^ OK
labor JJ labor ^ OK
or NN or ^ OK
some CC some ^ OK
assistance DT assistance ^ OK
from NN from ^ OK
the IN the ^ OK
government DT government ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
no DT ^ ^ repeat
o- NN ^ ^ repeat
no DT ^ ^ false_start
one NN ^ ^ false_start
's BES ^ ^ false_start
really RB ^ ^ false_start
it PRP it ^ OK
all DT all ^ OK
depends VBZ depends ^ OK
how WRB how ^ OK
you PRP you ^ OK
look VBP look ^ OK
at IN at ^ OK
it PRP it ^ OK
an- ADVP-MNR- 2 ^ ^ repeat
and CC ^ ^ repeat
and WP and ^ OK
who CC ^ ^ repeat
who CC who ^ OK
's WP 's ^ OK
giving BES giving ^ OK
an VBG an ^ OK
opinion DT opinion ^ OK

if IN ^ ^ repeat
if IN if ^ OK
your- PRP ^ ^ repeat
you PRP you ^ OK
're VBP 're ^ OK
an DT an ^ OK
employer NN employer ^ OK
you PRP ^ ^ repeat
s- XX ^ ^ false_start
you PRP ^ ^ false_start
you PRP ^ ^ false_start
would MD ^ ^ false_start
n't RB ^ ^ false_start
you PRP you ^ OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
want VB ^ ^ repeat
want VB want ^ OK
the DT ^ ^ repeat
the DT the ^ OK
minimum JJ ^ ^ repeat
minimum JJ minimum ^ OK
wage NN ^ ^ repeat
wage NN wage ^ OK
to TO to ^ OK
stay VB stay ^ OK
where WRB where ^ OK
it PRP it ^ OK
is VBZ is ^ OK
because ADVP-LOC- PRD-1 because ^ OK
you IN you ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
want RB want ^ OK
to VB to ^ OK
have TO have ^ OK
to VB to ^ OK
pay TO pay ^ OK
people VB people ^ OK
any NNS any ^ OK
more DT more ^ OK
than JJR than ^ OK
you IN you ^ OK
already PRP already ^ OK
are RB are ^ OK
paying VBP paying ^ OK
them VBG them ^ OK

but CC but ^ OK
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP 're ^ OK
someone NN someone ^ OK
who WP who ^ OK
's BES 's ^ OK
working VBG working ^ OK
for IN for ^ OK
minimum JJ minimum ^ OK
wage NN wage ^ OK
or CC or ^ OK
someone NN someone ^ OK
you PRP you ^ OK
're VBP 're ^ OK
dependent JJ dependent ^ OK
on IN on ^ OK
is NP-2 is ^ OK
working VBZ working ^ OK
for VBG for ^ OK
minimum IN minimum ^ OK
wage JJ wage ^ OK
then NN then ^ OK
you RB you ^ OK
would PRP would ^ OK
want MD want ^ OK
the VB the ^ OK
minimum DT minimum ^ OK
wage JJ wage ^ OK
to NN to ^ OK
go TO go ^ OK
up VB up ^ OK

but CC but ^ OK
then RB then ^ OK
in IN in ^ OK
your PRP your ^ OK
case NN case ^ OK
when WRB when ^ OK
you PRP you ^ OK
're VBP 're ^ OK
working VBG working ^ OK
as IN as ^ OK
a DT ^ ^ repeat
a DT a ^ OK
nur- NN ^ ^ repeat
nursing NN nursing ^ OK
assistant NN assistant ^ OK
or CC or ^ OK
helping VBG helping ^ OK
someone NN someone ^ OK
with IN with ^ OK
health NN health ^ OK
care NN care ^ OK
you ADVP-TMP- 1 you ^ OK
're PRP 're ^ OK
making VBP making ^ OK
nine VBG nine ^ OK
dollars CD dollars ^ OK
an NNS an ^ OK
hour DT hour ^ OK

do VBP do ^ OK
you PRP you ^ OK
want VB want ^ OK
to TO to ^ OK
work VB work ^ OK
hard RB hard ^ OK
as IN ^ ^ false_start
a- XX ^ ^ false_start
in IN in ^ OK
nursing NN nursing ^ OK
who WP ^ ^ false_start
makes VBZ making ^ false_start
nine CD nine ^ OK
dollars NNS dollars ^ OK
an DT an ^ OK
hour NN hour ^ OK

so UH ^ ^ false_start
they PRP ^ ^ repeat
just RB ^ ^ false_start
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
basically RB basically ^ OK
living VBG living ^ OK
on IN on ^ OK
the DT the ^ OK
money NN money ^ OK
they PRP they ^ OK
made VBD made ^ OK
over IN over ^ OK
the DT the ^ OK
summer NN summer ^ OK

but CC but ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
also RB ^ ^ repeat
ge- VBP ^ ^ repeat
get VBP get ^ OK
free JJ free ^ OK
rent NN rent ^ OK
up IN up ^ OK
here RB here ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they ^ OK
go VBP go ^ OK
to IN to ^ OK
the DT the ^ OK
western NNP western ^ OK
unions NNPS unions ^ OK
and CC and ^ OK
those DT those ^ OK
money NN money ^ OK
grams NNS grams ^ OK

they PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
how WRB how ^ OK
the DT the ^ OK
program NN program ^ OK
works VBZ works ^ OK
exactly RB exactly ^ OK

but CC but ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
legal JJ legal ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
i PRP ^ ^ repeat
yo- XX ^ ^ repeat
i PRP ^ ^ repeat
'm VBP 'm ^ OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
trying VBG trying ^ OK
trying VBG ^ ^ repeat
trying VBG ^ predicate repeat
to TO ^ ^ repeat
to TO to arg1 OK
get VB ^ ^ repeat
get VB get arg1 OK
my PRP ^ ^ repeat
my PRP my arg1 OK
credit NN credit arg1 OK
together RB together arg1 OK
because IN because argM_cause OK
you PRP ^ ^ filler
know VBP ^ ^ filler
everything NN everything arg0 OK
's BES 's argM_cause OK
based VBN based argM_cause OK
on IN on arg2 OK
credit NN credit arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB ^ ^ repeat
when WRB ^ ^ repeat
when WRB when ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
go VBP ^ ^ repeat
go VBP go ^ OK
f- IN ^ ^ repeat
for IN for ^ OK
the DT the ^ OK
house NN house ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
everything NN ^ ^ false_start

i PRP ^ ^ repeat
well UH ^ ^ filler
i PRP i arg0 OK
said VBD ^ ^ repeat
said VBD said predicate OK
look UH ^ ^ filler
i PRP i arg1 OK
'll MD 'll argM_mod OK
go VB go arg1 OK
through IN through arg_particl OK
the DT the arg1 OK
trials NNS trials arg1 OK
and CC and arg1 OK
tribulations NNS tribulations arg1 OK
right RB right argM_tmp OK
now RB now argM_tmp OK

pay- VB ^ ^ false_start
i PRP i arg0 OK
paid VBD paid predicate OK
my PRP my arg2 OK
landlord NN landlord arg2 OK
the DT the arg1 OK
rent NN rent arg1 OK

eh UH ^ ^ filler
oh UH oh ^ OK
yeah UH yeah ^ OK

you PRP ^ ^ repeat
forty CD ^ ^ repeat
you PRP ^ ^ repeat
f- CD ^ ^ repeat
you PRP ^ ^ repeat
forty-five CD ^ ^ repeat
you PRP ^ ^ false_start
forty-five CD ^ ^ false_start
well UH ^ ^ filler
it PRP it arg1 OK
used VBD used argM_mod OK
to TO to argM_mod OK
be VB be predicate OK
thirty CD thirty arg2 OK

it PRP it arg1 OK
was VBD was predicate OK
forty-five CD forty-five arg2 OK
days NNS days arg2 OK
from IN from arg2 OK
the DT the arg2 OK
date NN date arg2 OK
of IN of arg2 OK
your PRP your arg2 OK
due JJ due arg2 OK
date NN date arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
so RB ^ ^ filler
if IN if argM_adverb OK
you PRP you arg1 OK
due JJ 're predicate false_start
due JJ due arg2 OK
on IN on arg2 OK
the DT the arg2 OK
first NN first arg2 OK
you PRP you arg0 OK
got VBP have predicate false_start
forty-five CD forty-five argM_tmp OK
days NNS days argM_tmp OK
to TO to arg1 OK
pay VB pay arg1 OK
that DT that arg1 OK
rent NN rent arg1 OK

now UH ^ ^ filler
if IN if argM_adverb OK
you PRP you arg0 OK
owe VBP owe predicate OK
like UH ^ ^ filler
three CD three arg1 OK
hundred CD hundred arg1 OK
and CC and arg1 OK
fifty CD fifty arg1 OK
dollars NNS dollars arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your arg1 OK
stuff NN stuff arg1 OK
is VBZ is predicate OK
more JJR more arg2 OK
than IN than arg2 OK
three CD three arg2 OK
hundred CD hundred arg2 OK
and CC and arg2 OK
fifty CD fifty arg2 OK
dollars NNS dollars arg2 OK

um UH ^ ^ filler
university NNP university arg1 OK
city NNP city arg1 OK
would MD would argM_mod OK
be VB be predicate OK
nice JJ nice arg2 OK
because IN because argM_cause OK
of IN of argM_cause OK
the DT the argM_cause OK
houses NNS houses argM_cause OK

now UH ^ ^ filler
the DT ^ ^ repeat
rent NN ^ ^ repeat
rent NN rent arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
expensive JJ expensive arg2 OK
uh UH ^ ^ filler
way RB way arg2 OK
up RB up arg2 OK
in IN in arg2 OK
mount NNP ^ ^ false_start
what WP ^ ^ filler
's BES ^ ^ filler
that DT ^ ^ filler
chestnut NNP chestnut arg2 OK
hill NNP hill arg2 OK
because IN because argM_cause OK
it PRP it arg1 OK
's BES 's argM_cause OK
quiet JJ quiet arg2 OK

only RB ^ ^ false_start
th- DT ^ ^ false_start
maybe RB maybe argM_adverb OK
the DT ^ ^ repeat
the DT the arg0 OK
post NN ^ ^ repeat
off- NN ^ ^ repeat
postman NNP postman arg0 OK
knows VBZ knows predicate OK

wa- XX ^ ^ false_start
away RB away ^ OK
from IN from ^ OK
things NNS things ^ OK
because IN because ^ OK
you PRP ^ ^ repeat
got VBP ^ ^ repeat
you PRP ^ ^ false_start
got VBD ^ ^ false_start
certain JJ certain ^ OK
places NNS places ^ OK
in IN ^ ^ repeat
in IN in ^ OK
philadelphia NNP philadelphia ^ OK
that WDT that ^ OK
's BES are ^ false_start
like UH ^ ^ filler
dead JJ dead ^ OK
end NN end ^ OK
streets NNS streets ^ OK
maybe RB maybe ^ OK
like UH ^ ^ filler
two CD two ^ OK
two CD ^ ^ false_start
three CD or ^ false_start
three CD three ^ OK
houses NNS houses ^ OK
on IN on ^ OK
the DT the ^ OK
street NN street ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ false_start
postman NNP ^ ^ false_start
know VBP ^ ^ false_start
shoot UH ^ ^ filler
i PRP i arg0 OK
may MD may argM_mod OK
not RB not argM_neg OK
even RB even argM_adverb OK
have VB have predicate OK
my PRP my arg1 OK
mail NN mail arg1 OK
sent VBN sent arg1 OK
there RB there argM_loc OK

have VB i arg0 false_start
may MD may argM_mod OK
ha- VB ^ ^ repeat
have VB have predicate OK
it PRP it arg1 OK
sent VBN sent arg1 OK
to IN to arg2 OK
a DT a arg2 OK
post NN post arg2 OK
office NN office arg2 OK
box NN box arg2 OK

you PRP ^ arg0 filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB ^ ^ repeat
not RB not argM_neg OK
trying VBG trying predicate OK
to TO to arg1 OK
go VB go arg1 OK
there RB there arg4 OK
man UH ^ ^ filler
because IN because argM_cause OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
'd MD ^ ^ repeat
you PRP ^ ^ repeat
'd MD ^ ^ repeat
you PRP ^ ^ false_start
'd MD ^ ^ false_start
be VB ^ ^ false_start
on IN ^ ^ false_start
even RB even argM_adverb OK
if IN if argM_adverb OK
you PRP you arg0 OK
get VBP get argM_cause OK
a DT a arg1 OK
house NN house arg1 OK
you PRP you arg0 OK
got VBD got argM_cause OK
a DT a arg1 OK
deal NN deal arg1 OK
on IN on arg1 OK
a DT a arg1 OK
house NN house arg1 OK
with IN with arg1 OK
a DT ^ ^ repeat
a DT a arg0 OK
whole JJ whole arg0 OK
bunch NN bunch arg0 OK
of IN of arg0 OK
people NNS people ^ OK
people NNS ^ arg0 false_start
kids NNS or ^ false_start
kids NNS kids arg0 OK
running VBG running arg1 OK
aroun- RB around arg1 false_start

p- NNS ^ ^ false_start
ki- XX ^ ^ false_start
people NNS people ^ OK
sitting VBG sitting ^ OK
on IN on ^ OK
your PRP your ^ OK
step NN step ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
wan- VBP ^ ^ repeat
i PRP ^ ^ repeat
want VBP ^ ^ repeat
to TO ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
want VBP ^ ^ repeat
to TO ^ ^ repeat
have VB ^ ^ repeat
i PRP ^ ^ repeat
want VBP ^ ^ repeat
to TO ^ ^ repeat
have VB ^ ^ repeat
ch- XX ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ false_start
would MD ^ ^ false_start
like VB ^ ^ false_start
to TO ^ ^ false_start
h- VB ^ ^ false_start
a DT a arg1 OK
nice JJ nice arg1 OK
three CD three arg1 OK
story NN story arg1 OK
house NN house arg1 OK
would MD would argM_mod OK
be VB be predicate OK
nice JJ nice arg2 OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP 'm ^ OK
trying VBG trying predicate OK
to TO to arg1 OK
get VB get arg1 OK
into IN into arg1 OK
one CD one arg0 OK
of IN of arg0 OK
them DT ^ arg0 false_start
they PRP those ^ false_start
programs NNS programs arg0 OK
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that arg0 OK
look VBP look arg1 OK
at IN at arg1 OK
your PRP your arg1 OK
income NN income arg1 OK

that DT that ^ OK
because IN because ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
spending VBG ^ ^ repeat
spending VBG spending predicate OK
almost RB almost arg3 OK
three CD ^ ^ repeat
four CD four arg3 OK
hundred CD ^ ^ repeat
hundred CD hundred arg3 OK
dollars NNS dollars arg3 OK

i PRP i arg1 OK
can MD can argM_mod OK
mess VB mess predicate OK
around RB around argM_loc OK
and CC and ^ OK
have VB have predicate OK
two CD two ^ OK
two CD ^ arg1 false_start
three CD or ^ false_start
three CD three arg1 OK
houses NNS houses arg1 OK
yo- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
according VBG according arg1 OK
to IN to arg2 OK
the DT the arg2 OK
mortgage NN mortgage arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
getting VBG ^ ^ false_start
credit NN ^ ^ false_start
k- XX ^ ^ false_start
get VBP ^ ^ repeat
get VB get predicate OK
the DT the arg1 OK
credit NN credit arg1 OK
together RB together arg1 OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
that DT that arg2 OK

what WP ^ ^ repeat
what WP what arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
with IN with arg2 OK
that DT that arg2 OK

uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
can MD can argM_mod OK
you PRP you arg0 OK
do VB do predicate OK
something NN something arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
is VBZ ^ ^ repeat
is VBZ is ^ OK
that DT ^ ^ repeat
that DT that ^ OK

uh UH ^ ^ filler
uh UH ^ ^ filler
the DT the ^ OK

you PRP ^ ^ false_start
uh UH ^ ^ filler
your PRP ^ ^ repeat
your PRP your arg1 OK
cr- NN ^ ^ repeat
credit NN credit arg1 OK
's BES 's ^ OK
messed JJ messed predicate OK
up RP up arg_particl OK

because IN because argM_cause OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
d- VBP ^ ^ repeat
did VBD did predicate OK
a DT a arg1 OK
little JJ little arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
background NN background arg1 OK
checking NN checking arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP said predicate false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ repeat
just RB just arg1 OK
g- VB ^ ^ repeat
give VB give arg1 OK
me PRP me arg2 OK
a DT a arg1 OK
house NN house arg1 OK

i PRP i arg1 OK
got VBD got predicate OK
a DT a arg1 OK
couple JJ couple arg1 OK
credit NN of ^ false_start
credit NN credit arg1 OK
cards NNS cards arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how arg2 OK
is VBZ are predicate false_start
them DT those arg1 false_start
credit NN credit arg1 OK
cards NNS cards arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
preapprove VBP preapprove predicate OK
you PRP you arg1 OK

eh UH ^ ^ repeat
b- NN ^ ^ repeat
a DT a ^ OK
bigger JJR bigger ^ OK
benefit NN benefit ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's S-1 's predicate OK
tough BES tough arg2 OK
to JJ to arg1 OK
uh TO ^ ^ filler
tell UH tell arg1 OK
people VB people arg2 OK
that NNS that arg1 OK
they IN they arg0 OK
ca PRP ca arg1 OK
n't MD n't argM_neg OK
have RB have arg1 OK
children VB children arg1 OK

it PRP ^ ^ repeat
do- VBZ ^ ^ repeat
it PRP it arg1 OK
does VBZ ^ ^ false_start
work VB works predicate false_start
out RP out arg_particl OK
like IN like argM_other OK
that DT that argM_other OK
a DT a ^ OK
lot NN lot ^ OK

it PRP it arg1 OK
's BES 's predicate OK
a DT ^ ^ repeat
little JJ ^ ^ repeat
bit NN ^ ^ false_start
of IN ^ ^ repeat
a DT ^ ^ repeat
head NN ^ ^ false_start
a DT ^ ^ false_start
little JJ ^ ^ false_start
bit NN ^ ^ false_start
of IN ^ ^ false_start
a DT ^ ^ filler
um UH ^ ^ filler
a DT a arg2 OK
chance NN chance arg2 OK
to TO to arg2 OK
start NN start predicate false_start
get VB ^ arg2 false_start
something NN something arg1 OK
going VBG ^ arg2 false_start

is VBZ ^ ^ repeat
a- XX ^ ^ repeat
there EX ^ ^ false_start
's BES ^ ^ false_start
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
on IN on arg0 OK
welfare NN welfare arg0 OK
though SBAR-2 ^ ^ false_start
that RB ^ ^ false_start
do WDT ^ ^ false_start
need VBP need predicate OK
it VB it arg1 OK

or CC ^ ^ false_start
um UH ^ ^ filler
people NNS people ^ OK
eh UH ^ ^ filler
getting VBG getting ^ OK
out IN out ^ OK
of IN of ^ OK
prison NN prison ^ OK
who WP who ^ OK
are VBP are ^ OK
uh UH ^ ^ filler
trying VBG trying ^ OK
to TO to ^ OK
start VB start ^ OK
their PRP their ^ OK
life NN life ^ OK
over RB over ^ OK

um UH ^ ^ filler
the- EX ^ ^ repeat
there EX there ^ OK
are VBP are predicate OK
reasons NNS reasons arg1 OK
for IN for arg1 OK
it PRP it arg1 OK

i PRP ^ arg2 repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
n- RB ^ ^ repeat
not RB not argM_neg OK
sure JJ sure arg2 OK
what WP of ^ false_start
what WP ^ ^ false_start
the DT the argM_other OK
best JJS best argM_other OK
way NN way argM_other OK
to TO to arg2 OK
do VB do arg2 OK
that DT that arg1 OK
is ADVP-MNR- 1 ^ ^ false_start
though VBZ ^ ^ false_start

the- PRP ^ ^ repeat
they PRP they arg0 OK
need VBP need predicate OK
to TO to arg1 OK
have VB have arg1 OK
some DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
a DT a arg0 OK
system NN system arg0 OK
to TO to arg1 OK
check VB check arg1 OK
up RP up arg_particl OK
on IN on arg1 OK
people NNS people arg1 OK

maybe RB maybe ^ OK
th- DT ^ ^ repeat
the DT the arg1 OK
rules NNS rules arg1 OK
need VBP need predicate OK
to TO to arg1 OK
be VB be arg1 OK
more RBR more arg2 OK
strict JJ strict arg2 OK

like IN like ^ OK
the DT the ^ OK
children NNS children ^ OK
thing NN thing ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
the DT ^ ^ repeat
uh UH ^ ^ filler
the DT the arg0 OK
recording NN recording arg0 OK
before RB ^ ^ false_start
said VBD said predicate OK
something NN something arg1 OK
about IN about arg1 OK
the DT the arg1 OK
way NN way arg1 OK
it PRP it arg1 OK
's BES 's arg1 OK
done VBN done arg1 OK
in IN in argM_loc OK
europe NNP europe argM_loc OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
works VBZ works predicate OK
over IN ^ ^ false_start
there RB there argM_loc OK

at IN ^ arg1 repeat
all PDT ^ ^ repeat
all PDT all arg0 OK
the DT ^ ^ repeat
the DT the arg0 OK
european JJ european arg0 OK
countries NNS countries arg0 OK
they PRP ^ ^ false_start
pay VBP pay predicate OK
extremely RB ^ ^ false_start
high JJ high arg1 OK
taxes NNS ^ ^ repeat
tax NN tax arg1 OK
rates NNS rates arg1 OK
like IN of ^ false_start
like IN about ^ false_start
like IN ^ ^ false_start
seventy-five CD seventy-five arg1 false_start
percent NN percent arg1 false_start

you PRP ^ ^ repeat
you PRP ^ ^ repeat
h- VBP ^ ^ repeat
you PRP ^ ^ repeat
h- VBP ^ ^ repeat
you PRP you arg0 OK
really RB really ^ false_start
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
even RB ^ ^ false_start
get VB get predicate OK
any DT any arg1 OK
of IN of arg1 OK
your PRP your arg1 OK
money NN money arg1 OK

so UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
it PRP it arg1 OK
works VBZ works predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
both DT both argM_other OK
ways NNS ways argM_other OK

i- IN ^ arg1 repeat
in IN in ^ OK
one CD one ^ OK
sense NN sense ^ OK
you PRP ^ ^ repeat
do VBP ^ ^ repeat
n't RB ^ ^ repeat
y- PRP ^ ^ repeat
you PRP you arg0 OK
're VBP 're ^ OK
putting VBG putting predicate OK
all PDT the ^ false_start
all PDT ^ ^ false_start
that DT ^ ^ false_start
money NN money arg1 OK
up RP ^ ^ repeat
up IN up arg2 OK
front NN front arg2 OK

but CC ^ ^ false_start
it PRP it arg0 OK
provides VBZ provides predicate OK
for IN for ^ OK
you PRP you arg2 OK

and CC ^ ^ false_start
it PRP it arg0 OK
provides VBZ provides predicate OK
for IN for ^ OK
everybody NN everybody arg2 OK
else RB else arg2 OK

um UH ^ argM_other filler
and CC ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
it PRP it arg1 OK
works VBZ works predicate OK
better RBR better argM_other OK
for IN for argM_other OK
some DT some argM_other OK
people NNS ^ ^ false_start
than IN than argM_other OK
others NNS for ^ false_start
others NNS others argM_other OK
too RB ^ ^ false_start

i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
hear VB hear predicate OK
about IN about arg1 OK
that DT that arg1 OK

everything NN everything arg1 OK
in IN in arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
gov- NN ^ ^ repeat
government NN government arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES is predicate false_start
like IN like arg2 OK
that DT ^ ^ repeat
that WDT ^ ^ repeat
that DT that arg2 OK
though RB ^ ^ false_start

there EX there ^ OK
's BES 's predicate OK
always RB always argM_tmp OK
a DT a arg1 OK
waste NN waste arg1 OK
of IN of arg1 OK
money NN money arg1 OK
um UH ^ ^ filler
every- RB ^ ^ repeat
everywhere RB everywhere argM_loc OK

oh UNK ^ ^ filler
well UNK ^ ^ filler
i UNK i arg0 OK
do UNK do ^ OK
n't UNK n't argM_neg OK
exercise UNK exercise predicate OK
at UNK at argM_tmp OK
all UNK all argM_tmp OK
because UNK because argM_cause OK
i UNK i arg0 OK
have UNK have argM_cause OK
um UNK ^ ^ filler
a UNK a arg1 OK
chronic UNK chronic arg1 OK
condition UNK condition arg1 OK
called UNK called arg1 OK
c. UNK c. arg2 OK
o. UNK o. arg2 OK
p. UNK p. arg2 OK
d. UNK d. arg2 OK

so UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
ca MD ^ ^ repeat
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
n't RB n't argM_neg OK
really RB ^ ^ repeat
m- VB ^ ^ repeat
have VB ^ ^ repeat
a DT ^ ^ repeat
lot NN ^ ^ repeat
of IN ^ ^ repeat
mo- NN ^ ^ repeat
move VB move predicate OK
around RB around argM_loc OK
a DT a argM_extent OK
whole JJ ^ ^ false_start
lot NN lot argM_extent OK

i PRP i arg2 OK
stuck VBN am ^ false_start
ah UH ^ ^ filler
basically RB basically argM_adverb OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
like VBP ^ ^ filler
stuck VBN stuck predicate OK
in IN in arg2 OK
houses NNS the ^ false_start
houses NNS house arg2 false_start

so UH ^ ^ filler
i PRP ^ ^ false_start
looked VBD ^ ^ false_start
this DT this arg1 OK
was VBD was predicate OK
a DT a arg1 OK
s- NN ^ ^ repeat
subject NN subject arg1 OK
for IN for arg1 OK
me PRP me arg1 OK
that WDT that arg2 OK
i PRP i arg0 OK
thought VBD thought arg2 OK
oh UH ^ ^ false_start
boy UH ^ ^ false_start
of IN of arg1 OK
all DT all arg1 OK
subjects NNS subjects arg1 OK
to TO to arg1 OK
get VB get arg1 OK
right NP-1 right arg4 OK

have VBP ^ ^ repeat
have VBP have ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
be- RB ^ ^ repeat
done VBN done predicate OK
this DT this arg1 OK
call NN call arg1 OK
before RB before argM_tmp OK

have VBP ^ ^ repeat
have VBP have ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
made VBN made predicate OK
these DT these arg1 OK
kind NN kinds arg1 false_start
of IN of arg1 OK
calls NNS calls arg1 OK
before RB before argM_tmp OK

eh UH eh ^ OK

i PRP ^ arg2 false_start
this DT this arg1 OK
is VBZ is predicate OK
my PRP my arg2 OK
first JJ first arg2 OK
call NN call arg2 OK
to RB to ^ OK
to RB _ARG_ arg2 false_start

not RB not ^ OK
sure JJ sure ^ OK
how WRB ^ ^ repeat
how WRB how ^ OK
to TO ^ ^ repeat
to TO to ^ OK
proceed VB proceed ^ OK
with IN with ^ OK
it PRP it ^ OK
because ADVP-MNR- 1 because ^ OK
uh IN ^ ^ filler
i UH ^ ^ repeat
i WRB i ^ OK
know PRP ^ ^ repeat
know PRP know ^ OK
how VBP ^ ^ repeat
how VBP how ^ OK
important WRB important arg2 OK
fitness JJ fitness arg1 OK
and NN and arg1 OK
exercise CC exercise arg1 OK
is NN is predicate OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
when WRB when argM_tmp OK
i PRP i argM_tmp OK
was VBD was argM_tmp OK
younger JJR younger argM_tmp OK
i ADVP-TMP- 1 i arg0 OK
used PRP used argM_mod OK
to VBD to argM_mod OK
do TO do predicate OK
a VB a arg1 OK
lot DT lot arg1 OK
of NN of arg1 OK
things IN things arg1 OK

and CC ^ ^ false_start
but CC ^ ^ false_start
as IN ^ ^ false_start
i PRP ^ ^ false_start
got VBD ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
am VBP am predicate OK
fifty CD ^ ^ repeat
fifty CD fifty arg2 OK
seven CD seven arg2 OK
years NNS years arg2 OK
old JJ old arg2 OK

so UH ^ arg1 filler
i PRP i arg0 OK
imagine VBP imagine predicate OK
your PRP you ^ false_start
your PRP 're arg1 false_start
what UH what arg2 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
old JJ old arg2 OK
enough RB enough arg2 OK
to TO to arg2 OK
be VB be arg2 OK
your PRP your arg2 OK
grandmother NN grandmother arg2 OK
over IN over argM_loc OK
here RB here argM_loc OK

well UH ^ argM_extent filler
tell VB tell predicate OK
me PRP me arg2 OK
bit NN a ^ false_start
little JJ little argM_extent OK
bit NN bit argM_extent OK
about IN about arg1 OK
yourself PRP yourself arg1 OK
in IN ^ ^ repeat
in IN in argM_loc OK
hawaii NNP hawaii argM_loc OK

and CC ^ ^ false_start
what WP ^ ^ repeat
what WP what arg1 OK
are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
taking VBG taking predicate OK
honey NN honey argM_discou OK

i PRP i arg1 OK
use VBD used argM_mod false_start
to TO to argM_mod OK
be VB be predicate OK
in IN ^ ^ false_start
um UH ^ ^ filler
a DT a arg2 OK
director NN director arg2 OK
at IN at argM_loc OK
center NNP an ^ false_start
erie NNP erie argM_loc OK
business NNP business argM_loc OK
center NNP center argM_loc OK
here RB here argM_loc OK
in IN in argM_loc OK
erie NNP erie argM_loc OK

in IN in ^ OK
a DT a ^ OK
college NN college ^ OK
with IN with ^ OK
a DT a ^ OK
business NN business ^ OK
college NN college ^ OK
though RB though ^ OK

i PRP i arg1 OK
was VBD was predicate OK
assistant JJ assistant arg2 OK
director NN director arg2 OK
dow- RB ^ ^ false_start
i- IN ^ ^ repeat
in IN in argM_loc OK
here RB here argM_loc OK
when WRB when argM_tmp OK
i PRP i arg0 OK
was VBD was argM_mod OK
able JJ able argM_mod OK
to TO to argM_mod OK
work VB work argM_tmp OK

because IN because ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
hear VB hear ^ OK
the DT the ^ OK
hawaiian JJ hawaiian ^ OK
accent NN accent ^ OK

but CC but ^ OK
uh UH ^ ^ filler

oh UH ^ argM_tmp filler
and CC ^ ^ false_start
this DT ^ ^ repeat
and CC ^ ^ false_start
this DT ^ ^ false_start
making VBG making arg0 false_start
this DT ^ ^ false_start
these DT these arg0 false_start
this DT ^ ^ false_start
calls NNS calls arg0 false_start
still RB still ^ false_start
gives VBZ ^ ^ repeat
gives VBZ gives predicate OK
you PRP ^ ^ repeat
you PRP you arg2 OK
bit NN a ^ false_start
little JJ little arg1 OK
bit NN bit arg1 false_start
of IN of arg1 OK
money NN money arg1 OK
too RB too argM_discou OK

that DT ^ ^ false_start
's BES ^ ^ false_start
so RB ^ ^ false_start
i PRP i arg0 OK
will MD will argM_mod OK
give VB give predicate OK
you PRP you arg2 OK
twenty CD twenty arg1 OK
bucks NNS bucks arg1 OK

i PRP i arg0 OK
just RB just argM_adverb OK
hope VBP hope predicate OK
that IN that arg1 OK
the DT the arg1 OK
company NN company arg1 OK
is VBZ is arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
all DT all arg2 OK
that WDT that arg2 OK
it PRP ^ ^ repeat
it PRP it arg2 OK
says VBZ says arg2 OK
it PRP it arg1 OK
's BES 's argM_mod OK
going VBG going argM_mod OK
to TO to argM_mod OK
be VB be arg1 OK

that DT that arg2 OK
will MD will argM_mod OK
be VB be predicate OK
ni- XX ^ ^ false_start
an DT an arg2 OK
easy JJ easy arg2 OK
way NN way arg2 OK
to TO to arg2 OK
make VB make arg2 OK
some DT some arg1 OK
money NN money arg1 OK

when WRB ^ ^ false_start
i PRP ^ ^ false_start
was VBD ^ ^ false_start
before IN ^ ^ false_start
um UH ^ ^ filler
well UH ^ ^ filler
that DT that arg1 OK
was VBD was predicate OK
my PRP my arg2 OK
job NN job arg2 OK
before IN before argM_tmp OK
i PRP i arg1 OK
got VBD got argM_mod OK
to TO to argM_mod OK
be VB be argM_tmp OK
assistant JJ assistant arg2 OK
director NN director arg2 OK

i PRP i arg0 OK
use VBD used argM_mod false_start
to TO to argM_mod OK
um UH ^ ^ filler
they PRP ^ ^ false_start
said VBD ^ ^ false_start
make VB make predicate OK
telephone NN telephone arg1 OK
calls NNS calls arg1 OK

have VBP ^ ^ repeat
have VBP have argM_mod OK
you PRP ^ ^ repeat
you PRP you arg0 OK
ever RB ever argM_tmp OK
met VBN met predicate OK
anybody NN anybody arg1 OK
on IN on arg1 OK
the DT the arg1 OK
internet NNP internet arg1 OK

and CC ^ ^ false_start
he PRP he arg1 OK
was VBD was predicate OK
in IN from arg2 false_start
calgary NNP calgary arg1 OK
canada NNP canada arg1 OK
which WP which arg1 OK
is VBZ is arg2 OK
about RB about argM_loc OK
three CD three arg2 OK
thousand CD thousand arg2 OK
miles NNS miles arg2 OK
away RB away arg2 OK
from IN from arg2 OK
where WRB where argM_loc OK
i PRP i arg0 OK
live VBP live arg2 OK

and CC ^ ^ false_start
we PRP we arg1 OK
have VBP have ^ OK
now RB now argM_tmp OK
been VBN been ^ OK
married JJ married ^ OK
uh UH ^ ^ filler
it PRP ^ ^ false_start
will MD ^ ^ false_start
be VB ^ predicate false_start
four CD four argM_tmp OK
years NNS years argM_tmp OK
in IN in argM_tmp OK
may NNP may argM_tmp OK

and CC ^ ^ false_start
now RB ^ ^ false_start
uh UH ^ ^ filler
he PRP ^ ^ repeat
he PRP he arg1 OK
came VBD ^ ^ repeat
came VBD came predicate OK
three CD three argM_extent OK
thousand CD thousand argM_extent OK
miles NNS miles argM_extent OK
to TO to argM_purpos OK
be VB be argM_purpos OK
here RB here argM_loc OK

he PRP he arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
what WP what arg1 OK
he PRP he arg0 OK
was VBD was arg1 OK
getting VBG getting arg1 OK
into IN into argM_loc OK

but CC but ^ OK
um UH ^ ^ filler

i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
when WRB ^ ^ repeat
before IN before arg2 OK
the DT the arg0 OK
internet NN internet arg0 OK
got VBD got arg2 OK
bad JJ bad arg1 OK
with IN with argM_mnr OK
all PDT all arg1 OK
the DT the arg1 OK
perversion NN perversion arg1 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
that WDT that argM_mnr OK
's BES 's argM_mnr OK
going VBG going argM_mnr OK
on RP on arg_particl OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

and CC ^ ^ false_start
none NN none arg1 OK
of IN of arg1 OK
these DT these arg1 OK
freakos NNS freakos arg1 OK
are VBP are predicate OK
online RB online arg2 OK

you UNK ^ ^ filler
know UNK ^ ^ filler
other UNK other ^ OK
countries UNK countries ^ OK
that UNK that ^ OK
can UNK can ^ OK
change UNK change ^ OK
on UNK on ^ OK
a UNK a ^ OK
whim UNK whim ^ OK
as UNK as ^ OK
to UNK to ^ OK
what UNK what ^ OK
you UNK you ^ OK
can UNK can ^ OK
and UNK and ^ OK
ca UNK ca ^ OK
n't UNK n't ^ OK
do UNK do ^ OK

i PRP i ^ OK
just RB just ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler

so RB ^ ^ false_start
it PRP ^ ^ repeat
it PRP ^ ^ false_start
would MD ^ ^ false_start
be VB ^ ^ false_start
that DT ^ ^ false_start
your PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
unless IN unless ^ OK
you PRP you ^ OK
could MD could ^ OK
h- VB ^ ^ repeat
have VB have ^ OK
enough RB enough ^ OK
to TO to ^ OK
bring VB bring ^ OK
them PRP them ^ OK
over RB over ^ OK
all PDT all ^ OK
the DT the ^ OK
time NN time ^ OK

but CC ^ ^ false_start
so RB ^ ^ filler
it PRP it arg1 OK
might MD might argM_mod OK
not RB not argM_neg OK
be VB be predicate OK
as RB ^ ^ repeat
as RB as arg2 OK
ea- JJ ^ ^ repeat
effective JJ effective arg2 OK
for IN for arg2 OK
you PRP you arg2 OK

but CC ^ ^ false_start
like UH ^ ^ filler
my PRP my arg0 OK
husband NN husband arg0 OK
has VBZ has predicate OK
seven CD seven arg1 OK
siblings NNS siblings arg1 OK
and CC and ^ OK
they PRP they arg0 OK
all DT all arg0 OK
have VBP have predicate OK
children NNS children arg0 OK
who WP who arg0 OK
have VBP have arg1 OK
children NNS children arg1 OK

i PRP i arg0 OK
and CC ^ ^ false_start
have VBP have predicate OK
three CD three arg1 OK
siblings NNS siblings arg1 OK

and CC ^ ^ false_start
there EX there arg1 OK
is VBZ is predicate OK
n't RB n't argM_neg OK
a DT a arg1 OK
whole JJ whole arg1 OK
lot NN lot arg1 OK
that WDT that arg1 OK
's BES 's arg2 OK
worth JJ worth arg2 OK
that DT that arg2 OK

your PRP your ^ OK

because IN ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
like IN like arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
with IN with arg2 OK
your PRP your arg2 OK
own JJ own arg2 OK
children NNS children arg2 OK
it PRP ^ ^ false_start
eh UH ^ ^ filler
they PRP ^ ^ false_start
're VBP ^ ^ false_start
everything NN everything arg1 OK
's BES 's ^ OK
changing VBG changing predicate OK
so RB so argM_extent OK
quickly RB quickly argM_adverb OK

and CC ^ ^ false_start
seeing VBG seeing ^ OK
them PRP them ^ OK
every DT every ^ OK
few JJ few ^ OK
months NNS months ^ OK
or CC or ^ OK
ev- XX ^ ^ false_start
once RB once ^ OK
a DT a ^ OK
year NN year ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
just RB just ^ OK
kind RB kind ^ OK
of RB of ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg1 OK
're VBP 're predicate OK
a DT a arg2 OK
very RB very arg2 OK
close-knit JJ close-knit arg2 OK
family NN family arg2 OK

who WP ^ ^ false_start
's BES ^ ^ false_start
he PRP he arg1 OK
's BES 's predicate OK
thirty-three CD thirty-three arg2 OK

well UH ^ ^ filler
he PRP he arg0 OK
's BES 's ^ OK
doing VBG doing predicate OK
well RB well arg1 OK
thank VB thank argM_discou OK
god NNP god arg1 OK

so UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
i PRP i arg0 OK
'd MD 'd argM_mod OK
do VB do arg1 OK
it PRP it arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
me- VBP ^ ^ false_start
i PRP i arg1 OK
'd MD 'd argM_mod OK
be VB be ^ OK
tempted VBN tempted predicate OK

na- XX ^ arg0 false_start
i- XX ^ ^ false_start
sure RB it ^ false_start
sure RB sure argM_adverb OK
does VBZ does ^ OK
n't RB n't ^ OK
n't RB _ARG_ argM_neg false_start

well UH ^ ^ filler
you PRP ^ ^ false_start
figure VBP ^ ^ false_start
when WRB when argM_tmp OK
you PRP you argM_tmp OK
get VBP get argM_tmp OK
uh UH ^ ^ filler
a DT a argM_tmp OK
million CD million argM_tmp OK
dollars NNS dollars argM_tmp OK
what ADVP-TMP- 1 what arg1 OK
do WP do ^ OK
you VBP you arg0 OK
end PRP end predicate OK
up VB up arg_particl OK
clearing RP clearing predicate OK
out VBG out arg1 OK
of IN of arg1 OK
it IN it arg1 OK

so RB ^ ^ false_start
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
not RB not argM_neg OK
a DT a arg2 OK
whole JJ whole arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
money NN money arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
hopefully RB hopefully argM_adverb OK
what WP what arg1 OK
you PRP you arg0 OK
'll MD 'll argM_mod OK
be VB be ^ OK
making VBG making predicate OK

that DT ^ ^ repeat
that DT that arg1 OK
was VBD ^ ^ repeat
was VBD was predicate OK
the DT the arg2 OK
biggie NN biggie arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg0 OK
would MD would argM_mod OK
basically RB basically argM_adverb false_start
mean VB mean predicate OK
giving VBG giving arg1 OK
up RP up arg_particl OK
your PRP your arg1 OK
citizenship NN citizenship arg1 OK

an- XX ^ ^ false_start
uh UH ^ ^ filler
we PRP we arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
to IN to arg2 OK
alaska NNP alaska arg2 OK

and CC ^ ^ false_start
we PRP we arg1 OK
went VBD went predicate OK
to IN to arg4 OK
um UH ^ ^ filler
uh UH ^ ^ filler
turkey NNP turkey arg4 OK
and CC and arg4 OK
athens NNP athens arg4 OK
and CC and arg4 OK
greece NNP greece arg4 OK

on IN on argM_tmp OK
the DT the argM_tmp OK
twenty-ninth NN twenty-ninth argM_tmp OK
we PRP we arg1 OK
're VBP 're ^ OK
going VBG going predicate OK
on IN on argM_loc OK
a DT a argM_loc OK
cruise NN cruise argM_loc OK
to IN to arg4 OK
barcelona NNP barcelona arg4 OK
and CC ^ ^ false_start
and CC ^ ^ false_start
venice NNP venice arg4 OK
and CC ^ ^ false_start
and CC ^ ^ false_start
paris NNP paris arg4 OK
and CC ^ ^ false_start
and CC ^ ^ false_start
rome NNP rome arg4 OK
and CC and arg4 OK
sicily NNP sicily arg4 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
say VB saying predicate false_start
yeah UH yeah arg1 OK

well UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
what WP what arg1 OK
we PRP ^ ^ repeat
we PRP we arg0 OK
did VBD ^ ^ repeat
did VBD did arg2 OK
with IN with arg2 OK
renaissance NNP renaissance arg2 OK

we PRP we arg1 OK
went VBD went predicate OK
on IN on argM_loc OK
a DT a argM_loc OK
two CD two argM_loc OK
for IN for argM_loc OK
one CD one argM_loc OK

but CC but argM_discou OK
it PRP ^ ^ repeat
it PRP it arg1 OK
was VBD was predicate OK
n't RB n't argM_neg OK
that RB that arg2 OK
bad JJ bad arg2 OK
even RB even argM_extent false_start
at IN at argM_extent false_start
that DT that argM_extent false_start

it PRP it arg1 OK
's BES 's predicate OK
seven CD seven arg2 OK
thousand CD thousand arg2 OK
dollars NNS dollars arg2 OK
for IN for arg2 OK
two CD two arg2 OK
people NNS people arg2 OK
f- IN ^ ^ repeat
for IN for arg2 OK
fifteen CD fifteen arg2 OK
days NNS days arg2 OK

meals NNS meals arg1 OK
and CC and arg1 OK
everything NN everything arg1 OK
is VBZ are ^ false_start
included VBN included predicate OK

so UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
like IN ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler

it PRP ^ ^ false_start
leav- XX ^ ^ false_start
yeah UH yeah ^ OK

so UH ^ ^ filler
i PRP i arg0 OK
figure VBP figure predicate OK
i PRP i arg0 OK
can MD can argM_mod OK
go VB go arg1 OK
other JJ other arg4 OK
places NNS places arg4 OK
and CC and arg1 OK
not RB not argM_neg OK
have VB have argM_mod OK
to TO to argM_mod OK
give VB give arg1 OK
up RP up arg_particl OK
my PRP my arg1 OK
citizenship NN citizenship arg1 OK

so UH ^ arg1 filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT ^ ^ repeat
that DT that ^ OK
would MD would argM_mod OK
be VB be predicate OK
the DT the arg2 OK
big JJ big arg2 OK
kicker NN kicker arg2 OK

so RB ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
would MD would argM_mod OK
be VB be predicate OK
a DT ^ ^ false_start
l- XX ^ ^ false_start
a DT a arg2 OK
big JJ big arg2 OK
change NN change arg2 OK
from IN from arg2 OK
you PRP you arg2 OK

because IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ false_start
think VB think predicate OK
most JJS most arg1 OK
restaurants NNS restaurants arg1 OK
are VBP are arg1 OK
too RB too arg2 OK
small JJ small arg2 OK
for IN for ^ OK
non-smokers NNS non-smokers arg1 false_start
not RB not argM_neg false_start
to TO to ^ false_start
be VB be ^ OK
infringed VBN infringed predicate OK
upon IN upon arg1 false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ false_start
think VBP think predicate OK
if IN ^ ^ false_start
you PRP ^ ^ repeat
y- PRP ^ ^ repeat
you PRP you arg0 OK
either RB either arg1 OK
want VBP want arg1 OK
to TO to arg1 OK
quit VB quit arg1 OK
or CC or arg1 OK
you PRP you arg1 OK
do VBP do arg1 OK
n't RB n't argM_neg OK

and CC ^ ^ OK
if IN if ^ OK
you PRP you ^ OK
've VBP 've ^ OK
never RB never ^ OK
smoked VBN smoked ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
well UH ^ ^ filler
i PRP i ^ OK
suppose VBP ^ ^ repeat
suppose VBP suppose ^ OK
you PRP you ^ OK
probably RB probably ^ OK
do VBP do ^ OK
n't RB n't ^ OK

i PRP i arg0 OK
guess VBP guess predicate OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
f- XX ^ ^ repeat
you PRP you arg0 OK
probably RB probably arg1 OK
know VBP know arg1 OK
how WRB how arg1 OK
hard JJ hard arg2 OK
it S-2 ^ ^ false_start
to VBZ ^ ^ false_start
quit TO quitting arg1 false_start
is PRP is arg1 false_start

really UH ^ ^ filler
so UH ^ ^ false_start
you PRP you arg0 OK
're VBP 're predicate OK
lucky JJ lucky arg1 OK
really SBAR-1 ^ ^ false_start
that RB that ^ OK
you IN you arg1 OK
never PRP never ^ OK
got RB got predicate OK
into VBD into arg2 OK
that IN that arg2 OK

i PRP ^ ^ OK
m- XX ^ ^ OK
where WRB where ^ OK

there EX ^ ^ repeat
there EX there arg1 OK
is VBZ ^ ^ repeat
n't RB ^ ^ repeat
is VBZ is predicate OK
some DT some arg2 OK
around IN around argM_loc OK
here RB here argM_loc OK

in IN ^ ^ false_start
some DT ^ ^ false_start
of IN ^ ^ false_start
th- DT ^ ^ false_start
um UH ^ ^ filler
indiana NNP indiana ^ OK

do VBP do ^ OK
they PRP they arg0 OK
offer VB offer predicate OK
classes NNS ^ ^ false_start
and CC ^ ^ false_start
programs NNS programs arg1 OK
quit VB to ^ false_start
quit VB quit arg1 false_start
smoking NN smoking arg1 false_start
for IN at argM_loc false_start
your PRP your argM_loc OK
school NN school argM_loc OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
from IN from arg2 OK
a DT a arg2 OK
small JJ small arg2 OK
town NN town arg2 OK

esp- RB ^ ^ repeat
because IN ^ ^ false_start
i PRP ^ ^ repeat
sometimes RB ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
if IN if arg1 OK
they PRP they arg0 OK
could MD could arg1 OK
catch VB catch arg1 OK
you PRP it ^ false_start
early RB ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
at IN at argM_tmp OK
a DT a argM_tmp OK
younger JJR younger argM_tmp OK
age NN age argM_tmp OK
than IN rather ^ false_start
than IN than arg1 OK
let VB let arg1 OK
it PRP it arg1 OK
progress VB progress arg1 OK
even RB even arg4 OK
further RBR further arg4 OK

and CC ^ ^ false_start
w- XX ^ ^ repeat
i PRP i arg0 OK
did VBD did ^ OK
quit VB quit predicate OK
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
for IN for argM_tmp OK
three CD three argM_tmp OK
years NNS years argM_tmp OK

i PRP i ^ OK
just RB just ^ OK

you PRP you ^ OK
just RB just ^ OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
sure JJ sure ^ OK
the DT the ^ OK
programs NNS programs ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
m- VBP ^ ^ repeat

i PRP i ^ OK
just RB ^ ^ false_start
think VBP think ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
small JJ small ^ OK
children NNS children ^ OK

i PRP ^ ^ repeat
just RB ^ ^ false_start
i PRP i arg0 OK
just RB ^ ^ false_start
do VBP do ^ OK
n't RB n't argM_neg OK
agree VB agree predicate OK
with IN with arg1 OK
smoking VBG smoking arg1 OK
in IN in arg1 OK
the DT the arg1 OK
public NN public arg1 OK
like IN ^ ^ false_start
that DT ^ ^ false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ false_start
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
terrible JJ terrible arg2 OK

i PRP ^ arg0 filler
mean VBP ^ ^ filler
i PRP i arg0 OK
even RB ^ ^ false_start
think VBP think predicate OK
it PRP ^ ^ false_start
to NNS to ^ false_start
it PRP ^ ^ false_start
see TO see predicate false_start
it PRP ^ ^ false_start
adult VB adult ^ false_start
people NN ^ ^ false_start
it PRP people ^ false_start
it PRP ^ ^ false_start
sitting NNS sitting predicate false_start
it PRP ^ ^ false_start
around VBG around ^ false_start
it PRP ^ ^ false_start
smoking RB smoking predicate false_start
and VBG and ^ false_start
laughing CC laughing predicate false_start
does S-2 does arg1 OK
n't VBZ n't argM_neg OK
even RB ^ ^ false_start
set RB set arg1 OK
a VB a arg1 OK
good DT good arg1 OK
example JJ example arg1 OK
for NN for arg1 OK
small IN small arg0 OK
children JJ children ^ OK

to VBG to ^ OK
associate TO associate ^ OK
it VB it ^ OK
as PRP as ^ OK
something IN something ^ OK
that NN that ^ OK
's WDT 's ^ OK
good BES good ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
real RB real ^ OK
wild JJ wild ^ OK
about IN about ^ OK
drug NN drug ^ OK
testing NN testing ^ OK

i PRP i ^ OK
can MD can ^ OK
see VB see ^ OK
like UH ^ ^ filler
in IN in ^ OK
certain JJ certain ^ OK
industries NNS industries ^ OK
where WRB where ^ OK
it PRP it ^ OK
is VBZ is ^ OK
kind RB ^ ^ filler
of RB ^ ^ filler
a DT ^ ^ false_start
mandatory JJ mandatory ^ OK

i PRP i ^ OK
feel VBP feel ^ OK
c- JJ ^ ^ false_start
more RBR more ^ OK
comfortable JJ comfortable ^ OK
flying VBG flying ^ OK
on IN on ^ OK
a DT a ^ OK
plane NN plane ^ OK
knowing VBG knowing ^ OK
they PRP they ^ OK
do VBP do ^ OK
that DT that ^ OK

eh UH ^ ^ filler
and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
like UH ^ ^ filler
in IN in ^ OK
transportation NN transportatio n  ^ OK
pretty RB ^ ^ false_start
much RB ^ ^ false_start
basically RB ^ ^ false_start
i PRP i ^ OK
feel VBP feel ^ OK
more RBR more ^ OK
comfortable JJ comfortable ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
'll MD 'll ^ OK
still RB still ^ OK
hit VB hit ^ OK
it PRP it ^ OK
up RP up ^ OK
anyway RB anyway ^ OK

i PRP i ^ OK
know VBP know ^ OK
uh UH ^ ^ filler
with IN with ^ OK
with IN ^ ^ repeat
my PRP my ^ OK
work NN work ^ OK
like UH ^ ^ filler
uh UH ^ ^ filler
they PRP they ^ OK
test VBP test ^ OK
randomly RB randomly ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
know VBP ^ ^ false_start
that IN ^ ^ false_start
they PRP ^ ^ false_start
can MD ^ ^ false_start
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
that IN that ^ OK
before RB before ^ OK
they PRP ^ ^ false_start
could MD ^ ^ false_start
like UH ^ ^ filler
they PRP they ^ OK
can MD can ^ OK
actually RB actually ^ OK
uh UH ^ ^ filler
test VB test ^ OK
for IN for ^ OK
secondhand JJ secondhand ^ OK
exposure NN exposure ^ OK

i PRP i ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
wow UH wow ^ OK

so UH ^ ^ filler
you PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
if IN if ^ OK
it PRP it ^ OK
does VBZ does ^ OK
show VB show ^ OK
up RB up ^ OK
in IN in ^ OK
our PRP our ^ OK
system NN system ^ OK
and CC and ^ OK
it PRP it ^ OK
's BES 's ^ OK
amount NN a ^ false_start
that DT ^ ^ false_start
certain JJ certain ^ OK
amount NN amount ^ OK
then RB then ^ OK
it PRP ^ ^ false_start
wo MD ^ ^ false_start
n't RB ^ ^ false_start
it PRP it ^ OK
shows VBZ shows ^ OK
up RB up ^ OK
that IN that ^ OK
it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler
secondhand JJ secondhand ^ OK
smoke NN smoke ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
're VBP 're ^ OK
like RP said ^ false_start
yeah UH yes ^ false_start

i PRP i ^ OK
was VBD was ^ OK
like RP said ^ false_start
wow UH ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
that DT that ^ OK
because IN because ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
they PRP they ^ OK
could MD could ^ OK
test VB test ^ OK
for IN for ^ OK
that DT that ^ OK
much JJ much ^ OK
like UH ^ ^ filler
for IN for ^ OK
uh UH ^ ^ filler
second JJ second ^ OK
hand NN hand ^ OK
amount NN amount ^ OK

what WP ^ ^ repeat
uh UH ^ ^ filler
what WP what ^ OK
is BES ^ ^ repeat
is VBZ is ^ OK
the DT ^ ^ repeat
the DT the ^ OK
phone NN phone ^ OK
number NN number ^ OK
that WDT that ^ OK
you PRP you ^ OK
dial VBP dial ^ OK
to TO to ^ OK
dial VB dial ^ OK
the DT the ^ OK
l. NNP l. ^ OK
d. NNP d. ^ OK
c. NNP c. ^ OK
thing NN ^ ^ false_start
because IN because ^ OK
i PRP i ^ OK
lost VBD lost ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
uh UH ^ ^ filler
paper NN paper ^ OK

five CD five ^ OK
oh CD oh ^ OK
seven CD seven ^ OK

for IN for ^ OK
the DT the ^ OK
most JJS most ^ OK
part NN part ^ OK
though RB though ^ OK
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
pretty RB ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
pretty RB ^ ^ false_start
much RB ^ ^ false_start
like RP ^ ^ filler
in IN in ^ OK
some DT some ^ OK
industries NNS industries ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
see VB see ^ OK
like UH ^ ^ filler
uh UH ^ ^ filler
wha- WP ^ ^ false_start
like UH ^ ^ filler
why WRB why ^ OK
they PRP they ^ OK
have VBP have ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
had VBD ^ ^ false_start
a DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
was SBAR-2 was ^ OK
stated VBD stated ^ OK
in VBN in ^ OK
our IN our ^ OK
policy PRP policy ^ OK
that NN that ^ OK
they IN they ^ OK
could PRP could ^ OK
test MD test ^ OK
you VB you ^ OK
randomly PRP randomly ^ OK
for RB for ^ OK
drugs IN drugs ^ OK

and CC ^ ^ false_start
but CC ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
sort RB ^ ^ filler
of RB ^ ^ filler
like UH ^ ^ filler
uh UH ^ ^ filler
like UH ^ ^ filler
a DT a ^ OK
thing NN thing ^ OK
that WDT that ^ OK
they PRP they ^ OK
held VBD held ^ OK
back RB back ^ OK
in IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
in IN in ^ OK
case NN ^ ^ repeat
case NN case ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
did VBD ^ ^ repeat
were VBD were ^ OK
n't RB n't ^ OK
n't RB ^ ^ repeat
satisfied VBN satisfied ^ OK
with IN with ^ OK
your PRP your ^ OK
performance NN performance ^ OK

was RB _ARG_ ^ OK
irritating VBD ^ ^ false_start
was RB was ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like NP-1 ^ ^ filler
kind UH ^ ^ filler
of RB ^ ^ filler
just RB just ^ false_start
irritating VBD irritating ^ OK
more JJ more ^ OK
than RBR than ^ OK
anything IN anything ^ OK
but NN ^ ^ false_start
uh CC ^ ^ filler
because UH because ^ OK
i- IN ^ ^ repeat
i PRP i ^ OK
'd PRP 'd ^ OK
worked VBD worked ^ OK
at VBN at ^ OK
staples IN staples ^ OK
for NNP for ^ OK
like IN ^ ^ filler
three UH three ^ OK
years CD years ^ OK
and NNS and ^ OK
never CC never ^ OK
saw RB saw ^ OK
anyone VBD anyone ^ OK
tested NN tested ^ OK
for VBN for ^ OK
drugs IN drugs ^ OK

and CC ^ ^ false_start
there EX there ^ OK
were VBD were ^ OK
numerous JJ numerous ^ OK
occasions NNS occasions ^ OK
where WRB where ^ OK
there EX ^ ^ false_start
were VBD ^ ^ false_start
if IN if ^ OK
they PRP they ^ OK
would MD would ^ OK
have VB have ^ OK
had VBN had ^ OK
testing NN testing ^ OK
they PRP they ^ OK
probably RB probably ^ OK
would MD would ^ OK
have VB have ^ OK
lost VBN lost ^ OK
a DT a ^ OK
few JJ few ^ OK
employees NNS employees ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD ^ ^ false_start
just RB ^ ^ false_start
like RP said ^ false_start
man UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
this DT ^ ^ repeat
this DT this ^ OK
is VBZ is ^ OK
kind RB ^ ^ filler
of RB ^ ^ filler
amazing JJ amazing ^ OK
to IN to ^ OK
me PRP me ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
intend VB intend ^ OK
to TO to ^ OK
use VB use ^ OK
it PRP it ^ OK
unless IN unless ^ OK
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
get VB get ^ OK
rid VBN rid ^ OK
of IN of ^ OK
a DT a ^ OK
specific JJ specific ^ OK
person NN person ^ OK

i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
need VBP need ^ OK
to TO to ^ OK
come VBN come ^ OK
up RB up ^ OK
with IN with ^ OK
a DT a ^ OK
more RBR more ^ OK
truly RB truly ^ OK
random JJ random ^ OK
system NN system ^ OK
than IN than ^ OK
what WP what ^ OK
they PRP they ^ OK
've VBP 've ^ OK
got VBN got ^ OK
now RB now ^ OK

it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
a DT a ^ OK
little JJ little ^ OK
weird NN weird ^ OK
because IN because ^ OK
there EX there ^ OK
's BES 's ^ OK
so RB so ^ OK
many JJ many ^ OK
industries NNS industries ^ OK
where WRB where ^ OK
if IN if ^ OK
you PRP you ^ OK
've VBP 've ^ OK
got VBN got ^ OK
somebody NN somebody ^ OK
that DT ^ ^ repeat
that WDT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
abusing VBG abusing ^ OK
a DT a ^ OK
substance NN substance ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
'll MD 'll ^ OK
affect VB affect ^ OK
you PRP ^ ^ false_start
your PRP your ^ OK
personal JJ personal ^ OK
safety NN safety ^ OK
directly RB directly ^ OK

m- XX ^ ^ false_start
variables NNS variables ^ OK
that WDT that ^ OK
you PRP you ^ OK
do VBP do ^ OK
n't RB n't ^ OK
need VB need ^ OK
to TO to ^ OK
deal VB deal ^ OK
with IN with ^ OK

i UNK i ^ OK
do UNK do ^ OK
n't UNK n't ^ OK
know UNK know ^ OK
my UNK my ^ OK

job NN a ^ false_start
so UH ^ ^ filler
i- PRP ^ ^ false_start
job NN job ^ OK
opportunity NN opportunity ^ OK
came VBD came ^ OK
up RB up ^ OK
and CC and ^ OK
i PRP i ^ OK
moved VBD moved ^ OK
down IN down ^ OK
here RB here ^ OK

the DT the arg1 OK
the DT ^ ^ repeat
um UH ^ ^ filler
the DT ^ ^ repeat
o- XX ^ ^ false_start
classics NNS classics arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP ^ ^ false_start
're VBP 're predicate OK
just RB just arg2 OK
the DT the arg2 OK
best JJS best arg2 OK

i PRP ^ ^ false_start
mean VBP ^ ^ filler
all PDT ^ ^ false_start
those DT ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
wh- WP ^ ^ repeat
what WP what arg1 OK
's BES 's predicate OK
m- JJR ^ ^ repeat
much RB much arg2 OK
more JJR more arg2 OK
fun NN fun arg2 OK
than IN ^ ^ repeat
t- XX ^ ^ repeat
than IN than arg2 OK
all DT ^ ^ repeat
um UH ^ ^ filler
all DT ^ ^ repeat
what WP ^ ^ false_start
was VBD ^ ^ false_start
it PRP ^ ^ false_start
all NP-PRD-2 all arg2 OK
about DT about arg2 OK
eve IN eve arg2 OK
with NNP with arg2 OK
bette IN bette arg2 OK
davis NNP davis arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
m- XX ^ ^ false_start
in IN in ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
all PDT all ^ false_start
these DT ^ ^ repeat
these DT these ^ OK
films NNS films ^ OK
the DT ^ ^ repeat
the DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
joan NNP joan arg1 OK
crawfords NNPS crawfords arg1 OK
and CC and arg1 OK
lana NNP lana arg1 OK
turner NNP turner arg1 OK
and CC ^ ^ false_start
oh UH ^ ^ filler
they PRP ^ ^ repeat
they PRP ^ ^ false_start
're VBP ^ ^ repeat
're VBP are predicate false_start
just RB ^ ^ repeat
just RB just arg2 OK
wonderful JJ wonderful arg2 OK

i PRP ^ arg1 filler
mean VBP ^ ^ filler
that DT ^ ^ repeat
th- DT ^ ^ repeat
that DT those arg1 false_start
's BES ^ ^ repeat
's BES 're predicate false_start
those DT those arg2 OK
adventure NN adventure arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
special JJ special arg2 OK
sci- XX ^ ^ false_start
effects NNS effects arg2 OK
that WRB that arg2 OK
you PRP you arg0 OK
do VBP do arg2 OK
n't RB n't arg2 OK
really RB really arg2 OK
have VB have arg2 OK
to TO to arg1 OK
have VB have arg1 OK
actors NNS actors arg1 OK
like UH for ^ false_start
like UH ^ ^ filler
because IN because ^ OK
everything NN everything arg1 OK
else RB else arg1 OK
is VBZ is ^ OK
done VBN done predicate OK
for IN for arg2 OK
them PRP them arg2 OK

um UH ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
see VB see ^ OK
a DT ^ ^ repeat
a DT a ^ OK
s- NN ^ ^ repeat
screening NN screening ^ OK
of IN of ^ OK
a DT a ^ OK
film NN film ^ OK
on SBAR-1 on ^ OK
saturday IN saturday ^ OK
that NNP that ^ OK
i WDT i ^ OK
think PRP think ^ OK
is VBP is ^ OK
really VBZ really ^ OK

um UH ^ ^ filler
have VBP have ^ OK
you PRP you arg0 OK
heard VBN heard predicate OK
of IN of arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
film NN film arg1 OK
the DT the arg1 OK
h- NNP ^ ^ repeat
human NNP human arg1 OK
stain NNP stain arg1 OK

oh UH ^ ^ false_start
my UH ^ ^ false_start
god UH ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
uh UH ^ ^ filler
anthony NNP anthony arg2 OK
hopkins NNP hopkins arg2 OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
one CD one ^ OK
of IN of ^ OK
those DT those ^ OK
films NNS films ^ OK
that WDT that ^ OK

uh UH ^ ^ filler
it PRP ^ ^ repeat
um UH ^ ^ filler
it PRP it arg0 OK
has VBZ ^ ^ repeat
has VBZ has predicate OK
a DT ^ ^ repeat
a DT ^ ^ repeat
oh UH ^ ^ filler
a DT a arg1 OK
s- NN ^ ^ repeat
s- NN ^ ^ repeat
s- NN ^ ^ repeat
story NN story arg1 OK
to IN to arg1 OK
it PRP it arg1 OK

um UH ^ arg1 filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the arg1 OK
dialogue NN dialogue arg1 OK
the DT the arg1 OK
writing NN writing arg1 OK
everything NN and ^ false_start
everything NN everything arg1 OK
is VBZ are predicate false_start
just RB just arg2 OK
a DT a arg2 OK
cut NN cut arg2 OK
above IN above arg2 OK
what WP what arg2 OK
you PRP you arg0 OK
usually RB usually arg2 OK
see VBP see arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
rement- VBP ^ ^ repeat
recommend VBP recommend predicate OK
st- XX ^ ^ repeat
seeing VBG seeing arg1 OK
it PRP it arg1 OK
because IN because ^ OK
it PRP it arg0 OK
will MD will ^ OK
at RB at ^ OK
least RBS least ^ OK
make VB make predicate OK
you PRP you arg0 OK
think VB think arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
n- RB ^ ^ repeat
^ ^ ^ ^ false_start
i PRP ^ ^ repeat
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
like VBP like predicate OK
to TO to arg1 OK
go VB go arg1 OK
to IN to arg4 OK
the DT the arg4 OK
movies NNS movies arg4 OK
and CC and arg1 OK
be VB be arg1 OK
entertained VBN entertained arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
that IN that arg1 OK
the DT the arg1 OK
caliber NN caliber arg1 OK
of IN of arg1 OK
movie NN movie arg1 OK
making VBG making arg1 OK
these DT these arg1 OK
days NNS days arg1 OK
is VBZ ^ ^ repeat
is VBZ is arg1 OK
up IN up arg2 OK
to IN to arg2 OK
par NN par arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
this DT this arg1 OK
film NN film arg1 OK
came VBD came predicate OK
along RB along ^ OK

it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
like IN like ^ OK
a DT a ^ OK

i PRP ^ ^ repeat
mean VBP ^ ^ filler
i PRP ^ ^ repeat
have VBP ^ ^ false_start
a- XX ^ ^ false_start
i PRP ^ ^ repeat
just RB ^ ^ false_start
i PRP i arg0 OK
enjoy VBP enjoy predicate OK
really RB really arg1 OK
good JJ good arg1 OK
movie NN movie arg1 OK
making NN making arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
uh UH ^ ^ filler
actually UH ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm ^ OK
kind RB kind ^ OK
of RB of ^ OK
waiting VBG waiting predicate OK
for IN for arg2 OK
it PRP it arg1 OK
to TO to arg2 OK
come VB come arg2 OK
on IN on arg4 OK
cable NN cable arg4 OK

i PRP i arg0 OK
've VBP 've ^ OK
heard VBN heard predicate OK
wonderful JJ wonderful arg1 OK
wonderful JJ wonderful arg1 OK
things NNS things arg1 OK
about IN about arg1 OK
it PRP it arg1 OK

see UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i- PRP ^ ^ repeat
i PRP i ^ OK
just RB ^ ^ repeat
just RB just ^ OK
do VBP ^ ^ repeat
really RB ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
have VB have ^ OK

a- XX ^ ^ filler
my PRP my arg1 OK
taste NN taste arg1 OK
does VBZ does ^ OK
n't RB n't ^ OK
really RB really ^ OK
go VB go predicate OK
in IN in arg2 OK
that DT that arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
f- NN ^ ^ repeat
film NN ^ ^ repeat
films NNS films arg2 OK

i PRP i ^ OK

i- PRP ^ ^ repeat
i PRP ^ ^ repeat
like UH ^ ^ filler
i PRP i ^ OK
am VBP am ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
go VB go ^ OK
pay VB pay ^ OK
money NN money ^ OK
to TO to ^ OK
see VB see ^ OK
drew NNP drew ^ OK
barrymore NNP barrymore ^ OK
and CC and ^ OK

i PRP ^ ^ repeat
just RB ^ ^ false_start
they PRP ^ ^ repeat
they PRP ^ ^ false_start
just RB ^ ^ false_start
don- VBP ^ ^ false_start
i PRP i arg0 OK
saw VBD saw predicate OK
the DT the arg1 OK
first JJ first arg1 OK
one NN one arg1 OK

it PRP it arg1 OK
came VBD came predicate OK
on IN on arg4 OK
cable NN cable arg4 OK

if IN if ^ OK
i PRP i arg0 OK
see VBP see predicate OK
them PRP them arg1 OK
on IN on arg1 OK
cable NN cable arg1 OK
then RB then ^ OK
i PRP i arg0 OK
'll MD 'll ^ OK
see VB see predicate OK
them PRP them arg1 OK

i PRP i arg0 OK
saw VBD saw ^ OK
s- XX ^ predicate repeat
another DT ^ ^ repeat
another DT another arg1 OK
film NN film arg1 OK

it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it arg1 OK
was VBD ^ ^ repeat
's BES 's predicate OK
a DT a arg2 OK
little JJ little arg2 OK
independent NN independent arg2 OK

it UNK it ^ OK
's UNK 's ^ OK
um UNK ^ ^ filler

i PRP i ^ OK
guess VBP guess ^ OK
if IN if ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
outside RB outside ^ OK
i PRP ^ ^ false_start
rollerblading VBG rollerblading ^ OK
is VBZ is ^ OK
probably RB probably ^ OK
the DT the ^ OK
most RBS most ^ OK
typical JJ typical ^ OK
one NN one ^ OK

so UH so ^ OK
where WRB ^ ^ repeat
where WRB where ^ OK
are VBP are ^ OK
you PRP you ^ OK
from IN from ^ OK

i PRP i ^ OK
went VBD went ^ OK
from IN from ^ OK
coast NN one ^ false_start
coast NN coast ^ OK
to IN to ^ OK
the DT the ^ OK
other JJ other ^ OK

i PRP i ^ OK
've VBP 've ^ OK
only RB only ^ OK
been VBN been ^ OK
in IN in ^ OK
new NNP new ^ OK
york NNP york ^ OK
for IN for ^ OK
about RB about ^ OK
um UH ^ ^ filler
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
months NNS months ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

eh UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
very RB very ^ OK
good JJ good ^ OK
at IN at ^ OK
it PRP it ^ OK

but CC but ^ OK
uh UH ^ ^ filler
i PRP i ^ OK
had VBD had ^ OK
a DT a ^ OK
good JJ good ^ OK
time NN time ^ OK
falling VBG ^ ^ repeat
eh UH ^ ^ filler
falling VBG falling ^ OK
down RB down ^ OK
and CC and ^ OK
drinking VBG drinking ^ OK
hot JJ hot ^ OK
chocolate NN chocolate ^ OK

and CC ^ ^ false_start
do VBP do ^ OK
you PRP you ^ OK
raise VB raise ^ OK
them PRP them ^ OK
for IN ^ ^ repeat
for IN for ^ OK
competitions NNS competitions ^ OK

and CC ^ ^ false_start
how WRB how ^ OK
did VBD did ^ OK
you PRP you ^ OK
get VB get ^ OK
started VBN started ^ OK
in IN ^ ^ repeat
in IN in ^ OK
this DT this ^ OK
business NN business ^ OK
of IN of ^ OK
breeding VBG breeding ^ OK
dogs NNS dogs ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
it PRP it ^ OK
's HVS 's ^ OK
been VBN been ^ OK
really RB ^ ^ false_start
like UH ^ ^ filler
into IN into ^ OK
into IN ^ ^ repeat
the DT the ^ OK
the DT ^ ^ repeat
twenties NNS twenties ^ false_start
some DT some ^ OK
days NNS days ^ OK

and CC ^ ^ false_start
at IN at ^ OK
night NN night ^ OK
getting VBG getting ^ OK
down IN down ^ OK
into IN into ^ OK
the DT the ^ OK
teens NNS teens ^ OK

it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
good JJ good ^ OK
change NN change ^ OK
from IN ^ ^ repeat
from IN from ^ OK
california NNP california ^ OK
and CC and ^ OK
from IN from ^ OK
los NNP los ^ OK
angeles NNP angeles ^ OK

and CC ^ ^ false_start
to TO to ^ OK
sort RB sort ^ OK
of RB of ^ OK

we PRP ^ ^ repeat
we PRP we ^ OK
've VBP ^ ^ repeat
have VBP have ^ OK
n't RB n't ^ OK
had VBN ^ ^ repeat
had VBN had ^ OK
a DT ^ ^ repeat
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
snow NN snow ^ OK

but CC ^ ^ repeat
but CC but ^ OK
we PRP we ^ OK
've VBP 've ^ OK
had VBN had ^ OK
a DT a ^ OK
couple NN couple ^ OK
of IN of ^ OK
good JJ good ^ OK
snowfalls NNS snowfalls ^ OK
with IN with ^ OK
some DT some ^ OK
flurries NNS flurries ^ OK

i PRP i ^ OK
suppose VBP suppose ^ OK
it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK
when WRB when ^ OK
it PRP it ^ OK
rains VBZ rains ^ OK
in IN ^ ^ repeat
in IN in ^ OK
l. NNP l. ^ OK
a. NNP a. ^ OK

when WRB when ^ OK
it PRP it ^ OK
rains VBZ rains ^ OK
in IN in ^ OK
l. NNP l. ^ OK
a. NNP a. ^ OK
people ADVP-TMP- 1 people ^ OK
just NNS just ^ OK
forget RB forget ^ OK
how VBP how ^ OK
to WRB to ^ OK
drive TO drive ^ OK
because VB because ^ OK
it IN it ^ OK
hardly PRP hardly ^ OK
ever RB ever ^ OK
rains RB rains ^ OK
there VBZ there ^ OK

so UH ^ ^ false_start
that DT ^ ^ false_start
but CC but ^ OK
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i ^ OK
like VBP like ^ OK
snow NN snow ^ OK
now RB now ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
so RB so ^ OK
it PRP it ^ OK
's BES 's ^ OK
still RB still ^ OK
beautiful JJ beautiful ^ OK
for IN for ^ OK
me PRP me ^ OK

she PRP she ^ OK
got VBD got ^ OK
away RB away ^ OK
from IN from ^ OK
the DT the ^ OK
chicago NNP chicago ^ OK
winters NNS winters ^ OK

i PRP i ^ OK
think VBP think ^ OK
maybe RB maybe ^ OK
if IN if ^ OK
you PRP you ^ OK
grow VBP grow ^ OK
up RB up ^ OK
with IN with ^ OK
it PRP it ^ OK
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
so RB so ^ OK
nice JJ nice ^ OK

n- XX n- ^ OK
da- XX da- ^ OK

probably RB probably ^ OK
more RBR more ^ OK
so RB so ^ OK
than IN than ^ OK
here RB here ^ OK

but CC but ^ OK
when WRB ^ ^ repeat
when WRB when ^ OK
you PRP you ^ OK
get VBP get ^ OK
older JJR older ^ OK
you ADVP-TMP- 1 you ^ OK
start PRP start ^ OK
to VBP to ^ OK
think TO think ^ OK
hm VB hm ^ OK
it UH it ^ OK
's PRP 's ^ OK
not BES not ^ OK
so RB so ^ OK
nice RB nice ^ OK
being JJ being ^ OK
out VBG out ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
believe VBP believe ^ OK
that IN that ^ OK
money NN money ^ OK
does VBZ does ^ OK
bring VB bring ^ OK
happiness NN happiness ^ OK
in IN ^ ^ repeat
in IN ^ ^ false_start
some DT ^ ^ false_start
senses NNS ^ ^ false_start

th- XX th- ^ OK

then RB ^ ^ repeat
then RB then ^ OK
they PRP they ^ OK
have VBP have ^ OK
to TO to ^ OK
take VB take ^ OK
the DT the ^ OK
taxes NNS taxes ^ OK
out IN out ^ OK
of IN of ^ OK
that DT that ^ OK

and CC ^ ^ false_start
then RB ^ ^ filler
what WP what ^ OK
ever RB ever ^ OK
problems NNS other ^ false_start
else RB ^ ^ filler
problems NNS problems ^ OK
you PRP you ^ OK
get VBP get ^ OK
with IN with ^ OK
all PDT all ^ OK
that DT that ^ OK
money NN money ^ OK
at IN at ^ OK
once RB once ^ OK

then RB then ^ OK
you PRP you ^ OK
have VBP have ^ OK
all PDT all ^ OK
these DT these ^ OK
family NN family ^ OK
you PRP you ^ OK
never RB never ^ OK
knew VBD knew ^ OK
about IN about ^ OK

it PRP it ^ OK
's BES 's ^ OK
weird JJ weird ^ OK
because IN because ^ OK
i PRP i ^ OK
thought VBD thought ^ OK
i PRP i ^ OK
would MD would ^ OK
get VB get ^ OK
somebody NN somebody ^ OK
i PRP i ^ OK
know VBP know ^ OK
on NP-1 on ^ OK
the IN the ^ OK
phone DT phone ^ OK
eventually NN eventually ^ OK

it PRP it ^ OK
's BES 's ^ OK

now UH ^ ^ filler
i PRP ^ ^ false_start
never RB ^ ^ false_start
heard VBD ^ ^ false_start
of IN ^ ^ false_start
th- DT ^ ^ false_start
well UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
the DT the ^ OK
university NNP university ^ OK
of IN of ^ OK
pennsylvania NNP pennsylvania ^ OK

w- XX ^ ^ false_start
now RB now ^ OK
maybe RB maybe ^ OK
you PRP you ^ OK
can MD can ^ OK
tell VB tell ^ OK
me PRP me ^ OK

well UH ^ ^ filler
because IN ^ ^ false_start
i PRP i ^ OK
like VBP like ^ OK

when WRB when ^ OK
just RB ^ ^ filler
christmas NNP christmas arg1 OK
come VBP comes predicate false_start
around RB around arg4 OK
it ADVP-TMP- 1 it arg1 OK
seem VBP ^ ^ repeat
seems PRP seems predicate OK
that IN ^ ^ repeat
like VBZ like arg2 OK
everybody IN everybody arg1 OK
is NN is arg2 OK
more VBZ ^ ^ repeat
happier RBR happier arg2 OK
and JJR and arg2 OK
you CC ^ ^ filler
know PRP ^ ^ filler
things VBP things arg1 OK
are NNS are arg2 OK
fresher VBP fresher arg2 OK

and CC ^ ^ false_start
then RB then ^ OK
i PRP i ^ OK
get VBP become ^ false_start
broke JJ broke ^ OK
as IN as ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK

but CC ^ ^ false_start
other RB other ^ OK
than IN than ^ OK
that DT that ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP ^ ^ repeat
like VBP like predicate OK
christmas NNP christmas arg1 OK
because IN because ^ OK
all PDT all arg1 OK
the DT of arg1 OK
the DT the arg1 OK
family NN family arg1 OK
get VBP gets predicate false_start
together RB together arg2 OK

i UNK i arg1 OK
'm UNK 'm predicate OK
in UNK in arg2 OK
l. UNK l. arg2 OK
a. UNK a. arg2 OK

that DT ^ ^ false_start
it- XX ^ ^ false_start
one CD one ^ OK
year NN year ^ OK
we PRP we arg1 OK
went VBD went predicate OK
to IN to arg4 OK
big NNP big arg4 OK
bear NNP bear arg4 OK
for IN for arg4 OK
christmas NNP christmas arg4 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have predicate OK
w- XX ^ ^ repeat
one CD one arg1 OK

n- UH ^ ^ repeat
no UH no ^ OK

have VBP have ^ OK
you PRP you arg0 OK
ever RB ever ^ OK
showed VBN shown predicate false_start
it PRP it arg1 OK
to IN to arg2 OK
him PRP him arg2 OK

have VBP have ^ OK
you PRP you arg0 OK
showed VBN shown predicate false_start
that DT that arg1 OK
to IN to arg2 OK
him PRP him arg2 OK
since IN since ^ OK
he PRP he arg1 OK
's HVS 's ^ OK
been VBN been predicate OK
grown JJ grown arg2 OK

um UH ^ ^ filler
practically RB practically ^ OK
here RB here ^ OK
when WRB when ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK

at IN ^ ^ repeat
at IN at ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
son NN son ^ OK
's POS 's ^ OK
school NN school ^ OK

but CC but ^ OK
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
time NN time ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
here RB here ^ OK
or CC or ^ OK

he PRP ^ ^ false_start
had VBD ^ ^ false_start
she PRP she arg0 OK
was VBD was ^ OK
doing VBG doing predicate OK
it PRP it arg1 OK

and CC ^ ^ false_start
she PRP she arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
girl NN girl arg1 OK
you PRP you arg0 OK
need VBP need arg1 OK
to TO to arg1 OK
call VB call arg1 OK
and CC and arg1 OK
just RB just arg1 OK
see VB see arg1 OK
you PRP ^ ^ false_start
know VB ^ ^ false_start
how WRB ^ ^ false_start
it PRP ^ ^ false_start
goes VBZ ^ predicate false_start

for IN for ^ OK
well UH ^ ^ filler
s- XX ^ ^ repeat
similar JJ similar ^ OK
reasons NNS reasons ^ OK
plus CC plus ^ OK
the DT the ^ OK
food NN food ^ OK
and CC and ^ OK
the DT the ^ OK
family NN family ^ OK

then RB ^ ^ false_start
so RB ^ ^ false_start
that DT ^ ^ false_start
would MD ^ ^ false_start
be VB ^ ^ false_start
th- XX ^ ^ false_start
you PRP you arg0 OK
like VBP like predicate OK
christmas NNP christmas arg1 OK
and CC and arg1 OK
your PRP your arg1 OK
birthday NN birthday arg1 OK

so UNK ^ ^ false_start
are UNK are ^ OK
're UNK ^ predicate repeat
you UNK you arg1 OK
you UNK ^ ^ repeat
really UNK really arg2 OK
in UNK in arg2 OK
l. UNK l. arg2 OK
a. UNK a. arg2 OK

that ADVP-LOC- 1 that arg2 false_start
would DT would ^ false_start
be RB be predicate false_start
really MD really ^ false_start
cool VB cool ^ false_start
though JJ though ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
christmas NNP ^ ^ false_start
would MD ^ ^ false_start
um UH ^ ^ false_start
if IN if ^ OK
i PRP i arg0 OK
could MD could ^ OK
go VB go predicate OK
like UH ^ ^ filler
some DT some argM_loc OK
place NN place argM_loc OK
like IN like argM_loc OK
new NNP new argM_loc OK
york NNP york argM_loc OK
or CC or argM_loc OK
where WRB where argM_loc OK
it PRP it arg4 OK
snows VBZ snows arg4 OK
at IN at argM_tmp OK
christmas NNP christmas argM_tmp OK

and CC ^ ^ false_start
colorado NNP colorado ^ OK
in IN ^ ^ repeat
in IN in ^ OK
high JJ high ^ OK
school NN school ^ OK

when WRB when ^ OK
he PRP he arg1 OK
was VBD was predicate OK
three CD three arg2 OK
i ADVP-TMP- 1 i arg0 OK
took PRP took predicate OK
him VBD him arg1 OK
back PRP back argM_loc OK
to RB to argM_loc OK
colorado IN colorado argM_loc OK
eh NNP ^ ^ filler
w- UH ^ ^ false_start
at XX to argM_loc false_start
my IN ^ ^ repeat
his NNS his argM_loc OK
parents PRP ^ ^ repeat
grandparents PRP grandparents argM_loc OK
for NNS for argM_tmp OK
christmas IN christmas argM_tmp OK

there EX there ^ OK
was VBD was predicate OK
a DT a arg1 OK
christmas NNP christmas arg1 OK
ball NN ball arg1 OK
on IN on argM_loc OK
the DT the argM_loc OK
christmas NNP christmas argM_loc OK
tree NN tree argM_loc OK
at IN ^ ^ repeat
at IN at argM_loc OK
my PRP ^ ^ repeat
my PRP my argM_loc OK
grand- NNS ^ ^ repeat
dad NN dad argM_loc OK
's POS 's argM_loc OK
house NN house argM_loc OK

y- PRP ^ ^ repeat
y- PRP ^ ^ repeat
you PRP you arg0 OK
enjoy VBP enjoy predicate OK
yourself PRP yourself arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
was- VBD ^ ^ repeat
's BES 's predicate OK
just RB just arg2 OK
him PRP him arg2 false_start
and CC and arg2 OK
me PRP me arg2 false_start

i PRP i arg0 OK
did VBD did predicate OK

do VB ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
wo- VB ^ ^ repeat
work VB work predicate OK
full-time RB full-time ^ OK

so UH ^ ^ false_start
um UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK
else RB else ^ OK
you PRP you ^ OK
're VBP 're ^ OK
supposed VBN supposed ^ OK
to- TO to- ^ OK

what WP what arg1 OK
else RB else arg1 OK
did VBD did ^ OK
she PRP she arg0 OK
say VB say predicate OK

take VB take ^ OK
our PRP our ^ OK
favorite JJ favorite ^ OK
holiday NN holiday ^ OK
and CC and ^ OK
do VB do ^ OK
what WP what ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
i- PRP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
just RB ^ ^ false_start
well UH ^ ^ false_start
it- PRP ^ ^ OK
also RB ^ ^ false_start
its PRP ^ ^ false_start
when WRB ^ ^ repeat
i PRP ^ ^ false_start
had VBD ^ ^ false_start
when WRB when ^ OK
my PRP my arg1 OK
son NN son arg1 OK
was VBD was predicate OK
little JJ little arg2 OK
it ADVP-TMP- 1 ^ ^ repeat
it VBD it arg1 OK
was PRP ^ ^ repeat
was PRP was predicate OK
more VBD more arg2 OK
fun RBR fun arg2 OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
whole JJ whole arg2 OK
trip NN trip arg2 OK

its PRP it ^ false_start
its PRP 's arg1 false_start
so RB so arg2 OK
cute JJ cute arg2 OK

and CC ^ arg0 repeat
he PRP ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
p. FW ^ ^ false_start
s. FW ^ ^ false_start
eh UH ^ ^ filler
oh UH ^ ^ filler
^ ^ he ^ OK
goes VBZ ^ ^ repeat
says VBZ says predicate OK
um UH ^ ^ filler
there EX there arg1 OK
's BES 're arg1 OK
cookies NNS cookies arg1 OK
for IN for arg1 OK
you PRP you arg1 OK
santa NNP santa arg1 OK
and CC and arg1 OK
water NN water arg1 OK
for IN for arg1 OK
the DT the arg1 OK
reindeer NN reindeer arg1 OK

when WRB ^ ^ false_start
i PRP ^ ^ false_start
when WRB when ^ OK
he PRP he arg1 OK
was VBD was predicate OK
little JJ little arg2 OK
i ADVP-TMP- 1 i arg0 OK
would PRP would ^ OK
tell MD tell predicate OK
him VB him arg2 OK
i PRP i arg1 OK
'd PRP 'd arg1 OK
rather MD rather arg1 OK
he RB he arg0 OK
would PRP would arg1 OK
make MD make arg1 OK
me VB me arg3 OK
something PRP something arg1 OK
or NN or arg1 OK
write CC write arg1 OK
a VB a arg1 OK
card DT card arg1 OK
or PRP or arg1 false_start
pick CC pick arg1 false_start
flowers VB flowers ^ false_start
than NN than arg1 OK
get IN ^ ^ false_start
to VB ^ ^ false_start
buy TO buy arg1 OK
it VB it arg1 OK
flowers VB ^ arg1 false_start
out NNS ^ ^ false_start
of IN ^ ^ false_start
the IN ^ ^ false_start
you DT ^ ^ filler
know PRP ^ ^ filler
anything VBP ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

he PRP ^ ^ repeat
he PRP he ^ OK
wrote VBD wrote ^ OK
me PRP me ^ OK
the DT ^ ^ repeat
the DT the ^ OK
greatest JJS greatest ^ OK
cards NNS cards ^ OK
all RB all ^ OK
through IN through ^ OK

he UNK he arg0 OK
lives UNK lives predicate OK
in UNK in arg1 OK
um UNK ^ ^ filler
west UNK west arg1 OK
l. UNK l. arg1 OK
a. UNK a. ^ OK

well UH ^ ^ filler
he PRP he arg0 OK
runs VBZ runs predicate OK
an DT an arg1 OK
antique NN antique arg1 OK
store NN store arg1 OK
on IN on argM_loc OK
sunset NNP sunset argM_loc OK
um UH ^ ^ filler
boulevard NNP boulevard argM_loc OK

but CC but ^ OK
they PRP they ^ OK
let VB let ^ OK
him PRP him ^ OK
stay VB stay ^ OK
in IN in ^ OK
one CD one ^ OK
of IN of ^ OK
their PRP their ^ OK

so RB ^ ^ filler
where WRB ^ ^ repeat
where WRB where arg2 OK
are VBP are predicate OK
you PRP you arg1 OK

well UH ^ ^ filler
what WP what arg1 OK
do VBP do predicate OK
you PRP you arg0 OK
during IN ^ ^ repeat
um UH ^ ^ filler
during IN during argM_tmp OK
the DT the argM_tmp OK
day NN day argM_tmp OK

uh UH ^ ^ filler
how WRB how ^ OK
did VBD did ^ OK
you PRP you arg0 OK
find VB find predicate OK
this DT ^ ^ repeat
this DT this arg1 OK

um UH ^ ^ filler
i PRP i arg1 OK
was VBD was predicate OK
surprised VBN surprised arg2 OK
i PRP i arg0 OK
ran VBD ran predicate OK
across IN across arg1 OK
this DT ^ ^ repeat
this DT this arg1 OK
phone NN phone arg1 OK
thing NN thing arg1 OK

well UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
was VBD was ^ OK
just RB just ^ OK
doing VBG doing predicate OK
one CD one arg1 OK
of IN of arg1 OK
those DT those arg1 OK
things NNS things arg1 OK
where WRB where ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ false_start
opened VBD ^ ^ false_start
my PRP ^ ^ false_start
i PRP i arg0 OK
do VBP ^ ^ repeat
get VBP get predicate OK
paid VBN paid arg1 OK
e-mails NNS e-mails arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP ^ ^ false_start
ended VBD ^ ^ false_start
up RP ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
how WRB ^ ^ false_start
you PRP you arg1 OK
'll MD 'll ^ OK
go VB go predicate OK
on IN on arg4 OK
one CD one arg4 OK
site NN site arg4 OK
with IN with ^ OK
it PRP it ^ OK
and ADVP-2 and ^ OK
there CC there ^ OK
's EX 's ^ OK
something BES something arg0 OK
interests NN which ^ false_start
interests NN interests predicate OK
you VBZ you arg1 OK
and PRP and ^ OK
you ADVP-2 you arg0 OK
go CC go predicate OK
there PRP there arg4 OK

anywhere RB anywhere ^ OK
from IN ^ ^ repeat
from IN from ^ OK
a DT a ^ OK
penny NN ^ ^ repeat
penny NNP penny ^ OK
to IN ^ ^ false_start
to IN to ^ OK
five CD five ^ OK
cents NNS cents ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
th- DT ^ ^ repeat
the DT the ^ OK
most JJS most ^ OK

but CC but ^ OK
it PRP it arg0 OK
interests VBZ interests predicate OK
me PRP me arg1 OK
because IN because ^ OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
was VBD was predicate OK
about IN about arg2 OK
communicating VBG communication arg2 false_start
and CC and arg2 OK
phone NN phone arg2 OK
calls NNS calls arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
so RB ^ ^ filler
i PRP i arg0 OK
just RB just ^ OK
thought VBD thought predicate OK
what WP what arg1 OK
the DT the arg1 OK
heck NN heck arg1 OK

did VBD did ^ OK
she PRP ^ ^ repeat
she PRP she arg0 OK
tell VB tell predicate OK
you PRP you arg2 OK
about IN about arg1 OK
it PRP it arg1 OK

so RB ^ ^ false_start
you PRP you arg1 OK
were VBD were predicate OK
lucky JJ lucky arg2 OK
that IN that ^ OK
she PRP she arg0 OK
told VBD told predicate OK
you PRP you arg2 OK

it ADVP-TMP- 1 ^ ^ false_start
w- PRP ^ ^ false_start
eh PRP ^ ^ filler
d- UH ^ ^ false_start
we XX we arg0 OK
had PRP had predicate OK
a VBD a arg1 OK
bunch DT bunch arg1 OK
of NN of arg1 OK
cracking IN cracking arg1 OK
noises JJ noises arg1 OK
on NNS on argM_loc OK
it IN it argM_loc OK
when WRB when argM_tmp false_start
the DT the arg1 false_start
stereo NN stereo arg1 false_start
got VBD got argM_tmp false_start
here RB here arg2 false_start

now RB now argM_tmp OK
i PRP i arg1 OK
'm VBP 'm predicate OK
stuck JJ stuck arg2 OK
with IN with arg2 OK
all PDT all arg2 OK
these DT these arg2 OK
c. NN c. arg2 OK
d.s NNS d.s arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
'm VBP 'm arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
get VB get arg1 OK
one CD one arg1 OK
of IN of arg1 OK
those DT those arg1 OK
those DT _NOUN_ arg1 false_start
that WDT that arg1 OK
you PRP you arg0 OK
hook VBP hook arg1 OK
on IN on arg2 OK
your PRP your arg2 OK
hip NN hip arg2 OK
and CC and arg1 OK
ride VBP ride arg1 OK
around RB around arg1 OK
on IN on arg1 OK
the DT the arg1 OK
freeways NNS freeways arg1 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
listening VBG listening arg1 OK
to IN to arg1 OK
music NN music arg1 OK
during IN during argM_tmp OK
the DT the argM_tmp OK
day NN day argM_tmp OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
uh UH ^ ^ filler
the DT ^ arg1 false_start
y- PRP the ^ filler
internet NN ^ arg1 false_start
it PRP internet ^ false_start
can MD can arg1 OK
be VB be arg1 OK
exhausted VBN exhausted arg2 OK

and CC ^ ^ false_start
this DT this arg1 OK
was VBD was ^ OK
done VBN done predicate OK
in IN in argM_tmp OK
the DT ^ ^ repeat
the DT the argM_tmp OK
sixties NNS sixties argM_tmp OK
or CC or argM_tmp OK
seventies NNS seventies argM_tmp OK
when WRB when argM_tmp OK
computers NNS computers arg1 OK
first RB first argM_tmp OK
came VBD came argM_tmp OK
out RB out arg2 OK

huh UH ^ ^ filler
and CC ^ ^ false_start
so RB ^ ^ filler
what WP what ^ OK
we PRP we ^ OK
're VBP 're ^ OK
experiencing VBG experiencing ^ OK
just RB just ^ OK
s- XX ^ ^ filler
every DT every ^ OK
time NN time ^ OK
you PRP you ^ OK
buy VBP buy ^ OK
a DT a ^ OK
tape NN tape ^ OK
or CC or ^ OK
something NN something ^ OK
e- ADVP-TMP- 2 ^ ^ filler
how XX how ^ OK
much WRB much ^ OK
you JJ you ^ OK
can PRP can ^ OK
put MD put ^ OK
maybe VB maybe ^ OK
two RB two ^ OK
three CD three ^ OK
screenplays CD screenplays ^ OK
on NNS on ^ OK
a IN a ^ OK
disk DT disk ^ OK
that NN that ^ OK
you WDT you ^ OK
have PRP have ^ OK
in VBP in ^ OK
your IN your ^ OK
computer PRP computer ^ OK

and CC ^ ^ false_start
um UH um ^ OK

but CC ^ ^ false_start
m- XX ^ ^ false_start
even RB even ^ OK
though IN though ^ OK
that DT that arg1 OK
's BES 's predicate OK
down RB down arg2 OK
rated JJ rated arg2 OK
you PRP you arg0 OK
you PRP have ^ false_start
got VBN got predicate OK
to TO to arg2 OK
look VB look arg2 OK
at IN at arg1 OK
how WRB how arg2 OK
much JJ much arg2 OK
the DT the arg1 OK
computers NNS computers arg_particl OK
cost VB cost arg_particl OK
whenever WRB whenever arg_particl OK
they PRP they arg_particl OK
were VBD were arg_particl OK
first RB first arg_particl false_start
made VBN made arg_particl OK
before ADVP-TMP- 3 before arg_particl OK
they IN they arg1 OK
came PRP came arg_particl OK
out VBD out arg_particl OK
to RB to arg2 OK
the IN the arg2 OK
public DT public arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
so RB ^ ^ filler
you PRP you arg0 OK
see VBP see predicate OK
how WRB how arg1 OK
they PRP they arg0 OK
were VBD were arg1 OK
able JJ able arg2 OK
to TO to arg2 OK
put VB put arg2 OK
everything NN everything arg1 OK
on IN on arg1 OK
the DT the arg1 OK
earth NN earth arg1 OK
that WDT that arg1 OK
was VBD was arg1 OK
ever RB ever arg1 OK
r- VBN ^ ^ repeat
recorded VBN recorded arg1 OK
in NP-1 in arg2 OK
a IN a arg2 OK
small DT small arg2 OK
cube JJ cube arg2 OK
and NN and arg2 OK
then CC then arg2 OK
reduce RB reduce arg2 OK
the VB the arg1 OK
price DT price arg1 OK
but NN but arg2 OK
also CC also arg2 OK
reduce RB reduce arg2 OK
the VB the arg1 OK
amount DT amount arg1 OK
of NN of arg1 OK
information IN information arg1 OK
you NN you arg0 OK
can PRP can arg1 OK
get MD get arg1 OK

i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
you PRP ^ ^ false_start
it PRP it arg0 OK
was VBD was arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
stuck VBN stuck arg2 OK
with IN with arg2 OK
a DT ^ ^ repeat
a DT a arg2 OK
whole JJ whole arg2 OK
c- NN ^ ^ repeat
catalog NN catalog arg2 OK
of IN of arg2 OK
disk NN disks arg2 false_start
and CC and arg2 OK
still RB still arg2 OK
only RB only arg2 OK
get VB get arg2 OK
limited JJ limited arg1 OK
information NN information arg1 OK

that DT that arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
money NN money arg2 OK

de- NN ^ ^ repeat
discuss NN discuss ^ OK
and CC and ^ OK
effort NN effort ^ OK
and CC and ^ OK
time NN time ^ OK
um UH ^ ^ filler
what WP what ^ OK
's BES 's ^ OK
already RB already ^ OK
there RB there ^ OK

so UH ^ ^ filler
you PRP you arg0 OK
have VBP have predicate OK
to TO to arg1 OK
walk VB walk arg1 OK
all RB all arg1 OK
over IN over arg1 OK
campus NN campus arg1 OK

um UH ^ ^ filler
i PRP i arg0 OK
am VBP am ^ OK
dorming VBG dorming predicate OK
right RB right argM_tmp OK
now RB now argM_tmp OK

uh UH ^ ^ filler
um UH ^ ^ filler
i PRP i arg0 OK
am VBP am ^ OK
majoring VBG majoring predicate OK
in IN in ^ OK
psychology NN psychology arg1 OK

we PRP we argM_tmp OK
moved VBD moved predicate OK
here RB ^ ^ repeat
um UH ^ ^ filler
right RB right arg2 OK
here RB ^ ^ repeat
there RB there arg2 OK
the DT in ^ false_start
the DT the argM_tmp OK
beginning NN beginning argM_tmp OK
of IN of argM_tmp OK
my PRP my argM_tmp OK
eighth JJ eighth argM_tmp OK
grade NN grade argM_tmp OK
year NN year argM_tmp OK

i PRP i arg0 OK
moved VBD moved predicate OK
with IN with argM_other OK
ah UH ^ ^ filler
my PRP my argM_other OK
mother NN mother argM_other OK
my PRP my argM_other OK
step NN step argM_other OK
dad NN dad argM_other OK
and CC and argM_other OK
my PRP my argM_other OK
younger JJR younger argM_other OK
sister NN sister argM_other OK

if IN if ^ false_start
anything NN anything ^ false_start
they PRP they arg0 OK
have VBP have predicate OK
on-campus JJ on-campus arg1 OK
jobs NNS jobs arg1 OK

what WP ^ ^ repeat
uh UH ^ ^ filler
what WP what arg2 OK
's BES ^ ^ repeat
's BES 's predicate OK
your PRP ^ ^ repeat
your PRP your arg1 OK
actual JJ actual arg1 OK
birthday NN birthday arg1 OK

um UH ^ ^ filler
actually UH actually ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
guess VBP ^ ^ repeat
guess VBP guess ^ OK
you PRP you ^ OK
could MD could ^ OK
say VB say ^ OK
my PRP my ^ OK
girlfriend NN girlfriend ^ OK

how WRB ^ ^ repeat
um UH ^ ^ filler
how WRB how argM_mnr OK
would MD ^ ^ repeat
would MD would argM_mod OK
you PRP ^ ^ repeat
you PRP you arg0 OK
go VB go predicate OK
about RB about arg1 OK
opening VBG opening arg1 OK
it PRP it arg1 OK
if IN if argM_adverb OK
money NN money arg1 OK
's BES 's argM_purpos OK
not RB not argM_neg OK
an DT an arg2 OK
issue NN issue arg2 OK

i PRP i arg3 OK
think VBP think predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
w- MD ^ ^ repeat
'd MD ^ ^ false_start
would MD would argM_mod OK
pick VB pick arg1 OK
a DT a arg1 OK
couple NN couple arg1 OK
of IN of arg1 OK
different JJ different arg1 OK
things NNS things arg1 OK
mine PRP for ^ false_start
um UH ^ ^ filler
mine PRP mine arg3 false_start

eh UH ^ arg1 filler
i PRP i arg0 OK
would MD would argM_mod OK
either RB either argM_adverb OK
open VB open predicate OK
up RP up arg_particl OK
my PRP my arg1 OK
own JJ own arg1 OK
daycare NN daycare arg1 OK
center NN center arg1 OK
or CC or ^ OK
or CC _ARG_ arg1 false_start
like UH ^ ^ filler
in IN in arg1 OK
advertising NN advertising arg1 OK
because IN because argM_cause OK
i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP ^ ^ repeat
like VBP like argM_cause OK
working VBG working arg1 OK
with IN with arg3 OK
like UH ^ ^ filler
children NNS children arg3 OK

but CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i arg0 OK
would MD would argM_mod OK
have VB have argM_mod OK
to TO to argM_mod OK
go VB go predicate OK
and CC and ^ OK
um UH ^ ^ filler
take VB take predicate OK
a DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
courses NNS courses arg1 OK
on IN on arg1 OK
how WRB ^ ^ false_start
to TO ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
everything NN everything arg1 OK
about IN about arg1 OK
the DT the arg1 OK
daycare NN daycare arg1 OK
center NN center arg1 OK
and CC and ^ OK
take VB take predicate OK
the DT the arg1 OK
classes NNS classes arg1 OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just argM_adverb OK
learn VB learn predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
everything NN everything arg2 OK
there EX there arg1 OK
is VBZ is arg1 OK
about IN about arg2 OK
it PRP it arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
like UH ^ ^ filler
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
they PRP ^ ^ false_start
that WDT that arg0 OK
i PRP i arg0 OK
know VBP know arg0 OK
like UH ^ ^ filler
at IN at arg0 OK
w- NN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
work NN work arg0 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
they PRP ^ ^ false_start
will MD ^ ^ false_start
've VBP 've arg1 OK
told VBN told arg1 OK
me PRP me arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how argM_mnr OK
they PRP they arg0 OK
want VBP want arg1 OK
their PRP their arg1 OK
children NNS children arg1 OK
to TO to arg1 OK
go VB go arg1 OK
to IN to arg4 OK
daycare NN daycare arg4 OK

and UNK ^ ^ false_start
they UNK they arg0 OK
say UNK say predicate OK
it UNK it arg1 OK
's UNK 's arg1 OK
so UNK so arg2 OK
hard UNK hard arg2 OK
to UNK to arg2 OK
try UNK try arg2 OK
to UNK to arg1 OK
find UNK find arg1 OK
a UNK a arg1 OK
place UNK place arg1 OK
you UNK ^ ^ filler
know UNK ^ ^ filler
to UNK to arg1 OK
put UNK put arg1 OK
their UNK their arg1 OK
kids UNK kids arg1 OK
in UNK in argM_loc OK
daycare UNK daycare argM_loc OK
because UNK because argM_cause OK
there UNK there arg1 OK
's UNK 're arg1 OK
like UNK ^ ^ filler
like UNK ^ ^ filler
l- UNK ^ ^ repeat
long UNK long arg2 OK
waiting UNK ^ ^ repeat
waiting UNK waiting arg2 OK
lists UNK ^ ^ repeat
lists UNK lists arg2 OK
because UNK because argM_cause OK
people UNK people arg1 OK
are UNK are argM_cause OK
picky UNK picky arg2 OK
about UNK about arg2 OK
who UNK who arg1 OK
they UNK they arg0 OK
take UNK take arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
would MD would argM_mod OK
have VB have argM_mod OK
to TO to argM_mod OK
consider VB consider predicate OK
all PDT all arg1 OK
the DT the arg1 OK
options NNS options arg1 OK
about IN about arg1 OK
what WP what arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
children NNS children arg1 OK
i PRP i arg0 OK
would MD would argM_mod OK
you PRP ^ ^ filler
know VBP ^ ^ filler
allow VB allow arg1 OK
in IN in argM_loc OK
my PRP my argM_loc OK
daycare NN daycare argM_loc OK
center NN center argM_loc OK
because IN because argM_cause OK
you PRP you arg1 OK
have VBP have argM_mod OK
to TO to argM_mod OK
be VB be argM_cause OK
cautious JJ cautious arg2 OK
about IN about arg2 OK
things NNS things arg2 OK
like IN like arg2 OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
lice NN lice arg2 OK
and CC and arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
sit- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
germs NNS germs arg2 OK

and CC ^ ^ false_start
you PRP ^ ^ repeat
you PRP you arg0 OK
n- RB ^ ^ repeat
never RB never argM_neg OK
know VBP know predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
have VBP have argM_mod OK
to TO to argM_mod OK
think VB think predicate OK
about IN about arg1 OK
those DT those arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
things NNS things arg1 OK
and CC and arg1 OK
just RB ^ ^ false_start
like UH ^ ^ filler
the DT the arg1 OK
regulations NNS regulations arg1 OK

and CC ^ ^ false_start
um UH ^ ^ filler
like UH ^ ^ filler
i PRP ^ ^ false_start
'd MD ^ ^ false_start
like IN like argM_adverb OK
you PRP you arg0 OK
said VBD said predicate OK
i PRP i arg0 OK
would MD would argM_mod OK
have VB have argM_mod OK
to TO to argM_mod OK
advertise VBP advertise arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
for IN for argM_purpos OK
my PRP my argM_purpos OK
business NN business argM_purpos OK

and CC and ^ OK
um UH ^ ^ filler

i PRP ^ ^ repeat
w- MD ^ ^ false_start
i PRP ^ ^ false_start
myself PRP ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg1 OK
would MD would argM_mod OK
be VB be arg1 OK
picky JJ picky arg2 OK
about IN about arg2 OK
it PRP it arg2 OK

i PRP i arg2 OK
w- MD ^ ^ repeat
would MD would argM_mod OK
want VB want predicate OK
them PRP them arg1 OK
to TO to arg1 OK
be VB be predicate OK
be VB _ARG_ arg1 false_start

i PRP ^ arg1 filler
mean VBP ^ ^ filler
if IN if argM_adverb OK
you PRP you arg0 OK
're VBP 're ^ OK
just RB just argM_adverb OK
going VBG going argM_mod OK
to TO to argM_mod OK
have VB have arg1 OK
small JJ a ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
small JJ small arg1 OK
daycare NNP daycare arg1 OK
center NNP center arg1 OK
i PRP i arg0 OK
guess VBP guess predicate OK
if IN ^ ^ repeat
you PRP ^ ^ repeat
if IN if argM_adverb OK
you PRP you arg0 OK
really RB really argM_adverb OK
wanted VBD wanted arg1 OK
to TO to arg1 OK
you VP ^ ^ filler
know PRP ^ ^ filler
i VBP i arg0 OK
guess PRP guess arg1 OK
they VBP they arg0 OK
really PRP really argM_adverb OK
would RB would argM_mod OK
n't MD n't argM_neg OK
have RB have argM_mod OK
to VB to ^ OK
to VB _ARG_ argM_mod false_start

but CC ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
maybe RB maybe argM_adverb OK
you PRP you arg0 OK
could MD could argM_mod OK
get VB get predicate OK
more JJR more arg1 OK
business NN business arg1 OK
that DT that argM_mnr OK
way NN way argM_mnr OK

i PRP ^ ^ false_start
w- MD ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK

but CC ^ ^ false_start
it PRP ^ ^ false_start
just RB ^ ^ false_start
it PRP it arg1 OK
seems VBZ seems predicate OK
like IN like arg2 OK
it PRP it arg1 OK
'd S-1 'd argM_mod OK
be MD be arg2 OK
a VB a argM_extent OK
lot DT lot argM_extent OK
more NN ^ ^ false_start
easier RBR easier argM_extent OK
to JJR to arg2 OK
you TO ^ ^ filler
know PRP ^ ^ filler
have VBP have arg2 OK
some VB some arg1 OK
sort DT sort arg1 OK
of NN of arg1 OK
standards IN standards arg1 OK
you NNS ^ ^ filler
know PRP ^ ^ filler
like VBP ^ ^ filler
certain UH ^ ^ false_start
things JJ ^ ^ false_start
like NNS ^ ^ false_start
that IN ^ ^ false_start

i PRP ^ arg2 filler
mean VBP ^ ^ filler
it PRP it arg1 OK
would MD would argM_mod OK
have VB have argM_mod OK
to TO to argM_mod OK
be VB be predicate OK
for IN for arg2 OK
uh UH a ^ false_start
uh UH ^ ^ filler
d- XX ^ ^ false_start
number NN number arg2 OK
of IN of arg2 OK
rooms NNS rooms arg2 OK

probably RB ^ ^ false_start
definitely RB definitely ^ OK
unliti- JJ ^ ^ repeat
uh UH ^ ^ filler
unlimited JJ unlimited ^ OK
cash NN cash ^ OK
flow NN flow ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT a ^ OK
big JJ big ^ OK
plus NN plus ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
it PRP it ^ OK
all DT all ^ OK
boil- VBP ^ ^ repeat
boils VBZ boils ^ OK
down RB down ^ OK
to IN to ^ OK
being VBG being ^ OK
comfortable JJ comfortable ^ OK

are VBP ^ ^ repeat
are VBP are ^ OK
you PRP you ^ OK
outside RB outside ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
in IN ^ ^ repeat
in IN in ^ OK
re- NN ^ ^ repeat
retail NN retail ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's S-1 's ^ OK
actually BES actually ^ OK
more RB more ^ OK
fun JJR fun ^ OK
i NN i ^ OK
think PRP think ^ OK
to VBP ^ ^ repeat
to VB to ^ OK
always TO always ^ OK
meet TO ^ ^ repeat
meet RB meet ^ OK
different VB different ^ OK
people JJ people ^ OK

i PRP i ^ OK

it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
good JJ good ^ OK
what UH ^ ^ filler
place NN place ^ OK

ex- XX ^ ^ false_start
i PRP i ^ OK
m- VBD ^ ^ repeat
moved VBD moved ^ OK
to IN to ^ OK
florida NNP florida ^ OK
recently RB recently ^ OK

but CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
wa- VBD ^ ^ repeat
was VBD was ^ OK
really RB really ^ OK
laid JJ laid ^ OK
back RP back ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
born VBN born ^ OK
and CC and ^ OK
bred VBN bred ^ OK
in IN in ^ OK
philly NNP philly ^ OK

he PRP ^ ^ repeat
uh UH ^ ^ filler
eh UH ^ ^ filler
he PRP he ^ OK
goes VBZ ^ ^ false_start
goes VBZ asked ^ OK
uh UH ^ ^ filler
where WRB where ^ OK

i PRP i ^ OK
go VBP said ^ false_start
florida NNP florida ^ OK

he PRP he ^ OK
goes VBZ asked ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
moving VBG moving ^ OK
out IN out ^ OK
of IN of ^ OK
state NN state ^ OK

but CC ^ ^ false_start
like UH ^ ^ filler
according VBG ^ ^ repeat
according VBG according ^ OK
to IN ^ ^ repeat
to IN to ^ OK
my PRP ^ ^ repeat
my PRP my ^ OK
mom NNP mom ^ OK
she PRP she ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
like UH ^ ^ filler
give VB give ^ OK
me PRP me ^ OK
any DT any ^ OK
money NN money ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start

are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
in IN ^ ^ repeat
done JJ done ^ OK
done JJ ^ ^ false_start
school NN with ^ false_start
school NN school ^ OK

did VBD did ^ OK
they PRP they ^ OK
go VB go ^ OK
to IN to ^ OK
like UH ^ ^ filler
a DT a ^ OK
s- XX ^ ^ false_start
nice JJ nice ^ OK
like UH ^ ^ filler

so UH ^ ^ filler
did VBD ^ ^ repeat
di- VBD ^ ^ repeat
did VBD did ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
ha- VB ^ ^ repeat
have VB have ^ OK
to TO to ^ OK
take VB take ^ OK
loans NNS loans ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

like UH ^ ^ filler
did VBD did ^ OK
you PRP you ^ OK
make VB make ^ OK
lot NN lots ^ false_start
of IN of ^ OK
money NN money ^ OK
or CC or ^ OK
were VBD were ^ OK
you PRP you ^ false_start
just RB just ^ OK
working VBG working ^ OK

like UH ^ ^ filler
what WP ^ ^ repeat
what WP what ^ OK
's BES 's ^ OK
your PRP your ^ OK
job NN job ^ OK

what WDT ^ ^ repeat
like UH ^ ^ filler
what WDT ^ ^ repeat
c- XX ^ ^ false_start
w- WDT ^ ^ repeat
what WDT what ^ OK
major NN major ^ OK

uh UH ^ ^ filler
b- XX ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
working VBG working ^ OK
at IN at ^ OK
the DT the ^ OK
restaurant NN restaurant ^ OK

for- XX ^ ^ false_start
what WP ^ ^ false_start
's BES ^ ^ false_start
the DT ^ ^ false_start
topics NNS ^ ^ false_start
that WDT ^ ^ false_start
you PRP ^ ^ false_start
is VBZ is ^ OK
this DT this ^ OK
your PRP your ^ OK
second JJ second ^ OK
call NN call ^ OK
third JJ third ^ OK
call NN call ^ OK
call NN ^ ^ false_start
call NN ^ ^ false_start
call NN or ^ false_start
fourth JJ fourth ^ OK
call NN call ^ OK

like UH ^ ^ filler
what WP what ^ OK
kin- NN kin- ^ OK
like UH ^ ^ filler

so RB ^ ^ filler
do VBP ^ ^ repeat
do VB ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you ^ OK
live VB live ^ OK
in IN in ^ OK
the DT the ^ OK
city NN city ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
all RB all ^ OK
in IN in ^ OK
the DT the ^ OK
philadelphia NNP philadelphia ^ OK
weekly NNP weekly ^ OK

like UH ^ ^ filler
is BES is ^ OK
it PRP it ^ OK
the DT the ^ OK
same JJ same ^ OK
thing NN thing ^ OK
as IN as ^ OK
this DT this ^ OK
one CD one ^ OK
or CC ^ ^ false_start
no DT ^ ^ false_start

so RB ^ ^ filler
i PRP i ^ OK
know VBP know ^ OK
like UH ^ ^ filler

uh-uh UH uh-uh ^ OK

how WRB how ^ OK
far RB far ^ OK
are PP-1 are ^ OK
you VBP you ^ OK
from PRP from ^ OK
jersey IN jersey ^ OK
city NNP city ^ OK

but CC ^ ^ false_start
those DT ^ ^ repeat
those DT those arg1 OK
are VBP ^ ^ repeat
are VBP are predicate OK
so RB so arg2 OK
delicious JJ delicious arg2 OK

i ADVP-1 i arg0 false_start
guess PRP guess predicate false_start
d- RB ^ ^ false_start
deep RB deep arg1 OK
um UH ^ ^ filler
fried JJ fried arg1 OK
turkey NNP turkey arg1 OK
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
it PRP ^ ^ false_start
would MD would arg1 OK
n't RB n't argM_neg OK
be VB be arg1 OK
the DT the arg2 OK
place NN place arg2 OK
where WRB where arg2 OK
i PRP i arg0 OK
would MD would arg2 OK
take VB take arg2 OK
those DT those arg1 OK
extra JJ extra arg1 OK
calories NNS calories arg1 OK

so RB ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
really RB really ^ OK
have VB have predicate OK
that DT that arg1 OK
option NN option arg1 OK
of IN of arg1 OK
cooking NN cooking arg1 OK
s- RB ^ ^ repeat
so RB so ^ OK
much RB much ^ OK

and CC ^ ^ false_start
w- WP ^ ^ repeat
what WP ^ ^ false_start
's BES ^ ^ false_start
lu- XX ^ ^ false_start
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it arg1 OK
also RB also ^ OK
gets VBZ gets predicate OK
pretty RB pretty arg2 OK
expensive JJ expensive arg2 OK

which WDT which ^ OK
you PRP you ^ OK
never RB never ^ OK
realize VBP realize ^ OK
when WRB when ^ OK
you PRP you ^ OK
eat VBP eat ^ OK
at IN at ^ OK
home NN home ^ OK
whenever WRB whenever ^ OK
you PRP you ^ OK
feel VBP feel ^ OK
like IN like ^ OK
it PRP it ^ OK

so RB ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
come VBN come predicate OK
to TO to arg1 OK
appreciate VB appreciate arg1 OK
that DT that arg1 OK
in IN in arg1 OK
a DT a arg1 OK
whole JJ whole arg1 OK
new JJ new arg1 OK
way NN way arg1 OK

um UH ^ ^ filler
and CC ^ ^ false_start
actually RB actually ^ OK
we PRP we arg0 OK
have VBP have predicate OK
w- XX ^ ^ repeat
w- XX ^ ^ repeat
one CD one arg1 OK
stove NN stove arg1 OK
for IN for ^ OK
our PRP our ^ OK
whole JJ whole ^ OK
building NN building ^ OK

um UH ^ ^ filler
which WDT which ^ OK
is VBZ is ^ OK
n't RB n't ^ OK
really RB really ^ OK
m- JJ ^ ^ repeat
much JJ much ^ OK
of IN of ^ OK
a DT a ^ OK
cooking NN cooking ^ OK
facility NN facility ^ OK

um UH ^ ^ filler
so UH ^ ^ filler
preparation NN preparation arg1 OK
of IN of arg1 OK
your PRP your arg1 OK
own JJ own arg1 OK
food NN food arg1 OK
is VBZ is predicate OK
n't RB n't argM_neg OK
m- JJ ^ ^ repeat
much JJ much arg2 OK
of IN of arg2 OK
an DT an arg2 OK
option NN option arg2 OK

you ADVP-TMP- 1 you arg0 false_start
get PRP get predicate false_start
people VBP people arg0 false_start
coming NNS coming arg1 false_start
by VBG by arg4 false_start
just RB just arg1 false_start
to RB to arg1 false_start
m- TO ^ ^ false_start
have XX have arg1 false_start
a VB a arg1 false_start
bite DT bite arg1 false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
e- XX ^ ^ repeat
e- XX ^ ^ repeat
when WRB when argM_tmp OK
i PRP i arg0 OK
even RB even argM_tmp OK
make VBP make argM_tmp OK
popcorn NN popcorn arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
microwave NN microwave argM_loc OK

um UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg1 OK
ranges VBZ ranges predicate OK

um UH ^ ^ filler
i PRP i arg0 OK
love VBP love predicate OK
dairy NN dairy arg1 OK
products NNS products arg1 OK

uh UH ^ ^ filler
cheese NN cheese ^ OK
milk NN milk ^ OK
ice NN ice ^ OK
cream NN cream ^ OK
m- XX ^ ^ filler
yogurt NN yogurt ^ OK
even RB even ^ OK

um UH ^ ^ filler
m- XX ^ ^ filler
love VBP love ^ OK
all PDT all ^ OK
that DT that ^ OK
stuff NN stuff ^ OK

um UH ^ ^ filler
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
do VBP do predicate OK
my PRP my arg1 OK
best JJS best arg1 OK
to TO to arg2 OK
have VB have arg2 OK
as RB as arg1 OK
much JJ much arg1 OK
of IN of arg1 OK
that DT that arg1 OK
as IN as arg1 OK
i PRP i arg1 OK
can MD can arg1 OK

i PRP ^ ^ repeat
l- XX ^ ^ repeat
in IN in argM_loc OK
terms NNS terms argM_loc OK
of IN of argM_loc OK
like UH ^ ^ filler
ethnic JJ ethnic argM_loc OK
food NN food argM_loc OK
i PRP ^ ^ repeat
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP i arg0 OK
like VBP ^ ^ repeat
like VBP like predicate OK
chinese JJ chinese arg1 OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
could MD could ^ OK
eat VB eat predicate OK
any DT any arg1 OK
of IN of arg1 OK
it PRP it arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
e- XX ^ ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP i arg0 OK
s- RB ^ ^ repeat
somehow RB somehow ^ OK
thought VBD thought predicate OK
it PRP it arg1 OK
'd MD 'd arg1 OK
be VB be arg1 OK
more RBR more arg2 OK
different JJ different arg2 OK

but CC ^ ^ false_start
it PRP ^ ^ repeat
e- XX ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
like IN like arg2 OK
a DT a arg2 OK
dry JJ dry arg2 OK
hamburger NN hamburger arg2 OK

i PRP i arg0 OK
've VBP 've ^ OK
never RB never argM_neg OK
tried VBN tried predicate OK
venison NN venison arg1 OK
which WDT which arg1 OK
i PRP i arg0 OK
want VBP want predicate OK
to TO to arg1 OK
try VB try arg1 OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
i PRP i ^ OK
think VBP think ^ OK
that DT that ^ OK
's BES 's ^ OK
uh UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler

with IN with ^ OK
the DT the ^ OK
eh UH ^ ^ filler
high JJ high ^ OK
rate NN rate ^ OK
of IN of ^ OK
divorces NNS divorces ^ OK
in IN in ^ OK
this DT this ^ OK
country NN country ^ OK
i PRP i ^ OK
think VBP think ^ OK
that DT ^ ^ repeat
that DT ^ ^ repeat
's BES ^ ^ repeat
that DT that ^ OK
point NN point ^ OK
is VBZ is ^ OK
lost VBN lost ^ OK
on IN on ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
people NNS people ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK
the DT the ^ OK
right JJ right ^ OK
answer NN answer ^ OK
is VBZ is ^ OK

but CC but ^ OK
boy UH ^ ^ false_start
i- XX ^ ^ repeat
if IN if ^ OK
uh UH ^ ^ filler
a DT a ^ OK
lot NN lot ^ OK
more JJR more ^ OK
people NNS people ^ OK
have VBP have ^ OK
those DT those ^ OK
views NNS views ^ OK
i PRP i ^ OK
think VBP think ^ OK
we PRP we ^ OK
'd MD 'd ^ OK
probably RB probably ^ OK
be VB be ^ OK
a DT a ^ OK
lot NN lot ^ OK
better JJR better ^ OK
off RB off ^ OK

i PRP i ^ OK
've VBP 've ^ OK
uh UH ^ ^ filler
only RB only ^ OK
been VBN ^ ^ repeat
been VBN been ^ OK
married JJ married ^ OK
for IN for ^ OK
uh UH ^ ^ filler
five CD five ^ OK
and CC and ^ OK
a DT a ^ OK
half DT half ^ OK
years NNS years ^ OK
myself PRP myself ^ OK

even UNK even ^ OK
a UNK a ^ OK
lot UNK lot ^ OK
of UNK of ^ OK
people UNK people ^ OK
that UNK that ^ OK
i UNK ^ ^ repeat
i UNK i ^ OK
'm UNK ^ ^ repeat
'm UNK ^ ^ false_start
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
know UNK ^ ^ repeat
and UNK ^ ^ false_start
know UNK know ^ OK
of UNK of ^ OK
it UNK it ^ OK
's UNK 's ^ OK
almost UNK almost ^ OK
like UNK like ^ OK
a UNK a ^ OK
mm UNK ^ ^ filler
convenience UNK convenience ^ OK
thing UNK thing ^ OK
with UNK with ^ OK
them UNK them ^ OK

and CC ^ ^ false_start
they PRP ^ ^ false_start
're VBP ^ ^ false_start
not RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
they PRP they ^ OK
take VBP take ^ OK
it PRP it ^ OK
seriously RB seriously ^ OK
enough RB enough ^ OK
to TO to ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
make VB make ^ OK
things NNS things ^ OK
last VB last ^ OK
long JJ long ^ OK
term NN term ^ OK

w- PRP ^ ^ repeat
we PRP we ^ OK
have VBP have ^ OK
two CD two ^ OK
and CC and ^ OK
one CD one ^ OK
on IN on ^ OK
the DT the ^ OK
way NN way ^ OK

we PRP ^ ^ false_start
're VBP ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
right JJ right ^ OK

it PRP it ^ OK
's S-1 's ^ OK
tough BES tough ^ OK
to JJ to ^ OK
as XX ^ ^ false_start
you IN ^ ^ false_start
have PRP have ^ OK
kids VBP kids ^ OK
and NNS and ^ OK
you CC ^ ^ filler
know PRP ^ ^ filler
ha- VBP ^ ^ repeat
having VB having ^ OK
everything VBG everything ^ OK
going NN going ^ OK
on VBG on ^ OK
all RP all ^ OK
the PDT the ^ OK
time DT time ^ OK

it- PRP ^ ^ false_start
to IN to ^ OK
me PRP me ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
really RB really ^ OK
m- VB ^ ^ repeat
make VB make ^ OK
time NN time ^ OK
to TO to ^ OK
do VB do ^ OK
that DT that ^ OK
type NN type ^ OK
of IN of ^ OK
stuff NN stuff ^ OK
because ADVP-TMP- 2 because ^ OK
if IN if ^ OK
not IN not ^ OK
it RB it ^ OK
wo PRP wo ^ OK
n't MD n't ^ OK
happen RB happen ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
only RB only ^ OK
half NN half ^ OK
as RB as ^ OK
fun JJ fun ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
times NNS times ^ OK
without IN ^ ^ repeat
eh UH ^ ^ filler
without IN without ^ OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT the ^ OK
ki- NNS ^ ^ repeat
kids NNS kids ^ OK

eh UNK ^ ^ filler
i UNK i ^ OK
do UNK do ^ OK
n't UNK n't ^ OK
know UNK know ^ OK
what UNK what ^ OK
it UNK it ^ OK
's UNK 's ^ OK
like UNK like ^ OK
to UNK to ^ OK
have UNK have ^ OK
a UNK ^ ^ repeat
uh UNK ^ ^ filler
a UNK a ^ OK
quiet UNK quiet ^ OK
dinner UNK dinner ^ OK
anymore UNK anymore ^ OK

if IN if ^ OK
every DT every ^ OK
now RB now ^ OK
and CC and ^ OK
then RB then ^ OK
when WRB when ^ OK
we PRP we ^ OK
do VBP do ^ OK
i ADVP-TMP- 1 ^ ^ false_start
n- PRP ^ ^ false_start
i XX i ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
know RB know ^ OK
what VB what ^ OK
to WP to ^ OK
think TO think ^ OK

y- XX ^ ^ false_start
alright UH alright ^ OK

and CC ^ ^ false_start
how WRB ^ ^ repeat
what WP ^ ^ false_start
are VBP ^ ^ false_start
their- PRP ^ ^ false_start
er UH ^ ^ filler
how WRB how ^ OK
ol- JJ ^ ^ repeat
old JJ old ^ OK
are VBP are ^ OK
your PRP your ^ OK
kids NNS kids ^ OK

eh UH ^ ^ filler
we PRP we ^ OK
had VBD had ^ OK
a DT a ^ OK
miscarriage NN miscarriage ^ OK
in IN in ^ OK
between RB between ^ OK

actually RB actually ^ OK
no UH no ^ OK

t- TO ^ ^ repeat
to TO to ^ OK
start VB start ^ OK
off RP off ^ OK
we PRP we ^ OK
had VBD had ^ OK
one CD one ^ OK
miscarriage NN miscarriage ^ OK

so UH so ^ OK
she PRP ^ ^ false_start
's BES ^ ^ false_start
we PRP we ^ OK
're VBP 're ^ OK
only RB only ^ OK
i PRP i ^ OK
think VBP think ^ OK
two CD two ^ OK
and CC and ^ OK
a DT a ^ OK
half NN half ^ OK
months NNS months ^ OK
along RB along ^ OK
on IN on ^ OK
the DT the ^ OK
third JJ third ^ OK
one NN one ^ OK

oh UH ^ ^ filler
neat UH neat ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ repeat
and CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
just RB just ^ OK
another DT another arg2 OK
attempt NN attempt arg2 OK

it PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
that DT ^ ^ repeat
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
what WP what ^ OK
i PRP i ^ OK
believe VBP believe ^ OK
affirmative JJ affirmative ^ OK
action NN action ^ OK
to TO to ^ OK
be VB be ^ OK
is NP-PRD-1 is ^ OK
that VBZ that ^ OK
it IN it ^ OK
's PRP 's ^ OK
attempt BES attempt ^ OK
to NN to ^ OK
see TO see ^ OK
if VB if ^ OK
another IN another ^ OK
system DT system ^ OK
works NN works ^ OK

i PRP ^ arg1 filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
glad JJ glad arg2 OK
to TO to arg2 OK
see VB see arg2 OK
that IN that arg1 OK
something NN something arg0 OK
ha- VBZ ^ ^ false_start
is VBZ is arg1 OK
being VBG being arg1 OK
done VBN done arg1 OK
to TO to arg1 OK
a- XX ^ ^ filler
try VB try arg1 OK
change NN to ^ false_start
change NN change arg1 OK
or CC or arg1 OK
try VB try arg1 OK
some DT some arg1 OK
form NN form arg1 OK
of IN of arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
action NN action arg1 OK
to TO ^ ^ repeat
to TO to arg2 OK
make VB make arg2 OK
things NNS things arg1 OK
better JJR better arg1 OK

basically RB basically ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK

i PRP i arg1 OK
am VBP am predicate OK
not RB not arg2 OK
much RB very ^ false_start
sure JJ sure arg2 OK
about IN about arg2 OK
the DT the arg2 OK
background NN background arg2 OK
of IN of arg2 OK
it PRP it arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
personally RB personally ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
work VBP work predicate OK
in IN in arg1 OK
retail NN retail arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
know VBP know predicate OK
that IN that ^ OK
in IN in argM_loc OK
o- XX ^ ^ repeat
almost RB almost argM_loc OK
all DT all argM_loc OK
circumstances NNS circumstances argM_loc OK
i- PRP ^ ^ repeat
like UH ^ ^ filler
affirmative JJ affirmative arg0 OK
it PRP ^ ^ repeat
action NN action arg0 OK
does VBZ ^ ^ repeat
does VBZ does arg1 OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
even RB even arg1 OK
need VB need arg1 OK
to TO to arg1 OK
be VB be arg1 OK
applied VBN applied arg1 OK
be- XX ^ ^ false_start
considering VBG considering predicate OK
all PDT all arg1 OK
the DT the arg1 OK
bi-ethnic JJ bi-ethnic arg1 OK
coworkers NNS coworkers arg1 OK
i PRP i arg0 OK
have VBP have arg1 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
almost RB ^ ^ false_start
in IN ^ ^ false_start
this DT ^ ^ false_start
case NN ^ ^ false_start
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
this DT this arg1 OK
is VBZ is predicate OK
only RB only arg2 OK
from IN from arg2 OK
personal JJ personal arg2 OK
experience NN experience arg2 OK
but CC but ^ OK
most JJS most arg0 OK
non RB non arg0 OK
like UH ^ ^ filler
white JJ white arg0 OK
american JJ american arg0 OK
young JJ young arg0 OK
boys NNS boys arg0 OK
they PRP ^ ^ repeat
they PRP ^ ^ false_start
like UH ^ ^ filler
my PRP my arg0 OK
age NN age arg0 OK
like UH ^ ^ filler
do VBP do ^ OK
n't RB n't argM_neg OK
do VB ^ ^ false_start
work NN work predicate OK

and CC ^ arg1 false_start
most JJS most arg0 OK
employers NNS employers arg0 OK
are VBP are predicate OK
more RBR more arg2 OK
likely JJ likely arg2 OK
to TO ^ ^ repeat
to TO to arg2 OK
hire VB hire arg2 OK
someone NN someone arg1 OK
else RB else arg1 OK
that WDT that arg1 OK
's BES 's arg2 OK
older JJR older ^ OK
older JJR ^ arg2 false_start
woman NN and ^ false_start
maybe RB maybe arg1 OK
even RB even arg1 OK
a DT ^ ^ repeat
a DT a arg1 OK
w- NN ^ ^ repeat
woman NN woman arg1 OK
or CC or arg1 OK
bi-ethnic JJ bi-ethnic arg1 OK
because IN ^ ^ repeat
because IN because ^ OK
they PRP they arg1 OK
are VBP are predicate OK
more RBR more arg2 OK
productive JJ productive arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
it PRP ^ ^ false_start
in IN ^ ^ false_start
like UH ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
other JJ other arg2 OK
thing NN thing arg2 OK

but CC ^ ^ repeat
but CC ^ ^ false_start
in IN in ^ OK
like UH like ^ OK
a DT a ^ OK
work NN work ^ OK
space NN space ^ OK

like UH ^ argM_loc filler
for IN for argM_discou OK
example NN example argM_discou OK
my PRP my arg0 OK
she PRP ^ ^ false_start
mom NN mom arg0 OK
she PRP ^ ^ false_start
works VBZ works predicate OK
works VBZ ^ ^ false_start
company NN at ^ false_start
an DT an argM_loc OK
insurance NN insurance argM_loc OK
company NN company argM_loc OK

she PRP ^ ^ repeat
she PRP she arg0 OK
's HVS 's ^ OK
been VBN been ^ OK
working VBG working predicate OK
there RB there argM_loc OK
for IN for argM_tmp OK
some DT ^ ^ false_start
over IN over argM_tmp OK
a DT a argM_tmp OK
dozen NN dozen argM_tmp OK
years NNS years argM_tmp OK

and CC ^ ^ false_start
she PRP she arg1 OK
's BES 's predicate OK
t- XX ^ ^ false_start
e- XX ^ ^ false_start
hard RB hard arg2 OK
working VBG working arg2 OK

she PRP she arg1 OK
's BES 's predicate OK
diligent JJ diligent arg2 OK
all PDT ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
she PRP ^ ^ repeat
she PRP she arg0 OK
's BES 's ^ OK
making VBG making predicate OK
almost RB almost arg1 OK
half NN half arg1 OK
of IN of arg1 OK
what WP what arg1 OK
m- NNS ^ ^ repeat
men NNS men arg0 OK
that WDT that arg1 OK
have VBP have arg1 OK
been VBN been arg1 OK
working VBG working arg1 OK
there RB there argM_loc OK
for IN for argM_tmp OK
about RB about argM_tmp OK
two CD two argM_tmp OK
years NNS years argM_tmp OK
have VB ^ ^ false_start
been VBN ^ ^ false_start
are VBP are arg1 OK
making VBG making arg1 OK
already RB already argM_tmp OK

i- PRP ^ ^ repeat
it PRP ^ ^ repeat
's BES ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
something NN ^ ^ false_start
like UH ^ ^ filler
affirmative JJ affirmative arg0 OK
action NN action arg0 OK
is VBZ is predicate OK
perfect JJ perfect arg2 OK
for IN for arg2 OK
situations NNS situations arg2 OK
like IN like arg2 OK
that DT that arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
uh UH ^ ^ filler
if IN if ^ OK
the DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
only JJ only ^ OK
downfall NN downfall ^ OK
to IN to ^ OK
affirmative JJ affirmative ^ OK
action NN action ^ OK
is VBZ is ^ OK
it PRP it ^ OK
's BES 's ^ OK
also RB also ^ OK
just RB just ^ OK
saying VBG saying ^ OK
well UH ^ ^ filler
let VB let ^ OK
's PRP 's ^ OK
set VB set ^ OK
up RP up ^ OK
a DT a ^ OK
system NN system ^ OK
so IN so ^ OK
we PRP we ^ OK
can MD can ^ OK
forget VB forget ^ OK
about IN about ^ OK
it PRP it ^ OK
for IN for ^ OK
a DT a ^ OK
couple NN couple ^ OK
decades NNS decades ^ OK

like UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
and CC ^ ^ repeat
and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ filler
i PRP i arg0 OK
said VBD said predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
an DT an arg2 OK
attempt NN attempt arg2 OK

well UH ^ arg2 filler
f- XX ^ ^ filler
we PRP ^ ^ false_start
got VBD ^ ^ false_start
tha- XX ^ ^ false_start
where WRB ^ ^ false_start
we PRP we arg0 OK
'll MD 'll ^ OK
just RB just ^ OK
say VB say predicate OK
we PRP we arg0 OK
finished VBD finished arg1 OK
and CC and arg1 OK
we PRP we arg0 OK
cured VBD cured arg1 OK
^ ^ that ^ OK
problem NN problem arg2 OK

it PRP it ^ OK
's BES 's ^ OK

which WDT which ^ OK
th- XX ^ ^ false_start
i PRP i ^ OK
personally RB personally ^ OK
find VBP find ^ OK
ridiculous JJ ridiculous ^ OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
i- VBZ ^ ^ repeat
i- PRP ^ ^ repeat
i- PRP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
like UH ^ ^ filler
education NN education arg2 OK

you NP-PRD-1 you arg0 OK
need PRP need predicate OK
an VBP an arg1 OK
education DT education arg1 OK
of NN of arg1 OK
some IN some arg1 OK
sort DT sort arg1 OK
like UH ^ ^ filler
r- RB ^ ^ repeat
regardless RB regardless ^ false_start
of IN of ^ false_start
who WP who arg2 false_start
you PRP you arg1 false_start
are VBP are predicate false_start

and UNK ^ ^ false_start
i UNK i ^ OK
think UNK think ^ OK
that UNK ^ ^ repeat
that UNK that ^ OK

a- XX ^ ^ false_start
seattle NNP seattle arg0 OK
's HVS 's ^ OK
really RB really argM_adverb OK
um UH ^ ^ filler
come VBN come predicate OK
in IN in arg2 OK
its PRP its arg2 OK
own JJ own arg2 OK
over IN over argM_tmp OK
the DT the argM_tmp OK
last JJ last argM_tmp OK
ten CD ten argM_tmp OK
or CC or argM_tmp OK
fifteen CD fifteen argM_tmp OK
years NNS years argM_tmp OK
in IN in arg1 OK
that DT ^ ^ false_start
regard NN regard predicate false_start
that DT ^ arg1 false_start
regard NN to arg1 false_start
the DT ^ ^ repeat
the DT the arg1 OK
arts NNS arts arg1 OK
and CC ^ ^ false_start
everything NN ^ ^ false_start
else RB ^ ^ false_start

i- PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
great JJ great arg2 OK

um UH ^ ^ filler
let VB ^ ^ false_start
's PRP ^ ^ false_start
see VB ^ ^ false_start
what WP what arg1 OK
would MD would argM_mod OK
i PRP i arg0 OK
do VB do predicate OK

i PRP i arg0 OK
guess VBP guess predicate OK
you PRP you arg0 OK
're VBP 're arg1 OK
doing VBG doing arg1 OK
better RBR better argM_mnr OK
than IN than argM_mnr OK
iowa NNP iowa argM_mnr OK

i PRP ^ ^ false_start
like VBP ^ ^ false_start
to TO ^ ^ false_start
go VB ^ ^ false_start
a XX ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
'd MD 'd argM_mod OK
j- XX ^ ^ false_start
open VB open arg1 OK
up RP up arg_particl OK
a DT a arg1 OK
bookstore NN bookstore arg1 OK
like IN like arg1 OK
powell NNP powell arg1 OK
's POS 's arg1 OK

i- IN ^ ^ repeat
if IN if ^ OK
money NN money ^ OK
's BES 's ^ OK
no DT no ^ OK
object NN object ^ OK
like IN like ^ OK
they PRP they ^ OK
said VBD said ^ OK
then S ^ ^ false_start
which RB which ^ OK
is WDT is ^ OK
pretty VBZ pretty ^ OK
uh RB ^ ^ filler
fantastical UH fantastical ^ OK

but CC ^ ^ false_start
i- PRP ^ ^ false_start
i PRP ^ ^ false_start
would MD ^ ^ false_start
just RB ^ ^ false_start
be VB ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
n- XX ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg1 OK
just RB just argM_adverb OK
worry VBP worry predicate OK
about IN about arg0 OK
making VBG making arg0 OK
the DT the arg1 OK
payroll NN payroll arg1 OK
to IN to arg3 OK
the DT the arg3 OK
other JJ other arg3 OK
people NNS people arg3 OK
or CC ^ ^ repeat
or CC or arg0 OK
getting VBG getting arg0 OK
the DT the arg1 OK
cash NN cash arg1 OK
flow NN flow arg1 OK
to TO ^ ^ repeat
uh UH ^ ^ filler
to TO to arg3 OK
keep VB ^ ^ repeat
keep VB keep arg3 OK
the DT ^ ^ repeat
the DT the arg1 OK
business NN business arg1 OK
going VBG going arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
probably RB probably argM_adverb OK
would MD would argM_mod OK
be VB be predicate OK
general JJ general arg2 OK

um UH ^ ^ filler
n- XX ^ ^ false_start
n- XX ^ ^ false_start
uh UH ^ ^ filler
definitely UH ^ ^ false_start
some DT some ^ OK
best JJS best ^ OK
sellers NNS sellers ^ OK
to TO to ^ OK
get VB get ^ OK
the DT the ^ OK
traffic NN traffic ^ OK
in RB in ^ OK

um UH ^ ^ filler
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ false_start
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
i- XX ^ ^ false_start
oh UH ^ ^ filler
maybe RB maybe ^ OK
some DT ^ ^ false_start
e- JJ ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT a ^ OK
big JJ big ^ OK
eclectic JJ eclectic ^ OK
corner NN corner ^ OK
or CC or ^ OK
something NN something ^ OK

but CC ^ ^ false_start
um UH ^ ^ filler
j- RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just argM_discou OK
something NN something arg0 OK
to TO to ^ OK
generate VB generate predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT some arg1 OK
people NNS people arg1 OK
coming VBG coming arg1 OK
in RB in arg_particl OK
and CC ^ ^ repeat
and CC and ^ OK
maybe RB maybe argM_adverb OK
like UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
have VBP ^ ^ repeat
have VBP have predicate OK
like UH ^ ^ filler
a DT a arg1 OK
little JJ little arg1 OK
coffee NN coffee arg1 OK
area NN area arg1 OK
in IN in arg1 OK
there RB there arg1 OK
or CC ^ ^ false_start
whatever NN ^ ^ false_start

de- XX ^ ^ false_start
oh UH oh ^ OK

i PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
those DT those arg1 OK
are VBP are arg1 OK
becoming VBG becoming arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN like arg2 OK
telephones NNS telephones arg2 OK
now NAC-1 now argM_tmp OK
you RB ^ ^ filler
know PRP ^ ^ filler
and VBP and arg2 OK
bathrooms CC bathrooms arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP you arg0 OK
h- VBP ^ ^ repeat
have VBP have argM_mod OK
to TO to argM_mod OK
have VB have predicate OK
one CD one arg1 OK

you PRP ^ ^ false_start
have VBP ^ ^ false_start
to TO ^ ^ false_start
have VB ^ ^ false_start
a DT ^ ^ false_start
uh UH ^ ^ filler
especially RB ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
two CD two arg2 OK
thousand CD thousand arg2 OK
two CD two arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
just RB just argM_adverb OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
believe VB believe predicate OK
that DT that arg1 OK

tw- XX ^ ^ false_start
ten CD ten argM_tmp OK
years NNS years argM_tmp OK
ago RB ago argM_tmp OK
nobody NN nobody arg0 OK
knew VBD knew predicate OK
about IN about arg1 OK
the DT the arg1 OK
internet NN internet arg1 OK

just RB ^ ^ repeat
just RB just ^ OK
am- JJ ^ ^ repeat
amazing JJ amazing ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
what WP what arg1 OK
's BES 's predicate OK
out IN out arg2 OK
there RB there arg2 OK

it UNK it arg1 OK
would UNK would argM_mod OK
have UNK have argM_mod OK
to UNK to argM_mod OK
be UNK be predicate OK
off UNK off arg2 OK
someplace UNK someplace arg2 OK
else UNK else arg2 OK

because UNK ^ ^ false_start
um UNK ^ ^ filler
uh UNK ^ ^ filler
d- UNK ^ ^ repeat
did UNK did ^ OK
you UNK you arg1 OK
ever UNK ever argM_adverb OK
go UNK go predicate OK
into UNK into arg4 OK
a UNK a arg4 OK
room UNK room arg4 OK
like UNK ^ ^ filler
in UNK in arg4 OK
a UNK a arg4 OK
library UNK library arg4 OK
where UNK where argM_loc OK
they UNK they arg0 OK
have UNK have arg4 OK
computers UNK computers arg1 OK
go UNK ^ ^ false_start
is UNK and ^ false_start
all UNK all arg1 OK
you UNK you arg1 OK
can UNK can arg1 OK
hear UNK hear arg1 OK
is UNK is arg1 OK
like UNK ^ ^ filler
the UNK the arg2 OK
clacking UNK clacking arg2 OK
of UNK of arg1 OK
the UNK ^ ^ repeat
the UNK the arg1 OK
keyb- UNK ^ ^ repeat
keys UNK keys arg1 OK

maybe RB maybe ^ OK
a DT ^ ^ false_start
little RB ^ ^ repeat
little JJ ^ ^ repeat
little JJ little ^ OK
panels NNS panels ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start

i PRP i arg0 OK
have VBP have ^ OK
n't RB n't argM_neg OK
heard VBN heard predicate OK
that DT that arg1 OK
word NN word arg1 OK
in IN ^ ^ repeat
in IN in arg1 OK
ages NNS ages arg1 OK

but CC ^ ^ false_start
um UH ^ ^ filler
like UH ^ ^ filler
during IN during argM_tmp OK
the DT the argM_tmp OK
summer NN summer argM_tmp OK
um UH ^ ^ filler
there EX there arg1 OK
's BES 's predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
little JJ little arg2 OK
theaters NNS ^ ^ repeat
th- NNS ^ ^ repeat
theaters NNS theaters arg2 OK
up IN up argM_loc OK
and CC and argM_loc OK
down IN down argM_loc OK
the DT the argM_loc OK
coast NN coast argM_loc OK
here RB here argM_loc OK
uh UH ^ ^ filler
in IN in argM_loc OK
massachusetts NNP massachusetts argM_loc OK

that DT ^ ^ false_start
uh UH ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
there EX ^ ^ false_start
's BES ^ ^ false_start
some DT ^ ^ false_start
situat- NN ^ ^ false_start
n- XX ^ ^ false_start
up IN up argM_loc OK
and CC and argM_loc OK
down IN down argM_loc OK
the DT the argM_loc OK
coast NN coast argM_loc OK
there EX there arg1 OK
's BES 's predicate OK
all PDT all arg2 OK
these DT these arg2 OK
little JJ little arg2 OK
tiny JJ tiny arg2 OK
playhouses NNS playhouses arg2 OK

boston NNP ^ ^ repeat
uh UH ^ ^ filler
boston NNP boston arg0 OK
ballet NNP ballet arg0 OK
does VBZ does predicate OK
the DT the arg1 OK
nutcracker NNP nutcracker arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like UH ^ ^ filler
ye- XX ^ ^ false_start
i PRP ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
i PRP ^ ^ false_start
swear VB ^ ^ false_start
to IN ^ ^ false_start
god NNP ^ ^ false_start
that IN ^ ^ false_start
they PRP they arg0 OK
get VBP get predicate OK
like UH ^ ^ filler
half PDT half arg1 OK
their PRP their arg1 OK
money NN money arg1 OK
for IN for arg1 OK
the DT the arg1 OK
year NN year arg1 OK
to TO to arg1 OK
do VB do arg1 OK
all PDT all arg1 OK
the DT the arg1 OK
other JJ other arg1 OK
stuff NN stuff arg1 OK
from IN from arg3 OK
just RB just argM_adverb OK
doing VBG doing arg3 OK
the DT the arg1 OK
nutcracker NNP nutcracker arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
on IN ^ ^ repeat
in IN in arg2 OK
the DT ^ ^ repeat
the DT the arg2 OK
newspaper NN newspaper arg2 OK

a- XX ^ ^ false_start
do VBP do ^ repeat
do VBP ^ ^ OK
you PRP you arg0 repeat
you PRP ^ ^ OK
see VB see ^ repeat
see VBP ^ predicate OK
the DT ^ ^ false_start
uh UH ^ ^ filler
the DT the arg1 false_start
future NN ^ arg1 false_start
that DT future ^ false_start
of IN of arg1 false_start
um UH ^ ^ filler
performance NN performance arg1 false_start
art NN art arg1 false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
in IN ^ ^ repeat
in IN in arg1 false_start
the DT ^ ^ repeat
the DT the arg1 false_start
t. NN t. arg1 false_start
v. NN v. arg1 false_start
internet NNP internet arg1 false_start
age NN age arg1 false_start
declining VBG declining arg1 OK

you PRP ^ arg2 repeat
oh UH ^ ^ filler
so UH ^ ^ false_start
you PRP you arg1 OK
are VBP ^ ^ repeat
're VBP 're ^ OK
fairly RB fairly ^ OK
uh UH ^ ^ filler
limited JJ limited predicate OK
uh UH to ^ false_start
uh UH ^ ^ filler
be- XX ^ ^ false_start
how WRB ^ ^ repeat
how WRB how arg2 OK
your PRP your arg1 OK
personal JJ personal arg1 OK
views NNS views arg1 OK
can MD can arg2 OK
be VB be arg2 OK
expressed VBN expressed arg2 OK
in IN in arg2 OK
your PRP your arg2 OK
teaching NN teaching arg2 OK

i PRP i arg0 OK
end VBP end predicate OK
up RP up ^ OK
uh UH ^ ^ filler
cause VB causing arg2 false_start
difficulty NN difficulty arg1 OK
at IN ^ ^ repeat
at IN in arg1 false_start
work NN work arg1 OK
situations NNS situations arg1 OK
uh UH ^ ^ filler
because IN because ^ OK
i PRP i arg1 OK
a- VBP ^ ^ repeat
am VBP am predicate OK
more RBR more arg2 OK
pointed JJ pointed arg2 OK

and CC ^ ^ repeat
and CC ^ ^ false_start
if IN if ^ OK
people NNS people arg0 OK
will MD will ^ OK
draw VB draw predicate OK
me PRP me arg1 OK
out RB out ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not arg2 OK
uh UH ^ ^ filler
as RB ^ ^ repeat
as RB as arg2 OK
hesitant JJ hesitant arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
pe- NNS ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
then RB ^ ^ false_start
p- NNS ^ ^ repeat
and CC ^ ^ false_start
people NNS people arg0 OK
can MD can ^ OK
read VB read predicate OK
uh UH ^ ^ filler
direct JJ direct arg1 OK
answers NNS answers arg1 OK
the DT the arg3 OK
wrong JJ wrong arg3 OK
way NN way arg3 OK

eh UH ^ ^ filler
it PRP it arg0 OK
just RB just ^ OK
depends VBZ depends predicate OK
on IN on arg1 OK
how WRB how arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
raised VBN raised arg1 OK
and ADVP-MNR- 1 and arg1 OK
what CC ^ ^ repeat
what PRP what arg2 OK
their WP ^ arg1 false_start
the WP their ^ false_start
tolerance DT tolerance arg1 OK
is NN is arg1 OK
for PP-4 for arg2 OK
somebody VBZ somebody arg2 OK
else IN else arg2 OK

but CC but argM_tmp OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
onl- XX only ^ false_start
lived VBN lived predicate OK
where WRB where arg1 OK
i PRP i arg1 OK
've VBP 've arg1 OK
been VBN been arg1 OK
for ADVP-LOC- PRD-1 for argM_tm OK
about IN about argM_tmp OK
little RB a ^ false_start
little RB little argM_tmp OK
over JJ over argM_tmp OK
two IN two argM_tmp OK
months CD months argM_tmp OK
though NNS ^ ^ false_start

i PRP i arg0 OK
hardly RB hardly ^ OK
know VBP know predicate OK
anybody NN anybody arg1 OK
and CC ^ ^ repeat
s- XX ^ ^ false_start
and CC and ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have predicate OK
any DT any arg1 OK
real JJ real arg1 OK
reason NN reason arg1 OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
in IN in arg2 OK
another DT another arg2 OK
part NN part arg2 OK
of IN of arg2 OK
florida NNP florida arg2 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
moved VBD moved predicate OK
in RP in arg2 OK
to IN to arg2 OK
to IN ^ ^ repeat
a DT a arg2 OK
a DT ^ ^ repeat
closer RBR closer arg2 OK
college NN college arg2 OK
campus NN campus arg2 OK
uh UH ^ ^ filler
about RB about argM_tmp OK
two CD two argM_tmp OK
months NNS months argM_tmp OK
ago RB ago argM_tmp OK

i PRP ^ argM_tmp repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
in IN in arg2 OK
the DT the arg2 OK
state NN state arg2 OK
for IN ^ ^ repeat
since IN since arg2 OK
the DT the arg2 OK
first JJ first arg2 OK
of IN of arg2 OK
the DT the arg2 OK
year NN year arg2 OK
but CC but ^ OK
was VBD was ^ OK
basically RB basically ^ OK
isolated VBN isolated predicate OK
in IN in argM_loc OK
a DT a argM_loc OK
very RB very argM_loc OK
small JJ small argM_loc OK
town NN town argM_loc OK
uh UH for ^ false_start
uh UH ^ ^ filler
the DT the argM_tmp OK
first JJ first argM_tmp OK
half NN half argM_tmp OK
of IN of argM_tmp OK
the DT the argM_tmp OK
year NN year argM_tmp OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
not RB not arg2 OK
li- XX ^ ^ filler
exactly RB exactly arg2 OK
originally RB originally arg2 OK
from IN from arg2 OK
there RB there arg2 OK

and CC ^ ^ false_start
some DT some ^ OK
people NNS people ^ OK
find VBP find ^ OK
that DT that ^ OK
kind RB kind ^ OK
of RB of ^ OK
neat JJ neat ^ OK
and CC and ^ OK
fascinating JJ fascinating ^ OK
that IN that ^ OK
i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
ah UH ^ ^ filler
uh UH ^ ^ filler
you PRP you ^ OK
get VBP ^ ^ repeat
get VBP get ^ OK
to TO ^ ^ repeat
th- XX ^ ^ repeat
to TO to ^ OK

well UH ^ ^ filler
what WP ^ ^ false_start
the DT the arg1 OK
way NN way arg1 OK
i PRP i arg0 OK
look VBP look predicate OK
at IN at arg1 OK
it PRP it arg1 OK
is ADVP-MNR- 1 is arg1 OK
w- VBZ ^ ^ false_start
uh XX ^ ^ filler
i UH i arg0 OK
did PRP did ^ OK
n't VBD n't ^ OK
get RB get predicate OK
to VB to arg2 OK
choose TO choose arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
if IN if ^ OK
i PRP i arg0 OK
had VBD had ^ OK
it PRP ^ ^ false_start
to TO to ^ OK
choose VB choose predicate OK
from IN from ^ OK
the DT the ^ OK
beginning NN beginning ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would ^ OK
've VB ^ ^ repeat
've VB 've ^ OK
had VBN ^ ^ repeat
to TO ^ ^ repeat
ha- VB ^ ^ repeat
had VBN had predicate OK
like UH ^ ^ filler
parallel JJ parallel arg1 OK
lives NNS lives arg1 OK

i PRP i arg0 OK
would MD would ^ OK
've VBP 've ^ OK
had VBN had predicate OK
an DT an arg1 OK
opportunity NN opportunity arg1 OK
to TO to arg1 OK
go VB go arg1 OK
and CC and arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
have VB have arg1 OK
this DT this arg1 OK
kind RB kind arg1 OK
of RB of arg1 OK
vagabond JJ vagabond arg1 OK
life NN life arg1 OK
and CC ^ ^ repeat
and CC and arg1 OK
have VBP have arg1 OK
new JJ new arg1 OK
situations NNS situations arg1 OK
like IN like arg1 OK
b. NNP b. arg1 OK
j. NNP j. arg1 OK
and CC and arg1 OK
the DT the arg1 OK
bear NNP bear arg1 OK
kind NN ^ ^ false_start
of IN ^ ^ false_start
thing NN ^ ^ false_start

and CC and ^ OK
at IN at ^ OK
the DT the ^ OK
same JJ same ^ OK
time NN time ^ OK
i PRP i arg1 OK
would MD would ^ OK
've VBP 've ^ OK
had VBN had predicate OK
a DT a arg0 OK
life NN life arg0 OK
that WDT that arg1 OK
would MD would arg1 OK
've VBP 've arg1 OK
had VBN had arg1 OK
some DT some arg1 OK
continu- NN ^ ^ repeat
continuity NN continuity arg1 OK
to IN to arg1 OK
it PRP it arg1 OK
and CC and arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
being VBG been arg1 false_start
consistent JJ consistently arg2 false_start
in IN ^ ^ repeat
in IN ^ ^ repeat
in IN in arg2 OK
one CD ^ ^ repeat
one CD one arg2 OK
place NN place arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
could MD ^ ^ false_start
go VB ^ ^ false_start
back RB ^ ^ false_start
to IN ^ ^ false_start
i PRP i arg0 OK
just RB just ^ OK
tried VBD tried predicate OK
to TO to arg1 OK
contact VB contact arg1 OK
somebody NN somebody arg1 OK
from IN from arg1 OK
high JJ high arg1 OK
school NN school arg1 OK
i- XX ^ ^ false_start
just RB just argM_tmp OK
the DT the argM_tmp OK
other JJ other argM_tmp OK
day NN day argM_tmp OK

and CC ^ ^ false_start
it PRP it ^ OK
's SBAR-1 's predicate OK
amazing BES amazing arg2 OK
you JJ ^ ^ filler
know PRP ^ ^ filler
that VBP that arg1 OK
it IN ^ ^ false_start
fifteen PRP fifteen arg1 OK
something CD ^ ^ false_start
years NN years arg1 OK
has NNS has arg1 OK
gone VBZ gone arg1 OK
by VBN by arg1 OK
already RB already arg1 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
can MD can ^ OK
hardly RB hardly ^ OK
keep VB keep predicate OK
track NN track arg1 OK
of IN of arg1 OK
anybody NN anybody arg1 OK
uh UH ^ ^ filler
that WDT that arg1 OK
was VBD was arg1 OK
there RB there arg2 OK
um UH ^ ^ repeat
ye- XX ^ ^ repeat
uh UH ^ ^ filler
eh UH ^ ^ filler
moving VBG moving predicate OK
as RB as ^ OK
much RB much ^ OK
as IN as ^ OK
i PRP i arg0 OK
have VBP have ^ OK

uh UH ^ ^ filler
i- XX i- ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
agree VBP agree predicate OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
i PRP i arg0 OK
can MD can arg1 OK
talk VB talk arg1 OK
for IN for argM_tmp OK
ten CD ten argM_tmp OK
minutes NNS minutes argM_tmp OK
about IN about arg1 OK
it PRP it arg1 OK

um UH ^ ^ filler
where WRB ^ ^ repeat
where WRB where ^ OK
are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 OK

like UH ^ ^ filler
has VBZ has ^ OK
anything NN anything arg0 OK
like UH ^ ^ filler
affected VBN affected predicate OK
you PRP you arg1 OK
personally RB personally ^ OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

eh UH ^ ^ filler
okay UH okay ^ OK

um UH ^ arg1 filler
not RB ^ ^ repeat
not RB not ^ OK
really RB really ^ OK
just RB just ^ OK
because IN because ^ OK
i PRP i arg0 OK
never RB never ^ OK
like UH ^ ^ filler
knew VBD knew predicate OK
anyone NN anyone arg1 OK

i PRP i arg1 OK
was VBD was predicate OK
was VBD not argM_neg false_start
to- XX ^ ^ false_start
like UH ^ ^ filler
directly RB directly ^ OK
like UH ^ ^ filler
involved VBN involved arg2 OK
with IN with arg2 OK
anything NN anything arg2 OK
or CC or arg2 OK
affected VBN affected arg2 OK
by IN by arg2 OK
it PRP it arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
remember VBP remember predicate OK
like UH ^ ^ filler
i PRP i arg1 OK
'm VBP was arg1 false_start
at IN at arg2 OK
school NN school arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
remember VBP remember predicate OK
like UH ^ ^ filler
with IN on argM_tmp false_start
like UH ^ ^ filler
nine CD nine argM_tmp OK
eleven CD eleven argM_tmp OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start
like UH ^ ^ filler
everybody NN everybody arg1 OK
at IN at arg1 OK
school NN school arg1 OK
's BES 's arg1 OK
like RP thinking arg2 false_start
what WP what arg1 OK
's BES 's arg2 OK
going VBG going arg2 OK
on RP on arg4 OK

and CC ^ arg1 false_start
mm UH ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
even RB even ^ OK
now RB now ^ OK
when WRB when ^ OK
i PRP i arg0 OK
go VBP go ^ OK
to TO to ^ OK
get VB get predicate OK
on IN on arg1 OK
a DT a arg1 OK
plane NN plane arg1 OK
i ADVP-TMP- 3 i arg0 OK
think PRP think predicate OK
like VBP ^ ^ filler
oh RP ^ ^ false_start
is UH ^ ^ false_start
you VBZ ^ ^ filler
know PRP ^ ^ filler
or VBP ^ ^ false_start
i- UH ^ ^ repeat
is VBZ is arg1 OK
someone VBZ someone arg0 OK
else NN else arg1 OK
going RB going arg1 OK
to VBG to arg1 OK
come TO come arg1 OK
on VBN on arg4 OK
i PRP and ^ false_start
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
have VBP have arg1 OK
something NN something arg1 OK
with IN with arg1 OK
them PRP them arg1 OK
like IN like arg1 OK
some DT some arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
weapon NN weapon arg1 OK
or CC ^ ^ false_start
something NN ^ ^ false_start
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

u UH ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
kn- VB know predicate false_start

i PRP i ^ OK
absolutely UH absolutely ^ OK

it PRP it arg1 OK
's BES 's predicate OK
kind RB ^ ^ filler
of RB ^ ^ filler
too RB too arg2 OK
bad JJ bad arg2 OK
because IN because ^ OK
like UH ^ ^ filler
you PRP you arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
help VB help predicate OK
it PRP it arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
even RB ^ ^ filler
like UH ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
to TO to ^ OK
admit VB admit ^ OK
even RB even ^ OK
now RB now ^ OK
like UH that ^ false_start
like UH ^ ^ filler
if IN if ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
somewhere RB somewhere ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
like UH ^ ^ filler
there EX there ^ OK
's BES are ^ false_start
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
like UH ^ ^ filler
arabs NNPS arabs ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
or UH or ^ OK
w- XX ^ ^ repeat
like UH ^ ^ filler
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
travel VBP travel ^ OK
kind RB ^ ^ filler
of RB ^ ^ filler
a DT a ^ OK
lot NN lot ^ OK

and CC ^ ^ filler
when WRB when ^ OK
i PRP i arg0 OK
do VBP do predicate OK
and ADVP-TMP- 1 and ^ OK
i CC i arg0 OK
like PRP ^ ^ filler
go UH go ^ OK
and VB ^ ^ false_start
i CC ^ ^ false_start
get PRP get predicate OK
in VBP in arg1 OK
a IN a arg1 OK
plane DT plane arg1 OK
and NN ^ ^ false_start
if CC if ^ OK
there IN there arg1 OK
's EX 's predicate OK
someone BES someone arg2 OK
of NN of arg2 OK
like IN ^ ^ filler
arab UH arab arg2 OK
descent JJ descent arg2 OK
like NN then ^ false_start
like NN ^ ^ filler
i UH i arg0 OK
ca PRP ca ^ OK
n't MD n't ^ OK
help RB help predicate OK
help RB it arg1 false_start

but VB ^ arg2 false_start
like CC ^ ^ filler
my UH my ^ OK
first PRP first ^ OK
concern JJ concern ^ OK
is NN is predicate OK
oh VBZ oh ^ OK
my UH my ^ OK
god UH god ^ OK
like UH ^ ^ filler
are UH are ^ OK
they VBP they ^ OK
you PRP ^ ^ filler
know PRP ^ ^ filler
like VBP ^ ^ filler
going UH going ^ OK
to VBG to ^ OK
do TO do predicate OK
something VB something ^ OK

but CC ^ ^ false_start
just RB ^ ^ false_start
it PRP it arg1 OK
's S-1 's predicate OK
kind BES ^ ^ filler
of RB ^ ^ filler
hard RB hard arg2 OK
not JJ not arg2 OK
to RB to arg2 OK
like TO ^ ^ filler
when VP when arg2 OK
that UH ^ ^ false_start
's WRB ^ ^ false_start
like DT ^ ^ filler
the BES the arg1 OK
only UH only arg1 OK
like DT ^ ^ filler
exposure JJ exposure arg1 OK
i UH i arg1 OK
've NN 've arg1 OK
had PRP had arg1 OK
is VBP is arg2 OK
like VBN ^ ^ filler
you NP-2 ^ ^ filler
know VBZ ^ ^ filler
like UH ^ ^ filler
whatever PRP whatever arg2 OK
you VBP i arg0 false_start
hear UH hear arg2 OK
on WP on argM_loc OK
the PRP the argM_loc OK
news VBP news argM_loc OK

and IN ^ arg1 false_start
stuff DT ^ ^ false_start
and NN ^ ^ false_start
because CC ^ ^ false_start
i NN i ^ OK
do CC do ^ OK
n't IN n't ^ OK
really PRP ^ ^ filler
have VBP have predicate OK
like RB ^ ^ filler
i RB ^ ^ filler
guess VB ^ ^ filler
a UH a ^ OK
very PRP very ^ OK
diverse VBP diverse ^ OK
group DT group ^ OK
of RB of ^ OK
friends JJ friends ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
still RB ^ ^ false_start
like UH ^ ^ filler
i PRP i arg0 OK
feel VBP feel predicate OK
like UH like ^ false_start
like UH ^ ^ filler
g- XX ^ ^ false_start
like UH ^ ^ filler
i PRP i arg0 OK
've VBP 've arg1 OK
seen VBN seen arg1 OK
like UH ^ ^ filler
young JJ young arg1 OK
teenage JJ teenage arg1 OK
girls NNS girls arg1 OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start
like UH ^ ^ filler
searched VBD searched arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
airports NNS airports argM_loc OK

but CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
like IN like arg2 OK
you PRP ^ ^ repeat
like UH ^ ^ filler
you PRP you arg0 OK
do VBP ^ ^ repeat
do VBP do arg2 OK
n't RB ^ ^ repeat
n't RB n't arg2 OK
know VB ^ ^ repeat
know VB know arg2 OK
who WP who arg2 OK
they PRP they arg1 OK
're VBP 're arg1 OK
with IN with arg2 OK
and NP-1 ^ ^ false_start
stuff CC ^ ^ false_start
now RB now argM_tmp false_start

so UH ^ ^ filler
well UH ^ ^ filler
i PRP ^ ^ false_start
gue- VBP ^ ^ false_start
i PRP i arg0 OK
actually RB actually ^ false_start
studied VBD studied predicate OK
abroad RB abroad argM_loc OK

and CC ^ ^ false_start
that DT that arg1 OK
was VBD was predicate OK
the DT the arg2 OK
first JJ first arg2 OK
time NN time arg2 OK
like UH ^ ^ filler
that WRB that arg2 OK
i PRP i arg1 OK
got VBD got arg2 OK
to TO to arg2 OK
experience VB experience arg2 OK
like UH ^ ^ filler
e- XX ^ ^ repeat
being VBG being arg1 OK
like UH ^ ^ filler
an DT an arg2 OK
american NNP american arg2 OK
from IN from arg2 OK
like UH ^ ^ filler
a DT a arg2 OK
foreign JJ foreign arg2 OK
point NN point arg2 OK
of IN of arg2 OK
view NN view arg2 OK

and CC ^ ^ false_start
it PRP it arg0 OK
was S-1 was predicate OK
weird VBD weird arg2 OK
to JJ ^ ^ false_start
like TO ^ ^ filler
have UH ^ ^ false_start
that VB ^ ^ false_start
like DT ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
step VBP ^ ^ false_start
out VB ^ ^ false_start
of IN ^ ^ false_start
um IN ^ ^ filler
i UH ^ ^ filler
do PRP ^ ^ filler
n't VBP ^ ^ filler
know RB ^ ^ filler
like VB ^ ^ filler
seeing UH seeing arg2 OK
everything VBG everything arg1 OK
from NN from arg1 OK
like IN ^ ^ filler
somebody UH somebody arg1 OK
else NN else arg1 OK
's RB 's arg1 OK
point POS point arg1 OK
of NN of arg1 OK
view IN view arg1 OK
and NN ^ ^ false_start
stuff CC ^ ^ false_start

because IN ^ ^ false_start
you PRP you arg0 OK
have VBP have predicate OK
some DT some arg1 OK
people NNS people arg1 OK
that WDT that arg0 OK
e- XX ^ ^ repeat
like UH ^ ^ filler
support VBP support arg1 OK
and CC and arg1 OK
other JJ other arg1 OK
people NNS people arg1 OK
that WDT that arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK

i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
it PRP it arg1 OK
was VBD was predicate OK
weird JJ weird arg2 OK
because IN because ^ OK
like UH ^ ^ filler
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD was predicate OK
in IN in arg2 OK
australia NNP australia arg2 OK
and CC ^ ^ false_start
it PRP ^ ^ filler
's BES ^ ^ filler
like RP ^ ^ filler
at IN ^ ^ false_start
the DT ^ ^ false_start
i PRP i arg0 OK
would MD would ^ OK
meet VB meet predicate OK
people NNS people arg1 OK
and CC and ^ OK
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
just RB ^ ^ false_start
like RP ^ ^ false_start
i PRP i arg0 OK
was VBD was ^ OK
like RP thinking predicate false_start
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK
want VB want arg1 OK
to TO to arg1 OK
talk VB talk arg1 OK
about IN about arg1 OK
that DT that arg1 OK
while IN while argM_tmp OK
i PRP i arg1 OK
'm VBP 'm argM_tmp OK
over IN over arg2 OK
here RB here arg2 OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
wi- IN ^ ^ repeat
with IN with ^ OK
you PRP you ^ OK
on IN on ^ OK
that DT that ^ OK

um UH ^ ^ filler
so RB ^ ^ repeat
so RB so ^ OK
that DT that ^ OK
answers VBZ answers ^ OK
the DT the ^ OK
first JJ first ^ OK
question NN question ^ OK

um UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
second JJ second ^ OK
question NN question ^ OK
was VBD was ^ OK
uh UH ^ ^ filler
why WRB why ^ OK
does VBZ does ^ OK
everyone NN everyone ^ OK
else RB else ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK
too RB too ^ OK
mu- JJ much ^ false_start

well UH ^ ^ false_start
so UH ^ ^ false_start
eh UH ^ ^ filler
there EX ^ ^ repeat
's BES ^ ^ repeat
there RB ^ ^ false_start
's BES ^ ^ false_start
uh UH ^ ^ filler
to IN to ^ OK
my PRP my ^ OK
mind NN mind ^ OK
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
couple NN couple ^ OK
pieces NNS pieces ^ OK

one CD one ^ OK
of IN of ^ OK
which WDT which ^ OK
is VBZ is ^ OK
there EX ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
ki- XX ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
um UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
a DT ^ ^ repeat
a DT a ^ OK
prurient JJ prurient ^ OK
uh UH ^ ^ filler
interest NN interest ^ OK
um UH ^ ^ filler
in IN in ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
them PRP them ^ OK

a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
them PRP them ^ OK
have VBP have ^ OK
to TO to ^ OK
do VB do ^ OK
with IN with ^ OK
people NNS people ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
getting VBG getting ^ OK
together RB together ^ OK
uh UH ^ ^ filler
intimately RB intimately ^ OK
and CC ^ ^ repeat
um UH ^ ^ filler
and CC and ^ OK
then RB then ^ OK
uh UH ^ ^ filler
fighting VBG fighting ^ OK
about IN about ^ OK
it PRP it ^ OK
huh UH ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
will MD will ^ OK

tha- DT ^ ^ repeat
that- DT ^ ^ repeat
th- DT ^ ^ repeat
that DT ^ ^ repeat
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
how WRB how ^ OK
they PRP they ^ OK
started VBD started ^ OK
if ADVP-MNR- 1 if ^ OK
you IN you ^ OK
remember PRP remember ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
'd MD ^ ^ false_start
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
so RB ^ ^ false_start
into IN ^ ^ false_start
the DT ^ ^ false_start
there EX there ^ OK
'd MD 'd ^ OK
be VB be ^ OK
like UH like ^ OK

and CC ^ ^ false_start
eh UH ^ ^ filler
eh UH ^ ^ filler
well UH ^ ^ false_start
what WP ^ ^ repeat
what WP what ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
then RB then ^ OK
added VBD added ^ OK
on RP on ^ OK
was VBD was ^ OK
disgusting JJ disgusting ^ OK
stuff NN stuff ^ OK
like IN like ^ OK
uh UH ^ ^ filler
eating VBG eating ^ OK
worms NNS worms ^ OK
and CC and ^ OK
putting VBG putting ^ OK
your PRP your ^ OK
head NN head ^ OK
into IN into ^ OK
a DT a ^ OK
bowl NN bowl ^ OK
full JJ full ^ OK
of IN of ^ OK
beetles NNS beetles ^ OK
and CC and ^ OK
that DT that ^ OK
kind NN kind ^ OK
of IN of ^ OK
garbage NN garbage ^ OK

but CC but ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's S-1 's ^ OK
kind BES kind ^ OK
of RB of ^ OK
interesting RB interesting ^ OK
i JJ i ^ OK
guess PRP guess ^ OK
watch- VBP ^ ^ false_start

and CC ^ ^ false_start
uh UH ^ ^ filler
a- CC ^ ^ repeat
and CC ^ ^ false_start
then RB then ^ OK
you PRP you ^ OK
go VBP go ^ OK
from IN from ^ OK
there RB there ^ OK
to IN to ^ OK
the DT ^ ^ repeat
the DT the ^ OK
dangerous JJ dangerous ^ OK
ones NNS ones ^ OK
where WRB where ^ OK
somebody NN somebody ^ OK
could MD could ^ OK
theoretically RB theoretically ^ OK
actually RB actually ^ OK
get VB get ^ OK
hurt JJ hurt ^ OK

um UH ^ ^ filler
which WDT ^ ^ repeat
which WDT which ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
always RB always ^ OK
popular JJ popular ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
to TO to ^ OK
watch VB watch ^ OK
the DT the ^ OK

so RB so ^ OK
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
a DT a ^ OK
basic JJ basic ^ OK
human JJ human ^ OK
nature NN nature ^ OK
element NN element ^ OK

uh UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
uh UH ^ ^ filler
r- NN ^ ^ repeat
r- NN ^ ^ repeat
uh UH ^ ^ filler
rubber NN rubber ^ OK
necking NN necking ^ OK
element NN element ^ OK
i PRP i ^ OK
think VBP think ^ OK

you- PRP ^ ^ repeat
your PRP your ^ OK
thoughts NNS thoughts ^ OK

uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
basically RB basically ^ OK
what WP what ^ OK
it PRP it ^ OK
is VBZ is ^ OK
is NP-PRD-1 is ^ OK
voyeurism VBZ voyeurism ^ OK
as NN as ^ OK
far RB far ^ OK
as RB as ^ OK
i IN i ^ OK
'm PRP 'm ^ OK
concerned VBP concerned ^ OK

well UH ^ ^ false_start
i PRP i ^ OK
actually RB actually ^ OK
kind RB kind ^ OK
of RB of ^ OK
like VBP like ^ OK
the DT the ^ OK
wheel NNP wheel ^ OK
of IN of ^ OK
fortune NNP fortune ^ OK
because IN because ^ OK

uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
good JJ good ^ OK
at IN at ^ OK
it PRP it ^ OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
good JJ ^ ^ repeat
good JJ good ^ OK
at IN ^ ^ repeat
at IN at ^ OK
word NN word ^ OK
games NNS games ^ OK

eh UH eh ^ OK

eh UH ^ ^ filler
well UH ^ ^ false_start
they PRP they ^ OK
're VBP 're ^ OK
not RB not ^ OK

um UH ^ ^ filler
they PRP they ^ OK
're VBP 're ^ OK

well UH ^ ^ false_start
eh UH ^ ^ filler
no UH no ^ OK

they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP ^ ^ repeat
're VBP 're ^ OK
game NN game ^ OK
shows NNS shows ^ OK

and CC ^ ^ repeat
y- PRP ^ ^ repeat
and CC ^ ^ false_start
you PRP you ^ OK
get VBP get ^ OK
a DT a ^ OK
prize NN prize ^ OK

eh UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ false_start
a- RB ^ ^ repeat
actually RB actually ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'd MD ^ ^ repeat
would MD ^ ^ repeat
would MD would ^ OK
liken VB liken ^ OK
it PRP it ^ OK
more RBR more ^ OK
to IN to ^ OK
uh UH ^ ^ filler
wrestling NN wrestling ^ OK

where WRB ^ ^ repeat
where WRB where ^ OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
scrip- VBN scripted ^ false_start

i PRP i ^ OK

eh UH ^ ^ filler
eh UH ^ ^ filler
uh UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'd MD ^ ^ repeat
i PRP i ^ OK
suppose VBP suppose ^ OK
so RB so ^ OK

um UH ^ ^ filler
eh UH ^ ^ filler
my PRP ^ ^ repeat
my PRP my ^ OK
suspicion NN suspicion ^ OK
is VBZ is ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
highly RB highly ^ OK
scripted JJ scripted ^ OK

i PRP i ^ OK
eh UH ^ ^ filler

uh UH ^ ^ filler
and CC ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
w- UH ^ ^ repeat
well UH ^ ^ false_start
for IN for ^ OK
example NN example ^ OK
the DT ^ ^ false_start
uh UH ^ ^ filler
they PRP they ^ OK
mentioned VBD mentioned ^ OK
on IN ^ ^ repeat
on IN on ^ OK
the DT ^ ^ repeat
the DT the ^ OK
tape NN tape ^ OK
here RB here ^ OK
uh UH ^ ^ filler
joe NNP joe ^ OK
millionaire NNP millionaire ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
you PRP you ^ OK
've VBP 've ^ OK
seen VBN seen ^ OK
any DT any ^ OK
of IN of ^ OK
the DT the ^ OK
commercials NNS commercials ^ OK
for IN for ^ OK
it PRP it ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
some DT ^ ^ repeat
some DT some ^ OK
con- NN ^ ^ repeat
construction NN construction ^ OK
guy NN guy ^ OK
from IN from ^ OK
new NNP new ^ OK
jersey NNP jersey ^ OK

so UH so ^ OK
fine UH fine ^ OK

let VB ^ ^ false_start
's PRP ^ ^ false_start
see VB ^ ^ false_start
how WRB how ^ OK
do VBP do ^ OK
we PRP we ^ OK
draw VB draw ^ OK
the DT the ^ OK
line NN line ^ OK

eh UH ^ ^ filler
although RB although ^ OK
let VB let ^ OK
's PRP 's ^ OK
suppose VB suppose ^ OK
you PRP you ^ OK
're VBP 're ^ OK
watching VBG watching ^ OK
the DT the ^ OK
jay NNP jay ^ OK
leno NNP leno ^ OK
monologue NN monologue ^ OK
which WDT which ^ OK
i PRP i ^ OK
often RB often ^ OK
watch VBP watch ^ OK
in IN in ^ OK
order NN order ^ OK
to TO to ^ OK
fall VB fall ^ OK
asleep RB asleep ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
he PRP he ^ OK
's HVS 's ^ OK
done VBN done ^ OK
some DT ^ ^ repeat
some DT some ^ OK
o. NNP o. ^ OK
j. NNP j. ^ OK
and CC and ^ OK
clinton NNP clinton ^ OK
jokes NNS jokes ^ OK
where WRB where ^ OK
i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's HVS 's ^ OK
gone VBN gone ^ OK
not RB not ^ OK
just RB just ^ OK
into IN into ^ OK
the DT the ^ OK
r. NN r. ^ OK
rated VBN rated ^ OK
area NN area ^ OK
but CC but ^ OK
just RB just ^ OK
mean JJ mean ^ OK

that IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB ^ ^ false_start
of RB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
m- JJ ^ ^ false_start
in IN in ^ OK
bad JJ bad ^ OK
taste NN taste ^ OK
because IN because ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
just RB just ^ OK
mean VB mean ^ OK

now UH ^ ^ filler
is VBZ is ^ OK
he PRP he ^ OK
showing VBG showing ^ OK
us PRP us ^ OK
a DT a ^ OK
headline NN headline ^ OK
that WDT that ^ OK
they PRP they ^ OK
probably RB probably ^ OK
meant VBD meant ^ OK
in IN in ^ OK
all DT all ^ OK
sincerity NN sincerity ^ OK
or CC or ^ OK
an DT an ^ OK
article NN article ^ OK
about IN about ^ OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a ^ OK
crime NN crime ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start

they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
already RB already ^ OK
suggesting VBG suggesting ^ OK
there EX there ^ OK
's BES 's ^ OK
something NN something ^ OK
humorous JJ humorous ^ OK
when WRB when ^ OK
they PRP they ^ OK
present VBP present ^ OK
it PRP it ^ OK

when UNK when ^ OK
he UNK he ^ OK
's UNK 's ^ OK
presenting UNK presenting ^ OK
the UNK the ^ OK
two UNK two ^ OK
last UNK last ^ OK
names UNK names ^ OK
of UNK of ^ OK
people UNK people ^ OK
that UNK that ^ OK
got UNK are ^ false_start
married UNK married ^ OK
he UNK he ^ OK
's UNK 's ^ OK
not UNK not ^ OK
saying UNK saying ^ OK
is UNK ^ ^ false_start
anything UNK anything ^ OK
dirty UNK dirty ^ OK
or UNK or ^ OK
filthy UNK filthy ^ OK
or UNK or ^ OK
funny UNK funny ^ OK
about UNK about ^ OK
their UNK their ^ OK
names UNK names ^ OK
except UNK except ^ OK
by UNK by ^ OK
suggestion UNK suggestion ^ OK

i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
lines NNS lines ^ OK
uh UH ^ ^ filler
in IN in ^ OK
terms NNS terms ^ OK
of IN of ^ OK
what WP what ^ OK
's BES 's ^ OK
in IN in ^ OK
good JJ good ^ OK
taste NN taste ^ OK
um UH ^ ^ filler
changes VBZ changes ^ OK
over IN over ^ OK
time NN time ^ OK
because IN because ^ OK
uh UH ^ ^ filler
there EX there ^ OK
are VBP are ^ OK
some DT some ^ OK
things NNS things ^ OK
that WDT that ^ OK
my PRP my ^ OK
kids NNS kids ^ OK
think VBP think ^ OK
are VBP are ^ OK
really RB really ^ OK
funny JJ funny ^ OK
that WDT that ^ OK
i PRP i ^ OK
think VBP think ^ OK
are VBP are ^ OK
just RB just ^ OK
trash NN trash ^ OK

because IN ^ ^ false_start
i PRP ^ ^ false_start
um UH ^ ^ filler
one CD one ^ OK
of IN of ^ OK
my PRP my ^ OK
kids NNS kids ^ OK
had VBD had ^ OK
one CD one ^ OK

y- XX ^ ^ false_start
this DT this ^ OK
is VBZ is ^ OK
a DT a ^ OK
number NN number ^ OK
of IN of ^ OK
years NNS years ^ OK
ago RB ago ^ OK
because IN because ^ OK
they PRP they ^ OK
're VBP 're ^ OK
out IN out ^ OK
of IN of ^ OK
the DT the ^ false_start
house NN house ^ OK
now RB now ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
said VBD said ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want ^ OK
to TO to ^ OK
ever RB ever ^ OK
hear VB hear ^ OK
that DT that ^ OK
in IN in ^ OK
the DT the ^ OK
house NN house ^ OK
again RB again ^ OK

and CC ^ ^ false_start
not RB not ^ OK
only RB only ^ OK
that DT that ^ OK

but CC ^ ^ false_start
eh UH ^ ^ filler
this DT this ^ OK
is VBZ is ^ OK
n't RB n't ^ OK
just RB just ^ OK
humor NN humor ^ OK
but CC but ^ OK
language NN language ^ OK

i PRP i ^ OK

because IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP ^ ^ repeat
think VBP think ^ OK
i- XX ^ ^ false_start
here RB ^ ^ repeat
here RB here ^ OK
's BES 's ^ OK
an DT ^ ^ repeat
uh UH ^ ^ filler
an DT an ^ OK
e- JJ ^ ^ repeat
interesting JJ interesting ^ OK
point NN point ^ OK

maybe RB ^ ^ false_start
sometimes RB sometimes ^ OK
things NNS things ^ OK
are VBP are ^ OK
funny JJ funny ^ OK
because IN because ^ OK
there EX there ^ OK
's BES 's ^ OK
so RB so ^ OK
much JJ much ^ OK
creativity NN creativity ^ OK
involved VBN involved ^ OK

or CC ^ ^ false_start
when WRB ^ ^ repeat
when WRB when ^ OK
the- PRP ^ ^ repeat
they PRP they ^ OK
write VBP write ^ OK
songs NNS songs ^ OK
on IN on ^ OK
the DT the ^ OK
fly NN fly ^ OK
they ADVP-TMP- 1 they ^ OK
're PRP 're ^ OK
really VBP really ^ OK
funny RB funny ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's BES 's ^ OK
because IN because ^ OK
the DT ^ ^ false_start
you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
imagine VB imagine ^ OK
that IN that ^ OK
someone NN someone ^ OK
can MD can ^ OK
make VB make ^ OK
that DT that ^ OK
up RP up ^ OK

but CC but ^ OK
i PRP i ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
eat VB eat ^ OK
it PRP it ^ OK
very RB very ^ OK
often RB often ^ OK
because IN because ^ OK
it- PRP ^ ^ repeat
i PRP i ^ OK
have VBP have ^ OK
an DT an ^ OK
ulcer NN ulcer ^ OK

so RB ^ ^ false_start
they PRP ^ ^ false_start
i PRP i ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
really RB really ^ OK
eat VB eat ^ OK
it PRP it ^ OK

something NN something ^ OK
b- IN ^ ^ repeat
beyond IN beyond ^ OK
just RB just ^ OK
spaghetti NN spaghetti ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
like VB like ^ OK
it PRP it ^ OK
because IN because ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
like VB like ^ OK
basil NNP basil ^ OK
quite PDT quite ^ OK
that DT that ^ OK
much JJ much ^ OK

but CC but ^ OK
i PRP i ^ OK
i PRP ^ ^ repeat
really RB really ^ OK
like VBP like ^ OK
garlic NN garlic ^ OK

so UH ^ ^ false_start
uh UH ^ ^ filler
what WP ^ ^ false_start
about IN ^ ^ false_start
do VBP do ^ OK
you PRP you ^ OK
like VB like ^ OK
wine NN wine ^ OK
with IN with ^ OK
your PRP your ^ OK
italian JJ italian ^ OK
food NN food ^ OK

every RB every ^ OK
once RB once ^ OK
in IN in ^ OK
a DT a ^ OK
while NN while ^ OK

not RB ^ ^ false_start
i PRP ^ ^ false_start
i PRP i ^ OK
do VBP ^ ^ false_start
do VBP do ^ OK
n't RB ^ ^ false_start
really RB ^ ^ false_start
n't RB n't ^ OK
drink VB drink ^ OK
too RB too ^ OK
often RB often ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
another DT another ^ OK
no NN no ^ OK
no NN no ^ OK

so UH ^ ^ false_start
well UH ^ ^ false_start
my PRP ^ ^ repeat
my PRP my ^ OK
stomach NN stomach ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
really RB really ^ OK
like VB like ^ OK
alcohol NN alcohol ^ OK
either RB either ^ OK

w- WP what ^ false_start
part NN part ^ OK
of IN of ^ OK
the DT the ^ OK
country NN country ^ OK
are VBP are ^ OK
you PRP you ^ OK
from IN from ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
been VBN been ^ OK
through IN through ^ OK
pennsylvania NNP pennsylvania ^ OK

i PRP ^ ^ false_start
i PRP i ^ OK
do VBP ^ ^ false_start
do VBP do ^ OK
n't RB ^ ^ false_start
n't RB n't ^ OK
think VB ^ ^ false_start
think VB think ^ OK
i PRP ^ ^ false_start
i PRP i ^ OK
ever RB ^ ^ false_start
ever RB ever ^ OK
was VBD ^ ^ false_start
went VBD went ^ OK
to IN to ^ OK
pittsburgh NNP pittsburgh ^ OK

uh UH ^ ^ filler
we PRP ^ ^ false_start
went VBD ^ ^ false_start
to IN ^ ^ false_start
the DT ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
a DT a ^ OK
tourist NN tourist ^ OK
thing NN thing ^ OK

it- PRP ^ ^ repeat
i PRP i ^ OK
live VBP live ^ OK
in IN in ^ OK
california NNP california ^ OK
not RB not ^ OK
texas NNP texas ^ OK

no UH no ^ OK
i PRP ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
all RB all ^ OK
right JJ right ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
would MD would ^ OK
want VB want ^ OK
to TO to ^ OK
live VB live ^ OK
in IN in ^ OK
texas NNP texas ^ OK
either RB either ^ OK

there EX there ^ OK
's BES 's ^ OK
just RB just ^ OK
not RB not ^ OK
a DT a ^ OK
whole JJ whole ^ OK
lot NN lot ^ OK
but CC but ^ OK
oil NN oil ^ OK
refineries NNS refineries ^ OK
and CC and ^ OK
lots NNS lots ^ OK
of IN of ^ OK
smelly JJ smelly ^ OK
cows NNS cows ^ OK
and CC ^ ^ repeat
and CC and ^ OK
nothing NN nothing ^ OK

that DT ^ ^ repeat
that DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
it PRP it ^ OK

which WDT ^ ^ false_start
they PRP they ^ OK
're VBP 're ^ OK
all RB all ^ OK
right JJ right ^ OK

because IN because ^ OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
real RB real ^ OK
hot JJ hot ^ OK
there RB there ^ OK
too RB too ^ OK

yeah UNK yeah ^ OK
but UNK but ^ OK

it NNS it ^ OK
it PRP ^ ^ repeat
's S-1 ^ ^ repeat
's PRP 's predicate OK
hard BES ^ ^ repeat
hard S-2 hard arg1 OK
to JJ ^ ^ repeat
to BES to arg1 OK
be TO ^ ^ repeat
be JJ be arg1 OK
frie- VB ^ ^ repeat
friends TO friends arg2 OK
with VB with arg2 OK
poor NNS poor arg2 OK
people IN people arg2 OK

what WP ^ ^ repeat
what WP what arg1 OK
can MD ^ ^ repeat
can MD can ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
do VB do predicate OK
together RB together arg4 OK

i PRP ^ ^ false_start
wou- MD ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK

i- XX ^ ^ false_start
e- XX ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
c- JJ ^ ^ repeat
curious JJ curious arg2 OK
too SBAR-1 to arg2 false_start
whether RB whether arg2 OK
um IN ^ ^ filler
women UH women arg0 OK
have NNS have arg2 OK
more VBP more arg1 OK
close RBR close arg1 OK
f- JJ ^ ^ repeat
friends NNS friends arg1 OK
or NNS or arg1 OK
best CC best arg1 OK
friends JJS friends arg1 OK
than NNS than arg2 OK
men IN men arg0 OK
do NNS do arg2 OK

i PRP i arg0 OK
would MD would ^ OK
say VB say predicate OK
i PRP ^ ^ repeat
well UH ^ ^ false_start
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have arg1 OK
my PRP my arg1 OK
sister NN sister arg1 OK

um UH ^ ^ filler
i PRP i arg0 OK
but CC ^ ^ false_start
have VBP have predicate OK
a DT a arg1 OK
very RB very arg1 OK
close JJ close arg1 OK
girlfriend NN girlfriend arg1 OK
that WDT who arg2 false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
could MD ^ ^ repeat
could MD could arg1 OK
t- VB ^ ^ repeat
tell VB tell arg1 OK
anything NN anything arg1 OK
to IN to arg2 OK

and CC ^ ^ false_start
she PRP ^ ^ repeat
she PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
known VBN known ^ OK
her PRP her ^ OK
for IN ^ ^ false_start
probably RB ^ ^ repeat
oh UH ^ ^ filler
gosh UH ^ ^ filler
probably RB probably ^ OK
since IN ^ ^ repeat
since IN since ^ OK
ninety-four CD ninety-four ^ OK
that WRB that ^ OK
she PRP she ^ OK
's HVS 's ^ OK
been VBN been ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
th- WRB ^ ^ repeat
that IN that ^ OK
we PRP we ^ OK
've VBP 've ^ OK
been VBN been ^ OK
close JJ close ^ OK

so UH ^ arg1 false_start
that DT that ^ OK
's BES 's predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
pretty RB a ^ false_start
pretty RB ^ ^ repeat
pretty RB pretty arg1 OK
long JJ long arg1 OK
time NN time arg1 OK

and CC ^ ^ false_start
she PRP ^ ^ false_start
and CC ^ ^ false_start
the DT the ^ OK
same JJ same ^ OK
way NN way ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
would MD ^ ^ repeat
would MD would ^ OK
stop- VB ^ ^ repeat
drop VB drop ^ OK
uh UH ^ ^ filler
anything NN anything ^ OK
for IN for ^ OK
her PRP her ^ OK
because IN because ^ OK
she PRP ^ ^ repeat
she PRP she ^ OK
's HVS ^ ^ repeat
's HVS 's ^ OK
got VBN got ^ OK
a DT a ^ OK
very RB very ^ OK
good JJ good ^ OK
heart NN heart ^ OK

i PRP i arg0 OK
would MD would ^ OK
feel VB feel predicate OK
bad JJ bad arg1 OK
if IN ^ ^ repeat
if IN if ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
w- MD ^ ^ repeat
would MD would ^ OK
n't RB n't argM_neg OK
reciprocate VB reciprocate predicate OK

but CC but ^ OK
uh UH ^ ^ filler

it PRP it arg1 OK
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
great JJ ^ ^ repeat
great JJ great arg2 OK
friendship NN friendship arg2 OK

w- XX ^ ^ false_start
di- VBD ^ ^ false_start
he PRP he arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
a DT a arg1 OK
reason NN reason arg1 OK
for IN for arg1 OK
it PRP it arg1 OK

we PRP ^ ^ repeat
well UH ^ ^ filler
it PRP it arg0 OK
recently RB ^ ^ repeat
recently RB ^ ^ repeat
recently RB recently argM_tmp OK
got VBD got predicate OK
the DT the arg1 OK
money NN money arg1 OK

but CC ^ ^ false_start
we PRP we arg0 OK
had VBD had ^ OK
done VBN done predicate OK
s- NN ^ ^ repeat
something NN something arg1 OK
similar JJ similar arg1 OK
to IN to arg1 OK
that DT that arg1 OK
oh UH ^ ^ filler
maybe RB maybe ^ OK
two CD two argM_tmp OK
years NNS years argM_tmp OK
ago RB ago argM_tmp OK

and CC ^ ^ false_start
somebody NN somebody arg0 OK
said VBD said predicate OK
they PRP they arg0 OK
were VBD were arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
pay VB ^ ^ repeat
pay VB pay arg1 OK
us PRP ^ ^ repeat
us PRP us arg2 OK
back RP back arg2 OK

then RB then ^ OK
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden NN sudden ^ OK
he PRP he arg0 OK
came VBD came predicate OK
up RP up arg_particl OK
with IN with arg1 OK
the DT the arg1 OK
money NN money arg1 OK
but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
within IN within argM_tmp false_start
the DT the argM_tmp false_start
last JJ last argM_tmp false_start
three CD three argM_tmp false_start
months NNS months argM_tmp false_start

so UH ^ ^ filler
it PRP it ^ OK
was VBD was predicate OK
a DT a arg1 OK
good JJ good arg1 OK
thing NN thing arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
it PRP it ^ OK
was VBD was predicate OK
like RP like arg1 OK
god UH god arg1 OK
how WRB how arg1 OK
do VBP do arg1 OK
you PRP you arg0 OK
ask VB ask arg1 OK

so UH ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
a DT ^ ^ false_start
lo- NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
was VBD was ^ OK
n't RB n't ^ OK
something NN something ^ OK
to TO to ^ OK
just RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just ^ OK
well UH well ^ OK
seven CD seven ^ OK
hundred CD hundred ^ OK
is VBZ is ^ OK
n't RB n't ^ OK
something NN something ^ OK
to TO to ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
you PRP you ^ OK
get VBP get ^ OK
over IN over ^ OK
it PRP it ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
we PRP we arg0 OK
would MD would ^ OK
talk VB talk predicate OK
to IN to arg2 OK
them PRP them arg2 OK
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
s- VB ^ ^ repeat
see VB see predicate OK
them PRP them arg2 OK

but CC ^ ^ false_start
they PRP they arg0 OK
would MD would ^ OK
never RB never argM_neg OK
bring VB ^ ^ repeat
bring VB bring predicate OK
up RP ^ ^ repeat
up RP up arg_particl OK
the DT the arg1 OK
money NN money arg1 OK
thing NN thing arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
'll MD ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
never RB never argM_neg OK
said VBD said predicate OK
a DT a arg1 OK
word NN word arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
all DT all ^ OK
of IN of ^ OK
the DT ^ ^ false_start
a DT a ^ OK
sudden JJ sudden ^ OK
he PRP he arg0 OK
calls VBZ calls predicate OK
one CD one argM_tmp OK
day NN day argM_tmp OK
and CC and ^ OK
says VBZ says predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what arg1 OK
's BES 's arg1 OK
your PRP your arg2 OK
zip NN zip arg2 OK
code NN code arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ false_start
e- XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
we PRP we arg0 OK
thought VBD thought predicate OK
when WRB when argM_tmp OK
we PRP we argM_tmp OK
got VBD got argM_tmp OK
the DT the argM_tmp OK
first JJ first argM_tmp OK
one NN one argM_tmp OK
we ADVP-TMP- 1 we arg0 OK
like PRP said arg1 false_start
oh UH oh arg1 OK
well UH well arg1 OK
we UH we arg1 OK
'll PRP 'll arg1 OK
wait MD wait arg1 OK
another VB another argM_tmp OK
two DT two argM_tmp OK
years CD years argM_tmp OK
to NNS to arg2 OK
see TO see arg2 OK
the VB the arg1 OK
rest DT rest arg1 OK
of NN of arg1 OK
it IN it arg1 OK

but CC ^ ^ false_start
it PRP it arg1 OK
happened VBD happened predicate OK
w- IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
within IN within argM_tmp OK
a DT a argM_tmp OK
month NN month argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
it PRP it arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
wow UH wow arg1 OK
all UH all arg1 OK
right UH right arg1 OK

because UH ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm ^ OK
thinking VBG thinking predicate OK
oh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they- PRP ^ ^ false_start
f- XX ^ ^ false_start
you PRP you arg1 OK
should MD should arg1 OK
n't RB n't arg1 OK
even RB even arg1 OK
have VB have arg1 OK
to TO to arg1 OK

so UH ^ ^ false_start
you PRP ^ ^ false_start
're VBP ^ ^ false_start
you PRP ^ ^ false_start
're VBP ^ ^ false_start
you PRP you arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
out IN out arg2 OK
of IN of arg2 OK
high JJ high arg2 OK
school NN school arg2 OK
for IN for argM_tmp OK
like UH ^ ^ filler
four CD four argM_tmp OK
years NNS years argM_tmp OK
or CC or argM_tmp OK
so RB so argM_tmp OK

i PRP i arg0 OK
know VBP know predicate OK
we PRP we arg1 OK
went VBD went arg1 OK
when WRB when argM_tmp OK
i PRP i arg1 OK
was VBD was argM_tmp OK
married JJ married arg2 OK

i ADVP-TMP- 2 i arg1 OK
'm PRP 'm predicate OK
not VBP not argM_neg OK
m- RB ^ ^ repeat
married JJ married arg2 OK
anymore JJ anymore argM_tmp OK

and CC ^ ^ false_start
after IN after argM_tmp OK
the DT the argM_tmp OK
services NNS services argM_tmp OK
they PRP ^ ^ false_start
they PRP ^ ^ false_start
we PRP we arg0 OK
would MD ^ ^ repeat
woul- VBP ^ ^ repeat
would MD would ^ OK
have VB have predicate OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
little JJ little arg1 OK
cookies NNS cookies arg1 OK
and CC and arg1 OK
cakes NNS cakes arg1 OK
and CC and arg1 OK
food NN food arg1 OK

and CC ^ ^ false_start
there EX ^ ^ repeat
there EX there ^ OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
one CD one arg1 OK
way NN way arg1 OK
to TO ^ ^ repeat
to TO to arg1 OK
meet VB meet arg1 OK
people NNS people arg1 OK
when WRB when argM_tmp OK
you PRP you arg1 OK
're VBP 're argM_tmp OK
married JJ married arg2 OK

and CC ^ ^ false_start
another DT ^ ^ false_start
reason NN ^ ^ false_start
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
probably RB probably ^ OK
in IN in ^ OK
your PRP your ^ OK
case NN case ^ OK
and CC and ^ OK
in IN ^ ^ repeat
in IN in ^ OK
th- DT ^ ^ repeat
the DT the ^ OK
case NN case ^ OK
of IN of ^ OK
my PRP ^ ^ repeat
my PRP my arg1 OK
brother NN brother arg1 OK
who WP who arg1 OK
is VBZ is predicate OK
also RB also ^ OK
married JJ married arg2 OK
um UH ^ ^ filler
they PRP you arg0 false_start
have VBP have predicate OK
neighbors NNS neighbors arg0 OK
stop VB stop arg1 OK
by RB by arg_particl OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK

especially RB ^ ^ false_start
if IN ^ ^ false_start
you PRP ^ ^ false_start
have VBP ^ ^ false_start
a DT ^ ^ false_start
hou- NN ^ ^ false_start
d- VBP ^ ^ repeat
do VBP do ^ OK
you PRP you arg0 OK
live VB live predicate OK
in IN in argM_loc OK
a DT a argM_loc OK
house NN house argM_loc OK
or CC or argM_loc OK
an DT an argM_loc OK
apartment NN apartment argM_loc OK

i PRP i arg0 false_start
think VBP think predicate false_start
it PRP it arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
little RB little arg2 OK
more RBR more arg2 OK
difficult JJ difficult arg2 OK
but CC ^ ^ false_start
in IN ^ ^ false_start
in IN in argM_loc false_start
a DT ^ ^ false_start
an DT an argM_loc false_start
apartment NN apartment argM_loc false_start

what WP ^ ^ false_start
were VBD ^ ^ false_start
you PRP ^ ^ false_start
guys NNS ^ ^ false_start
uh UH ^ ^ filler
doing VBG ^ ^ false_start
in IN ^ ^ false_start
san NNP ^ ^ false_start
anto- NNP ^ ^ false_start
did VBD did ^ OK
you PRP you arg0 OK
move VB move predicate OK
because IN ^ ^ repeat
uh UH ^ ^ filler
because IN because ^ OK
of IN ^ ^ false_start
someone NN someone arg0 OK
had VBD had predicate OK
a DT a arg1 OK
job NN job arg1 OK
there RB ^ ^ false_start
in IN in argM_loc OK
san NNP san argM_loc OK
antonio NNP antonio argM_loc OK

my PRP my arg0 OK
sister NN sister arg0 OK
lives VBZ lives predicate OK
in IN ^ ^ repeat
in IN in argM_loc OK
houston NNP houston argM_loc OK

is VBZ is predicate OK
that DT that arg1 OK
where WRB where arg2 OK
you PRP you arg1 repeat
you PRP ^ ^ OK
're VBP ^ arg2 repeat
're VBP ^ ^ false_start
at IN are predicate false_start

she PRP she arg0 OK
lives VBZ lives predicate OK
in IN ^ ^ repeat
uh UH ^ ^ filler
in IN in argM_loc OK
an DT an arg0 OK
area NN area arg0 OK
it PRP ^ ^ false_start
in IN in arg0 false_start
houston NNP houston arg0 OK
houston NNP that ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
you PRP ^ ^ false_start
s- XX ^ ^ false_start
's BES is arg1 false_start
called VBN called arg1 OK
friendswood NNP friendswood arg1 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
what WDT what arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
suburb NN suburb arg1 OK

they PRP ^ ^ repeat
they PRP they arg1 OK
were VBD were predicate OK
from IN from arg2 OK
like UH ^ ^ filler
th- DT ^ ^ repeat
the DT the arg2 OK
midwest NNP midwest arg2 OK

and CC ^ ^ false_start
they PRP they arg0 OK
both DT both arg0 OK
moved VBD moved predicate OK
down IN down argM_other OK
down RB ^ ^ repeat
t- RB ^ ^ repeat
to IN to arg2 OK
ther- RB ^ ^ false_start
texas NNP texas arg2 OK
after IN ^ ^ repeat
after IN after argM_tmp OK
college NN college argM_tmp OK
because IN because ^ OK
he PRP he arg0 OK
got VBD got predicate OK
a DT a arg1 OK
job NN job arg1 OK
with IN with arg1 OK
nasa NNP nasa arg1 OK
which WDT which ^ OK
is VBZ is predicate OK
like UH ^ ^ filler
one CD one arg2 OK
of IN of arg2 OK
the DT the arg2 OK
best JJS best arg2 OK
jobs NNS jobs arg2 OK
you PRP you arg0 OK
could MD could arg2 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
have VB have arg2 OK
liv- VBG ^ ^ false_start
working VBG working arg2 OK
in IN in argM_loc OK
texas NNP texas argM_loc OK
unless IN ^ ^ false_start
you PRP ^ ^ false_start
work VBP ^ ^ false_start
for IN ^ ^ false_start
one CD ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
oil NN ^ ^ false_start
unless IN unless ^ OK
you PRP you arg1 OK
're VBP 're predicate OK
an DT ^ ^ repeat
an DT an arg2 false_start
oil NN oil arg2 false_start
company NN ^ arg2 false_start
or CC ^ ^ false_start
something NN company ^ false_start
executive NN executive arg2 OK
for IN ^ ^ false_start

sh- PRP ^ ^ false_start
i PRP ^ ^ false_start
even RB even ^ OK
with IN ^ ^ false_start
her PRP ^ ^ false_start
when WRB when ^ OK
i PRP i arg0 OK
talk VBP talk predicate OK
to IN to arg2 OK
her PRP her arg2 OK
she ADVP-TMP- 1 ^ ^ repeat
she PRP she arg0 OK
has PRP has predicate OK
only VBZ only arg1 OK
like RB ^ ^ filler
a UH a arg1 OK
handful DT handful arg1 OK
of NN of arg1 OK
work IN work arg1 false_start
friends IN friends arg1 OK
from NNS ^ ^ false_start

hm UH ^ ^ filler
did VBD did ^ OK
he PRP he arg2 OK
get VB get predicate OK
him PRP him arg0 OK
work NN work arg1 OK
wh- WDT ^ ^ repeat
where WRB where argM_loc OK
he PRP he arg0 OK
works VBZ works argM_loc OK

here RB here arg2 OK
's BES 's predicate OK
the DT the arg1 OK
key NN key arg1 OK

um UH ^ ^ filler
are VBP are predicate OK
you PRP you arg1 OK
friends NNS friends arg2 OK
friends NNS with argM_other false_start
his PRP his argM_other false_start
fiancee NN fiancee argM_other false_start
just RB just ^ OK
because IN because ^ OK
of IN of ^ OK
the DT the ^ OK
close JJ close ^ OK
proximity NN proximity ^ OK
or CC ^ ^ repeat
or CC or ^ OK
do VBP ^ ^ false_start
you PRP ^ ^ false_start
take VB ^ ^ false_start
or CC ^ ^ false_start
is VBZ is predicate OK
there EX there arg1 OK
interest NN a ^ false_start
like UH ^ ^ filler
common JJ common arg1 OK
interest NN interest arg1 OK
that WDT that ^ OK
you PRP you arg0 OK
guys NNS ^ ^ false_start
share VBP share predicate OK

so RB ^ ^ false_start
you PRP ^ ^ repeat
guys NNS ^ ^ false_start
you PRP you arg1 OK
would MD ^ ^ false_start
'd MD 'd ^ OK
be VB ^ ^ false_start
be VB be predicate OK
f- NNS ^ ^ false_start
friends NNS friends arg2 OK
even RB ^ ^ false_start
if IN ^ ^ false_start
your PRP ^ ^ false_start
even RB even argM_other OK
if IN ^ ^ false_start
um UH ^ ^ filler
if IN if argM_other OK
your PRP ^ ^ repeat
the DT the argM_other OK
guys NNS guys arg0 OK
did VBD ^ ^ repeat
n't RB ^ ^ repeat
in- VB ^ ^ repeat
did VBD did argM_other OK
n't RB n't argM_neg OK
introduce VB introduce argM_other OK
you PRP you arg1 OK

because IN because ^ OK
my PRP my ^ OK
ex-wife NN ex-wife ^ OK
we PRP ^ ^ repeat
we PRP ^ ^ repeat
we PRP ^ ^ false_start
neither DT neither arg0 OK
of IN of arg0 OK
us PRP us arg0 OK
really RB really ^ OK
has VBZ has predicate OK
a DT a ^ OK
a DT _NOUN_ arg1 false_start

i PRP i arg1 OK
was VBD was predicate OK
part NN part arg2 OK
of IN of arg2 OK
a DT a arg2 OK
music NN music arg2 OK
project NN project arg2 OK

so RB ^ ^ false_start
i PRP i arg0 OK
moved VBD moved predicate OK
out IN ^ ^ false_start
to IN to arg2 OK
california NNP california arg2 OK
with IN with argM_other OK
a DT some ^ false_start
a DT ^ ^ false_start
bunch NN ^ ^ false_start
of IN ^ ^ false_start
people NNS people arg1 OK
that WDT that argM_other OK
that WDT ^ ^ false_start
are VBP ^ ^ false_start
were VBD were argM_other OK
par- NN ^ ^ false_start
part NN ^ ^ repeat
part NN part arg2 OK
of IN ^ ^ repeat
of IN of arg2 OK
a DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
a DT ^ ^ repeat
like UH ^ ^ filler
a DT ^ ^ repeat
a DT ^ ^ repeat
like UH ^ ^ filler
a DT ^ ^ repeat
a DT a arg2 OK
music NN music arg2 OK
band NN ^ ^ false_start
partnership NN ^ ^ repeat
partnership NN partnership arg2 OK

and CC ^ ^ false_start
those DT ^ ^ false_start
were VBD ^ ^ false_start
our PRP ^ ^ false_start
fr- NNS ^ ^ false_start
that DT ^ ^ false_start
just RB ^ ^ false_start
that DT that ^ false_start
that DT ^ ^ false_start
circle NN circle arg1 false_start
that DT ^ ^ false_start
of IN of arg1 false_start
that DT ^ ^ false_start
like UH ^ ^ filler
with- IN ^ ^ repeat
within IN ^ ^ false_start
ten CD ten arg1 false_start
that DT ^ arg1 false_start
people NNS people arg1 false_start
was VBD was predicate OK
our PRP our arg2 OK
family NN family arg2 OK
and CC and arg2 OK
friends NNS friends arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
as IN ^ ^ false_start
we PRP ^ ^ false_start
dis- VBD ^ ^ false_start
as IN as ^ OK
it PRP it arg1 OK
slowly RB slowly ^ OK
disintegrated VBD disintegrated predicate OK
over IN over argM_tmp OK
the DT the argM_tmp OK
years NNS years argM_tmp OK
uh UH ^ ^ filler
ah UH ^ ^ filler
i PRP i ^ OK
know VBP know ^ OK
i PRP i arg0 OK
never RB never ^ OK
really RB really ^ OK
reached VBN reached predicate OK
out RP out arg_particl OK
to IN to arg1 OK
anybody NN anybody arg1 OK
besides IN besides arg1 OK
that DT that arg1 OK
inner JJ inner arg1 OK
circle NN circle arg1 OK
besides IN besides arg1 OK
just RB ^ arg1 false_start
a DT a arg0 OK
few JJ few arg0 OK
people NNS people arg0 OK
that WDT that arg1 OK
lived VBD lived arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
neighbor- NN _NOUN_ argM_loc false_start

i PRP i arg0 OK
call VBP call predicate OK
them PRP them arg1 OK
every DT every argM_tmp OK
once RB once argM_tmp OK
in IN in argM_tmp OK
a DT a argM_tmp OK
while NN while argM_tmp OK
even RB even ^ OK
though IN though ^ OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
live VB live predicate OK
there RB there argM_loc OK
anymore RB anymore argM_tmp OK

but CC ^ ^ false_start
um UH ^ ^ filler
she PRP ^ ^ false_start
had VBD ^ ^ false_start
found VBN ^ ^ false_start
she PRP she arg0 OK
worked VBD worked predicate OK
for IN for arg2 OK
j. NNP j. arg2 OK
b. NNP b. arg2 OK
l. NNP l. arg2 OK
speaker NN speaker arg2 OK
company NN company arg2 OK

and CC ^ ^ false_start
she PRP ^ ^ false_start
found VBN ^ ^ false_start
like UH ^ ^ false_start
a DT ^ ^ false_start
c- NN ^ ^ false_start
and CC ^ ^ false_start
usually RB usually ^ OK
when IN when ^ OK
people NNS people ^ OK
work VBP work ^ OK
for IN for ^ OK
big JJ big ^ OK
corporations NNS corporations ^ OK
they PRP ^ ^ repeat
uh UH ^ ^ filler
they PRP they ^ OK
get VBP get ^ OK
together RB together ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
company NN company ^ OK
gatherings NNS gatherings ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
and CC ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
how WRB how arg2 OK
she PRP she arg0 OK
met VBD met arg2 OK
a DT a arg1 OK
couple NN couple arg1 OK
of IN of arg1 OK
pretty RB ^ arg2 false_start
good JJ good arg1 OK
friends NNS friends arg1 OK

and CC ^ arg2 false_start
i PRP i arg0 OK
think VBP think argM_tmp OK
now RB now ^ OK
up IN ^ ^ false_start
to IN ^ ^ false_start
right RB ^ ^ false_start
it PRP it arg1 OK
's HVS 's arg1 OK
been VBN been arg1 OK
like UH ^ ^ filler
five CD five arg1 OK
six CD or ^ false_start
six CD six arg1 OK
years NNS years arg1 OK
ago RB ^ ^ false_start
years NNS and ^ false_start
she PRP she arg1 OK
's BES 's predicate OK
still RB still argM_tmp OK
very RB very arg2 OK
^ ^ good ^ OK
friends NNS friends arg2 OK
with IN with argM_other OK
this DT ^ ^ false_start
one CD one arg1 OK
lady NN lady arg1 OK
that WDT ^ ^ repeat
that WDT that argM_other OK
she PRP she arg0 OK
met VBD met argM_other OK
just RB ^ ^ false_start
through IN through argM_other OK
a DT a argM_other OK
casual JJ casual argM_other OK
work NN work argM_other OK
acquaintance NN acquaintance argM_other OK

but CC ^ ^ false_start
i PRP i arg0 OK
have VBP have ^ OK
n't RB n't argM_neg OK
really RB ^ ^ false_start
latched VBN latched predicate OK
on RP on arg1 OK
to IN to arg1 OK
anybody NN anybody arg1 OK

like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP have predicate OK
some DT some arg2 OK
people NNS people arg2 OK
's POS 's arg2 OK
phone NN phone arg2 OK
numbers NNS numbers arg2 OK

and CC ^ ^ false_start
when WRB ^ ^ false_start
when ADVP-TMP- 1 when ^ OK
i PRP ^ ^ repeat
i WRB i arg0 OK
'm VBP ^ ^ repeat
'm PRP 'm ^ OK
working VBG ^ ^ false_start
looking VBP looking predicate OK
for VBG for arg_particl OK
work IN work arg1 OK
i NN i arg0 OK
usually ADVP-TMP- 2 usually ^ OK
contact PRP contact predicate OK
them RB them arg2 OK
you VBP ^ ^ filler
know PRP ^ ^ filler
for PRP for ^ OK
networking VBP networking ^ OK

but CC ^ ^ false_start
um UH ^ ^ filler
actually RB actually ^ OK
tha- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
not RB not ^ OK
as RB as ^ OK
ridiculous JJ ridiculous ^ OK
as IN as ^ OK
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
other JJ other ^ OK
ones NNS ones ^ OK

y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
now RB now ^ OK
that IN that ^ OK
i PRP i ^ OK
am VBP am ^ OK
put VBN put ^ OK
on IN on ^ OK
the DT the ^ OK
spot NN spot ^ OK
of IN of ^ OK
course NN course ^ OK
um UH ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
n't RB n't ^ OK
know VB know ^ OK

but CC ^ ^ false_start
ten CD ten ^ OK
minutes NNS minutes ^ OK
after IN after ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
off IN off ^ OK
the DT the ^ OK
phone NN phone ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
sure JJ sure ^ OK
i PRP i ^ OK
'll MD 'll ^ OK
have VB have ^ OK
a DT a ^ OK
whole JJ whole ^ OK
list NN list ^ OK
of IN of ^ OK
them PRP them ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
w- VBP ^ ^ repeat
watch VBP watch ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
um UH ^ ^ filler
like UH ^ ^ filler
c. NNP c. ^ OK
n. NNP n. ^ OK
n. NNP n. ^ OK
n. NNP ^ ^ false_start
and CC and ^ OK
history NN history ^ OK
channel NNP channel ^ OK
and CC and ^ OK
all PDT all ^ OK
that DT that ^ OK
which WDT which ^ OK
is VBZ is ^ OK
kind RB kind ^ OK
of RB of ^ OK
reality NN reality ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
ig- XX ^ ^ repeat
ag- XX ^ ^ false_start
exactly UH exactly ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
find VBP ^ ^ false_start
i PRP i ^ OK
watch VBP watch ^ OK
so RB so ^ OK
much JJ much ^ OK
of IN of ^ OK
that DT that ^ OK
that IN that ^ OK
um UH ^ ^ filler
when WRB when ^ OK
i PRP i ^ OK
want VBP want ^ OK
to TO to ^ OK
watch VB watch ^ OK
something NN something ^ OK
for IN for ^ OK
p- RB ^ ^ repeat
purely RB purely ^ OK
entertainment NN entertainment ^ OK
purposes NNS purposes ^ OK
i ADVP-TMP- 2 ^ ^ false_start
guess PRP ^ ^ false_start
i VBP i ^ OK
go PRP ^ ^ false_start
more VBP ^ ^ false_start
for RBR prefer ^ false_start
either IN either ^ OK
sitcoms DT sitcoms ^ OK
or NNS or ^ OK
you CC ^ ^ filler
know PRP ^ ^ filler
even VBP even ^ OK
dramas RB dramas ^ OK
you NNS ^ ^ filler
know PRP ^ ^ filler
where VBP where ^ OK
the WRB the ^ OK
reality DT reality ^ OK
it NN ^ ^ false_start
stuff NN stuff ^ OK
it NN ^ ^ false_start
just PRP just ^ OK
looks RB looks ^ OK
like VBZ like ^ OK
um IN ^ ^ filler
like VBZ _ARG_ ^ false_start

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
just RB ^ ^ false_start
l- VB ^ ^ repeat
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
just RB ^ ^ false_start
to IN ^ ^ false_start
to IN to ^ OK
m- PRP ^ ^ false_start
me PRP me ^ OK
it PRP it ^ false_start
look VB looks ^ false_start
like IN like ^ OK
people NNS people ^ OK
that WDT that ^ OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
are VBP ^ ^ repeat
are VBP are ^ OK
desperate JJ desperate ^ OK
for IN for ^ OK
their PRP their ^ OK
fifteen CD fifteen ^ OK
minutes NNS minutes ^ OK
of IN of ^ OK
fame NNP fame ^ OK

so UH ^ ^ false_start
now RB ^ ^ false_start
instead IN instead ^ OK
of IN of ^ OK
having VBG having ^ OK
to TO to ^ OK
parade VB parade ^ OK
their PRP their ^ OK
dirty JJ dirty ^ OK
laun- NN ^ ^ false_start
linen NN linen ^ OK
on IN on ^ OK
like UH ^ ^ filler
oprah NNP oprah ^ OK
or CC or ^ OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
one CD one ^ OK
of IN of ^ OK
those DT those ^ OK
um UH ^ ^ filler
talk NN talk ^ OK
shows NNS shows ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
now RB now ^ OK
some DT some ^ OK
people NNS people ^ OK
have VBP have ^ OK
other JJ other ^ OK
ways NNS ways ^ OK
to TO to ^ OK
get VB get ^ OK
their PRP their ^ OK
fifteen CD fifteen ^ OK
minutes NNS minutes ^ OK
of IN of ^ OK
fame NN fame ^ OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
stuff NN ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
tha- WP ^ ^ false_start
you PRP ^ ^ false_start
'd MD ^ ^ false_start
see VB ^ ^ false_start
um NP-1 ^ ^ filler
i UH ^ ^ filler
mean PRP ^ ^ filler
i VBP i ^ OK
'm PRP 'm ^ OK
not VBP not ^ OK
into RB into ^ OK
talk IN talk ^ OK
shows NN shows ^ OK
either NNS either ^ OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
're VBP 're ^ OK
flipping VBG flipping ^ OK
channels NNS channels ^ OK
and ADVP-TMP- 1 ^ ^ false_start
or CC or ^ OK
you CC you ^ OK
're PRP 're ^ OK
stuck VBP stuck ^ OK
waiting VBN waiting ^ OK
for VBG for ^ OK
a IN a ^ OK
commercial DT commercial ^ OK
next NN next ^ false_start
on JJ on ^ false_start
oprah JJ oprah ^ false_start
next JJ ^ ^ false_start
um ADVP-TMP- 1 ^ ^ filler
men JJ men ^ OK
who UH who ^ OK
wear NNS wear ^ OK
their WP their ^ OK
women VBP women ^ OK
's PRP 's ^ OK
clothing NNS clothing ^ OK
men JJ ^ ^ false_start
something PRP or ^ OK
w- POS ^ ^ false_start
um NN ^ ^ filler
while XX ^ ^ false_start
whate- UH ^ ^ false_start
you IN ^ ^ filler
know WP ^ ^ filler
whatever PRP ^ ^ false_start
you VBP ^ ^ filler
know WP ^ ^ filler
something PRP something ^ OK
ridiculous VBP ridiculous ^ OK

i- PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
i PRP i ^ OK
agree VBP agree ^ OK

if IN ^ ^ false_start
they PRP ^ ^ false_start
can MD ^ ^ false_start
escape VB ^ ^ false_start
i- VBZ ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
see VBP see ^ OK
it PRP it ^ OK
as IN as ^ OK
an DT an ^ OK
escape NN escape ^ OK
for IN for ^ OK
them PRP them ^ OK

it PRP it ^ OK
is VBZ ^ ^ repeat
's BES 's ^ OK
whoever WP ^ ^ false_start
their PRP whoever ^ false_start
's BES 's ^ false_start
on IN on ^ false_start
the DT the ^ false_start
show NN show ^ false_start
their PRP 's ^ false_start
reality NAC-3 reality ^ OK
not NN not ^ OK
the RB the ^ OK
person DT person ^ OK
viewing NN viewing ^ OK
it VBG it ^ OK

it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
escapist JJ escapist ^ OK
fare NN fare ^ OK
so RB ^ ^ filler
for IN for ^ false_start
them PRP them ^ false_start

i PRP i ^ OK
think VBP think ^ OK
there EX there ^ OK
's BES 's ^ OK
so- DT ^ ^ repeat
some DT some ^ OK
kind NN ^ ^ false_start
of IN ^ ^ false_start
um UH ^ ^ filler
some DT _ARG_ ^ false_start

some DT ^ ^ false_start
um UH ^ ^ filler
i PRP i ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
even RB even ^ OK
c- XX ^ ^ false_start
articulate VB articulate ^ OK
the DT the ^ OK
right JJ right ^ OK
thought NN thought ^ OK

some DT some ^ OK
kind NN kind ^ OK
of IN of ^ OK
s- XX ^ ^ false_start
uh UH ^ ^ filler
o- XX ^ ^ false_start
perverse JJ perverse ^ OK
um UH ^ ^ filler
satisfaction NN satisfaction ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
in IN in ^ OK
seeing VBG seeing ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
someone NN someone ^ OK
screw VB screw ^ OK
someone NN someone ^ OK
else RB else ^ OK
over RP over ^ OK

it PRP it ^ OK
's BES 's ^ OK
on IN on ^ OK
a DT a ^ OK
mi- RBR ^ ^ false_start
more RBR ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
less RBR less ^ OK
um UH ^ ^ filler
intense JJ intense ^ OK
level NN level ^ OK
like IN like ^ OK
when WRB when ^ OK
they PRP they ^ OK
had VBD had ^ OK
the DT the ^ OK
shows NNS shows ^ OK
like IN like ^ OK
who WP ^ ^ repeat
um UH ^ ^ filler
who WP who ^ OK
want- VBZ ^ ^ repeat
wants VBZ wants ^ OK
to TO to ^ OK
be VB be ^ OK
a DT a ^ OK
millionaire NN millionaire ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
regula- NN ^ ^ repeat
regular JJ regular ^ OK
games NNS games ^ OK
shows NNS shows ^ OK

um UH ^ ^ filler
w- WRB ^ ^ repeat
where WRB ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
there EX there ^ OK
was VBD was ^ OK
one CD ^ ^ false_start
the DT the ^ OK
one CD one ^ OK
from IN from ^ OK
britain NNP britain ^ OK
uh UH ^ ^ filler
the DT the ^ OK
weakest NNP weakest ^ OK
lin- NNP link ^ false_start

i PRP ^ arg1 false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
that IN ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
the DT ^ ^ false_start
whole JJ ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ false_start
enj- VBP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
in IN ^ ^ false_start
fact NN ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
would MD ^ ^ false_start
say VB ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
believe VB believe predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
the DT the arg2 OK
whole JJ whole arg2 OK
reason NN reason arg2 OK
the DT the arg0 OK
economy NN economy arg0 OK
is VBZ is arg2 OK
having VBG having arg2 OK
the DT the arg1 OK
problems NNS problems arg1 OK
it PRP that ^ false_start
it PRP it arg0 OK
's BES 's arg1 OK
having VBG having arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
d- VBP ^ ^ false_start
i PRP i arg0 OK
certainly RB certainly argM_adverb OK
think VBP think predicate OK
that IN that arg1 OK
it PRP it arg0 OK
's HVS 's arg1 OK
contributed VBN contributed arg1 OK
um UH ^ ^ filler
because IN because argM_cause OK
people NNS people arg0 OK
have VB have argM_cause OK
a DT a argM_extent OK
lot NN lot argM_extent OK
less JJR less argM_extent OK
faith NN faith arg1 OK
in IN in arg1 OK
the DT the arg1 OK
stock NN stock arg1 OK
market NN market arg1 OK
and CC and arg1 OK
uh UH ^ ^ filler
the DT the arg1 OK
value NN value arg1 OK
of IN of arg1 OK
their PRP their arg1 OK
stocks NNS stocks arg1 OK
and CC ^ ^ false_start
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
thing NN ^ ^ false_start

uh UH ^ ^ filler
when WRB ^ ^ repeat
when WRB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
have VBP have ^ OK
things NNS things ^ OK
like IN like ^ OK
enron NNP enron ^ OK
and CC and ^ OK
worldcom NNP worldcom ^ OK
and CC ^ ^ repeat
and CC and ^ OK
things NNS things ^ OK
like IN like ^ OK
that DT that ^ OK
where WRB where ^ OK
these DT these ^ OK
stocks NNS stocks ^ OK
just RB just ^ OK
go VBP go ^ OK
into IN into ^ OK
the DT the ^ OK
dump NN dump ^ OK

i- XX ^ ^ false_start
uh UH ^ ^ filler
so UH ^ ^ filler
um UH ^ ^ filler
how WRB how argM_mnr OK
has VBZ has ^ OK
it PRP it arg0 OK
affected VBN affected predicate OK
you PRP you arg1 OK
personally RB personally argM_adverb OK
would MD ^ ^ false_start
you PRP ^ ^ false_start
say VB ^ ^ false_start

well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
on- CD ^ ^ repeat
one CD one arg0 OK
would MD would argM_mod OK
think VB think predicate OK
that IN that arg1 OK
they PRP they arg0 OK
would MD would argM_mod OK
have VB have argM_mod OK
to TO to ^ OK
to TO _ARG_ argM_mod false_start

i PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
who WP who arg0 OK
knows VBZ knows predicate OK

but CC ^ ^ false_start
one CD one ^ OK
would MD would ^ OK
think VB think ^ OK
that IN that ^ OK

eh UH ^ ^ filler
eh UH ^ ^ filler
for IN ^ ^ repeat
for IN for ^ OK
me PRP me ^ OK
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK

um UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
thirty-five CD thirty-five arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
that IN that arg1 OK
the DT ^ ^ false_start
eh UH ^ ^ filler
the DT the arg0 OK
corporate JJ corporate arg0 OK
scandals NNS scandals arg0 OK
have VBP have arg1 OK
affected VBN affected arg1 OK
me PRP me arg1 OK
exactly RB exactly argM_adverb OK

uh UH ^ argM_loc filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
always RB ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
alwa- RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
work VBP work predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
tech NN tech argM_loc OK
^ ^ sector ^ OK

um UH ^ ^ filler
so UH ^ ^ filler
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
really RB really argM_adverb OK
a- RB ^ ^ repeat
always RB always argM_tmp OK
kind RB kind argM_extent OK
of RB of argM_extent OK
worried JJ worried predicate OK
about IN about arg0 OK
getting VBG getting arg0 OK
a DT a arg1 OK
job NN job arg1 OK
and CC ^ ^ repeat
and CC ^ ^ repeat
and CC and arg0 OK
keeping VBG keeping arg0 OK
a DT a arg1 OK
job NN job arg1 OK
and CC ^ ^ repeat
and CC ^ ^ false_start
all PDT ^ ^ false_start
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
thing NN ^ ^ false_start

so UH ^ ^ filler
what WP ^ ^ false_start
do VBP ^ ^ false_start
you PRP ^ ^ false_start
think VB ^ ^ false_start
uh UH ^ ^ filler
to TO to ^ OK
answer VB answer predicate OK
the DT the arg1 OK
other JJ other arg1 OK
question NN question arg1 OK
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
think VB think predicate OK
the DT the arg0 OK
government NN government arg0 OK
can MD can argM_mod OK
do VB do arg1 OK

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ filler
me- VBP ^ ^ filler
i PRP i arg0 OK
agree VBP ^ ^ repeat
agree VBP agree predicate OK
with IN ^ ^ repeat
with IN with arg2 OK
yo- PRP ^ ^ repeat
you PRP you arg2 OK
on IN on arg1 OK
some DT some arg1 OK
of IN of arg1 OK
those DT those arg1 OK
things NNS things arg1 OK

um UH ^ ^ filler
however WRB however ^ OK
like UH ^ ^ false_start
with IN ^ ^ repeat
with IN with ^ OK
the DT the ^ OK
corporate JJ corporate ^ OK
scandal NN scandal ^ OK
stuff NN stuff ^ OK
specifically RB specifically ^ false_start

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
why WRB ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
trying VBG ^ ^ false_start
to TO ^ ^ false_start
uh UH ^ ^ filler
b- XX ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
h- VBP ^ ^ false_start
like IN like ^ OK
i PRP i arg0 OK
said VBD said predicate OK
i PRP i arg0 OK
have VBP have arg1 OK
n't RB n't argM_neg OK
done VBN done arg1 OK
one CD one arg1 OK
of IN of arg1 OK
these DT these arg1 OK
before RB before arg1 OK

but CC ^ arg2 false_start
for IN ^ ^ false_start
me PRP ^ ^ false_start
what WP ^ ^ repeat
what WP what arg1 OK
i PRP ^ ^ repeat
i PRP i arg1 OK
think VBP ^ ^ repeat
think VBP think arg1 OK
needs VBZ needs arg1 OK
to TO to arg1 OK
happen VB happen arg1 OK
in IN in arg1 OK
the DT ^ arg1 false_start
those DT the ^ false_start
corporate JJ ^ arg1 false_start
those DT corporate ^ false_start
sand- NN ^ ^ repeat
scandal NN ^ arg1 false_start
stuff NN ^ ^ false_start
those DT scandal ^ false_start
cases NNS cases arg1 OK
with IN ^ ^ false_start
the DT ^ ^ false_start
specifically RB specifically argM_adverb false_start
is VBZ is predicate OK
is VBZ _ARG_ arg1 false_start

i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
the DT ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
th- DT ^ ^ repeat
there EX there arg1 OK
's BES 's arg1 OK
not RB not argM_neg OK
a DT a arg1 OK
whole JJ whole arg1 OK
lot NN lot arg1 OK
the DT the arg0 OK
government NN government arg0 OK
can MD can argM_mod OK
do VB do arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but argM_discou OK
what WP what arg1 OK
the DT the arg0 OK
government NN government arg0 OK
they VBZ ^ ^ repeat
they MD ^ ^ false_start
can MD can argM_mod OK
can PRP ^ ^ repeat
can PRP ^ ^ false_start
do VB do predicate OK
is NP-1 is arg1 OK
uh MD ^ ^ filler
eh UH ^ ^ filler
create UH create arg1 OK
a VB a arg1 OK
real DT real arg1 OK
sense JJ sense arg1 OK
of NN of arg1 OK
accounta- IN ^ ^ false_start
countability- NN accountabilit y  arg1 false_start

to IN to ^ OK
where WRB where ^ OK
the DT ^ ^ false_start
ken NNP ^ ^ false_start
lays NNPS ^ ^ false_start
and CC ^ ^ repeat
the DT ^ ^ repeat
and CC ^ ^ false_start
the DT ^ ^ false_start
guys NNS ^ ^ false_start
that WDT ^ ^ repeat
are VBP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT ^ ^ false_start
are VBP ^ ^ false_start
right RB ^ ^ false_start
now RB ^ ^ false_start
seem VB ^ ^ false_start
to TO ^ ^ false_start
maybe RB ^ ^ false_start
some DT some ^ OK
people NNS people ^ OK
seem VBP seem ^ OK
to TO to ^ OK
be VB be ^ OK
profiting VBG profiting ^ OK
from IN from ^ OK
some DT some ^ OK
of IN of ^ OK
this DT this ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
held VBN held ^ OK
accountable JJ accountable ^ OK

and CC ^ ^ false_start
they PRP they arg1 OK
're VBP 're ^ OK
punished VBN punished predicate OK
t- IN ^ ^ repeat
to IN to argM_mnr OK
the DT the argM_mnr OK
full RB ^ ^ repeat
fullest JJS fullest argM_mnr OK
ex- JJ ^ ^ repeat
extent NN extent argM_mnr OK
of IN of argM_mnr OK
the DT the argM_mnr OK
law NN law argM_mnr OK

but CC but ^ OK
that DT ^ ^ repeat
what WP ^ ^ false_start
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
that WDT that ^ OK
i PRP i ^ OK
found VBD found ^ OK
that NP-1 that ^ OK
works WDT works ^ OK
is VBZ is ^ OK
something VBZ something ^ OK
with NN with ^ OK
codeine IN codeine ^ OK

that RB ^ ^ repeat
that RB that ^ OK
bad JJ bad ^ OK
where WRB where ^ OK
it PRP it ^ OK
's BES 's ^ OK
persistent JJ persistent ^ OK
i ADVP-1 i ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
think RB think ^ OK
anything VB anything ^ OK
else NN else ^ OK
does RB does ^ OK
work VBZ work ^ OK

y- PRP ^ ^ repeat
you PRP ^ ^ false_start
have VBP ^ ^ false_start
all DT all ^ OK
you PRP you ^ OK
can MD can ^ OK
do VB do ^ OK
to TO to ^ OK
breathe VB breathe ^ OK

you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
breathe VB breathe ^ OK
and CC and ^ OK
cough VB cough ^ OK
too RB too ^ OK

you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
d- VBP do ^ false_start
either DT either ^ OK
one CD one ^ OK
or CC or ^ OK
the DT the ^ OK
other JJ other ^ OK

you UNK ^ ^ filler
know UNK ^ ^ filler
if UNK if ^ OK
you UNK you ^ OK
have UNK have ^ OK
a UNK a ^ OK
two-year UNK two-year ^ OK
old UNK old ^ OK

or UNK ^ ^ false_start
f- UNK ^ ^ false_start
i UNK i ^ OK
watch UNK watch ^ OK
a UNK a ^ OK
two-year UNK two-year ^ OK
and UNK and ^ OK
a UNK a ^ OK
four-year UNK four-year ^ OK
old UNK old ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
up RB up ^ OK
and CC and ^ OK
going VBG going ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
like UH like ^ OK
no UH no ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB not ^ OK
sick JJ sick ^ OK
right RB right ^ OK
now RB now ^ OK

but CC but ^ OK
usually RB usually ^ OK
if IN ^ ^ false_start
i PRP ^ ^ false_start
get VBP ^ ^ false_start
a DT ^ ^ false_start
good JJ ^ ^ false_start
you PRP ^ ^ repeat
you PRP you ^ OK
might MD ^ ^ repeat
might MD might ^ OK
as RB ^ ^ repeat
as RB as ^ OK
well RB ^ ^ repeat
well RB well ^ OK
just RB ^ ^ repeat
just RB just ^ OK
whistle VB whistle ^ OK
dixie NNP dixie ^ OK
because IN because ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
um UH ^ ^ filler
if IN if ^ OK
i PRP i ^ OK
get VBP get ^ OK
sick JJ sick ^ OK
then RB then ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
screwed VBN screwed ^ OK
so IN so ^ OK
to TO to ^ OK
speak VB speak ^ OK
because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
also RB also ^ OK
a DT a ^ OK
diabetic NN diabetic ^ OK

so RB so ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ false_start
if IN if ^ OK
i PRP i ^ OK
get VBP get ^ OK
sick JJ sick ^ OK
then RB then ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
have VBP have ^ OK
other JJ other ^ OK
things NNS things ^ OK
to TO ^ ^ repeat
to TO to ^ OK
tend VB tend ^ OK
to IN to ^ OK

because IN because ^ OK
then RB then ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
see VB ^ ^ repeat
see VB see ^ OK
they PRP they ^ OK
have VBP have ^ OK
robitussin NNP robitussin ^ OK
now PP-1 now ^ OK
for RB for ^ OK
diabetics IN diabetics ^ OK

well UH ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
get VBP ^ ^ repeat
get VBP get ^ OK
the DT ^ ^ repeat
the DT the ^ OK
halls NNS halls ^ OK

they PRP they ^ OK
taste VBP taste ^ OK

the DT ^ ^ false_start
w- NN ^ ^ false_start
the DT ^ ^ false_start
um UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
halls NNP halls ^ OK
cough NN cough ^ OK
drops NNS drops ^ OK
like UH ^ ^ filler
you PRP you ^ OK
get VBP get ^ OK
the DT the ^ OK
bag NN bag ^ OK
full JJ full ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
and CC ^ ^ false_start
eh UH ^ ^ false_start
sugar NN sugar ^ OK
free JJ free ^ OK

you PRP you ^ OK
can MD can ^ OK
get VB get ^ OK
them PRP them ^ OK
sugar NN sugar ^ OK
free JJ free ^ OK
in IN in ^ OK
halls NNP halls ^ OK

they PRP they ^ OK
taste VBP taste ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
are VBP are ^ OK
positively RB positively ^ OK
nasty JJ nasty ^ OK

and CC and ^ OK
clears VBZ clears ^ OK
that DT that ^ OK
nose NN nose ^ OK
so IN so ^ OK
you PRP you ^ OK
can MD can ^ OK
at RB at ^ OK
least RB least ^ OK
breathe VB breathe ^ OK

um UH ^ ^ filler
use VB ^ ^ repeat
use VB use ^ OK
vicks NNP vicks ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
just RB ^ ^ false_start
as IN as argM_tmp OK
i PRP i argM_tmp OK
was VBD was argM_tmp OK
walking VBG walking argM_tmp OK
around IN around argM_tmp OK
the DT the argM_tmp OK
airport NN airport argM_tmp OK
i PRP i arg0 OK
was VBD was ^ OK
thinking VBG thinking predicate OK
there EX there arg1 OK
are VBP are arg1 OK
so RB so arg2 OK
many JJ many arg2 OK
ways NNS ways arg2 OK
that WDT that arg2 OK
somebody NN somebody arg2 OK
could MD could argM_mod OK
get VB get arg2 OK
something NN something arg1 OK
on IN on argM_loc OK
board NNP board argM_loc OK
an DT an argM_loc OK
airplane NN airplane argM_loc OK

and CC ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
what WP what arg1 OK
they PRP they arg0 OK
check VBP check arg1 OK
with IN with arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
the DT ^ ^ repeat
the DT ^ arg1 false_start
food NN ^ ^ false_start
service NN the ^ false_start
food NN ^ arg1 false_start
food NN ^ ^ false_start
service NN food ^ false_start
service NN ^ arg1 false_start
food NN ^ ^ false_start
service NN service ^ false_start
people NNS ^ arg1 false_start
food NN ^ ^ false_start
service NN people ^ false_start

well UH ^ ^ filler
it PRP it arg1 OK
seems VBZ seems predicate OK
as IN as argM_adverb OK
if IN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if argM_adverb OK
they PRP they arg0 OK
're VBP 're arg2 OK
doing VBG doing arg2 OK
more JJR more arg1 OK
training NN training arg1 OK

they PRP they arg0 OK
must MD must argM_adverb OK
be VB be ^ OK
paying VBG paying predicate OK
more JJR more argM_extent OK

so UH ^ ^ filler
have VBP have ^ OK
you PRP you arg0 OK
ever RB ever argM_tmp OK
been VBN been ^ OK
frisked VBN frisked predicate OK
or NP-1 ^ ^ repeat
or CC or ^ OK
told CC told predicate OK
to VBD to arg1 OK
undo TO undo arg1 OK
your VB your arg1 OK
luggage PRP luggage arg1 OK
or NN ^ ^ false_start
anything CC ^ ^ false_start

i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg1 OK
've VBP 've arg1 OK
only RB only argM_adverb OK
been VBN been arg1 OK
frisked VBN frisked arg1 OK
once RB once argM_tmp OK

they PRP ^ ^ repeat
they PRP they arg0 OK
run VBP run predicate OK
a DT ^ ^ false_start
sort NN ^ ^ false_start
of IN ^ ^ false_start
a DT ^ ^ repeat
a DT a arg1 OK
reader NN reader arg1 OK
of IN of arg1 OK
some DT some arg1 OK
sort NN sort arg1 OK
over IN over argM_loc OK
you PRP you argM_loc OK

well UH ^ ^ false_start
i PRP ^ ^ false_start
've VBP ^ ^ false_start
wondered VBN ^ ^ false_start
looking VBG ^ ^ false_start
around RB ^ ^ false_start
at IN ^ ^ repeat
at IN ^ ^ false_start
the DT ^ ^ false_start
passengers NNS ^ ^ false_start
which WDT ^ ^ false_start
of IN ^ ^ false_start
us PRP ^ ^ false_start
they PRP ^ ^ false_start
're VBP ^ ^ false_start
trained VBN ^ ^ false_start
to TO ^ ^ false_start
i- XX ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
they PRP they arg0 OK
must MD must argM_adverb OK
watch VB watch predicate OK
videos NNS videos arg1 OK
of IN of arg1 OK
passengers NNS passengers arg1 OK

and CC ^ ^ false_start
somebody NN somebody arg0 OK
says VBZ says predicate OK
now UH ^ ^ false_start
see VB see arg1 OK
that DT that arg1 OK
person NN person arg1 OK

i PRP i arg0 OK
've VBP ^ ^ false_start
um UH ^ ^ filler
have VBP have ^ OK
n't RB n't argM_neg OK
had VBN had argM_mod OK
to TO to argM_mod OK
ta- VB ^ ^ false_start
open VB open predicate OK
it PRP it arg1 OK
up RP up arg_particl OK
and CC and ^ OK
turn VBP turn predicate OK
it PRP it arg1 OK
on RP on arg_particl OK
and CC and ^ OK
find VB find predicate OK
files NNS files arg1 OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

you UNK you ^ OK
know UNK know ^ OK
what UNK what ^ OK
i UNK i ^ OK
'm UNK 'm ^ OK
saying UNK saying ^ OK

but UNK ^ ^ false_start
with UNK with ^ false_start
the UNK the ^ OK
bag UNK bag ^ OK
whatever UNK ^ ^ repeat
whatever UNK whatever ^ OK
that UNK ^ ^ false_start
amount UNK amount ^ OK
that UNK ^ ^ false_start
you UNK ^ ^ repeat
you UNK you ^ OK
that UNK ^ ^ false_start
need UNK need ^ OK
's UNK ^ ^ false_start
what UNK ^ ^ false_start
's UNK is ^ OK
in UNK in ^ OK
the UNK the ^ OK
bag UNK bag ^ OK

you PRP you ^ OK
can MD can ^ OK
keep VB keep ^ OK
it PRP it ^ OK
in IN in ^ OK
your PRP your ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
bedroom NN bedroom ^ OK
or CC or ^ OK
closet NN closet ^ OK

but CC ^ ^ false_start
if IN if ^ OK
you PRP you ^ OK
put VBP put ^ OK
our PRP our ^ OK
hand NN hand ^ OK
in IN in ^ OK
there RB there ^ OK
and CC and ^ OK
you PRP you ^ OK
think VBP think ^ OK
of IN of ^ OK
like UH ^ ^ filler
twenty CD twenty ^ OK
thousand CD thousand ^ OK
dollars NNS dollars ^ OK
twenty CD twenty ^ OK
thousand CD thousand ^ OK
dollars NNS dollars ^ OK
will MD will ^ OK
come VB come ^ OK
out RB out ^ OK

so UH ^ ^ filler
then RB then ^ OK
you PRP you ^ OK
have VBP have ^ OK
two CD two ^ OK
extra JJ extra ^ OK
wishes NNS wishes ^ OK

but CC ^ ^ false_start
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN ^ ^ false_start
then RB then ^ OK
ya- PRP ^ ^ false_start
you PRP you ^ OK
could MD could ^ OK
save VB save ^ OK
those DT those ^ OK
in IN in ^ OK
case NN case ^ OK
of IN of ^ OK
an DT an ^ OK
emergency NN emergency ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
you PRP ^ ^ false_start
just RB ^ ^ false_start
like UH ^ ^ false_start
you PRP ^ ^ false_start
happen VBP ^ ^ false_start
like UH ^ ^ false_start
but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
feel VBP feel ^ OK
like IN like ^ OK
going VBG going ^ OK
to IN to ^ OK
aruba NNP aruba ^ OK

but CC ^ ^ false_start
with IN with ^ OK
the DT the ^ OK
bag NN bag ^ OK
of IN of ^ OK
money NN money ^ OK
it PRP it ^ OK
was VBD was ^ OK
just RB just ^ OK
good JJ good ^ OK
because IN because ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
can MD ^ ^ repeat
can MD can ^ OK
like UH ^ ^ filler
fold VB fold ^ OK
it PRP it ^ OK
up RP up ^ OK
fold VB ^ ^ false_start
put VB and ^ false_start
put VB put ^ OK
it PRP it ^ OK
in IN in ^ OK
your PRP your ^ OK
pocket NN pocket ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP ^ ^ false_start
the DT ^ ^ false_start
what WDT what ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
money NN money ^ OK
they PRP they ^ OK
use VBP use ^ OK

so UH ^ ^ filler
you PRP you ^ OK
m- XX ^ ^ false_start
ask VBP ask ^ OK
for IN for ^ OK
a DT a ^ OK
million CD million ^ OK
lira NNS lira ^ OK

you PRP you ^ OK
go VBP go ^ OK
to IN to ^ OK
germany NNP germany ^ OK
you PRP you ^ OK
got VBN get ^ false_start
deutschmarks NNS deutschmarks ^ OK

you PRP you ^ OK
go VBP go ^ OK
go VBP ^ ^ false_start
moscow NNP to ^ false_start
moscow NNP moscow ^ OK
you PRP you ^ OK
have VBP have ^ OK
rubles NNS rubles ^ OK

it PRP it ^ OK
could MD could ^ OK
or CC ^ ^ false_start
even RB even ^ false_start
be VB be ^ OK
like IN ^ ^ false_start
a DT ^ ^ false_start
stop NN ^ ^ false_start
a DT a ^ OK
shopping NN shopping ^ OK
bag NN bag ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
good JJ good ^ OK

so UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
really RB really ^ OK
proud JJ proud ^ OK
of IN of ^ OK
that DT that ^ OK
little JJ little ^ OK
ah UH ^ ^ filler
invention NN invention ^ OK

i PRP i ^ OK
just RB just ^ OK
said VBD said ^ OK
i PRP i ^ OK
won VBD won ^ OK
the DT the ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK

something NN something ^ OK
like IN like ^ OK
like UH ^ ^ filler
a DT a ^ OK
hundred CD hundred ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start

but CC ^ ^ false_start
then RB then ^ OK
after IN after ^ OK
it PRP it ^ OK
was VBD was ^ OK
over RB over ^ OK
i PRP ^ ^ false_start
fear VBP ^ ^ false_start
i PRP i ^ OK
realize VBP realized ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP what ^ OK
if IN if ^ OK
you PRP you ^ OK
had VBD had ^ OK
a DT a ^ OK
fucked VBN fucked ^ OK
up RP up ^ OK
genie NN genie ^ OK

here RB here ^ OK
's BES 's ^ OK
a DT a ^ OK
hundred CD hundred ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK

how WRB how ^ OK
it PRP it ^ OK
came VBD came ^ OK
from IN from ^ OK

where WRB where ^ OK
you PRP you ^ OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
put VB put ^ OK
it PRP it ^ OK

until IN until ^ OK
they PRP they ^ OK
start VBP start ^ OK
seeing VBG seeing ^ OK
you PRP you ^ OK
rolling VBG rolling ^ OK
up RB up ^ OK
in IN in ^ OK
like UH ^ ^ filler
bentleys NNPS bentleys ^ OK
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
where WRB where ^ OK
'd VBD 'd ^ OK
you PRP you ^ OK
get VB get ^ OK
this DT this ^ OK
bentley NNP bentley ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
uh UH ^ ^ filler
well UH ^ ^ filler
i PRP i ^ OK
just RB just ^ OK
happened VBD happened ^ OK
to TO to ^ OK
like UH ^ ^ filler
find VB find ^ OK
it PRP it ^ OK

uh UH ^ ^ filler
eh UH ^ ^ filler
an- CC ^ ^ repeat
an- CC ^ ^ repeat
and CC and ^ OK
you PRP you ^ OK

ou PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
know VBP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
calling VBG calling ^ OK
me PRP me ^ OK
in IN in ^ OK
boston NNP boston ^ OK
actually RB actually ^ OK

and CC ^ ^ false_start
my PRP my ^ OK
friend NN friend ^ OK
who WP who ^ OK
works VBZ works ^ OK
there RB there ^ OK
gave VBD gave ^ OK
me PRP me ^ OK
the DT the ^ OK
heads NNS heads ^ OK
up RP up ^ OK
in IN in ^ OK
a DT an ^ false_start
e-mail NN e-mail ^ OK

say UH ^ ^ filler
hey UH ^ ^ filler
do VBP do ^ OK
you PRP you ^ OK
want VB want ^ OK
to TO to ^ OK
participate VB participate ^ OK
in IN ^ ^ false_start
this DT ^ ^ false_start
prin- NN ^ ^ false_start
in IN in ^ OK
a DT a ^ OK
study NN study ^ OK

but CC ^ ^ false_start
ordinarily RB ordinarily ^ OK
i PRP i ^ OK
would MD would ^ OK
have VB have ^ OK
never RB never ^ OK
known VBN known ^ OK
about IN about ^ OK
it PRP it ^ OK
unless IN unless ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
had VB have ^ false_start
a DT a ^ OK
friend NN friend ^ OK
who WP who ^ OK
works VBZ works ^ OK
at IN at ^ OK
the DT the ^ OK
l. NNP l. ^ OK
d. NNP d. ^ OK
c. NNP c. ^ OK

i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
f- XX ^ ^ false_start
people NNS people ^ OK
who WP who ^ OK
work VBP work ^ OK
there RB there ^ OK
have VBP have ^ OK
some DT some ^ OK
friends NNS friends ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
because IN ^ ^ false_start
the DT ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
local JJ local ^ OK
thing NN thing ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
used VBD used ^ OK
to TO to ^ OK
work VB work ^ OK
there RB there ^ OK

that DT ^ ^ repeat
uh UH ^ ^ filler
that WDT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
where WRB where ^ OK
i PRP i ^ OK
went VBD went ^ OK
as IN as ^ OK
my PRP my ^ OK
undergraduate NN undergraduate ^ OK

the DT the arg1 OK
reality NN reality arg1 OK
of IN of arg1 OK
it PRP it arg1 OK
is VBZ is ^ OK
i- XX ^ predicate repeat
that IN that arg2 OK
is VBZ ^ ^ false_start
n't RB ^ ^ false_start
i PRP i arg0 OK
uh UH ^ ^ filler
it PRP ^ ^ false_start
did VBD did arg2 OK
n't RB n't argM_neg OK
open VB open arg2 OK
it PRP it arg1 OK
with IN with arg2 OK
a DT a arg2 OK
vast JJ vast arg2 OK
amount NN amount arg2 OK
of IN of arg2 OK
money NN money arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
often RB often argM_tmp OK
thought VBN thought predicate OK
it PRP it arg1 OK
would S-1 would argM_mod OK
be MD be argM_mod OK
fun VB fun argM_mod OK
t- JJ ^ ^ repeat
uh TO ^ ^ filler
to UH to argM_mod OK
uh TO ^ ^ filler
open UH open arg1 OK
a VB a arg1 OK
restaurant DT restaurant arg1 OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
tha- XX ^ ^ repeat
the DT ^ ^ repeat
the DT the arg1 OK
difficulty NN difficulty arg1 OK
often RB often argM_adverb OK
is VBZ is predicate OK
that IN that arg2 OK
if IN ^ ^ repeat
uh UH ^ ^ filler
if IN if arg2 OK
you PRP ^ ^ repeat
you PRP you arg1 OK
go VBP go arg2 OK
into IN into arg4 OK
it PRP it arg4 OK
uh UH ^ ^ filler
and CC and arg2 OK
you PRP you arg0 OK
're VBP 're arg2 OK
doing VBG doing arg2 OK
the DT the arg1 OK
cooking NN cooking arg1 OK
or CC or arg2 OK
you PRP you arg1 OK
're VBP 're arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
part NN part arg2 OK
of IN of arg2 OK
it PRP it arg2 OK
every DT every argM_tmp OK
day NN day argM_tmp OK
you PRP you arg1 OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
leave VB leave arg2 OK
and CC and arg2 OK
go VB go arg2 OK
on RP on arg_particl OK
to IN to arg4 OK
another DT another arg4 OK
business NN business arg4 OK

so UH ^ ^ false_start
i- PRP ^ ^ repeat
it PRP it arg0 OK
means VBZ means predicate OK
that IN that arg1 OK
you PRP you arg1 OK
've VBP 've argM_mod OK
got VBN got argM_mod OK
to TO to argM_mod OK
be VB be arg1 OK
there RB there arg2 OK
early RB early argM_tmp OK

you PRP ^ ^ false_start
've VBP ^ ^ false_start
got VBN ^ ^ false_start
to TO ^ ^ false_start
it PRP it arg0 OK
burns VBZ burns predicate OK
you PRP you arg1 OK
out RP out argM_mnr OK
fairly RB fairly argM_tmp OK
quickly RB quickly argM_tmp OK

including VBG including ^ OK
a DT ^ ^ repeat
a DT ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
what WP ^ ^ false_start
do VBP ^ ^ false_start
they PRP ^ ^ false_start
call VB ^ ^ false_start
it PRP ^ ^ false_start
a NP-PRD-1 a ^ OK
sous DT sous ^ OK
chef JJ chef ^ OK
uh NN ^ ^ filler
s- UH ^ ^ repeat
somebody SYM somebody ^ OK
to NN to ^ OK
help TO help ^ OK
you VB you ^ OK
with PRP with ^ OK
your IN your ^ OK
cooking PRP cooking ^ OK
or NN or ^ OK
me CC me ^ OK
with PRP with ^ OK
my IN my ^ OK
cooking PRP cooking ^ OK

that UNK ^ arg1 false_start
's UNK ^ ^ false_start
what UNK what arg1 OK
i UNK i arg0 OK
would UNK would argM_mod OK
like UNK like argM_mod OK
to UNK to argM_mod OK
do UNK do predicate OK
would UNK would argM_mod OK
be UNK be argM_mod OK
to UNK ^ ^ repeat
to UNK to argM_mod OK
design UNK design predicate OK
the UNK the arg1 OK
menu UNK menu arg1 OK
design UNK ^ arg1 false_start
work UNK and ^ false_start
to UNK ^ ^ repeat
to UNK to arg1 OK
work UNK work arg1 OK
with UNK with arg3 OK
the UNK the arg3 OK
chef UNK chef arg0 OK
in UNK ^ ^ repeat
in UNK in arg1 OK
preparing UNK preparing arg1 OK
uh UNK ^ ^ filler
the UNK the arg1 OK
dishes UNK dishes arg1 OK
and UNK and arg1 OK
knowing UNK owing arg1 OK
just UNK just argM_adverb OK
what UNK what arg1 OK
the UNK the arg1 OK
recipes UNK recipes arg1 OK
are UNK are arg1 OK
and UNK and arg1 OK
designing UNK designing arg1 OK
the UNK ^ ^ repeat
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
the UNK ^ ^ repeat
the UNK the arg1 OK
restaurant UNK restaurant arg1 OK
and UNK ^ ^ false_start
what UNK ^ ^ false_start
it UNK ^ ^ false_start
looks UNK ^ ^ false_start
like UNK ^ ^ false_start

i UNK ^ ^ false_start
think UNK ^ ^ false_start
i UNK i arg0 OK
'd UNK 'd argM_mod OK
have UNK have predicate OK
more UNK more arg1 OK
fun UNK fun arg1 OK
being UNK being arg1 OK
the UNK the arg0 OK
maitre UNK maitre arg0 OK
d' UNK d' arg0 OK
socializing UNK socializing arg2 OK
with UNK with arg2 OK
people UNK people arg2 OK
and UNK and argM_mnr OK
recommending UNK recommending argM_mnr OK
this UNK this arg1 OK
dish UNK dish arg1 OK
or UNK ^ ^ false_start
whatever UNK ^ ^ false_start

hm UH hm ^ OK
mm UH mm ^ OK
mm UH mm ^ OK
no UH no ^ OK

although RB ^ ^ false_start
eh UH ^ ^ filler
eh UH ^ ^ filler
m UH ^ ^ filler
just RB ^ ^ false_start
uh UH ^ ^ filler
uh UH ^ ^ filler
by IN ^ ^ false_start
r- XX ^ ^ false_start
i PRP i arg0 OK
suppose VBP suppose predicate OK
uh UH ^ ^ filler
w- NN ^ ^ repeat
what WP what arg1 OK
gets VBZ gets arg1 OK
me PRP me arg1 OK
thinking VBG thinking arg1 OK
about IN about arg1 OK
it PRP it arg1 OK
is VBZ is arg1 OK
that IN that arg2 OK
uh UH ^ ^ filler
i PRP i arg0 OK
do VBP do arg2 OK
all PDT all arg1 OK
the DT the arg1 OK
cooking NN cooking arg1 OK
in IN in arg2 OK
the DT the arg2 OK
family NN family arg2 OK

so UH ^ ^ false_start
uh UH ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i arg0 OK
love VBP love argM_mod OK
to TO to argM_mod OK
cook VB cook predicate OK

like IN like arg2 OK
you PRP you arg2 OK
i PRP ^ ^ repeat
i PRP i arg1 OK
see VBP see predicate OK
myself PRP myself arg1 OK
as IN as arg1 OK
being VBG being arg1 OK
the DT the arg2 OK
cook NN cook arg2 OK

but CC but argM_adverb OK
i PRP i arg1 OK
can MD can argM_mod OK
also RB also argM_discou OK
see VB see predicate OK
myself PRP myself arg1 OK
burning VBG burning arg1 OK
out RP out arg_particl OK
very RB very argM_adverb OK
quickly RB quickly argM_adverb OK
if IN if arg1 OK
that DT that arg1 OK
's BES 's arg1 OK
all DT all arg2 OK
i PRP i arg0 OK
was VBD was arg2 OK
doing VBG doing arg2 OK
day NN day argM_tmp OK
in RB in argM_tmp OK
and CC and argM_tmp OK
day NN day argM_tmp OK
out RB out argM_tmp OK
year NN year argM_tmp OK
round RB round argM_tmp OK

but CC but argM_adverb OK
you PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP you arg0 OK
'd MD 'd argM_mod OK
rather RB rather argM_discou OK
run SBAR-2 run predicate OK
a VB a arg1 OK
restaurant DT restaurant arg1 OK
than NN ^ ^ repeat
than IN than argM_discou OK
do IN do predicate OK
catering VBP catering arg1 OK

that DT that ^ OK
's BES 's ^ OK

eh UH eh ^ OK
right UH right ^ OK

or CC or ^ OK
the DT the ^ OK

i PRP i ^ OK
kno- VBP kno- ^ OK

i PRP i ^ OK
know VBP know ^ OK

well UH ^ ^ false_start
actually UH actually ^ OK
um UH ^ ^ filler
one CD one ^ OK
airport NN airport ^ OK
it PRP ^ ^ false_start
i PRP i ^ OK
frequently RB frequently ^ OK
fly VBP fly ^ OK
through IN through ^ OK
um NP-1 ^ ^ filler
kind UH ^ ^ false_start
of RB ^ ^ false_start
interesting RB ^ ^ false_start
it JJ ^ ^ repeat
's PRP is ^ OK
a BES a ^ OK
small DT small ^ OK
airport JJ airport ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
they PRP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when ^ OK
we PRP we ^ OK
went VBD went ^ OK
through IN through ^ OK
security NN security ^ OK
it ADVP-TMP- 1 ^ ^ repeat
a VBD ^ ^ repeat
lot DT ^ ^ repeat
of NN ^ ^ repeat
it IN it ^ OK
was PRP ^ ^ repeat
was PRP was ^ OK
actually VBD actually ^ OK
elderly RB elderly ^ OK
people JJ people ^ OK
um NNS ^ ^ filler
manning UH manning ^ OK
the VBG the ^ OK
security DT security ^ OK

that WDT ^ ^ false_start
you PRP ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
and CC ^ ^ false_start
then RB then ^ OK
she PRP she ^ OK
's BES 's ^ OK
like RP like ^ OK
oh UH oh ^ OK
oh UH oh ^ OK
wait VB wait ^ OK
a DT a ^ OK
minute NN minute ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
she PRP she ^ OK
just RB just ^ OK
seemed VBD seemed ^ OK
flustered JJ flustered ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
thinking VBG thinking ^ OK
hm UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
they PRP they ^ OK
had VBD had ^ OK
to TO to ^ OK
stop VB stop ^ OK
someone NN someone ^ OK
what WP what ^ OK
would MD would ^ OK
happen VB happen ^ OK

but CC but ^ OK
there EX there ^ OK
were VBD were ^ OK
police NN police ^ OK
sitting VBG sitting ^ OK
up IN up ^ OK
um UH ^ ^ filler
on IN on ^ OK
a DT a ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
pedestal NN pedestal ^ OK
area NN area ^ OK

mm UH mm ^ OK
mm UH mm ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
too RB too ^ OK

in IN in ^ OK
fact NN fact ^ OK
even RB even ^ OK
before IN ^ ^ repeat
before IN before ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
events NNS events ^ OK
happened VBN that ^ false_start
have VBP have ^ OK
happened VBN happened ^ OK
um UH ^ ^ filler
i PRP i ^ OK
used VBD used ^ OK
to TO to ^ OK
think VB think ^ OK
gosh UH gosh ^ OK
no DT no ^ OK
one NN one ^ OK
's BES 's ^ OK
ever RB ever ^ OK
paying VBG paying ^ OK
attention NN attention ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
the DT the ^ OK
job NN job ^ OK
was VBD was ^ OK
very RB very ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
w- NNS ^ ^ repeat
wages NNS wages ^ OK
have VBP have ^ OK
gone VBN gone ^ OK
up RP up ^ OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

an- CC an- ^ OK

well UH ^ ^ false_start
actually UH ^ ^ repeat
well UH ^ ^ false_start
actually RB actually ^ OK
it PRP it ^ OK
's BES 's ^ OK
interesting JJ interesting ^ OK

actually RB actually ^ OK
it PRP it ^ OK
was VBD was ^ OK
the DT the ^ OK
week NN week ^ OK
before IN ^ ^ repeat
before RB before ^ OK
um UH ^ ^ filler
nine CD nine ^ false_start
eleven CD eleven ^ false_start
when WRB ^ ^ repeat
um UH ^ ^ filler
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
traveled VBD ^ ^ repeat
came VBD came ^ OK
back RB back ^ OK
to IN to ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
from IN from ^ OK
china NNP china ^ OK
um ADVP-TMP- 2 ^ ^ filler
it UH it ^ OK
was PRP was ^ OK
interesting VBD interesting ^ OK
because JJ because ^ OK
in IN in ^ OK
china IN china ^ OK
the RB the ^ OK
airports DT airports ^ OK
were NNS were ^ OK
already NNP already ^ false_start
very VBD very ^ OK
strict RB strict ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS people ^ OK
could MD could ^ OK
n't RB n't ^ OK
come VB come ^ OK
in RB in ^ OK
to IN to ^ OK
the DT ^ ^ repeat
the DT the ^ OK
terminal NN terminal ^ OK
with IN with ^ OK
you PRP you ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
say VBP ^ ^ repeat
said VBD said ^ OK
g- UH ^ ^ repeat
goodbye UH goodbye ^ OK
before IN before ^ OK
you PRP you ^ OK
went VBD went ^ OK
through IN through ^ OK
security NN security ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
was VBD was ^ OK
like RP like ^ OK
bye UH bye ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
on IN on ^ OK
my PRP my ^ OK
way NN way ^ OK
out IN out ^ OK
to IN to ^ OK
china NNP china ^ OK
though RB though ^ OK
i PRP ^ ^ filler
well UH ^ ^ filler
my PRP my ^ OK
luggage NN luggage ^ OK
was VBD was ^ OK
completely RB completely ^ OK
searched VBN searched ^ OK
because IN because ^ OK
i PRP i ^ OK
had VBD had ^ OK
this DT ^ ^ repeat
this DT this ^ OK
transformer NN transformer ^ OK
thing NN thing ^ OK

but CC but ^ OK
it PRP it ^ OK
was VBD was ^ OK
like UH ^ ^ filler
this DT this ^ OK
a DT ^ ^ filler
heavy JJ heavy ^ OK
duty NN duty ^ OK
one CD one ^ OK
because IN because ^ OK
um UH ^ ^ filler
we PRP we ^ OK
use VBP use ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
audio JJ audio ^ OK
visual JJ visual ^ OK
equipment NN equipment ^ OK
in IN in ^ OK
our PRP our ^ OK
research NN research ^ OK

so UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
so UH ^ ^ false_start
they PRP they ^ OK
actually RB actually ^ OK
had VBD had ^ OK
to TO to ^ OK
like UH ^ ^ filler
use VB use ^ OK
this DT this ^ OK
bomb NN bomb ^ OK
thing NN thing ^ OK

but CC but ^ OK
i PRP i ^ OK
guess VBP guess ^ OK
i PRP i ^ OK
have VBP have ^ OK
n't RB n't ^ OK
had VBN had ^ OK
one CD one ^ OK
of IN of ^ OK
those DT those ^ OK
random JJ random ^ OK
checks NNS checks ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
they PRP they ^ OK
always RB always ^ OK
seem VBP seem ^ OK
to TO to ^ OK
kind RB kind ^ OK
of RB of ^ OK
frisk VB frisk ^ OK
you PRP you ^ OK
like UH ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
walk VBP walk ^ OK
through RB through ^ OK

um UH um ^ OK
well UH well ^ OK
this DT this ^ OK

r- UH r- ^ OK
right UH right ^ OK

so UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
um UH ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
pretty RB pretty ^ OK
interesting JJ interesting ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
've VBP 've ^ OK
seen VBN seen ^ OK
them PRP them ^ OK
ask VB ask ^ OK
people NNS people ^ OK
with IN with ^ OK
hair NN hair ^ OK
loss NN loss ^ OK
to TO to ^ OK
take VB take ^ OK
off RP off ^ OK
their PRP their ^ OK
hats NNS hats ^ OK
and CC and ^ OK
stuff NN stuff ^ OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
li- UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
find VBP find ^ OK
that DT that ^ OK
interesting JJ interesting ^ OK
because IN because ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
w- MD ^ ^ repeat
would MD would ^ OK
you PRP you ^ OK
ask VB ask ^ OK
someone NN someone ^ OK
to TO to ^ OK
take VB take ^ OK
off RP off ^ OK
their PRP their ^ OK
pants NNS pants ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
it PRP it ^ OK
just RB just ^ OK
seems VBZ seems ^ OK
to IN to ^ OK
me PRP me ^ OK
that IN that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
maybe RB maybe ^ OK
issues NNS on ^ false_start
some DT some ^ OK
of IN of ^ OK
the DT the ^ OK
issues NNS issues ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
've VBP ^ ^ repeat
need VBP need ^ OK
a DT a ^ OK
little RB little ^ OK
more JJR more ^ OK
sensitivity NN sensitivity ^ OK

i PRP i ^ OK
always RB always ^ OK
get VBP get ^ OK
nervous JJ nervous ^ OK
just RB just ^ OK
walking VBG walking ^ OK
by RB by ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
wonder VBP wonder ^ OK
if IN if ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that ^ OK
person NN person ^ OK
is VBZ is ^ OK
someone NN someone ^ OK
they PRP they ^ OK
would MD would ^ OK
be VB be ^ OK
suspicious JJ suspicious ^ OK
of IN of ^ OK
or NP-1 or ^ OK
whatnot CC whatnot ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
is VBZ is ^ OK
kind RB kind ^ OK
of RB of ^ OK
neat JJ neat ^ OK

have VBP ^ ^ repeat
you PRP ^ ^ repeat
had VBN ^ ^ repeat
to TO ^ ^ repeat
um UH ^ ^ filler
have VB ^ ^ false_start
you PRP ^ ^ false_start
had VBD ^ ^ false_start
to TO ^ ^ false_start
like UH ^ ^ filler
do VBP do ^ OK
you PRP you ^ OK
travel VB travel ^ OK
with IN with ^ OK
a DT a ^ OK
laptop NN laptop ^ OK
or CC or ^ OK
anything NN anything ^ OK

i PRP i ^ OK
've VBP 've ^ OK
ha- VB ha- ^ OK

it PRP it ^ OK
it PRP ^ ^ repeat
's BES 's ^ OK
's BES ^ ^ repeat
kind RB kind ^ OK
of RB of ^ OK
funny JJ funny ^ OK
because IN because ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
went VBD went ^ OK
through RB through ^ OK

and CC ^ ^ false_start
this DT ^ ^ false_start
was VBD ^ ^ false_start
actually UH ^ ^ false_start
i PRP ^ ^ false_start
think VBP ^ ^ false_start
bef- IN ^ ^ false_start
because UH because ^ OK
the PRP they ^ false_start
federalized VBD federalized ^ OK
it PRP it ^ OK
now RB now ^ OK
have VBP have ^ OK
n't RB n't ^ OK
they PRP they ^ OK

this DT ^ ^ repeat
this DT this ^ OK
was VBD ^ ^ repeat
was VBD was ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
a DT a ^ OK
while NN while ^ OK
ago RB ago ^ OK

but CC but ^ OK
they PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i ^ OK
had VBD had ^ OK
a DT a ^ OK
a DT ^ ^ repeat
a DT ^ ^ repeat
portable JJ portable ^ false_start
rewritable JJ rewritable ^ false_start
c. NNP c. ^ OK
d. NNP d. ^ OK
drive NN ^ ^ false_start
drive NN drive ^ OK
one NN ^ ^ false_start

that RB that arg0 OK
what WP what ^ OK
makes VBZ makes predicate OK
the DT the arg1 OK
world NN world arg1 OK
go VB go arg1 OK
round RB round argM_other OK

it PRP ^ ^ false_start
makes VBZ ^ ^ false_start
all DT ^ ^ false_start
it PRP it ^ OK
takes S-1 takes predicate OK
all VBZ all arg1 OK
different DT different arg1 OK
kind JJ kind arg1 OK
of NN of arg1 OK
people IN people arg1 OK
to NNS to ^ OK
make TO make predicate OK
this VB this arg1 OK
world DT world arg1 OK
go NN go arg1 OK
round VB round argM_other OK
and RB and ^ OK
function CC function predicate OK

why WRB why arg1 OK
are VBP are ^ OK
you PRP you arg0 OK
laughing VBG laughing predicate OK
david NNP david ^ OK

where WRB where ^ OK
you PRP you ^ OK
at IN at ^ OK

well UH ^ ^ filler
you PRP you arg0 OK
know VBP know predicate OK
how WRB how arg1 OK
they PRP they arg0 OK
fixing VBG _VERB_ ^ false_start
fixing VBG fixing arg1 OK
it PRP it arg1 OK
up RP up arg_particl OK

honey NN ^ ^ false_start
the DT ^ ^ repeat
the DT the arg1 OK
work NN work arg1 OK
is VBZ is ^ OK
about RB about ^ false_start
almost RB almost ^ OK
completed VBN completed predicate OK

well UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK
what WP what arg1 OK
they PRP they arg0 OK
all DT all ^ OK
doing VBG doing predicate OK

i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB not ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
new NNP new arg1 OK
york NNP york arg1 OK

i PRP i arg0 OK
'm VBP 'm ^ OK
talking VBG talking predicate OK
about IN about arg1 OK
manhattan NNP manhattan arg1 OK
harlem NNP harlem arg1 OK

they PRP they arg0 OK
build VBP build predicate OK
up RP up arg_particl OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
these DT these arg1 OK
buildings NNS buildings arg1 OK
that WDT that arg1 OK
were VBD were arg1 OK
abandoned VBN abandoned arg1 OK
almost RB almost ^ OK
thirty CD thirty ^ OK
forty CD forty ^ OK
years NNS years ^ OK

and CC ^ ^ false_start
they PRP they arg0 OK
getting VBG _VERB_ ^ false_start
getting VBG getting predicate OK
rid VBN rid arg1 OK
of IN of arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
the DT the arg1 OK
people NNS people arg0 OK
that WDT that ^ OK
used VBD used ^ OK
to TO to ^ OK
live VB live predicate OK
in IN in argM_loc OK
this DT this argM_loc OK
community NN community argM_loc OK
a DT a argM_tmp OK
long JJ long argM_tmp OK
time NN time argM_tmp OK

but CC ^ ^ repeat
but CC but ^ OK
they PRP ^ ^ repeat
they PRP they arg0 OK
are VBP ^ ^ repeat
are VBP are ^ OK
building VBG building predicate OK
it PRP it arg1 OK
up RP up arg_particl OK
to TO to ^ OK
make VB make predicate OK
it PRP it arg1 OK
a DT a ^ OK
beautiful JJ beautiful ^ OK
place NN place ^ OK

it PRP it ^ OK
's BES 's predicate OK
worthwhile JJ worthwhile arg1 OK
well UH ^ ^ filler
y- PRP ^ ^ repeat
well UH ^ ^ filler
you PRP ^ ^ false_start
know VBP ^ ^ false_start
um UH ^ ^ filler
to IN to arg1 false_start
an DT an arg1 false_start
extent NN extent arg1 false_start

if IN if ^ OK
people NNS people arg1 OK
was VBD was ^ OK
treated VBN treated predicate OK
fairly RB fairly arg2 OK
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
would MD would arg1 OK
be VB be arg1 OK
worthwhile JJ worthwhile arg1 OK

understand VB understand ^ OK
it PRP it ^ OK
's BES 's predicate OK
a DT a arg1 OK
studio NN studio arg1 OK
apartment NN apartment arg1 OK
costs VBZ that ^ false_start
costs VBZ costs predicate OK
eleven CD eleven arg2 OK
hundred CD hundred arg2 OK
dollars NNS dollars arg2 OK

that DT that ^ OK
do VBP does ^ false_start
n't RB n't ^ OK
even RB ^ ^ false_start
include VB include predicate OK
light NN light arg1 OK
and CC and arg1 OK
gas NN gas arg1 OK

not RB not ^ OK
at IN at ^ OK
the DT the arg4 OK
rate NN rate arg4 OK
that WDT that ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
working VBG _VERB_ ^ false_start
working VBG working predicate OK
and ADVP-1 and ^ OK
the CC the arg1 OK
jobs DT jobs arg1 OK
they NNS they arg0 OK
work PRP work predicate OK
on VBP on arg1 OK

most JJS ^ ^ repeat
of IN ^ ^ false_start
them PRP ^ ^ false_start
m- JJS ^ ^ repeat
most JJS ^ ^ repeat
money NN ^ ^ repeat
t- XX ^ ^ false_start
most JJS most arg1 OK
of IN of arg1 OK
um UH ^ ^ filler
their PRP their arg1 OK
money NN money arg1 OK
goes VBZ goes predicate OK
on IN on arg4 OK
the DT the arg4 OK
rent NN rent arg4 OK
and CC and ^ OK
con NNP con ^ OK
edison NNP edison ^ OK

and CC ^ ^ false_start
so RB ^ ^ filler
you PRP you arg0 OK
know VBP know predicate OK
what WDT what arg1 OK
a DT a arg1 OK
m- NN ^ ^ repeat
mess NN mess arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
in IN in arg1 OK

i PRP i arg1 OK
been VBN _VERB_ ^ false_start
been VBN been predicate OK
here RB here arg2 OK
all DT all arg2 OK
my PRP my arg2 OK
life NN life arg2 OK

those DT those arg1 OK
buildings NNS buildings arg1 OK
been VBN _VERB_ ^ false_start
been VBN been ^ OK
tore VBN torn predicate false_start
up RP up arg_particl OK
forty CD forty argM_tmp OK
years NNS years argM_tmp OK

but CC but ^ OK
then RB then ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
getting VBG ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
beginning VBG beginning predicate OK
to TO to arg1 OK
be VB be arg1 OK
for IN ^ ^ repeat
uh UH ^ ^ filler
for IN for arg1 OK
people NNS people arg1 OK
with IN with arg1 OK
money NN money arg1 OK

everything UNK everything ^ OK
they UNK they arg0 OK
building UNK _VERB_ ^ false_start
building UNK building predicate OK
up UNK up arg_particl OK
the UNK the ^ OK

right RB right ^ OK
there RB there ^ OK
on IN on ^ OK
hundred NNP hundred ^ OK
twenty-fifth NNP twenty-fifth ^ OK
street NN street ^ OK
they PRP they arg0 OK
got VBD got predicate OK
just RB just arg1 OK
about RB about arg1 OK
everything NN everything arg1 OK
they PRP they arg1 OK
had VBD had arg1 OK
downtown NN downtown arg1 OK
is NP-1 is predicate OK
up VBZ up arg2 OK
here IN here arg2 OK

we PRP we arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
everything NN everything arg1 OK
on IN on ^ OK
twenty-fifth NNP twenty-fifth ^ OK
street NN street ^ OK

i PRP i ^ OK
i PRP ^ ^ repeat
have VBP have ^ OK
have VBP ^ ^ repeat
a DT a ^ OK
a DT ^ ^ repeat
lot NN lot ^ OK
of IN of ^ OK
friends NNS friends ^ OK

i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP i ^ OK
like VBP like ^ OK
all DT all ^ OK
kinds NNS kinds ^ OK
of IN of ^ OK
people NNS people ^ OK

but CC but ^ OK
my PRP my ^ OK
kids NNS kids ^ OK
are VBP are ^ OK
my PRP my ^ OK
best JJS best ^ OK
friends NNS friends ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
teach VBP teach ^ OK
them PRP them ^ OK
not RB not ^ OK
to TO to ^ OK
be VB be ^ OK
judgmental JJ judgmental ^ OK
of IN of ^ OK
other JJ other ^ OK
people NNS people ^ OK

my PRP my ^ OK
youngest JJS youngest ^ OK
is VBZ is ^ OK
a DT a ^ OK
one-year JJ one-year ^ OK
old JJ old ^ OK

but CC but ^ OK
my PRP my ^ OK
twelve-year JJ twelve-year ^ OK
old NN old ^ OK
he PRP he ^ OK
's BES 's ^ OK
r- RB ^ ^ repeat
right RB right ^ OK
in IN in ^ OK
with IN with ^ OK
the DT the ^ OK
good JJ good ^ OK
kids NNS kids ^ OK

the DT ^ ^ false_start
th- DT ^ ^ false_start
high JJ ^ ^ false_start
um UH ^ ^ filler
high JJ ^ ^ false_start
eh UH ^ ^ filler
well UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
how WRB how ^ OK
to TO to ^ OK
say VB say ^ OK
it PRP it ^ OK

the DT the ^ OK
kids NNS kids ^ OK
who WP who ^ OK
are VBP are ^ OK
um UH ^ ^ filler
highly RB highly ^ OK
achieve VB ^ ^ repeat
achieved VBD achieved ^ OK
in IN in ^ OK
school NN school ^ OK

sometimes UNK sometimes ^ OK
the UNK the ^ OK
things UNK things ^ OK
they UNK they ^ OK
learn UNK learn ^ OK
and UNK and ^ OK
the UNK the ^ OK
lessons UNK lessons ^ OK
they UNK they ^ OK
have UNK have ^ OK
to UNK to ^ OK
go UNK go ^ OK
through UNK through ^ OK
make UNK make ^ OK
them UNK them ^ OK
better UNK better ^ OK
people UNK people ^ OK

my PRP ^ ^ repeat
my PRP my ^ OK
kids NNS ^ ^ repeat
kids NNS kids ^ OK
have VBP have ^ OK
n't RB n't ^ OK
been VBN been ^ OK
in IN in ^ OK
too RB too ^ OK
much JJ much ^ OK
trouble NN trouble ^ OK
except IN except ^ OK
for IN for ^ OK
with IN with ^ OK
me PRP me ^ OK

my PRP my ^ OK
oldest JJS oldest ^ OK
he PRP ^ ^ false_start
has VBZ has ^ OK
some DT some ^ OK
really RB really ^ OK
good JJ good ^ OK
friends NNS friends ^ OK

his PRP his ^ OK
one CD one ^ OK
friend NN friend ^ OK
's POS 's ^ OK
dad NN dad ^ OK
is VBZ is ^ OK
a DT a ^ OK
lawyer NN lawyer ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
just RB just ^ OK
right JJ right ^ OK
up IN up ^ OK
there RB there ^ OK
with IN with ^ OK
the DT the ^ OK
good JJ good ^ OK
kids NNS kids ^ OK

she PRP she ^ OK
would MD would ^ OK
just RB just ^ OK
take VB ^ ^ repeat
take VB take ^ OK
and CC and ^ OK
take VB take ^ OK
and CC and ^ OK
not RB not ^ OK
even RB even ^ OK
appreciate VB appreciate ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
she PRP ^ ^ repeat
she PRP she ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
up IN up ^ OK
here RB here ^ OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
've VBP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
through IN through ^ OK
everything NN everything ^ OK
to TO to ^ OK
give VB give ^ OK
her PRP her ^ OK
what WP ^ ^ repeat
what WP what ^ OK
i PRP i ^ OK
think VBP think ^ OK
she PRP ^ ^ repeat
she PRP she ^ OK
can MD ^ ^ repeat
can MD can ^ OK
use VB use ^ OK
because NP-2 because ^ OK
she IN she ^ OK
wo PRP wo ^ OK
n't MD n't ^ OK
ask RB ask ^ OK

and CC ^ ^ false_start
she PRP she ^ OK
appreciates VBZ appreciates ^ OK
even RB even ^ OK
if IN if ^ OK
you PRP you ^ OK
gave VBD gave ^ OK
her PRP her ^ OK
some DT some ^ OK
used JJ used ^ OK
dishes NNS dishes ^ OK
or CC or ^ OK
anything NN anything ^ OK

i PRP i ^ OK
think VBP think ^ OK
they PRP they ^ OK
also RB also ^ OK
said VBD said ^ OK
that IN that ^ OK
if IN if ^ OK
like UH ^ ^ filler
someone NN someone ^ OK
uh UH ^ ^ filler
like UH like ^ OK
you PRP you ^ OK
could MD could ^ OK
n't RB n't ^ OK
tell VB tell ^ OK

like UH ^ arg1 filler
i PRP i arg0 OK
think VBP think predicate OK
like UH that ^ false_start
like UH ^ ^ filler
if IN if arg1 OK
they PRP they arg0 OK
give VBP give arg1 OK
you PRP you arg2 OK
the DT the arg1 OK
money NN money arg1 OK
then RB then arg1 OK
you PRP you arg0 OK
could MD could arg1 OK
n't RB n't arg1 OK
like UH ^ ^ filler
talk VB talk arg1 OK
to IN to arg1 OK
anybody NN anybody arg1 OK
else RB else arg1 OK
er RB ^ ^ filler
like UH like ^ false_start
your IN your ^ false_start
best PRP best ^ false_start
friends JJS friends ^ false_start
ever PP-2 ever argM_tmp OK
again RB again argM_tmp OK

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
would MD would arg1 OK
probably RB probably arg1 OK
not RB not arg1 OK
take VB take arg1 OK
the DT the arg1 OK
the DT ^ ^ repeat
money NN money arg1 OK
money NN ^ ^ repeat
if IN if arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
between IN between arg2 OK
my PRP my arg2 OK
friends NNS friends arg2 OK
or CC or ^ OK
just RB just ^ OK
because IN because ^ OK
it PRP it arg1 OK
is VBZ is predicate OK
the DT the arg2 OK
root NN root arg2 OK
of IN of arg2 OK
all DT all arg2 OK
evil NN evil arg2 OK
like IN like ^ false_start
you PRP you arg0 false_start
said VBD said predicate false_start

and CC ^ ^ false_start
some DT some arg0 OK
you PRP of ^ false_start
you PRP you arg0 OK
know VBP know predicate OK
it PRP it arg0 false_start
will MD will arg1 false_start
haunt VB haunt arg1 false_start
you PRP you arg1 false_start
down IN down argM_tmp OK
the DT the argM_tmp OK
road NN road argM_tmp OK

when WRB when ^ OK
you PRP you ^ OK
see VBP see ^ OK
other JJ other ^ OK
people NNS people ^ OK
with IN with ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
tons NNS tons ^ OK
of IN of ^ OK
money NN money ^ OK

and CC ^ ^ false_start
they PRP they arg1 OK
're VBP 're predicate OK
usually RB usually argM_tmp OK
the DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg2 OK
miserable JJ miserable arg2 OK
people NNS people arg2 OK
in IN in argM_loc OK
life NN life argM_loc OK

i PRP i ^ OK

i PRP i arg0 false_start
think VBP think predicate false_start
it PRP it arg1 false_start
should MD should arg1 false_start
stop VB stop arg1 false_start
but CC ^ ^ false_start
then RB ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
once IN ^ ^ repeat
once IN once argM_tmp OK
it PRP ^ ^ repeat
it PRP it arg0 OK
's BES ^ ^ repeat
's HVS has argM_tmp false_start
taken VBN cost argM_tmp false_start
a DT ^ ^ repeat
a DT a arg1 OK
little JJ little arg1 OK
bit NN bit arg1 OK
too RB too arg1 OK
much JJ much arg1 OK
of IN of arg1 OK
our PRP our arg1 OK
tax NN tax arg1 OK
money NN ^ ^ repeat
money NN money arg1 OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
they PRP ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
tell VBP tell predicate OK
you PRP you arg2 OK
one CD one arg1 OK
thing NN thing arg1 OK
one CD one argM_tmp OK
day NN day argM_tmp OK
then RB then ^ OK
the DT the argM_tmp OK
next JJ next argM_tmp OK
day NN day argM_tmp OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
all DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
've VBP 've ^ OK
change VBN changed predicate OK
their PRP their arg1 OK
mind NN minds arg1 OK

i PRP ^ ^ filler
yup UH yup ^ OK

i PRP i ^ OK
definitely RB definitely ^ OK
think VBP think ^ OK
ah UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
whole JJ ^ ^ repeat
whole JJ whole ^ OK
money NN money ^ OK
situation NN situation ^ OK
is VBZ is ^ OK

i PRP i arg0 OK
would MD would ^ OK
definitely RB definitely ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
choose VB choose predicate OK
friendships NNS friendships arg1 OK
over IN over ^ OK
money NN money ^ OK
because IN ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
live VBP live predicate OK
with IN with arg1 OK
my PRP my arg1 OK
girlfriend NN girlfriend arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
every DT every argM_tmp false_start
day NN day argM_tmp false_start

and CC ^ ^ false_start
uh UH ^ ^ filler
it PRP ^ ^ repeat
's BES ^ ^ repeat
there EX there arg1 OK
's BES are predicate false_start
so RB so argM_tmp OK
many JJ many argM_tmp OK
days NNS days argM_tmp OK
where WRB where arg2 OK
she PRP she arg0 OK
's BES 's arg2 OK
complaining VBG complaining arg2 OK
about IN about arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
not RB not arg2 OK
having VBG having arg2 OK
money NN money arg1 OK
or CC ^ ^ false_start
this DT ^ ^ false_start
or CC ^ ^ false_start
that DT ^ ^ false_start

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg0 OK
get VBP get predicate OK
by RP by ^ OK
every DT every arg1 OK
day NN day arg1 OK

and CC ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
all DT all arg2 OK
that WDT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
important JJ important arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
was VBD it ^ false_start
was VBD was ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX ^ ^ repeat
there EX there arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
no DT no arg2 OK
amount NN amount arg2 OK
of IN of arg2 OK
money NN money arg2 OK
that WDT that arg0 OK
would MD would arg2 OK
make VB make arg2 OK
me PRP me arg0 OK
want VB want arg2 OK
to TO to arg1 OK
loose VB lose arg1 false_start
all DT all arg1 OK
my PRP my arg1 OK
friends NNS friends arg1 OK
ah UH ^ ^ filler
just RB just arg1 OK
for IN ^ ^ repeat
for IN for arg1 OK
the DT the arg1 OK
sake NN sake arg1 OK
of IN of arg1 OK
having VBG having arg1 OK
it PRP it arg1 OK

what WP ^ ^ repeat
what WP what ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
mean VB mean predicate OK
by IN by arg1 OK
that DT that arg1 OK

that DT the arg1 false_start
person NN person arg1 OK
that WDT that ^ OK
takes VBZ takes predicate OK
the DT the arg1 OK
million CD million arg1 OK
over IN over arg1 OK
the DT the arg1 OK
friendship NN friendship arg1 OK
is VBZ is predicate OK
the DT the arg2 OK
one NN one arg2 OK
whose WP who ^ false_start
whose WP 's arg1 false_start
going VBG going arg2 OK
to TO to arg2 OK
suffer VB suffer arg2 OK
in IN in argM_tmp OK
the DT the argM_tmp OK
long JJ long argM_tmp OK
run NN run argM_tmp OK

and CC ^ ^ false_start
you PRP you arg0 OK
sound VBP sound predicate OK
like IN like arg1 OK
you PRP you arg1 OK
're VBP 're arg1 OK
in IN ^ ^ repeat
in IN in arg2 OK
ah UH ^ ^ filler
good JJ good arg2 OK
hands NNS hands arg2 OK

and CC and ^ OK
uh UH uh ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
watch VBP watch ^ OK
the DT the ^ OK
um UH ^ ^ filler
survivor NNP survivor ^ OK
show NN show ^ OK
particularly RB particularly ^ OK

and CC ^ ^ false_start
di- VBD ^ ^ repeat
did VBD did ^ OK
you PRP you ^ OK
watch VB watch ^ OK
the DT the ^ OK
survivor NNP survivor ^ OK
shows NNS shows ^ OK

i PRP i ^ OK
watched VBD ^ ^ repeat
eh UH ^ ^ filler
wa- VBD ^ ^ repeat
wa- VBD ^ ^ repeat
watched VBN watched ^ OK
the DT ^ ^ repeat
the DT the ^ OK
ba- NNP ^ ^ repeat
bachelor NN bachelor ^ OK
shows NNS shows ^ OK
because IN because ^ OK
my PRP ^ ^ repeat
my PRP ^ ^ repeat
i PRP i ^ OK
have VBP have ^ OK
two CD two ^ OK
teenaged JJ teenaged ^ OK
daughters NNS daughters ^ OK

well UH ^ ^ false_start
you PRP you ^ OK
know VBP know ^ OK
where WRB where ^ OK
sacramento NNP sacramento ^ OK
is VBZ is ^ OK
do ADVP-LOC- PRD-1 do ^ OK
n't VBP n't ^ OK
you RB you ^ OK

just RB just ^ OK
about RB about ^ OK
forty CD forty ^ OK
minutes NNS minutes ^ OK
from IN ^ ^ repeat
from IN from ^ OK
s- NNP ^ ^ repeat
uh UH ^ ^ filler
sacramento NNP sacramento ^ OK
to IN to ^ OK
the DT the ^ OK
uh UH ^ ^ filler
south NN south ^ OK

y- UH y- ^ OK
yeah UH yeah ^ OK

yeah UH ^ ^ filler
eh UH ^ ^ filler
uh UH ^ ^ filler
survivor NNP survivor ^ OK
is VBZ is ^ OK
my PRP my ^ OK
favorite JJ favorite ^ OK
one CD one ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
watched VBN watched ^ OK
like UH ^ ^ filler
the DT ^ ^ false_start
um UH ^ ^ filler
american NNP american ^ OK
idol NNP idol ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
watch VBP ^ ^ repeat
watched VBD watched ^ OK
that DT that ^ OK
with IN with ^ OK
my PRP my ^ OK
teenage JJ teenage ^ OK
daughters NNS daughters ^ OK

oh UH ^ ^ filler
now RB now ^ OK
that IN that ^ OK
they PRP they ^ OK
've VBP 've ^ OK
got VBN got ^ OK
that DT that ^ OK
one CD one ^ OK
where WRB where ^ OK
the DT the ^ OK
girl NN girl ^ OK
's BES 's ^ OK
picking VBG picking ^ OK
the DT the ^ OK
guys NNS guys ^ OK

the DT the ^ OK
eh UH eh ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
kind RB kind ^ OK
of RB of ^ OK
like VBP like ^ OK
them PRP them ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
change NN change ^ OK
of IN of ^ OK
pace NN pace ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
from IN from ^ OK
the DT the ^ OK
typical JJ typical ^ OK
sit-coms NNS sit-coms ^ OK
and CC and ^ OK
news NN news ^ OK
shows NNS shows ^ OK
and CC and ^ OK
magazine NN magazine ^ OK
shows NNS shows ^ OK
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
thing NN ^ ^ false_start

just RB ^ ^ repeat
just RB just ^ OK
something NN something ^ OK
for IN for ^ OK
entertainment NN entertainment ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
another DT another ^ OK
one CD one ^ OK
out RB out ^ OK
eh UH ^ ^ filler
now RB now ^ OK

oh UH ^ ^ filler
that DT that ^ OK
that WDT ^ ^ repeat
one NN one ^ OK
w- WRB ^ ^ repeat
where WRB where ^ OK
he PRP he ^ OK
's BES 's ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
be VB be ^ OK
worth JJ worth ^ OK
fifty CD fifty ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK

he PRP ^ ^ repeat
uh UH ^ ^ filler
eh UH ^ ^ filler
they PRP they ^ OK
showed VBD showed ^ OK
on IN on ^ OK
the DT the ^ OK
preview NN preview ^ OK
that IN that ^ OK
he PRP ^ ^ repeat
he PRP he ^ OK
slipped VBD slipped ^ OK
and CC and ^ OK
let- VBZ ^ ^ repeat
lets VBZ lets ^ OK
it PRP it ^ OK
out RB out ^ OK
the IN ^ ^ false_start
he PRP ^ ^ false_start
used VBD ^ ^ false_start
to TO ^ ^ false_start
be VB ^ ^ false_start
a DT ^ ^ false_start
or UH ^ ^ filler
that IN that ^ OK
he PRP he ^ OK
was VBD was ^ OK
um UH ^ ^ filler
what WP ^ ^ false_start
is VBZ ^ ^ false_start
it PRP ^ ^ false_start
a NP-PRD-2 a ^ OK
crane DT crane ^ OK
operator NN operator ^ OK
or NN ^ ^ repeat
or CC or ^ OK
a CC a ^ OK
bulldozer DT bulldozer ^ OK
operator NN operator ^ OK
or NN ^ ^ false_start
something CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's HVS 's ^ OK
a- RB ^ ^ repeat
almost RB almost ^ OK
done VBN done ^ OK
because IN because ^ OK
i PRP i ^ OK
think VBP think ^ OK
he PRP he ^ OK
blew VBD blew ^ OK
it PRP it ^ OK
and CC and ^ OK
everybody NN everybody ^ OK
knows VBZ knows ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
kind RB kind ^ OK
of RB of ^ OK
looking VBG looking ^ OK
forward RB forward ^ OK
to IN to ^ OK
seeing VBG seeing ^ OK
the DT the ^ OK
amazon NNP amazon ^ OK
one NN one ^ OK
though RB though ^ OK

just RB ^ ^ false_start
to TO ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
they PRP they ^ OK
got VBD got ^ OK
the DT the ^ OK
guys NNS guys ^ OK
against IN against ^ OK
the DT the ^ OK
girls NNS girls ^ OK
this DT this ^ OK
time NN time ^ OK
which WDT which ^ OK
is VBZ is ^ OK
something NN something ^ OK
different JJ different ^ OK

y- UH y- ^ OK
yeah UH yeah ^ OK

eh UH ^ ^ filler
i PRP ^ ^ false_start
'd MD ^ ^ false_start
i PRP ^ ^ false_start
'd MD ^ ^ false_start
really RB ^ ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
always RB always ^ OK
kind RB kind ^ OK
of RB of ^ OK
wanted VBN wanted ^ OK
to TO to ^ OK
go VB go ^ OK
there RB there ^ OK
myself PRP myself ^ OK

so RB so ^ OK
i- IN ^ ^ repeat
i- IN ^ ^ repeat
in IN in ^ OK
a DT a ^ OK
way NN way ^ OK
it PRP it ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
like IN like ^ OK
getting VBG getting ^ OK
to TO to ^ OK
see VB see ^ OK
what WP what ^ OK
it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK
a NP-1 a ^ OK
little DT little ^ OK
bit JJ bit ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
k- XX ^ ^ false_start
pretty RB pretty ^ OK
much RB much ^ OK
what WP what ^ OK
i PRP i ^ OK
like VBP like ^ OK
about IN about ^ OK
it PRP it ^ OK

i ADVP-2 i ^ false_start
thought PRP thought ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
one CD one ^ OK
that VBD ^ ^ false_start
where WRB where ^ OK
they PRP they ^ OK
were VBD were ^ OK
l- XX ^ ^ repeat
on IN ^ ^ repeat
on IN on ^ OK
the DT the ^ OK
island NN island ^ OK
was DT was ^ OK
kind VBD kind ^ OK
of RB of ^ OK
neat RB neat ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
wa- VBD ^ ^ repeat
was VBD was ^ OK
mad JJ mad ^ OK
that IN that ^ OK
richard NNP richard ^ OK
won VBD won ^ OK

but CC but ^ OK
what WP what ^ OK
the DT the ^ OK
heck NN heck ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
when WRB when ^ OK
it PRP it ^ OK
's BES 's ^ OK
on RB on ^ OK
we ADVP-TMP- 1 we ^ OK
all PRP all ^ OK
have DT have ^ OK
to VBP to ^ OK
watch TO watch ^ OK
it VB it ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
thinking VBG thinking ^ OK
it PRP that ^ false_start
uh UH ^ ^ filler
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it ^ OK
's BES 's ^ OK
different JJ different ^ OK

eh UH ^ ^ filler
maybe RB maybe ^ OK
they PRP they ^ OK
want VBP want ^ OK
to TO to ^ OK
live VB live ^ OK
in IN in ^ OK
japan NNP japan ^ OK

which WDT ^ ^ repeat
which WDT which ^ OK
i PRP i ^ OK
've VBP 've ^ OK
never RB never ^ OK
seen VBN seen ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP ^ ^ repeat
've VBP 've ^ OK
d- XX ^ ^ repeat
seen VBN seen ^ OK
crazy JJ crazy ^ OK
shows NNS shows ^ OK
that WDT that ^ OK
are VBP are ^ OK
supposedly RB supposedly ^ OK
from IN from ^ OK
japan NNP japan ^ OK
where WRB where ^ OK
they PRP they ^ OK
show VBP show ^ OK
excerpts NNS excerpts ^ OK

i PRP i ^ OK
saw VBD saw ^ OK
a DT a ^ OK
few JJ few ^ OK
episodes NNS episodes ^ OK
where WRB where ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
tended VBD ^ ^ repeat
tended VBD tended ^ OK
to TO to ^ OK
do VB ^ ^ repeat
uh UH ^ ^ filler
create VB create ^ OK
conflicting JJ ^ ^ repeat
conflict NN conflict ^ OK
or UH ^ ^ repeat
and CC and ^ OK
put VB put ^ OK
people NNS people ^ OK
into IN into ^ OK
the DT the ^ OK
situations NNS situations ^ OK

they PRP they ^ OK
started VBD started ^ OK
to TO to ^ OK
add VB ^ ^ repeat
uh UH ^ ^ filler
add VB add ^ OK
more RBR more ^ OK
uh UH ^ ^ filler
sexual JJ sexual ^ OK
tension NN tension ^ OK
as IN as ^ OK
the DT the ^ OK
time NN time ^ OK
went VBD went ^ OK
on RP on ^ OK

but CC but ^ OK
uh UH uh ^ OK

or CC ^ ^ repeat
they PRP ^ ^ repeat
or CC ^ ^ false_start
they PRP they ^ OK
pull VBP pull ^ OK
over RB over ^ OK
on IN on ^ OK
the DT the ^ OK
side NN side ^ OK
of IN of ^ OK
the DT the ^ OK
road NN road ^ OK
to TO to ^ OK
watch VB watch ^ OK
an DT an ^ OK
accident NN accident ^ OK

i PRP i ^ OK

eh UH eh ^ OK
uh UH uh ^ OK
yeah UH yeah ^ OK

but CC but ^ OK
um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
maybe RB maybe ^ OK
it PRP it ^ OK
's BES 's ^ OK
the DT the ^ OK
quality NN quality ^ OK
that WDT that ^ OK
has VBZ has ^ OK
n't RB n't ^ OK
really RB really ^ OK
attracted VBN attracted ^ OK
me PRP me ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
wondering VBG wondering ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
in IN ^ ^ repeat
in IN in ^ OK
the DT ^ ^ repeat
my PRP my ^ OK
fifties NNS fifties ^ OK

uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
young JJ young ^ OK
eh ADVP-TMP- 1 ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
the VBP the ^ OK
shows DT shows ^ OK
that NNS that ^ OK
were WDT were ^ OK
really VBD really ^ OK
popular RB popular ^ OK
that JJ that ^ OK
people WDT people ^ OK
watched NNS watched ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
c- MD ^ ^ repeat
c- MD ^ ^ repeat
ca- MD ^ ^ repeat
can MD can ^ OK
honestly RB honestly ^ OK
remember VB remember ^ OK
that IN that ^ OK
the DT ^ ^ false_start
wheel NNP wheel ^ OK
of IN of ^ OK
fortune NNP fortune ^ OK
was VBD was ^ OK
extremely RB extremely ^ OK
popular JJ popular ^ OK
for IN for ^ OK
some DT some ^ OK
reason NN reason ^ OK

but CC but ^ OK
then RB then ^ OK
people NNS people ^ OK
were VBD were ^ OK
in IN in ^ OK
bars NNS bars ^ OK
and CC and ^ OK
drinking VBG drinking ^ OK
and CC and ^ OK
smoking VBG smoking ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
remember VBP remember ^ OK
that IN that ^ OK
that DT that ^ OK
was VBD was ^ OK
when WRB when ^ OK
it PRP it ^ OK
was VBD was ^ OK

jeopardy NNP ^ ^ repeat
i PRP ^ ^ repeat
jeopardy NNP jeopardy ^ OK
challenges VBZ challenges ^ OK
you PRP you ^ OK

but CC but ^ OK
uh UH uh ^ OK

i PRP i ^ false_start
wonder VBP wonder ^ false_start
and CC ^ ^ false_start
why WRB why ^ OK
they PRP they ^ false_start
are VBP are ^ OK
n't RB n't ^ OK
called VBN called ^ OK
reality NN reality ^ OK
shows NNS shows ^ OK

but CC but ^ OK
so RB so ^ OK
are VBP are ^ OK
th- XX ^ ^ repeat
the ADVP-PRD- 1 the ^ OK
other DT other ^ OK
ones JJ ones ^ OK

and CC ^ ^ false_start
what WP what ^ OK
's BES 's ^ OK
more RBR more ^ OK
real JJ real ^ OK
than IN than ^ OK
that DT that ^ OK

but CC but ^ OK
what WDT what ^ OK
game NN game ^ OK
shows NNS shows ^ OK
or CC or ^ OK
the DT ^ ^ repeat
the DT the ^ OK
reality NN reality ^ OK
sh- NNS ^ ^ repeat
shows NNS shows ^ OK

well UH ^ ^ false_start
but CC ^ ^ false_start
they PRP ^ ^ false_start
're VBP ^ ^ false_start
scripted VBN ^ ^ false_start
by IN ^ ^ false_start
ar- XX ^ ^ false_start
well UH ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK

i UNK i ^ OK
was UNK was ^ OK
under UNK under ^ OK
the UNK the ^ OK
impression UNK impression ^ OK
that UNK that ^ OK
they UNK they ^ OK
may UNK may ^ OK
be UNK be ^ OK
scripted UNK scripted ^ OK
and UNK and ^ OK
controlled UNK controlled ^ OK
but UNK ^ ^ repeat
but UNK but ^ OK
controlled UNK controlled ^ OK
by UNK by ^ OK
outside UNK outside ^ OK
parties UNK parties ^ OK
not UNK not ^ OK
the UNK the ^ OK
parties UNK parties ^ OK
themselves UNK ^ ^ false_start
involved UNK involved ^ OK

they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they ^ OK
put VBP put ^ OK
people NNS people ^ OK
together RB together ^ OK
in IN ^ ^ repeat
in IN in ^ OK
anticipated JJ anticipated ^ OK
conflict NN conflict ^ OK
or CC or ^ OK
an DT an ^ OK
anticipated JJ anticipated ^ OK
situation NN situation ^ OK

a- CC ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ false_start
then RB then ^ OK
they PRP they ^ OK
edit VB edit ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
then RB then ^ OK
of IN of ^ OK
course NN course ^ OK
at IN at ^ OK
the DT the ^ OK
end NN end ^ OK
you PRP you ^ OK
get VBP get ^ OK
a DT a ^ OK
prize NN prize ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
they PRP they ^ OK
eh UH ^ ^ filler
do VBP do ^ OK
n't RB n't ^ OK
seem VB seem ^ OK
to TO to ^ OK
be VB be ^ OK
talking VBG talking ^ OK

for IN for ^ OK

th- XX ^ ^ false_start
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
hear VB hear ^ OK
them PRP them ^ OK
mention VB mention ^ OK
that DT that ^ OK
on IN on ^ OK
the DT the ^ OK
tape NN tape ^ OK
they PRP they ^ OK
sent VBD sent ^ OK
me PRP me ^ OK
with IN ^ ^ false_start

but CC but ^ OK
but CC but ^ OK
eh UH eh ^ OK
but CC but ^ OK
uh UH uh ^ OK

and CC ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
apparently RB apparently ^ OK
uh UH ^ ^ filler
v- XX ^ ^ false_start
poor JJ poor ^ OK

i PRP i arg0 OK
guess VBP guess predicate OK
if IN if argM_adverb OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
outside RB outside arg2 OK
i PRP ^ ^ false_start
rollerblading VBG rollerblading arg1 OK
is VBZ is arg1 OK
probably RB probably arg2 OK
the DT the arg2 OK
most RBS most arg2 OK
typical JJ typical arg2 OK
one NN one arg2 OK

so UH ^ ^ filler
where WRB ^ ^ repeat
where WRB where arg2 OK
are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 OK

i PRP i arg1 OK
went VBD went predicate OK
from IN from arg3 OK
coast NN coast arg3 OK
to IN to arg4 OK
the DT the arg4 OK
other JJ other arg4 OK

i PRP i arg0 false_start
guess VBP guess predicate false_start
i PRP i arg1 OK
've VBP 've arg1 OK
only RB only argM_adverb OK
been VBN been arg1 OK
in IN in arg2 OK
new NNP new arg2 OK
york NNP york arg2 OK
for IN for arg2 OK
about RB about arg2 OK
um UH ^ ^ filler
a DT a arg2 OK
couple NN couple arg2 OK
of IN of arg2 OK
months NNS months arg2 OK

eh UH ^ ^ filler
i PRP i arg1 OK
'm VBP 'm predicate OK
not RB not argM_neg OK
very RB very arg2 OK
good JJ good arg2 OK
at IN at arg2 OK
it PRP it arg2 OK

but CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
had VBD had predicate OK
a DT a arg1 OK
good JJ good argM_mnr OK
time NN time argM_mnr OK
falling VBG ^ ^ repeat
eh UH ^ ^ filler
falling VBG falling arg1 OK
down RB down argM_dir OK
and CC and arg1 OK
drinking VBG drinking arg1 OK
hot JJ hot arg1 OK
chocolate NN chocolate arg1 OK

and CC ^ ^ false_start
do VBP do ^ OK
you PRP you arg0 OK
raise VB raise predicate OK
them PRP them arg1 OK
for IN ^ ^ repeat
for IN for argM_purpos OK
competitions NNS competitions argM_purpos OK

and CC ^ ^ false_start
how WRB how argM_mnr OK
did VBD did ^ OK
you PRP you arg0 OK
get VB get predicate OK
started VBN started arg1 OK
in IN ^ ^ repeat
in IN in arg1 OK
this DT this arg1 OK
business NN business arg1 OK
of IN of arg1 OK
breeding VBG breeding arg1 OK
dogs NNS dogs arg1 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
it PRP it arg1 OK
's HVS 's ^ OK
been VBN been predicate OK
really RB ^ ^ filler
like UH ^ ^ filler
into IN ^ ^ false_start
the DT ^ ^ false_start
some DT some arg2 OK
days NNS days arg2 OK
into IN into arg2 OK
the DT the arg2 OK
twenties NNS twenties arg2 OK

and CC ^ ^ false_start
at IN at ^ OK
night NN night ^ OK
getting VBG getting ^ OK
down IN down ^ OK
into IN into ^ OK
the DT the ^ OK
teens NNS teens ^ OK

it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
good JJ good arg2 OK
change NN change arg2 OK
from IN ^ ^ repeat
from IN from arg2 OK
from IN ^ ^ repeat
california NNP california arg2 OK
and CC and arg2 OK
los NNP los arg2 OK
angeles NNP angeles arg2 OK

and CC ^ ^ false_start
to TO to ^ OK
sort RB ^ ^ filler
of RB ^ ^ filler

we PRP ^ ^ false_start
've VBP ^ ^ false_start
had VBN ^ ^ false_start
a DT ^ ^ false_start
we PRP we arg0 OK
have VBP have ^ OK
n't RB n't argM_neg OK
had VBN had predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
snow NN snow arg1 OK

but CC ^ ^ repeat
but CC ^ ^ false_start
we PRP we arg0 OK
've VBP 've ^ OK
had VBN had predicate OK
a DT a arg1 OK
couple NN couple arg1 OK
of IN of arg1 OK
good JJ good arg1 OK
snowfalls NNS snowfalls arg1 OK
with IN with arg1 OK
some DT some arg1 OK
flurries NNS flurries arg1 OK

i PRP ^ ^ filler
suppose VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
like IN like arg2 OK
when WRB when argM_tmp OK
it PRP it arg0 OK
rains VBZ rains arg2 OK
in IN ^ ^ repeat
in IN in argM_loc OK
l. NNP l. argM_loc OK
a. NNP a. argM_loc OK

when WRB when argM_tmp OK
it PRP it argM_tmp OK
rains VBZ rains argM_tmp OK
in IN in argM_tmp OK
l. NNP l. argM_tmp OK
there VBZ ^ ^ false_start
a. NNP a. argM_tmp OK
there VBZ ^ ^ false_start
people ADVP-TMP- 1 people arg0 OK
just NNS just argM_adverb OK
forget RB forget predicate OK
how VBP how argM_mnr OK
to WRB to arg1 OK
drive TO drive arg1 OK
because VB because argM_cause OK
it IN it arg0 OK
hardly PRP hardly argM_adverb OK
ever RB ever argM_adverb OK
rains RB rains argM_cause OK

so UH ^ ^ filler
that DT ^ ^ false_start
but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
like VBP like predicate OK
snow NN snow arg1 OK
now RB now argM_tmp OK

and CC ^ ^ repeat
and CC ^ ^ false_start
so RB ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
still RB still arg2 OK
beautiful JJ beautiful arg2 OK
for IN for arg2 OK
me PRP me arg2 OK

she PRP she arg0 OK
got VBD got predicate OK
away RB away arg1 OK
from IN from arg1 OK
the DT the arg1 OK
chicago NNP chicago arg1 OK
winters NNS winters arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
maybe RB maybe argM_adverb OK
if IN if argM_adverb OK
you PRP you arg1 OK
grow VBP grow arg1 OK
up RB up arg_particl OK
with IN with argM_mnr OK
it PRP it argM_mnr OK
it PRP it arg1 OK
's BES 's arg1 OK
not RB not argM_neg OK
so RB so arg2 OK
nice JJ nice arg2 OK

n- XX n- ^ OK
da- XX da- ^ OK

probably RB probably ^ OK
more RBR more ^ OK
so RB so ^ OK
than IN than ^ OK
here RB here ^ OK

but CC ^ ^ false_start
when WRB ^ ^ repeat
when WRB when argM_tmp OK
you PRP you argM_tmp OK
get VBP get argM_tmp OK
older JJR older argM_tmp OK
you ADVP-TMP- 1 you arg1 OK
start PRP start predicate OK
to VBP to arg1 OK
think TO think arg1 OK
hm VB ^ ^ filler
it UH it arg1 OK
's PRP 's arg1 OK
not BES not argM_neg OK
so RB so arg2 OK
nice RB nice arg2 OK
being JJ being arg2 OK
out VBG out arg2 OK

well UH ^ ^ filler
it PRP it arg1 OK
was VBD was predicate OK
a DT a arg2 OK
big JJ big arg2 OK
to TO to arg2 OK
do VB do arg2 OK
here RB here argM_loc OK
when WRB when argM_tmp OK
we PRP we arg0 OK
cut VBP cut argM_tmp OK
it PRP it arg1 OK
out RP out arg_particl OK

i PRP i arg0 OK
think VBP think predicate OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
really RB really arg1 OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
like VB like arg1 OK
the DT the arg1 OK
smell NN smell arg1 OK
of IN of arg1 OK
tobacco NN tobacco arg1 OK
anymore RB anymore argM_tmp OK

uh UH ^ ^ filler
that DT ^ ^ repeat
uh UH ^ ^ filler
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
pretty RB ^ ^ repeat
uh UH ^ ^ filler
pretty RB pretty arg2 OK
good JJ good arg2 OK

gossiping NN gossiping ^ OK

on IN on ^ false_start
the DT the ^ false_start
other JJ other ^ false_start
hand NN hand ^ false_start
i PRP i arg0 OK
know VBP know predicate OK
i PRP ^ ^ repeat
that DT that arg1 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
it PRP it arg1 OK
can MD can arg1 OK
be VB be arg1 OK
very RB very arg2 OK
destructive JJ destructive arg2 OK

but CC but ^ OK
i PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's ^ OK
a DT ^ ^ repeat
i PRP ^ ^ repeat
ca MD ^ ^ repeat
n't RB ^ ^ repeat
being VBG being predicate OK
overweight JJ overweight arg2 OK
i PRP i arg0 OK
have VBP have predicate OK
a DT a arg1 OK
problem NN problem arg1 OK
with IN with ^ OK

w- WP ^ ^ repeat
what WP what ^ OK
do VBP do ^ OK
you PRP you arg0 OK
mean VB mean predicate OK

i PRP ^ ^ repeat
i PRP i ^ OK
do- VBZ ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
never RB ^ ^ repeat
never RB never arg1 OK
really RB really arg1 false_start
had VBD had arg1 OK
a DT a arg1 OK
problem NN problem arg1 OK
with IN with arg1 OK
my PRP my arg1 OK
weight NN weight arg1 OK
until IN until arg1 OK
i PRP i arg1 OK
was VBD was arg1 OK
about RB about arg1 OK
forty CD forty arg1 OK
five CD five arg1 OK
i PRP i arg0 OK
guess VBP guess predicate OK

and CC ^ ^ false_start
uh UH ^ ^ filler
then RB then ^ OK
of IN of ^ OK
course NN course ^ OK
in IN in ^ OK
my PRP my ^ OK
life NN life ^ OK
i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i arg0 OK
had VBD ^ ^ repeat
had VBD had ^ OK
never RB ^ ^ repeat
never RB never ^ OK
been VBN been predicate OK
to IN to arg2 OK
a DT a arg2 OK
gym NN gym arg1 OK
to TO to arg2 OK
workout VB workout arg2 OK
or CC or arg2 OK
uh UH ^ ^ filler
used VBD used arg2 OK
a DT a arg1 OK
treadmill NN treadmill arg1 OK
or CC ^ arg2 false_start
anything NN ^ arg2 false_start
except IN except ^ false_start
for IN for ^ false_start
sports NNS sports arg1 false_start
that WDT that ^ false_start
i PRP i arg0 false_start
played VBD played predicate false_start
over IN over ^ false_start
the DT the ^ false_start
years NNS ^ ^ false_start
not RB ^ ^ false_start
much RB years ^ false_start

and CC ^ ^ false_start
uh UH ^ ^ filler
the DT the ^ OK
doctor NN doctor ^ OK
basically RB basically ^ OK
told VBD told ^ OK
me PRP me ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
said VBD said predicate OK
well UH well arg1 OK
these DT these arg1 OK
medications NNS medications arg1 OK
are VBP are arg1 OK
a DT a arg2 OK
pain NN pain arg2 OK
in IN in arg2 OK
the DT the arg2 OK
ass NN ass arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler

and CC ^ ^ false_start
he PRP he arg0 OK
said VBD said ^ OK
well UH ^ predicate false_start
well UH ^ arg1 filler
lose VB lose arg1 OK
weight NN weight arg1 OK

which WDT ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
p- JJ ^ ^ repeat
pretty RB pretty arg2 OK
good JJ good arg2 OK
about IN about arg2 OK
going VBG going arg2 OK
to IN to arg4 OK
the DT the arg4 OK
gym NN gym arg4 OK
three CD three arg2 OK
times NNS times arg2 OK
a DT a arg2 OK
week NN week arg2 OK

it PRP it arg1 OK
's S-2 's predicate OK
easier BES easier arg2 OK
for RB for arg2 OK
me IN me arg1 OK
to JJR ^ ^ repeat
to PRP to arg2 OK
first TO ^ ^ repeat
somehow TO somehow arg2 OK
as RB ^ ^ false_start
you IN ^ ^ false_start
say PRP ^ ^ false_start
to VBP ^ ^ repeat
be TO be arg2 OK
undisciplined VB undisciplined arg2 OK
about JJ about arg2 OK
that IN that arg2 OK

i PRP i arg0 OK
still RB still ^ OK
try VBP try predicate OK
to TO to arg1 OK
do VB do arg1 OK
it PRP it arg1 OK
on IN on argM_tmp OK
the DT the argM_tmp OK
off JJ off argM_tmp OK
days NNS days argM_tmp OK

i PRP i arg0 OK
use VBD use ^ OK
to TO to ^ OK
live VB live predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
hollywood NNP hollywood argM_loc OK
hills NNPS hills argM_loc OK

but CC but ^ OK
when WRB when ^ OK
i PRP i ^ OK
lived VBD lived ^ OK
back RB back ^ OK
east RB east ^ OK
for IN for ^ OK
many JJ ^ ^ repeat
many JJ many ^ OK
years NNS years ^ OK

you UNK ^ ^ filler
know UNK ^ ^ filler
i- UNK ^ ^ repeat
i UNK ^ ^ false_start
thi- UNK ^ ^ false_start
i- UNK ^ ^ false_start
my UNK my arg1 OK
know UNK ^ ^ filler
like UNK ^ ^ filler
i UNK ^ ^ false_start
do UNK ^ ^ false_start
n't UNK ^ ^ false_start
think UNK ^ ^ false_start
that UNK ^ ^ false_start
you UNK ^ ^ filler
feeling UNK feeling arg1 OK
is UNK ^ ^ repeat
is UNK is predicate OK
that UNK that arg2 OK
you UNK ^ ^ filler
know UNK ^ ^ filler
the UNK the argM_extent OK
harder UNK harder argM_extent OK
you UNK you arg2 OK
make UNK make arg2 OK
something UNK something arg1 OK
to UNK to arg1 OK
get UNK get arg1 OK
the UNK the argM_extent OK
more UNK more argM_extent OK
interested UNK interested arg2 OK
people UNK people arg0 OK
are UNK are arg1 OK
in UNK in arg1 OK
getting UNK getting arg1 OK
it UNK it arg1 OK

it PRP ^ ^ false_start
ca MD ^ ^ false_start
n't RB ^ ^ false_start
they PRP ^ ^ false_start
always RB ^ ^ false_start
the- PRP ^ ^ false_start
their PRP their arg1 OK
big JJ big arg1 OK
thing NN thing arg1 OK
is VBZ is predicate OK
that IN that arg2 OK
it PRP ^ ^ false_start
leads VBZ ^ ^ false_start
they PRP they arg0 OK
think VBP think arg2 OK
that IN that arg1 OK
when WRB when argM_tmp OK
people NNS people arg0 OK
smoke VBP smoke arg1 OK
it PRP it arg1 OK
it ADVP-TMP- 1 it arg0 OK
'll PRP 'll arg1 OK
lead MD lead arg1 OK
them VB them arg1 OK
to PRP to arg4 OK
crack IN crack arg4 OK
use NN use arg4 OK
and NN ^ ^ false_start
things CC ^ ^ false_start
like NNS ^ ^ false_start
that IN ^ ^ false_start

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
know VB know predicate OK

i- PRP ^ arg1 repeat
i- PRP ^ ^ false_start
it PRP it arg1 OK
's BES 's ^ OK
supposed VBN supposed predicate OK
to TO to arg2 OK
be VB be arg2 OK
a DT a arg2 OK
good JJ good arg2 OK
pain NN pain arg2 OK
reliever NN reliever arg2 OK
for IN for arg2 OK
people NNS people arg0 OK
who WP who arg0 OK
are VBP are arg2 OK
suffering VBG suffering arg2 OK
like UH like arg2 OK
who WP those ^ false_start
who WP who arg1 OK
are VBP are arg2 OK
in IN in arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
pain NN pain arg2 OK
with IN with arg2 OK
like UH ^ ^ filler
bone NN bone arg2 OK
cancer NN cancer arg2 OK
and CC ^ ^ false_start
things NNS ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
see VB see predicate OK
what WP what arg2 OK
the DT the arg1 OK
big JJ big arg1 OK
deal NN deal arg1 OK
is VBZ is arg1 OK

that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
only JJ only arg2 OK
thing NN thing arg2 OK
they PRP ^ ^ false_start
sa- XX ^ ^ false_start
uh UH ^ ^ filler
they PRP ^ ^ false_start
ah UH ^ ^ filler
to IN to arg2 false_start
me PRP me arg2 false_start

they PRP they arg0 OK
talk VBP talk predicate OK
about IN about arg1 OK
how WRB how argM_mnr OK
if IN if argM_adverb OK
you PRP you arg0 OK
smoke VBP smoke arg1 OK
even RB even argM_adverb OK
cigarettes NNS cigarettes arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
then RB then argM_adverb OK
it PRP it arg0 OK
leads VBZ leads arg1 OK
you PRP you arg1 OK
to TO to arg4 OK
smoke VB smoke arg4 OK
marijuana NN marijuana arg4 OK
and CC and arg1 OK
then RB then argM_adverb OK
if IN if argM_adverb OK
you PRP you arg0 OK
smoke VBP smoke arg1 OK
marijuana NN marijuana arg0 OK
it PRP it arg0 OK
leads VBZ leads arg1 OK
you PRP you arg0 OK
to TO to arg4 OK
smoke VB smoke arg4 OK
all PDT all arg1 OK
the DT the arg1 OK
other JJ other arg1 OK
things NNS things arg1 OK
or CC or arg4 OK
take VB take arg4 OK
u- XX ^ ^ false_start
illegal JJ illegal arg1 OK
drugs NNS drugs arg1 OK

but CC but argM_discou OK
i PRP i arg0 OK
know VBP know predicate OK
a DT a arg0 OK
lot NN lot arg0 OK
of IN of arg0 OK
people NNS people arg0 OK
who WP who arg0 OK
smoke VBP smoke arg0 OK
marijuana NN marijuana arg0 OK
who WP who arg0 OK
never RB never argM_neg OK
took VBD took arg1 OK
other JJ ^ ^ false_start
any DT any arg1 OK
other JJ other arg1 OK
illegal JJ illegal arg1 OK
drugs NNS drugs arg1 OK
and CC and arg1 OK
did VBD did arg1 OK
n't RB n't argM_neg OK
get VB get arg1 OK
hooked VBN hooked arg1 OK
on IN on arg1 OK
anything NN anything arg1 OK

so UH ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK

it PRP it arg0 OK
would MD would argM_mod OK
probably RB probably argM_adverb OK
bring VB bring predicate OK
down RP down argM_dir OK
the DT the arg1 OK
price NN price arg1 OK
a DT a argM_extent OK
lot NN lot argM_extent OK
if IN if argM_adverb OK
it PRP it arg1 OK
was VBD was argM_adverb OK
legalized VBN legalized argM_adverb OK

so RB ^ ^ filler
the DT the arg0 OK
drug NN drug arg0 OK
dealers NNS dealers arg0 OK
would MD would argM_mod OK
n't RB n't argM_neg OK
like VB like predicate OK
it PRP it arg1 OK
being VBG being arg1 OK
legalized VBD legalized arg1 OK
too RB too argM_extent OK
much JJ much argM_extent OK

it PRP it arg0 OK
would MD would argM_mod OK
chill VB chill predicate OK
everybody NN everybody arg1 OK
out RP out arg_particl OK
a DT a argM_extent OK
little JJ little argM_extent OK
too RB too argM_extent OK
much JJ much argM_extent OK

just RB ^ ^ false_start
a- XX ^ ^ false_start
i PRP ^ ^ false_start
see UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
about IN about arg1 OK
alcohol NN alcohol arg1 OK
and CC and arg1 OK
how WRB how arg1 OK
in IN ^ ^ false_start
over IN over argM_loc OK
in IN in argM_loc OK
europe NNP europe argM_loc OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kids NNS kids arg0 OK
can MD can argM_mod OK
get VB get arg1 OK
alcohol NN alcohol arg1 OK
without IN without arg1 OK
any DT any arg1 OK
problem NN problem arg1 OK

and CC ^ ^ false_start
they PRP they arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
big JJ big arg1 OK
alcoholism NN alcoholism arg1 OK
problems NNS problems arg1 OK
like IN like ^ OK
we PRP we arg0 OK
do VBP do ^ OK
here RB here argM_loc OK
n- XX ^ ^ false_start
ag- XX ^ ^ false_start
except IN except argM_discou OK
for IN for argM_discou OK
maybe RB maybe argM_discou OK
russia NNP russia argM_discou OK

but CC ^ ^ false_start
i PRP i arg0 OK
know VBP know predicate OK
like UH ^ ^ filler
my PRP ^ ^ repeat
my PRP my arg1 OK
husband NN husband arg1 OK
's POS 's arg1 OK
f- NN ^ ^ repeat
family NN family arg1 OK
is VBZ is arg1 OK
from IN from arg2 OK
italy NNP italy arg2 OK

where WRB ^ ^ repeat
where WRB where arg2 OK
you PRP are predicate false_start
you PRP ^ ^ repeat
you PRP you arg1 OK
from IN from arg2 OK

where UNK where argM_loc OK
you UNK are predicate false_start
you UNK you arg1 OK
at UNK ^ ^ false_start
in UNK in arg2 OK
jersey UNK jersey arg2 OK

i PRP ^ ^ false_start
probably RB ^ ^ repeat
probably RB probably ^ OK
about RB about ^ OK
eight CD eight ^ OK
years NNS years ^ OK
now RB now ^ OK

i PRP ^ ^ false_start
usually RB ^ ^ false_start
go VBP ^ ^ false_start
now RB ^ ^ repeat
now RB now argM_tmp OK
i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP 'm ^ OK
married JJ married predicate OK
and CC and ^ OK
have VBP have predicate OK
kids NNS kids arg1 OK

i PRP i arg1 OK
go VBP go predicate OK
to IN to arg4 OK
ocean NNP ocean arg4 OK
city NNP city arg4 OK
and CC and arg4 OK
wildwood NNP wildwood arg4 OK
because IN because argM_cause OK
there EX there arg1 OK
's BES 's argM_cause OK
more RBR more arg2 OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
kiddie NN kiddie arg2 OK
stuff NN stuff arg2 OK

i- XX ^ ^ false_start
per- XX per- ^ OK

is VBZ is predicate OK
that DT that arg1 OK
why WRB why argM_cause OK
you PRP you arg0 OK
're VBP 're arg2 OK
heading VBG heading arg2 OK
out IN out arg1 OK
to IN to arg1 OK
hawaii NNP hawaii arg1 OK

but CC ^ ^ false_start
um UH ^ ^ filler
she PRP ^ ^ false_start
we- VBD ^ ^ repeat
she PRP ^ ^ false_start
went VBD ^ ^ false_start
to IN ^ ^ false_start
ha- NNP ^ ^ false_start
she PRP ^ ^ false_start
's BES ^ ^ false_start
a- XX ^ ^ false_start
a- XX ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
she PRP she arg1 OK
's BES 's arg1 OK
going VBG going arg1 OK
back RB back arg4 OK
to IN to arg4 OK
hawaii NNP hawaii arg4 OK
now RB now argM_tmp OK

and CC ^ ^ false_start
now RB now argM_tmp OK
i PRP i arg0 OK
think VBP think predicate OK
she PRP she arg1 OK
's BES 's arg1 OK
going VBG going arg1 OK
back RB back arg4 OK
to IN to arg4 OK
hawaii NNP hawaii arg4 OK
again RB again argM_tmp OK

i PRP i ^ OK
i PRP 'm arg1 false_start
sure UH sure arg2 OK
everybody NN everybody arg0 OK
knows VBZ knows arg2 OK
everybody NN everybody arg0 OK
is VBZ is arg1 OK
getting VBG getting arg1 OK
high JJ high arg1 OK

so UH ^ ^ false_start
what WP what arg0 OK
made VBD made predicate OK
you PRP you arg0 OK
do VB do arg1 OK
this DT ^ ^ false_start
surve- NN ^ ^ false_start
uh UH ^ ^ filler
this DT this arg1 OK
study NN study arg1 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
see VBP see predicate OK
where WRB where arg3 OK
you PRP you arg1 OK
're VBP 're arg1 OK
coming VBG coming arg1 OK
from IN from arg3 OK

i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
really RB really ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
have VBP have predicate OK
tons NNS tons arg1 OK
of IN of arg1 OK
them PRP them arg1 OK

and CC ^ ^ false_start
actually RB actually ^ OK
like UH ^ ^ filler
right RB right ^ OK
now RB now ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
am VBP ^ ^ repeat
am VBP am ^ OK
applying VBG applying predicate OK
for IN for arg1 OK
video NN video arg1 OK
game NN game arg1 OK
jobs NNS jobs arg1 OK
because IN because ^ OK
i PRP i arg0 OK
just RB just ^ OK
play VBP play predicate OK
them PRP them arg1 OK
so RB so ^ OK
much RB much ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
could MD could ^ OK
talk VB talk predicate OK
about IN about arg1 OK
it PRP it arg1 OK
all DT all argM_tmp OK
day NN day argM_tmp OK

so UH ^ ^ false_start
are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
going VBG going ^ OK
to TO to ^ OK
get VB get predicate OK
those DT those arg1 OK
sequels NNS sequels arg1 OK
to IN to arg1 OK
myst NNP myst arg1 OK

i PRP i arg1 OK
'm VBP 'm predicate OK
definitely RB definitely arg2 false_start
into IN into arg2 OK
the DT the arg2 OK
game NNP game arg2 OK
cube NNP cube arg2 OK

uh UH ^ ^ filler
my PRP my arg0 OK
he PRP ^ ^ false_start
little JJ little arg0 OK
he PRP ^ ^ false_start
brother NN brother arg0 OK
he PRP ^ ^ false_start
actually RB actually ^ OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
creates VBZ creates predicate OK
his PRP his arg1 OK
own JJ own arg1 OK
things NNS things arg1 OK
for IN for arg4 OK
the DT ^ ^ repeat
like UH ^ ^ filler
the DT ^ ^ repeat
p. NN p. arg4 OK
c. NN c. arg4 OK
games NNS games arg4 OK

like UH ^ ^ repeat
like UH ^ ^ filler
in IN in ^ OK
the DT the ^ OK
three CD three ^ OK
d. NN d. ^ OK
games NNS games ^ OK
the DT ^ arg1 false_start
the DT ^ ^ false_start
games NNS they ^ false_start
come VBP come predicate OK
with IN with argM_other OK
pre-packaged JJ pre-packaged arg1 OK
worlds NNS worlds arg1 OK
that WDT that argM_other OK
you PRP you arg0 OK
can MD can argM_other OK
walk VB walk argM_other OK
around RB around arg1 OK
in IN in arg1 OK

but CC but ^ OK
my PRP my arg0 OK
little JJ little arg0 OK
brother NN brother arg0 OK
knows VBZ knows predicate OK
three CD three arg1 OK
d. NN d. arg1 OK
stuff NN stuff arg1 OK

so RB ^ ^ false_start
he PRP ^ ^ repeat
he PRP he arg0 OK
can MD can ^ OK
make VB make predicate OK
make VB you arg0 false_start
your PRP your arg1 OK
own JJ own arg1 OK
world NN world arg1 OK
to TO to arg1 OK
walk VB walk arg1 OK
around RB around arg1 OK
in IN in arg1 OK

it PRP it arg1 OK
's BES 's predicate OK
really RB really arg2 OK
cool JJ cool arg2 OK
because IN because ^ OK
like UH ^ ^ filler
they PRP they arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
a DT a arg1 OK
action NN action arg1 OK
game NN game arg1 OK
called VBN called arg1 OK
quake NN quake arg1 OK

and CC ^ ^ false_start
he PRP ^ ^ repeat
he PRP he arg0 OK
created VBN ^ ^ repeat
recreated VBD recreated predicate OK
that DT ^ ^ false_start
is VBZ ^ ^ false_start
ah UH ^ ^ filler
the DT the argM_loc OK
apartment NN apartment argM_loc OK
where WRB where arg1 OK
we PRP we arg0 OK
used VBD used arg1 OK
to TO to arg1 OK
live VB live arg1 OK

we PRP ^ ^ repeat
we PRP we arg0 OK
put VBP put predicate OK
guns NNS guns arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
apartment NN apartment argM_loc OK

to TO ^ ^ repeat
get VB ^ ^ repeat
a DT ^ ^ repeat
and CC ^ ^ repeat
and CC ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
how WRB how ^ OK
can MD can ^ OK
you PRP you ^ OK
get VB get ^ OK
experience NN experience ^ OK
without IN without ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
that DT that arg2 OK
catch NNP catch arg2 OK
twenty-two NNP twenty-two arg2 OK

well UH ^ ^ filler
s- XX ^ ^ false_start
for IN for ^ OK
similar JJ similar ^ OK
reasons NNS reasons ^ OK
plus CC plus ^ OK
the DT the ^ OK
food NN food ^ OK
and CC and ^ OK
the DT the ^ OK
family NN family ^ OK

then RB ^ ^ filler
so RB ^ ^ filler
that DT ^ ^ false_start
would MD ^ ^ false_start
be VB ^ ^ false_start
th- XX ^ ^ false_start
you PRP you arg0 OK
like VBP like predicate OK
christmas NNP christmas arg1 OK
and CC and arg1 OK
your PRP your arg1 OK
birthday NN birthday arg1 OK

so UNK ^ ^ filler
are UNK ^ ^ false_start
you UNK ^ ^ false_start
really UNK ^ ^ false_start
you UNK you arg1 OK
're UNK 're predicate OK
in UNK in arg2 OK
l. UNK l. arg2 OK
a. UNK a. arg2 OK

though JJ though ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
that ADVP-LOC- 1 that ^ false_start
would DT would ^ false_start
really MD really ^ false_start
be RB be ^ false_start
cool VB cool ^ false_start
christmas NNP ^ ^ false_start
would MD ^ ^ false_start
um UH ^ ^ filler
if IN if ^ OK
i PRP i ^ OK
could MD could ^ OK
go VB go ^ OK
place NN to ^ false_start
like UH ^ ^ filler
some DT some ^ OK
place NN place ^ OK
like IN like ^ OK
new NNP new ^ OK
york NNP york ^ OK
or CC or ^ OK
where WRB where ^ OK
it PRP it ^ OK
snows VBZ snows ^ OK
at IN at ^ OK
christmas NNP christmas ^ OK

and CC ^ ^ false_start
colorado NNP colorado ^ OK
in IN ^ ^ repeat
in IN in ^ OK
high JJ high ^ OK
school NN school ^ OK

when WRB when argM_tmp OK
he PRP he argM_tmp OK
was VBD was argM_tmp OK
three CD three argM_tmp OK
i ADVP-TMP- 1 i arg0 OK
took PRP took predicate OK
him VBD him arg1 OK
back PRP back argM_loc OK
to RB to argM_loc OK
colorado IN colorado argM_loc OK
eh NNP ^ ^ filler
w- UH ^ ^ false_start
at XX to argM_loc false_start
my IN ^ ^ repeat
his NNS his argM_loc OK
parents PRP ^ ^ repeat
grandparents PRP grandparents argM_loc OK
for NNS for arg2 OK
christmas IN christmas arg2 OK

there EX there ^ OK
was VBD was predicate OK
a DT a arg1 OK
christmas NNP christmas arg1 OK
ball NN ball arg1 OK
on IN on argM_tmp OK
the DT the argM_tmp OK
christmas NNP christmas argM_tmp OK
tree NN tree argM_tmp OK
at IN ^ ^ repeat
at IN at argM_tmp OK
my PRP ^ ^ repeat
my PRP my argM_tmp OK
grand- NNS ^ ^ repeat
dad NN dad argM_tmp OK
's POS 's argM_tmp OK
house NN house argM_tmp OK

y- PRP ^ ^ repeat
y- PRP ^ ^ repeat
you PRP you arg0 OK
enjoy VBP enjoy predicate OK
yourself PRP yourself arg1 OK

it PRP ^ ^ repeat
it PRP it ^ OK
was- VBD ^ ^ repeat
's BES 's predicate OK
just RB just arg1 OK
me PRP me arg1 OK
and CC and arg1 OK
him PRP him arg1 OK

i PRP ^ ^ false_start
did VBD ^ ^ false_start
do VB ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
wo- VB ^ ^ repeat
work VB work predicate OK
full-time RB full-time arg1 OK

so UH ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
what WP ^ ^ false_start
else RB ^ ^ false_start
you PRP ^ ^ false_start
're VBP ^ ^ false_start
supposed VBN ^ ^ false_start
to- TO ^ ^ false_start
what WP what arg1 OK
else RB else arg1 OK
did VBD did ^ OK
she PRP she arg0 OK
say VB say predicate OK

take VB take ^ OK
our PRP our ^ OK
favorite JJ favorite ^ OK
holiday NN holiday ^ OK
and CC and ^ OK
do VB do ^ OK
what WP what ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
i- PRP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
just RB ^ ^ false_start
well UH ^ ^ filler
it- PRP ^ ^ repeat
also RB also ^ OK
its PRP its ^ OK
when WRB when ^ OK
i PRP i ^ OK
had VBD had ^ OK

when WRB when argM_tmp OK
my PRP my argM_tmp OK
son NN son argM_tmp OK
was VBD was argM_tmp OK
little JJ little argM_tmp OK
it ADVP-TMP- 1 ^ ^ repeat
it VBD it arg1 OK
was PRP ^ ^ repeat
was PRP was predicate OK
more VBD more arg2 OK
fun RBR fun arg2 OK

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
whole JJ whole arg2 OK
trip NN trip arg2 OK

its PRP it arg1 false_start
its PRP 's predicate false_start
so RB so arg2 OK
cute JJ cute arg2 OK

and CC ^ ^ repeat
and CC and arg1 OK
p. FW p. arg1 OK
s. FW s. arg1 OK
and CC ^ ^ false_start
he PRP ^ ^ repeat
eh UH ^ ^ repeat
oh UH ^ ^ repeat
he PRP he arg0 OK
goes VBZ ^ ^ repeat
says VBZ says predicate OK
um UH ^ ^ repeat
there EX there arg1 OK
's BES 's arg1 OK
cookies NNS cookies arg1 OK
for IN for arg1 OK
you PRP you arg1 OK
santa NNP santa arg1 OK
and CC and arg1 OK
water NN water arg1 OK
for IN for arg1 OK
the DT the arg1 OK
reindeer NN reindeer arg1 OK

when WRB ^ arg1 repeat
when WRB when argM_tmp OK
i PRP ^ ^ repeat
he PRP he argM_tmp OK
was VBD was argM_tmp OK
little JJ little argM_tmp OK
i ADVP-TMP- 1 i arg0 OK
would PRP would ^ OK
tell MD tell predicate OK
him VB him arg2 OK
i PRP that ^ false_start
i PRP i arg1 OK
'd PRP 'd arg1 OK
rather MD rather arg1 OK
he RB he arg0 OK
would PRP ^ arg1 false_start
make MD make arg1 OK
me VB me arg3 OK
something PRP something arg1 OK
or NN or arg1 OK
write CC write arg1 OK
a VB a arg1 OK
card DT card arg1 OK
than NN rather ^ false_start
than NN than arg1 OK
get IN ^ arg1 false_start
to VB ^ arg1 false_start
buy TO buy arg1 OK
it VB it arg1 OK
or PRP or arg1 OK
pick CC pick arg1 OK
flowers VB flowers arg1 OK
out NNS out arg2 OK
of IN of arg2 OK
the IN the arg2 OK
the IN ^ arg2 false_start
you DT ^ ^ filler
know PRP ^ ^ filler
anything VBP ^ ^ false_start
like NN ^ ^ false_start
that IN _NOUN_ ^ false_start

he PRP ^ ^ repeat
he PRP he arg0 OK
wrote VBD wrote predicate OK
me PRP me arg2 OK
the DT ^ ^ repeat
the DT the arg1 OK
greatest JJS greatest arg1 OK
cards NNS cards arg1 OK

all RB all ^ OK
through IN through ^ OK

he UNK he arg0 OK
lives UNK lives predicate OK
in UNK in ^ OK
um UNK ^ argM_loc filler
west UNK west argM_loc OK
l. UNK l. argM_loc OK
a. UNK a. argM_loc OK

well UH ^ ^ filler
he PRP he arg0 OK
runs VBZ runs predicate OK
an DT an arg1 OK
antique NN antique arg1 OK
store NN store arg1 OK
on IN on argM_loc OK
sunset NNP sunset argM_loc OK
um UH ^ ^ filler
boulevard NNP boulevard argM_loc OK

but CC ^ ^ false_start
they PRP they arg0 OK
let VB let predicate OK
him PRP him arg1 OK
stay VB stay arg1 OK
in IN in arg3 OK
one CD one arg3 OK
of IN of arg3 OK
their PRP their arg3 OK
their PRP _NOUN_ arg3 false_start

so RB ^ ^ filler
where WRB ^ ^ repeat
where WRB where arg2 OK
are VBP are predicate OK
you PRP you arg1 OK

well UH ^ ^ filler
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
you PRP do predicate false_start
during IN ^ ^ repeat
um UH ^ ^ filler
during IN during argM_tmp OK
the DT the argM_tmp OK
day NN day argM_tmp OK

uh UH ^ ^ filler
how WRB how ^ OK
did VBD did ^ OK
you PRP you arg0 OK
find VB find predicate OK
this DT ^ ^ repeat
this DT this arg1 OK

um UH ^ ^ filler
i PRP i arg1 OK
was VBD was predicate OK
surprised VBN surprised arg2 OK
i PRP i arg0 OK
ran VBD ran arg2 OK
across IN across arg1 OK
this DT ^ ^ repeat
this DT this arg1 OK
phone NN phone arg1 OK
thing NN thing arg1 OK

well UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
was VBD was arg1 OK
just RB just arg1 OK
doing VBG doing arg1 OK
one CD one arg1 OK
of IN of arg1 OK
those DT those arg1 OK
things NNS things arg1 OK
where WRB where arg2 OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
i PRP ^ ^ false_start
opened VBD ^ ^ false_start
my PRP ^ ^ false_start
i PRP i arg0 OK
get VBP get arg2 OK
paid VBN paid arg1 OK
e-mails NNS e-mails arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
ended VBD ended ^ OK
up RP up ^ OK

you PRP you arg1 OK
know VBP know predicate OK
how WRB how arg1 OK
you PRP you arg1 OK
'll MD 'll arg1 OK
go VB go arg1 OK
on IN on arg4 OK
one CD one arg4 OK
site NN site arg4 OK
with IN with arg1 OK
it PRP it arg1 OK
and ADVP-2 and arg1 OK
there CC there arg1 OK
's EX 's arg1 OK
something BES something arg0 OK
something BES that ^ false_start
interests NN interests arg1 OK
you VBZ you arg1 OK
and PRP and arg1 OK
you ADVP-2 you arg1 OK
go CC go arg1 OK
there PRP there arg4 OK

anywhere RB anywhere ^ OK
from IN ^ ^ repeat
from IN from ^ OK
a DT a ^ OK
penny NN penny ^ OK
to IN ^ ^ repeat
to IN to ^ OK
penny NNP ^ ^ repeat
five CD five ^ OK
penny NNP ^ ^ repeat
cents NNS cents ^ OK
is VBZ ^ ^ repeat
is VBZ is ^ OK
th- DT ^ ^ repeat
the DT the ^ OK
most JJS most ^ OK

but CC ^ ^ false_start
it PRP it arg0 OK
interests VBZ interests predicate OK
me PRP me arg1 OK
because IN because ^ OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
was VBD was predicate OK
about IN about arg2 OK
communicating VBG communicating arg2 OK
and CC and arg2 OK
phone NN phone arg2 OK
calls NNS calls arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
so RB so ^ OK
i PRP i ^ OK
just RB just ^ OK
thought VBD thought ^ OK
what WP what ^ OK
the DT the ^ OK
heck NN heck ^ OK

she PRP ^ ^ false_start
did VBD did ^ OK
she PRP she arg0 OK
tell VB tell predicate OK
you PRP you arg2 OK
about IN about arg1 OK
it PRP it arg1 OK

so RB ^ ^ false_start
you PRP you arg0 OK
were VBD were predicate OK
lucky JJ lucky arg2 OK
that IN that arg2 OK
she PRP she arg0 OK
told VBD told arg2 OK
you PRP you arg2 OK

but CC but ^ OK
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
what WP ^ ^ repeat
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
that WDT that ^ OK
i PRP i ^ OK
found VBD found ^ OK
that NP-1 that ^ OK
works WDT works ^ OK
is VBZ is ^ OK
something VBZ something ^ OK
with NN with ^ OK
codeine IN codeine ^ OK

that RB ^ ^ repeat
that RB that ^ OK
bad JJ bad ^ OK
where WRB where ^ OK
it PRP it ^ OK
's BES 's ^ OK
persistent JJ persistent ^ OK
i ADVP-1 i ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
think RB think ^ OK
anything VB anything ^ OK
else NN else ^ OK
does RB does ^ OK
work VBZ work ^ OK

y- PRP ^ ^ repeat
you PRP you ^ OK
have VBP have ^ OK
all DT all ^ OK
you PRP you ^ OK
can MD can ^ OK
do VB do ^ OK
to TO to ^ OK
breathe VB breathe ^ OK

you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
breathe VB breathe ^ OK
and CC and ^ OK
cough VB cough ^ OK
too RB too ^ OK

you PRP you ^ OK
have VBP have ^ OK
to TO to ^ OK
d- VBP do ^ false_start
either DT either ^ OK
one CD one ^ OK
or CC or ^ OK
the DT the ^ OK
other JJ other ^ OK

you UNK ^ ^ filler
know UNK ^ ^ filler
if UNK if ^ OK
you UNK you ^ OK
have UNK have ^ OK
a UNK a ^ OK
two-year UNK two-year ^ OK
old UNK old ^ OK

or UNK ^ ^ false_start
f- UNK ^ ^ false_start
i UNK i ^ OK
watch UNK watch ^ OK
a UNK a ^ OK
two-year UNK two-year ^ OK
and UNK and ^ OK
a UNK a ^ OK
four-year UNK four-year ^ OK
old UNK old ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
up RB up ^ OK
and CC and ^ OK
going VBG going ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
like UH like ^ OK
no UH no ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
not RB not ^ OK
sick JJ sick ^ OK
right RB right ^ OK
now RB now ^ OK

but CC but ^ OK
usually RB usually ^ OK
if IN if ^ OK
i PRP i ^ OK
get VBP get ^ OK
a DT a ^ OK
good JJ cold ^ false_start
you PRP ^ ^ repeat
you PRP you ^ OK
might MD ^ ^ repeat
might MD might ^ OK
as RB ^ ^ repeat
as RB as ^ OK
well RB ^ ^ repeat
well RB well ^ OK
just RB ^ ^ repeat
just RB just ^ OK
whistle VB whistle ^ OK
dixie NNP dixie ^ OK
because IN because ^ OK
it PRP ^ ^ false_start
's BES ^ ^ false_start
um UH ^ ^ filler
if IN if ^ OK
i PRP i ^ OK
get VBP get ^ OK
sick JJ sick ^ OK
then RB then ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
screwed VBN screwed ^ OK
so IN so ^ OK
to TO to ^ OK
speak VB speak ^ OK
because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
also RB also ^ OK
a DT a ^ OK
diabetic NN diabetic ^ OK

so RB ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ false_start
if IN if ^ OK
i PRP i ^ OK
get VBP get ^ OK
sick JJ sick ^ OK
then RB then ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
have VBP have ^ OK
other JJ other ^ OK
things NNS things ^ OK
to TO ^ ^ repeat
to TO to ^ OK
tend VB tend ^ OK
to IN to ^ OK

because IN because ^ OK
then RB then ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK
ra UH ra ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
see VB ^ ^ repeat
see VB see ^ OK
they PRP that ^ false_start
they PRP they ^ OK
have VBP have ^ OK
robitussin NNP robitussin ^ OK
now PP-1 now ^ OK
for RB for ^ OK
diabetics IN diabetics ^ OK

well UH ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
get VBP ^ ^ repeat
get VBP get ^ OK
the DT ^ ^ repeat
the DT the ^ OK
halls NNS halls ^ OK

they PRP they ^ OK
taste VBP taste ^ OK

the DT ^ ^ repeat
w- NN ^ ^ filler
the DT ^ ^ repeat
um UH ^ ^ filler
in IN with ^ false_start
the DT the ^ OK
halls NNP halls ^ OK
cough NN cough ^ OK
drops NNS drops ^ OK
like UH ^ ^ filler
you PRP you ^ OK
get VBP get ^ OK
the DT the ^ OK
bag NN bag ^ OK
full JJ full ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
and CC ^ ^ repeat
's BES 's ^ OK
eh UH ^ ^ filler
sugar NN sugar ^ OK
free JJ free ^ OK

you PRP you ^ OK
can MD can ^ OK
get VB get ^ OK
them PRP them ^ OK
sugar NN sugar ^ OK
free JJ free ^ OK
in IN with ^ false_start
halls NNP halls ^ OK

they PRP they ^ OK
taste VBP taste ^ OK

they PRP ^ ^ repeat
they PRP they ^ OK
're VBP ^ ^ repeat
are VBP are ^ OK
positively RB positively ^ OK
nasty JJ nasty ^ OK

clears VBZ it ^ false_start
and CC ^ ^ false_start
clears VBZ clears ^ OK
that DT that ^ OK
nose NN nose ^ OK
so IN so ^ OK
you PRP you ^ OK
can MD can ^ OK
at RB at ^ OK
least RB least ^ OK
breathe VB breathe ^ OK

um UH ^ ^ filler
use VB ^ ^ repeat
use VB use ^ OK
vicks NNP vicks ^ OK

cross VBP If ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ repeat
we PRP we ^ OK
cross VBP cross ^ OK
you PRP you ^ OK
we PRP we ^ OK
're VBP 're ^ OK
dead JJ dead ^ OK

pilot NN the ^ false_start
pilot NN pilot ^ OK
did VBD did ^ OK
n't RB n't ^ OK
die VB die ^ OK

well UH ^ ^ filler
you PRP ^ ^ false_start
see VBP ^ ^ false_start
you PRP ^ ^ false_start
went VBD ^ ^ false_start
right RB ^ ^ false_start
for IN ^ ^ false_start
the DT ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
thinking VBG thinking ^ OK
about IN about ^ OK
long JJ long ^ OK
term NN term ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
that DT ^ ^ false_start
i ADVP-TMP- 1 i ^ OK
was PRP was ^ OK
thinking VBD thinking ^ OK
i VBG i ^ OK
'd PRP 'd ^ OK
be MD be ^ OK
stuck VB stuck ^ OK
on VBN on ^ OK
this IN this ^ OK
place DT place ^ OK
like NN ^ ^ filler
for UH for ^ OK
a IN a ^ OK
long DT ^ ^ repeat
long JJ long ^ OK
time JJ time ^ OK

but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP you ^ OK
kind RB ^ ^ filler
of RB ^ ^ filler
oriented VBD oriented ^ OK
it PRP it ^ OK
towards IN towards ^ OK
this DT this ^ OK
was VBD being ^ false_start
a DT a ^ OK
short JJ short ^ OK
term NN term ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
in IN in ^ OK
the DT the ^ OK
short JJ short ^ OK
term NN term ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
things NNS things ^ OK
could MD could ^ OK
happen VB happen ^ OK

and CC ^ ^ false_start
my PRP my ^ OK
reason NN reason ^ OK
for IN for ^ OK
that DT that ^ OK
is VBZ is ^ OK
because IN because ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
trust VB trust ^ OK
the DT the ^ OK
federal JJ federal ^ OK
aviation NN aviation ^ OK
authority NN authority ^ OK
which WDT which ^ OK
i PRP i ^ OK
think VBP think ^ OK
is VBZ is ^ OK
a DT a ^ OK
big JJ big ^ OK
joke NN joke ^ OK
to TO to ^ OK
actually RB actually ^ OK
be VB be ^ OK
regulating VBG regulating ^ OK
any DT any ^ OK
of IN of ^ OK
these DT these ^ OK
airlines NNS airlines ^ OK
because IN because ^ OK
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
airlines NNS airlines ^ OK
have VBP have ^ OK
gotten VBN gotten ^ OK
greedy JJ greedy ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
'll MD 'll ^ OK
do VB do ^ OK
whatever WP whatever ^ OK
they PRP they ^ OK
have VBP have ^ OK
to TO to ^ OK
to NP-2 to ^ OK
save TO save ^ OK
a VB a ^ OK
buck DT buck ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
older JJR older ^ OK
the DT the ^ OK
fleet NN fleet ^ OK
gets VBZ gets ^ OK
the ADJP-PRD- 2 ^ ^ false_start
longer DT ^ ^ false_start
and JJR ^ ^ false_start
this CC ^ ^ false_start
is DT ^ ^ false_start
for VBZ ^ ^ false_start
all IN ^ ^ false_start
the PDT ^ ^ false_start
airlines DT ^ ^ false_start
the NNS the ^ OK
less DT less ^ OK
safe RBR safe ^ OK
the JJ the ^ OK
planes DT planes ^ OK
become NNS become ^ OK

so UH ^ ^ false_start
my PRP my ^ OK
c- NN ^ ^ repeat
concern NN concern ^ OK
is VBZ is ^ OK
that IN that ^ OK
anybody NN anybody ^ OK
who WP who ^ OK
really RB ^ ^ false_start
is VBZ is ^ OK
flying VBG flying ^ OK
especially RB especially ^ OK
an DT an ^ OK
airlines NN airline ^ false_start
that WDT ^ ^ repeat
that WDT that ^ OK
originates VBZ originates ^ OK
in IN in ^ OK
this DT this ^ OK
country NN country ^ OK
has VBZ has ^ OK
really RB really ^ OK
got VBN got ^ OK
a DT a ^ OK
lot NN lot ^ OK
to TO to ^ OK
think VB think ^ OK
about IN about ^ OK
because NP-2 because ^ OK
it IN ^ ^ false_start
's PRP ^ ^ false_start
like BES ^ ^ false_start
you NN you ^ OK
're PRP 're ^ OK
playing VBP playing ^ OK
ru- IN ^ ^ repeat
russian VBG russian ^ OK
roulette JJ roulette ^ OK
every NN every ^ OK
single DT single ^ OK
time JJ time ^ OK
you NN you ^ OK
go PRP go ^ OK
up VBP up ^ OK
there IN there ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
too RB too ^ OK
blame JJ many ^ false_start
planes NNS planes ^ OK
have VBP have ^ OK
gone VBN gone ^ OK
down RB down ^ OK
in IN in ^ OK
the DT the ^ OK
last JJ last ^ OK
ten CD ten ^ OK
years NNS years ^ OK
for IN for ^ OK
my PRP my ^ OK
comfort NN comfort ^ OK
level NN level ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
maybe RB ^ ^ false_start
we PRP we ^ OK
'll MD 'll ^ OK
fly VB fly ^ OK
one CD one ^ OK
time NN time ^ OK
together RB together ^ OK
when WRB when ^ OK
she PRP she ^ OK
graduates VBZ graduates ^ OK
high JJ high ^ OK
school NN school ^ OK
in IN in ^ OK
a DT a ^ OK
few JJ few ^ OK
years NNS years ^ OK
to ADVP-TMP- 1 to ^ OK
take TO take ^ OK
her VB her ^ OK
on PRP on ^ OK
one IN one ^ OK
big CD big ^ OK
trip JJ trip ^ OK

so UH ^ ^ filler
that DT that ^ OK
's BES 's ^ OK

well UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
p- XX ^ ^ false_start
as IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
in IN ^ ^ false_start
my PRP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
to TO to ^ OK
turn VB turn ^ OK
fifty CD fifty ^ OK
next JJ next ^ OK
month NN month ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
just RB ^ ^ repeat
just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
whether IN whether ^ OK
they PRP they ^ OK
're VBP 're ^ OK
working VBG working ^ OK
for IN for ^ OK
me PRP me ^ OK
at RB at ^ OK
all RB all ^ OK

uh UH ^ ^ filler
eh UH ^ ^ filler
i PRP i ^ OK
know VBP know ^ OK
especially RB especially ^ OK
that IN that ^ OK
right RB right ^ OK
n- RB ^ ^ repeat
now RB now ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like UH ^ ^ filler
only RB ^ ^ false_start
f- XX ^ ^ false_start
why WRB ^ ^ false_start
is VBZ ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
money NN money ^ OK
for IN for ^ OK
all PDT all ^ OK
that DT that ^ OK
sitting VBG sitting ^ OK
down RB down ^ OK
and CC and ^ OK
fixing VBG fixing ^ OK
food NN food ^ OK

like UH ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
fast JJ fast ^ OK
stuff NN stuff ^ OK
is VBZ is ^ OK
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
cheeseburger NN cheeseburger ^ OK
ninety-nine CD ninety-nine ^ OK
cent NN cent ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
wh- WP ^ ^ repeat
what WP what ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
s- VBG s- ^ OK

go VBP go ^ OK
go VBP go ^ OK
go VBP go ^ OK

not RB not ^ OK
but CC ^ ^ repeat
see UH ^ ^ repeat
they PRP ^ ^ repeat
but CC ^ ^ false_start
see UH ^ ^ false_start
they PRP ^ ^ false_start
because IN because ^ OK
that DT that ^ OK
's BES 's ^ OK
how WRB how ^ OK
america NNP america ^ OK
make VBP make ^ OK
their PRP their ^ OK
money NN money ^ OK

now UH ^ ^ false_start
if IN if ^ OK
they PRP they ^ OK
made VBD made ^ OK
uh UH ^ ^ filler
a DT a ^ OK
dol- NN ^ ^ false_start
ninety-nine CD ninety-nine ^ OK
cent NN cent ^ OK
veggie NN veggie ^ OK
burger NN burger ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
be VB ^ ^ false_start
like RP say ^ false_start
okay UH okay ^ OK

they PRP they ^ OK
be VB are ^ false_start
just RB just ^ OK
selling VBG selling ^ OK
a DT a ^ OK
hamburger NN hamburger ^ OK
dripped VBN dripped ^ OK
with IN with ^ OK
um UH ^ ^ filler
flame NN flame ^ OK
broiled VBN broiled ^ OK
and CC and ^ OK
all PDT all ^ OK
this DT this ^ OK
uh UH ^ ^ filler
grease NN grease ^ OK
and CC ^ ^ repeat
and CC and ^ OK
cheese NN cheese ^ OK
and CC and ^ OK
everything NN everything ^ OK

or CC or ^ OK
if IN if ^ OK
i PRP i ^ OK
c- XX c- ^ OK

for IN for ^ OK
one CD one ^ OK
grapefruit NN grapefruit ^ OK
because IN because ^ OK
i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
been VBN been ^ OK
going VBG going ^ OK
to IN to ^ OK
the DT the ^ OK
gym NN gym ^ OK

i PRP i ^ OK
go VBP go ^ OK
right RB right ^ OK
to IN to ^ OK
wendy NNP wendy ^ OK
's POS 's ^ OK
and CC and ^ OK
get VB get ^ OK
me PRP myself ^ false_start
a DT ^ ^ repeat
a DT a ^ OK
ninety-nine JJ ninety-nine ^ OK
cent NN cent ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
a NP-1 ^ ^ false_start
double DT double ^ OK
cheeseburger JJ cheeseburger ^ OK
or NN or ^ OK
something CC something ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
be VB am ^ false_start
hungry JJ hungry ^ OK

but CC but ^ OK
um UH um ^ OK

so UH so ^ OK
it PRP it ^ OK
's BES 's ^ OK
like UH like ^ OK

like UH ^ ^ filler
in IN ^ ^ repeat
like UH ^ ^ filler
in IN in ^ OK
today NN today ^ OK
's POS 's ^ OK
society NN society ^ OK
anyway RB anyway ^ OK
the DT ^ ^ repeat
the DT the ^ OK
biggest JJS ^ ^ repeat
biggest JJS biggest ^ OK
thing NN ^ ^ repeat
fad NN fad ^ OK
is VBZ is ^ OK
like UH ^ ^ filler
all PDT all ^ OK
these DT these ^ OK
diets NNS diets ^ OK

even RB even ^ OK
looking VBG looking ^ OK
for IN for ^ OK
something NN something ^ OK
to TO to ^ OK
do VB do ^ OK
as IN ^ ^ repeat
as IN as ^ OK
a DT ^ ^ repeat
a DT a ^ OK
diet NN diet ^ OK
like UH ^ ^ filler
real RB real ^ OK
quick JJ quick ^ OK
because IN because ^ OK
we PRP we ^ OK
want VBP want ^ OK
to TO to ^ OK
lose VB lose ^ OK
that DT that ^ OK
weight NN weight ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
actually UH actually ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ repeat
we PRP we ^ OK
c- MD ^ ^ repeat
could MD could ^ OK
do VB do ^ OK
because IN _ARG_ ^ false_start
because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
looking VBG looking ^ OK
for IN for ^ OK
something NN something ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
looking VBG looking ^ OK
to TO for ^ false_start
to TO _ARG_ ^ false_start
to TO to ^ OK
work VB work ^ OK
with IN with ^ OK
me PRP me ^ OK
while IN while ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
to IN to ^ OK
the DT the ^ OK
gym NN gym ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
as IN as ^ OK
a DT a ^ OK
aid NN aid ^ OK
or CC or ^ OK
something NN something ^ OK
to TO to ^ OK
help VB help ^ OK
me PRP me ^ OK

you UNK you ^ OK
know UNK know ^ OK
what UNK what ^ OK
i UNK i ^ OK
mean UNK mean ^ OK
just UNK just ^ OK
being UNK being ^ OK

i PRP i ^ OK
learned VBD learned ^ OK
about IN about ^ OK
that DT that ^ OK
because IN because ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
was VBD was ^ OK
like UH ^ ^ filler
the DT the ^ OK
d- NN ^ ^ false_start
fad NN fad ^ OK
diet NN diet ^ OK
queen NN queen ^ OK

like UH ^ ^ filler
oh UH ^ ^ filler
this DT this ^ OK
diet NN diet ^ OK
come VB come ^ OK
out RB out ^ OK

oh UH ^ ^ filler
the DT the ^ OK
hollywood NNP hollywood ^ OK
diet NN diet ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
to TO to ^ OK
try VB ^ ^ repeat
try VB try ^ OK
this DT ^ ^ repeat
this DT this ^ OK
one NN one ^ OK

but CC but ^ OK
nah UH no ^ false_start

i PRP i ^ OK
grew VBD grew ^ OK
out IN out ^ OK
of IN of ^ OK
that DT that ^ OK
already RB already ^ OK
because IN because ^ OK
it PRP it ^ OK
affects VBZ affects ^ OK
your PRP your ^ OK
body NN body ^ OK
too RB too ^ OK
much RB much ^ OK

you PRP you ^ OK
did VBD did ^ OK
n't RB n't ^ OK
think VB think ^ OK
it PRP it ^ OK
was VBD was ^ OK
going VBG going ^ OK
to TO to ^ OK
at IN at ^ OK
first RB first ^ OK

my PRP my ^ OK
first JJ first ^ OK
call NN call ^ OK
was VBD was ^ OK
last JJ last ^ OK
night NN night ^ OK

it PRP ^ ^ false_start
's BES ^ ^ repeat
was VBD ^ ^ false_start
like UH ^ ^ filler
the DT ^ ^ false_start
unexpec- JJ ^ ^ false_start
like UH ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK
it PRP it ^ OK
was VBD was ^ OK

i PRP i ^ OK
thought VBD thought ^ OK
maybe RB maybe ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
g- XX ^ ^ false_start
they PRP they ^ OK
prompt JJ prompt ^ OK

and CC ^ ^ false_start
this DT this ^ OK
guy NN guy ^ OK
came VBD came ^ OK
on IN on ^ OK
the DT the ^ OK
phone NN phone ^ OK
and CC and ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
will MD will ^ OK
you PRP you ^ OK
talk VB talk ^ OK
about IN about ^ OK
this DT this ^ OK
subject NN subject ^ OK
here RB here ^ OK

i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
okay UH okay ^ OK

i PRP i ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
um UH ^ ^ filler
how WRB how ^ OK
you PRP are ^ false_start
you PRP you ^ OK
doing VBG doing ^ OK

i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
oh UH ^ ^ filler
gosh UH ^ ^ filler
i PRP i ^ OK
feel VBP feel ^ OK
so RB so ^ OK
like UH ^ ^ filler
stupid JJ stupid ^ OK

but CC but ^ OK
i PRP ^ ^ false_start
was VBD ^ ^ false_start
s- XX ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
care VB care ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
need VBP ^ ^ repeat
need VBP need ^ OK
that DT ^ ^ repeat
that DT that ^ OK
for IN for ^ OK
my PRP my ^ OK
phone NN phone ^ OK
bill NN bill ^ OK

i PRP ^ ^ false_start
h- VBP ^ ^ false_start
i PRP i ^ OK
spent VBD spent ^ OK
my PRP my ^ OK
phone NN phone ^ OK
bill NN bill ^ OK
up IN up ^ OK
to IN to ^ OK
a DT a ^ OK
hundred CD hundred ^ OK
and CC and ^ OK
fifty CD fifty ^ OK
dollars NNS dollars ^ OK

but CC but ^ OK
you PRP you ^ OK
know VBP know ^ OK
what WP what ^ OK
i- PRP i- ^ OK

but CC but ^ OK
the DT the ^ OK
thing NN thing ^ OK
that WDT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
also RB also ^ false_start
bad JJ bad ^ OK
that WDT is ^ false_start
that WDT that ^ OK
they PRP they ^ OK
just RB just ^ OK
com- VBP ^ ^ false_start
keep VBP keep ^ OK
conveying VBG conveying ^ OK
is NP-1 ^ ^ false_start
that VBZ that ^ OK
now IN now ^ OK
they RB they ^ OK
have PRP have ^ OK
like VBP ^ ^ filler
the UH ^ ^ false_start
n- DT ^ ^ false_start
like JJ ^ ^ filler
the UH ^ ^ false_start
low DT ^ ^ false_start
calorie JJ ^ ^ false_start
the NN ^ ^ repeat
i DT ^ ^ filler
mean PRP ^ ^ filler
the VBP the ^ OK
low DT low ^ OK
carb JJ carb ^ OK
diet NN diet ^ OK

it PRP ^ ^ repeat
it PRP ^ ^ repeat
i- PRP ^ ^ false_start
it PRP it ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's S-1 's ^ OK
good JJ ^ ^ repeat
good BES good ^ OK
to TO ^ ^ repeat
to JJ to ^ OK
cut TO cut ^ OK
the VB ^ ^ repeat
the DT the ^ OK
carbs DT carbs ^ OK
out NNS out ^ OK

like UNK ^ ^ filler
you UNK ^ ^ repeat
you UNK ^ ^ repeat
you UNK you ^ OK
ha- UNK ^ ^ repeat
have UNK have ^ OK
to UNK to ^ OK
have UNK have ^ OK
everything UNK everything ^ OK
that UNK that ^ OK
you UNK you ^ OK
make UNK make ^ OK

it UNK it ^ OK
is UNK is ^ OK
what UNK what ^ OK
you UNK you ^ OK
ha- UNK ^ ^ false_start
cut UNK cut ^ OK
it UNK ^ ^ false_start
out UNK out ^ OK

oh UNK ^ ^ filler
what UNK what ^ OK
i UNK i ^ OK
was UNK was ^ OK
saying UNK saying ^ OK
is UNK is ^ OK
like UNK ^ ^ filler
the UNK ^ ^ false_start
carbs UNK ^ ^ false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
how UNK how ^ OK
they UNK they ^ OK
say UNK say ^ OK
like UNK ^ ^ filler
they UNK they ^ OK
have UNK have ^ OK
the UNK the ^ OK
diets UNK diets ^ OK
now UNK now ^ OK
for UNK for ^ OK
like UNK ^ ^ filler
low UNK low ^ OK
carbs UNK carbs ^ OK
or UNK or ^ OK
no UNK no ^ OK
carbs UNK carbs ^ OK
and UNK ^ ^ repeat
and UNK and ^ OK
protein UNK protein ^ OK
everything UNK everything ^ OK

like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
you PRP you ^ OK
should MD should ^ OK
cut VB cut ^ OK
carbs NNS carbs ^ OK
out RP out ^ OK
period RB ^ ^ false_start

i PRP i ^ OK
think VBP think ^ OK
you PRP you ^ OK
should MD should ^ OK
have VB have ^ OK
like UH ^ ^ filler
y- PRP ^ ^ repeat
y- PRP ^ ^ repeat
y- PRP ^ ^ repeat
your PRP your ^ OK
amount NN amount ^ OK
of IN of ^ OK
carbs NNS carbs ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
not RB not ^ OK
good JJ good ^ OK

because IN because ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP do ^ OK
do VBP ^ ^ repeat
do VBP ^ ^ repeat
n't RB n't ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
know VB know ^ OK
know VB ^ ^ repeat
if IN if ^ OK
i PRP i ^ OK
like UH ^ ^ filler
have VB have ^ OK
a DT a ^ OK
quote RB quote ^ OK
unquote RB unquote ^ OK
best JJS best ^ OK
friend NN friend ^ OK

n- XX ^ ^ false_start
yeah UH yeah ^ OK

i- PRP ^ ^ repeat
it PRP it ^ OK
must MD must ^ OK
have VB have ^ OK
got VBN got ^ OK
disconnected VBN disconnected ^ OK
somehow RB somehow ^ OK

i PRP i ^ OK
'd MD 'd ^ OK
flat RB flat ^ OK
out RB out ^ OK
say VB say ^ OK
it PRP it ^ OK

there EX there ^ OK
's BES 's ^ OK
no DT no ^ OK
way NN way ^ OK
in IN in ^ OK
hell NN hell ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
pick VB pick ^ OK
around IN around ^ OK
it PRP it ^ OK
or CC ^ ^ repeat
or CC or ^ OK
finish VB finish ^ OK
it PRP it ^ OK
or CC or ^ OK
be VB be ^ OK
fake JJ fake ^ OK

i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
bug NN bug ^ OK
in IN in ^ OK
my PRP my ^ OK
food NN food ^ OK

i PRP i ^ OK
was VBD ^ ^ false_start
like RP said ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
out RB out ^ OK
to IN to ^ OK
mcdonald NNP mcdonald ^ OK
's POS 's ^ OK
and CC and ^ OK
eat VBP eat ^ OK
them DT them ^ OK
roaches NNS roaches ^ OK
i PRP i ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
see VB see ^ OK

but CC but ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
do VB do ^ OK
it PRP it ^ OK
eve- DT ^ ^ repeat
every DT every ^ OK
night NN night ^ OK

same JJ same ^ OK
here RB here ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
he- VBP ^ ^ repeat
hear VBP hear ^ OK
it PRP it ^ OK
on IN on ^ OK
my PRP my ^ OK
answering NN answering ^ OK
machine NN machine ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
uh UH ^ ^ filler
okay UH okay ^ OK

i PRP i ^ OK
thought VBD thought ^ OK
you PRP you ^ OK
meant VBD meant ^ OK
the DT ^ ^ repeat
the DT ^ ^ repeat
the DT ^ ^ false_start
right JJ ^ ^ false_start
this DT this ^ OK
phone NN phone ^ OK
call NN call ^ OK
right RB right ^ OK
now RB now ^ OK

it PRP it ^ OK
's BES 's ^ OK
uh UH ^ ^ filler

i PRP ^ ^ repeat
i PRP i ^ OK
have VBP have ^ OK
no DT no ^ OK
idea NN idea ^ OK

well UH ^ ^ false_start
and CC ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
survey VB _ARG_ ^ false_start
survey VB survey ^ OK
and CC and ^ OK
then RB then ^ OK
get VB get ^ OK
too RB too ^ OK
many JJ many ^ OK
um UH ^ ^ filler
applicants NNS applicants ^ OK
for IN for ^ OK
it PRP it ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start

we PRP we arg1 OK
got VBD go predicate false_start
out IN out argM_loc OK
on IN on argM_loc OK
the DT the argM_loc OK
boat NN boat argM_loc OK
at RB at argM_tmp false_start
least RBS least argM_tmp false_start
twice RB ^ ^ false_start
two CD two argM_tmp OK
or CC or argM_tmp OK
three CD three argM_tmp OK
times NNS times argM_tmp OK
a DT a argM_tmp OK
week NN week argM_tmp OK

they PRP ^ ^ repeat
're VBP ^ ^ repeat
they PRP ^ ^ false_start
're VBP ^ ^ false_start
well UH ^ ^ filler
two CD two arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
are VBP are predicate OK
in IN in arg2 OK
jersey NNP jersey arg2 OK

oh UH ^ ^ filler
and CC ^ ^ false_start
then RB ^ ^ false_start
when WRB when argM_tmp OK
the DT the argM_tmp OK
phone NN phone argM_tmp OK
rang VBD rang argM_tmp OK
i ADVP-TMP- 1 i arg0 OK
said PRP said predicate OK
i VBD i arg0 OK
bet PRP bet arg1 OK
you VBP you arg3 OK
it PRP it arg1 OK
's PRP 's arg2 OK
probably BES probably argM_adverb OK
someone RB someone arg0 OK
calling NN calling arg2 OK
me VBG me arg1 OK
now PRP now argM_tmp OK

and CC ^ ^ false_start
then RB ^ ^ repeat
then RB then argM_adverb OK
it PRP ^ ^ repeat
it PRP it arg1 OK
goes VBZ goes predicate OK
up RP up argM_dir OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP i arg0 OK
guess VBP guess predicate OK
they PRP ^ ^ repeat
they PRP they arg0 OK
were VBD were arg1 OK
giving VBG giving arg1 OK
out RP out argM_dir OK
quite PDT ^ ^ false_start
a DT ^ ^ false_start
few JJ ^ ^ false_start
mo- NN ^ ^ false_start
uh UH ^ ^ filler
money NN money arg1 OK
last JJ last argM_tmp OK
year NN year argM_tmp OK

uh UH ^ ^ filler
they PRP ^ ^ false_start
gave VBD ^ ^ false_start
uh UH ^ ^ filler
they PRP they arg0 OK
had VBD had predicate OK
uh UH ^ ^ filler
like UH ^ ^ filler
a DT a arg1 OK
pool NN pool arg1 OK
that IN ^ ^ false_start
toward IN toward arg1 false_start
the DT the arg1 false_start
end NN end arg1 false_start
if IN if argM_adverb false_start
you PRP you arg0 false_start
made VBN made arg1 false_start
your PRP your arg1 false_start
twelve CD twelve arg1 false_start
calls NNS calls arg1 false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
r- RB ^ ^ repeat
really RB really argM_adverb OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK

it PRP it ^ OK
was VBD was ^ OK
up- XX ^ ^ false_start

ninety-six CD ninety-six ^ OK
ninety-six CD ^ ^ false_start
ninety-seven CD or ^ false_start
ninety-seven CD ninety-seven ^ OK
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

oh UH ^ ^ filler
you PRP you arg0 OK
're VBP 're ^ OK
probably RB probably argM_adverb OK
getting VBG getting predicate OK
that DT that arg1 OK
storm NN storm arg1 OK
that WDT that arg1 OK
we PRP we arg0 OK
had VBD had arg1 OK
a DT a argM_tmp OK
couple NN couple argM_tmp OK
of IN of argM_tmp OK
weeks NNS weeks argM_tmp OK
ago RB ago argM_tmp OK

we PRP we arg0 OK
had VBD had predicate OK
er UH ^ ^ filler
a DT a arg1 OK
hurricane NN hurricane arg1 OK

oh UH ^ ^ filler
we PRP ^ ^ false_start
usually RB ^ ^ false_start
we PRP we arg0 OK
spend VBP spend predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
time NN time arg1 OK
up IN up argM_loc OK
north RB north argM_loc OK

we PRP ^ ^ false_start
grew VBD ^ ^ false_start
up RP ^ ^ false_start
we PRP we arg0 OK
got VBD have predicate false_start
friends NNS friends arg1 OK
in IN in argM_loc OK
jersey NNP jersey argM_loc OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
sometimes RB sometimes ^ OK
it PRP it ^ OK
could MD could ^ OK
be VB be ^ OK
advantageous JJ advantageous ^ OK
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
one CD ^ ^ false_start
of IN ^ ^ false_start
them PRP ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
p- XX ^ ^ false_start
does VBZ does ^ OK
being VBG being arg0 OK
a DT a arg0 OK
pet NN pet arg0 OK
owner NN owner arg0 OK
um UH ^ ^ filler
influence VB influence predicate OK
your PRP your arg1 OK
buying NN buying arg1 OK
decisions NNS decisions arg1 OK

i PRP i ^ OK

i PRP i arg0 OK
but CC ^ ^ false_start
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
how WRB how arg1 OK
much JJ much arg1 OK
an DT an arg1 OK
influence NN influence arg1 OK
that DT that arg0 OK
has VBZ has arg1 OK
on IN on arg1 OK
buying VBG buying arg1 OK
stuff NN stuff arg1 OK

d- VBP ^ ^ repeat
do VBP do ^ OK
you PRP you arg0 OK
own VB own predicate OK
pets NNS pets arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
when WRB when argM_tmp OK
you PRP you argM_tmp OK
think VBP think argM_tmp OK
of IN of argM_tmp OK
testings NNS testings argM_tmp OK
i ADVP-TMP- 1 i arg0 OK
always PRP always arg1 OK
think RB think arg1 OK
of VBP of arg1 OK
like IN ^ ^ filler
lab UH lab arg1 OK
rats NN rats arg1 OK
and NNS ^ ^ false_start
stuff CC ^ ^ false_start
like NN ^ ^ false_start
that IN ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg0 OK
really FRAG-2 really arg1 OK
does RB does arg1 OK
n't VBZ n't argM_neg OK
make RB make arg1 OK
a VB a arg1 OK
difference DT difference arg1 OK
what NN what arg1 OK
kind WDT kind arg1 OK
of NN of arg1 OK
an IN an arg1 OK
animal DT animal arg1 OK
that NN that arg1 OK
they WDT they arg0 OK
're PRP 're arg1 OK
testing VBP testing arg1 OK
with VBG with arg1 OK

i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg0 OK
would MD would arg1 OK
kind RB kind arg1 OK
of RB of arg1 OK
depend VB depend arg1 OK
on IN on arg1 OK
how WRB how arg2 OK
legitimate JJ legitimate arg2 OK
or UH or arg2 OK
how WRB how arg2 OK
um UH ^ ^ filler
beneficial JJ beneficial arg2 OK
the DT the arg1 OK
tests NNS tests arg1 OK
would MD would arg1 OK
be VB be arg1 OK

um UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
is VBZ is ^ OK
a DT a ^ OK
legitimate JJ legitimate ^ OK
cure NN cure ^ OK
for IN for ^ OK
aids NNP aids ^ OK
then RB then ^ OK
i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
is VBZ is ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
it PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
a DT a arg2 OK
double RB double arg2 OK
edged JJ edged arg2 OK
sword NN sword arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
are VBP are ^ OK
you PRP you arg0 OK
going VBG going ^ OK
to TO to ^ OK
subject VB subject predicate OK
someone NN someone arg1 OK
else RB else arg1 OK
to IN to arg2 OK
that DT that arg2 OK

but CC ^ ^ false_start
now RB now argM_tmp OK
all DT all arg1 OK
i PRP i arg1 OK
need VBP need arg1 OK
is NP-1 is predicate OK
one VBZ one arg2 OK
tube CD tube arg2 OK
of NN of arg2 OK
blood IN blood arg2 OK
and NN ^ ^ filler
a CC ^ ^ filler
um DT ^ ^ filler
and UH ^ ^ filler
um CC ^ ^ filler
and UH and arg2 OK
this CC this arg2 OK
night DT night arg2 OK
machine NN machine arg2 OK
and NN and arg2 OK
bloopsch CC bloopsch arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
just RB ^ ^ repeat
just RB just ^ OK
literally RB literally ^ OK
lay VBP lay predicate OK
back RB back arg2 OK
there RB there arg2 OK
and CC and ^ OK
listen VBP listen predicate OK
to IN to arg1 OK
a DT a arg1 OK
walkman NN walkman arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
i PRP ^ ^ repeat
well UH ^ ^ filler
i PRP i arg0 OK
said VBD ^ ^ repeat
said VBD said predicate OK
by IN by argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK
i PRP i argM_tmp OK
'm VBP 'm argM_tmp OK
thirty-five CD thirty-five argM_tmp OK
i ADVP-TMP- 1 i arg1 OK
'll PRP 'll arg1 OK
be MD ^ ^ repeat
be VB be arg1 OK
close VB close arg2 OK
to JJ to arg2 OK
retirement IN retirement arg2 OK

but CC but ^ OK
uh UH ^ ^ filler

a DT ^ ^ filler
l- NN ^ ^ false_start
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
technology NN ^ ^ false_start
that WDT ^ ^ false_start
they PRP ^ ^ false_start
ooh UH ^ ^ filler
have VBP have ^ OK
you PRP you arg0 OK
seen VBN seen predicate OK
um UH ^ ^ filler
um UH ^ ^ filler
the DT the arg1 OK
the NNP ^ ^ repeat
new JJ new arg1 OK
um UH ^ ^ filler
what WP ^ ^ false_start
is VBZ ^ ^ false_start
it PRP ^ ^ false_start
intel NP-PRD-1 intel arg1 OK
intel DT ^ ^ repeat

ri- UH ^ ^ false_start
eh UH right ^ filler

and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i ^ OK

because IN ^ ^ false_start
it PRP ^ ^ repeat
it PRP there arg1 false_start
used VBD used ^ OK
to TO to ^ OK
be VB be predicate OK
a DT a arg2 OK
time NN time arg2 OK
that WDT that ^ OK
you PRP you arg0 OK
had VBD had ^ OK
to TO to ^ OK
have VB have predicate OK
your PRP your arg1 OK
cell NN cell arg1 OK
phone NN phone arg1 OK
at RB ^ ^ false_start
least RB ^ ^ false_start
with IN with arg1 OK
a DT a arg1 OK
laptop NN laptop arg1 OK
to TO to ^ OK
make VB make predicate OK
the DT the arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
actions NNS actions arg1 OK
and CC ^ ^ false_start
what WP ^ ^ false_start
have VBP ^ ^ false_start
you PRP ^ ^ false_start

but CC ^ ^ false_start
um UH ^ ^ filler
now UH ^ ^ repeat
now RB now argM_tmp OK
they PRP they arg0 OK
just RB just ^ OK
have VBP have predicate OK
uh UH ^ ^ filler
uh UH ^ ^ filler
certain JJ certain arg1 OK
laptops NNS laptops arg1 OK
with IN with arg1 OK
intel NNP intel arg1 OK
in IN in arg1 OK
them PRP them arg1 OK

and CC ^ ^ false_start
as IN ^ ^ false_start
a DT ^ ^ false_start
matter NN ^ ^ false_start
of IN ^ ^ false_start
fact NN ^ ^ false_start
it PRP it arg0 OK
was VBD was ^ OK
just RB just ^ OK
jus- RB ^ ^ repeat
just RB ^ ^ repeat
advertised VBN advertised predicate OK
on IN on argM_loc OK
t. NN t. argM_loc OK
v. NN v. argM_loc OK
yesterday NN yesterday ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
what WP what ^ OK
for IN for ^ OK

so UH ^ ^ filler
uh UH ^ ^ filler
d- VBP ^ ^ false_start
uh UH ^ ^ filler
are VBP are predicate OK
you PRP you arg1 OK
into IN into arg2 OK
computers NNS computers arg2 OK
much RB much arg2 OK

well UH ^ ^ filler
not RB not ^ OK
really RB really ^ OK
because IN because ^ OK
see UH ^ ^ filler
you PRP you ^ OK
going VBG going ^ OK
eh UH ^ ^ filler
you PRP ^ ^ repeat
you PRP you ^ OK
s- RB ^ ^ repeat
still RB still ^ OK
going VBG going ^ OK
to TO to ^ OK
have VB have ^ OK
to TO to ^ OK
utilize VB utilize ^ OK
accessories NNS accessories ^ OK
um UH ^ ^ filler
um UH ^ ^ filler
for IN for ^ OK
peripherals NNS peripherals ^ OK
for IN ^ ^ repeat
for IN for ^ OK
your PRP ^ ^ repeat
your PRP your ^ OK
ports NNS ports ^ OK

you PRP ^ arg2 repeat
you PRP you arg0 OK
going VBG are predicate false_start
still RB ^ ^ repeat
still RB still arg2 OK
going VBG ^ ^ repeat
going VBG going arg2 OK
to TO ^ ^ repeat
to TO to arg2 OK
nee- VB ^ ^ repeat
need VB need arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
things NNS ^ ^ false_start
them PRP things ^ false_start
like IN ^ ^ false_start
them PRP like ^ false_start
that DT ^ ^ false_start
them PRP that ^ false_start
like UH ^ ^ filler
for IN for ^ false_start
printers NNS printers ^ false_start
printers NNS ^ ^ false_start
scanners NNS and ^ false_start
scanners NNS scanners ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
and CC and ^ OK
that DT that ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
int- XX int- ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
a DT a arg2 OK
whole JJ whole arg2 OK
array NN array arg2 OK
of IN of arg2 OK
information NN information arg2 OK
that WDT that arg1 OK
's BES 's predicate OK
on IN on arg2 OK
the DT the arg2 OK
internet NN internet arg2 OK
nowadays RB nowadays argM_tmp OK

but CC ^ ^ false_start
uh UH ^ ^ filler
one PRP one ^ OK
could MD could ^ OK
get VB get ^ OK
into IN into ^ OK

well UH ^ ^ filler
i- PRP ^ ^ repeat
i PRP i arg0 OK
know VBP know predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
cold JJ cold arg2 OK
outside RB outside argM_loc OK
there RB ^ ^ false_start
now RB now argM_tmp OK
huh UH ^ ^ filler

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
my PRP my arg1 OK
little JJ little arg1 OK
ten CD ten arg1 OK
minutes NNS minutes arg1 OK
is VBZ is arg1 OK
up RB up arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
this DT ^ ^ false_start
is VBZ ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
not RB not argM_neg OK
a DT a arg2 OK
bad JJ bad arg2 OK
thing NN thing arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
get VBP get arg1 OK
something NN something arg1 OK
like IN like arg1 OK
three CD three arg1 OK
calls NNS calls arg1 OK
on IN on arg4 OK
this DT this arg4 OK

and CC and ^ OK
uh UH ^ ^ filler

he PRP he arg0 OK
said VBD said predicate OK
every DT ^ ^ false_start
like UH ^ ^ filler
now RB now argM_tmp OK
every DT every argM_tmp OK
time NN time argM_tmp OK
he PRP he argM_tmp OK
goes VBZ goes argM_tmp OK
to IN to argM_tmp OK
the DT the argM_tmp OK
airport NN airport argM_tmp OK
they ADVP-1 they arg0 OK
search PRP search arg1 OK
everything VBP everything arg1 OK
he NN he arg0 OK
has PRP has arg1 OK

like UH ^ ^ filler
he PRP he arg1 OK
is VBZ is predicate OK
always RB always arg2 false_start
the DT ^ ^ false_start
w- NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg1 OK
random JJ random arg1 OK
person NN person arg1 OK
who WP who arg1 OK
gets VBZ gets arg2 OK
pulled VBN pulled arg2 OK
out IN out arg2 OK
of IN of arg2 OK
line NN line arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
de- XX the arg1 false_start
only RB ^ ^ repeat
only JJ only arg1 OK
thing NN thing arg1 OK
it PRP it arg1 OK
costs VBZ costs arg1 OK
people NNS people arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
little JJ little arg2 OK
bit NN bit arg2 OK
more JJR more arg2 OK
time NN time arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
to TO to arg2 OK
get VB get arg2 OK
into IN into argM_loc OK
the DT the argM_loc OK
place NN place argM_loc OK

i PRP ^ ^ repeat
i PRP i arg0 OK
th- VBP ^ ^ repeat
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
worth JJ worth arg2 OK
it PRP it arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
i PRP i arg0 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
think VB ^ ^ false_start
in IN ^ ^ false_start
e- RB ^ ^ false_start
think VBP ^ ^ false_start
think VBP think predicate OK
it PRP ^ ^ false_start
it PRP it arg0 OK
does VBZ does arg1 OK
lessen VB lessen arg1 OK
like UH ^ ^ filler
the DT the arg1 OK
threat NN threat arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
obviously RB obviously arg2 false_start
still RB still arg2 OK
there RB there arg2 OK

you PRP ^ ^ false_start
n- VBP ^ ^ false_start
do VBP do ^ OK
you PRP you arg0 OK
know VBP know predicate OK
how WRB how arg1 OK
long RB long arg1 OK
we PRP we arg0 OK
're VBP 're arg1 OK
supposed VBN supposed arg1 OK
to TO to arg2 OK
talk VB talk arg2 OK
about IN about arg1 OK
this DT this arg1 OK

i PRP i arg0 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'll MD 'll argM_mod OK
have VB have argM_mod OK
to TO to argM_mod OK
go VB go predicate OK
on RB on arg_particl OK
as RB ^ ^ false_start
much RB ^ ^ false_start
about IN ^ ^ false_start
it PRP ^ ^ false_start
like UH ^ ^ filler
enough RB enough argM_extent OK
to TO to ^ OK
have VB have predicate OK
an DT an arg1 OK
inde- JJ ^ ^ repeat
in-depth JJ in-depth arg1 OK
conversa- NN ^ ^ repeat
conversation NN conversation arg1 OK
about IN about arg1 OK
it PRP it arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK

like UH ^ arg2 filler
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
kind RB kind arg2 OK
of RB of arg2 OK
dangerous JJ dangerous arg2 OK
in IN ^ ^ false_start
a DT ^ ^ false_start
way NN ^ ^ false_start
because IN ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ false_start
they PRP ^ ^ false_start
eh UH ^ ^ filler
because IN because argM_discou OK
if IN if argM_adverb OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you arg0 OK
can MD can argM_mod OK
stop VB stop arg2 OK
them PRP them arg0 OK
from IN from arg1 OK
bringing VBG bringing arg1 OK
guns NNS guns arg1 OK
on RP on ^ OK
on RP _ARG_ arg2 false_start

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
really RB ^ ^ repeat
really RB really argM_adverb OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
think VB think predicate OK
about IN about arg1 OK
this DT this arg1 OK
stuff NN stuff arg1 OK

but CC ^ arg1 repeat
maybe RB ^ ^ repeat
ma- RB ^ ^ repeat
but CC ^ ^ false_start
maybe RB maybe argM_adverb OK
it PRP ^ ^ repeat
it PRP it arg0 OK
puts VBZ puts predicate OK
puts VBZ it ^ false_start
in IN in arg2 OK
the DT the arg2 OK
back NN back arg2 OK
of IN of arg2 OK
their PRP their arg2 OK
head NN head arg2 OK
we PRP that ^ false_start
to XX ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
we PRP we arg0 OK
're VBP 're arg1 OK
cracking VBG cracking arg1 OK
down RP down arg_particl OK
on IN on arg1 OK
it PRP it arg1 OK

maybe RB maybe argM_adverb false_start
so UH ^ ^ filler
maybe RB ^ ^ repeat
may- RB ^ ^ repeat
maybe RB ^ ^ repeat
that DT ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
a DT ^ ^ false_start
little JJ ^ ^ false_start
bit NN ^ ^ false_start
to IN ^ ^ false_start
the DT ^ ^ false_start
i- PRP ^ ^ false_start
it PRP it arg0 OK
helps VBZ helps predicate OK
that DT that argM_mnr OK
way NN way argM_mnr OK

i PRP i arg0 false_start
believe VBP believe predicate false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ repeat
if IN if argM_adverb OK
the- PRP ^ ^ repeat
they PRP they arg1 OK
're VBP 're arg1 OK
sophisticated JJ sophisticated arg2 OK
enough RB enough arg2 OK
they PRP they arg0 OK
're VBP 're arg2 OK
still RB still argM_adverb OK
going VBG going argM_mod OK
to TO to argM_mod OK
find VB find arg2 OK
a DT a arg1 OK
way NN way arg1 OK

i PRP i arg0 OK
know VBP know predicate OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg0 OK
ma- VBZ ^ ^ repeat
makes VBZ makes arg1 OK
people NNS people arg0 OK
feel VB feel arg1 OK
safe JJ safe arg1 OK
for IN ^ ^ false_start
one CD ^ ^ false_start
thing NN ^ ^ false_start

and CC ^ ^ false_start
stuff NN ^ ^ false_start
i PRP i arg0 false_start
guess VBP guess predicate false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP ^ ^ repeat
makes VBZ ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg0 OK
keeps VBZ keeps arg1 OK
people NNS people arg1 OK
flying VBG flying arg1 OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP ^ ^ repeat
it PRP it arg0 OK
may MD may argM_mod OK
help VB help predicate OK
a DT a argM_extent OK
little JJ little argM_extent OK

at IN at ^ OK
georgia NNP ^ ^ repeat
georgia NNP georgia ^ OK
tech NNP ^ ^ repeat
tech NNP tech ^ OK

w- WRB ^ ^ repeat
wha- WP ^ ^ repeat
why WRB why argM_cause OK
did VBD did ^ OK
that DT that arg1 OK
happen VB happen predicate OK
though RB though argM_discou OK

eh UH ^ arg0 filler
who WP who arg1 OK
'd VBD 'd ^ OK
y'all PRP you ^ false_start
y'all PRP all arg0 false_start
beat VB beat predicate OK

you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ repeat
we PRP we ^ OK
cross VBP cross ^ OK
you PRP you ^ OK
we PRP we ^ OK
're VBP 're ^ OK
dead JJ dead ^ OK

pilot NN pilot ^ OK
did VBD did ^ OK
n't RB n't ^ OK
die VB die ^ OK

well UH ^ ^ false_start
you PRP ^ ^ false_start
see VBP ^ ^ false_start
you PRP ^ ^ false_start
went VBD ^ ^ false_start
right RB ^ ^ false_start
for IN ^ ^ false_start
the DT ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
thinking VBG thinking ^ OK
about IN about ^ OK
long JJ long ^ OK
term NN term ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
said VBD said ^ OK
that DT that ^ OK
i ADVP-TMP- 1 i ^ OK
was PRP was ^ OK
thinking VBD thinking ^ OK
i VBG i ^ OK
'd PRP 'd ^ OK
be MD be ^ OK
stuck VB stuck ^ OK
on VBN in ^ false_start
this IN this ^ OK
place DT place ^ OK
like NN ^ ^ filler
for UH for ^ OK
a IN a ^ OK
long DT ^ ^ repeat
long JJ long ^ OK
time JJ time ^ OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP ^ ^ repeat
you PRP you ^ OK
kind RB kind ^ OK
of RB of ^ OK
oriented VBD oriented ^ OK
it PRP it ^ OK
towards IN towards ^ OK
this DT this ^ OK
was VBD was ^ OK
a DT a ^ OK
short JJ short ^ OK
term NN term ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
in IN in ^ OK
the DT the ^ OK
short JJ short ^ OK
term NN term ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
things NNS things ^ OK
could MD could ^ OK
happen VB happen ^ OK

and CC ^ ^ false_start
my PRP my ^ OK
reason NN reason ^ OK
for IN for ^ OK
that DT that ^ OK
is VBZ is ^ OK
because IN because ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
trust VB trust ^ OK
the DT the ^ OK
federal JJ federal ^ OK
aviation NN aviation ^ OK
authority NN authority ^ OK
which WDT which ^ OK
i PRP i ^ OK
think VBP think ^ OK
is VBZ is ^ OK
a DT a ^ OK
big JJ big ^ OK
joke NN joke ^ OK
to TO to ^ OK
actually RB actually ^ OK
be VB be ^ OK
regulating VBG regulating ^ OK
any DT any ^ OK
of IN of ^ OK
these DT these ^ OK
airlines NNS airlines ^ OK
because IN because ^ OK
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
airlines NNS airlines ^ OK
have VBP have ^ OK
gotten VBN gotten ^ OK
greedy JJ greedy ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
'll MD 'll ^ OK
do VB do ^ OK
whatever WP whatever ^ OK
they PRP they ^ OK
have VBP have ^ OK
to TO to ^ OK
to NP-2 to ^ OK
save TO save ^ OK
a VB a ^ OK
buck DT buck ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
older JJR older ^ OK
the DT the ^ OK
fleet NN fleet ^ OK
gets VBZ gets ^ OK
the ADJP-PRD- 2 ^ ^ false_start
longer DT ^ ^ false_start
and JJR ^ ^ false_start
this CC ^ ^ false_start
is DT ^ ^ false_start
for VBZ ^ ^ false_start
all IN ^ ^ false_start
the PDT ^ ^ false_start
airlines DT ^ ^ false_start
the NNS the ^ OK
less DT less ^ OK
safe RBR safe ^ OK
the JJ the ^ OK
planes DT planes ^ OK
become NNS become ^ OK

so UH ^ ^ false_start
c- NN ^ ^ false_start
my PRP my ^ OK
concern NN concern ^ OK
is VBZ is ^ OK
that IN that ^ OK
anybody NN anybody ^ OK
who WP who ^ OK
really RB really ^ OK
is VBZ is ^ OK
flying VBG flying ^ OK
especially RB especially ^ OK
an DT an ^ OK
airlines NN airline ^ false_start
that WDT ^ ^ repeat
that WDT that ^ OK
originates VBZ originates ^ OK
in IN in ^ OK
this DT this ^ OK
country NN country ^ OK
has VBZ has ^ OK
really RB really ^ OK
got VBN got ^ OK
a DT a ^ OK
lot NN lot ^ OK
to TO to ^ OK
think VB think ^ OK
about IN about ^ OK
because NP-2 because ^ OK
it IN it ^ OK
's PRP 's ^ OK
like BES like ^ OK
ru- IN ^ ^ false_start
you NN you ^ OK
're PRP 're ^ OK
playing VBP playing ^ OK
russian VBG russian ^ OK
roulette JJ roulette ^ OK
every NN every ^ OK
single DT single ^ OK
time JJ time ^ OK
you NN you ^ OK
go PRP go ^ OK
up VBP up ^ OK
there IN there ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
too RB too ^ OK
blame JJ many ^ false_start
planes NNS planes ^ OK
have VBP have ^ OK
gone VBN gone ^ OK
down RB down ^ OK
in IN in ^ OK
the DT the ^ OK
last JJ last ^ OK
ten CD ten ^ OK
years NNS years ^ OK
for IN for ^ OK
my PRP my ^ OK
comfort NN comfort ^ OK
level NN level ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
maybe RB maybe ^ OK
we PRP we ^ OK
'll MD 'll ^ OK
fly VB fly ^ OK
one CD one ^ OK
time NN time ^ OK
together RB together ^ OK
when WRB when ^ OK
she PRP she ^ OK
graduates VBZ graduates ^ OK
high JJ high ^ OK
school NN school ^ OK
in IN in ^ OK
a DT a ^ OK
few JJ few ^ OK
years NNS years ^ OK
to ADVP-TMP- 1 to ^ OK
take TO take ^ OK
her VB her ^ OK
on PRP on ^ OK
one IN one ^ OK
big CD big ^ OK
trip JJ trip ^ OK

so UH so ^ OK
that DT that ^ OK
's BES 's ^ OK

well UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
p- XX ^ ^ false_start
as IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
in IN ^ ^ false_start
my PRP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
going VBG going ^ OK
to TO to ^ OK
turn VB turn ^ OK
fifty CD fifty ^ OK
next JJ next ^ OK
month NN month ^ OK

not RB not ^ OK
all DT all arg0 OK
kids NNS kids arg0 OK
have VBP have predicate OK
like IN ^ ^ filler
good JJ good arg1 OK
visual JJ visual arg1 OK
or CC or ^ OK
like UH ^ ^ filler
using VBG use predicate false_start
the DT the arg1 OK
it PRP ^ ^ false_start
like UH ^ ^ filler
keywords NNS keywords arg1 OK
that WDT that arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
not RB not arg1 OK
that RB that arg1 OK
good JJ good arg1 OK
at IN at arg1 OK

like NP-1 ^ ^ filler
that UH that arg2 OK
's DT 's predicate OK
sort BES sort ^ OK
of RB of ^ OK
like RB like ^ OK
tactile UH tactile arg1 OK
learning JJ learning arg1 OK

like UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
in IN ^ ^ repeat
in IN in arg1 OK
like UH ^ ^ filler
like UH ^ ^ filler
like UH ^ ^ filler
black JJ black arg1 OK
in IN in arg1 OK
some DT some arg1 OK
areas NNS areas arg1 OK
because UH because ^ OK
you PRP ^ ^ repeat
have VB ^ ^ repeat
you PRP you arg0 OK
do VBP ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
like UH ^ ^ filler
work VB work predicate OK
in IN in arg3 OK
groups NNS groups arg3 OK
to TO to ^ OK
do VB do predicate OK
like UH ^ ^ filler
projects NNS projects arg1 OK
if IN if ^ OK
you PRP you arg0 OK
are VBP are ^ OK
not RB not ^ OK
like UH ^ ^ filler
working VBG working predicate OK
with IN with arg3 OK
other JJ other arg3 OK
students NNS students arg3 OK

maybe RB maybe ^ OK
you PRP ^ ^ repeat
like UH ^ ^ filler
you PRP you arg0 OK
're VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
get VB get predicate OK
the DT the arg1 OK
personality NN personality arg1 OK
of IN of arg1 OK
like UH like arg1 OK
the DT the arg1 OK
professor NN professor arg1 OK

you PRP you arg1 OK
do VBP do ^ OK
n't RB n't ^ OK
even RB even ^ OK
have VB have ^ OK
to TO to ^ OK
go VB go predicate OK
to IN to argM_loc OK
a DT a argM_loc OK
classroom NN classroom argM_loc OK
ever RB ^ ^ false_start

and CC ^ ^ false_start
be VB ^ ^ false_start
first JJ ^ ^ false_start
as IN ^ ^ false_start
that DT ^ ^ false_start
like UH ^ ^ false_start
this DT ^ ^ false_start
people NNS people arg0 OK
without IN without arg0 OK
that DT that arg0 OK
knowledge NN knowledge arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
have VB ^ ^ repeat
like UH ^ ^ repeat
just RB ^ ^ repeat
using VBG use predicate false_start
the DT the arg1 OK
internet NN internet arg1 OK

uh UH ^ ^ filler
uh UH ^ ^ filler
mhm UH mhm ^ OK

i PRP i arg0 OK
guess VBP guess ^ OK
eh UH ^ ^ filler
i PRP ^ predicate filler

and CC ^ ^ false_start
that DT that arg0 OK
can MD can ^ OK
make VB make predicate OK
a DT a arg1 OK
big JJ big arg1 OK
difference NN difference arg1 OK
because IN because ^ OK
you PRP you arg0 OK
would MD would ^ OK
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
react VB ^ ^ false_start
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
eh UH ^ ^ filler
freak VB freak arg1 OK
out RP out arg1 OK

i PRP ^ ^ false_start
just RB ^ ^ false_start
i PRP i arg0 OK
was VBD was predicate OK
amazed VBN amazed arg1 OK
how WRB how arg1 OK
the DT the arg1 OK
calm NN calm arg1 OK
was VBD was arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ false_start
you PRP ^ ^ false_start
oof UH ^ ^ filler
how WRB how ^ OK
calm JJ calm arg2 OK
people NNS people arg1 OK
were VBD were predicate OK

um UH ^ ^ filler
i PRP ^ ^ repeat
eh UH ^ ^ filler
i PRP i arg0 OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
say VB ^ ^ repeat
say VB say predicate OK
that IN that arg1 OK
i PRP i arg1 OK
w- XX ^ ^ repeat
maybe RB ^ ^ false_start
w- MD ^ ^ false_start
would MD would arg1 OK
be VB be arg1 OK
that RB that arg2 OK
calm JJ calm arg2 OK

i PRP ^ ^ false_start
'd MD ^ ^ false_start
be VB ^ ^ false_start
maybe RB ^ ^ false_start
maybe RB maybe ^ OK
they PRP they arg1 OK
were VBD were predicate OK
frozen JJ frozen arg2 OK
in IN in arg2 OK
fear NN fear arg2 OK
too RB too ^ OK

i PRP i ^ OK

i PRP ^ ^ false_start
'd MD ^ ^ false_start
probably RB ^ ^ false_start
maybe RB ^ ^ false_start
i PRP i arg1 OK
would MD would ^ OK
be VB be predicate OK
hm UH ^ ^ filler
frozen JJ frozen arg2 OK
in IN in arg2 OK
fear NN fear arg2 OK

but CC ^ ^ false_start
you PRP ^ ^ repeat
y- PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
right JJ right arg2 OK
in IN about arg2 false_start
the DT the arg2 OK
magnitude NN magnitude arg2 OK
of IN ^ ^ false_start
the DT ^ ^ false_start
um UH ^ ^ filler
of IN of arg2 OK
who WP who arg2 OK
it PRP it arg1 OK
's BES 's arg2 OK
going VBG going arg2 OK
to TO to arg2 OK
affect VB affect arg2 OK

if IN if ^ OK
it PRP it arg0 OK
's BES 's ^ OK
just RB just ^ OK
going VBG going ^ OK
to TO to ^ OK
affect VB affect predicate OK
yourself PRP yourself arg1 OK
i PRP then ^ false_start
i PRP i arg0 OK
would MD would ^ OK
well UH ^ ^ filler
certainly RB certainly ^ false_start
react VB react predicate OK
differently RB differently arg1 OK
probably SBAR-2 ^ ^ filler
than RB than arg1 OK
if IN if arg1 OK
there IN there arg1 OK
was EX were arg1 false_start
a VBD a arg2 OK
lot DT lot arg2 OK
of NN of arg2 OK
people IN people arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
probably RB probably ^ OK
would MD would ^ OK
have VB have ^ OK
reacted VBN reacted predicate OK
like UH like arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
fight VB fight arg2 OK
fight VB fight arg2 OK

i PRP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
just RB ^ ^ false_start
eh UH ^ ^ filler
fighting VBG ^ ^ false_start
down IN ^ ^ false_start
the DT ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you arg0 OK
're VBP 're ^ OK
probably RB probably ^ false_start
going VBG going ^ OK
to TO to ^ OK
die VB die predicate OK
in IN in argM_loc OK
that DT that argM_loc OK
situation NN situation argM_loc OK
if IN if arg1 OK
you PRP you arg1 OK
do VBP do arg1 OK
n't RB n't arg1 OK
get VB get arg1 OK
out RB out arg1 OK

eh UH ^ ^ filler
i PRP i arg0 OK
can MD can ^ OK
probably RB probably ^ false_start
see VB see predicate OK
myself PRP myself arg0 OK
just RB just arg1 OK
pushing VBG pushing arg1 OK
people NNS people arg1 OK
out IN out arg1 OK
of IN of arg1 OK
the DT the arg1 OK
way NN way arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
^ ^ ^ ^ repeat
would MD would ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
think VB think predicate OK
i PRP that ^ false_start
i PRP i arg0 OK
would MD would arg1 OK
want VB want arg1 OK
to TO to arg1 OK
do VB do arg1 OK
that DT that arg1 OK

i PRP i arg1 false_start
think VBP think predicate false_start
well UH well arg1 OK
i PRP i arg0 OK
'm VBP 'm arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
die VB die arg1 OK
if IN if arg1 OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK
leave VB leave arg1 OK
but CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ false_start
in IN in ^ false_start
that DT that ^ false_start
situation NN situation ^ false_start

i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP ^ ^ false_start
heather NNP say predicate false_start
heather NNP heather arg1 OK
heather NNP heather arg1 OK
heather NNP heather arg1 OK

tha- DT tha- ^ OK
eh UH eh ^ OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
amazing JJ amazing arg2 OK

i PRP i arg0 OK
ca MD ca predicate OK
n't RB n't ^ OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start

eh UH ^ ^ filler
i PRP i arg0 OK
would MD would ^ OK
think VB think predicate OK
i PRP i arg0 OK
would MD would arg1 OK
want VB want arg1 OK
to TO to arg1 OK
do VB do arg1 OK
that DT that arg1 OK

but CC ^ ^ false_start
like IN ^ ^ filler
i PRP ^ ^ filler
said VBD ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
die VB die ^ OK
and CC and ^ OK
the DT the ^ OK
place NN place ^ OK
is VBZ is ^ OK
coming VBG coming ^ OK
down RB down ^ OK
uh UH ^ ^ filler

r- UH ^ ^ repeat
right UH right ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think ^ OK
ah UH ^ ^ filler
y- UH ^ predicate false_start

that IN ^ ^ false_start
they PRP they arg0 OK
do VBP do ^ OK
not VP not ^ OK
necessarily RB necessarily ^ OK
that RB do predicate false_start
that RB that arg1 OK

but CC ^ ^ filler
they PRP ^ ^ false_start
do VBP ^ ^ false_start
hm VP ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
they VBP they arg0 OK
help PRP help predicate OK
save VB save arg1 OK
people VB people arg1 OK
and NNS ^ ^ repeat
and CC ^ ^ false_start
stuff CC ^ ^ false_start

i PRP ^ ^ repeat
i PRP i arg1 OK
am VBP am predicate OK
on IN on arg2 OK
the DT the arg2 OK
other JJ other arg2 OK
end NN end arg2 OK

i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would arg1 OK
n't RB n't arg1 OK
commit VB commit arg1 OK
perjury NN perjury arg1 OK

only RB ^ ^ false_start
because IN ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP ^ ^ repeat
uh UH ^ ^ filler
based VBN based ^ OK
on IN on ^ OK
my PRP my ^ OK
religious JJ religious ^ OK
beliefs NNS beliefs ^ OK
i PRP i arg0 OK
would MD would ^ OK
n't RB n't ^ OK
do VB do predicate OK
it PRP it arg1 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
it PRP ^ ^ repeat
i PRP ^ ^ filler
guess VBP ^ ^ filler
i PRP i ^ OK
could MD could ^ OK
n't RB n't ^ OK
really RB really ^ OK
say VB say ^ OK
because IN because ^ OK
i PRP ^ ^ false_start
even RB even ^ OK
just RB just ^ OK
lying VBG lying ^ OK
for IN for ^ OK
someone NN someone ^ OK

if IN ^ ^ repeat
if IN if ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
know VBP ^ ^ repeat
that IN ^ ^ repeat
taking VBG taking ^ OK
the DT the ^ OK
actual JJ actual ^ OK
initiative NN initiative ^ OK
and CC and ^ OK
lying VBG ^ ^ repeat
lying VBG lying ^ OK
about IN about ^ OK
something NN something ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
that DT that arg1 OK
i PRP ^ ^ repeat
's BES 's predicate OK
a DT a arg2 OK
sin NN sin arg2 OK
to IN to arg2 OK
me PRP me arg2 OK

because IN ^ ^ filler
i PRP ^ ^ repeat
well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
not RB ^ ^ repeat
not RB ^ ^ repeat
not RB not arg2 OK
good JJ good arg2 OK
at IN at arg2 OK
lying VBG lying arg2 OK
anyway RB anyway arg2 OK

but CC but ^ OK
i PRP ^ ^ repeat
like UH ^ ^ filler
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
not RB ^ ^ repeat
too RB ^ ^ repeat
not RB not arg2 OK
even RB even arg2 OK
big JJ big arg2 OK
on IN on arg2 OK
things NNS things arg2 OK
like IN like arg2 OK
when WRB when arg2 OK
like IN ^ ^ filler
if IN ^ ^ false_start
my PRP my arg0 OK
mom NN mom arg0 OK
lies VBZ lies arg2 OK
in IN ^ ^ repeat
like UH ^ ^ filler
a DT a arg1 OK
stupid JJ stupid arg1 OK
lie NN lie arg1 OK

and CC ^ ^ false_start
she PRP ^ ^ false_start
's BES ^ ^ false_start
not RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
many JJ many ^ OK
times NNS times ^ OK
has VBZ has ^ OK
she PRP she arg0 OK
done VBN done predicate OK
that DT that arg1 OK
to IN to arg2 OK
me PRP me arg2 OK
then RB ^ ^ filler

you PRP ^ ^ filler
know VBP ^ ^ filler
how WRB how ^ OK
many JJ many ^ OK
times NNS times ^ OK
has VBZ has ^ OK
she PRP she arg0 OK
lied VBN lied predicate OK
to IN to arg2 OK
me PRP me arg2 OK
and CC and ^ OK
then RB then ^ OK
said VBN ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
said VBN said predicate OK
she PRP she arg0 OK
did VBD did arg1 OK
n't RB n't arg1 OK
tell VB tell arg1 OK
someone NN someone arg2 OK
something NN something arg1 OK
when WRB when arg1 OK
she PRP she arg0 OK
did VBD did arg1 OK

um UH ^ ^ filler
but CC but ^ OK
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
the DT the ^ OK
court NN court ^ OK
system NN system ^ OK
goes VBZ goes ^ OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK

i PRP i arg0 OK
still RB still ^ OK
think VBP think predicate OK
i PRP ^ ^ repeat
i PRP i arg1 OK
would MD ^ ^ repeat
would MD would arg1 OK
also RB also arg1 false_start
be VB ^ ^ repeat
be VB be arg1 OK
afraid JJ afraid arg2 OK
but CC ^ ^ false_start
to XX ^ ^ false_start
of IN of arg2 OK
getting VBG getting arg2 OK
caught VBN caught arg2 OK

my PRP ^ ^ repeat
um UH ^ ^ filler
my PRP my ^ OK
friend NN ^ ^ repeat
^ ^ friend ^ OK
melissa NNP melissa arg0 OK
caught VBD caught predicate OK
her PRP her arg1 OK
boyfriend NN boyfriend arg1 OK
cheating VBG cheating arg1 OK
on IN on arg2 OK
her PRP her arg2 OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start
and CC and ^ OK
decided VBD decided predicate OK
to TO to arg1 OK
key VB key arg1 OK
his PRP his arg1 OK
car NN car arg1 OK

and CC ^ ^ false_start
he PRP he arg0 OK
figured VBD figured predicate OK
it PRP it arg1 OK
out RP out ^ OK
that IN that arg1 OK
it PRP it arg1 OK
was VBD was arg1 OK
her PRP her arg2 OK

so RB ^ ^ false_start
he PRP he arg0 OK
was VBD was ^ OK
taking VBG taking predicate OK
her PRP her arg1 OK
to IN to argM_loc OK
small JJ small argM_loc OK
claims NNS claims argM_loc OK
court NN court argM_loc OK

and CC ^ ^ false_start
she PRP she arg0 OK
wanted VBD wanted predicate OK
me PRP me arg0 OK
to TO to arg1 OK
lie VB lie arg1 OK
saying VBG by ^ OK
saying VBG saying predicate OK
that IN that arg1 OK
she PRP she arg0 OK
had VBD had arg1 OK
keyed VBN keyed arg1 OK
his PRP his arg1 OK
car NN car arg1 OK
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
why WRB ^ ^ false_start
she PRP ^ ^ false_start
wanted VBD ^ ^ false_start
me PRP ^ ^ false_start
to TO ^ ^ false_start
say VB ^ ^ false_start
this DT ^ ^ false_start
in ADVP-PRP- 2 in argM_loc OK
front IN front argM_loc OK
of NN of argM_loc OK
his IN his argM_loc OK
house PRP house argM_loc OK
when NN when ^ OK
she WRB she arg0 OK
had PRP had ^ OK
actually VBD actually ^ OK
done RB done predicate OK
it VBN it arg1 OK
at PRP ^ ^ repeat
at NN at argM_loc OK
school IN ^ ^ repeat
college IN college argM_loc OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
did VBD did ^ OK
n't RB n't argM_neg OK
end VB end predicate OK
up RP up ^ OK
going VBG going arg2 OK
for IN for arg2 OK
her PRP her arg2 OK
at RB at arg2 OK
all RB all arg2 OK

i PRP i arg0 OK
did VBD did predicate OK
n't RB n't ^ OK
so IN so ^ OK
that IN that ^ OK
i PRP i arg1 OK
did VBD did predicate OK
n't RB n't ^ OK
have VB have arg1 OK
to TO to arg1 OK
worry VB worry arg1 OK
about IN about arg0 OK
what WP what arg1 OK
i PRP i arg0 OK
was VBD was arg0 OK
going VBG going arg0 OK
to TO to arg0 OK
say VB say arg0 OK

i PRP i arg0 OK
told VBD told predicate OK
her PRP her arg2 OK
i PRP i arg0 OK
did VBD did arg1 OK
n't RB n't argM_neg OK
think VB think arg1 OK
it PRP it arg1 OK
was SBAR-1 was arg1 OK
appropriate VBD appropriate arg2 OK
for JJ for arg2 OK
me IN me arg0 OK
to PRP to arg2 OK
lie TO lie arg2 OK

and CC ^ ^ false_start
even RB even ^ OK
though IN though ^ OK
i PRP ^ ^ OK
i PRP i ^ OK
wanted VBD wanted ^ OK
to TO to ^ OK
help VB help ^ OK
her PRP her ^ OK
out RP out ^ OK
wa- XX wa- ^ OK

i PRP i arg1 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
why WRB why arg2 OK
it PRP it arg0 OK
would SBAR-4 would arg2 OK
make MD make arg2 OK
a VB a arg1 OK
difference DT difference arg1 OK
where NN where arg1 OK
she WRB she arg0 OK
keyed PRP keyed arg1 OK
the VBN the arg1 OK
car DT car arg1 OK

but CC but ^ OK
i PRP i arg1 OK
did VBD did ^ OK
n't RB n't argM_neg OK
end VB end predicate OK
up RP up ^ OK
going VBG going arg2 OK
because IN because ^ OK
i PRP i arg0 OK
felt VBD felt predicate OK
like IN like arg1 OK
number NN ^ ^ false_start
one CD ^ ^ false_start
i PRP ^ arg1 repeat
i PRP i arg0 OK
did VBD ^ arg1 repeat
did VBD did arg1 OK
n't- RB ^ arg1 repeat
n't RB n't argM_neg OK
want VB want arg1 OK
to TO to arg1 OK
get VB get arg1 OK
in IN in arg1 OK
trouble NN trouble arg1 OK
for IN for arg3 OK
it PRP it arg3 OK

i PRP i arg0 OK
guess VBP guess predicate OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
think VB think arg1 OK
i PRP i arg0 OK
would MD would arg1 OK
lie VB lie arg1 OK
about IN about arg1 OK
it PRP it arg1 OK

r- UH ^ ^ repeat
right UH right ^ OK

i PRP i ^ OK
guess VBP guess ^ OK
being VBG being ^ OK
in IN in ^ OK
the DT the ^ OK
situation NN situation ^ OK
depending VBG depending ^ OK
on IN on ^ OK
what WP what ^ OK
it PRP it ^ OK
is VBZ is ^ OK
because NP-PRD-1 because ^ OK

i IN ^ ^ false_start
do PRP ^ ^ false_start
n't VBP ^ ^ false_start
when RB when ^ OK
i WRB i arg0 OK
hear PRP hear predicate OK
the VBP the arg1 OK
word DT word arg1 OK
perjury NN perjury arg1 OK
you NN ^ ^ filler
know ADVP-TMP- 2 ^ ^ OK
i- PRP ^ ^ repeat
it VBP it arg0 OK
makes PRP makes predicate OK
me PRP me arg0 OK
think VBZ think arg1 OK
of PRP of arg1 OK
lying VB lying arg1 OK
in IN in argM_loc OK
court VBG court argM_loc OK

and CC ^ ^ false_start
also RB ^ ^ false_start
also RB ^ ^ repeat
the DT ^ ^ false_start
other JJ ^ ^ false_start
person NN ^ ^ false_start
not RB ^ ^ false_start
like UH ^ ^ filler
even RB ^ ^ false_start
its XX ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
because IN ^ ^ false_start
people NNS people ^ OK
commit VBP commit ^ OK
crimes NNS crimes ^ OK
all PDT all ^ OK
the DT the ^ OK
time NN time ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
how WRB how arg1 OK
do VBP do ^ OK
their PRP their arg0 OK
family NN family arg0 OK
members NNS members arg0 OK
feel VB feel predicate OK

when WRB ^ ^ repeat
when WRB when ^ OK
is VBZ is ^ OK
there EX there ^ OK

well UH ^ ^ filler
now RB ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
too RB ^ ^ repeat
too RB too arg2 OK
big JJ big arg2 OK
of IN of arg2 OK
a DT a arg2 OK
risk NN risk arg2 OK

kind RB kind ^ OK
of RB of ^ OK
a DT a ^ OK
loading VBG loading ^ OK
me PRP me ^ OK
upward RB upward ^ OK

that DT that arg1 OK
's BES 's predicate OK
why WRB why arg2 OK
with IN with ^ OK
my PRP my ^ OK
friend NN friend ^ OK
melissa NNP melissa ^ OK
i PRP i arg0 OK
completely RB completely ^ OK
was VBD ^ ^ false_start
like RP said predicate filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
'm VBP 'm arg1 OK
not RB not arg1 OK
even RB even arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
go VB go arg1 OK
with IN with arg1 OK
you PRP you arg1 OK
to IN to arg4 OK
court NN court arg4 OK
because IN because arg1 OK
i PRP i arg1 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
want VB want arg1 OK
to TO to arg1 OK
be VB be arg1 OK
put VBN put arg1 OK
in IN in argM_loc OK
that DT that argM_loc OK
position NN position argM_loc OK

and CC and ^ OK
uh UH uh ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
watch VBP watch ^ OK
the DT the ^ OK
um UH ^ ^ filler
survivor NNP survivor ^ OK
show NN show ^ OK
particularly RB particularly ^ OK

and CC ^ ^ false_start
di- VBD ^ ^ repeat
did VBD did ^ OK
you PRP you ^ OK
watch VB watch ^ OK
the DT the ^ OK
survivor NNP survivor ^ OK
shows NNS shows ^ OK

i PRP i ^ OK
watched VBD ^ ^ repeat
eh UH ^ ^ filler
wa- VBD ^ ^ repeat
wa- VBD ^ ^ repeat
watched VBN watched ^ OK
the DT ^ ^ repeat
the DT the ^ OK
ba- NNP ^ ^ repeat
bachelor NN bachelor ^ OK
shows NNS shows ^ OK
because IN because ^ OK
my PRP ^ ^ repeat
my PRP ^ ^ false_start
i PRP i ^ OK
have VBP have ^ OK
two CD two ^ OK
teenaged JJ teenaged ^ OK
daughters NNS daughters ^ OK

well UH ^ ^ false_start
you PRP you ^ OK
know VBP know ^ OK
where WRB where ^ OK
sacramento NNP sacramento ^ OK
is VBZ is ^ OK
do ADVP-LOC- PRD-1 do ^ OK
n't VBP n't ^ OK
you RB you ^ OK

just RB ^ ^ filler
about RB about ^ OK
forty CD forty ^ OK
minutes NNS minutes ^ OK
from IN ^ ^ repeat
from IN from ^ OK
s- NNP ^ ^ repeat
uh UH ^ ^ filler
sacramento NNP sacramento ^ OK
to IN to ^ OK
the DT the ^ OK
uh UH ^ ^ filler
south NN south ^ OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

yeah UH ^ ^ false_start
eh UH ^ ^ filler
uh UH ^ ^ filler
survivor NNP survivor ^ OK
is VBZ is ^ OK
my PRP my ^ OK
favorite JJ favorite ^ OK
one CD one ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
watched VBN watched ^ OK
like UH ^ ^ filler
the DT the ^ OK
um UH ^ ^ filler
american NNP american ^ OK
idol NNP idol ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
watch VBP ^ ^ repeat
watched VBD watched ^ OK
that DT that ^ OK
with IN with ^ OK
my PRP my ^ OK
teenage JJ teenage ^ OK
daughters NNS daughters ^ OK

oh UH ^ ^ filler
now RB now ^ OK
that IN that ^ OK
they PRP they ^ OK
've VBP 've ^ OK
got VBN got ^ OK
that DT that ^ OK
one CD one ^ OK
where WRB where ^ OK
the DT the ^ OK
girl NN girl ^ OK
's BES 's ^ OK
picking VBG picking ^ OK
the DT the ^ OK
guys NNS guys ^ OK

the DT the ^ OK
eh UH ^ ^ filler

i PRP ^ ^ repeat
i PRP i ^ OK
kind RB kind ^ OK
of RB of ^ OK
like VBP like ^ OK
them PRP them ^ OK
because IN because ^ OK
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
change NN change ^ OK
of IN of ^ OK
pace NN pace ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
from IN from ^ OK
the DT the ^ OK
typical JJ typical ^ OK
sit-coms NNS sit-coms ^ OK
and CC and ^ OK
news NN news ^ OK
shows NNS shows ^ OK
and CC and ^ OK
magazine NN magazine ^ OK
shows NNS shows ^ OK
that DT ^ ^ false_start
kind NN ^ ^ false_start
of IN ^ ^ false_start
thing NN ^ ^ false_start

just RB ^ ^ repeat
just RB just ^ OK
something NN something ^ OK
for IN for ^ OK
entertainment NN entertainment ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
there EX there ^ OK
's BES 's ^ OK
another DT another ^ OK
one CD one ^ OK
out RB out ^ OK
eh UH ^ ^ filler
now RB now ^ OK

oh UH ^ ^ filler
that DT that ^ OK
one NN one ^ OK
that WDT ^ ^ false_start
w- WRB ^ ^ false_start
where WRB where ^ OK
he PRP he ^ OK
's BES 's ^ OK
supposed VBN supposed ^ OK
to TO to ^ OK
be VB be ^ OK
worth JJ worth ^ OK
fifty CD fifty ^ OK
million CD million ^ OK
dollars NNS dollars ^ OK

he PRP ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
they PRP they ^ OK
showed VBD showed ^ OK
on IN on ^ OK
the DT the ^ OK
preview NN preview ^ OK
that IN that ^ OK
he PRP ^ ^ repeat
he PRP he ^ OK
slipped VBD slipped ^ OK
and CC and ^ OK
let- VBZ ^ ^ repeat
lets VBZ lets ^ OK
it PRP it ^ OK
out RB out ^ OK
the IN ^ ^ false_start
he PRP ^ ^ false_start
used VBD ^ ^ false_start
to TO ^ ^ false_start
be VB ^ ^ false_start
a DT ^ ^ false_start
or UH ^ ^ false_start
that IN that ^ OK
he PRP he ^ OK
was VBD was ^ OK
um UH ^ ^ filler
what WP ^ ^ false_start
is VBZ ^ ^ false_start
it PRP ^ ^ false_start
a NP-PRD-2 a ^ OK
crane DT crane ^ OK
operator NN operator ^ OK
or NN ^ ^ repeat
or CC or ^ OK
a CC a ^ OK
bulldozer DT bulldozer ^ OK
operator NN operator ^ OK
or NN or ^ OK
something CC something ^ OK
like NN like ^ OK
that IN that ^ OK

it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's HVS 's ^ OK
a- RB ^ ^ repeat
almost RB almost ^ OK
done VBN done ^ OK
because IN because ^ OK
i PRP i ^ OK
think VBP think ^ OK
he PRP he ^ OK
blew VBD blew ^ OK
it PRP it ^ OK
and CC and ^ OK
everybody NN everybody ^ OK
knows VBZ knows ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
kind RB kind ^ OK
of RB of ^ OK
looking VBG looking ^ OK
forward RB forward ^ OK
to IN to ^ OK
seeing VBG seeing ^ OK
the DT the ^ OK
amazon NNP amazon ^ OK
one NN one ^ OK
though RB though ^ OK

just RB ^ ^ false_start
to TO ^ ^ false_start
i PRP ^ ^ filler
guess VBP ^ ^ filler
they PRP they ^ OK
got VBD got ^ OK
the DT the ^ OK
guys NNS guys ^ OK
against IN against ^ OK
the DT the ^ OK
girls NNS girls ^ OK
this DT this ^ OK
time NN time ^ OK
which WDT which ^ OK
is VBZ is ^ OK
something NN something ^ OK
different JJ different ^ OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

eh UH ^ ^ filler
i PRP ^ ^ false_start
'd MD ^ ^ false_start
i PRP ^ ^ false_start
'd MD ^ ^ false_start
really RB ^ ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
always RB always ^ OK
kind RB kind ^ OK
of RB of ^ OK
wanted VBN wanted ^ OK
to TO to ^ OK
go VB go ^ OK
there RB there ^ OK
myself PRP myself ^ OK

so RB so ^ OK
i- IN ^ ^ repeat
i- IN ^ ^ repeat
in IN in ^ OK
a DT a ^ OK
way NN way ^ OK
it PRP it ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
like IN like ^ OK
getting VBG getting ^ OK
to TO to ^ OK
see VB see ^ OK
what WP what ^ OK
it PRP it ^ OK
's BES 's ^ OK
like IN like ^ OK
a NP-1 a ^ OK
little DT little ^ OK
bit JJ bit ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
k- XX ^ ^ false_start
pretty RB pretty ^ OK
much RB much ^ OK
what WP what ^ OK
i PRP i ^ OK
like VBP like ^ OK
about IN about ^ OK
it PRP it ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
one CD one ^ OK
where WRB where ^ OK
they PRP they ^ OK
were VBD were ^ OK
l- XX ^ ^ false_start
on IN ^ ^ repeat
on IN on ^ OK
the DT the ^ OK
island NN island ^ OK
i ADVP-2 i ^ OK
thought PRP thought ^ OK
that VBD that ^ OK
was DT was ^ OK
kind VBD kind ^ OK
of RB of ^ OK
neat RB neat ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
wa- VBD ^ ^ repeat
was VBD was ^ OK
mad JJ mad ^ OK
that IN that ^ OK
richard NNP richard ^ OK
won VBD won ^ OK

but CC but ^ OK
what WP what ^ OK
the DT the ^ OK
heck NN heck ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
when WRB when ^ OK
it PRP it ^ OK
's BES 's ^ OK
on RB on ^ OK
we ADVP-TMP- 1 we ^ OK
all PRP all ^ OK
have DT have ^ OK
to VBP to ^ OK
watch TO watch ^ OK
it VB it ^ OK

i PRP ^ ^ false_start
kno- VBP ^ ^ false_start
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
believe VB believe ^ OK
it PRP it ^ OK
at IN at ^ OK
first JJ first ^ OK
either RB either ^ OK

um UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know ^ OK
why WRB why ^ OK
they PRP they ^ OK

it PRP it ^ OK
was VBD was ^ OK
um UH ^ ^ filler
turf NN turf ^ OK
club NN club ^ OK
in IN in ^ OK
um UH ^ ^ filler
s- NNP ^ ^ repeat
center NNP center ^ OK
city NNP city ^ OK

mm UH ^ ^ filler
when WRB when ^ OK
it PRP it ^ OK
was VBD was ^ OK
c- VBN ^ ^ false_start
fully RB fully ^ OK
cooked VBN cooked ^ OK
it ADVP-TMP- 2 it ^ OK
was PRP was ^ OK
pretty VBD pretty ^ OK
good RB good ^ OK

it PRP it ^ OK
depend VBP depended ^ false_start
on IN on ^ OK
who WP who ^ OK
cooking VBG was ^ false_start
cooking VBG cooking ^ OK

that DT that ^ OK
's BES 's ^ OK
probably RB probably ^ OK

ever- RB ^ ^ repeat
everywhere RB everywhere ^ OK
now RB now ^ OK

they PRP ^ ^ false_start
that WDT ^ ^ false_start
not RB ^ ^ false_start
that DT ^ ^ false_start
high JJ ^ ^ false_start
the DT the ^ false_start
chinese JJ chinese ^ false_start
restaurants NNS restaurants ^ false_start
about RB are ^ false_start
about RB about ^ OK
the DT the ^ OK
f- RB ^ ^ repeat
few JJ few ^ OK
restaurants NNS restaurants ^ OK
out RB out ^ OK
there RB there ^ OK
that WDT that ^ OK
do VBP do ^ OK
n't RB n't ^ OK

i PRP i ^ OK
drunk JJ drunk ^ OK

so UH so ^ OK
i PRP i ^ OK
drunk VBD drunk ^ OK
about RB about ^ OK
two CD two ^ OK
more JJR more ^ OK

ye- UH ^ ^ repeat
yeah UH yeah ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
really RB really arg2 OK
about IN about arg2 OK
it PRP all arg2 false_start
i PRP i arg0 OK
can MD can arg2 OK
think VB think arg2 OK
of IN of arg1 OK

and CC ^ ^ false_start
what WP what ^ OK
about IN about ^ OK
you PRP you ^ OK

i- UNK ^ ^ repeat
g- UNK ^ ^ repeat
see UNK see ^ OK

well UH well ^ OK
and CC ^ ^ repeat
see UH ^ ^ repeat
and CC ^ ^ repeat
i PRP i arg0 OK
do VBP do predicate OK
that DT that arg1 OK
inside RB inside argM_loc OK

i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
got VBD got predicate OK
a DT a arg1 OK
treadmill NN treadmill arg1 OK

so UH so ^ OK
it PRP it ^ OK
's BES 's ^ OK

well UH well ^ OK
and CC ^ ^ false_start
the DT the arg0 OK
weather NN weather arg0 OK
restricts VBZ restricts predicate OK
you PRP you arg1 OK
too RB too ^ OK
because IN because ^ OK
i PRP i arg0 OK
used VBD used ^ OK
to TO to ^ OK
walk VB walk predicate OK
outside RB outside argM_loc OK
with IN with ^ OK
my PRP my ^ OK
daughter NN daughter ^ OK
at IN at ^ OK
six CD six ^ OK
a. NN a. ^ OK
m. NNP m. ^ OK
in IN in ^ OK
the DT the ^ OK
morning NN morning ^ OK
when WRB when ^ OK
she PRP she arg1 OK
was VBD was predicate OK
in IN in arg2 OK
high JJ high arg2 OK
school NN school arg2 OK

and CC ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
it PRP ^ ^ repeat
the DT the arg1 OK
it PRP ^ ^ repeat
weather NN weather arg1 OK
is VBZ is predicate OK
just RB just ^ OK
so RB so arg2 OK
unpredictable JJ unpredictable arg2 OK
and CC and ^ OK
can MD can ^ OK
be VB be predicate OK
so RB so arg2 OK
hot JJ hot arg2 OK
and CC and arg2 OK
sticky JJ sticky arg2 OK
or CC or arg2 OK
cold JJ cold arg2 OK
and CC and arg2 OK
rainy JJ rainy arg2 OK

so UH so ^ OK
and CC ^ ^ false_start
on IN on ^ OK
days NNS days ^ OK
that WDT that arg1 OK
i PRP i arg0 OK
have VBP have ^ OK
happened VBN happened ^ OK
to TO to ^ OK
miss VB miss predicate OK
i NP-1 ^ ^ repeat
i PRP i arg1 OK
make PRP make predicate OK
it VBP it arg1 OK
up PRP up arg_particl OK
on RP on ^ OK
one IN one ^ OK
of CD of ^ OK
the IN the ^ OK
other DT other ^ OK
days JJ days ^ OK
and NNS and ^ OK
go CC go predicate OK
longer VBP longer arg2 OK
on RBR on argM_loc OK
the IN the argM_loc OK
treadmill DT treadmill argM_loc OK

so UH so ^ OK
well UH well ^ OK
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's ^ OK
is VBZ ^ predicate repeat
where WRB where arg2 OK
i PRP i arg0 OK
squeeze VBP squeeze arg2 OK
it PRP it arg1 OK
in RP in arg2 OK
too RB too ^ OK
though RB though ^ OK

that DT that arg1 OK
's BES 's predicate OK
kind RB kind ^ OK
of RB of ^ OK
my PRP my arg2 OK
end NN end arg2 OK
of IN of arg2 OK
the DT the arg2 OK
day NN day arg2 OK

and CC ^ ^ false_start
just RB ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
how WRB how arg2 OK
i PRP i arg0 OK
fit VBP fit arg2 OK
it PRP it arg1 OK
in RB in arg2 OK
because ADVP-1 because ^ OK
i IN i arg0 OK
tape PRP tape predicate OK
all VBP all arg1 OK
my PDT my arg1 OK
programs PRP programs arg1 OK
so NNS so ^ OK
that IN that ^ OK
that IN while ^ false_start
you IN ^ ^ filler
know PRP ^ ^ filler
i VBP i arg0 OK
'm PRP 'm ^ OK
doing VBP doing predicate OK
it VBG it arg1 OK
th- PRP ^ ^ repeat
that DT ^ ^ false_start
time DT ^ ^ false_start
when NN ^ ^ false_start
i WRB ^ ^ repeat
i PRP i arg0 OK
get PRP get predicate OK
to VBP to arg1 OK
watch TO watch arg1 OK
two VB ^ ^ repeat
two-and-a-half CD two-and-a-hal f  arg1 OK
hours CD hours arg1 OK
in NNS in arg1 OK
the IN the arg1 OK
hour DT hour arg1 OK
and NN and arg1 OK
forty CC forty arg1 OK
minute CD minute arg1 OK
time NN time arg1 OK
frame NN frame arg1 OK
because NN because ^ OK
you IN you arg0 OK
do PRP do ^ OK
n't VBP n't ^ OK
have RB have predicate OK
the VB the arg1 OK
commercials DT commercials arg1 OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
is S-1 is ^ OK
difficult VBZ difficult ^ OK
to JJ to ^ OK
do TO do ^ OK
in VB in ^ OK

and CC ^ ^ false_start
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
the DT the ^ OK
way NN way ^ OK
i PRP i ^ OK
do VBP do ^ OK
it PRP it ^ OK
i ADVP-1 ^ ^ repeat
because PRP because ^ OK
it IN it ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
remember VBP ^ ^ repeat
remember VBP remember predicate OK
when WRB when arg1 OK
we PRP we arg0 OK
were VBD were arg1 OK
both DT both arg1 OK
working VBG working arg1 OK
and ADVP-TMP- 1 and ^ OK
and ADVP-TMP- 1 at argM_tmp false_start
um CC ^ ^ filler
six UH six argM_tmp OK
a. CD a. argM_tmp OK
m. NNP m. argM_tmp OK
in NNP in argM_tmp OK
the IN the argM_tmp OK
morning DT morning argM_tmp OK
you NN ^ ^ filler
know PRP ^ ^ filler
we VBP we arg1 OK
'd PRP 'd ^ OK
be MD be predicate OK
at VB at arg2 OK
the IN the arg2 OK
uh DT ^ ^ filler
bally UH bally arg2 OK
workout NNP workout arg2 OK
center NN center arg2 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it arg1 OK
's BES ^ ^ repeat
's S-NOM-1 's predicate OK
a BES a arg2 OK
lot DT lot arg2 OK
nicer NN nicer arg2 OK
having JJR having arg2 OK
it VBG it arg1 OK
in PRP in arg1 OK
your IN your arg1 OK
house PRP house arg1 OK
and NN and arg2 OK
having CC having arg2 OK
a VBG a arg1 OK
little DT little arg1 OK
flexibility JJ flexibility arg1 OK
of NN ^ ^ filler
you IN ^ ^ filler
know PRP ^ ^ filler
if VBP if arg2 OK
i IN i arg1 OK
get PRP get arg2 OK
there VBP there arg2 OK
a RB a argM_tmp OK
little DT little argM_tmp OK
bit JJ bit argM_tmp OK
later NN later argM_tmp OK
than RBR than argM_tmp OK
i IN i argM_tmp OK
normally PRP normally argM_tmp OK
do RB do argM_tmp OK

you PRP ^ ^ filler
know VBP ^ ^ filler
or CC ^ ^ false_start
sometimes RB sometimes ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
we PRP we arg1 OK
go VBP go predicate OK
out RB out arg4 OK
and CC and ^ OK
it PRP it arg1 OK
's BES 's predicate OK
twelve CD twelve arg2 OK
midnight NN midnight arg2 OK
i PRP i arg1 OK
'm VBP 'm predicate OK
on IN on arg2 OK
the DT the arg2 OK
treadmill NN treadmill arg2 OK
at IN at argM_tmp OK
twelve CD twelve argM_tmp OK
midnight NN midnight argM_tmp OK

so UH ^ ^ false_start
you PRP you arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
do VB do predicate OK
that DT that arg1 OK
when WRB when ^ OK
you PRP you arg1 OK
're VBP 're ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
restricted VBN restricted predicate OK
either RB either ^ OK
outside RB outside arg2 OK
or CC or ^ OK
restricted VBN restricted predicate OK
restricted VBN in ^ false_start
going VBG going predicate OK
to IN to arg2 OK
a DT ^ ^ repeat
um UH ^ ^ filler
a DT a arg2 OK
workout NN workout arg2 OK
center NN center arg2 OK

we PRP we arg0 OK
do VBP do predicate OK
th- DT ^ ^ repeat
those DT those arg1 OK
on IN on argM_tmp OK
vacation NN vacation argM_tmp OK
in IN in argM_loc OK
the DT the argM_loc OK
car NN car argM_loc OK

so UH ^ ^ repeat
so UH ^ ^ false_start
p- XX ^ ^ repeat
did VBD did ^ OK
you PRP ^ ^ repeat
you PRP ^ ^ repeat
you PRP you arg0 OK
said VBD ^ ^ repeat
say VB say predicate OK
football NN football arg1 OK

or CC ^ ^ repeat
or CC or ^ OK
we PRP we arg0 OK
do VBP do predicate OK
board NN board arg1 OK
games NNS games arg1 OK

we PRP we arg0 OK
have VBP have predicate OK
air NN an ^ false_start
air NN air arg1 OK
hockey NN hockey arg1 OK
table NN table arg1 OK

but CC but ^ OK
if IN ^ ^ repeat
if IN if ^ OK
inside IN inside ^ OK
your PRP your ^ OK
home NN home ^ OK

a- IN ^ arg1 repeat
although IN although ^ OK
i PRP i arg0 OK
g- VBP ^ ^ repeat
think VBP think predicate OK
inside RB by ^ false_start
inside RB inside arg1 OK
they PRP they arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
necessarily RB necessarily arg1 OK
mean VB mean arg1 OK
in IN in arg1 OK
your PRP your arg1 OK
home NN home arg1 OK

they PRP ^ ^ repeat
they PRP they arg0 OK
could MD could ^ OK
mean VB mean predicate OK
going VBG going arg1 OK
out RB out arg2 OK
to IN to arg2 OK
say UH say arg2 OK
like UH ^ ^ filler
a DT a arg2 OK
roller NN roller arg2 OK
skating NN skating arg2 OK
rink NN rink arg2 OK
or CC or arg2 OK
something NN something arg2 OK
like IN like arg2 OK
that DT that arg2 OK
where WRB where arg2 OK
you PRP you arg1 OK
're VBP 're arg2 OK
inside RB inside arg2 OK

what WP what ^ OK
if IN if ^ OK
it PRP it ^ OK
were VBD were ^ OK
five CD five ^ OK
million CD million ^ OK

i PRP i ^ OK
might MD might ^ OK
for IN for ^ OK
five CD five ^ OK
million CD million ^ OK
because IN because ^ OK
then RB then ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
can MD can ^ OK
live VB live ^ OK
at IN ^ ^ repeat
at IN at ^ OK
a DT ^ ^ repeat
a DT a ^ OK
level NN level ^ OK
of IN of ^ OK
comfort NN comfort ^ OK
eh UH ^ ^ filler
uh UH ^ ^ filler
that DT that ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
might MD ^ ^ repeat
might MD might ^ OK
make VB ^ ^ repeat
make VB make ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
doable JJ doable ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
true JJ true ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
true JJ true ^ OK

my PRP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
sure JJ ^ ^ false_start
my PRP ^ ^ false_start
dad NN ^ ^ false_start
we PRP ^ ^ repeat
i PRP i ^ OK
have VBP ^ ^ repeat
have VBP have ^ OK
a DT ^ ^ repeat
a DT a ^ OK
six CD six ^ OK
year NN year ^ OK
old JJ old ^ OK
niece NN niece ^ OK

it PRP it ^ OK
's BES 's ^ OK
not RB ^ ^ repeat
not RB not ^ OK
the DT the ^ OK
same JJ same ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
be VB be ^ OK
tempted VBN tempted ^ OK
too RB too ^ OK

but CC but ^ OK
eh UH eh ^ OK

and CC ^ ^ false_start
especially RB especially ^ OK
for IN ^ ^ repeat
for IN for ^ OK
a DT a ^ OK
million CD million ^ OK

eh UH ^ ^ filler
they PRP they ^ OK
do VBP do ^ OK
n't RB n't ^ OK
tell VB tell ^ OK
you PRP you ^ OK
if IN if ^ OK
it PRP it ^ OK
's BES 's ^ OK
before IN before ^ OK
taxes NNS taxes ^ OK

after IN after ^ OK
if NP if ^ OK
you IN you ^ OK
have PRP have ^ OK
to VBP to ^ OK
pay TO pay ^ OK
foreign VB foreign ^ OK
taxes JJ taxes ^ OK
or NNS or ^ OK
what CC what ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i ^ OK
doubt VBP doubt ^ OK
any DT any ^ OK
amount NN amount ^ OK
would MD would ^ OK
be VB be ^ OK

that DT that ^ OK
's BES 's ^ OK
it PRP it ^ OK
probably RB probably ^ OK

and CC ^ ^ false_start
the DT ^ ^ repeat
and CC ^ ^ false_start
the DT the ^ OK
question NN question ^ OK
was VBD was ^ OK

well UH ^ ^ false_start
and CC ^ ^ false_start
the DT the ^ OK
question NN question ^ OK
was VBD was ^ OK
you PRP you ^ OK
could MD could ^ OK
never RB never ^ OK
come VB come ^ OK
back RB back ^ OK

have VBP ^ ^ false_start
you PRP ^ ^ false_start
visit- VBN ^ ^ false_start
have VBP have ^ OK
you PRP you ^ OK
been VBN been ^ OK
able JJ able ^ OK
to TO to ^ OK
travel VB travel ^ OK
uh UH ^ ^ filler
in IN in ^ OK
your PRP your ^ OK
lifetime NN lifetime ^ OK

is VBZ is ^ OK
there RB there ^ OK
any DT any ^ OK
place NN place ^ OK
that WDT that ^ OK
is VBZ is ^ OK
your PRP your ^ OK
favorite NN favorite ^ OK
where WRB where ^ OK
you PRP you ^ OK
cou- MD cou- ^ OK

we- XX we- ^ OK

li- XX ^ ^ false_start
li- XX ^ ^ false_start
i PRP i ^ OK
found VBD found ^ OK
a DT a ^ OK
great JJ great ^ OK
um UH ^ ^ filler
cruise NN cruise ^ OK
bargain NN bargain ^ OK
on VP-1 on ^ OK
the IN the ^ OK
internet DT internet ^ OK
this NNP this ^ OK
summer DT summer ^ OK
uh NN ^ ^ filler
leaving UH leaving ^ OK
from VBG from ^ OK
philadelphia IN philadelphia ^ OK
going NNP going ^ OK
to VBG to ^ OK
bermuda IN bermuda ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
me PRP me ^ OK
and CC and ^ OK
five CD five ^ OK
of IN of ^ OK
my PRP my ^ OK
family NN family ^ OK
members NNS members ^ OK
all DT all ^ OK
went VBD went ^ OK
because IN because ^ OK
it PRP it ^ OK
was VBD was ^ OK
so RB so ^ OK
cheap JJ cheap ^ OK

eh UH ^ ^ filler
if IN if ^ OK
it PRP it ^ OK
had VBD had ^ OK
n't RB n't ^ OK
have VB have ^ OK
been VBN been ^ OK
i ADJP-PRD i ^ OK
do PRP do ^ OK
n't VBP n't ^ OK
think RB think ^ OK
we VB we ^ OK
would PRP would ^ OK
have MD have ^ OK
been VB been ^ OK
able VBN able ^ OK
to JJ to ^ OK
go TO go ^ OK
uh VB ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
on VBP on ^ OK
that IN that ^ OK
short RB short ^ OK
notice JJ notice ^ OK

but CC but ^ OK
we PRP we ^ OK
could MD could ^ OK
n't RB n't ^ OK
pass VB pass ^ OK
it PRP it ^ OK
up RP up ^ OK

new NNP new ^ OK
york NNP york ^ OK
or CC or ^ OK
where RB where ^ OK

you PRP you ^ OK
can MD can ^ OK
hey UH hey ^ OK

cruising UNK cruising ^ OK
has UNK has ^ OK
become UNK become ^ OK
so UNK so ^ OK
affordable UNK affordable ^ OK
and UNK and ^ OK
travel UNK travel ^ OK
in UNK in ^ OK
general UNK general ^ OK
that UNK that ^ OK
uh UNK ^ ^ filler
you UNK you ^ OK
can UNK can ^ OK
still UNK still ^ OK
travel UNK travel ^ OK

but CC ^ ^ false_start
now RB now ^ OK
all DT all ^ OK
i PRP i arg0 OK
need VBP need predicate OK
is NP-1 is arg1 OK
one VBZ one arg1 OK
tube CD tube arg1 OK
of NN of arg1 OK
blood IN blood arg1 OK
and NN ^ ^ repeat
a CC ^ ^ false_start
um DT ^ ^ filler
and UH ^ ^ repeat
um CC ^ ^ filler
and UH and arg1 OK
this CC this arg1 OK
night DT night arg1 OK
machine NN machine arg1 OK
and NN and arg1 OK
bloopsch CC bloopsch arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
just RB ^ ^ repeat
just RB just ^ OK
literally RB literally ^ OK
lay VBP lay predicate OK
back RB back arg2 OK
there RB there arg2 OK
and CC and ^ OK
listen VBP listen predicate OK
to IN to arg1 OK
a DT a arg1 OK
walkman NN walkman arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
and CC ^ ^ false_start
i PRP i arg0 OK
i PRP ^ ^ repeat
said VBD said ^ OK
said VBD ^ predicate repeat
well UH well arg1 OK
by IN by arg1 OK
the DT the arg1 OK
time NN time arg1 OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
thirty-five CD thirty-five arg2 OK
i ADVP-TMP- 1 i arg1 OK
'll PRP 'll arg1 OK
be MD ^ ^ repeat
be VB be arg1 OK
close VB close arg2 OK
to JJ to arg2 OK
retirement IN retirement arg2 OK

but CC ^ ^ false_start
uh UH uh ^ OK

a DT ^ ^ repeat
a DT a ^ OK
l- NN ^ ^ repeat
lot NN lot ^ OK
of IN of ^ OK
the DT the ^ OK
technology NN technology ^ OK
that WDT that ^ OK
they PRP they ^ OK

ooh UH ^ ^ filler
have VBP have ^ OK
you PRP you arg0 OK
seen VBN seen predicate OK
um UH ^ ^ filler
um UH ^ ^ filler
the DT the arg1 OK
the NNP ^ ^ false_start
new JJ new arg1 OK
um UH ^ ^ filler
what WP ^ ^ false_start
is VBZ ^ ^ false_start
it PRP ^ ^ false_start
intel NP-PRD-1 ^ ^ false_start
intel DT intel arg1 OK

ri- UH ^ ^ false_start
eh UH eh ^ OK

and CC ^ ^ false_start
and CC ^ ^ false_start
i PRP i ^ OK

because IN ^ ^ false_start
it PRP ^ ^ repeat
it PRP there ^ false_start
used VBD used ^ OK
to TO to ^ OK
be VB be predicate OK
a DT a arg1 OK
time NN time arg1 OK
that WDT that arg1 OK
you PRP you arg0 OK
had VBD had arg1 OK
to TO to arg1 OK
have VB have arg1 OK
your PRP your arg1 OK
cell NN cell arg1 OK
phone NN phone arg1 OK
at RB at arg1 OK
least RB least arg1 OK
with IN with arg1 OK
a DT a arg1 OK
laptop NN laptop arg1 OK
to TO to arg1 OK
make VB make arg1 OK
the DT the arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
actions NNS actions arg1 OK
and CC ^ ^ false_start
what WP ^ ^ false_start
have VBP ^ ^ false_start
you PRP ^ ^ false_start

but CC ^ ^ false_start
um UH ^ ^ filler
now UH ^ ^ repeat
now RB now ^ OK
they PRP they arg0 OK
just RB just ^ OK
have VBP have predicate OK
uh UH ^ ^ filler
uh UH ^ ^ filler
certain JJ certain arg1 OK
laptops NNS laptops arg1 OK
with IN with arg1 OK
intel NNP intel arg1 OK
in IN in arg1 OK
them PRP them arg1 OK

and CC ^ ^ false_start
as IN as ^ OK
a DT a ^ OK
matter NN matter ^ OK
of IN of ^ OK
fact NN fact ^ OK
it PRP it arg1 OK
was VBD was ^ OK
just RB just ^ OK
advertised VBN advertised predicate OK
on IN on argM_loc OK
t. NN t. argM_loc OK
v. NN v. argM_loc OK
jus- RB ^ ^ repeat
just RB just argM_tmp OK
yesterday NN yesterday argM_tmp OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
for IN for ^ false_start
what WP what arg1 OK

so UH ^ ^ false_start
uh UH ^ ^ filler
d- VBP ^ ^ false_start
uh UH ^ ^ filler
are VBP are predicate OK
you PRP you arg1 OK
into IN into arg2 OK
computers NNS computers arg2 OK
much RB much arg2 OK

well UH well ^ OK
not RB not ^ OK
really RB really ^ OK
because IN because ^ OK

see UH ^ ^ false_start
you PRP ^ ^ false_start
going VBG ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ repeat
s- RB ^ ^ false_start
you PRP you arg0 OK
still RB are ^ false_start
still RB still ^ OK
going VBG going ^ OK
to TO to ^ OK
have VB have ^ OK
to TO to ^ OK
utilize VB utilize predicate OK
accessories NNS accessories arg1 OK
um UH ^ ^ filler
um UH ^ ^ filler
for IN for arg1 OK
peripherals NNS peripherals arg1 OK
for IN ^ ^ repeat
for IN for arg1 OK
your PRP ^ ^ repeat
your PRP your arg1 OK
ports NNS ports arg1 OK

you PRP you arg0 repeat
you PRP ^ ^ OK
you PRP are ^ false_start
still RB still ^ repeat
still RB ^ ^ OK
going VBG going ^ repeat
going VBG ^ ^ OK
to TO to ^ repeat
to TO ^ ^ OK
nee- VB need ^ repeat
need VB ^ predicate OK
like UH ^ ^ filler
for IN ^ ^ false_start
printers NNS ^ ^ false_start
them PRP printers ^ false_start
scanners NNS ^ ^ false_start
them PRP scanners ^ false_start
printers NNS ^ arg1 false_start
scanners NNS ^ arg1 false_start
things NNS and ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
things NNS ^ arg1 false_start
them PRP things ^ false_start
like IN like arg1 false_start
that DT that arg1 false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ false_start
and CC ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
int- XX int- ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
just RB just ^ OK
a DT a ^ OK
whole JJ whole ^ OK
array NN array ^ OK
of IN of ^ OK
information NN information ^ OK
that WDT that ^ OK
's BES 's ^ OK
on IN on ^ OK
the DT the ^ OK
internet NN internet ^ OK
nowadays RB nowadays ^ OK
but CC but ^ OK
uh UH ^ ^ filler
one PRP one ^ OK
could MD could ^ OK
get VB get ^ OK
into IN into ^ OK

well UH ^ ^ filler
i- PRP ^ ^ repeat
i PRP i arg0 OK
know VBP know predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
cold JJ cold arg1 OK
outside RB outside arg1 OK
there RB there arg1 OK
now RB now argM_loc OK
huh UH ^ ^ filler

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
my PRP my arg1 OK
little JJ little arg1 OK
ten CD ten arg1 OK
minutes NNS minutes arg1 OK
is VBZ is arg1 OK
up RB up arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
this DT this arg1 OK
it PRP ^ ^ false_start
is VBZ is ^ OK
's BES ^ predicate repeat
not RB not arg2 OK
a DT a arg2 OK
bad JJ bad arg2 OK
thing NN thing arg2 OK

i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
i PRP i ^ OK
get VBP get ^ OK
something NN something ^ OK
like IN like ^ OK
three CD three ^ OK
calls NNS calls ^ OK
on IN on ^ OK
this DT this ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
they PRP they arg0 OK
but CC ^ ^ false_start
sometimes RB sometimes argM_tmp false_start
play VBP play predicate OK
too RB too ^ OK
much JJ much ^ OK
of IN of ^ OK
the DT the arg1 OK
same JJ same arg1 OK
stuff NN stuff arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
'm VBP 'm ^ OK
like RP thinking predicate false_start
oh UH oh arg1 OK
i PRP i arg0 OK
hate VBP hate arg1 OK
that DT that arg1 OK

so RB ^ arg1 filler
i PRP i arg0 OK
just RB just ^ OK
turn VBP turn predicate OK
to IN to arg1 OK
different JJ a ^ false_start
different JJ different arg1 OK
station NN station arg1 OK

i PRP ^ ^ repeat
c- XX ^ ^ false_start
i PRP i ^ OK
c- XX ^ ^ false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP ^ ^ repeat
like VBP like predicate OK
older JJR older arg1 OK
music NN music arg1 OK

my PRP ^ ^ repeat
my PRP my arg1 OK
whole JJ whole arg1 OK
thing NN thing arg1 OK
is VBZ is predicate OK
soul NN soul arg2 OK

i PRP i ^ OK
like UH ^ ^ filler

i- PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
in IN in arg2 OK
college NN college arg2 OK
now RB now argM_tmp OK

i PRP ^ ^ repeat
i PRP i arg0 OK
went VBD ^ ^ repeat
went VBD went predicate OK
to- IN ^ ^ repeat
to IN to arg1 OK
an DT ^ ^ repeat
an DT ^ ^ repeat
a DT a arg1 OK
perf- JJ ^ ^ repeat
performing JJ performing arg1 OK
arts NNS ^ ^ repeat
arts NNS arts arg1 OK
high JJ high arg1 OK
school NN ^ ^ repeat
school NN school arg1 OK

i PRP i arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
say VB say predicate OK
i PRP that ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD did arg1 OK
n't RB ^ ^ repeat
n't RB n't arg1 OK
like VB like arg1 OK
her PRP her arg1 OK

but CC ^ ^ false_start
m- JJ ^ ^ filler
with IN ^ ^ false_start
me PRP ^ ^ false_start
i- PRP ^ ^ repeat
i PRP i arg0 OK
wo MD wo ^ OK
n't RB n't ^ OK
listen VB listen predicate OK
to IN to arg1 OK
her PRP her arg1 OK
c. NN c. arg1 OK
d. NN d. arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
like UH ^ ^ filler
a DT a arg2 OK
waste NN waste arg2 OK
of IN of arg2 OK
my PRP my arg2 OK
time NN time arg2 OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
like VBP like predicate OK
all DT all arg1 OK
music NN music arg1 OK

it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
that IN that arg2 OK
i PRP i arg0 OK
wo MD wo ^ OK
n't RB n't ^ OK
buy VB buy predicate OK
a DT a arg1 OK
whole JJ whole arg1 OK
britney NNP britney arg1 OK
spears NNP spears arg1 OK
album NN album arg1 OK

i PRP i arg0 OK
wo MD wo ^ OK
n't RB n't ^ OK
buy VB buy predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
whole JJ whole arg1 OK
rock NN rock arg1 OK
album NN album arg1 OK

maybe RB maybe ^ OK
th- EX ^ ^ repeat
there EX there arg1 OK
'd MD 'd ^ OK
be VB be predicate OK
certain JJ certain arg2 OK
songs NNS songs arg2 OK
that WDT that arg0 OK
hit VBP hit predicate OK
number NN number arg2 OK
one CD one arg2 OK

mm UH mm ^ OK
mm UH mm ^ OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
just RB just ^ OK
buy VBP buy predicate OK
it PRP it arg1 OK

i PRP i arg0 OK
've VBP 've ^ OK
called VBN called predicate OK
in RP in arg1 OK

when WRB when ^ OK
did VBD did ^ OK
i PRP i arg0 OK
call VB call predicate OK
in RP in arg1 OK

i PRP i arg0 OK
called VBD called predicate OK
in RP in arg1 OK
once RB once ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD ^ ^ repeat
had VBD had ^ OK
to TO ^ ^ repeat
to TO to ^ OK
leave VB leave predicate OK

it PRP it ^ OK
's BES 's ^ OK

so RB ^ ^ filler
i PRP i arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
i PRP i arg0 OK
have VBP have arg1 OK
to TO to arg1 OK
call VB call arg1 OK
you PRP you arg1 OK
guys NNS guys arg1 OK
back RB back arg1 OK

right RB right ^ OK
now RB now ^ OK
is VBZ is ^ OK
a DT a ^ OK
critical JJ critical ^ OK
time NN time ^ OK
um UH ^ ^ filler
to TO to ^ OK
be VB be ^ OK
considering VBG considering ^ OK
the DT the ^ OK
issue NN issue ^ OK
of IN of ^ OK
disarming VBG disarming ^ OK
iraq NNP iraq ^ OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
especially RB ^ ^ repeat
especially RB especially ^ OK
do VBP do ^ OK
n't RB n't ^ OK
understand VB understand ^ OK
why WRB why ^ OK
they PRP they ^ OK
talk VBP talk ^ OK
about IN about ^ OK
disarming VBG disarming ^ OK
iraq NNP iraq ^ OK
before IN before ^ OK
they PRP they ^ OK
even RB even ^ OK
unders- VBP ^ ^ false_start
or CC ^ ^ false_start
plu- XX ^ ^ false_start
prove VBP ^ ^ false_start

eh UH ^ ^ filler
eh UH ^ ^ filler
in IN in ^ OK
israel NNP israel ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
all DT all ^ OK
i PRP i ^ OK
heard VBD heard ^ OK

so RB so ^ OK
the DT the ^ OK
reason NN reason ^ OK
for IN for ^ OK
pursuing VBG ^ ^ repeat
um UH ^ ^ filler
um UH ^ ^ filler
pursuing VBG pursuing ^ OK
the DT the ^ OK
disarmament NN disarmament ^ OK
of IN of ^ OK
iraq NNP iraq ^ OK
right RB right ^ OK
now RB now ^ OK
has VBZ has ^ OK
to TO to ^ OK
do VB do ^ OK
with IN with ^ OK
the DT the ^ OK
money NN money ^ OK
that WDT that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
spending VBG spending ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
was VBD was ^ OK
n't RB n't ^ OK
the DT the ^ OK
army NN army ^ OK
pretty RB pretty ^ OK
much JJ much ^ OK
destroyed VBN destroyed ^ OK
after IN after ^ OK
the DT the ^ OK
gulf NNP gulf ^ OK
war NNP war ^ OK

um UH ^ ^ filler
it PRP it ^ OK
does VBZ does ^ OK
n't RB n't ^ OK
seem VB seem ^ OK
li- IN li- ^ OK

it PRP ^ ^ false_start
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
seem VB ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start
why WRB ^ ^ false_start
would MD ^ ^ false_start
n't RB ^ ^ false_start
like UH ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
our PRP our ^ OK
government NN government ^ OK
knew VBD knew ^ OK
that DT that ^ OK
though RB though ^ OK
why WRB why ^ OK
would MD would ^ OK
n't RB n't ^ OK
they PRP they ^ OK
tell VB tell ^ OK
us PRP us ^ OK

but CC but ^ OK
it PRP it ^ OK
seems VBZ seems ^ OK
like IN like ^ OK

why WRB why ^ OK
is VBZ is ^ OK
it PRP it ^ OK
right RB right ^ OK
now RB now ^ OK
though RB though ^ OK

why WRB why ^ OK
not RB not ^ OK

if IN ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
is VBZ is ^ OK
n't RB n't ^ OK
that DT that ^ OK
what WP what ^ OK
people NNS people ^ OK
are VBP are ^ OK
saying VBG saying ^ OK
is NP-2 is ^ OK
that VBZ that ^ OK
they IN they ^ OK
're PRP 're ^ OK
going VBP going ^ OK
to VBG to ^ OK
get TO get ^ OK
very VB very ^ OK
upset RB upset ^ OK
if JJ if ^ OK
we IN we ^ OK
go PRP go ^ OK
into VBP into ^ OK
iraq IN iraq ^ OK

well UH ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
ev- XX ^ ^ false_start
g- XX ^ ^ false_start
afghanistan NNP afghanistan ^ OK
is VBZ ^ ^ false_start
also RB ^ ^ false_start
um UH ^ ^ filler
seems VBZ seems ^ OK
to TO to ^ OK
have VB have ^ OK
had VBN had ^ OK
less JJR less ^ OK
support NN support ^ OK
in PP-2 in ^ OK
terms IN terms ^ OK
of NNS of ^ OK
like IN ^ ^ filler
their UH their ^ OK
government PRP government ^ OK
than NN than ^ OK
iraq IN iraq ^ OK

always RB always ^ OK

so UH ^ ^ false_start
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
police NN police ^ OK
presence NN presence ^ OK

and CC ^ ^ false_start
ah UH ^ ^ filler
do VBP do ^ OK
you PRP you ^ OK
think VB think ^ OK
they PRP they ^ OK
could MD could ^ OK
do VB do ^ OK
anything NN anything ^ OK
else RB else ^ OK
to TO to ^ OK
help VB help ^ OK
cut VB cut ^ OK
down RP down ^ OK
on IN on ^ OK
crime NN crime ^ OK

they PRP they ^ OK

i PRP i ^ OK
hope VBP hope ^ OK
not RB not ^ OK

number NN number ^ OK
ten CD ten ^ OK
's BES 's ^ OK
the DT the ^ OK
one CD one ^ OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
they PRP ^ ^ false_start
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
see VB see ^ OK
when WRB when ^ OK
they PRP they ^ OK
mailed VBD mailed ^ OK
it PRP it ^ OK

i PRP i ^ OK
know VBP know ^ OK
number NN number ^ OK
ten CD ten ^ OK
is VBZ is ^ OK
worth JJ worth ^ OK
thirty CD thirty ^ OK
dollars NNS dollars ^ OK

then RB then ^ OK
it PRP it ^ OK
'll MD 'll ^ OK
be VB be ^ OK
worth JJ worth ^ OK
it PRP it ^ OK

so UH ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
um UH ^ ^ filler
going VBG going ^ OK
on RB on ^ OK
with IN with ^ OK
the DT the ^ OK
topic NN topic ^ OK
here RB here ^ OK
town NN ^ ^ repeat
town NN town ^ OK
watch NN watch ^ OK
watch NN ^ ^ repeat
would MD would ^ OK
be VB be ^ OK
a DT ^ ^ repeat
a DT a ^ OK
good JJ good ^ OK
vehicle NN vehicle ^ OK
f- XX ^ ^ false_start
to TO to ^ OK
bring VB bring ^ OK
together RB together ^ OK
people NNS people ^ OK
in IN in ^ OK
the DT the ^ OK
community NN community ^ OK
as RB as ^ OK
well RB well ^ OK
as IN as ^ OK
a DT a ^ OK
safety NN safety ^ OK
precaution NN precaution ^ OK

eh UH ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
it PRP it ^ OK
would MD would ^ OK
make VB make ^ OK
people NNS people ^ OK
feel VB feel ^ OK
a DT a ^ OK
lot RB lot ^ OK
safer JJR safer ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
feels VBZ feels ^ OK
as IN as ^ OK
though IN though ^ OK
you PRP you ^ OK
got VBD got ^ OK
a DT ^ ^ repeat
a DT a ^ OK
piece NN piece ^ OK
of IN of ^ OK
the DT the ^ OK
rock NN rock ^ OK
there RB there ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
then RB then ^ OK
in IN in ^ OK
turn NN turn ^ OK
you PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
we PRP we ^ OK
would MD would ^ OK
have VB have ^ OK
a DT a ^ OK
du- NN _ARG_ ^ false_start
if IN if ^ OK
we PRP we ^ OK
had VBD had ^ OK
a DT a ^ OK
um UH ^ ^ filler
a DT _ARG_ ^ false_start

so UH ^ ^ false_start
um UH ^ ^ filler
if IN if ^ OK
they PRP they ^ OK
had VBD had ^ OK
then VP it ^ false_start
then VP then ^ OK
i RB i ^ OK
would PRP would ^ OK
feel MD feel ^ OK
a VB a ^ OK
little DT little ^ OK
more RB more ^ OK
safer RBR safer ^ OK
with JJR with ^ OK
a IN a ^ OK
town DT town ^ OK
watch NN watch ^ OK
in NN in ^ OK
addition IN addition ^ OK
to NN to ^ OK
the IN ^ ^ repeat
um DT ^ ^ filler
the UH the ^ OK
strong DT strong ^ OK
police JJ police ^ OK
presence NN presence ^ OK
that NN that ^ OK
we WDT we ^ OK
have PRP have ^ OK
here VBP here ^ OK

um UH ^ ^ filler
but CC but ^ OK
um UH ^ ^ filler
we PRP we ^ OK
live VBP live ^ OK
on IN on ^ OK
campus NN campus ^ OK

the DT the ^ OK
little JJ little ^ OK
vandalism NN vandalism ^ OK
and CC and ^ OK

and CC and ^ OK
um UH um ^ OK

a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
times NNS times ^ OK
um UH ^ ^ filler
the DT the ^ OK
littering NN littering ^ OK
and CC and ^ OK
things NNS things ^ OK
is VBZ is ^ OK
n't RB n't ^ OK
curbed VBN curbed ^ OK
by IN by ^ OK
the DT the ^ OK
police NN police ^ OK

and CC ^ ^ false_start
in IN in ^ OK
addition NN addition ^ OK
to IN to ^ OK
making VBG making ^ OK
me PRP me ^ OK
feel VB feel ^ OK
safer JJR safer ^ OK
make VB it ^ false_start
would MD would ^ OK
make VB make ^ OK
me PRP me ^ OK
feel VB feel ^ OK
good JJ good ^ OK
a- CC ^ ^ repeat
and CC and ^ OK
make VB make ^ OK
life NN life ^ OK
a DT a ^ OK
little RB little ^ OK
prettier JJR prettier ^ OK

so UH ^ ^ false_start
m- XX ^ ^ false_start
what WP what ^ OK
else RB else ^ OK

ew UH ew ^ OK
ew UH ew ^ OK

if IN if ^ OK
that DT that ^ OK
happened VBD happened ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
definitely RB definitely ^ OK
would MD would ^ OK
've VB 've ^ OK
called VBN called ^ OK
the DT the ^ OK
police NN police ^ OK

so UH ^ ^ false_start
you PRP you ^ OK
have VBP have ^ OK
n't RB n't ^ OK
gotten VBN gotten ^ OK
a DT a ^ OK
check NN check ^ OK
either RB either ^ OK
huh UH ^ ^ filler

so UH ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
not RB not ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
living VBG living ^ OK
on IN on ^ OK
campus NN campus ^ OK
when WRB when ^ OK
you PRP you ^ OK
go VBP go ^ OK
to IN to ^ OK
art NNP art ^ OK
institute NNP institute ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
jus- RB jus- ^ OK
w- VBD w- ^ OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
buy VBP ^ ^ repeat
buy VBP buy predicate OK
stuff NN stuff arg1 OK
at IN at argM_loc OK
like UH ^ ^ filler
anywhere RB anywhere argM_loc OK
like IN like argM_loc OK
virgin NNP virgin argM_loc OK
or CC or argM_loc OK
like UH ^ ^ filler
e- XX ^ ^ filler
smaller JJR smaller argM_loc OK
stores NNS stores argM_loc OK
too RB too argM_loc OK

i PRP i ^ OK
uh UH ^ ^ filler

i PRP i arg0 OK
used VBD used ^ OK
to TO to ^ OK
play VB play predicate OK
uh UH ^ ^ filler
piano NN piano arg1 OK
as NAC-2 ^ ^ repeat
well RB ^ ^ repeat
and RB and arg1 OK
a CC a arg1 OK
little DT little arg1 OK
guitar JJ guitar arg1 OK

or CC or ^ OK
just RB just ^ OK
for IN for ^ OK

um UH ^ ^ filler
uh UH ^ ^ filler
what WP ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
y- PRP ^ ^ repeat
so UH ^ ^ filler
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
like VB like predicate OK
britney NNP britney arg1 OK
spears NNP spears arg1 OK

what WDT ^ ^ repeat
uh UH ^ ^ filler
uh UH ^ ^ filler
what WDT what arg1 OK
kind NN ^ ^ repeat
kind NN kind arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
music NN music arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
dislike VB dislike predicate OK

i- XX ^ ^ filler
uh UH ^ ^ filler
why WRB why ^ OK
do VBP do ^ OK
n't RB n't ^ OK
you PRP you ^ OK

so UH ^ ^ filler
you PRP ^ ^ repeat
just RB ^ ^ repeat
you PRP you arg0 OK
buy VBP buy predicate OK
everything NN everything arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
i PRP i arg0 OK
remembered VBD remembered predicate OK
oh UH ^ ^ filler
i PRP i arg0 OK
better RB better arg1 OK
do VBP do arg1 OK
that DT that arg1 OK
so IN so arg2 OK
i PRP i arg0 OK
can MD can arg2 OK
get VB get arg2 OK
my PRP my arg1 OK
check NN check arg1 OK

um UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
do VBP do ^ OK
you PRP you arg0 OK
have VB have predicate OK
any DT any arg1 OK
questions NNS questions arg1 OK

um UH ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
um UH ^ ^ filler
i PRP ^ ^ false_start
used VBD ^ ^ false_start
to TO ^ ^ false_start
actually RB ^ ^ false_start
s- RB ^ ^ false_start
i PRP i arg0 OK
still RB still ^ OK
do VBP do ^ OK
like UH ^ ^ filler
write VB write predicate OK
songs NNS songs arg1 OK
myself PRP myself ^ OK
a DT a ^ OK
little JJ little ^ OK
bit NN bit ^ OK

i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg0 OK
like UH ^ ^ filler
uh UH ^ ^ filler
kind RB kind arg1 OK
of RB of arg1 OK
stirs VBZ stirs arg1 OK
my PRP my arg1 OK
memories NNS memories arg1 OK
a DT of ^ false_start
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
like UH ^ ^ filler
music NN music arg1 OK
i PRP i ^ OK
used VBD used arg1 OK
to TO to arg1 OK
l- VBD ^ arg0 repeat
listen VB listen arg1 OK
to IN to arg1 OK
when NP-1 when argM_tmp OK
i WRB i argM_tmp OK
was PRP was argM_tmp OK
a VBD a argM_tmp OK
kid DT kid argM_tmp OK

or CC ^ ^ false_start
like UH ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
a DT a arg2 OK
tool NN tool arg2 OK
for IN for arg2 OK
me PRP me arg2 OK
or CC ^ ^ false_start
i- IN ^ ^ false_start
in IN in ^ OK
that DT that ^ OK
way NN way ^ OK
where WRB where ^ OK
i PRP i arg0 OK
like VBP like predicate OK
to TO to arg1 OK
listen VB listen arg1 OK
to IN to arg1 OK
music NN music arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
used VBD used arg1 OK
to TO to arg1 OK
listen VB listen arg1 OK
to IN to arg1 OK
a NP-3 a argM_tmp OK
long DT long argM_tmp OK
time JJ time argM_tmp OK
ago NN ago argM_tmp OK

how WRB ^ ^ repeat
how WRB how ^ OK
has VBZ has ^ OK
it PRP it arg0 OK
touched VBN touched predicate OK
you PRP you arg1 OK

how WRB how ^ OK
long RB long ^ OK
you PRP have ^ false_start
you PRP you ^ OK
been VBN been ^ OK
uh UH ^ ^ filler
hooked VBN hooked ^ OK
up RP up ^ OK
with IN with ^ OK
th- DT the ^ false_start
uh UH ^ ^ filler
program NN program ^ OK

man UH ^ ^ false_start
i- PRP ^ ^ repeat
i- PRP ^ ^ repeat
i PRP i ^ OK
told VBD told ^ OK
some DT some ^ OK
people NNS people ^ OK
about IN about ^ OK
it PRP it ^ OK

they PRP ^ ^ repeat
they PRP ^ ^ repeat
they PRP they ^ OK
think VBP ^ ^ repeat
think VBP think ^ OK
it- PRP ^ ^ repeat
there EX there ^ OK
's BES 's ^ OK
a DT a ^ OK
little JJ little ^ OK
catch NN catch ^ OK
to IN to ^ OK
it PRP it ^ OK
or CC or ^ OK
something NN something ^ OK

everybody NN everybody ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN likes ^ false_start
these DT these ^ OK
restaurants NNS restaurants ^ OK
around IN around ^ OK
here RB here ^ OK

man UH ^ ^ false_start
where WRB where ^ OK
i PRP i ^ OK
live VBP live ^ OK
at IN at ^ OK
man ADVP-1 ^ ^ false_start
i UH i ^ OK
do PRP do ^ OK
do RB ^ ^ repeat
n't VBP n't ^ OK
n't VBP ^ ^ repeat
really RB really ^ OK
care RB care ^ OK
for VB for ^ OK
they IN their ^ false_start
food PRP food ^ OK
too NN too ^ OK
much RB much ^ OK

you PRP you ^ OK
think VBP think ^ OK
that IN that ^ OK
tho- DT ^ ^ repeat
they PRP they ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
cook VB cook ^ OK
that RB that ^ OK
good RB good ^ OK

i PRP i ^ OK
bet VBP bet ^ OK
that DT that ^ OK
restaurant NN restaurant ^ OK
was VBD was ^ OK
crowd- JJ crowd- ^ OK

well UH ^ ^ false_start
there EX there ^ OK
's BES 's ^ OK
so RB so ^ OK
many JJ many ^ OK
restaurants NNS restaurants ^ OK
arou- RB ^ ^ false_start
out IN out ^ OK
here RB here ^ OK
now RB now ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
be VB be ^ OK
making VBG making ^ OK
that DT that ^ OK
much JJ much ^ OK
money NN money ^ OK
if IN if ^ OK
i PRP i ^ OK
opened VBD opened ^ OK
up RP up ^ OK
a DT a ^ OK
restaurant NN restaurant ^ OK
business NN business ^ OK

i PRP i ^ OK
probably RB would ^ false_start
probably RB probably ^ OK
be VB be ^ OK
putting VBG putting ^ OK
put VB ^ ^ repeat
more JJR ^ ^ repeat
more JJR more ^ OK
money NN ^ ^ repeat
money NN money ^ OK
out RP ^ ^ repeat
in SBAR-1 in ^ OK
it IN it ^ OK
than PRP ^ ^ repeat
than PRP than ^ OK
i IN ^ ^ repeat
i IN i ^ OK
might PRP might ^ OK
get MD get ^ OK
out VB out ^ OK
of IN of ^ OK
it IN it ^ OK

i PRP i ^ OK
remembered VBD remembered ^ OK
years NNS years ^ OK
ago RB ago ^ OK
man UH ^ ^ false_start
you PRP you ^ OK
got VBD had ^ false_start
to TO to ^ OK
walk VB walk ^ OK
like UH ^ ^ filler
five CD five ^ OK
or CC or ^ OK
six CD six ^ OK
blocks NNS blocks ^ OK
to TO to ^ OK
get VB get ^ OK
to IN to ^ OK
a DT a ^ OK
restaurant NN restaurant ^ OK

n- RB ^ ^ repeat
n- RB ^ ^ repeat
now RB now ^ OK
you PRP you ^ OK
only RB only ^ OK
have VBP have ^ OK
to TO to ^ OK
walk VB walk ^ OK
around IN around ^ OK
the DT the ^ OK
corner NN corner ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
get VB ^ ^ false_start
ready JJ ready ^ OK
to TO to ^ OK
go VB go ^ OK
out IN out ^ OK
here RB here ^ OK
in IN in ^ OK
a DT a ^ OK
few JJ few ^ OK
and CC and ^ OK
buy VB buy ^ OK
me PRP me ^ OK
something NN something ^ OK
to TO to ^ OK
eat VB eat ^ OK

but CC ^ ^ repeat
i PRP ^ ^ false_start
ai VBP ^ ^ false_start
n't RB ^ ^ false_start
but CC but ^ OK
i PRP i ^ OK
came VBD came ^ OK
in IN in ^ OK
here RB here ^ OK
because IN because ^ OK
first RB first ^ OK
i PRP i ^ OK
had VBD had ^ OK
to TO to ^ OK
make VB make ^ OK
this DT this ^ OK
phone NN phone ^ OK
call NN call ^ OK

it PRP it ^ OK
's BES 's ^ OK
almost RB almost ^ OK
cold JJ cold ^ OK
enough RB enough ^ OK
for IN for ^ OK
a DT a ^ OK
coat NN coat ^ OK
now RB now ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
p- RB will ^ false_start
p- RB ^ ^ repeat
probably RB probably ^ OK
end VBP end ^ OK
up RP up ^ OK
going VBG going ^ OK
to IN to ^ OK
a DT a ^ OK
chinese JJ chinese ^ OK
restaurant NN restaurant ^ OK

i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
chinese JJ chinese ^ OK
restaurant NN restaurant ^ OK
is VBZ is ^ OK
the DT the ^ OK
cheapest JJS cheapest ^ OK
restaurant NN restaurant ^ OK
out IN out ^ OK
there RB there ^ OK
d- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
you PRP you ^ OK

i PRP ^ ^ false_start
at IN ^ ^ false_start
i PRP i ^ OK
took VBD took ^ OK
some DT some ^ OK
young JJ young ^ OK
lady NN lady ^ OK
to IN to ^ OK
a DT a ^ OK
chinese JJ chinese ^ OK
restaurant NN restaurant ^ OK
down IN down ^ OK
wa- XX in ^ false_start
wa- XX ^ ^ false_start
chinatown NN chinatown ^ OK
one CD one ^ OK
time NN time ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
uh UH ^ ^ filler

you PRP ^ ^ filler
know VBP ^ ^ filler
you PRP you ^ OK
ever RB ever ^ OK
taste VB taste ^ OK
them DT the ^ false_start
pina NN pina ^ OK
coladas NNS coladas ^ OK
they PRP they ^ OK
make VBP make ^ OK

i PRP i ^ OK
bought VBD ^ ^ repeat
bought VBD bought ^ OK
me PRP ^ ^ repeat
her PRP her ^ OK
and CC and ^ OK
i PRP i ^ OK
one CD one ^ OK
of IN of ^ OK
them PRP them ^ OK

th- PRP ^ ^ repeat
the- PRP ^ ^ repeat
they PRP they ^ OK
must MD must ^ OK
have VB have ^ OK
spiced VBN spiced ^ OK
it PRP it ^ OK
or CC or ^ OK
something NN something ^ OK

you PRP you ^ OK
see VBP see ^ OK
she PRP she ^ OK
do VBP do ^ OK
n't RB n't ^ OK
t- XX ^ ^ false_start
really RB really ^ OK
drink VB drink ^ OK

man UH ^ ^ false_start
eh UH ^ ^ filler
she PRP ^ ^ repeat
she PRP she ^ OK
walking VBG ^ ^ repeat
walk VBP walked ^ false_start
out IN ^ ^ repeat
out IN out ^ OK
that DT that ^ OK
place NN place ^ OK
staggering VBG staggering ^ OK
man UH ^ ^ false_start

but CC but ^ OK
see UH ^ ^ filler
like UH ^ ^ filler
wh- XX ^ ^ false_start
tha- DT ^ ^ repeat
that DT that ^ OK
restaurant NN restaurant ^ OK
down IN down ^ OK
chinatown NN in ^ false_start
chinatown NN chinatown ^ OK

uh UH ^ ^ filler
china- NNP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
call VBP call ^ OK
it PRP it ^ OK
chinatown NNP chinatown ^ OK

think VBP i ^ false_start
think VBP think ^ OK
it PRP it ^ OK
was VBD was ^ OK
down IN down ^ OK
there RB there ^ OK
eighth NN at ^ false_start
eighth NN eighth ^ OK
and CC and ^ OK
arch NN arch ^ OK

because IN because ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
think VB think predicate OK
most JJS most arg1 OK
restaurants NNS restaurants arg1 OK
are VBP are arg1 OK
too RB too arg2 OK
small JJ small arg2 OK
for IN for arg2 OK
non-smokers NNS non-smokers arg1 OK
not RB not arg2 OK
to TO to arg2 OK
be VB be arg2 OK
infringed VBN infringed arg2 OK
upon IN upon arg_particl OK

i PRP ^ ^ repeat
i PRP i arg0 OK
just RB just ^ OK
think VBP think predicate OK
you PRP ^ ^ repeat
y- PRP ^ ^ repeat
you PRP you arg0 OK
if IN ^ ^ repeat
either RB either arg1 OK
want VBP want arg1 OK
to TO to arg1 OK
quit VB quit arg1 OK
or CC or arg1 OK
you PRP you arg1 OK
do VBP do arg1 OK
n't RB n't arg1 OK

and CC ^ ^ false_start
if IN if arg1 OK
you PRP you arg1 OK
've VBP 've arg1 OK
never RB never arg1 OK
smoked VBN smoked arg1 OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
well UH ^ ^ filler
i PRP i arg0 OK
suppose VBP ^ ^ repeat
suppose VBP suppose predicate OK
you PRP you arg1 OK
probably RB probably arg1 OK
do VBP do arg1 OK
n't RB n't arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
f- XX ^ ^ repeat
guess VBP guess predicate OK
you PRP you arg0 OK
probably RB probably arg1 OK
know VBP know arg1 OK
how WRB how arg1 OK
hard JJ hard arg1 OK
it S-2 it arg1 OK
is PRP is arg1 OK
to VBZ to arg1 OK
quit TO quit arg1 OK

so UH ^ ^ false_start
you PRP you arg1 OK
're VBP 're predicate OK
lucky JJ lucky arg2 OK
really UH ^ ^ repeat
really SBAR-1 really arg2 OK
that RB that arg2 OK
you IN you arg0 OK
never PRP never argM_tmp OK
got RB got arg2 OK
into VBD into arg1 OK
that IN that arg1 OK

i PRP i ^ OK
m- XX m- ^ OK
where WRB where ^ OK

there EX ^ ^ repeat
there EX there arg1 OK
is VBZ ^ ^ repeat
n't RB ^ ^ repeat
is VBZ is predicate OK
some DT some arg2 OK
around IN around argM_loc OK
here RB here argM_loc OK

in IN ^ ^ false_start
some DT ^ ^ false_start
of IN ^ ^ false_start
th- DT ^ ^ false_start
um UH ^ ^ filler
indiana NNP indiana ^ OK

do VBP do ^ OK
they PRP they arg0 OK
offer VB offer predicate OK
quit VB quit arg1 OK
smoking NN smoking arg1 OK
classes NNS classes arg1 OK
and CC and arg1 OK
programs NNS programs arg1 OK
for IN for arg3 OK
your PRP your arg3 OK
school NN school arg3 OK

but CC but ^ OK
it PRP ^ ^ repeat
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
's BES ^ ^ repeat
'm VBP 'm predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
from IN from arg2 OK
a DT a arg2 OK
small JJ small arg2 OK
town NN town arg2 OK

esp- RB ^ ^ repeat
because IN because ^ OK
sometimes RB sometimes ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
think VBP think ^ OK
if IN if ^ OK
they PRP they ^ OK
could MD could ^ OK
catch VB catch ^ OK
you PRP you ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
at IN at ^ OK
a DT a ^ OK
early RB ^ ^ repeat
younger JJR younger ^ OK
age NN age ^ OK
than IN than ^ OK
let VB let ^ OK
it PRP it ^ OK
progress VB progress ^ OK
even RB even ^ OK
further RBR further ^ OK

and CC ^ ^ false_start
w- XX ^ ^ repeat
i PRP i arg0 OK
did VBD did ^ OK
quit VB quit predicate OK
like IN ^ ^ false_start
i PRP ^ ^ false_start
said VBD ^ ^ false_start
for IN for argM_tmp OK
three CD three argM_tmp OK
years NNS years argM_tmp OK

i PRP i ^ OK
just RB just ^ OK

you PRP you ^ OK
just RB just ^ OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
'm VBP 'm ^ OK
m- VBP ^ ^ repeat
sure JJ sure ^ OK
the DT the ^ OK
programs NNS programs ^ OK

i PRP i ^ OK
just RB just ^ OK
think VBP think ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
when WRB when ^ OK
small JJ small ^ OK
children NNS children ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
just RB ^ ^ repeat
just RB just ^ OK
do VBP do argM_neg OK
n't RB n't argM_neg OK
agree VB agree predicate OK
with IN with arg1 OK
smoking VBG smoking arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
public NN public argM_loc OK
like IN ^ ^ false_start
that DT ^ ^ false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
just RB just ^ OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
terrible JJ terrible arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg0 OK
does S-2 does argM_neg OK
n't VBZ n't argM_neg OK
even RB ^ ^ repeat
even RB even arg1 OK
set RB set arg1 OK
a VB a arg1 OK
good DT good arg1 OK
example JJ example arg1 OK
for NN for arg1 OK
small IN small arg0 OK
children JJ children arg0 OK
to NNS to arg1 OK
see TO see arg1 OK
adult VB adult arg0 OK
people NN people arg0 OK
sitting NNS sitting arg1 OK
around VBG around arg2 OK
smoking RB smoking arg1 OK
and VBG and arg1 OK
laughing CC laughing arg1 OK
to VBG to arg1 OK
associate TO associate arg1 OK
it VB it arg1 OK
as PRP as arg2 OK
something IN something arg2 OK
that NN that arg1 OK
's WDT 's arg2 OK
good BES good arg2 OK

you PRP ^ ^ repeat
you PRP you arg0 OK
kno- VBP ^ ^ repeat
know VBP know predicate OK
what WP what arg1 OK

i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg0 OK
depends VBZ depends arg1 OK
on IN on arg1 OK
what WP what arg1 OK
y- XX ^ ^ repeat
you PRP you arg0 OK
mean VBP mean arg1 OK
by IN by arg1 OK
wrong NN wrong arg1 OK

like UH ^ ^ filler
is VBZ is predicate OK
it PRP it arg1 OK
that WDT that arg2 OK
there EX there arg2 OK
's BES 's arg2 OK
a DT a arg2 OK
serious JJ serious arg2 OK
problem NN problem arg2 OK
with IN with arg2 OK
the DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg2 false_start
social JJ social arg2 false_start
problems NNS problems arg2 false_start

y- XX ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
because IN because ^ OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
about IN about arg1 OK
like UH ^ ^ filler
the DT the arg1 OK
test NN test arg1 OK
scores NNS scores arg1 OK
from IN from arg1 OK
private JJ private arg1 OK
schools NNS schools arg1 OK

but CC but ^ OK
there EX there ^ OK
's BES 's predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
um UH ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
emphasis NN emphasis arg1 OK
put VBN put arg1 OK
on IN on argM_loc OK
test NN test argM_loc OK
scores NNS scores argM_loc OK
in IN ^ ^ false_start
um UH ^ ^ filler
at RB at arg1 OK
least RB least arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
where WRB where arg2 OK
i PRP i arg1 OK
'm VBP 'm arg1 OK
from IN from arg2 OK
here ADVP-1 here arg2 OK
in RB in arg2 OK
california IN california arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB ^ ^ repeat
just RB just ^ OK
think VBP think predicate OK
that IN that arg1 OK
um UH ^ ^ filler
there EX there arg1 OK
's BES 's arg1 OK
more JJR more arg1 OK
to IN to arg1 OK
life NN life arg1 OK
than IN than arg1 OK
testing NN testing arg1 OK

s- RB ^ ^ repeat
so RB so ^ OK
but CC but ^ OK

well UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
um UH ^ ^ filler
there EX there arg1 OK
's BES 's arg1 OK
a DT ^ ^ false_start
not RB not argM_neg OK
enough RB enough arg1 OK
funding NN funding arg1 OK

that DT that ^ OK
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
like UH ^ ^ filler
the DT the ^ OK
biggest JJS biggest ^ OK
thing NN thing ^ OK
for IN ^ ^ repeat
for IN for ^ OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
having VBG having ^ OK
a DT a ^ OK
well RB well ^ OK
rounded JJ rounded ^ OK
educational JJ educational ^ OK
program NN program ^ OK
because IN because ^ OK

right RB right ^ OK

right RB ^ ^ false_start
now RB ^ ^ false_start
they PRP ^ ^ false_start
're VBP ^ ^ false_start
so RB ^ ^ false_start
focused JJ ^ ^ false_start
on IN ^ ^ false_start
um UH ^ ^ filler
math NN ^ ^ false_start
and CC ^ ^ false_start
english NNP ^ ^ false_start
that IN ^ ^ false_start
they PRP ^ ^ false_start
really RB ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
e UH ^ ^ filler
e UH ^ ^ filler
actually UH ^ ^ false_start
at IN at argM_loc OK
my PRP my argM_loc OK
elementary JJ elementary argM_loc OK
school NN school argM_loc OK
where WRB where ^ OK
i PRP i arg0 OK
teach VBP teach predicate OK
they ADVP-LOC- 1 they arg0 OK
r- PRP ^ ^ repeat
rarely RB rarely ^ OK
have RB have predicate OK
time VBP time arg1 OK
to NN to arg1 OK
do TO do arg1 OK
science VB science arg1 OK
or NN or arg1 OK
social CC social arg1 OK
studies JJ studies arg1 OK
because NNS because ^ OK
it IN it arg1 OK
's PRP 's predicate OK
all BES all arg2 OK
about RB about arg2 OK
math IN math arg2 OK
and NN and arg2 OK
english CC english arg2 OK
and NNP and arg2 OK
um CC ^ ^ filler
you UH ^ ^ filler
know PRP ^ ^ filler
raising VBP raising arg2 OK
the VBG the arg1 OK
scores DT scores arg1 OK
on NNS on arg1 OK
that IN those arg1 false_start

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
really RB really arg2 OK
too RB too arg2 OK
bad JJ bad arg2 OK

i PRP ^ ^ false_start
think VBP ^ ^ false_start
because IN ^ ^ false_start
those DT ^ ^ false_start
and CC ^ ^ false_start
also RB also ^ OK
as IN as ^ OK
you PRP you arg0 OK
know VBP know predicate OK
or CC or ^ OK
may MD may ^ OK
have VB have ^ OK
heard VBN heard predicate OK
th- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK
really RB really arg1 OK
have VB have arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
room NN room arg1 OK
for IN for arg1 OK
extra JJ extra arg1 OK
activities NNS activities arg1 OK
like IN like arg1 OK
music NN music arg1 OK
and CC and arg1 OK
even RB even arg1 OK
p. NN p. arg1 OK
e. NN e. arg1 OK

if IN if ^ OK
i PRP i ^ OK

well UH ^ arg2 filler
kind- RB ^ ^ false_start
well UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
all RB all arg1 OK
based VBN based arg1 OK
on IN on arg2 OK
funding NN funding arg2 OK
because IN because ^ OK
there EX there ^ OK
's BES 's predicate OK
not RB not argM_neg OK
enough JJ enough arg1 OK
f- RB ^ ^ repeat
funding NN funding arg1 OK
to TO to arg1 OK
um UH ^ ^ filler
provide VB provide arg1 OK
these DT for ^ false_start
these DT these arg2 OK
other JJ other arg2 OK
programs NNS programs arg2 OK
and CC and ^ OK
also RB ^ ^ repeat
because IN because ^ OK
there EX there ^ OK
's BES 're predicate false_start
so RB so arg1 OK
many JJ many arg0 OK
other JJ other arg0 OK
things NNS things arg0 OK
that WDT ^ ^ repeat
that WDT that arg1 OK
could MD could arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
be VB be arg1 OK
done VBN done arg1 OK
at IN at argM_tmp OK
this DT this argM_tmp OK
time NN time argM_tmp OK

we PRP we arg0 OK
have VBP have ^ OK
to TO to ^ OK
just RB just ^ OK
totally RB totally ^ OK
focus VB focus predicate OK
on IN on arg2 OK
reading NN reading arg2 OK
and CC and arg2 OK
math NN math arg2 OK
because IN because ^ OK
that DT that arg1 OK
's BES 's predicate OK
the DT the arg2 OK
only JJ only arg2 OK
way NN way arg2 OK
that WDT that arg2 OK
we PRP we arg0 OK
're VBP 're arg2 OK
going VBG going arg2 OK
to TO to arg2 OK
improve VB improve arg2 OK
those DT those arg1 OK
scores NNS scores arg1 OK

but CC ^ ^ repeat
there EX ^ ^ false_start
's BES ^ ^ false_start
but CC but ^ OK
see UH ^ ^ false_start
they PRP they arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
understand VB understand predicate OK

well UH ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
one CD one arg2 OK
way NN way arg2 OK

um UH ^ ^ filler
another DT another arg1 OK
way NN way arg1 OK
is VBZ is predicate OK
to TO to arg2 OK
hey UH ^ ^ filler
give VB give arg2 OK
teachers NNS teachers arg2 OK
a DT a arg1 OK
little RB little arg1 OK
more JJR more arg1 OK
freedom NN freedom arg1 OK
in IN in arg1 OK
the DT the arg1 OK
classroom NN classroom arg1 OK
because IN because ^ OK
what WP ^ ^ false_start
they PRP they arg0 OK
they PRP ^ ^ false_start
're VBP 're ^ OK
starting VBG starting ^ OK
have VBP ^ predicate repeat
to TO to arg1 OK
do VB ^ ^ repeat
now RB ^ ^ false_start
is VBZ ^ ^ repeat
adopt VBP adopt arg1 OK
these DT ^ ^ repeat
um UH ^ ^ filler
like UH ^ ^ filler
this DT this arg1 OK
totally RB ^ ^ repeat
totally RB totally arg1 OK
scripted JJ ^ ^ repeat
scripted JJ scripted arg1 OK
program NN program arg1 OK
for IN for arg2 OK
reading NN reading arg2 OK

that DT ^ ^ repeat
like UH ^ ^ filler
it PRP ^ ^ repeat
like IN ^ ^ filler
it- PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
already RB already arg2 OK
there RB there arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
m- VBP ^ ^ repeat
mean VBP mean predicate OK
they PRP they arg1 OK
could MD could arg1 OK
really RB really arg1 false_start
just RB just arg1 OK
be VB be arg1 OK
robots NNS robots arg2 OK

but CC ^ ^ repeat
but CC but ^ OK
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
a DT a arg2 OK
general JJ general arg2 OK
problem NN problem arg2 OK
with IN with arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
of IN of arg2 OK
big JJ big arg2 OK
institutions NNS institutions arg2 OK

that WDT ^ ^ repeat
it PRP it arg1 OK
's S-4 's predicate OK
really BES really arg2 OK
hard RB hard arg2 OK
to JJ to arg2 OK
avoid TO avoid arg2 OK
in VB in arg2 OK
that NP-3 that arg2 OK
you IN you arg0 OK
have WDT have arg2 OK
a PRP a arg1 OK
lot VBP lot arg1 OK
of DT of arg1 OK
people NN people arg1 OK
to IN to arg1 OK
service NNS service arg1 OK
and TO and arg2 OK
you VB you arg0 OK
need CC need arg2 OK
it PRP it arg1 OK
to VBP to arg1 OK
kind PRP kind arg1 OK
of TO of arg1 OK
be RB be arg1 OK
uh RB ^ ^ filler
standard VB standard arg2 OK
in UH for arg2 false_start
what JJ what arg1 OK
you IN you arg0 OK
're WP 're arg2 OK
providing PRP providing arg2 OK

so RB so ^ OK
you PRP you arg0 OK
end VBP end predicate OK
up RP up ^ OK
like UH ^ ^ filler
um UH ^ ^ filler
not RB not arg2 false_start
really RB really arg2 false_start
p- XX ^ ^ false_start
treating VBG treating arg2 OK
everybody NN everybody arg1 false_start
as IN ^ ^ repeat
as IN ^ ^ repeat
as IN as arg2 OK
an DT an arg2 OK
individual NN individual arg2 OK

well UH ^ ^ filler
they PRP ^ ^ false_start
um UH ^ ^ filler
well UH ^ ^ filler
actually RB actually ^ OK
technology NN technology arg1 OK
's BES 's predicate OK
a DT a arg2 OK
big JJ big arg2 OK
focus NN focus arg2 OK

i PRP i arg0 OK
mean VBP mean predicate OK
a DT ^ ^ false_start
lot NN ^ ^ false_start
of IN ^ ^ false_start
this DT ^ ^ false_start
uh UH ^ ^ filler
especially RB especially arg1 OK
the DT ^ ^ repeat
the DT ^ ^ repeat
like UH ^ ^ filler
the DT the arg0 OK
lowest JJS lowest arg0 OK
performing VBG performing arg0 OK
schools NNS schools arg0 OK
they PRP ^ ^ false_start
in IN in arg0 OK
the DT the arg0 OK
poorest JJS poorest arg0 OK
areas NNS areas arg0 OK
like UH ^ ^ filler
have VBP have arg1 OK
the DT the arg1 OK
most JJS most arg1 OK
technology NN technology arg1 OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
if IN if arg1 OK
i PRP i arg0 OK
could MD could arg1 OK
their PRP ^ ^ false_start
problem NN ^ ^ false_start
is VBZ ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like IN ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
so RB ^ ^ false_start
much RB ^ ^ false_start
i- PRP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
exac- RB ^ ^ false_start
really RB really arg1 false_start
pinpoint VB pinpoint arg1 OK
one CD one arg1 OK
thing NN thing arg1 OK
i PRP i arg0 OK
would MD would ^ OK
say VB say predicate OK
that IN that arg1 OK
there EX there arg1 OK
's BES 's arg1 OK
very RB very arg1 OK
little JJ little arg1 OK
support NN support arg1 OK
for IN for arg1 OK
the DT the arg1 OK
teachers NNS teachers arg1 OK

but CC but ^ OK
no UH not ^ false_start
a- IN ^ ^ repeat
at IN at ^ OK
the DT the ^ OK
higher JJR higher ^ OK
levels NNS levels ^ OK

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg1 OK
actually RB actually ^ OK
'm VBP ^ ^ repeat
am VBP am predicate OK
a DT a arg2 OK
computer NN computer arg2 OK
teacher NN teacher arg2 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
in IN ^ ^ repeat
in IN in argM_loc OK
the DT the argM_loc OK
computer NN computer argM_loc OK
lab NN lab argM_loc OK

and CC ^ ^ repeat
i PRP ^ ^ repeat
and CC ^ ^ false_start
i PRP i arg0 OK
see VBP see predicate OK
what WP what arg1 OK
goes VBZ goes arg1 OK
on RB on argM_tmp OK
and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
every DT every argM_tmp OK
day NN day argM_tmp OK

but CC but ^ OK
i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's arg1 OK
more RBR more arg2 OK
like IN like arg2 OK
just RB just arg2 OK
having VBG having arg2 OK
more JJR more arg1 OK
help NN help arg1 OK
and CC and arg1 OK
more JJR more arg1 OK
support NN support arg1 OK
because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
usually RB usually ^ OK
in IN ^ ^ false_start
the DT the ^ OK
lowest JJS lowest ^ OK
performing VBG performing predicate OK
schools NNS schools arg1 OK
that WDT ^ ^ false_start
in IN in arg1 OK
the DT the arg1 OK
worst JJS worst arg1 OK
neighborhoods NNS neighborhoods arg1 OK
's BES are predicate false_start
where WRB where argM_loc OK
you PRP you arg0 OK
get VBP get argM_loc OK
the DT the arg1 OK
most RBS most arg1 OK
inexperienced JJ inexperienced arg1 OK
teachers NNS teachers arg1 OK
because ADVP-LOC- 1 because ^ OK
that IN that arg1 OK
's DT 's predicate OK
how BES how arg2 OK
a- WRB ^ ^ repeat
i XX i arg1 OK
got PRP got arg2 OK
thrown VBD thrown arg2 OK
in VBN in arg2 OK

but CC but ^ OK
i PRP ^ ^ filler
mean VBZ ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
they PRP they arg0 OK
were VBD were ^ OK
to TO to ^ OK
put VB put predicate OK
to IN to ^ OK
to IN it arg1 false_start
where WRB where ^ OK
i PRP i arg0 OK
could MD could ^ OK
n't RB n't ^ OK
speak VB speak predicate OK
to IN to arg2 OK
like UH ^ ^ filler
my PRP my arg2 OK
children NNS children arg2 OK
again RB again ^ OK
again RB then ^ false_start
no ADVP-2 no ^ OK

there EX ^ ^ repeat
there- EX ^ ^ repeat
there EX there arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
lo- NN ^ ^ repeat
lot NN lot arg2 OK
of IN of arg2 OK
things NNS things arg2 OK
that WDT that arg1 OK
are VBP are arg2 OK
worth JJ worth arg2 OK
a DT a arg2 OK
lot NN lot arg2 OK
more JJR more arg2 OK
than IN than arg2 OK
money NN money arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
um UH ^ ^ filler

eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
money NN money arg0 OK
does VBZ does ^ OK
n't RB n't ^ OK
make VB make predicate OK
the DT the arg1 OK
person NN person arg1 OK

and CC ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler

that DT ^ ^ repeat
that WDT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
weird- JJ ^ ^ repeat
weird JJ weird arg2 OK
question NN question arg2 OK
to TO to ^ OK
be VB be ^ OK
asking VBG asking predicate OK

what- WDT ^ ^ repeat
what WDT what arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
question NN question arg2 OK
is VBZ is predicate OK
that DT that arg1 OK

if IN ^ ^ repeat
you PRP ^ ^ repeat
got VBN ^ ^ false_start
to TO ^ ^ false_start
if IN if ^ OK
y- PRP ^ ^ false_start

you PRP ^ ^ repeat
you PRP you arg0 OK
ca- MD ^ ^ repeat
ca MD ca ^ OK
n't RB n't ^ OK
buy VB buy predicate OK
a DT a arg1 OK
friend NN friend arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
one DT one arg1 OK
really RB really arg1 OK
good JJ good arg1 OK
one NN one arg1 OK
that WDT ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
had VBN had predicate OK
for IN for argM_tmp OK
like UH ^ ^ filler
twenty CD twenty argM_tmp OK
years NNS years argM_tmp OK
now RB now argM_tmp OK

and CC and ^ OK
uh UH ^ ^ filler

always RB always ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
uh UH ^ ^ filler
no UH ^ ^ filler

i- PRP ^ ^ repeat
i PRP i arg0 OK
could MD could ^ OK
n't RB n't ^ OK
accept VB accept predicate OK
that DT that arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i- PRP i ^ false_start

and CC ^ ^ false_start
i- IN ^ ^ repeat
if IN if ^ OK
you PRP you arg0 OK
're VBP 're predicate OK
lucky JJ lucky arg2 OK
enough RB enough arg2 OK
in S-2 in argM_tmp OK
your IN your argM_tmp OK
lifetime PRP lifetime argM_tmp OK
to NN to ^ OK
even TO even ^ OK
have RB have predicate OK
one VB one arg1 OK
friend CD friend arg1 OK
then NN then ^ OK
you- RB ^ ^ repeat
you PRP you arg0 OK
've PRP 've ^ OK
done VBP done predicate OK
something VBN something arg1 OK

you NN ^ ^ filler
know PRP ^ ^ filler
because VBP because ^ OK
i IN ^ ^ filler
mean PRP ^ ^ filler
most VBP most arg0 OK
people JJS people arg0 OK
go NNS go predicate OK
through VBP through arg_particl OK
life IN life arg1 OK
and NN and ^ OK
not CC do ^ false_start
not CC not ^ OK
really RB really ^ OK
have RB have predicate OK
any VBP any arg1 OK
real DT real arg1 OK
friends JJ friends arg1 OK

the DT the ^ OK
way NN way ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
look VBP look predicate OK
at IN at arg1 OK
it PRP it arg1 OK
i ADVP-2 i arg0 OK
feel PRP feel ^ OK
blessed VBP blessed predicate OK
to JJ to arg2 OK
just TO just arg2 OK
have RB have arg2 OK
one VB one arg1 OK
really DT really arg1 OK
good RB good arg1 OK
one JJ one arg1 OK

and CC ^ ^ false_start
even RB ^ ^ repeat
e- RB ^ ^ repeat
even RB even ^ OK
if IN if ^ OK
it PRP it arg1 OK
was VBD was predicate OK
ten CD ten arg2 OK
million CD million arg2 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
accept VB accept predicate OK
it PRP it arg1 OK
because IN because ^ OK
th- XX ^ ^ false_start
you PRP you arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
put VB put predicate OK
a DT a arg1 OK
price NN price arg1 OK
on IN on arg2 OK
friendship NN friendship arg2 OK

where WRB ^ ^ repeat
where WRB where arg1 OK
you PRP are predicate false_start
you PRP ^ ^ repeat
you PRP you arg2 OK
from- IN ^ ^ repeat
from IN from arg2 OK
sean ADVP-2 sean ^ OK

i PRP i arg1 OK
'm VBP 'm predicate OK
from IN from arg2 OK
panama NNP panama arg2 OK
city NN city arg2 OK
florida NNP florida arg2 OK

i PRP i arg1 OK
i PRP 'm predicate false_start
not RB not arg2 OK
a DT a arg2 OK
military NN military arg2 OK
brat NN brat arg2 OK
or CC ^ ^ false_start
anything NN ^ ^ false_start

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
unfortunate JJ unfortunate arg2 OK
there RB there argM_loc OK
because IN because ^ OK
we PRP we arg0 OK
moved VBD moved predicate OK
so RB so argM_tmp OK
many JJ many argM_tmp OK
times NNS times argM_tmp OK
when SBAR-3 when ^ OK
i WRB i arg1 OK
was PRP was predicate OK
little VBD little arg2 OK
that JJ that ^ OK
i ADVP-TMP- 1 i arg0 OK
do IN do ^ OK
n't PRP n't ^ OK
have VBP have predicate OK
any RB any arg1 OK
friends VB friends arg1 OK
that DT that arg1 OK
go NNS go arg1 OK
all WDT all arg1 OK
the VBP the arg1 OK
way PDT way arg1 OK
back DT back arg_particl OK
to NN to arg2 OK
my RB my arg2 OK
childhood IN childhood arg2 OK

which WDT which ^ OK
i PRP i arg0 OK
wish VBP wish predicate OK
i PRP i arg1 OK
did VBD did arg1 OK
you NP-1 ^ ^ filler
know PRP ^ ^ filler
because VBP because ^ OK
i IN i arg0 OK
feel PRP feel predicate OK
you VBP ^ ^ filler
know PRP ^ ^ filler
y- VBP ^ ^ false_start
people XX people arg0 OK
that NNS that arg0 OK
do WDT do arg1 OK
have VBP have arg1 OK
that VB that arg1 OK
are WDT are arg1 OK
definitely VBP definitely arg1 OK
more RB more arg1 OK
blessed RBR blessed arg1 OK
and JJ and arg1 OK
more CC more arg1 OK
fortunate RBR fortunate arg1 OK
than JJ than arg1 OK
people IN people arg1 OK
that NNS that arg0 OK
got XX got arg1 OK
m- WDT ^ ^ repeat
moved VBD moved arg1 OK
around VBN around arg2 OK
a RP a argM_tmp OK
lot DT lot argM_tmp OK
like NN like ^ OK
i IN i arg0 OK
did PRP did predicate OK

well UH ^ ^ filler
see UH ^ ^ filler
we PRP ^ ^ repeat
my- PRP ^ ^ false_start
we PRP we arg0 OK
moved VBD ^ ^ repeat
moved VBD moved predicate OK
from IN from arg2 OK
state NN state arg2 OK
to IN to arg2 OK
state NN state arg2 OK
state NN and arg2 false_start
uh UH ^ ^ filler
city NN city arg2 OK
to IN to arg2 OK
city NN city arg2 OK

so RB ^ ^ false_start
i- PRP ^ ^ repeat
i PRP ^ ^ repeat
never RB ^ ^ false_start
really RB ^ ^ false_start
know- VB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
got VBD ^ ^ repeat
got VBD got ^ OK
to TO ^ ^ repeat
to IN ^ ^ repeat
to IN to ^ OK
where WRB where ^ OK
i PRP i ^ OK
shut VBP shut ^ OK
people NNS people ^ OK
out RP out ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK

you PRP you arg0 OK
know VBP know predicate OK
what WP what arg1 OK
i PRP i arg0 OK
'm VBP 'm arg1 OK
saying VBG saying arg1 OK

because IN because ^ OK
i PRP ^ ^ repeat
just RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg1 OK
did VBD did ^ OK
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
be VB be arg1 OK
hurt VBN hurt arg1 OK

i PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
n't RB n't ^ OK
want VB ^ ^ repeat
want VB want predicate OK
to TO to arg1 OK
have VB have arg1 OK
to TO to arg1 OK
say VB say arg1 OK
goodbye UH goodbye arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
i PRP i arg0 false_start
think VBP think predicate false_start
say- VBG ^ ^ repeat
saying VBG saying arg1 OK
goodbye UH goodbye arg1 OK
to IN ^ ^ false_start
me PRP ^ ^ false_start
is VBZ is arg1 OK
one CD one arg2 OK
of IN of arg2 OK
the DT the arg2 OK
hardest JJS hardest arg2 OK
things NNS things arg2 OK
that WDT that arg1 OK
there EX there arg2 OK
ever RB ^ ^ repeat
ever RB ever arg2 OK
is VBZ is arg2 OK
to TO to arg2 OK
do VB do arg2 OK

i PRP i arg1 false_start
guess VBP guess predicate false_start
it PRP it ^ false_start
says VBZ says predicate false_start
or CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
just RB just argM_adverb OK
being VBG being arg1 OK
on IN on arg2 OK
a DT a arg2 OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
uh UH ^ ^ filler
faraway JJ faraway arg2 OK
um UH ^ ^ filler
um UH ^ ^ filler
what UH ^ ^ filler
tropical JJ tropical arg2 OK
island NN island arg2 OK

i PRP i arg0 OK
guess VBP guess predicate OK
it PRP it arg0 OK
says VBZ says arg1 OK
ignore VB ignore arg1 OK
what UH ^ ^ filler
all DT all arg1 OK
finances NNS finances arg1 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

but CC ^ ^ repeat
but CC but argM_discou OK
the DT ^ ^ false_start
thing NN ^ ^ false_start
is VBZ ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that DT ^ ^ false_start
would MD ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
be VB ^ ^ false_start
that DT that arg1 OK
's BES 's arg1 OK
too RB too arg2 OK
long JJ long arg2 OK

a DT a arg1 OK
peace NN peace arg1 OK
of IN of arg1 OK
mind NN mind arg1 OK
would MD would argM_mod OK
be VB be predicate OK
one CD one arg2 OK
of IN of arg2 OK
the DT the arg2 OK
things NNS things arg2 OK

you PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP ^ ^ false_start
'd MD ^ ^ false_start
pick VB ^ ^ false_start
what WP what arg1 OK
do VBP do ^ OK
you PRP you arg0 false_start
think VBP think predicate false_start
you PRP you arg0 OK
like VB like arg1 OK
about IN about arg1 OK
los NNP los arg1 OK
angeles NNP angeles arg1 OK
so RB so argM_extent OK
much RB much argM_extent OK

i PRP ^ ^ false_start
me PRP me ^ OK
too RB too ^ OK
also RB ^ ^ false_start

it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
the DT ^ ^ repeat
a DT a arg2 OK
nice JJ nice arg2 OK
little JJ little arg2 OK
getaway NN getaway arg2 OK
for IN for arg2 OK
a DT a arg2 OK
vacation NN vacation arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
everybody NN everybody arg0 OK
likes VBZ likes arg1 OK
to TO to arg1 OK
get VB get arg1 OK
away RB away arg_particl OK
every DT every argM_tmp OK
now RB now argM_tmp OK
and CC and argM_tmp OK
then RB then argM_tmp OK

well UH ^ ^ filler
i PRP i arg1 OK
been VBN have ^ false_start
never RB never argM_neg OK
been VBN been predicate OK
to IN to arg2 OK
los NNP los arg2 OK
angeles NNP angeles arg2 OK
before RB before arg2 OK

so RB ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
too RB too arg1 OK
much JJ much arg1 OK
about IN about arg1 OK
that DT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg1 OK
place NN place arg1 OK

because IN ^ ^ false_start
see UH ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know ^ OK
n- XX ^ predicate false_start

but CC ^ ^ false_start
this DT this arg0 OK
bora NNP bora arg0 OK
bora NNP bora arg0 OK
really RB really argM_adverb OK
got VBD got predicate OK
me PRP me arg1 OK
too RB too argM_discou OK

i PRP i arg1 OK
think VBP think predicate OK
i PRP i arg2 OK
would MD would argM_mod OK
like VB like arg1 OK
to TO to arg1 OK
find VB find arg1 OK
little RB a ^ false_start
little RB little arg1 OK
more JJR more arg1 OK
information NN information arg1 OK
on IN ^ ^ false_start
about IN about arg1 OK
that DT that arg1 OK
there RB ^ ^ false_start
place NN place arg1 OK
there RB ^ ^ false_start

i- PRP ^ ^ repeat
i- PRP ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
too RB too arg2 OK
much JJ much arg2 OK

you PRP ^ ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
if IN if argM_adverb false_start
you PRP you arg0 false_start
're VBP 're ^ false_start
going VBG going argM_mod false_start
to TO to argM_mod false_start
vacation VB vacation arg4 false_start
or ADVP-DIR- 4 or arg4 false_start
any CC any arg4 false_start
other DT other arg4 false_start
place JJ place arg4 false_start
that NN that arg1 false_start
you WRB you arg1 false_start
want PRP want arg1 false_start
to VBP to arg1 false_start
go TO go arg1 false_start
you PRP you arg1 OK
just RB just argM_adverb OK
want VBP want predicate OK
to TO to arg1 OK
be VB be arg1 OK
somewhere NN somewhere argM_loc OK
where WRB where argM_loc OK
so RB ^ ^ false_start
you PRP you arg0 OK
can MD can argM_mod OK
just RB just argM_adverb OK
relax VB relax arg2 OK
and CC and arg2 OK
just RB ^ ^ false_start
sit VB sit arg2 OK
back RB back argM_loc OK
and CC and arg2 OK
observe VB observe arg2 OK
and CC and arg2 OK
check VB check arg2 OK
out RP out arg1 false_start
the DT the arg1 OK
scenery NN scenery arg1 OK

well UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
was VBD was ^ OK
thinking VBG thinking ^ OK
about IN about ^ OK
doing VBG doing ^ OK
um UH ^ ^ filler
like UH ^ ^ filler
a DT a ^ OK
calcium NN calcium ^ OK
supplement NN supplement ^ OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
n- RB ^ ^ repeat
never RB never ^ OK
did VBD did ^ OK
because IN because ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
drink VB drink ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
milk NN milk ^ OK
or CC ^ ^ repeat
or CC or ^ OK
eat VB eat ^ OK
too RB too ^ OK
much JJ much ^ OK
dairy NN dairy ^ OK

but CC ^ ^ false_start
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
gosh UH ^ ^ filler
i PRP i ^ OK
guess VBP guess ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
as RB as ^ OK
concerned JJ concerned ^ OK
with IN with ^ OK
that DT ^ ^ repeat
that RB that ^ OK
much JJ much ^ OK
stuf- NN ^ ^ repeat
stuff NN stuff ^ OK
as IN as ^ OK
you PRP you ^ OK

i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
rem- VB rem- ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
n- RB ^ ^ repeat
never RB never ^ OK
did VBD did ^ OK
take VB take ^ OK
it PRP it ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'll MD ^ ^ repeat
'll MD 'll ^ OK
a- VB ^ ^ repeat
ask VB ask ^ OK
my PRP my ^ OK
doctor NN doctor ^ OK

but CC ^ ^ false_start
um UH um ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
could MD could ^ OK
they PRP they ^ OK
be VB be ^ OK
lying VBG lying ^ OK

do VBP do ^ OK
you PRP you ^ OK
feel VB feel ^ OK

do VBP do ^ OK
you PRP you ^ OK
feel VB feel ^ OK
different JJ different ^ OK
now RB now ^ OK
that IN that ^ OK
you PRP you ^ OK
have VBP have ^ OK
n't RB n't ^ OK
taken VBN taken ^ OK
it PRP it ^ OK
in IN in ^ OK
a DT a ^ OK
few JJ few ^ OK
days NNS days ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
does VBZ does ^ OK
it PRP it ^ OK

n- XX ^ ^ false_start
oh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
've VBP ^ ^ repeat
've VBP 've ^ OK
been VBN been ^ OK
receiving VBG receiving ^ OK
calls NNS calls ^ OK
all DT all ^ OK
week NN week ^ OK

you PRP you ^ OK
i- XX i- ^ OK

the DT ^ ^ repeat
the DT the ^ OK
onl- JJ ^ ^ repeat
only JJ only ^ OK
time NN time ^ OK
you PRP you ^ OK
use VBP use ^ OK
your PRP your ^ OK
cell NN cell ^ OK
phone NN phone ^ OK
is ADVP-TMP- 1 is ^ OK
when VBZ when ^ OK
you WRB you ^ OK
're PRP 're ^ OK
making VBP making ^ OK
a VBG a ^ OK
call DT call ^ OK

and CC ^ ^ false_start
i PRP i ^ OK

but CC but ^ OK
th- DT th- ^ OK

but CC ^ ^ false_start
the DT the ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
though RB though ^ OK
um UH ^ ^ filler
if IN if ^ OK
you PRP you ^ OK
receive VBP receive ^ OK
a DT a ^ OK
call NN call ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
make VB make ^ OK
a DT a ^ OK
call NN call ^ OK

so UH ^ ^ filler
um UH ^ ^ filler
like UH ^ ^ filler
if IN ^ ^ false_start
i PRP ^ ^ false_start
g- VBD ^ ^ false_start
eh UH ^ ^ filler
since IN since ^ OK
i PRP i ^ OK
got VBD got ^ OK
your PRP your ^ OK
call NN call ^ OK
i PRP i ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
make VB make ^ OK
any DT any ^ OK
calls NNS calls ^ OK
later RB later ^ OK
on RB on ^ OK
in IN in ^ OK
the DT the ^ OK
day NN day ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
d- VBD ^ ^ repeat
did VBD did ^ OK
talk VB talk ^ OK
to IN to ^ OK
somebody NN somebody ^ OK
one CD one ^ OK
day NN day ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
they PRP they ^ OK
eh UH ^ ^ filler
were VBD were ^ OK
disconnected VBN disconnected ^ OK
with IN with ^ OK
me PRP me ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
assume VBP assume ^ OK
that IN that ^ OK
the DT ^ ^ repeat
the DT the ^ OK
call NN call ^ OK
did VBD did ^ OK
n't RB n't ^ OK
count VB count ^ OK
because IN because ^ OK
i PRP i ^ OK
got VBD got ^ OK
another DT another ^ OK
call NN call ^ OK
the DT the ^ OK
same JJ same ^ OK
day NN day ^ OK

because IN because ^ OK

it PRP it ^ OK
's HVS 's ^ OK
pretty RB pretty ^ OK
much RB much ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ false_start
uh UH ^ ^ filler
become VBN become ^ OK
very RB very ^ OK
established JJ established ^ OK

uh UH ^ ^ filler
many JJ many ^ OK
countries NNS countries ^ OK
uh UH ^ ^ filler
and CC and ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
um UH ^ ^ filler
major JJ major ^ OK
universities NNS universities ^ OK
do VBP do ^ OK
require VB require ^ OK
uh UH ^ ^ filler
a DT a ^ OK
foreign JJ foreign ^ OK
language NN language ^ OK

um UH ^ ^ filler
but CC ^ ^ false_start
there EX ^ ^ false_start
's BES ^ ^ false_start
so RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
for IN for ^ OK
example NN example ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
say UH ^ ^ repeat
if IN ^ ^ repeat
say UH ^ ^ filler
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
're VBP ^ ^ repeat
're VBP 're ^ OK
going VBG going ^ OK
to IN to ^ OK
college NN college ^ OK
to TO to ^ OK
be VB be ^ OK
a DT ^ ^ repeat
a DT a ^ OK
like UH ^ ^ filler
uh UH ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
uh UH ^ ^ filler
dental JJ dental ^ OK
assistant NN assistant ^ OK
or CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
really RB really ^ OK
do VBP do ^ OK
n't RB n't ^ OK
see VB see ^ OK
too RB too ^ OK
much JJ much ^ OK
of IN of ^ OK
a DT a ^ OK
point NN point ^ OK
of IN of ^ OK
requiring VBG requiring ^ OK
that IN that ^ OK
you PRP you ^ OK
have VBP have ^ OK
a DT a ^ OK
foreign JJ foreign ^ OK
language NN language ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
've VBP ^ ^ false_start
personally RB ^ ^ false_start
all UH ^ ^ filler
right UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
the DT the ^ OK
more RBR more ^ OK
you PRP you ^ OK
know VBP know ^ OK
the NP-1 the ^ OK
better DT better ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
all RB all ^ OK
for IN for ^ OK
learning VBG learning ^ OK
languages NNS languages ^ OK

but CC ^ ^ false_start
is VBZ ^ ^ false_start
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
it PRP it ^ OK
being VBG being ^ OK
a DT a ^ OK
requirement NN requirement ^ OK
per FW per ^ OK
se FW se ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
there EX there ^ OK
's BES are ^ false_start
other JJ other ^ OK
important JJ important ^ OK
things NNS things ^ OK
too RB too ^ OK

i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
they PRP they ^ OK
should MD should ^ OK
give VB give ^ OK
uh UH ^ ^ filler
students NNS students ^ OK
a DT ^ ^ false_start
much RB ^ ^ false_start
broader JJR ^ ^ false_start
like UH ^ ^ false_start
a DT ^ ^ false_start
a DT a ^ OK
more JJR more ^ OK
world NN world ^ OK
view NN view ^ OK
of IN of ^ OK
things NNS things ^ OK

i PRP i ^ OK
think VBP think ^ OK
an- CC ^ ^ false_start
and CC ^ ^ false_start
that DT that ^ false_start
would MD would ^ false_start
get VB get ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
kids NNS kids ^ OK
maybe RB maybe ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
actually RB actually ^ OK
interested JJ interested ^ OK
in IN in ^ OK
taking VBG taking ^ OK
up RP up ^ OK
some DT some ^ OK
kind NN kind ^ OK
of IN of ^ OK
foreign JJ foreign ^ OK
language NN language ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
would MD would ^ OK
give VB give ^ OK
them PRP them ^ OK
more JJR more ^ OK
incentive NN incentive ^ OK
of IN of ^ OK
learning VBG learning ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
then RB then ^ OK
we PRP we arg0 OK
moved VBD moved predicate OK
to IN to arg2 OK
um UH ^ ^ filler
midland NNP midland arg2 OK
texas NNP texas arg2 OK
because IN because ^ OK
my PRP my arg0 OK
dad NN dad arg0 OK
w- VBD ^ ^ repeat
was VBD was ^ OK
working VBG working predicate OK
here RB here argM_loc OK
in IN in argM_loc OK
texas NNP texas argM_loc OK
for IN for ^ OK
a DT an arg2 false_start
oil NN oil arg2 OK
company NN company arg2 OK

and CC ^ ^ false_start
then RB then ^ OK
back RB back ^ OK
to IN to ^ OK
college NNP college ^ OK
station NNP station ^ OK

h- PRP ^ ^ repeat
he PRP ^ ^ repeat
yeah UH yeah ^ OK

that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
great JJ great arg2 OK

um UH ^ ^ filler
my PRP my arg0 OK
husband NN husband arg0 OK
had VBD had predicate OK
a DT a ^ OK
friend NN friend arg1 OK

and CC ^ ^ false_start
before IN before ^ OK
then RB then ^ OK
when WRB when ^ OK
i PRP i arg0 OK
lived VBD lived predicate OK
in IN in argM_loc OK
midland NNP midland argM_loc OK
i ADVP-TMP- 1 i arg0 OK
only PRP only ^ OK
had RB had predicate OK
one VBD one arg1 OK
friend CD friend arg1 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
knew VBD knew predicate OK
plenty NN plenty arg1 OK
of IN of arg1 OK
people NNS people arg1 OK

but CC but ^ OK
one DT one ^ OK
really RB really ^ OK
good JJ good ^ OK
friend NN friend ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
we PRP we arg0 OK
like VBP like ^ OK
going VBG ^ ^ repeat
looking VBG looking predicate OK
at IN at arg1 OK
different JJ ^ ^ repeat
like UH ^ ^ filler
different JJ different arg1 OK
place- NNS ^ ^ repeat
shops NNS shops arg1 OK
and CC and arg1 OK
stuff NN stuff arg1 OK

and CC and ^ OK
um UH um ^ OK

but CC but ^ OK
i PRP i arg0 OK
prefer VBP prefer predicate OK
anything NN ^ arg1 false_start
whether IN ^ ^ false_start
they PRP ^ ^ false_start
're VBP ^ ^ false_start
black JJ anything ^ false_start
with IN with arg1 false_start
a DT a arg0 false_start
good JJ good arg0 false_start
plot NN plot arg0 false_start
and CC ^ ^ false_start
a DT ^ ^ false_start
good JJ ^ ^ false_start
that WDT that arg0 false_start
has VBZ has arg1 false_start
character NN character arg1 false_start
development NN development arg1 false_start

they PRP they arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
seem VB seem predicate OK
to TO to arg1 OK
be VB be arg1 OK
s- VBG ^ ^ repeat
spending VBG spending arg1 OK
as RB as arg1 OK
much JJ much arg1 OK
time NN time arg1 OK
as SBAR-2 ^ ^ false_start
acting IN acting arg1 OK
in VBG in arg1 OK
the IN the arg1 OK
films DT films arg1 OK
as NNS as arg1 OK
playing IN playing arg1 OK
in VBG in arg1 OK
the IN the arg1 OK
films DT films arg1 OK
if NNS if ^ OK
that IN that ^ OK
makes DT makes predicate OK
sense VBZ sense arg1 OK
to NN to arg1 OK
you IN you arg1 OK

but CC but ^ OK
they PRP ^ ^ repeat
're VBP ^ ^ repeat
n- XX ^ ^ false_start
they PRP they arg1 OK
're VBP 're predicate OK
letting VBG letting arg2 OK
everything NN everything arg0 OK
else RB else arg0 OK
around IN around arg2 OK
them PRP them arg2 OK
act VBP act arg2 OK
for IN for arg2 OK
them PRP them arg2 OK

well UH ^ ^ filler
there EX there ^ OK
's BES are ^ false_start
some DT some arg1 OK
films NNS films arg1 OK
th- WDT ^ ^ repeat
that WDT that ^ OK
n't RB ^ ^ false_start
fi- XX ^ ^ false_start
e UH ^ ^ filler
you PRP you arg0 OK
you PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
kno- VB ^ ^ false_start
you PRP ^ ^ false_start
u- XX ^ ^ false_start
do VBP ^ ^ false_start
e UH ^ ^ filler
like VBP like predicate OK
because IN because ^ OK
they PRP they arg0 OK
make VBP make predicate OK
you PRP you arg0 OK
think VB think arg1 OK

but CC but ^ OK
they PRP they arg1 OK
're VBP 're predicate OK
not RB not arg2 OK
enjoyable JJ enjoyable arg2 OK
f- NNS ^ ^ repeat
films NNS films arg2 OK
because IN because ^ OK
they PRP they arg0 OK
make VBP make predicate OK
you PRP you arg1 OK
think VB think arg1 OK
about IN about arg1 OK
things NNS things arg1 OK
that WDT that ^ OK
you PRP you arg0 OK
try VBP try predicate OK
to TO to arg1 OK
avoid VB avoid arg1 OK
most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
time NN time ^ OK

well UH ^ ^ false_start
um UH ^ ^ filler
one CD one arg1 OK
of IN of arg1 OK
the DT the arg1 OK
best JJS best arg1 OK
films NNS films ^ OK
although IN although argM_other OK
it PRP it argM_other OK
has VBZ has argM_other OK
no DT no argM_other OK
real JJ real argM_other OK
actors NNS actors argM_other OK
in IN in argM_other OK
there RB there argM_other OK
films NNS ^ arg1 false_start
finding NNP is predicate false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
voice NN ^ ^ false_start
act- NN ^ ^ false_start
finding NNP finding arg2 OK
nemo NNP nemo arg2 OK

well UH ^ ^ filler
not RB not ^ OK
only RB only ^ OK
that DT that ^ OK

it PRP it ^ OK
has VBZ has predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
value NN value arg1 OK
in IN in ^ OK
d- XX ^ ^ false_start
what WP what ^ OK
it PRP it arg0 OK
teaches VBZ teaches predicate OK
people NNS people arg1 OK
teaches VBZ teaches predicate OK
kids NNS kids arg1 OK

even RB even ^ OK
though IN though ^ OK
it PRP it arg0 OK
has VBZ has predicate OK
animation NN animation arg1 OK
it PRP it arg0 OK
has VBZ has predicate OK
all PDT all arg1 OK
the DT the arg1 OK
characteristics NNS characteristi cs arg1 OK
you PRP you arg0 OK
describe VBP describe arg1 OK
in IN ^ ^ repeat
in IN in ^ OK
the DT ^ ^ repeat
^ ^ the ^ OK
ol- JJR ^ ^ repeat
older JJR older ^ OK
films NNS films ^ OK
in IN ^ ^ repeat
in IN in ^ OK
a DT ^ ^ repeat
an DT an ^ OK
car- NN ^ ^ repeat
animation NN animation ^ OK

well UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
talked VBN talked predicate OK
to IN to arg1 OK
more JJR more arg1 OK
adults NNS adults arg0 OK
who WP who ^ OK
have VBP have ^ OK
seen VBN seen predicate OK
it PRP it arg1 OK
more RBR more ^ OK
than IN ^ ^ false_start
once RB ^ ^ false_start
than IN than ^ OK
the DT the ^ OK
kids NNS kids ^ OK

but CC but ^ OK
other JJ other arg0 OK
adults NNS adults arg0 OK
who WP who ^ OK
do VBP do ^ OK
n't RB n't ^ OK
b- VB ^ ^ repeat
buy VB buy predicate OK
films NNS films arg1 OK
are VBP are ^ OK
buying VBG buying predicate OK
this DT this arg1 OK

because IN ^ ^ false_start
it PRP it ^ OK
is VBZ is predicate OK
very RB very arg1 OK
high JJ high arg1 OK
quality NN quality arg1 OK
um UH ^ ^ filler
unlike IN unlike ^ OK
a- NNPS ^ ^ false_start
charlie NNP charlie ^ OK
's POS 's ^ OK
angels NNPS angels ^ OK

i PRP ^ ^ false_start
p- VBP ^ ^ false_start
i PRP i arg0 OK
wo MD wo ^ OK
n't RB n't ^ OK
pay VB pay predicate OK

maybe RB maybe ^ false_start
i PRP i arg0 OK
'll MD 'll ^ OK
do VBP ^ ^ false_start
it PRP ^ ^ false_start
in IN ^ ^ false_start
a DT ^ ^ false_start
de- XX ^ ^ false_start
on IN ^ ^ false_start
uh UH ^ ^ filler
rent VB rent predicate OK
it PRP it arg1 OK
on IN on arg1 OK
a DT a arg1 OK
d. NN d. arg1 OK
v. NN v. arg1 OK
d. NN d. arg1 OK

like UH ^ ^ filler
i- PRP ^ ^ false_start
this DT this arg1 OK
is VBZ is predicate OK
not RB not arg2 OK
out IN out arg2 OK
of IN of arg2 OK
my PRP my arg2 OK
pocket NN pocket arg2 OK

wha- WDT ^ ^ repeat
what WDT what arg1 OK
type NN type arg1 OK
of IN of arg1 OK
activities NNS activities arg1 OK
do VBP do ^ OK
you PRP you arg0 OK
like VB like predicate OK
to TO to ^ OK
do VB do predicate OK
outside RB outside argM_loc OK

uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'd MD ^ ^ false_start
i PRP ^ arg0 false_start
like VBP like predicate OK
to TO to arg1 OK
play VB play arg1 OK
basketball NN basketball arg1 OK
if IN ^ ^ repeat
if IN if ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
can MD can ^ false_start
f- VBP ^ ^ repeat
fi- VBP ^ ^ repeat
find VBP find predicate OK
the DT the arg1 OK
time NN time arg1 OK

gosh UH ^ arg1 filler
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
that DT that ^ false_start
that DT that arg1 OK
's BES 's arg1 OK
uh UH ^ ^ filler
an DT an arg2 OK
underrated JJ underrated arg2 OK
activity NN activity arg2 OK
that WDT that arg1 OK
people NNS ^ ^ repeat
peop- NNS ^ ^ repeat
people NNS people arg0 OK
ar- VBP ^ ^ repeat
are VBP are arg1 OK
n't RB n't argM_neg OK
taking VBG taking arg1 OK
advant- NN ^ ^ repeat
advantage NN advantage arg1 OK
of IN of arg1 OK
anymore NP-1 anymore arg1 OK

tha- DT ^ ^ repeat
that DT that ^ OK
takes VBZ takes ^ OK
some DT some ^ OK
diligence NN diligence ^ OK

i PRP i ^ OK

i PRP i arg0 OK
was VBD was ^ OK
actually RB actually ^ OK
thinking VBG thinking predicate OK
today PP-1 today argM_tmp OK
about IN ^ ^ repeat
like NN ^ ^ repeat
about UH about arg1 OK
possibly IN possibly arg1 OK
that DT ^ ^ false_start
like RB ^ ^ filler
exercising UH exercising arg1 OK
that DT ^ ^ false_start
indoors VBG indoors argM_loc OK
instead RB instead arg1 OK
of IN of arg1 OK
outdoors IN outdoors arg1 OK
because RB because ^ OK
it IN ^ ^ repeat
like MD ^ ^ repeat
i UH ^ ^ false_start
do PRP ^ ^ false_start
n't VBP ^ ^ false_start
know RB ^ ^ false_start
i VB i arg0 OK
might PRP ^ ^ repeat
might PRP might ^ OK
be MD be ^ OK
able VB able ^ OK
to JJ to ^ OK
do TO do predicate OK
it VB it arg1 OK
since PRP since ^ OK
i IN i arg1 OK
'm PRP 'm ^ OK
not VBP not arg2 OK
avai- RB ^ ^ repeat
always JJ always arg2 OK
able RB able ^ OK
to JJ to ^ OK
just TO just ^ OK
go RB ^ ^ repeat
out VBP ^ ^ repeat
go RB ^ ^ repeat
go VB go predicate OK
places VB places arg4 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
wish VBP wish predicate OK
i PRP i arg1 OK
had VBD had arg1 OK
that DT that arg1 OK
ability NN ability arg1 OK

so UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
'm VBP ^ ^ repeat
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
alw- RB ^ ^ repeat
alw- RB ^ ^ repeat
always RB always argM_tmp OK
doing VBG doing predicate false_start
stuff NN stuff arg1 false_start
on IN on arg3 OK
the DT the arg3 OK
go NN go arg3 OK

so RB ^ ^ false_start
actually RB actually ^ OK
fin- VBG ^ ^ repeat
finding VBG finding predicate OK
the DT the arg1 OK
time NN time arg1 OK
to TO to arg1 OK
exercise VB exercise arg1 OK
is ADVP-1 is ^ OK
hard VBZ hard ^ OK

especially RB especially ^ OK
with IN with ^ OK
like UH ^ ^ filler
a DT ^ ^ repeat
a DT a ^ OK
full JJ full ^ OK
day NN day ^ OK
of IN of ^ OK
work NN work ^ OK

bally NNP bally ^ OK
's POS 's ^ OK

and CC ^ ^ false_start
actually UH actually ^ OK
uh UH ^ ^ filler
do VBP ^ ^ repeat
do VBP do ^ OK
like UH ^ ^ filler
an DT an ^ OK
hour NN hour ^ OK
of IN of ^ OK
bi- NN ^ ^ repeat
bicycling NN bicycling ^ OK

and CC ^ ^ false_start
i PRP i arg0 OK
never RB never ^ OK
really RB really ^ OK
liked VBD liked predicate OK
it PRP it arg1 OK
because IN because ^ OK
there EX ^ ^ repeat
's BES ^ ^ repeat
was VBD ^ ^ repeat
n- XX ^ ^ repeat
i PRP ^ ^ repeat
n- XX ^ ^ repeat
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
i PRP ^ ^ repeat
co- MD ^ ^ repeat
i PRP i arg0 OK
had VBD had predicate OK
the DT the arg1 OK
option NN option arg1 OK
of IN of arg1 OK
doing VBG doing arg1 OK
was NP-1 was ^ OK
listening VBD ^ ^ repeat
listening NNS listening predicate OK
to VBG ^ ^ repeat
to VBG to arg1 OK
head- IN ^ ^ repeat
headphones IN headphones arg1 OK

i PRP i ^ OK
know VBP know ^ OK
like UH ^ ^ filler

if UNK if ^ OK
i UNK i ^ OK
could UNK could ^ OK
like UNK ^ ^ filler
have UNK have ^ OK
that UNK that ^ OK
choice UNK choice ^ OK
of UNK ^ ^ repeat
of UNK of ^ OK
uh UNK ^ ^ filler
either UNK either ^ OK
listening UNK listening ^ OK
to UNK to ^ OK
music UNK music ^ OK
or UNK or ^ OK
watching UNK watching ^ OK
t. UNK t. ^ OK
v. UNK v. ^ OK

but CC but ^ OK
uh UH ^ ^ filler
i PRP ^ ^ repeat
at IN at ^ OK
the DT the ^ OK
time NN time ^ OK
when WRB when ^ OK
i PRP i arg0 OK
did VBD did predicate OK
it PRP it arg1 OK
i ADVP-TMP- 1 i arg1 OK
was PRP was predicate OK
n't VBD n't argM_neg OK
actually IN actually arg2 false_start
in RB in arg2 OK
tune IN tune arg2 OK
to NN to arg2 OK
audio UH audio arg2 OK
books JJ books arg2 OK

i PRP ^ ^ repeat
i PRP i ^ OK
like VBP like ^ OK
to TO to ^ OK
listen VB listen ^ OK
to IN to ^ OK
audio JJ audio ^ OK
books NNS books ^ OK
when WRB when ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
like VBP like predicate OK
to TO to arg1 OK
do VB do arg1 OK
that DT that arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
car NN car argM_loc OK

but CC but ^ OK
i PRP i arg0 OK
also RB also ^ OK
like VBP like predicate OK
to TO to arg1 OK
do VB do arg1 OK
it PRP it arg1 OK
when WRB ^ ^ repeat
when WRB when argM_tmp OK
i PRP ^ ^ repeat
i PRP i argM_tmp OK
'm VBP ^ ^ repeat
'm VBP 'm argM_tmp OK
ta- VBG ^ ^ repeat
talking VBG taking argM_tmp false_start
a DT a argM_tmp OK
walk NN walk argM_tmp OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's HVS 's ^ OK
ab- XX ^ ^ repeat
probably RB probably ^ OK
been VBN been ^ OK
a DT a ^ OK
year NN year ^ OK
since IN since ^ OK
i PRP i arg0 OK
've VBP 've ^ OK
played VBN played predicate OK
because IN because ^ OK
i PRP i arg0 OK
have VBP have ^ OK
n't RB n't argM_neg OK
had VBN had predicate OK
any DT any arg1 OK
time NN time arg1 OK

but CC but arg1 OK
my PRP my arg1 OK
favorite NN favorite arg1 OK
outdoor JJ outdoor arg1 OK
that DT ^ ^ false_start
sport NN sport arg1 OK
or CC or arg1 OK
activity NN activity arg1 OK
to TO to arg1 OK
do VB do arg1 OK
's BES ^ ^ false_start
is NP-1 is predicate OK
probably RB probably arg2 false_start
just VBZ just arg2 OK
play RB to ^ false_start
play RB play predicate OK
play RB _NOUN_ ^ false_start
and VB and arg1 OK
play CC ^ arg2 false_start
like VB ^ ^ filler
just UH ^ ^ repeat
shoot-around RB shoot-around arg1 OK
or VB or ^ OK
play CC ^ ^ repeat
play DT play predicate OK
a VBP ^ ^ repeat
a VB a arg1 OK
pick-up DT pick-up arg1 OK
game JJ game arg1 OK
with NN with ^ OK
my IN my ^ OK
friends PRP friends ^ OK

um UH ^ ^ filler
i PRP i ^ OK
would MD would ^ OK
say VB say ^ OK
in- JJ ^ ^ repeat
inside JJ inside ^ OK
activities NNS activities ^ OK
like UH ^ ^ repeat
like UH like ^ OK
actual JJ actual ^ OK
physical JJ ^ ^ repeat
physical JJ physical ^ OK
ac- NNS ^ ^ repeat
activities NNS activities ^ OK

now UH now argM_tmp OK
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
am VBP ^ ^ repeat
am VBP am predicate OK
a DT ^ ^ repeat
a NN ^ ^ repeat
a DT a arg1 OK
huge JJ huge arg1 OK
air NN air arg1 OK
hockey NN hockey arg1 OK
and CC and arg1 OK
uh UH ^ ^ filler
um UH ^ ^ filler
ah UH ^ ^ filler
foosball NN foosball ^ OK
foosball NN _NOUN_ arg1 false_start

or CC or ^ OK
play VB ^ ^ repeat
play VB play ^ OK
billiards NNS billiards ^ OK

uh UH ^ ^ filler
i PRP ^ ^ false_start
just RB ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD had predicate OK
more JJR more arg1 OK
access NN access arg1 OK
to IN to arg1 OK
those DT those arg1 OK
i PRP i arg0 OK
'd MD 'd ^ OK
probably RB probably ^ OK
play VB play predicate OK
constantly RB constantly argM_tmp OK

those DT ^ ^ repeat
those DT those ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
my PRP my ^ OK

well UH well ^ OK
if IN ^ ^ repeat
if IN if ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
were VBD were ^ OK
to TO to ^ OK
go VB go ^ OK
go VB to ^ false_start
like UH ^ ^ repeat
a DT ^ ^ repeat
a DT ^ ^ repeat
like UH ^ ^ filler
a DT a ^ OK
pub NN pub ^ OK
or CC or ^ OK
a DT a ^ OK
bar NN bar ^ OK
or CC or ^ OK
something NN something ^ OK
and CC and ^ OK
they PRP they ^ OK
have VBP had ^ false_start
pool NN pool ^ OK
or CC or ^ OK
darts NN darts ^ OK
or CC or ^ OK
something NN something ^ OK
like IN like ^ OK
that DT that ^ OK

it PRP it ^ OK
's BES 's ^ OK
definitely RB definitely ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
have VBP have ^ OK
a DT a ^ OK
um UH ^ ^ filler
few JJ few ^ OK
friends NNS friends ^ OK

where WRB ^ ^ false_start
i PRP ^ ^ false_start
people NNS people ^ OK
i PRP i ^ OK
call VBP call ^ OK
friends NNS friends ^ OK

i PRP ^ ^ false_start
stay VBP ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
real RB real ^ OK
close RB close ^ OK
with IN with ^ OK

do NP do ^ OK
anything VB anything ^ OK
for NN for ^ OK

got VBD got ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
acquaintances NNS acquaintances ^ OK
where WRB where ^ OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
'll MD 'll ^ OK
talk VB talk ^ OK
to IN to ^ OK
them PRP them ^ OK
socialize ADVP-1 socialize ^ OK
with VBP with ^ OK
them IN them ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
uh UH ^ ^ filler
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
kind RB kind ^ OK
of RB of ^ OK
hard JJ hard ^ OK
when WRB when ^ OK
you PRP you ^ OK
get VBP get ^ OK
so RB so ^ OK
close JJ close ^ OK
to IN to ^ OK
people NNS people ^ OK

and UNK ^ ^ false_start
then UNK then ^ OK
all UNK all ^ OK
of UNK of ^ OK
a UNK a ^ OK
sudden UNK sudden ^ OK
uh UNK ^ ^ filler
you UNK ^ ^ false_start
uh UNK ^ ^ filler
something UNK something ^ OK
they UNK they ^ OK
do UNK do ^ OK
or UNK or ^ OK
something UNK something ^ OK
they UNK they ^ OK
say UNK say ^ OK
c- UNK ^ ^ false_start
bothers UNK bothers ^ OK
you UNK you ^ OK
then UNK then ^ OK
you UNK you ^ OK
have UNK have ^ OK
to UNK to ^ OK
feel UNK feel ^ OK
obligated UNK obligated ^ OK

th- XX ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
afraid JJ afraid ^ OK
to TO to ^ OK
hurt VB hurt ^ OK
their PRP their ^ OK
feelings NNS feelings ^ OK
if IN if ^ OK
you PRP you ^ OK
speak VBP speak ^ OK
what WP what ^ OK
's BES 's ^ OK
on IN on ^ OK
your PRP your ^ OK
mind NN mind ^ OK
and CC and ^ OK
are VBP are ^ OK
afraid JJ afraid ^ OK
to TO to ^ OK
f- XX ^ ^ false_start
lose VB lose ^ OK
that DT that ^ OK
friendship NN friendship ^ OK
that WDT that ^ OK
you PRP you ^ OK
value VBP value ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
um UH ^ ^ filler
used VBD used ^ OK
to TO to ^ OK
when VP when ^ OK
i WRB i ^ OK
was PRP was ^ OK
younger VBD younger ^ OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
and CC ^ ^ false_start
they PRP they ^ OK
start VBP start ^ OK
asking VBG asking ^ OK

and CC ^ ^ false_start
then RB then ^ OK
before IN before ^ OK
you PRP you ^ OK
know VBP know ^ OK
it PRP it ^ OK
you PRP you ^ OK
ask VBP ask ^ OK
them PRP them ^ OK
for IN for ^ OK
help NN help ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
're VBP ^ ^ false_start
like RP say ^ false_start
well UH ^ ^ false_start
you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
but CC but ^ OK
uh UH ^ ^ filler
as IN as ^ OK
i PRP i ^ OK
get VBP get ^ OK
older JJR older ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
finding VBG finding ^ OK
that IN that ^ OK
uh UH ^ ^ filler
having VBG ^ ^ repeat
having VBG having ^ OK
friends NNS friends ^ OK
is VBZ is ^ OK
important JJ important ^ OK

i PRP i ^ OK
call VBP call ^ OK
my PRP my ^ OK
wife NN wife ^ OK
my PRP my ^ OK
best JJS best ^ OK
friend NN friend ^ OK

because IN because ^ OK
if IN if ^ OK
i PRP i ^ OK
have VBP have ^ OK
anything NN anything ^ OK
that WDT ^ ^ false_start
i PRP ^ ^ false_start
can MD ^ ^ false_start
i PRP ^ ^ false_start
have VBP ^ ^ false_start
on IN on ^ OK
my PRP my ^ OK
mind NN mind ^ OK
or CC or ^ OK
that WDT that ^ OK
i PRP i ^ OK
have VBP have ^ OK
to TO to ^ OK
do VB do ^ OK
i NP-3 i ^ OK
can PRP can ^ OK
call MD call ^ OK
her VB her ^ OK
or PRP or ^ OK
talk CC talk ^ OK
to VB to ^ OK
her IN her ^ OK
and PRP and ^ OK
she CC she ^ OK
's PRP 's ^ OK
there BES there ^ OK
for RB for ^ OK
me IN me ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT ^ ^ repeat
's BES ^ ^ repeat
uh UH ^ ^ filler
that WDT that ^ OK
means VBZ means ^ OK
that IN that ^ OK
uh UH ^ ^ filler
you PRP you ^ OK
bond VBP bond ^ OK
with IN with ^ OK
them PRP them ^ OK
beyond IN beyond ^ OK
um UH ^ ^ filler
what WP what ^ OK
w- XX ^ ^ false_start
some DT some ^ OK
people NNS people ^ OK
call VBP call ^ OK
um UH ^ ^ filler

children NNS ^ ^ repeat
raise VB ^ ^ repeat
children NNS ^ ^ repeat
children NNS children ^ OK
are VBP are ^ OK
there RB there ^ OK
just RB just ^ OK
to TO to ^ OK
help VB help ^ OK
them PRP them ^ OK
out RP out ^ OK
around IN around ^ OK
the DT the ^ OK
house NN house ^ OK
doing VBG doing ^ OK
chores NNS chores ^ OK
and CC and ^ OK
stuff NN stuff ^ OK

and CC ^ ^ false_start
she PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
told VBN told ^ OK
her PRP her ^ OK
since IN since ^ OK
day NN day ^ OK
one CD one ^ OK
i PRP i ^ OK
'll MD 'll ^ OK
never RB never ^ OK
be VB be ^ OK
your PRP your ^ OK
dad NN dad ^ OK

and CC ^ ^ false_start
that IN that ^ OK
you PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
you PRP you ^ OK
're VBP 're ^ OK
not RB not ^ OK
selfish JJ selfish ^ OK
with IN with ^ OK
your PRP your ^ OK
friends NNS friends ^ OK

with IN ^ ^ false_start
if IN if ^ OK
they PRP they ^ OK
bring VBP bring ^ OK
a DT a ^ OK
toy NN toy ^ OK
she PRP she ^ OK
wants VBZ wants ^ OK
to TO to ^ OK
play VB play ^ OK
with IN with ^ OK
it PRP it ^ OK
and CC and ^ OK
wo MD ^ ^ repeat
wo MD wo ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
let VB ^ ^ repeat
let VB let ^ OK
her PRP ^ ^ repeat
them PRP them ^ OK
play VB play ^ OK
with IN with ^ OK
her PRP her ^ OK
toys NNS toys ^ OK

so UH so ^ OK
i PRP ^ ^ false_start
tell VBP ^ ^ false_start
her PRP ^ ^ false_start
i PRP i ^ OK
try VBP try ^ OK
to TO to ^ OK
preach VBP preach ^ OK
on IN to ^ false_start
her PRP her ^ OK
just RB just ^ OK
how WRB how ^ OK
much JJ much ^ OK
you PRP you ^ OK
value VB value ^ OK
friends NNS friends ^ OK
and ADVP-1 and ^ OK
how CC ^ ^ repeat
ch- WRB ^ ^ repeat
how XX how ^ OK
much WRB much ^ OK
you JJ you ^ OK
should PRP should ^ OK
cherish MD cherish ^ OK
it VB it ^ OK

unfortunately UNK unfortunately ^ OK
the UNK the ^ OK
way UNK way ^ OK
that UNK that ^ OK
people UNK people ^ OK
are UNK are ^ OK
though UNK though ^ OK
and UNK and ^ OK
when UNK when ^ OK
i UNK i ^ OK
see UNK see ^ OK
these UNK these ^ OK
commercials UNK commercials ^ OK
they UNK they ^ OK
think UNK think ^ OK
friendship UNK friendship ^ OK
's UNK 's ^ OK
all UNK all ^ OK
about UNK about ^ OK
partying UNK partying ^ OK

that IN that ^ OK
if IN if ^ OK
you PRP you ^ OK
have VBP have ^ OK
a DT ^ ^ false_start
friend NN ^ ^ false_start
that WDT ^ ^ false_start
you PRP ^ ^ false_start
someone NN someone ^ OK
in IN in ^ OK
your PRP your ^ OK
life NN life ^ OK
you PRP you ^ OK
do VBP do ^ OK
call VB call ^ OK
a DT a ^ OK
friend NN friend ^ OK
that WDT that ^ OK
you PRP is ^ false_start
you PRP ^ ^ false_start
should MD ^ ^ false_start
something NN something ^ OK
to TO to ^ OK
be VB be ^ OK
valued VBN valued ^ OK
not NP-2 not ^ OK
just RB just ^ OK
to RB to ^ OK
go TO go ^ OK
out VB out ^ OK
and RB and ^ OK
have CC have ^ OK
fun VB fun ^ OK
with NN with ^ OK

that DT ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
they PRP they ^ OK
need VBP need ^ OK
that DT that ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we ^ OK
have VBP have ^ OK
a DT a ^ OK
nephew NN nephew ^ OK
who WP who ^ OK
um UH ^ ^ filler
hung VBD hung ^ OK
around RB around ^ OK
with IN with ^ OK
the DT the ^ OK
wrong JJ wrong ^ OK
crowd NN crowd ^ OK

but CC but ^ OK
now RB ^ ^ false_start
he PRP ^ ^ false_start
's BES ^ ^ false_start
o- XX ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
nineteen CD nineteen ^ OK
now RB now ^ OK

i PRP i ^ OK

i PRP ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
good JJ good ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
y- XX ^ ^ false_start
i PRP i ^ OK
can MD can ^ OK
tell VB tell ^ OK
you PRP you ^ OK
^ ^ that ^ OK
's BES 's ^ OK
something NN something ^ OK
that WDT that ^ OK
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
all DT all ^ OK
of IN of ^ OK
us PRP us ^ OK
sh- MD ^ ^ repeat
uh UH ^ ^ filler
should MD should ^ OK
learn VB learn ^ OK
to TO to ^ OK
value VB value ^ OK

to TO to ^ OK
have VB have ^ OK
that NP-1 that ^ OK

um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like IN ^ ^ filler
i PRP i ^ OK
say VBP say ^ OK
i PRP i ^ OK
have VBP have ^ OK
a DT ^ ^ repeat
a DT a ^ OK
few JJ few ^ OK
friends NNS friends ^ OK

people UNK people ^ OK
you UNK you ^ OK
talk UNK talk ^ OK
to UNK to ^ OK
on UNK on ^ OK
a UNK a ^ OK
daily UNK daily ^ OK
basis UNK basis ^ OK
but UNK but ^ OK
you UNK you ^ OK
wo UNK wo ^ OK
n't UNK n't ^ OK
go UNK go ^ OK
out UNK out ^ OK
of UNK of ^ OK
your UNK your ^ OK
way UNK way ^ OK
for UNK for ^ OK
on UNK ^ ^ repeat
you UNK ^ ^ filler
know UNK ^ ^ filler
on UNK ^ ^ repeat
r- UNK ^ ^ repeat
on UNK on ^ OK
a UNK ^ ^ repeat
a UNK ^ ^ repeat
a UNK a ^ OK
limb UNK limb ^ OK

you PRP ^ ^ false_start
would MD ^ ^ false_start
never RB ^ ^ false_start
but CC but ^ OK
the DT the ^ OK
people NNS people ^ OK
i PRP i ^ OK
do VBP do ^ OK
call VB call ^ OK
friends NNS friends ^ OK
i PRP i ^ OK
cherish VBP cherish ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
ag- RB ^ ^ repeat
again RB again ^ OK
i PRP i ^ OK
could MD could ^ OK
tell VB tell ^ OK
you PRP you ^ OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
well RB ^ ^ filler
my PRP my ^ OK
wife NN wife ^ OK
has VBZ has ^ OK
a DT a ^ OK
friend NN friend ^ OK
that WDT that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
she PRP ^ ^ false_start
's BES ^ ^ false_start
my PRP ^ ^ false_start
wife NN ^ ^ false_start
is VBZ is ^ OK
a DT ^ ^ repeat
a DT a ^ OK
divorced JJ divorced ^ OK
woman NN woman ^ OK
with IN with ^ OK
a DT a ^ OK
child NN child ^ OK

before IN before ^ OK
i PRP i ^ OK
came VBD came ^ OK
around RB around ^ OK
ha- XX ^ ^ false_start
she PRP she ^ OK
had VBD had ^ OK
a DT a ^ OK
friend NN friend ^ OK
whose WP whose ^ OK
child NN child ^ OK
's BES 's ^ OK
like UH like ^ OK
a DT a ^ OK
year NN year ^ OK
and CC and ^ OK
a DT a ^ OK
half NN half ^ OK
younger JJR younger ^ OK
than IN than ^ OK
ours PRP ours ^ OK

but UNK but ^ OK
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
she UNK she ^ OK
um UNK ^ ^ filler

not RB not ^ OK
not RB ^ ^ repeat
a DT a ^ OK
a- DT ^ ^ repeat
lot NN lot ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
there EX there ^ OK
was VBD were ^ false_start
some DT some ^ OK
empty JJ empty ^ OK
warheads NNS warheads ^ OK
i PRP ^ ^ false_start
guess VBP ^ ^ false_start
that DT ^ ^ repeat
that DT that ^ OK
were VBD were ^ OK
used VBN used ^ OK
for IN as ^ false_start
like UH ^ ^ filler
biological JJ biological ^ OK
weapons NNS weapons ^ OK

but CC but ^ OK
i PRP ^ ^ repeat
i PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
i PRP i ^ OK
just RB just ^ OK
know VBP know ^ OK
that IN that ^ OK
they PRP they ^ OK
have VBP have ^ OK
other JJ other ^ OK
information NN information ^ OK
that WDT that ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
have VB have ^ OK
about IN about ^ OK
what WP what ^ OK
he PRP he ^ OK
's BES 's ^ OK
actually RB actually ^ OK
up IN up ^ OK
to IN to ^ OK

so UH so ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
th- VB ^ ^ repeat
think VB think ^ OK
bush NNP bush ^ OK
would MD would ^ OK
do VB do ^ OK
this DT this ^ OK
just RB just ^ OK
for IN to ^ false_start
getting VBG get ^ false_start
his PRP his ^ OK
father NN father ^ OK
's POS 's ^ OK
legacy NN legacy ^ OK
resolved VBN resolved ^ OK

do VBP ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
but NP-1 ^ ^ repeat
uh CC ^ ^ filler
but UH but ^ OK
i CC i ^ OK
do PRP do ^ OK
think VBP think ^ OK
if VB if ^ OK
it IN it ^ OK
's PRP 's ^ OK
necessary BES necessary ^ OK
we JJ we ^ OK
should PRP should ^ OK
go MD go ^ OK
in VB in ^ OK
there IN there ^ OK
and RB and ^ OK
do CC do ^ OK
whatever VB whatever ^ OK
we WDT we ^ OK
need PRP need ^ OK
to VBP to ^ OK
do TO do ^ OK

well UH ^ ^ false_start
just RB just ^ OK
get VB get ^ OK
saddam NNP saddam ^ OK
out IN out ^ OK
of IN of ^ OK
there RB there ^ OK
is VBZ is ^ OK
what WP what ^ OK
i PRP i ^ OK
think VBP think ^ OK

and CC ^ ^ false_start
then RB then ^ OK
eh UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
he PRP he ^ OK
learned VBD learned ^ OK
that DT that ^ OK
lesson NN lesson ^ OK
i PRP i ^ OK
would MD would ^ OK
have VB have ^ OK
thought VBN thought ^ OK
anyway RB anyway ^ OK
with IN ^ ^ repeat
with IN by ^ false_start
north NNP north ^ OK
korea NNP korea ^ OK
calling VBG calling ^ OK
them PRP them ^ OK
axis NNP axis ^ OK
of IN of ^ OK
evil NNP evil ^ OK

and CC ^ ^ false_start
then RB then ^ OK
here RB here ^ OK
there EX there ^ OK
are VBP are ^ OK
mm UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
upset JJ upset ^ OK
with IN with ^ OK
us PRP us ^ OK
and CC and ^ OK
threatening VBG threatening ^ OK
to TO to ^ OK
use VB use ^ OK
nuclear JJ nuclear ^ OK
weapons NNS weapons ^ OK

i PRP i ^ OK
would MD would ^ OK
hope VB hope ^ OK
it PRP it ^ OK
would MD would ^ OK
be VB be ^ OK
somewhat RB somewhat ^ OK
like IN like ^ OK
um UH ^ ^ filler
the DT the ^ OK
first JJ first ^ OK
war NN war ^ OK
eh UH ^ ^ filler
with IN with ^ OK
iraq NNP iraq ^ OK
that IN that ^ OK
it PRP ^ ^ repeat
there EX there ^ OK
would MD ^ ^ repeat
would MD would ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
be VB ^ ^ repeat
be VB be ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
loss NN loss ^ OK
of IN of ^ OK
life NN life ^ OK

i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
sure JJ sure ^ OK
why RB why ^ OK

that DT that arg1 OK
's BES 's predicate OK
for IN for arg2 OK
sure JJ sure arg2 OK

why UH ^ ^ filler
more RBR more arg1 OK
has VBZ has ^ OK
to TO to ^ OK
be VB be ^ OK
be VB ^ predicate repeat
put VBN put arg2 OK
into IN into argM_loc OK
it PRP it argM_loc OK

i PRP i arg0 false_start
guess VBP guess predicate false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
at RB ^ ^ repeat
at RB at argM_extent OK
least RB ^ ^ repeat
least RB least argM_extent OK
they PRP they arg1 OK
're VBP 're arg1 OK
aware JJ aware arg2 OK
of IN that arg2 false_start
the DT the arg1 OK
problem NN problem arg1 OK
can MD can argM_mod OK
happen VB happen arg2 OK

firstly RB firstly argM_adverb false_start
not RB ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
that IN that arg1 OK
you PRP you arg0 OK
and CC and arg0 OK
i PRP i arg0 OK
can MD can argM_mod OK
do VB do arg1 OK
anything NN anything arg1 OK
about IN about arg1 OK
it PRP it arg1 OK

you PRP you ^ OK
ca MD ca ^ OK
n't RB n't ^ OK
put VB put ^ OK

the DT ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
very RB very arg2 OK
scary JJ scary arg2 OK

my PRP my arg1 OK
my PRP ^ ^ repeat
grandfather NN grandfather arg1 OK
grandfather NN ^ ^ repeat
was VBD was ^ OK
i- VBZ ^ ^ repeat
gassed VBN gassed predicate OK
in IN in argM_tmp OK
world NNP ^ ^ false_start
war NNP ^ ^ false_start
two CD ^ ^ false_start
so UH ^ ^ filler
uh UH ^ ^ filler
world NNP world argM_tmp OK
war NNP war argM_tmp OK
one CD one argM_tmp OK
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
sorry JJ ^ ^ false_start

i PRP i arg2 OK
know VBP know predicate OK
exactly RB exactly arg1 OK
what WP what arg1 OK
you PRP you arg0 OK
're VBP 're arg1 OK
talking VBG talking arg1 OK
about IN about arg1 OK
there NP-1 ^ ^ false_start

he PRP he arg0 OK
suffered VBD suffered predicate OK
from IN from arg1 OK
it PRP it arg1 OK
all PDT all argM_tmp OK
his PRP his argM_tmp OK
life NN life argM_tmp OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP 'm predicate OK
glad JJ glad arg2 OK

going VBG are ^ false_start
so UH ^ ^ filler
they PRP they arg0 OK
going VBG going argM_mod OK
to TO to argM_mod OK
tell VB tell predicate OK
us PRP us arg2 OK
when WRB when arg1 OK
to TO to arg1 OK
shut VB shut arg1 OK
up RP up arg1 OK
on IN on arg1 OK
here RB here arg1 OK

or CC ^ ^ false_start
we PRP ^ ^ false_start
just RB ^ ^ false_start
we PRP ^ ^ repeat
we UNK we arg0 OK
decide UNK decide predicate OK
this UNK this arg1 OK
we UNK ^ ^ false_start

the DT ^ ^ false_start
i PRP i ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it arg1 OK
's BES 's predicate OK
one CD one arg2 OK
of IN of arg2 OK
those DT those arg2 OK
things NNS things arg2 OK
it PRP ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
like IN ^ ^ false_start
i PRP ^ ^ false_start
say VBP ^ ^ false_start
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do arg2 OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
think VB ^ ^ repeat
th- IN ^ ^ repeat
think VB think arg2 OK
we PRP we arg0 OK
can MD can argM_mod OK
whol- JJ ^ ^ false_start
do VB do arg1 OK
a DT a arg1 OK
whole JJ whole arg1 OK
lot NN lot arg1 OK
about IN about arg1 OK

eh UH ^ ^ filler
so UH ^ ^ filler
uh UH uh ^ OK

i PRP i arg0 OK
said VBD said predicate OK
why WRB why argM_cause OK
depress VB depress arg1 OK
everybody NN everybody arg0 OK
trying VBG trying arg1 OK
to TO to arg1 OK
talk VB talk arg1 OK
about IN about arg1 OK
the DT the arg1 OK
subject NN subject arg1 OK

oh UH ^ argM_mod filler
it PRP it arg1 OK
be VB would ^ false_start
be VB be predicate OK
a DT a arg2 OK
wonderful JJ wonderful arg2 OK
experience NN experience arg2 OK

all DT all arg0 OK
appreciate VBP will ^ false_start
appreciate VBP appreciate predicate OK
what WP what arg1 OK
they PRP they arg0 OK
have VBP have arg1 OK
more RBR more argM_extent false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
have VBP ^ ^ repeat
have VBP have ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
looked VBN looked ^ OK
uh UH ^ predicate filler
at IN at arg1 OK
that DT that arg1 OK
lately RB lately argM_tmp OK

but CC but ^ OK
it PRP ^ ^ false_start
u- XX ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
true JJ true ^ OK

so UH ^ ^ false_start
like UH ^ ^ filler
if IN ^ ^ repeat
you PRP ^ ^ repeat
left VBD ^ ^ false_start
like UH ^ ^ filler
what WP what ^ OK
if IN if ^ OK
you PRP you arg0 OK
could MD could ^ OK
find VB find predicate OK
some DT some arg1 OK
investment NN investment arg1 OK
to TO to arg1 OK
throw VB throw arg1 OK
your PRP your arg1 OK
million CD million arg1 OK
in IN in arg2 OK
that NP-1 that arg0 OK
paid DT paid predicate OK
like VBN ^ ^ filler
maybe UH maybe ^ OK
five RB five arg1 OK
percent CD percent arg1 OK
which NN which arg1 OK
would WDT would ^ OK
probably MD probably ^ OK
be RB be predicate OK
hard VB hard arg2 false_start
to JJ to arg2 OK
find TO find arg2 OK
today VB today argM_tmp OK

well UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
how WRB how arg2 OK
old JJ old arg2 OK
you PRP you arg1 OK
are VBP are arg1 OK

well UH ^ ^ filler
d- XX ^ ^ false_start
so UH ^ ^ filler
you PRP you arg0 OK
never RB never ^ OK
thought VBD thought predicate OK
of IN of arg1 OK
like UH ^ ^ filler
the DT the arg1 OK
caribbean NNP caribbean arg1 OK
or CC or arg1 OK
anything NN anything arg1 OK

my PRP my arg1 OK
he PRP ^ ^ false_start
husband NN husband arg1 OK
he PRP ^ ^ false_start
just RB ^ ^ repeat
the DT ^ ^ repeat
well UH ^ ^ filler
just RB just ^ OK
passed VBD ^ ^ repeat
pass- VBD ^ ^ repeat
passed VBD passed predicate OK
the DT the arg2 OK
bar NN bar arg2 OK

well UH ^ ^ filler
his PRP ^ ^ false_start
he PRP ^ ^ repeat
he PRP he arg1 OK
's BES 's predicate OK
in IN in arg2 OK
a DT a arg2 OK
unique JJ unique arg2 OK
position NN position arg2 OK
position NN in ^ false_start
that IN that ^ OK
he PRP he arg0 OK
had VBD had predicate OK
a DT a arg1 OK
career NN career arg1 OK

and CC ^ ^ false_start
then RB then ^ OK
he PRP he arg1 OK
went VBD went predicate OK
back RB back ^ OK
to IN to arg4 OK
law NN law arg4 OK
school NN school arg4 OK
v- XX ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
through IN through ^ OK
his PRP his ^ OK
company NN company ^ OK

well UH ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
have VB have predicate OK
him PRP him arg0 OK
sign VB sign arg1 OK
a DT a arg1 OK
contract NN contract arg1 OK

well UH ^ ^ filler
i PRP i arg0 OK
heard VBD heard predicate OK
blue JJ blue arg1 OK
blue JJ blue arg1 OK
my PRP my arg1 OK
world NN world arg1 OK
is VBZ is arg1 OK
blue JJ blue arg1 OK
three CD three argM_tmp OK
times NNS times argM_tmp OK

well UH ^ ^ filler
i PRP i arg0 OK
figure VBP figure predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
easier JJR easier arg2 OK
if IN if arg1 OK
we PRP we arg0 OK
call VBP call arg1 OK
in RP in arg_particl OK
in RP then ^ false_start
we PRP we arg0 OK
can MD can ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
d- VB ^ ^ repeat
do VB do predicate OK
it PRP it arg1 OK
on IN on argM_tmp OK
our PRP our argM_tmp OK
own JJ own argM_tmp OK
time NN time argM_tmp OK

well UH ^ ^ filler
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg1 OK
go VB go predicate OK
online JJ online arg4 OK
a DT a argM_tmp OK
lot NN lot argM_tmp OK

uh UH ^ ^ filler
well UH ^ ^ filler
there EX ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
found VBD found predicate OK
out RP out arg_particl OK
a- IN ^ ^ repeat
about IN about arg1 OK
it PRP it arg1 OK
on IN on argM_loc OK
a DT a arg1 OK
website NN website arg1 OK
called VBN called predicate OK
volition NNP volition arg2 OK
dot NNP dot arg2 OK
com NNP com arg2 OK

and CC ^ ^ false_start
um UH ^ ^ filler
someone NN someone arg0 OK
on IN on ^ OK
there RB there ^ OK
had VBD had ^ OK
said VBN said predicate OK
that IN that arg1 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
w- XX ^ ^ false_start
one CD one argM_tmp OK
time NN time argM_tmp OK
they PRP they arg0 OK
had VBD had arg1 OK
sports NNS sports arg1 OK

but CC but ^ OK
they PRP they arg0 OK
said VBD said predicate OK
the DT the arg1 OK
same JJ same arg1 OK
thing NN thing arg1 OK

it PRP ^ ^ repeat
's BES ^ ^ repeat
like UH ^ ^ filler
it PRP it arg2 OK
's BES 's predicate OK
an DT an arg2 OK
easy JJ easy arg2 OK
way NN way arg2 OK
to TO to arg2 OK
make VB make arg2 OK
thirty CD thirty arg1 OK
dollars NNS dollars arg1 OK

it PRP it arg1 OK
's BES 's predicate OK
v. NNP v. arg2 OK
o. NNP o. arg2 OK
l. NNP l. arg2 OK
i. NNP i. arg2 OK
t. NNP t. arg2 OK
i. NNP i. arg2 OK
o. NNP o. arg2 OK
n. NNP n. arg2 OK

k- XX ^ ^ false_start
you PRP you ^ OK
go VBP go ^ OK
on RP on ^ OK

and CC ^ ^ false_start
there EX there arg1 OK
's BES 's predicate OK
a DT ^ ^ repeat
l- XX ^ ^ false_start
a DT a arg2 OK
forum NN forum arg2 OK
you PRP you arg1 OK
can MD can ^ OK
go VB go predicate OK
into IN into arg4 OK

i PRP ^ ^ repeat
um UH ^ ^ filler
i PRP i arg0 OK
actually RB actually ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
mystery NN mystery ^ OK
shopping VBG shopping predicate OK

and CC ^ ^ false_start
um UH ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
where WRB where arg2 OK
i PRP i arg0 OK
found VBD ^ ^ repeat
find VBP find arg2 OK
out RP ^ ^ repeat
out RP out arg_particl OK
some DT some arg1 OK
of IN of arg1 OK
my PRP ^ ^ false_start
the DT the arg1 OK
companies NNS companies arg2 OK
that WDT that arg1 OK
i PRP i arg0 OK
work VBP work arg1 OK
for IN for arg1 OK

y- XX ^ ^ false_start
they PRP they arg0 OK
post VB post predicate OK
jobs NNS jobs arg1 OK
on IN on argM_loc OK
there RB there argM_loc OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
neat JJ ^ ^ repeat
neat JJ neat arg2 OK
little JJ ^ ^ repeat
little JJ little arg2 OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
website NN website arg2 OK

oh UH ^ ^ filler
my PRP my ^ OK
gosh UH ^ ^ filler

i PRP i arg0 OK
do VBP do ^ OK
know VB know predicate OK
that IN that arg1 OK
did VBD ^ ^ repeat
n't RB ^ ^ repeat
um UH ^ ^ filler
did VBD ^ ^ false_start
eh UH ^ ^ filler
when WRB when arg1 OK
they PRP they arg0 OK
sent VBD sent arg1 OK
you PRP ^ ^ repeat
you PRP you arg2 OK
the DT the arg1 OK
email NN email arg1 OK
it ADVP-TMP- 1 it arg0 OK
said PRP said arg1 OK
something VBD something arg1 OK

di- VBD ^ ^ false_start
does VBZ does ^ OK
n't RB n't ^ OK
this DT this arg1 OK
study NN study arg1 OK
stop VB stop predicate OK
in IN in argM_tmp OK
like UH ^ ^ filler
december NNP december argM_tmp OK
or CC ^ ^ false_start
something NN ^ ^ false_start

so RB ^ ^ false_start
in IN in arg1 OK
the DT the arg1 OK
midwest NN midwest arg1 OK
you- PRP ^ ^ repeat
you PRP you arg0 OK
said VBD said predicate OK

u- XX ^ ^ false_start
wisconsin NNP wisconsin ^ OK

so UNK ^ ^ false_start
you UNK you ^ OK
never UNK never ^ OK
had UNK had ^ OK
the UNK the ^ OK
urge UNK urge ^ OK
to UNK to ^ OK

not RB not arg1 OK
all DT all arg0 OK
kids NNS kids arg0 OK
have VBP have predicate OK
like IN ^ ^ filler
good JJ good arg1 OK
visual JJ visual ^ OK
visual JJ _NOUN_ arg1 false_start
or CC or ^ OK
like UH ^ ^ filler
using VBG use predicate false_start
it PRP ^ ^ false_start
like UH ^ ^ filler
the DT the arg1 OK
it PRP ^ ^ false_start
keywords NNS keywords arg1 OK
that WDT that arg2 OK
they PRP they arg1 OK
're VBP 're arg1 OK
not RB not argM_neg OK
that RB that arg2 OK
good JJ good arg2 OK
at IN at arg2 OK

like NP-1 ^ ^ filler
that UH that arg1 OK
's DT 's predicate OK
sort BES sort ^ OK
of RB of ^ OK
like RB ^ ^ filler
tactile UH tactile arg2 OK
learning JJ learning arg2 OK

like UH ^ ^ filler
i PRP i arg0 OK
guess VBP guess predicate OK
in IN ^ ^ repeat
in IN it arg0 false_start
like UH ^ ^ repeat
like UH might arg1 false_start
like UH ^ ^ filler
black JJ ^ arg1 false_start
in IN blacken predicate false_start
some DT some arg1 OK
areas NNS areas arg1 OK
because UH because arg1 OK
you PRP ^ ^ repeat
do VBP ^ ^ repeat
n't RB ^ ^ repeat
have VB ^ ^ repeat
like UH ^ ^ filler
you PRP you arg0 OK
ca MD ca arg1 OK
n't RB n't arg1 OK
work VB work arg1 OK
in IN in argM_loc OK
groups NNS groups argM_loc OK
to TO to arg1 OK
do VB do arg1 OK
like UH ^ ^ filler
projects NNS projects arg1 OK
if IN if arg1 OK
you PRP you arg0 OK
are VBP are arg1 OK
not RB not argM_neg OK
like UH ^ ^ filler
working VBG working arg1 OK
with IN with arg3 OK
other JJ other arg3 OK
students NNS students arg3 OK

maybe RB maybe ^ OK
you PRP ^ ^ repeat
're VBP ^ ^ repeat
like UH ^ ^ filler
you PRP you arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
get VB get predicate OK
the DT the arg1 OK
personality NN personality arg1 OK
of IN of arg1 OK
like UH ^ ^ filler
the DT the arg1 OK
professor NN professor arg1 OK

you PRP you arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
even RB even ^ OK
have VB have ^ OK
to TO to ^ OK
go VB go predicate OK
to IN to arg1 OK
a DT a arg1 OK
classroom NN classroom arg1 OK
ever RB ^ ^ false_start

and CC ^ ^ false_start
be VB be ^ OK
first JJ first ^ OK
as IN ^ ^ repeat
that DT ^ ^ repeat
like UH like ^ OK
this DT ^ ^ false_start
people NNS people ^ OK
without IN without ^ OK
that DT that ^ OK
knowledge NN knowledge ^ OK
do VBP ^ ^ repeat
n't RB ^ ^ repeat
have VB ^ ^ repeat
like UH like ^ OK
just RB just ^ OK
using VBG using ^ OK
the DT the ^ OK
internet NN internet ^ OK

uh UH ^ ^ filler
uh UH ^ ^ filler
mhm UH mhm ^ OK

i PRP i ^ OK
've VBP 've ^ OK

d- XX ^ ^ false_start
i- XX ^ ^ false_start
you PRP you arg0 OK
have VBP have predicate OK
a DT a arg1 OK
million CD million arg1 OK
and CC and arg1 OK
a DT a arg1 OK
half DT half arg1 OK
canadian JJ canadian arg1 OK
dollars NNS dollars arg1 OK

canada NNP canada arg1 OK
is VBZ is predicate OK
pretty RB pretty arg2 OK
close RB close arg2 OK
to IN to arg2 OK
america NNP america arg2 OK
w- XX with arg2 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the arg2 OK
same JJ same arg2 OK
language NN language arg2 OK
same JJ same arg2 OK
t. NNP t. arg2 OK
v. NNP v. arg2 OK
shows VBZ shows arg2 OK
same JJ same arg2 OK
society NN society arg2 OK
pretty RB pretty arg2 OK
much RB much arg2 OK

i PRP i arg0 OK
think VB think predicate OK
it PRP it arg1 OK
'd MD 'd arg1 OK
be VB ^ ^ repeat
be VB be arg1 OK
enough RB ^ ^ repeat
enough RB enough arg2 OK
to- TO ^ ^ repeat
to TO to arg2 OK
live VB live arg2 OK
on IN on arg2 OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
'd MD 'd arg1 OK
like VB like arg1 OK
the DT the arg1 OK
climate NN climate arg1 OK
better RBR better arg1 OK
in IN in arg1 OK
canada NNP canada arg1 OK

so RB ^ ^ false_start
i- PRP ^ ^ repeat
it PRP it ^ OK
might SBAR-1 might ^ OK
be VB ^ ^ repeat
be MD be predicate OK
hard VB hard arg2 OK
for JJ for arg2 OK
me IN me arg0 OK
to PRP to arg2 OK
move TO move arg2 OK
someplace VB someplace arg2 OK
else RB else arg2 OK
because RB because ^ OK
i IN ^ ^ repeat
i MD i arg0 OK
'd PRP ^ ^ repeat
would PRP would ^ OK
n't MD n't ^ OK
have RB have predicate OK
a VB a arg1 OK
job DT job arg1 OK

eh UH ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
learned VBN learned predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
on SBAR-2 on arg1 OK
the IN the arg1 OK
job DT job arg1 OK
that NN that arg1 OK
they WDT they arg0 OK
never PRP never arg1 OK
taught RB taught arg1 OK
us VBD us arg2 OK
in PRP in arg1 OK
law IN law arg1 OK
school NN school arg1 OK

ma- XX ^ ^ repeat
it PRP it arg0 OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
make VB make predicate OK
him PRP him arg1 OK
stay VB stay arg1 OK
because IN because ^ OK
they PRP they arg0 OK
paid VBD paid predicate OK
for IN for arg3 OK
it PRP it arg3 OK

so UH ^ ^ false_start
figure VB figure ^ OK
what WP what ^ OK
the DT the ^ OK
heck NN heck ^ OK

so RB ^ ^ false_start
then RB then ^ OK
i PRP i arg0 OK
y- XX ^ ^ repeat
called VBD called predicate OK
in RP in ^ OK
myself PRP myself ^ OK

w- XX ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
probably RB probably arg2 OK

probably RB probably ^ OK
unless IN unless ^ OK
uh UH ^ ^ filler
th- XX ^ ^ repeat
the DT the ^ OK
computer NN computer ^ OK
calls VBZ calls ^ OK
me PRP me ^ OK
at IN at ^ OK
a DT a ^ OK
right JJ right ^ OK
time NN time ^ OK

i- PRP ^ arg1 repeat
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't argM_neg OK
expect VB expect predicate OK
them PRP them arg0 OK
to TO to arg1 OK
call VB call arg1 OK
me PRP me arg1 OK
until IN until arg1 OK
fifth NN the ^ false_start
fifth NN fifth arg1 OK

unl- IN ^ ^ false_start
or CC ^ ^ repeat
or CC or ^ OK
maybe RB maybe ^ OK
they PRP ^ ^ repeat
the DT ^ ^ repeat
the DT the arg0 OK
study NN study arg0 OK
started VBD started predicate OK

i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
get VB get ^ OK
the DT the ^ OK
u- XX ^ ^ filler
i PRP ^ ^ false_start
uh UH ^ ^ filler

you PRP you ^ OK
know VBP know ^ OK
what WP what ^ OK
n- UH ^ ^ repeat
no UH no ^ OK

i PRP ^ ^ repeat
did VBD ^ ^ false_start
n't RB ^ ^ false_start
i PRP i arg1 OK
signed VBD signed predicate OK
up RP up ^ OK
over IN over argM_loc OK
the DT the argM_loc OK
telephone NN telephone argM_loc OK

i PRP i arg0 OK
gave VBD gave predicate OK
th- XX ^ ^ repeat
them PRP them arg2 OK
my PRP my arg1 OK
e-mail NN e-mail arg1 OK
address NN address arg1 OK

but CC but ^ OK
i- PRP ^ ^ repeat
i PRP i arg0 OK
've VBP 've ^ OK
run VBN run predicate OK
into IN into arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
that DT that arg1 OK
lately RB lately arg1 OK

um UH ^ ^ filler
uh UH ^ ^ filler
there EX there ^ OK
's HVS 's ^ OK
recently RB recently ^ OK
been VBN been ^ OK
some DT some ^ OK
news NN news ^ OK
about IN about ^ OK
portions NNS portions ^ OK
of IN ^ ^ repeat
of IN of ^ OK
food NN food ^ OK
that WDT that ^ OK
you PRP you ^ OK
eat VBP eat ^ OK

eh UH ^ ^ filler
that IN that ^ OK
people NNS people ^ OK
are VBP are ^ OK
eating VBG eating ^ OK
too RB too ^ OK
much JJ much ^ OK
at IN at ^ OK
one CD one ^ OK
time NN time ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
no- RB ^ ^ repeat
not RB not ^ OK
a DT a ^ OK
very RB very ^ OK
heavy JJ heavy ^ OK
person NN person ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
claim VBP claim ^ OK
that IN that ^ OK
overweight JJ overweight ^ OK
people NNS people ^ OK
that WDT that ^ OK
eats VBZ eat ^ false_start
a DT a ^ OK
lot NN lot ^ OK
has VBZ have ^ false_start
a DT a ^ OK
shorter JJR shorter ^ OK
lifespan NN lifespan ^ OK

well UH ^ ^ false_start
er UH ^ ^ filler
it PRP ^ ^ repeat
it PRP it ^ OK
does VBZ does ^ OK
seem VB seem ^ OK
like IN like ^ OK
that IN that ^ OK
um UH ^ ^ filler
as RB ^ ^ false_start
far RB ^ ^ false_start
as IN ^ ^ false_start
children NNS ^ ^ false_start
and CC ^ ^ repeat
um UH ^ ^ filler
and CC ^ ^ false_start
these DT these ^ OK
uh UH ^ ^ filler
like UH ^ ^ filler
mcdonald NNP mcdonald ^ OK
's POS 's ^ OK
and CC and ^ OK
places NNS places ^ OK
uh UH ^ ^ filler
they PRP ^ ^ false_start
serve VBP serve ^ OK
such JJ such ^ OK
big JJ big ^ OK
hamburgers NNS hamburgers ^ OK
for IN for ^ OK
a DT a ^ OK
small JJ small ^ OK
child NN child ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
they PRP they ^ OK
say VBP say ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
children NNS children ^ OK
are VBP are ^ OK
overweight JJ overweight ^ OK

which WDT which ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
can MD ^ ^ repeat
can MD can ^ OK
see VB see ^ OK
from IN from ^ OK
my PRP my ^ OK
childhood NN childhood ^ OK

when WRB when ^ OK
we PRP we ^ OK
was VBD were ^ false_start
growing VBG growing ^ OK
up RP up ^ OK
the ADVP-TMP- 1 it ^ false_start
um DT ^ ^ filler
did UH did ^ OK
n't VBD n't ^ OK
seem RB seem ^ OK
like VB like ^ OK
there IN there ^ OK
was RB were ^ false_start
that JJ as ^ false_start
many VBD ^ ^ repeat
many RB many ^ OK
overweight JJ overweight ^ OK
children JJ children ^ OK
as NNS as ^ OK
there IN there ^ OK
are EX are ^ OK
today VBP today ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
really RB really ^ OK
think VB think ^ OK
they PRP they ^ OK
exercise VBP exercise ^ OK
like IN like ^ OK
we PRP we ^ OK
did VBD did ^ OK
when WRB when ^ OK
we PRP we ^ OK
was VBD were ^ false_start
young JJ young ^ OK
because ADVP-TMP- 1 because ^ OK
of IN of ^ OK
um IN ^ ^ filler

and CC ^ ^ false_start
all PDT all ^ OK
these DT these ^ OK
nintendo NNP nintendo ^ OK
games NNS games ^ OK
uh UH ^ ^ filler
instead RB instead ^ OK
of IN of ^ OK
getting VBG getting ^ OK
out RB out ^ OK
and CC and ^ OK
playing VBG playing ^ OK
like IN ^ ^ repeat
like IN like ^ OK
we PRP we ^ OK
used VBD used ^ OK
to TO to ^ OK
when WRB when ^ OK
i PRP i ^ OK
was VBD was ^ OK
a DT a ^ OK
kid NN kid ^ OK

i PRP ^ ^ repeat
well UH ^ ^ false_start
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
fifty-nine CD fifty-nine ^ OK
now RB now ^ OK

so RB so ^ OK
we PRP we ^ OK
had VBD had ^ OK
to TO to ^ OK
get VB get ^ OK
out RB out ^ OK
and CC and ^ OK
play VB play ^ OK
instead IN instead ^ OK
of IN of ^ OK
set VB sit ^ false_start
in IN in ^ OK
the DT the ^ OK
house NN house ^ OK
and CC and ^ OK
play VB play ^ OK
those DT those ^ OK
games NNS games ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP ^ ^ repeat
uh UH ^ ^ filler
i PRP i ^ OK
can MD ^ ^ repeat
ca- XX can ^ false_start
go VB go ^ OK
by IN by ^ OK
my PRP my ^ OK
grandchildren NNS grandchildren ^ OK

uh UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
instead RB instead ^ OK
of IN of ^ OK
getting VBG getting ^ OK
out RP out ^ OK
they PRP they ^ OK
like VBP like ^ OK
to TO to ^ OK
set VB sit ^ false_start
around IN around ^ OK
the DT the ^ OK
t. NN t. ^ OK
v. NN v. ^ OK
or CC or ^ OK
play VB play ^ OK
those DT those ^ OK
games NNS games ^ OK
i- IN ^ ^ repeat
instead IN instead ^ OK
of IN of ^ OK
getting VBG getting ^ OK
out RB out ^ OK
and CC and ^ OK
playing VBG playing ^ OK

i PRP i ^ OK
think VBP think ^ OK
that DT that ^ OK
is VBZ is ^ OK
one CD one ^ OK
of IN of ^ OK
the DT the ^ OK
things NNS things ^ OK
that WDT that ^ OK
hurt VBP hurt ^ OK
more JJR more ^ OK
people NNS people ^ OK
than IN than ^ OK
you PRP you ^ OK
know VBP know ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
good JJ good ^ OK

well UH ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP ^ ^ repeat
'm VBP 'm ^ OK
still RB still ^ OK
a DT a ^ OK
smoker NN smoker ^ OK

uh UH ^ ^ filler
uh UH ^ ^ filler
i PRP i ^ OK
'm VBP 'm ^ OK
not RB ^ ^ repeat
not RB not ^ OK
for IN for ^ OK
it PRP it ^ OK
and CC and ^ OK
would MD would ^ OK
like VB like ^ OK
to TO to ^ OK
quit VB quit ^ OK

but CC but ^ OK
uh UH ^ ^ filler
we PRP we ^ OK
was VBD were ^ false_start
raised VBN raised ^ OK
on IN on ^ OK
a DT a ^ OK
farm NN farm ^ OK

and UNK ^ ^ repeat
and UNK ^ ^ false_start
back UNK back ^ OK
when UNK when ^ OK
i UNK i ^ OK
was UNK was ^ OK
rai- UNK ^ ^ false_start
uh UNK ^ ^ filler
growing UNK growing ^ OK
up UNK up ^ OK
uh UNK ^ ^ filler
you UNK ^ ^ filler
know UNK ^ ^ filler
it UNK ^ ^ false_start
's UNK ^ ^ false_start
it UNK it ^ OK
was UNK was ^ OK
on UNK on ^ OK
television UNK television ^ OK
that UNK that ^ OK
uh UNK ^ ^ filler
winston UNK winston ^ OK
tastes UNK tastes ^ OK
good UNK good ^ OK
like UNK like ^ OK
a UNK a ^ OK
cigarette UNK cigarette ^ OK
should UNK should ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
've VBP 've ^ OK
uh UH ^ ^ filler
attempted VBN attempted ^ OK
it PRP it ^ OK
two CD two ^ OK
or CC or ^ OK
three CD three ^ OK
times NNS times ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
know VBP ^ ^ repeat
know VBP know ^ OK
it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
bad JJ bad ^ OK
habit NN habit ^ OK

well UH ^ ^ false_start
that DT ^ ^ repeat
that DT ^ ^ repeat
th- DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
one CD one ^ OK
of IN of ^ OK
the DT the ^ OK
bigger JJR bigger ^ OK
things NNS things ^ OK
right RB right ^ OK
now RB now ^ OK
with IN with ^ OK
me PRP me ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP you arg0 OK
definitely RB definitely ^ OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your arg0 OK
doctor NN doctor arg0 OK
or CC or arg0 OK
somebody NN somebody arg0 OK
you PRP you arg0 OK
know VBP know arg0 OK
where WRB where arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
your PRP your arg0 OK
life NN life arg0 OK
is VBZ is arg0 OK
in IN in arg0 OK
their PRP their arg0 OK
hands NNS hands arg0 OK
to ADVP-1 to arg1 OK
be TO be arg1 OK
doing VB doing arg1 OK
that VBG that arg1 OK

so RB ^ ^ filler
so RB ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
it PRP ^ ^ false_start
does VBZ ^ ^ false_start
it PRP it arg1 OK
's BES 's arg1 OK
kind RB kind arg2 OK
of RB of arg2 OK
dependent JJ dependent arg2 OK
on IN on arg2 OK
your PRP your arg2 OK
job NN job arg2 OK
as RB as arg2 OK
well RB well arg2 OK

or CC or ^ OK
like IN ^ ^ filler
you PRP ^ ^ filler
were VBD ^ ^ filler
saying VBG ^ ^ filler
even RB even ^ OK
like UH like ^ OK
truck NN truck ^ OK
drivers NNS drivers ^ OK
an- CC ^ ^ false_start
and CC ^ ^ false_start
all DT ^ ^ false_start
of IN ^ ^ false_start
that DT ^ ^ false_start

well UH ^ arg1 filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB ^ ^ filler
if IN ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
like UH ^ ^ filler
incorporated VBN ^ ^ false_start
as IN ^ ^ false_start
a DT ^ ^ false_start
regular JJ ^ ^ false_start
part NN ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
job NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN ^ ^ false_start
you PRP ^ ^ false_start
're VBP ^ ^ false_start
if IN if ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
driving VBG driving predicate OK
trucks NNS trucks arg1 OK
all PDT all argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK
then RB then ^ OK
maybe RB maybe ^ false_start
you PRP you arg0 false_start
would MD would ^ false_start
have VB ^ ^ false_start
or CC ^ ^ false_start
something NN ^ ^ false_start
like IN ^ ^ false_start
that DT have predicate false_start
one CD one ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
every DT every argM_tmp OK
week NN week argM_tmp OK

but CC ^ ^ false_start
if IN if ^ OK
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
kind RB ^ ^ filler
of RB ^ ^ filler
oh UH oh arg2 OK
we PRP we arg0 OK
're VBP 're arg2 OK
going VBG going arg2 OK
to TO to arg2 OK
have VB have arg2 OK
a DT a arg1 OK
drug NN drug arg1 OK
test NN test arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
then RB then arg2 OK
you PRP ^ ^ filler
're VBP ^ ^ filler
like RP ^ ^ filler
i PRP ^ ^ false_start
don- VBP ^ ^ false_start
d- XX ^ ^ false_start
it PRP it arg0 OK
feels VBZ feels arg2 OK
more JJR more arg1 OK
of IN of arg1 OK
an DT an arg1 OK
invasion NN invasion arg1 OK
that DT that arg1 OK
way NN way arg1 OK

it PRP it arg1 OK
does VBZ does ^ OK
ka- XX ^ ^ repeat
kind RB kind ^ OK
of RB of ^ OK
give VB give predicate OK
you PRP you arg1 OK
some DT some ^ false_start
security NN security ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
from IN from arg1 OK
another DT another arg1 OK
standpoint NN standpoint arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
if IN if ^ OK
everyone NN everyone arg1 OK
's BES 's ^ OK
been VBN been predicate OK
tested VBN tested arg2 OK
then NP-1 ^ ^ repeat
then RB then ^ OK
i RB ^ ^ filler
do PRP ^ ^ filler
n't VBP ^ ^ filler
know RB ^ ^ filler
you VB you arg0 OK
kind PRP kind ^ OK
of RB of ^ OK
have RB have predicate OK
a VBP a arg1 OK
little DT little arg1 OK
bit JJ bit arg1 OK
of NN of arg1 OK
a IN a arg1 OK
feeling DT feeling arg1 OK
of NN of arg1 OK
security IN security arg1 OK
that NN that arg1 OK
people IN people arg0 OK
are NNS are arg1 OK
n't VBP n't arg1 OK
doing RB doing arg1 OK
drugs VBG drugs arg1 OK
in NNS in argM_loc OK
your IN your argM_loc OK
work PRP work argM_loc OK
place NN place argM_loc OK
type NN ^ ^ false_start
thing NN ^ ^ false_start

they PRP they arg0 OK
actually RB actually ^ false_start
do VBP do predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
drug NN drug arg1 OK
testing NN testing arg1 OK
here RB here argM_loc OK
as RB as ^ OK
well RB well ^ OK

the DT the ^ OK

um UH ^ ^ filler
eh UH ^ ^ filler
the DT the arg1 OK
only JJ only arg1 OK
one CD one arg1 OK
i PRP i arg1 OK
've VBP 've arg1 OK
had VBN had arg1 OK
is NP-1 ^ ^ repeat
is VBZ is predicate OK
the VBZ the arg2 OK
one DT one arg2 OK
for CD for arg1 OK
the IN the arg1 OK
company DT company arg1 OK
that NN that arg2 OK
i WDT i arg0 OK
work PRP work arg2 OK
for VBP for arg2 OK
now IN now arg2 OK

um UH ^ ^ filler
but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK

i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
hear VBP hear predicate OK
a DT a arg1 OK
lot NN lot arg1 OK
about IN about arg1 OK
it PRP it arg1 OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
just RB just arg2 OK
a DT a arg2 OK
standard JJ standard arg2 OK
part NN part arg2 OK
of IN ^ ^ repeat
of IN ^ ^ repeat
of IN of arg2 OK
getting VBG getting arg2 OK
hired VBN hired arg1 OK
here RB here argM_loc OK

but CC ^ ^ false_start
i PRP i arg0 OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
eat VB eat predicate OK
it PRP it arg1 OK
very RB very argM_tmp OK
often RB often argM_tmp OK
because IN because argM_cause OK
it- PRP ^ ^ false_start
i PRP i arg0 OK
have VBP have argM_cause OK
an DT an arg1 OK
ulcer NN ulcer arg1 OK

so RB ^ ^ filler
they PRP ^ ^ false_start
i PRP i arg0 OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
really RB really argM_adverb OK
eat VB eat predicate OK
it PRP it arg1 OK

something NN something ^ OK
b- IN ^ ^ repeat
beyond IN beyond ^ OK
just RB just ^ OK
spaghetti NN spaghetti ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
i PRP i arg0 OK
'd MD 'd argM_mod OK
like VB like arg1 OK
it PRP it arg1 OK
because IN because argM_cause OK
i PRP i arg0 OK
do VBP do argM_mod OK
n't RB n't argM_neg OK
like VB like argM_cause OK
basil NNP basil arg1 OK
quite PDT quite argM_extent OK
that DT that argM_extent OK
much JJ much argM_extent OK
but CC but argM_discou OK
i PRP ^ ^ false_start
really RB ^ ^ false_start
i PRP i arg0 OK
like VBP like arg1 OK
garlic NN garlic arg1 OK

so UH ^ ^ false_start
uh UH ^ ^ filler
what WP ^ ^ false_start
about IN ^ ^ false_start
do VBP do ^ OK
you PRP you arg0 OK
like VB like predicate OK
wine NN wine arg1 OK
with IN with arg1 OK
your PRP your arg1 OK
italian JJ italian arg1 OK
food NN food arg1 OK

every RB every ^ OK
once RB once ^ OK
in IN in ^ OK
a DT a ^ OK
while NN while ^ OK

not RB ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
really RB ^ ^ repeat
drink VB drink predicate OK
too RB too argM_tmp OK
often RB often argM_tmp OK
because IN because argM_cause OK
it PRP it arg1 OK
's BES 's argM_cause OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
another DT another arg2 OK
no NN no arg2 OK
no NN no arg2 OK

so UH ^ ^ false_start
well UH ^ ^ filler
my PRP ^ ^ repeat
my PRP my arg0 OK
stomach NN stomach arg0 OK
does VBZ does ^ OK
n't RB n't argM_neg OK
really RB really argM_adverb OK
like VB like predicate OK
alcohol NN alcohol arg1 OK
either RB either argM_discou OK

w- WP what arg2 false_start
part NN part arg2 OK
of IN of arg2 OK
the DT the arg2 OK
country NN country arg2 OK
are VBP are predicate OK
you PRP you arg1 OK
from IN from arg2 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP ^ ^ repeat
've VBP 've ^ OK
been VBN been predicate OK
through IN through arg2 OK
pennsylvania NNP pennsylvania arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
think VB ^ ^ repeat
think VB think predicate OK
i PRP ^ ^ repeat
i PRP i arg1 OK
ever RB ^ ^ repeat
ever RB ever argM_adverb OK
was VBD ^ ^ repeat
went VBD went arg1 OK
to IN to arg4 OK
pittsburgh NNP pittsburgh arg4 OK

uh UH ^ ^ filler
we PRP ^ ^ false_start
went VBD ^ ^ false_start
to IN ^ ^ false_start
the DT ^ ^ false_start
it PRP it arg1 OK
was VBD was predicate OK
a DT a arg2 OK
tourist NN tourist arg2 OK
thing NN thing arg2 OK

it- PRP ^ ^ false_start
i PRP i arg0 OK
live VBP live predicate OK
in IN in argM_loc OK
california NNP california argM_loc OK
not RB not argM_loc OK
texas NNP texas argM_loc OK

no UH ^ ^ false_start
i PRP ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
all RB all arg2 OK
right JJ right arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
i PRP i arg0 OK
would MD would argM_mod OK
want VB want arg1 OK
to TO to arg1 OK
live VB live arg1 OK
in IN in argM_loc OK
texas NNP texas argM_loc OK
either RB either argM_discou OK

there EX there arg1 OK
's BES 's predicate OK
just RB just argM_adverb OK
not RB not argM_neg OK
a DT a arg2 OK
whole JJ whole arg2 OK
lot NN lot arg2 OK
but CC but arg2 OK
oil NN oil arg2 OK
refineries NNS refineries arg2 OK
and CC and arg2 OK
lots NNS lots arg2 OK
of IN of arg2 OK
smelly JJ smelly arg2 OK
cows NNS cows arg2 OK
and CC ^ ^ repeat
and CC and arg2 OK
nothing NN nothing arg2 OK

that DT ^ ^ repeat
that DT ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
it PRP it arg2 OK

which WDT ^ ^ false_start
they PRP they arg1 OK
're VBP 're predicate OK
all RB all arg2 OK
right JJ right arg2 OK

because IN ^ ^ false_start
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
real RB real arg2 OK
hot JJ hot arg2 OK
there RB there arg2 OK
too RB too arg2 OK

yeah UNK ^ ^ filler
but UNK but ^ OK

because IN because ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
friendship NN friendship arg1 OK
worth JJ is predicate false_start
worth JJ worth arg2 OK
more JJR more arg2 OK
than IN than arg2 OK
money NN money arg2 OK

u- XX ^ ^ false_start
that DT ^ ^ repeat
i- VBZ ^ ^ false_start
that DT that ^ OK
is VBZ is ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
was VBD ^ ^ repeat
was VBD was ^ OK
thinking VBG thinking predicate OK
the DT the arg1 OK
same JJ same arg1 OK
thing NN thing arg1 OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

because IN because ^ OK
if IN if ^ OK
you PRP you ^ OK
build VBP build ^ OK
a DT a ^ OK
relationship NN relationship ^ OK
with IN with ^ OK
somebody NN somebody ^ OK
like IN like ^ OK
that DT that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
as IN as ^ OK
a DT a ^ OK
friend NN friend ^ OK
you PRP you ^ OK
could MD could ^ OK
n't RB n't ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
know VB know predicate OK
about IN about arg1 OK
that DT that arg1 OK

well UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
s- NN ^ ^ repeat
something NN something arg1 OK
you PRP ^ ^ repeat
you PRP you arg0 OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
buy VB buy ^ OK
off RP ^ predicate false_start

m- XX ^ ^ false_start
yeah UH yeah ^ OK

you PRP ^ ^ repeat
you PRP you arg0 OK
'd MD ^ ^ repeat
'd MD 'd ^ OK
be VB ^ ^ repeat
be VB be ^ OK
blessed VBN ^ ^ repeat
blessed VBN blessed predicate OK
to TO to arg2 OK
have VB have arg2 OK
a DT a arg1 OK
few JJ few arg1 OK
good JJ good arg1 OK
friends NNS friends arg1 OK

i PRP i ^ OK
'm VBP 'm ^ OK
uh UH ^ ^ filler
b- VBN ^ ^ repeat
born VBN born ^ OK
and CC and ^ OK
raised VBN raised ^ OK

y- XX ^ ^ false_start
ah UH ah ^ OK

i PRP i arg0 OK
've VBP 've ^ OK
got VBN got predicate OK
friends NNS friends arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
've VBP 've arg1 OK
been VBN ^ ^ false_start
having VBG had arg1 false_start
since IN since argM_tmp OK
i PRP i arg1 OK
was VBD was argM_tmp OK
a DT a arg2 OK
kid NN kid arg2 OK

well UH ^ ^ filler
when WRB when ^ OK
i PRP ^ ^ repeat
i PRP i arg1 OK
was VBD was predicate OK
little JJ little arg2 OK
i- ADVP-TMP- 1 ^ ^ false_start
we PRP we arg0 OK
probably RB ^ ^ repeat
probably PRP probably ^ OK
only RB ^ ^ repeat
only RB only ^ OK
moved VBD ^ ^ repeat
moved RB moved predicate OK
a VBD a argM_tmp OK
total DT total argM_tmp OK
of NN of argM_tmp OK
three IN three argM_tmp OK
four CD four argM_tmp OK
times CD times argM_tmp OK
maybe NNS ^ ^ false_start

so UH ^ ^ false_start
but CC but ^ OK
we PRP ^ ^ repeat
excuse VB ^ ^ false_start
me PRP ^ ^ false_start
we PRP we arg0 OK
always RB ^ ^ repeat
always RB always ^ OK
m- XX ^ ^ repeat
moving VBG moving predicate OK
around IN around arg2 OK
the DT the arg2 OK
same JJ same arg2 OK
neighborhoods NNS neighborhoods arg2 OK

because IN because ^ OK
i PRP i arg0 OK
remember VBP remember predicate OK
um UH ^ ^ filler
once RB once argM_tmp OK
when WRB ^ ^ repeat
when WRB ^ ^ repeat
we PRP ^ ^ false_start
wer- VBD ^ ^ false_start
when WRB when arg1 OK
i PRP i arg1 OK
was VBD was arg1 OK
little JJ little arg2 OK
and ADVP-TMP- 1 and arg1 OK
i CC i arg0 OK
had PRP had arg1 OK
just VBD just arg1 OK
started RB started arg1 OK
junior VBN junior arg1 OK
high JJ high arg1 OK
school JJ school arg1 OK

and CC ^ ^ false_start
um UH ^ ^ filler
we PRP we arg0 OK
had VBD had ^ OK
to TO to ^ OK
move VB move predicate OK
because IN because ^ OK
our PRP ^ ^ repeat
our PRP our arg1 OK
h- NN ^ ^ repeat
house NN house arg1 OK
had VBD had ^ OK
burnt VBN burnt predicate OK
up RP up arg_particl OK

but CC ^ ^ false_start
there EX there ^ OK
was VBD was ^ OK
like UH ^ ^ filler
a DT a ^ OK
side NN side ^ OK
of IN of ^ OK
the DT the ^ OK
road NN road ^ OK

so RB ^ ^ filler
i PRP i ^ OK
just RB just ^ OK
pulled VBD pulled ^ OK
over RB over ^ OK

and CC ^ ^ false_start
oh UH ^ ^ filler
i PRP i ^ OK
'll MD 'll ^ OK
just RB just ^ OK
sit VB sit ^ OK
here RB here ^ OK
for IN for ^ OK
fifteen CD fifteen ^ OK
minutes NNS minutes ^ OK

i PRP i ^ OK
have VBP have ^ OK
my PRP my ^ OK
kids NNS kids ^ OK
in IN in ^ OK
the DT the ^ OK
car NN car ^ OK

and CC ^ ^ false_start
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden JJ sudden ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
within IN within ^ OK
one CD one ^ OK
minute NN minute ^ OK
w- XX ^ ^ false_start
of IN of ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
us PRP us ^ OK
thinking VBG thinking ^ OK
we PRP we ^ OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
sit VB sit ^ OK
here RB here ^ OK
for IN for ^ OK
fifteen CD fifteen ^ OK
minutes NNS minutes ^ OK
we PRP we ^ OK
had VBD had ^ OK
security NN security ^ OK
on IN on ^ OK
us PRP us ^ OK
with IN with ^ OK
guns NNS guns ^ OK

we PRP we ^ OK
were VBD were ^ OK
so RB so ^ OK
freaked VBN freaked ^ OK
out RP out ^ OK

and CC ^ ^ false_start
they PRP they ^ OK
were VBD were ^ OK
screaming VBG screaming ^ OK
get VB get ^ OK
out IN out ^ OK
of IN of ^ OK
there RB there ^ OK

you PRP ^ ^ repeat
it PRP ^ ^ false_start
was VBD ^ ^ false_start
like UH ^ ^ filler
you PRP you ^ OK
are VBP ^ ^ repeat
are VBP are ^ OK
scaring VBG scaring ^ OK
my PRP my ^ OK
children NNS children ^ OK

i- PRP ^ ^ false_start
i PRP i ^ OK
had VBD had ^ OK
no DT no ^ OK
idea NN idea ^ OK
what WP what ^ OK
they PRP they ^ OK
were VBD were ^ OK
doing VBG doing ^ OK

because IN ^ ^ false_start
wha- WP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know ^ OK
if IN if ^ OK
they PRP they ^ OK
were VBD were ^ OK
terrorists NNS terrorists ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
so RB ^ ^ false_start
that DT ^ ^ false_start
was VBD ^ ^ false_start
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
was VBD was ^ OK
the DT the ^ OK
approach NN approach ^ OK
was VBD was ^ OK
like UH ^ ^ false_start
really RB ^ ^ repeat
extremely RB extremely ^ OK
high JJ high ^ OK
tech NNP tech ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
we PRP we ^ OK
're VBP 're ^ OK
not RB not ^ OK
doing VBG doing ^ OK
anything NN anything ^ OK

we PRP ^ ^ false_start
were VBD ^ ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
wait VB ^ ^ false_start
for IN ^ ^ false_start
and CC ^ ^ false_start
im- XX ^ ^ false_start
they PRP they ^ OK
're VBP 're ^ OK
screaming VBG screaming ^ OK
the DT the ^ OK
whole JJ whole ^ OK
time NN time ^ OK

and CC ^ ^ false_start
um UH ^ ^ filler
the DT the ^ OK
uh UH ^ ^ filler
one CD one ^ OK
guy NN guy ^ OK
was VBD was ^ OK
screaming VBG screaming ^ OK
move VB move ^ OK
it PRP it ^ OK

and CC ^ ^ false_start
e- XX ^ ^ false_start
so RB ^ ^ filler
i PRP i ^ OK
put VBP put ^ OK
it PRP it ^ OK
in IN in ^ OK
gear NN gear ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
i PRP i ^ OK
'm VBP ^ ^ false_start
like RP said ^ false_start
well UH ^ ^ filler
you PRP you ^ OK
move VB move ^ OK
so IN so ^ OK
i PRP i ^ OK
can MD can ^ OK
drive VB drive ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP i ^ OK
'll MD 'll ^ OK
move VB move ^ OK

if IN ^ ^ false_start
you PRP ^ ^ false_start
get VBP ^ ^ false_start
ou- RB ^ ^ false_start
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want ^ OK
to TO to ^ OK
run VB run ^ OK
you PRP you ^ OK
over RP over ^ OK

and CC ^ ^ false_start
i- PRP ^ ^ false_start
i PRP ^ ^ false_start
could MD ^ ^ false_start
n't RB ^ ^ false_start
even RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i ^ OK
got VBD got ^ OK
in IN in ^ OK
the DT the ^ OK
parking NN parking ^ OK
space NN space ^ OK

they PRP they ^ OK
were VBD ^ ^ false_start
totally RB totally ^ OK
disappeared VBN disappeared ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
w- XX ^ ^ false_start
said VBD said ^ OK
did VBD did ^ OK
that DT that ^ OK
just RB just ^ OK
happen VB happen ^ OK

and CC ^ ^ false_start
so RB ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
is VBZ is ^ OK
this DT this ^ OK
all DT all ^ OK
effective JJ effective ^ OK

i PRP i ^ OK
was VBD was ^ OK
freaked VBN freaked ^ OK
out RP out ^ OK
by IN by ^ OK
it PRP it ^ OK

i PRP i ^ OK
was VBD was ^ OK
like UH ^ ^ filler

um UH ^ ^ filler
well UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
what WP what ^ OK
they PRP they ^ OK
really RB really ^ OK
need VBP need ^ OK
to TO to ^ OK
focus VB focus ^ OK
their PRP their ^ OK
money NN money ^ OK
on IN on ^ OK
is NP-2 is ^ OK
where VBZ where ^ OK
they WRB they ^ OK
fell PRP fell ^ OK
through VBD through ^ OK
the IN the ^ OK
y- DT y- ^ OK
um XX ^ ^ filler

w- WRB ^ ^ false_start
where WRB where ^ OK
everything NN everything ^ OK
fell VBD fell ^ OK
through IN through ^ OK
the DT the ^ OK
cracks NNS cracks ^ OK
is ADVP-LOC- 1 ^ ^ false_start
is VBZ ^ ^ false_start
was VBZ was ^ OK
on VBD on ^ OK
border IN border ^ OK
security NN security ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
my PRP my ^ OK
girlfriend NN girlfriend ^ OK
's POS 's ^ OK
husband NN husband ^ OK
works VBZ works ^ OK
for IN for ^ OK
that NP-2 the ^ false_start
department CC department ^ false_start
um UH ^ ^ filler
what WP ^ ^ false_start
do VBP ^ ^ false_start
they PRP ^ ^ false_start
call VB ^ ^ false_start
it PRP ^ ^ false_start
when NP-PRD-1 when ^ OK
you WRB you ^ OK
come PRP come ^ OK
in VBP in ^ OK
the IN the ^ OK
country DT country ^ OK
and NN and ^ OK
you CC you ^ OK
have PRP have ^ OK
to VBP to ^ OK
get TO get ^ OK
approved VB approved ^ OK
and VBN ^ ^ false_start

a- XX ^ ^ false_start
g- XX ^ ^ false_start
so UH ^ ^ false_start
anyway UH ^ ^ false_start
h- PRP ^ ^ repeat
he PRP ^ ^ repeat
she PRP ^ ^ repeat
she PRP she ^ OK
has VBZ ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
seen VBN ^ ^ repeat
see VB see ^ OK
him PRP ^ ^ repeat
him PRP him ^ OK
for IN for ^ OK
eight CD eight ^ OK
months NNS months ^ OK
after IN after ^ OK
this DT this ^ OK
happened VBD happened ^ OK

because IN ^ ^ false_start
e- XX ^ ^ false_start
and CC ^ ^ false_start
our PRP our ^ OK
prisons NNS prisons ^ OK
are VBP are ^ OK
so RB so ^ OK
full JJ full ^ OK
of IN of ^ OK
all PDT all ^ OK
these DT these ^ OK
people NNS people ^ OK

they PRP they ^ OK
went VBD went ^ OK
out RB out ^ OK
and CC and ^ OK
arrested VBN arrested ^ OK
arrested VBN ^ ^ false_start
that NP-1 _ARG_ ^ false_start
that NP-1 that ^ OK
were WDT were ^ OK
in VBD in ^ OK
the IN the ^ OK
country DT country ^ OK
illegally NN illegally ^ OK

now RB now ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
then RB ^ ^ false_start
you PRP you ^ OK
got VBD got ^ OK
this DT this ^ OK
mexican JJ mexican ^ OK
guy NN guy ^ OK
trying VBG trying ^ OK
to TO to ^ OK
get VB get ^ OK
a DT a ^ OK
drivers NNS driver's ^ false_start
licenses NNS licenses ^ OK
in IN in ^ OK
this DT this ^ OK
e- NN ^ ^ false_start
election NN election ^ OK
for IN for ^ OK
um UH ^ ^ filler
illegal JJ illegal ^ OK
aliens NNS aliens ^ OK

it PRP it ^ OK
's BES 's ^ OK
like RP like ^ OK
w- WP ^ ^ false_start
what WP what ^ OK
happened VBD happened ^ OK
to IN to ^ OK
just RB just ^ OK
thinking VBG thinking ^ OK
normally RB normally ^ OK
and CC and ^ OK
saying VBG saying ^ OK
other JJ other ^ OK
countries NNS countries ^ OK
do VB do ^ OK
n't RB n't ^ OK
let VB let ^ OK
anybody NN anybody ^ OK
come VB come ^ OK
in RB in ^ OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
from IN ^ ^ repeat
from IN from arg2 OK
atlanta NNP atlanta arg2 OK

that IN ^ ^ repeat
that IN that ^ OK
i PRP i ^ OK
talk VBP talk ^ OK
southern JJ southern ^ OK

th- IN ^ ^ repeat
that IN ^ ^ false_start
i PRP i arg1 OK
talk VBP talk predicate OK
like IN like arg2 OK
i PRP i arg1 OK
'm VBP 'm arg2 OK
from IN from arg2 OK
the DT the arg2 OK
south NN south arg2 OK

uh UH ^ ^ filler
two CD ^ ^ repeat
two CD two ^ OK
or CC ^ ^ repeat
or CC or ^ OK
three CD three ^ OK
times NNS times ^ OK
i PRP i ^ OK
think VBP think ^ OK

uh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
uh UH ^ ^ filler
think VBP think predicate OK
you PRP you arg0 OK
can MD can arg1 OK
do VB do arg1 OK
it PRP it arg1 OK
three CD ^ ^ repeat
uh UH ^ ^ filler
three CD three arg1 OK
ti- NNS ^ ^ repeat
times NNS times arg1 OK

eh UH ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
this DT this ^ OK
this DT ^ arg1 false_start
you PRP is predicate false_start
you PRP your argM_tmp false_start
first JJ first argM_tmp OK
time NN time argM_tmp OK
calling VBG calling arg2 OK

that DT that ^ OK
's BES 's ^ OK
yeah UH ^ ^ filler
about RB about ^ OK
ye- UH ^ ^ repeat

i PRP ^ ^ repeat
i PRP i arg0 OK
had VBD have ^ false_start
n't RB n't ^ OK
heard VBN heard predicate OK
anything NN anything arg1 OK
about IN about arg1 OK
her PRP her arg1 OK
on IN on ^ OK
the DT the ^ OK
news NN news ^ OK
lately RB lately argM_tmp OK

he PRP he ^ OK
got VBD got ^ OK
yeah UH yeah ^ OK

and CC ^ arg1 false_start
some DT ^ ^ repeat
some DT some arg1 OK
of IN of arg1 OK
people NNS the ^ false_start
they PRP ^ ^ repeat
uh UH ^ ^ filler
they PRP ^ ^ false_start
uh UH ^ ^ filler
corporate JJ ^ ^ false_start
them PRP corporate ^ false_start
they PRP ^ ^ false_start
people NNS ^ ^ false_start
them PRP people ^ false_start
they PRP ^ ^ false_start
up IN ^ ^ false_start
them PRP up ^ false_start
they PRP ^ ^ false_start
there RB ^ ^ false_start
them PRP there ^ false_start
can MD can ^ OK
be VB be predicate OK
uh UH ^ ^ filler
uh UH ^ ^ filler
big JJ big ^ false_start
time NN time ^ false_start
crooks NNS crooks ^ false_start

that DT that ^ OK
's BES 's ^ OK
what WP what ^ OK
i PRP i ^ OK

sets VBZ sets ^ OK
a DT a ^ OK
yeah UH ^ ^ filler

uh UH ^ ^ filler
uh UH ^ ^ filler
yeah UH yeah ^ OK

they PRP they arg0 OK
come VBP come predicate OK
on RB on ^ OK
and CC ^ ^ repeat
and CC and ^ OK
let VB let predicate OK
us PRP us arg0 OK
know VB know arg1 OK
when WRB when arg1 OK
we PRP we arg1 OK
get VBP get arg1 OK
through RB through arg2 OK
with IN with arg2 OK
the DT the arg2 OK
conversation NN conversation arg2 OK

i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
think VB think predicate OK
of IN of arg1 OK
it PRP it arg1 OK
neither RB either ^ false_start

clinton NNP clinton arg1 OK
he PRP ^ ^ repeat
ah UH ^ ^ filler
he PRP ^ ^ false_start
's BES ^ ^ repeat
was VBD ^ ^ repeat
was VBD was predicate OK
ah UH ^ ^ filler
ah UH ^ ^ filler
what WP what arg2 OK
you PRP you arg0 OK
call VBP call arg2 OK
a DT a arg2 OK
character NN character arg2 OK

ah UH ^ ^ filler
no UH no ^ OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
uh UH ^ ^ filler
know VB know predicate OK
too RB too arg1 OK
much RB much arg1 OK
more JJR more arg1 OK
about IN about arg1 OK
uh UH ^ ^ filler
like IN ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
about IN ^ ^ repeat
about IN about arg1 OK
martha NNP ^ ^ repeat
martha NNP martha arg1 OK
stewart NNP stewart arg1 OK
and CC and arg1 OK
that DT that arg1 OK
other JJ ^ ^ repeat
other JJ other arg1 OK
guy NN guy arg1 OK

but CC ^ ^ false_start
i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
quite RB ^ ^ repeat
quite RB quite ^ OK
think VB think predicate OK
of IN of arg1 OK
his PRP his arg1 OK
name NN name arg1 OK

let VB ^ ^ false_start
's PRP ^ ^ false_start
see VB ^ ^ false_start
how WRB how argM_mnr OK
do VBP do ^ OK
we PRP we arg0 OK
draw VB draw predicate OK
the DT the arg1 OK
line NN line arg1 OK

eh UH ^ ^ filler
although RB ^ ^ false_start
let VB let predicate OK
's PRP 's arg0 OK
suppose VB suppose arg1 OK
you PRP you arg0 OK
're VBP 're arg1 OK
watching VBG watching arg1 OK
the DT the arg1 OK
jay NNP jay arg1 OK
leno NNP leno arg1 OK
monologue NN monologue arg1 OK
which WDT which arg1 OK
i PRP i arg1 OK
often RB often argM_tmp OK
watch VBP watch arg1 OK
in IN in argM_purpos OK
order NN order argM_purpos OK
to TO to argM_purpos OK
fall VB fall argM_purpos OK
asleep RB asleep arg4 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
he PRP he arg0 OK
's HVS 's ^ OK
done VBN done predicate OK
some DT ^ ^ repeat
some DT some arg1 OK
o. NNP o. arg1 OK
j. NNP j. arg1 OK
and CC and arg1 OK
clinton NNP clinton arg1 OK
jokes NNS jokes arg1 OK
where WRB where argM_loc OK
i PRP i arg0 OK
think VBP think arg1 OK
it PRP it arg1 OK
's HVS 's arg1 OK
gone VBN gone arg1 OK
not RB not argM_neg OK
just RB just argM_adverb OK
into IN into arg4 OK
the DT the arg4 OK
r. NN r. arg4 OK
rated VBN rated arg4 OK
area NN area arg4 OK
but CC but argM_discou OK
just RB just argM_adverb OK
mean JJ mean arg4 OK

that IN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB ^ ^ false_start
of RB ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
m- JJ ^ ^ false_start
in IN in arg2 OK
bad JJ bad arg2 OK
taste NN taste arg2 OK
because IN because argM_cause OK
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's argM_cause OK
just RB just argM_adverb OK
mean VB mean arg2 OK

now UH ^ ^ filler
is VBZ is ^ OK
he PRP he arg0 OK
showing VBG showing predicate OK
us PRP us arg2 OK
a DT a arg1 OK
headline NN headline arg1 OK
that WDT that arg1 OK
they PRP they arg0 OK
probably RB probably argM_adverb OK
meant VBD meant arg1 OK
in IN in argM_mnr OK
all DT all argM_mnr OK
sincerity NN sincerity argM_mnr OK
or CC or arg1 OK
an DT an arg1 OK
article NN article arg1 OK
about IN about arg1 OK
a DT ^ ^ repeat
a DT ^ ^ repeat
a DT a arg1 OK
crime NN crime arg1 OK
or CC or arg1 OK
something NN something arg1 OK

they PRP ^ ^ repeat
they PRP they arg0 OK
're VBP ^ ^ repeat
're VBP 're ^ OK
already RB already argM_adverb OK
suggesting VBG suggesting predicate OK
there EX there arg1 OK
's BES 's arg1 OK
something NN something arg2 OK
humorous JJ humorous arg2 OK
when WRB when argM_tmp OK
they PRP they arg0 OK
present VBP present arg2 OK
it PRP it arg1 OK

when UNK when argM_adverb OK
he UNK he argM_adverb OK
's UNK 's argM_adverb OK
presenting UNK presenting argM_adverb OK
the UNK the argM_adverb OK
two UNK two argM_adverb OK
last UNK last argM_adverb OK
names UNK names argM_adverb OK
of UNK of argM_adverb OK
people UNK people argM_adverb OK
that UNK that argM_adverb OK
got UNK got argM_adverb OK
married UNK married argM_adverb OK
he UNK he arg0 OK
's UNK 's ^ OK
not UNK not argM_neg OK
saying UNK saying predicate OK
is UNK is arg1 OK
anything UNK anything arg1 OK
dirty UNK dirty arg2 OK
or UNK or arg2 OK
filthy UNK filthy arg2 OK
or UNK or arg2 OK
funny UNK funny arg2 OK
about UNK about arg2 OK
their UNK their arg2 OK
names UNK names arg2 OK
except UNK except arg2 OK
by UNK by arg2 OK
suggestion UNK suggestion arg2 OK

uh UH ^ ^ filler
in IN in arg1 false_start
terms NNS terms arg1 false_start
of IN of arg1 false_start
what WP what arg1 false_start
's BES 's predicate false_start
in IN in arg2 false_start
good JJ good arg2 false_start
taste NN taste arg2 false_start
i PRP i arg0 OK
think VBP think predicate OK
the DT the arg0 OK
lines NNS lines arg0 OK
um UH ^ ^ filler
changes VBZ change arg1 false_start
over IN over argM_tmp OK
time NN time argM_tmp OK
because IN because argM_cause OK
uh UH ^ ^ filler
there EX there arg1 OK
are VBP are argM_cause OK
some DT some arg1 OK
things NNS things arg1 OK
that WDT that arg1 OK
my PRP my arg1 OK
kids NNS kids arg1 OK
think VBP think arg1 OK
are VBP are arg1 OK
really RB really arg1 OK
funny JJ funny arg1 OK
that WDT that arg1 OK
i PRP i arg0 OK
think VBP think arg2 OK
are VBP are arg2 OK
just RB just arg2 OK
trash NN trash arg2 OK

because IN because argM_cause OK
i PRP ^ ^ false_start
um UH ^ ^ OK
one CD one arg0 OK
of IN of arg0 OK
my PRP my arg0 OK
kids NNS kids arg0 OK
had VBD had predicate OK
one CD one arg1 OK

y- XX ^ ^ false_start
this DT this arg1 OK
is VBZ is predicate OK
a DT a arg2 OK
number NN number arg2 OK
of IN of arg2 OK
years NNS years arg2 OK
ago RB ago arg2 OK
because IN because argM_cause OK
they PRP they arg1 OK
're VBP 're argM_cause OK
out IN out arg2 OK
of IN of arg2 OK
the DT the arg2 OK
house NN house arg2 OK
now RB now arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
said VBD said predicate OK
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't argM_neg OK
want VB want arg1 OK
to TO to arg1 OK
ever RB ever arg1 OK
hear VB hear arg1 OK
that DT that arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
house NN house argM_loc OK
again RB again argM_tmp OK

and CC and ^ OK
not RB not ^ OK
only RB only ^ OK
that DT that ^ OK

but CC but argM_discou OK
eh UH ^ ^ filler
this DT this arg1 OK
is VBZ is predicate OK
n't RB n't argM_neg OK
just RB just argM_adverb OK
humor NN humor arg2 OK
but CC but argM_discou OK
language NN language arg2 OK

i PRP i ^ OK

because IN because argM_cause OK
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
i- XX ^ ^ false_start
here RB ^ ^ repeat
here RB here arg1 OK
's BES 's arg1 OK
an DT ^ ^ repeat
uh UH ^ ^ filler
an DT an arg2 OK
e- JJ ^ ^ repeat
interesting JJ interesting arg2 OK
point NN point arg2 OK

maybe RB maybe argM_adverb OK
sometimes RB sometimes argM_tmp OK
things NNS things arg1 OK
are VBP are predicate OK
funny JJ funny arg2 OK
because IN because argM_cause OK
there EX there arg1 OK
's BES 's argM_cause OK
so RB so arg1 OK
much JJ much arg1 OK
creativity NN creativity arg1 OK
involved VBN involved arg2 OK

or CC ^ ^ false_start
when WRB ^ ^ false_start
when WRB when argM_tmp OK
the- PRP ^ ^ false_start
they PRP they argM_tmp OK
write VBP write argM_tmp OK
songs NNS songs argM_tmp OK
on IN on argM_tmp OK
the DT the argM_tmp OK
fly NN fly argM_tmp OK
they ADVP-TMP- 1 they arg1 OK
're PRP 're predicate OK
really VBP really argM_adverb OK
funny RB funny arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
because IN because argM_cause OK
the DT that arg2 false_start
you PRP you arg0 OK
ca MD ca argM_mod OK
n't RB n't argM_neg OK
imagine VB imagine arg1 OK
that IN that arg1 OK
someone NN someone arg0 OK
can MD can argM_mod OK
make VB make arg1 OK
that DT that arg1 OK
up RP up arg1 OK

and CC ^ ^ false_start
i PRP i ^ OK
believe VBP believe ^ OK
that IN that ^ OK
money NN money ^ OK
does VBZ does ^ OK
bring VB bring ^ OK
happiness NN happiness ^ OK
in IN ^ ^ repeat
in IN in ^ OK
some DT some ^ OK
senses NNS senses ^ OK

th- XX th- ^ OK

then RB ^ ^ repeat
then RB then ^ OK
they PRP they ^ OK
have VBP have ^ OK
to TO to ^ OK
take VB take ^ OK
the DT the ^ OK
taxes NNS taxes ^ OK
out IN out ^ OK
of IN of ^ OK
that DT that ^ OK

and CC ^ ^ false_start
then RB then ^ OK
what WP what ^ OK
ever RB ever ^ OK
else RB else ^ OK
problems NNS problems ^ OK
you PRP you ^ OK
get VBP get ^ OK
with IN with ^ OK
all PDT all ^ OK
that DT that ^ OK
money NN money ^ OK
at IN at ^ OK
once RB once ^ OK

then RB then ^ OK
you PRP you ^ OK
have VBP have ^ OK
all PDT all ^ OK
these DT this ^ false_start
family NN family ^ OK
you PRP you ^ OK
never RB never ^ OK
knew VBD knew ^ OK
about IN about ^ OK

it PRP it ^ OK
's BES 's ^ OK
weird JJ weird ^ OK
because IN because ^ OK
i PRP i ^ OK
thought VBD thought ^ OK
i PRP i ^ OK
would MD would ^ OK
get VB get ^ OK
somebody NN somebody ^ OK
i PRP i ^ OK
know VBP know ^ OK
on NP-1 on ^ OK
the IN the ^ OK
phone DT phone ^ OK
eventually NN eventually ^ OK

it PRP it ^ OK
's BES 's ^ OK

now UH ^ ^ false_start
i PRP ^ ^ false_start
never RB ^ ^ false_start
heard VBD ^ ^ false_start
of IN ^ ^ false_start
th- DT ^ ^ false_start
well UH ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
the DT the ^ OK
university NNP university ^ OK
of IN of ^ OK
pennsylvania NNP pennsylvania ^ OK

w- XX ^ ^ false_start
now RB now ^ OK
maybe RB maybe ^ OK
you PRP you ^ OK
can MD can ^ OK
tell VB tell ^ OK
me PRP me ^ OK

are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
married JJ married ^ OK

ho UH ^ ^ filler
ho UH ^ ^ filler
ho UH ^ ^ filler
ho UH ^ ^ filler
no UH no ^ OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
still RB ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
twenty-five CD twenty-five ^ OK

i PRP i ^ OK
just RB just ^ OK
uh UH ^ ^ filler
ha- VBP ^ ^ repeat
have VBP have ^ OK
s- XX ^ ^ false_start
mm UH ^ ^ false_start
r- RB ^ ^ false_start
recently RB recently ^ OK
gone VBN gone ^ OK
into IN into ^ OK
like UH ^ ^ filler
my PRP my ^ OK
first JJ first ^ OK
serious JJ serious ^ OK
relationship NN relationship ^ OK
in IN in ^ OK
like UH ^ ^ filler
two CD two ^ OK
and CC and ^ OK
half NN half ^ OK
years NNS years ^ OK

and CC ^ ^ false_start
it PRP it ^ OK
's SBAR-1 's ^ OK
funny BES funny ^ OK
that JJ that ^ OK
this IN this ^ OK
is DT is ^ OK
my VBZ my ^ OK
topic PRP topic ^ OK
tonight NN tonight ^ OK
because NN because ^ OK
i IN i ^ OK
was PRP was ^ OK
just VBD just ^ OK
talking RB talking ^ OK
to VBG to ^ OK
my IN my ^ OK
boyfriend PRP boyfriend ^ OK
last NN last ^ OK
night JJ night ^ OK
about NN about ^ OK
how IN how ^ OK
i WRB i ^ OK
went PRP went ^ OK
into VBD into ^ OK
this IN this ^ OK
relationship DT relationship ^ OK

and CC ^ ^ false_start
how WRB how ^ OK
when WRB when ^ OK
i PRP i ^ OK
went VBD went ^ OK
into IN into ^ OK
that DT that ^ OK
relationship NN relationship ^ OK
i ADVP-TMP- 1 ^ ^ false_start
kind PRP ^ ^ false_start
of RB ^ ^ false_start
like RB ^ ^ filler
i UH i ^ OK
was PRP was ^ OK
n't VBD n't ^ OK
looking RB looking ^ OK
so VBG ^ ^ filler
much RB ^ ^ filler
for RB for ^ OK
that IN ^ ^ false_start
what DT what ^ OK
you WP you ^ OK
want PRP want ^ OK
in VBP in ^ OK
a IN a ^ OK
life DT life ^ OK
partner NN partner ^ OK

this DT ^ ^ false_start
is VBZ ^ ^ false_start
the DT ^ ^ false_start
this DT this ^ OK
is VBZ is ^ OK
three CD three ^ OK
months NNS months ^ OK
now RB now ^ OK

like UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
eh UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
surprised JJ surprised ^ OK
at IN at ^ OK
how WRB how ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
we PRP we ^ OK
've VBP 've ^ OK
known VBN known ^ OK
each DT each ^ OK
other JJ other ^ OK
for IN for ^ OK
a DT a ^ OK
long JJ long ^ OK
time NN time ^ OK

but CC ^ ^ false_start
once IN once ^ OK
we PRP we ^ OK
kind RB ^ ^ filler
of RB ^ ^ filler
got VBD got ^ OK
together RB together ^ OK
like UH ^ ^ filler
we PRP we ^ OK
just RB just ^ OK
connected VBN connected ^ OK
off RP off ^ OK

like UH ^ ^ filler
so UH ^ ^ filler
we PRP we ^ OK
're VBP 're ^ OK
in IN in ^ OK
that DT that ^ OK
like UH ^ ^ filler
oh UH ^ ^ filler
you PRP you ^ OK
're VBP 're ^ OK
so RB so ^ OK
wonderful JJ wonderful ^ OK
phase NN phase ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
the DT the ^ OK
one CD one ^ OK
that WDT that ^ OK
only RB only ^ OK
lasts VBZ lasts ^ OK
for IN for ^ OK
like UH ^ ^ filler
a DT a ^ OK
little JJ little ^ OK
while NN while ^ OK

and CC ^ ^ false_start
then RB then ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
pretty RB pretty ^ OK
soon RB soon ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
like RP like ^ OK
get VB get ^ OK
the DT the ^ OK
hell NN hell ^ OK
out IN out ^ OK
of IN of ^ OK
here RB here ^ OK

i PRP ^ ^ false_start
what WP ^ ^ false_start
honestly RB ^ ^ false_start
what WP ^ ^ false_start
i PRP ^ ^ repeat
l- XX ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
my PRP ^ ^ false_start
since IN since ^ OK
i PRP i ^ OK
was VBD was ^ OK
young JJ young ^ OK
i PRP i ^ OK
've VBP 've ^ OK
always RB always ^ OK
felt VBN felt ^ OK
that IN that ^ OK
the DT the ^ OK
most RBS most ^ OK
important JJ important ^ OK
thing NN thing ^ OK
for IN for ^ OK
me PRP me ^ OK
to TO to ^ OK
find VB find ^ OK
in IN in ^ OK
someone NN someone ^ OK
that WDT that ^ OK
i PRP i ^ OK
would MD would ^ OK
spend VB spend ^ OK
my PRP my ^ OK
life NN life ^ OK
with IN with ^ OK
was NP-1 was ^ OK
the VBD the ^ OK
same DT same ^ OK
bottom JJ bottom ^ OK
line NN line ^ OK

and CC ^ ^ repeat
and CC ^ ^ false_start
that DT ^ ^ false_start
's BES ^ ^ false_start
really RB ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
for IN for ^ OK
me PRP me ^ OK
that DT that ^ OK
's BES 's ^ OK
r- RB ^ ^ repeat
r- RB ^ ^ repeat
really RB really ^ OK
what WP what ^ OK
^ ^ 's ^ OK
most RBS most ^ OK
important JJ important ^ OK
because IN because ^ OK
i PRP i ^ OK
feel VBP feel ^ OK
like IN ^ ^ filler
no DT no ^ OK
matter NN matter ^ OK
what WP what ^ OK
you PRP you ^ OK
face VBP face ^ OK
in IN in ^ OK
life NN life ^ OK
if IN if ^ OK
you PRP you ^ OK
can MD can ^ OK
come VB come ^ OK
back RB back ^ OK
to IN to ^ OK
that DT that ^ OK
then RB then ^ OK
you PRP you ^ OK
can MD can ^ OK
really RB really ^ OK
face VB face ^ OK
anything NN anything ^ OK

my PRP my ^ OK
sister NN sister ^ OK
's BES 's ^ OK
married JJ married ^ OK
to IN to ^ OK
a DT a ^ OK
he PRP ^ ^ false_start
guy NN guy ^ OK
he PRP ^ ^ false_start
who WP who ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
he PRP ^ ^ false_start
's BES ^ ^ false_start
pretty RB ^ ^ false_start
much JJ ^ ^ false_start
he PRP ^ ^ false_start
's BES ^ ^ false_start
a DT ^ ^ false_start
non JJ ^ ^ false_start
's NP-1 's ^ OK
definitively BES definitively ^ OK
a RB a ^ OK
non-believer DT non-believer ^ OK

works VBZ it ^ false_start
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
uh UH ^ ^ filler
somehow RB somehow ^ OK
works VBZ works ^ OK
with IN with ^ OK
them PRP them ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
b- IN ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
because IN because ^ OK
he PRP ^ ^ false_start
does VBZ ^ ^ false_start
n't RB ^ ^ false_start
he PRP he ^ OK
's BES 's ^ OK
not RB not ^ OK
like UH ^ ^ filler
anti NN anti ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
he PRP ^ ^ false_start
wou- MD ^ ^ false_start
he PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP ^ ^ false_start
my PRP my ^ OK
niece NN niece ^ OK
was VBD was ^ OK
baptized VBN baptized ^ OK

and CC ^ ^ false_start
ultimately RB ultimately ^ OK
he PRP he ^ OK
's BES 's ^ OK
supportive JJ supportive ^ OK
of IN of ^ OK
my PRP my ^ OK
sister NN ^ ^ repeat
eh UH ^ ^ filler
sister NN sister ^ OK
's POS 's ^ OK
belief NN belief ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
maybe RB ^ ^ repeat
maybe RB ^ ^ repeat
maybe RB maybe ^ OK
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's ^ OK
more JJR more ^ OK
a DT ^ ^ repeat
about IN about ^ OK
respecting VBG respecting ^ OK
each DT each ^ OK
other JJ other ^ OK
's POS 's ^ OK
beliefs NNS beliefs ^ OK

y- PRP ^ ^ repeat
you PRP ^ ^ false_start
mean VBP ^ ^ false_start
in IN ^ ^ repeat
uh UH ^ ^ filler
in IN in ^ OK
other JJ other ^ OK
words NNS words ^ OK
um UH ^ ^ filler
also RB also ^ OK
ploy- XX ^ ^ false_start
employers NNS employers arg0 OK
would MD would ^ OK
n't RB n't ^ OK
be VB be ^ OK
able JJ able ^ OK
to TO to ^ OK
hire VB hire predicate OK
as RB as ^ OK
many JJ many ^ OK
workers NNS workers arg1 OK

or CC ^ ^ repeat
or- CC or- ^ OK

but CC but ^ OK
do VBP do ^ OK
n't RB n't ^ OK
you PRP you arg0 OK
think VB think predicate OK
we PRP we arg0 OK
need VBP need arg1 OK
an DT an arg1 OK
increase NN increase arg1 OK

because IN because ^ OK
it PRP it ^ OK
would MD would ^ OK
um UH ^ ^ filler
motivate VB motivate ^ OK
people NNS people ^ OK
to TO to ^ OK
work VB work ^ OK
better RBR better ^ OK
if IN if ^ OK
they PRP they ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
if IN if ^ OK
you PRP you arg0 OK
're VBP 're ^ OK
working VBG working predicate OK
for IN for ^ OK
five CD five ^ OK
something NN something ^ OK
an DT an ^ OK
hour NN hour ^ OK
my UH ^ ^ filler
god UH ^ ^ filler
by IN by ^ OK
the DT the ^ OK
time NN time ^ OK
the DT the arg1 OK
hour NN hour arg1 OK
's BES 's predicate OK
up RB up arg2 OK
you ADVP-TMP- 1 you arg0 OK
're PRP ^ ^ false_start
like VBP say predicate false_start
well RP well arg1 OK
i UH i arg0 OK
made PRP made arg1 OK
my VBD my arg1 OK
five PRP five arg1 OK
bucks CD bucks arg1 OK

but CC but ^ OK
i PRP i arg0 OK
know VBP know predicate OK
i PRP i arg0 OK
made VBD made arg1 OK
nine CD nine arg1 OK
dollars NNS dollars arg1 OK
here RB here argM_loc OK
w- XX ^ ^ false_start
doing VBG doing arg1 OK
um UH ^ ^ filler
nursing NN ^ ^ false_start
something NN something arg1 OK

not RB not ^ OK
really RB really ^ OK
nursing NN nursing ^ OK
more RBR more ^ OK
like IN like ^ OK
home NN home ^ OK
health NN health ^ OK
care NN care ^ OK

i PRP i arg0 OK
was VBD was predicate OK
m- XX ^ ^ false_start
so RB so arg2 OK
glad JJ glad arg2 OK
to TO to arg2 OK
get VB get arg2 OK
that DT that arg1 OK
because IN because ^ OK
it PRP it arg1 OK
's BES 's predicate OK
hard JJ hard arg2 OK
work NN work arg2 OK

um UH ^ ^ filler
i PRP i arg0 OK
just RB just ^ OK
think VBP think predicate OK
they PRP they arg0 OK
should MD should arg1 OK
m- XX ^ ^ false_start
if IN ^ ^ false_start
for IN ^ ^ false_start
no DT ^ ^ false_start
other JJ ^ ^ false_start
reason NN ^ ^ false_start
push VB push arg1 OK
it PRP it arg1 OK
up RP up arg2 OK
because IN because ^ OK
of IN of ^ OK
cost NN cost ^ OK
of IN of ^ OK
living NN living ^ OK
or CC or ^ OK
just RB just ^ OK
to TO to ^ OK
boost VB boost predicate OK
in- XX ^ ^ false_start
uh UH ^ ^ filler
people NNS people arg1 OK
's POS 's arg1 OK
egos NNS egos arg1 OK

w- PRP ^ ^ repeat
we PRP we arg0 OK
have VBP have predicate OK
it PRP it arg1 OK
split JJ split arg1 OK

but CC but ^ OK
um UH ^ ^ filler
north NNP north ^ OK
jersey NNP jersey argM_loc OK
at IN at argM_loc OK
burger NNP burger argM_loc OK
king NNP king argM_loc OK
i- PRP ^ ^ repeat
i PRP ^ ^ false_start
think VBP ^ ^ false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
they PP-LOC-PR D they arg0 OK
're PRP 're ^ OK
making VBP making predicate OK
nine VBG nine arg1 OK

not RB not ^ OK
that IN that ^ OK
that DT that arg1 OK
's BES 's predicate OK
minimum JJ minimum arg2 OK
wage NN wage arg2 OK

so UH ^ arg1 false_start
i PRP i ^ OK
'm VBP 'm predicate OK
sure JJ sure ^ OK
our PRP our ^ OK
employers NNS employers ^ OK
are VBP are predicate OK
glad JJ glad ^ OK
to TO to ^ OK
have VB have predicate OK
the DT the ^ OK
minimum JJ minimum ^ OK
wage NN wage ^ OK
like IN ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
at IN at ^ OK
five CD five ^ OK
something NN something ^ OK
because IN because ^ OK
e- XX ^ ^ false_start
u- XX ^ ^ false_start
if IN ^ ^ false_start
for IN ^ ^ false_start
no DT ^ ^ false_start
other JJ ^ ^ false_start
reason NN ^ ^ false_start
th- DT ^ ^ repeat
the DT the arg1 OK
tourists NNS tourists arg1 OK
do VBP do ^ OK
n't RB n't ^ OK
come VB come predicate OK
down RB down arg4 OK

w- WP ^ ^ false_start
are VBP ^ ^ repeat
are VBP are ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK

an- CC an- ^ OK

are VBP are predicate OK
you PRP you arg1 OK
a- DT ^ ^ repeat
a DT a arg2 OK
student NN student arg2 OK

um UH ^ ^ filler
i PRP i arg1 OK
did VBD did ^ OK
n't RB n't ^ OK
get VB get predicate OK
as RB as arg2 OK
far RB far arg2 OK
as IN as arg2 OK
actually RB actually arg2 OK
college NN college arg2 OK

i PRP i arg0 OK
've VBP 've ^ OK
v- XX ^ ^ false_start
done VBN done predicate OK
all DT all arg1 OK
tech NN tech arg1 OK
schools NNS schools arg1 OK
after IN after ^ OK
high JJ high ^ OK
school NN school ^ OK

but CC but ^ OK
um UH ^ ^ filler
i PRP ^ ^ false_start
uh UH ^ ^ filler
we PRP we arg0 OK
had VBD had predicate OK
programs NNS programs arg1 OK
where WRB where ^ OK
that DT ^ ^ false_start
th- DT ^ ^ repeat
uh UH ^ ^ filler
the DT the arg1 OK
cost NN cost arg1 OK
of IN of arg1 OK
living NN living arg1 OK
was VBD was ^ OK
offset VBN offset predicate OK
by IN by arg2 OK
maybe RB maybe arg2 OK
like IN ^ ^ false_start
you PRP ^ ^ false_start
said VBD ^ ^ false_start
free JJ free arg2 OK
school NN school arg2 OK
or CC or arg2 OK
something NN something arg2 OK
free JJ free arg2 OK
even RB even ^ OK
though IN though ^ OK
some DT some arg0 OK
people NNS people arg0 OK
get VBP get predicate OK
minimum JJ minimum arg1 OK
wage NN wage arg1 OK

i PRP i arg0 OK
think VBP think predicate OK
our PRP our arg0 OK
waitresses NNS waitresses arg0 OK
down IN down argM_loc OK
here RB here argM_loc OK
get VBP get arg1 OK
two CD two arg1 OK
thirty-five CD thirty-five arg1 OK
plus CC plus arg1 OK
tips NNS tips arg1 OK

but CC but ^ OK
they PRP ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
bar NN bar arg2 OK
restaurant NN restaurant arg2 OK

and UNK ^ ^ false_start
as UNK as ^ OK
far UNK far ^ OK
as UNK as ^ OK
what UNK what ^ OK
you UNK you ^ OK
said UNK said ^ OK
about UNK about ^ OK
whether UNK whether ^ OK
i UNK i ^ OK
would UNK would ^ OK
do UNK do ^ OK
what UNK what ^ OK
i UNK i ^ OK
'm UNK 'm ^ OK
doing UNK doing ^ OK
for UNK for ^ OK
nine UNK nine ^ OK
dollars UNK dollars ^ OK
and UNK an ^ false_start
hour UNK hour ^ OK
or UNK or ^ OK
work UNK work ^ OK
at UNK at ^ OK
a UNK a ^ OK
burger UNK burger ^ OK
king UNK king ^ OK
or UNK or ^ OK
wendy UNK wendy ^ OK
's UNK 's ^ OK

um UH ^ ^ filler
well UH ^ ^ false_start
a- XX ^ ^ false_start
m- XX ^ ^ false_start
part NN part ^ OK
of IN of ^ OK
me PRP me ^ OK
says VBZ says ^ OK
yeah UH ^ ^ filler
we PRP we ^ OK
know VBP know ^ OK
a DT a ^ OK
lot NN lot ^ OK
more JJR more ^ OK
than IN than ^ OK
when WRB when ^ OK
the DT the ^ OK
united NNP united ^ OK
states NNP states ^ OK
did VBD did ^ OK
nuclear JJ nuclear ^ OK
testing NN testing ^ OK

um UH ^ ^ filler
and CC ^ ^ false_start
part NN part ^ OK
of IN of ^ OK
me PRP me ^ OK
goes VBZ says ^ false_start
well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
never RB never ^ OK
asked VBD asked ^ OK
permission NN permission ^ OK
while IN while ^ OK
we PRP we ^ OK
were VBD were ^ OK
testing VBG testing ^ OK

gee UH ^ ^ filler
why WRB why ^ OK
are VBP are ^ OK
n't RB n't ^ OK
there EX there ^ OK
any DT any ^ OK
terrorists NNS terrorists ^ OK
in IN in ^ OK
iraq NNP iraq ^ OK

i PRP i ^ OK
found VBD found ^ OK
out RP out ^ OK
from IN from ^ OK
a DT a ^ OK
friend NN friend ^ OK
who WP who ^ OK
lived VBD lived ^ OK
in IN in ^ OK
japan NNP japan ^ OK
for IN for ^ OK
a DT a ^ OK
number NN number ^ OK
of IN of ^ OK
years NNS years ^ OK
that IN that ^ OK
um UH ^ ^ filler
the DT the ^ OK
japanese NNPS japanese ^ OK
thought VBD thought ^ OK
land NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
businesses NNS businesses ^ OK
and CC ^ ^ repeat
and CC and ^ OK
apartment NN apartment ^ OK
buildings NNS buildings ^ OK
and CC and ^ OK
office NN office ^ OK
building NN buildings ^ false_start
in IN in ^ false_start
the DT the ^ false_start
u. NNP u. ^ false_start
s. NNP s. ^ false_start
were VBD were ^ OK
such PDT such ^ OK
a DT a ^ OK
bargain NN bargain ^ OK

well UH ^ ^ false_start
they PRP they ^ OK
were VBD were ^ OK
compared VBN compared ^ OK
to IN to ^ OK
the DT ^ ^ repeat
um UH ^ ^ filler
the DT the ^ OK
japanese JJ japanese ^ OK
uh UH ^ ^ filler
real JJ real ^ OK
estate NN estate ^ OK

it UNK it ^ OK
's UNK 's ^ OK
actually UNK actually ^ OK
cheaper UNK cheaper ^ OK
to UNK to ^ OK
make UNK make ^ OK
something UNK something ^ OK
in UNK in ^ OK
japan UNK japan ^ OK
and UNK and ^ OK
ship UNK ship ^ OK
it UNK it ^ OK
to UNK to ^ OK
the UNK the ^ OK
u. UNK u. ^ OK
s. UNK s. ^ OK
and UNK and ^ OK
sell UNK sell ^ OK
it UNK it ^ OK
there UNK there ^ OK
than UNK than ^ OK
it UNK it ^ OK
is UNK is ^ OK
to UNK to ^ OK
get UNK get ^ OK
it UNK it ^ OK
through UNK ^ ^ false_start
the UNK ^ ^ false_start
um UNK ^ ^ filler
e- UNK ^ ^ false_start
u- UNK ^ ^ false_start
there UNK ^ ^ false_start
's UNK ^ ^ false_start
this UNK ^ ^ false_start
chain UNK ^ ^ false_start
of UNK ^ ^ false_start
you UNK ^ ^ filler
know UNK ^ ^ filler
from UNK from ^ OK
the UNK the ^ OK
manufacturer UNK manufacturer ^ OK
to UNK to ^ OK
the UNK the ^ OK
wholesaler UNK wholesaler ^ OK
to UNK ^ ^ false_start
th- UNK ^ ^ false_start
e- UNK ^ ^ false_start
ther- UNK ^ ^ false_start
with UNK with ^ OK
lots UNK lots ^ OK
of UNK of ^ OK
steps UNK steps ^ OK
in UNK in ^ OK
between UNK between ^ OK
there UNK there ^ OK

got VBD got ^ OK
a DT a ^ OK
four CD four ^ OK
this DT this ^ OK
last JJ last ^ OK
time NN time ^ OK

but CC but ^ OK
there EX there arg1 OK
was VBD was predicate OK
like UH ^ ^ filler
a DT a arg2 OK
side NN side arg2 OK
of IN of arg2 OK
the DT the arg2 OK
road NN road arg2 OK

so RB ^ ^ false_start
i PRP i arg0 OK
just RB just ^ OK
pulled VBD pulled predicate OK
over RB over arg_particl OK

and CC ^ ^ false_start
oh UH ^ ^ filler
i PRP i arg1 OK
'll MD 'll ^ OK
just RB just ^ OK
sit VB sit predicate OK
here RB here arg2 OK
for IN for argM_tmp OK
fifteen CD fifteen argM_tmp OK
minutes NNS minutes argM_tmp OK

i PRP i arg0 OK
have VBP have predicate OK
my PRP my arg1 OK
kids NNS kids arg1 OK
in IN in argM_loc OK
the DT the argM_loc OK
car NN car argM_loc OK

and CC ^ ^ false_start
all DT all ^ OK
of IN of ^ OK
a DT a ^ OK
sudden JJ sudden ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
within IN within ^ OK
one CD one ^ OK
minute NN minute ^ OK
w- XX ^ ^ false_start
of IN of ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
us PRP us arg0 OK
thinking VBG thinking predicate OK
we PRP we arg1 OK
're VBP 're arg1 OK
going VBG going arg1 OK
to TO to arg1 OK
sit VB sit arg1 OK
here RB here arg2 OK
for IN for argM_tmp OK
fifteen CD fifteen argM_tmp OK
minutes NNS minutes argM_tmp OK
we PRP we arg0 OK
had VBD had predicate OK
security NN security arg1 OK
on IN on arg1 OK
us PRP us arg1 OK
with IN with ^ OK
guns NNS guns ^ OK

we PRP we arg1 OK
were VBD were predicate OK
so RB so arg2 OK
freaked VBN freaked arg2 OK
out RP out arg_particl OK

and CC ^ ^ false_start
they PRP they arg0 OK
were VBD were arg0 OK
screaming VBG screaming predicate OK
get VB get arg1 OK
out IN out arg2 OK
of IN of arg2 OK
there RB there arg2 OK

it PRP i arg0 false_start
was VBD ^ ^ false_start
like UH said predicate false_start
you PRP ^ ^ repeat
you PRP you arg0 OK
are VBP ^ ^ repeat
are VBP are arg1 OK
scaring VBG scaring arg1 OK
my PRP my arg1 OK
children NNS children arg1 OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
had VBD had predicate OK
no DT no arg1 OK
idea NN idea arg1 OK
what WP what arg1 OK
they PRP they arg0 OK
were VBD were arg1 OK
doing VBG doing arg1 OK

because IN because ^ OK
wha- WP ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP i arg0 OK
did VBD did ^ OK
n't RB n't ^ OK
know VB know predicate OK
if IN if arg1 OK
they PRP they arg1 OK
were VBD were arg1 OK
terrorists NNS terrorists arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
so RB ^ ^ false_start
that DT ^ ^ false_start
the DT ^ ^ repeat
only JJ ^ ^ false_start
thing NN ^ ^ false_start
the DT the arg1 OK
approach NN approach arg1 OK
was VBD ^ ^ repeat
was VBD ^ ^ repeat
was VBD was predicate OK
like UH ^ ^ filler
really RB really arg2 OK
extremely RB extremely arg2 OK
high JJ high arg2 OK
tech NNP tech arg2 OK

and CC ^ ^ false_start
i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP said predicate false_start
we PRP we arg0 OK
're VBP 're arg1 OK
not RB not arg1 OK
doing VBG doing arg1 OK
anything NN anything arg1 OK

we PRP ^ ^ false_start
were VBD ^ ^ false_start
going VBG ^ ^ false_start
to TO ^ ^ false_start
wait VB ^ ^ false_start
for IN ^ ^ false_start
and CC ^ ^ false_start
im- XX ^ ^ false_start
they PRP they arg0 OK
're VBP 're ^ OK
screaming VBG screaming predicate OK
the DT the argM_tmp OK
whole JJ whole argM_tmp OK
time NN time argM_tmp OK

and CC ^ ^ false_start
um UH ^ ^ filler
the DT the arg0 OK
uh UH ^ ^ filler
one CD one arg0 OK
guy NN guy arg0 OK
was VBD was ^ OK
screaming VBG screaming predicate OK
move VB move arg1 OK
it PRP it arg1 OK

and CC ^ ^ false_start
e- XX ^ ^ false_start
so RB ^ ^ false_start
i PRP i arg0 OK
put VBP put predicate OK
it PRP it arg1 OK
in IN in arg2 OK
gear NN gear arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
i PRP i arg0 OK
'm VBP ^ ^ false_start
like RP said predicate false_start
well UH ^ ^ filler
you PRP you arg0 OK
move VB move arg1 OK
so IN so arg1 OK
i PRP i arg0 OK
can MD can arg1 OK
drive VB drive arg1 OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP i ^ OK
'll MD 'll ^ OK
move VB move ^ OK

if IN ^ ^ false_start
you PRP ^ ^ false_start
get VBP ^ ^ false_start
ou- RB ^ ^ false_start
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
want VB want predicate OK
to TO to arg1 OK
run VB run arg1 OK
you PRP you arg1 OK
over RP over arg_particl OK

and CC ^ ^ false_start
i- PRP ^ ^ repeat
i PRP ^ ^ false_start
could MD ^ ^ false_start
n't RB ^ ^ false_start
even RB ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
got VBD got predicate OK
in IN in arg1 OK
the DT the arg1 OK
parking NN parking arg1 OK
space NN space arg1 OK

they PRP they arg1 OK
were VBD had ^ false_start
totally RB totally ^ OK
disappeared VBN disappeared predicate OK

and CC ^ ^ false_start
i PRP i arg0 OK
w- XX ^ ^ false_start
said VBD said predicate OK
did VBD did arg1 OK
that DT that arg1 OK
just RB just arg1 OK
happen VB happen arg1 OK

and CC ^ ^ false_start
so RB ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
is VBZ is predicate OK
this DT this arg1 OK
all DT all arg2 OK
effective JJ effective arg2 OK

i PRP i arg1 OK
was VBD was ^ OK
freaked VBN freaked predicate OK
out RP out arg_particl OK
by IN by ^ OK
it PRP it arg0 OK

i PRP i ^ OK
was VBD was ^ OK
like UH ^ ^ filler

um UH ^ ^ filler
well UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
what WP what ^ OK
they PRP they ^ OK
really RB really ^ OK
need VBP need ^ OK
to TO to ^ OK
focus VB focus ^ OK
their PRP their ^ OK
money NN money ^ OK
on IN on ^ OK
is NP-2 is ^ OK
where VBZ where ^ OK
they WRB they ^ OK
fell PRP fell ^ OK
through VBD through ^ OK
the IN the ^ OK
y- DT ^ ^ false_start
um XX ^ ^ filler

w- WRB ^ ^ repeat
where WRB where arg1 OK
everything NN everything arg1 OK
fell VBD fell arg1 OK
through IN through arg1 OK
the DT the arg1 OK
cracks NNS cracks arg1 OK
is ADVP-LOC- 1 ^ ^ repeat
is VBZ ^ ^ repeat
was VBZ was predicate OK
on VBD on arg2 OK
border IN border arg2 OK
security NN security arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
my PRP my ^ OK
girlfriend NN girlfriend ^ OK
's POS 's ^ OK
husband NN husband ^ OK
works VBZ works ^ OK
for IN for ^ OK

um UH ^ ^ filler
what WP what ^ OK
do VBP do ^ OK
they PRP they arg0 OK
call VB call predicate OK
it PRP ^ ^ false_start
that NP-2 that arg1 false_start
it PRP ^ ^ false_start
department CC department arg1 false_start
when NP-PRD-1 where arg2 false_start
you WRB you arg1 OK
come PRP come arg2 OK
in VBP in arg4 OK
the IN the arg4 OK
country DT country arg4 OK
and NN and arg2 OK
you CC you arg1 OK
have PRP have arg2 OK
to VBP to arg2 OK
get TO get arg2 OK
approved VB approved arg2 OK
and VBN ^ predicate false_start

a- XX ^ ^ false_start
g- XX ^ ^ false_start
so UH ^ ^ filler
anyway UH ^ ^ filler
h- PRP ^ ^ repeat
he PRP ^ ^ false_start
she PRP ^ ^ repeat
she PRP she arg0 OK
has VBZ ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
seen VBN ^ ^ repeat
see VB see predicate OK
him PRP ^ ^ repeat
him PRP him arg1 OK
for IN for argM_tmp OK
eight CD eight argM_tmp OK
months NNS months argM_tmp OK
after IN after argM_tmp OK
this DT this arg1 OK
happened VBD happened predicate OK

because IN ^ ^ false_start
e- XX ^ ^ false_start
and CC ^ ^ false_start
our PRP our arg1 OK
prisons NNS prisons arg1 OK
are VBP are predicate OK
so RB so arg2 OK
full JJ full arg2 OK
of IN of arg2 OK
all PDT all arg1 OK
these DT these arg1 OK
people NNS people arg1 OK
people NNS that ^ false_start
they PRP they arg0 OK
went VBD went predicate OK
out RB out arg_particl OK
and CC and ^ OK
arrested VBN arrested predicate OK
that NP-1 that arg1 OK
were WDT were arg2 OK
in VBD in arg2 OK
the IN the arg2 OK
country DT country arg2 OK
illegally NN illegally arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
then RB then ^ OK
you PRP you arg0 OK
got VBD got predicate OK
this DT this arg0 OK
mexican JJ mexican arg0 OK
guy NN guy arg0 OK
trying VBG trying predicate OK
to TO to arg1 OK
get VB get arg1 OK
a DT ^ ^ false_start
drivers NNS drivers arg1 OK
licenses NNS licenses arg1 OK
in IN in argM_loc OK
this DT this argM_loc OK
e- NN ^ ^ repeat
election NN election argM_loc OK
now RB now argM_tmp OK
for IN for arg4 OK
um UH ^ ^ filler
illegal JJ illegal arg4 OK
aliens NNS aliens arg4 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
w- WP ^ ^ repeat
what WP what arg1 OK
happened VBD happened predicate OK
to IN to ^ OK
just RB just ^ OK
thinking VBG thinking predicate OK
normally RB normally argM_other OK
and CC and ^ OK
saying VBG saying predicate OK
other JJ other arg0 OK
countries NNS countries arg0 OK
do VB do arg1 OK
n't RB n't arg1 OK
let VB let arg1 OK
anybody NN anybody arg1 OK
come VB come arg1 OK
in RB in arg4 OK

um UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
and CC ^ ^ false_start
can MD can ^ OK
see VB see predicate OK
where WRB where arg1 OK
some DT some arg1 OK
people NNS people arg1 OK
would MD would arg1 OK
be VB be arg1 OK
really RB really arg2 OK
upset JJ upset arg2 OK
about IN about arg2 OK
it PRP it arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
it PRP it arg0 OK
depends VBZ depends predicate OK
on IN on arg1 OK
what WP what arg1 OK
your PRP ^ ^ repeat
your PRP your arg2 OK
profession NN profession arg2 OK
is VBZ is arg1 OK
and NP-PRD-1 and arg1 OK
what CC what arg1 OK
you WP you arg0 OK
do PRP do arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't ^ OK
think VBP ^ ^ repeat
think VB think predicate OK
it PRP ^ ^ repeat
it PRP it arg0 false_start
really RB really arg1 OK
affects VBZ affects arg1 OK
the DT ^ ^ repeat
the DT the arg1 OK
kind NN kind arg1 OK
of IN of arg1 OK
normal JJ normal arg1 OK
everyday JJ everyday arg1 OK
general JJ general arg1 OK
type NN type arg1 OK
people NNS people arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
or CC ^ ^ repeat
or CC or ^ OK
power NN power ^ OK
women NNS women ^ OK

that DT that ^ OK
's BES 's ^ OK
sad JJ sad ^ OK
because IN because ^ OK
anybody NN anybody ^ OK
that WDT that ^ OK
works VBZ works ^ OK
for IN for ^ OK
thirty CD thirty ^ OK
or CC or ^ OK
forty CD forty ^ OK
years NNS years ^ OK
and CC and ^ OK
even RB even ^ OK
say UH ^ ^ filler
like UH ^ ^ filler
the DT the ^ OK
last JJ last ^ OK
ten CD ten ^ OK
or CC or ^ OK
twenty CD twenty ^ OK
years NNS years ^ OK
of IN of ^ OK
their PRP ^ ^ repeat
their PRP their ^ OK
j- NN ^ ^ repeat
career NN career ^ OK

it PRP it ^ OK
's SBAR-2 's predicate OK
a BES a arg1 OK
shame DT shame arg1 OK
for NN for arg1 OK
that IN that arg1 OK
to DT to arg1 OK
happen TO happen arg1 OK

be- XX ^ ^ false_start
now UH now ^ OK
that DT ^ ^ repeat
that DT that arg1 OK
would MD would ^ OK
be VB be predicate OK
something NN something arg2 OK
that WDT that arg0 OK
would MD would arg2 OK
upset VB upset arg2 OK
me PRP me arg1 OK

re- XX ^ ^ false_start
that DT ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would ^ OK
feel VB feel predicate OK
bad JJ bad arg1 OK
for IN for arg2 OK
people NNS people arg2 OK
about IN about arg2 OK
that DT that arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
but CC ^ ^ false_start
it PRP it arg1 OK
's BES 's predicate OK
the DT the arg0 OK
bigger JJR bigger arg0 OK
guys NNS guys arg0 OK
that NAC-3 that arg0 OK
's WDT 're arg0 false_start
in BES ^ ^ repeat
in DT in arg0 OK
these IN ^ ^ repeat
these IN these arg0 OK
big DT big arg0 OK
corporations JJ corporations arg0 OK
or NNS or arg0 OK
even CC even arg0 OK
the RB the arg0 OK
women DT women arg0 OK
you NNS ^ ^ filler
know PRP ^ ^ filler
that VBP that ^ OK
are WDT are ^ OK
creating VBP creating predicate OK
these VBG these arg1 OK
problems DT problems arg1 OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
always RB ^ ^ repeat
always RB always ^ OK
the DT the ^ OK
underdog NN underdog ^ OK
or CC ^ ^ repeat
or CC or ^ OK
the DT ^ ^ repeat
the DT the ^ OK
normal JJ normal ^ OK
everyday JJ everyday ^ OK
business NN business ^ OK
guy NN guy ^ OK
that WDT that ^ OK
goes VBZ goes ^ OK
to IN to ^ OK
work NN work ^ OK
and CC and ^ OK
supports VBZ supports ^ OK
himself PRP himself ^ OK
for IN for ^ OK
a DT a ^ OK
family NN family ^ OK
that WDT that ^ OK
has VBZ has ^ OK
the DT the ^ OK
effects NNS effects ^ OK
of IN of ^ OK
what WP what ^ OK
happens VBZ happens ^ OK
with IN with ^ OK
these DT these ^ OK
scandals NNS scandals ^ OK
and CC and ^ OK
with IN with ^ OK
these DT ^ ^ repeat
these DT these ^ OK
uh UH ^ ^ filler
guys NNS guys ^ OK
that WDT that ^ OK
are VBP are ^ OK
in IN in ^ OK
control NN control ^ OK
of IN of ^ OK
these DT these ^ OK
big JJ big ^ OK
corporations NNS corporations ^ OK

i PRP i arg0 OK
think VBP think predicate OK
what WP what arg1 OK
happens VBZ happens arg1 OK
is VBZ is ^ OK
is VBZ that arg1 false_start
it PRP it arg1 OK
goes VBZ goes arg1 OK
to IN to arg4 OK
their PRP their arg4 OK
head NN head arg4 OK

and CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
they PRP they arg0 OK
realize VBP realize arg1 OK
well UH ^ ^ filler
i PRP i arg0 OK
do VBP do arg1 OK
n't RB n't arg1 OK
care VB care arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
it- PRP ^ ^ repeat
it PRP ^ ^ false_start
's BES ^ ^ false_start
but CC ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
just RB just arg2 OK
a DT a arg2 OK
general JJ general arg2 OK
consensus NN consensus arg2 OK
of IN of arg2 OK
people NNS people arg2 OK
in IN in arg2 OK
the DT the arg2 OK
world NN world arg2 OK
nowadays RB nowadays arg2 OK

i PRP i arg0 OK
just RB just ^ OK
do VBP do ^ OK
n't RB n't ^ OK
think VB think predicate OK
that IN that arg1 OK
there EX there arg1 OK
's BES 's arg1 OK
a DT a arg1 OK
whole JJ whole arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
compassion NN compassion arg1 OK
for IN for arg1 OK
people NNS people arg1 OK
period NN ^ ^ false_start

and CC ^ ^ false_start
there EX ^ ^ false_start
was VBD ^ ^ false_start
they PRP ^ ^ false_start
always RB ^ ^ false_start
they PRP they arg0 OK
tried VBD tried predicate OK
to TO to arg1 OK
avoid VB avoid arg1 OK
that DT that arg1 OK
type NN type arg1 OK
of IN of arg1 OK
scandal NN scandal arg1 OK

well UH ^ ^ filler
you PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're predicate OK
only RB only arg2 OK
a DT ^ ^ repeat
a DT a arg2 OK
number NN number arg2 OK

the- XX the- ^ OK

and CC ^ ^ false_start
do VBP do ^ OK
n't RB n't ^ OK
even RB even ^ OK
offer VB offer ^ OK
a DT a ^ OK
half-way JJ half-way ^ OK
decent JJ decent ^ OK
package NN package ^ OK

they PRP they arg0 OK
're VBP 're ^ OK
just RB just ^ OK
like UH ^ ^ filler
tossing VBG tossing predicate OK
you PRP you arg1 OK
out RP out arg1 OK
with IN with arg1 OK
like UH a ^ false_start
like UH ^ ^ filler
couple NN couple arg1 OK
of IN of arg1 OK
w- UH ^ ^ repeat
what UH ^ ^ false_start
months NNS months arg1 OK
of IN of arg1 OK
unemployment NN unemployment arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
what WP ^ ^ false_start
happens VBZ ^ ^ false_start
is VBZ ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP ^ ^ repeat
think VBP think predicate OK
that IN that arg1 OK
most JJS most arg0 OK
companies NNS companies arg0 OK
nowadays RB nowadays arg1 OK
know VBP know arg1 OK
that IN that arg1 OK
the DT the arg1 OK
economy NN economy arg1 OK
's BES 's arg1 OK
bad JJ bad arg2 OK

or CC ^ ^ false_start
the DT the ^ OK
world NN world ^ OK
in IN in ^ OK
general JJ general ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
because UH because argM_cause OK
my PRP my arg1 OK
opinion NN opinion arg1 OK
is VBZ is predicate OK
that IN that arg2 OK
it PRP it arg1 OK
's BES 's arg2 OK
sure JJ sure arg2 OK
disaster NN disaster arg2 OK
no DT no arg2 OK
matter NN matter arg2 OK
what WP what arg1 OK
happens VBZ happens arg2 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
you PRP you arg0 OK
can MD can argM_mod OK
put VB put predicate OK
it PRP it arg1 OK
off RP off arg_particl OK
longer RBR longer arg2 OK

are VBP ^ ^ repeat
they PRP ^ ^ repeat
are VBP are ^ OK
they PRP they arg0 OK
going VBG going argM_mod OK
to TO to argM_mod OK
tell VB tell predicate OK
us PRP us arg2 OK
when WRB when argM_tmp OK
the DT the arg1 OK
ten CD ten arg1 OK
minutes NNS minutes arg1 OK
is VBZ is argM_tmp OK
up RB up arg2 OK

and CC ^ ^ false_start
at IN at argM_tmp OK
that DT that argM_tmp OK
point NN point argM_tmp OK
could MD could argM_mod OK
they PRP they arg0 OK
created VBN have ^ false_start
created VBN created predicate OK
a DT a arg1 OK
palestine NNP palestine arg1 OK
nation NN nation arg1 OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
would MD would argM_mod OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
know VB know predicate OK
that RB that arg1 OK
much RB much arg1 OK

um UH ^ ^ filler
well UH ^ ^ filler
uh UH uh ^ OK

the DT the arg1 OK
problem NN problem arg1 OK
right RB right argM_tmp OK
now RB now argM_tmp OK
is VBZ is predicate OK
yasser NNP that ^ false_start
yasser NNP yasser arg1 OK
arafat NNP arafat arg1 OK
would MD would argM_mod OK
be VB be arg2 OK
such PDT such arg2 OK
a DT a arg2 OK
terrible JJ terrible arg2 OK
leader NN leader arg2 OK

well UH ^ ^ filler
i PRP i ^ OK
i- PRP ^ ^ repeat

so UH ^ ^ filler
i PRP i ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

why WRB why ^ OK
not RB not ^ OK

they PRP ^ ^ repeat
they PRP they arg0 OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
got VBD got predicate OK
booze NN booze arg1 OK
legal JJ legal arg1 OK

i PRP i ^ OK
'm VBP 'm ^ OK
sh- XX ^ ^ false_start

why WRB why ^ OK
not RB not ^ OK

i PRP i ^ OK
eith- RB ^ ^ false_start

but CC ^ ^ false_start
ah UH ^ ^ filler
i PRP i arg0 OK
've VBP 've ^ OK
had VBN had predicate OK
friends NNS friends arg1 OK
who WP who arg1 OK
went VBD went arg1 OK
to IN to arg4 OK
amsterdam NNP amsterdam arg4 OK

and CC ^ arg0 false_start
they PRP ^ ^ false_start
say VBP ^ ^ false_start
that IN ^ ^ false_start
you PRP ^ ^ false_start
kno- VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
about IN about arg3 OK
amsterdam NNP amsterdam arg3 OK
and CC and arg3 OK
an- XX ^ ^ repeat
all PDT all arg3 OK
its PRP its arg3 OK
legalizations NNS legalizations arg3 OK
well UH ^ ^ filler
they PRP they arg0 OK
say VBP say predicate OK
that DT that arg0 OK
place NN place arg0 OK
is VBZ is arg1 OK
just RB just argM_adverb OK
like IN like arg1 OK
bunch NN a ^ false_start
bunch NN bunch arg0 OK
of IN of arg0 OK
space NN space arg0 OK
cadets NNS cadets arg0 OK
walking VBG walking arg1 OK
around RB around arg1 OK

so UH ^ arg0 false_start
maybe RB maybe argM_adverb OK
it PRP ^ ^ repeat
it PRP it arg0 OK
would MD would argM_mod OK
have VB have predicate OK
a DT a arg1 OK
bad JJ bad arg1 OK
effect NN effect arg1 OK
on IN on arg1 OK
society NN society arg1 OK
if IN if argM_adverb OK
make VB it ^ false_start
make VB makes predicate false_start
them PRP them arg1 OK
a DT a arg1 OK
bunch NN bunch arg1 OK
of IN of ^ OK
uh UH ^ ^ filler
of IN _ARG_ arg1 false_start

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
from IN ^ ^ false_start
right RB right argM_tmp OK
now RB now argM_tmp OK
i PRP i arg1 OK
'm VBP 'm predicate OK
in IN in arg2 OK
new NNP new arg2 OK
jersey NNP jersey arg2 OK

in IN in argM_tmp OK
a DT a argM_tmp OK
couple NN couple argM_tmp OK
days NNS days argM_tmp OK
i PRP i arg1 OK
'm VBP 'm predicate OK
aloha NN aloha arg2 OK
bound JJ bound arg2 OK
for IN ^ ^ repeat
for IN ^ ^ repeat
for IN for arg2 OK
the DT the arg2 OK
whole JJ whole arg2 OK
winter NN winter arg2 OK

so UH ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
pretty RB pretty arg2 OK
stoked JJ stoked arg2 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
'm VBP ^ ^ repeat
'm VBP 'm predicate OK
on IN ^ ^ repeat
in IN in arg2 OK
brig- NNP ^ ^ repeat
brigantine NNP brigantine arg2 OK

board NN the arg1 false_start
b- NN ^ ^ repeat
board NN board arg1 OK
walk NN walk arg1 OK
is VBZ is predicate OK
so RB so arg2 OK
great JJ great arg2 OK

i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
there RB there arg2 OK

oh UH ^ ^ filler
well UH ^ ^ filler
uh UH ^ ^ filler
i PRP i arg0 OK
worked VBD have ^ false_start
worked VBD worked predicate OK
for IN for arg2 OK
the DT the arg0 OK
company NN company arg0 OK
that WDT ^ ^ repeat
that WDT ^ ^ repeat
that WDT that arg0 OK
does VBZ does arg2 OK
the DT the arg1 OK
research NN research arg1 OK
before RB before argM_tmp OK

and CC ^ ^ false_start
m- PRP ^ ^ false_start
m- PRP ^ ^ false_start
actually UH actually argM_adverb OK
my PRP my arg0 OK
brother NN brother arg0 OK
and CC ^ ^ false_start
he PRP ^ ^ false_start
c- XX ^ ^ false_start
he PRP ^ ^ false_start
ah UH ^ ^ filler
offered VBD offered predicate OK
this DT this arg2 OK
participation NN participation arg2 OK
to IN to arg3 OK
me PRP me arg3 OK

like UH ^ ^ filler
when WRB ^ ^ filler
um UH when ^ filler
i PRP ^ ^ OK
guess VBP ^ ^ filler
whenever WRB ^ ^ repeat
they PRP they ^ OK
had VBD had ^ OK
the DT the ^ OK
o. NNP o. ^ OK
j. NNP j. ^ OK
trial NN trial ^ OK
on RB on ^ OK

i ADVP-TMP- 1 i arg0 OK
remember PRP remember predicate OK
it VBP it arg1 OK

but CC but ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
think VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES 's predicate OK
court NN court arg2 OK

it PRP it arg1 OK
's BES 's ^ OK
supposed VBN supposed predicate OK
to TO to arg2 OK
be VB be arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
one CD one arg2 OK
of IN of arg2 OK
the DT the arg2 OK
three CD three arg2 OK
branches NNS branches arg2 OK
of IN of arg2 OK
the DT the arg2 OK
government NN government arg2 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
think VB think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
necessarily RB necessarily arg2 OK
something NN something arg1 OK
we PRP we arg0 OK
need VBP need arg2 OK
to TO to arg1 OK
see VB see arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
can MD can ^ OK
understand VB understand predicate OK
that DT that arg1 OK
ye- XX ^ ^ false_start

it PRP it arg1 OK
because IN ^ ^ false_start
it PRP ^ ^ repeat
is VBZ ^ ^ repeat
is VBZ is predicate OK
educational JJ educational arg2 OK
too RB too arg2 OK

mm UH ^ ^ filler
eh UH ^ ^ filler
but CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
seems VBZ seems predicate OK
so RB so arg2 OK
sensationalized JJ sensationaliz ed arg2 OK
though RB though arg2 OK
at IN at arg2 OK
this DT this arg2 OK
point NN point arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
really RB ^ ^ filler
with IN with arg2 OK
like UH ^ ^ filler
court NNP court arg2 OK
t. NNP t. arg2 OK
v. NNP v. arg2 OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

so UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
as RB as ^ OK
long RB long ^ OK
as IN as ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
there RB there ^ OK
for IN for ^ OK
what WP what ^ OK
it PRP it ^ OK
's BES 's ^ OK
there RB there ^ OK
for IN for ^ OK

like UH ^ ^ filler
say VB ^ ^ false_start
we PRP ^ ^ repeat
have VBP ^ ^ repeat
a DT ^ ^ repeat
w- PRP ^ ^ repeat
we PRP ^ ^ false_start
get VBP ^ ^ false_start
a DT ^ ^ false_start
like UH ^ ^ filler
on IN on ^ OK
c. NNP c. ^ OK
span NNP span ^ OK
you PRP you arg0 OK
have VBP have predicate OK
uh UH ^ ^ filler
ah UH ^ ^ filler
i PRP ^ ^ filler
guess VBP ^ ^ filler
like UH ^ ^ filler
house NNP house arg1 OK
meetings NNS meetings arg1 OK
and CC and arg1 OK
senate NNP senate arg1 OK
meetings NNS meetings arg1 OK

if IN if ^ OK
you PRP you ^ OK
want VBP want ^ OK
to TO to ^ OK
see VB see ^ OK
it PRP if ^ false_start
it PRP it ^ OK
's BES 's ^ OK
there RB there ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
think VBP think predicate OK
that DT that arg1 OK
's BES 's arg1 OK
maybe RB maybe arg2 OK
o- XX ^ ^ repeat
an DT an arg1 OK
approach NN approach arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
court NNP court arg0 OK
t. NNP t. arg0 OK
v. NNP v. arg0 OK
should MD should arg2 OK
even RB even arg2 OK
take VB take arg2 OK

eh UH ^ ^ filler
mhm UH mhm ^ OK

i PRP ^ ^ false_start
ah UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT ^ ^ repeat
a DT a arg2 OK
very RB very arg2 OK
good JJ good arg2 OK
point NN point arg2 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
c- MD ^ ^ repeat
can MD can ^ OK
see VB see predicate OK
that DT that arg1 OK

and CC ^ ^ false_start
maybe RB maybe ^ OK
it PRP it arg1 OK
wo MD wo ^ OK
n't RB n't argM_neg OK
be VB be predicate OK
such PDT such arg2 OK
a DT ^ ^ repeat
a DT a arg2 OK
big JJ big arg2 OK
event NN event arg2 OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
say UH ^ ^ false_start
like IN like arg2 OK
the DT the arg1 OK
o. NNP o. arg1 OK
j. NNP j. arg1 OK
trial NN trial arg1 OK
was VBD was arg2 OK
because NP-PRD because ^ OK
that IN that arg1 OK
was DT was predicate OK
kind VBD ^ ^ filler
of RB ^ ^ filler
like RB ^ ^ filler
the UH the arg2 OK
first DT first arg2 OK
major JJ major arg2 OK
televised JJ televised arg2 OK
trial JJ trial arg1 OK

but CC but ^ OK
if IN if ^ OK
it PRP it ^ OK
was VBD was ^ OK
readily RB readily ^ OK
available JJ available ^ OK
maybe RB maybe ^ OK
perhaps RB perhaps ^ OK
not RB not ^ OK

and CC ^ ^ false_start
that DT ^ ^ repeat
's BES ^ ^ repeat
that DT ^ ^ repeat
that DT that arg1 OK
could MD could ^ OK
be VB be predicate OK
just RB just arg2 OK
why WRB why arg2 OK
that DT that arg1 OK
trial NN trial arg1 OK
was VBD was arg2 OK
so RB so arg2 OK
big JJ big arg2 OK
in IN ^ ^ repeat
in IN in arg2 OK
that DT that arg2 OK
sense NN sense arg2 OK

and CC and ^ OK
why WRB why ^ OK
we PRP we ^ OK
were VBD were ^ OK
so RB so ^ OK
interested JJ interested ^ OK
because ADVP-2 because ^ OK

we IN we arg0 OK
can PRP can ^ OK
sort MD sort ^ OK
of RB of ^ OK
relate RB relate predicate OK
with VB with arg1 OK
who IN who arg1 OK
it WP it arg1 OK
was PRP was arg1 OK

but CC but ^ OK
it PRP it ^ OK
was VBD was ^ OK
more RBR more ^ OK
readily RB readily ^ OK
available JJ available ^ OK
as RB as ^ OK
far RB far ^ OK
as IN as ^ OK
like UH ^ ^ filler
everyone NN everyone ^ OK
else RB else ^ OK
even RB even ^ OK

i PRP i arg1 OK
think VBP think predicate OK
the DT ^ ^ repeat
the DT the arg1 OK
excitement NN excitement arg1 OK
about IN about arg1 OK
it PRP it arg1 OK
wo MD wo arg2 OK
n't RB n't arg2 OK
be VB be arg2 OK
as RB as arg2 OK
big JJ big arg2 OK

but CC but ^ OK
those DT those arg0 OK
who WP who arg1 OK
are VBP are predicate OK
interested JJ interested arg2 OK
can MD ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
can MD can arg2 OK
watch VB watch arg2 OK
i PRP i arg0 OK
guess VBP guess arg2 OK

uh UH ^ ^ filler
just RB ^ ^ false_start
that IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP ^ ^ repeat
i PRP i arg0 OK
do VBP ^ ^ repeat
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB ^ ^ repeat
n't RB n't argM_neg OK
know VB ^ ^ repeat
if IN ^ ^ repeat
think VB think predicate OK
they PRP they arg0 OK
're VBP 're arg1 OK
televising VBG televising arg1 OK
or CC ^ ^ repeat
or CC or arg1 OK
doing VBG doing arg1 OK
anything NN anything arg1 OK
like IN like arg1 OK
that DT that arg1 OK
with IN with arg1 OK
it PRP it arg1 OK

or CC ^ ^ false_start
it PRP ^ ^ filler
it PRP it arg1 OK
will MD will ^ OK
be VB be predicate OK
anyway RB anyway ^ OK

uh UH ^ ^ filler
that DT ^ ^ repeat
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
true JJ true arg2 OK
too RB too arg2 OK

well UH ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP you arg0 OK
think VBP think predicate OK
what WP ^ ^ repeat
what WP what arg1 OK
did VBD did arg1 OK
we PRP we arg0 OK
do VB do arg1 OK
before IN before arg1 OK
we PRP we arg0 OK
had VBD had arg1 OK
televised JJ televised arg1 OK
trials NNS trials arg1 OK

we PRP ^ ^ repeat
we PRP we arg0 OK
s- RB ^ ^ repeat
still RB still ^ false_start
have VBP have predicate OK
those DT those arg1 OK
now RB now arg1 OK
for IN for arg1 OK
the DT the arg1 OK
same JJ same arg1 OK
reason NN reason arg1 OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i ^ OK
think VBP think ^ OK
that IN that ^ OK
they PRP they ^ OK
they PRP ^ ^ repeat
should MD should ^ OK
should MD ^ ^ repeat
check VB check ^ OK
for IN for ^ OK
arms NNS arms ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
i PRP i ^ OK
have VBP have ^ OK
n't RB n't ^ OK
been VBN been ^ OK
following VBG following ^ OK
it PRP it ^ OK
exactly RB exactly ^ OK

and CC ^ ^ false_start
g- XX ^ ^ false_start
they PRP they ^ OK
have VBP have ^ OK
n't RB n't ^ OK
found VBN found ^ OK
anything NN anything ^ OK

in IN in ^ OK
general JJ general ^ OK
i PRP ^ ^ repeat
i PRP i ^ OK
'm VBP 'm ^ OK
not RB not ^ OK
in IN in ^ OK
favor NN favor ^ OK
of IN of ^ OK
uh UH ^ ^ filler
war NN war ^ OK
with IN with ^ OK
iraq NNP iraq ^ OK

that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
true JJ true ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
to TO to ^ OK
like UH ^ ^ filler
blow VB blow ^ OK
up RP up ^ OK
the DT the ^ OK
whole JJ whole ^ OK
country NN country ^ OK
or CC ^ ^ false_start
to TO to ^ OK
just RB just ^ OK
g- VB ^ ^ repeat
get VB ^ ^ repeat
get VB get ^ OK
saddam NNP saddam ^ OK
out IN out ^ OK
out RB ^ ^ repeat
of IN of ^ OK
there RB there ^ OK

like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
really RB really ^ OK
think VB think ^ OK
he PRP he ^ OK
's BES 's ^ OK
any DT any ^ OK
kind NN kind ^ OK
of IN of ^ OK
good JJ good ^ OK
guy NN guy ^ OK
or CC or ^ OK
any DT any ^ OK
kind NN kind ^ OK
of IN of ^ OK
good JJ good ^ OK
leader NN leader ^ OK

the DT ^ ^ repeat
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
the DT the ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
like UH ^ ^ filler

but CC but ^ OK
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
worse JJR worse ^ OK
if IN if ^ OK
like UH ^ ^ filler
we PRP we ^ OK
do VBP do ^ OK
stuff NN stuff ^ OK
that WDT that ^ OK
ends VBZ ends ^ OK
up RB up ^ OK
killing VBG killing ^ OK
the DT the ^ OK
very JJ very ^ OK
people NNS people ^ OK
that WDT that ^ OK
he PRP he ^ OK
's BES 's ^ OK
already RB already ^ OK
causing VBG causing ^ OK
trouble NN trouble ^ OK
for IN for ^ OK

and CC ^ ^ false_start
the DT ^ ^ repeat
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
in IN in ^ OK
the DT the ^ OK
news NN news ^ OK
that WDT that ^ OK
upset VBD upset ^ OK
me PRP me ^ OK
recently RB recently ^ OK
is VBZ is ^ OK
that IN that ^ OK
uh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
f- NNP ^ ^ repeat
france NNP france ^ OK
and CC and ^ OK
germany NNP germany ^ OK
made VBD made ^ OK
a DT a ^ OK
declaration NN declaration ^ OK
that IN that ^ OK
they PRP they ^ OK
're VBP 're ^ OK
against IN against ^ OK
the DT the ^ OK
war NN war ^ OK

and CC ^ ^ false_start
then RB ^ ^ repeat
then RB then ^ OK
the DT ^ ^ repeat
the DT the ^ OK
u- NNP ^ ^ repeat
u. NNP u. ^ OK
s. NNP s. ^ OK
like UH ^ ^ filler
started VBN started ^ OK
digging VBG digging ^ OK
on IN on ^ OK
france NNP france ^ OK
and CC and ^ OK
germany NNP germany ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
like RP like ^ OK
that DT ^ ^ repeat
that DT that ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
not RB ^ ^ repeat
not RB not ^ OK
the DT ^ ^ repeat
the DT the ^ OK
right JJ right ^ OK
th- NN ^ ^ repeat
thing NN thing ^ OK
to TO to ^ OK
do VB do ^ OK

and CC ^ ^ false_start
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
scary JJ scary ^ OK
thing NN thing ^ OK
when WRB when ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
is VBZ is ^ OK
like UH ^ ^ filler
stopping VBG ^ ^ false_start
no DT no ^ OK
longer RBR longer ^ OK
working VBG working ^ OK
with IN with ^ OK
the DT the ^ OK
rest NN rest ^ OK
of IN of ^ OK
the DT the ^ OK
world NN world ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ repeat
and CC and ^ OK
sort RB sort ^ OK
of RB of ^ OK
making VBG making ^ OK
just RB just ^ OK
uh UH ^ ^ filler
offensive JJ offensive ^ OK
little JJ little ^ OK
comments NNS comments ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP ^ ^ false_start
's BES ^ ^ false_start
like RP ^ ^ false_start
hey UH ^ ^ false_start
france NNP france ^ OK
and CC and ^ OK
germany NNP germany ^ OK
's BES are ^ OK
a DT ^ ^ false_start
very RB very ^ OK
modern JJ modern ^ OK
society NN societies ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC and ^ OK
in IN ^ ^ repeat
in IN in ^ OK
many JJ many ^ OK
ways NNS ways ^ OK
i PRP i ^ OK
think VBP think ^ OK
socially RB socially ^ OK
more RBR more ^ OK
advanced JJ advanced ^ OK
than IN than ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
is VBZ is ^ OK

uh UH ^ ^ filler
they PRP they ^ OK
have VBP have ^ OK
a DT a ^ OK
lot NN lot ^ OK
less JJR less ^ OK
of IN of ^ OK
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
the DT the ^ OK
problems NNS problems ^ OK
that WDT that ^ OK
we PRP we ^ OK
have VBP have ^ OK

but CC but ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
ca MD ^ ^ repeat
ca MD ca ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
make VB make ^ OK
enemies NNS enemies ^ OK
with IN with ^ OK
the DT the ^ OK
most RBS most ^ OK
powerful JJ powerful ^ OK
countries NNS countries ^ OK
in IN in ^ OK
europe NNP europe ^ OK

well UH ^ ^ false_start
you PRP ^ ^ false_start
i PRP ^ ^ false_start
mean VBP ^ ^ false_start
the DT the ^ OK
sad JJ sad ^ OK
thing NN thing ^ OK
is VBZ is ^ OK
that IN that ^ OK
like UH ^ ^ filler
people NNS people ^ OK
that WDT that ^ OK
have VBP have ^ OK
nothing NN nothing ^ OK
to TO to ^ OK
do VB do ^ OK
with IN with ^ OK
it PRP it ^ OK
when WRB ^ ^ false_start
they PRP they ^ OK
get VBP get ^ OK
hurt VBN hurt ^ OK
hurt VBN and ^ false_start
i ADVP-TMP- 3 ^ ^ false_start
mean PRP ^ ^ false_start
that VBP that ^ OK
's DT 's ^ OK
not BES not ^ OK
fair RB fair ^ OK

like UH ^ ^ filler
people NNS people ^ OK
like IN like ^ OK
you PRP you ^ OK
and CC and ^ OK
me PRP me ^ OK
who WP who ^ OK
are VBP are ^ OK
n't RB n't ^ OK
making VBG making ^ OK
any DT any ^ OK
decisions NNS decisions ^ OK
who WP who ^ OK
are VBP are ^ OK
n't RB n't ^ OK
in IN in ^ OK
charge NN charge ^ OK
of IN of ^ OK
any DT any ^ OK
policies NNS policies ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
it PRP it ^ OK
's BES 's ^ OK
going VBG going ^ OK
to TO to ^ OK
be VB be ^ OK
people NNS people ^ OK
like IN like ^ OK
us PRP us ^ OK
in IN in ^ OK
the DT the ^ OK
u. NNP u. ^ OK
s. NNP s. ^ OK
and CC and ^ OK
in IN in ^ OK
north NNP north ^ OK
korea NNP korea ^ OK
and CC and ^ OK
in IN in ^ OK
iraq NNP iraq ^ OK
who WP who ^ OK
're VBP 're ^ OK
going VBG going ^ OK
to TO to ^ OK
get VB get ^ OK
bombs NNS bombs ^ OK
falling VBG falling ^ OK
down RB down ^ OK
on IN on ^ OK
them PRP them ^ OK
because IN because ^ OK
of IN of ^ OK
what WP what ^ OK
the DT their ^ false_start
leader NN leader ^ OK
's BES 's ^ OK
doing VBG doing ^ OK

and CC and ^ OK
eh UH eh ^ OK

in IN in ^ OK
fact NN fact ^ OK
tha- DT ^ ^ repeat
that DT that ^ OK
's BES 's ^ OK
the DT the ^ OK
bad JJ bad ^ OK
thing NN thing ^ OK
about IN about ^ OK
war NN war ^ OK

on IN on ^ OK
the DT the ^ OK
other JJ other ^ OK
hand NN hand ^ OK
though RB though ^ OK
like UH ^ ^ filler
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
could MD ^ ^ repeat
can MD can ^ OK
convince VB ^ ^ repeat
convince VB convince ^ OK
his PRP his ^ OK
military NN military ^ OK
to TO to ^ OK
no DT no ^ OK
longer RBR longer ^ OK
support VB support ^ OK
him PRP him ^ OK
or CC or ^ OK
like UH ^ ^ filler
his PRP his ^ OK
advisors NNS advisors ^ OK
to TO to ^ OK
turn VB turn ^ OK
against IN against ^ OK
him PRP him ^ OK

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
it PRP it ^ OK
's BES 's ^ OK
still RB still ^ OK
a DT a ^ OK
pretty RB pretty ^ OK
hard JJ hard ^ OK
task NN task ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
d- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't ^ OK
understand VB understand ^ OK

i PRP ^ ^ false_start
mean VBP ^ ^ false_start
but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
people NNS ^ ^ repeat
people NNS people ^ OK
only RB only ^ OK
know VBP know ^ OK
as RB as ^ OK
much RB much ^ OK
as IN as ^ OK
they PRP they ^ OK
're VBP 're ^ OK
being VBG being ^ OK
told VBN told ^ OK

you UNK ^ ^ filler
know UNK ^ ^ filler
in UNK ^ ^ repeat
in UNK in ^ OK
nineteen UNK ^ ^ repeat
nineteen UNK nineteen ^ OK
forties UNK forties ^ OK
germany UNK germany ^ OK
there UNK there ^ OK
was UNK were ^ false_start
people UNK people ^ OK
supporting UNK supporting ^ OK
hitler UNK hitler ^ OK
that UNK that ^ OK
you UNK ^ ^ filler
know UNK ^ ^ filler
when UNK when ^ OK
it UNK it ^ OK
was UNK was ^ OK
all UNK all ^ OK
over UNK over ^ OK
they UNK they ^ OK
were UNK were ^ OK
like UNK like ^ OK
what UNK what ^ OK
the UNK the ^ OK
hell UNK hell ^ OK
was UNK was ^ OK
i UNK i ^ OK
doing UNK doing ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
've VBP 've ^ OK
been VBN been ^ OK
to IN ^ ^ repeat
uh UH ^ ^ filler
to IN to ^ OK
japan NNP japan ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i ^ OK
went VBD went ^ OK
to IN to ^ OK
the DT ^ ^ repeat
the DT the ^ OK
hiroshima NNP hiroshima ^ OK
memorial NNP memorial ^ OK
there RB there ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
was VBD was ^ OK
really RB really ^ OK
surprised JJ surprised ^ OK
to TO to ^ OK
learn VB learn ^ OK
that IN that ^ OK
like UH ^ ^ filler
the DT the ^ OK
people NNS people ^ OK
in IN in ^ OK
japan NNP japan ^ OK
had VBD had ^ OK
no DT no ^ OK
idea NN idea ^ OK
what WP what ^ OK
was VBD was ^ OK
going VBG going ^ OK
on RB on ^ OK
during IN ^ ^ repeat
eh UH ^ ^ filler
during IN during ^ OK
the DT ^ ^ repeat
the DT the ^ OK
worl- NN ^ ^ repeat
war NN war ^ OK

and CC ^ ^ false_start
if IN if ^ OK
they PRP they ^ OK
knew VBD knew ^ OK
that IN that ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP they ^ OK
had VBD had ^ OK
a DT a ^ OK
very RB very ^ OK
desperate JJ desperate ^ OK
position NN position ^ OK
and CC and ^ OK
that IN that ^ OK
it PRP it ^ OK
probably RB probably ^ OK
was VBD was ^ OK
n't RB n't ^ OK
worth JJ worth ^ OK
fighting VBG fighting ^ OK
anymore RB anymore ^ OK
they PRP they ^ OK
would MD would ^ OK
n't RB n't ^ OK
have VB have ^ OK
kept VBD kept ^ OK
fighting VBG fighting ^ OK

and UNK ^ ^ false_start
so UNK so ^ OK
in UNK ^ ^ repeat
in UNK in ^ OK
a UNK ^ ^ repeat
a UNK a ^ OK
war UNK war ^ OK
situation UNK situation ^ OK
it UNK it ^ OK
's UNK 's ^ OK
uh UNK uh ^ OK

why WRB why ^ OK
it PRP it ^ OK
's BES 's ^ OK
your PRP your ^ OK
favorite JJ favorite ^ OK

well UH ^ ^ false_start
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
have VB have ^ OK
like UH ^ ^ filler
a DT a ^ OK
specific JJ specific ^ OK
person NN person ^ OK
that WDT that ^ OK
you PRP you ^ OK
like VBP like ^ OK
to TO to ^ OK
dress VB dress ^ OK
up RP up ^ OK
as IN as ^ OK

or CC or ^ OK
do VBP do ^ OK
you PRP you ^ OK
go VB go ^ OK
with IN with ^ OK
a DT ^ ^ repeat
kind RB ^ ^ filler
of RB ^ ^ filler
a DT a ^ OK
di- JJ ^ ^ repeat
different JJ different ^ OK
genre NN genre ^ OK
every DT every ^ OK
year NN year ^ OK

eh UH ^ ^ filler
eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP i ^ OK
probably RB probably ^ OK
like VBP like ^ OK
th- XX ^ ^ false_start
christmas NNP christmas ^ OK
the DT the ^ OK
most RBS most ^ OK

but CC but ^ OK
i PRP i ^ OK
do VBP do ^ OK
enjoy VB enjoy ^ OK
it PRP ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
halloween NNP halloween ^ false_start

last JJ last ^ OK
year NN year ^ OK
i PRP i ^ OK
dressed VBD dressed ^ OK
up RP up ^ OK
as IN as ^ OK
um UH ^ ^ filler
angelina NNP angelina ^ OK
jolie NNP jolie ^ OK
from IN from ^ OK
remember VB ^ ^ false_start
the DT ^ ^ false_start
name NN ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
movie NN ^ ^ false_start
tomb NNP tomb ^ OK
now RB ^ ^ false_start
i PRP ^ ^ false_start
ca MD ^ ^ false_start
n't RB ^ ^ false_start
raider NNP raider ^ OK

i PRP i ^ OK
was VBD was ^ OK
the DT the ^ OK
tomb NNP tomb ^ OK
raider NNP raider ^ OK
girl NN girl ^ OK
last JJ last ^ OK
year NN year ^ OK

but CC but ^ OK
uh UH ^ ^ filler
i PRP i ^ OK
did VBD did ^ OK
n't RB n't ^ OK
get VB get ^ OK
to TO to ^ OK
eh UH ^ ^ filler
go VB go ^ OK
to IN to ^ OK
any DT any ^ OK
halloween NNP halloween ^ OK
parties NNS parties ^ OK
this DT this ^ OK
year NN year ^ OK

but CC ^ ^ false_start
christmas NNP ^ ^ false_start
bu- CC ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
just RB just ^ OK
because IN because ^ OK
we PRP we ^ OK
're VBP 're ^ OK
in IN in ^ OK
it PRP it ^ OK
right RB right ^ OK
now RB now ^ OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
it PRP it ^ OK
's BES ^ ^ repeat
's BES 's ^ OK
i- PRP ^ ^ repeat
a DT a ^ OK
good JJ good ^ OK
reason NN reason ^ OK
to TO to ^ OK
be VB be ^ OK
able JJ able ^ OK
to TO to ^ OK
go VB go ^ OK
shopping VBG shopping ^ OK
because IN because ^ OK
i PRP i ^ OK
'm VBP 'm ^ OK
buying VBG buying ^ OK
for IN for ^ OK
somebody NN somebody ^ OK
else RB else ^ OK

it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK

it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
really RB really ^ OK
joyous JJ joyous ^ OK
holiday NN holiday ^ OK

and CC ^ ^ false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
fun JJ ^ ^ false_start
beca- IN ^ ^ false_start
well UH ^ ^ filler
the DT the ^ OK
only JJ only ^ OK
thing NN thing ^ OK
i PRP i ^ OK
do VBP do ^ OK
n't RB n't ^ OK
like VB like ^ OK
about IN about ^ OK
it PRP it ^ OK
is VBZ is ^ OK
uh UH ^ ^ filler
it PRP it ^ OK
seems VBZ seems ^ OK
like IN like ^ OK
the DT the ^ OK
whole JJ whole ^ OK
santa NNP santa ^ OK
thing NN thing ^ OK
has VBZ has ^ OK
sort RB sort ^ OK
of RB of ^ OK
taken VBN taken ^ OK
over RP over ^ OK

eh UH ^ ^ filler
i PRP i ^ OK
was VBD was ^ OK
on RB on ^ OK
at IN at ^ OK
a DT a ^ OK
conference NN conference ^ OK

and CC ^ ^ false_start
uh UH ^ ^ filler
they PRP ^ ^ false_start
only RB ^ ^ false_start
had VBD ^ ^ false_start
they PRP they ^ OK
had VBD had ^ OK
like UH ^ ^ filler
maybe RB maybe ^ OK
two CD two ^ OK
angel NNP angel ^ OK
ornaments NNS ornaments ^ OK
and CC and ^ OK
no DT not ^ false_start
like UH ^ ^ filler
really RB really ^ OK
anything NN anything ^ OK
religious JJ religious ^ OK

and CC ^ ^ false_start
i PRP i ^ OK
kind RB kind ^ OK
of RB of ^ OK
felt VBD felt ^ OK
like IN like ^ OK
there EX there ^ OK
should MD should ^ OK
of VB have ^ false_start
at RB at ^ OK
least RBS least ^ OK
be VB been ^ false_start
equal JJ equal ^ OK
time NN time ^ OK
or CC or ^ OK
equal JJ equal ^ OK
space NN space ^ OK
for IN for ^ OK
the DT the ^ OK
different JJ different ^ OK
kinds NNS kinds ^ OK

i PRP i ^ OK
went VBD went ^ OK
over IN over ^ OK
thanksgiving NNP thanksgiving ^ OK

we PRP ^ ^ false_start
my PRP my ^ OK
family NN family ^ OK
and CC and ^ OK
i PRP i ^ OK
fir- XX ^ ^ repeat
strangely RB strangely ^ OK
enough RB enough ^ OK
went VBD went ^ OK
to IN to ^ OK
florida NNP florida ^ OK

this DT ^ ^ false_start
is VBZ ^ ^ false_start
we PRP we ^ OK
usually RB usually ^ OK
have VB have ^ OK
a DT a ^ OK
traditional JJ traditional ^ OK
thanksgiving NNP thanksgiving ^ OK
everything NN ^ ^ false_start
dinner NN dinner ^ OK

that DT that ^ OK
's BES 's ^ OK
a DT ^ ^ false_start
good JJ good ^ OK

most JJS most ^ OK
of IN of ^ OK
the DT the ^ OK
family NN family ^ OK
gets VBZ gets ^ OK
together RB together ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ false_start
nobody NN nobody ^ OK
um UH ^ ^ filler
has VBZ has ^ OK
time NN time ^ OK
to TO to ^ OK
do VB do ^ OK
it PRP it ^ OK
other JJ other ^ OK
times NNS times ^ OK
of IN of ^ OK
the DT the ^ OK
year NN year ^ OK

oh UH oh ^ OK
my UH my ^ OK
gosh UH gosh ^ OK

thats UNK that ^ OK
thats UNK 's ^ OK
quite UNK quite ^ OK
a UNK a ^ OK
ways UNK ways ^ OK

especially RB especially ^ OK
because IN because ^ OK
a DT on ^ false_start
a DT a ^ OK
lot NN lot ^ OK
of IN of ^ OK
the DT the ^ OK
holidays NNS holidays ^ OK
like IN like ^ OK
halloween NNP halloween ^ OK
you PRP ^ ^ repeat
you PRP you ^ OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
get VB get ^ OK
the DT the ^ OK
day NN day ^ OK
off RB off ^ OK

so RB ^ ^ false_start
that DT what ^ false_start
would MD would ^ OK
be VB be ^ OK
important JJ important ^ OK
is IN in ^ false_start
designing VBG designing ^ OK
your PRP your ^ OK
own JJ own ^ OK
mixture NN mixture ^ OK
would MD would ^ OK
be VB be ^ OK
that IN ^ ^ repeat
the- PRP ^ ^ repeat
that IN that ^ OK
you PRP you ^ OK
definitely RB definitely ^ OK
get VBP get ^ OK
the DT the ^ OK
day NN day ^ OK
off RB off ^ OK

things NNS things arg1 OK
that WDT that arg1 OK
used VBD used arg1 OK
to TO to arg1 OK
bother VB bother arg1 OK
me PRP me arg1 OK
i PRP i arg0 OK
just RB just argM_adverb OK
um UH ^ ^ filler
kind RB ^ ^ filler
of RB ^ ^ filler
ignore VBP ignore predicate OK
now RB now argM_tmp OK

r- UH ^ ^ repeat
right UH right ^ OK

um UH ^ ^ filler
uh UH ^ ^ filler
basically RB basically argM_adverb OK
um UH ^ ^ filler
and CC ^ ^ false_start
when WRB when argM_tmp OK
we PRP we arg0 OK
do VBP do ^ OK
travel VB travel predicate OK
it ADVP-TMP- 1 it arg1 OK
seems PRP seems predicate OK
to VBZ to arg2 OK
be TO be arg2 OK
closer VB closer arg2 OK
to RBR to arg2 OK
home IN home arg2 OK

mm UH ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
and CC ^ ^ false_start
um UH ^ ^ filler
i PRP i ^ OK
think VBP think ^ OK
eh UH ^ ^ filler
one CD one ^ OK
thing NN thing ^ OK
that WDT that ^ OK
has VBZ has ^ OK
um UH ^ ^ filler
become VBN become ^ OK
of IN of ^ OK
this DT this ^ OK

i PRP i arg1 OK
was VBD was ^ OK
raised VBN raised predicate OK
in IN in argM_tmp OK
an DT an argM_tmp OK
era NN era argM_tmp OK
with IN with argM_tmp OK
uh UH ^ ^ filler
grandparents NNS grandparents ^ OK
grandparents NNS ^ argM_tmp false_start
grandparents NNS and ^ false_start
great JJ great argM_tmp OK
grandparents NNS grandparents argM_tmp OK

and CC ^ ^ false_start
well UH ^ ^ filler
my PRP my arg1 OK
daughter NN daughter arg1 OK
was VBD was predicate OK
almost RB almost arg2 OK
f- CD ^ ^ repeat
fifteen CD fifteen arg2 OK
or CC or arg2 OK
sixteen CD sixteen arg2 OK
d- XX ^ ^ false_start
um UH ^ ^ filler
w- XX ^ ^ false_start
d- XX ^ ^ false_start
before IN before argM_tmp OK
her PRP her arg1 OK
great JJ great arg1 OK
great JJ great arg1 OK
grandmother NN grandmother arg1 OK
passed VBD passed arg2 OK
away RB away argM_mnr OK

so RB ^ ^ filler
family NN family arg1 OK
was VBD was predicate OK
always RB always arg2 OK
very RB very arg2 OK
close JJ close arg2 OK

and CC ^ ^ false_start
then RB then argM_adverb OK
all DT all argM_tmp OK
of IN of argM_tmp OK
a DT a argM_tmp OK
sudden JJ sudden argM_tmp OK
um UH ^ ^ filler
we PRP we arg1 OK
all DT all arg1 OK
got VBD got predicate OK
spread JJ spread arg1 OK
out RP out argM_dir OK

and CC ^ ^ false_start
um UH ^ ^ filler
it PRP it arg1 OK
just RB just argM_adverb OK
became VBD became predicate OK
very RB very arg2 OK
unusual JJ unusual arg2 OK
because IN because argM_cause OK
of IN of ^ OK
having VBG having predicate OK
as IN as argM_mnr OK
a DT a argM_mnr OK
kid NN kid argM_mnr OK
all DT all arg1 OK
of IN of arg1 OK
the DT the arg1 OK
family NN family arg1 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
my PRP ^ ^ false_start
t- XX ^ ^ false_start
father NN ^ ^ false_start
was VBD ^ ^ false_start
um UH ^ ^ filler
his PRP his arg1 OK
m- NN ^ ^ false_start
mother NN mother arg1 OK
was VBD was predicate OK
one CD one arg2 OK
of IN of arg2 OK
ten CD ten arg2 OK

and CC ^ ^ false_start
n- RB ^ ^ repeat
now RB now argM_tmp OK
all DT all argM_tmp OK
of IN of argM_tmp OK
a DT a argM_tmp OK
sudden JJ sudden argM_tmp OK
everybody NN everybody arg1 OK
's BES 's ^ OK
spread JJ spread predicate OK
out RP out argM_mnr OK

and CC ^ ^ false_start
him PRP he arg1 false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
considered VBN considered predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
quote RB quote arg1 OK
moving VBG moving arg1 OK
back RB back arg2 OK
north RB north arg2 OK
again RB again arg2 OK
to TO ^ ^ repeat
to TO to argM_purpos OK
be VB be argM_purpos OK
closer RBR closer arg2 OK
to IN to arg2 OK
family NN family arg2 OK

if IN ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
what WP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
so NP-1 ^ ^ filler
it UH it ^ OK
's PRP 's ^ OK
just BES just ^ OK
you RB ^ ^ filler
know PRP ^ ^ filler

why WRB why ^ OK
it PRP it ^ OK
's BES 's ^ OK
your PRP your ^ OK
favorite JJ favorite ^ OK

well UH ^ ^ filler
do VBP ^ ^ repeat
do VBP do ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
have VB have predicate OK
like UH ^ ^ filler
a DT a arg1 OK
specific JJ specific arg1 OK
person NN person arg1 OK
that WDT that arg1 OK
you PRP you arg0 OK
like VBP like arg1 OK
to TO to arg1 OK
dress VB dress arg1 OK
up RP up arg_particl OK
as IN as arg1 OK

or CC or argM_discou OK
do VBP do ^ OK
you PRP you arg0 OK
go VB go predicate OK
with IN with arg1 OK
a DT ^ ^ repeat
kind RB ^ ^ false_start
of RB ^ ^ false_start
a DT a arg1 OK
di- JJ ^ ^ repeat
different JJ different arg1 OK
genre NN genre arg1 OK
every DT every argM_tmp OK
year NN year argM_tmp OK

eh UH ^ ^ filler
eh UH ^ ^ filler
yeah UH yeah ^ OK

i PRP i arg0 OK
probably RB probably argM_adverb OK
like VBP like predicate OK
th- XX ^ ^ false_start
christmas NNP christmas arg1 OK
the DT the arg1 OK
most RBS most arg1 OK

i PRP i arg0 OK
do VBP do ^ OK
enjoy VB enjoy predicate OK
but CC ^ ^ false_start
uh UH ^ ^ filler
eh UH ^ ^ filler
halloween NNP ^ arg1 false_start
it PRP halloween ^ false_start

last JJ last argM_tmp OK
year NN year argM_tmp OK
i PRP i arg0 OK
dressed VBD dressed predicate OK
up RP up arg_particl OK
as IN as arg1 OK
um UH ^ ^ filler
angelina NNP angelina arg1 OK
jolie NNP jolie arg1 OK
from IN from arg1 OK
remember VB ^ ^ false_start
the DT ^ ^ false_start
name NN ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
movie NN ^ ^ false_start
tomb NNP tomb arg1 OK
now RB ^ ^ false_start
i PRP ^ ^ false_start
ca MD ^ ^ false_start
n't RB ^ ^ false_start
raider NNP raider arg1 OK

i PRP i arg1 OK
was VBD was predicate OK
the DT the arg2 OK
tomb NNP tomb arg2 OK
raider NNP raider arg2 OK
girl NN girl arg2 OK
last JJ last argM_tmp OK
year NN year argM_tmp OK

but CC ^ ^ false_start
uh UH ^ ^ filler
i PRP i arg1 OK
did VBD did ^ OK
n't RB n't argM_neg OK
get VB get predicate OK
to TO to arg1 OK
eh UH ^ ^ filler
go VB go arg1 OK
to IN to arg2 OK
any DT any arg2 OK
halloween NNP halloween arg2 OK
parties NNS parties arg2 OK
this DT this argM_tmp OK
year NN year argM_tmp OK

but CC ^ ^ false_start
christmas NNP christmas ^ OK
bu- CC ^ ^ false_start
i PRP i ^ OK
guess VBP guess ^ OK
just RB just ^ OK
because IN because ^ OK
we PRP we ^ OK
're VBP 're ^ OK
in IN in ^ OK
it PRP it ^ OK
right RB right ^ OK
now RB now ^ OK

and CC ^ ^ false_start
it PRP ^ ^ repeat
i- PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
a DT a arg2 OK
good JJ good arg2 OK
reason NN reason arg2 OK
to TO to arg2 OK
be VB be arg2 OK
able JJ able arg2 OK
to TO to arg2 OK
go VB go arg2 OK
shopping VBG shopping arg1 OK
because IN because argM_cause OK
i PRP i arg0 OK
'm VBP 'm argM_cause OK
buying VBG buying argM_cause OK
for IN for arg4 OK
somebody NN somebody arg4 OK
else RB else arg4 OK

it PRP it ^ OK
's BES 's ^ OK
a DT a ^ OK
a DT _ARG_ ^ false_start

it PRP it arg1 OK
's BES 's predicate OK
a DT a arg2 OK
really RB really arg2 OK
joyous JJ joyous arg2 OK
holiday NN holiday arg2 OK

and CC ^ arg1 false_start
it PRP ^ ^ false_start
's BES ^ ^ false_start
fun JJ ^ ^ false_start
beca- IN ^ ^ false_start
well UH ^ ^ filler
the DT the arg1 OK
only JJ only arg1 OK
thing NN thing arg1 OK
i PRP i arg1 OK
do VBP do arg1 OK
n't RB n't arg1 OK
like VB like arg1 OK
about IN about arg1 OK
it PRP it arg1 OK
is VBZ is predicate OK
uh UH ^ ^ filler
it PRP it arg1 OK
seems VBZ seems arg2 OK
like IN like arg2 OK
the DT the arg0 OK
whole JJ whole arg0 OK
santa NNP santa arg0 OK
thing NN thing arg0 OK
has VBZ has arg2 OK
sort RB ^ ^ false_start
of RB ^ ^ false_start
taken VBN taken arg2 OK
over RP over arg2 OK

eh UH ^ ^ filler
i PRP i arg1 OK
was VBD was predicate OK
on RB ^ ^ false_start
at IN at arg2 OK
a DT a arg2 OK
conference NN conference arg2 OK

and CC ^ ^ false_start
uh UH ^ ^ filler
they PRP ^ ^ repeat
they PRP they arg0 OK
only RB ^ ^ repeat
had VBD ^ ^ repeat
had VBD had predicate OK
like UH ^ ^ filler
maybe RB maybe argM_adverb OK
two CD two arg1 OK
angel NNP angel arg1 OK
ornaments NNS ornaments arg1 OK
and CC and ^ OK
like UH ^ ^ filler
really RB really argM_adverb OK
no DT ^ argM_neg false_start
anything NN nothing arg1 false_start
religious JJ religious arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
felt VBD felt predicate OK
like IN ^ ^ filler
there EX there arg1 OK
should MD should argM_mod OK
of VB have arg1 false_start
at RB at argM_adverb OK
least RBS least argM_adverb OK
be VB been arg1 false_start
equal JJ equal arg2 OK
time NN time arg2 OK
or CC or arg2 OK
equal JJ equal arg2 OK
space NN space arg2 OK
for IN for arg2 OK
the DT the arg2 OK
different JJ different arg2 OK
kinds NNS kinds arg2 OK

i PRP ^ ^ false_start
went VBD ^ ^ false_start
over IN over argM_tmp OK
thanksgiving NNP thanksgiving argM_tmp OK
we PRP ^ ^ false_start
my PRP my arg1 OK
family NN family arg1 OK
and CC and arg1 OK
i PRP i arg1 OK
fir- XX ^ ^ false_start
strangely RB strangely argM_adverb OK
enough RB enough argM_adverb OK
went VBD went predicate OK
to IN to arg4 OK
florida NNP florida arg4 OK

this DT ^ ^ false_start
is VBZ ^ ^ false_start
we PRP we arg0 OK
usually RB usually argM_adverb OK
have VB have predicate OK
a DT a arg1 OK
traditional JJ traditional arg1 OK
thanksgiving NNP thanksgiving arg1 OK
everything NN everything arg1 OK
dinner NN dinner arg1 OK

that DT that ^ OK
's BES 's ^ OK
a DT a ^ OK
good JJ good ^ OK
good JJ _ARG_ ^ false_start

most JJS most arg0 OK
of IN of arg0 OK
the DT the arg0 OK
family NN family arg0 OK
gets VBZ gets predicate OK
together RB together arg_particl OK
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because argM_cause OK
nobody NN nobody arg0 OK
um UH ^ ^ filler
has VBZ has argM_cause OK
time NN time arg1 OK
to TO to arg1 OK
do VB do arg1 OK
it PRP it arg1 OK
other JJ other argM_tmp OK
times NNS times argM_tmp OK
of IN of argM_tmp OK
the DT the argM_tmp OK
year NN year argM_tmp OK

oh UH oh ^ OK
my UH my ^ OK
gosh UH gosh ^ OK

thats UNK that ^ false_start
thats UNK 's ^ false_start
quite UNK quite ^ OK
a UNK a ^ OK
ways UNK ways ^ OK

especially RB especially argM_tmp OK
because IN because ^ OK
holidays NNS ^ ^ false_start
get VB on ^ false_start
a DT a argM_tmp OK
lot NN lot argM_tmp OK
of IN of argM_tmp OK
the DT the argM_tmp OK
holidays NNS holidays argM_tmp OK
like IN like argM_tmp OK
halloween NNP halloween argM_tmp OK
you PRP ^ ^ repeat
you PRP you arg0 OK
do VBP ^ ^ repeat
do VBP do ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
get VB get predicate OK
the DT the arg1 OK
day NN day arg1 OK
off RB off arg1 OK

so RB ^ arg2 false_start
that DT that arg1 OK
would MD would argM_mod OK
be VB be predicate OK
important JJ important ^ OK
important JJ ^ arg2 false_start
designing VBG in ^ false_start
is IN ^ ^ false_start
designing VBG designing arg2 OK
your PRP your arg1 OK
own JJ own arg1 OK
mixture NN mixture arg1 OK
be VB ^ ^ false_start
that IN ^ ^ false_start
the- PRP ^ ^ false_start
that IN ^ ^ false_start
you PRP you arg0 false_start
would MD would argM_mod OK
definitely RB definitely argM_adverb OK
get VBP get predicate OK
the DT the arg1 OK
day NN day arg1 OK
off RB off arg1 OK

i PRP i arg0 OK
saw VBD saw predicate OK
a DT a arg1 OK
little JJ ^ ^ false_start
bit NN bit arg1 OK
of IN of arg1 OK
it PRP it arg1 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
tha- DT ^ ^ repeat
that DT ^ ^ false_start
was VBD ^ ^ false_start
intr- XX ^ ^ false_start
that DT ^ ^ false_start
was VBD ^ ^ false_start
n't RB ^ ^ false_start
well UH ^ ^ filler
i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
know VB ^ ^ false_start
the DT the arg1 OK
voting VBG ^ arg1 false_start
out RP voting-out ^ false_start
part NN part arg1 OK
was VBD was predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
weird JJ weird arg2 OK

but CC ^ ^ repeat
um UH ^ ^ filler
but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
just RB ^ ^ false_start
the DT the arg1 OK
comedy NN comedy arg1 OK
part NN part arg1 OK
is VBZ is predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
an DT ^ ^ false_start
interesting JJ interesting arg2 OK
on IN ^ ^ false_start
that DT ^ ^ false_start

i PRP i arg0 OK
saw VBD saw predicate OK
that IN ^ ^ false_start
they PRP they arg0 OK
would MD would arg1 OK
wi- VB ^ ^ repeat
win VB win arg1 OK
at IN in argM_tmp false_start
the DT the argM_tmp OK
end NN end argM_tmp OK

i PRP i arg0 OK
liked VBD liked predicate OK
that DT that arg1 OK
a DT a ^ OK
lot NN lot ^ OK
because IN because ^ OK
i PRP i arg0 OK
really RB really ^ OK
like VBP like predicate OK
to TO to arg1 OK
watch VB watch arg1 OK
e- XX ^ ^ repeat
singing NN singing arg1 OK
and CC ^ ^ repeat
and CC ^ ^ false_start
all PDT ^ ^ false_start
that DT ^ ^ false_start
anyway RB ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
so- DT ^ ^ repeat
on IN ^ ^ false_start
of IN ^ ^ false_start
they PRP ^ ^ repeat
y- XX ^ ^ repeat
they PRP they arg0 OK
get VBP get predicate OK
really RB ^ ^ false_start
bad JJ bad arg1 OK
reputations NNS reputations arg1 OK
from IN from ^ OK
some DT some arg2 false_start
them PRP ^ ^ repeat
them PRP them arg2 OK

it PRP it arg1 OK
's BES 's predicate OK
totally RB ^ ^ false_start
their PRP their arg2 OK
choice NN choice arg2 OK

so RB ^ arg1 false_start
that DT that arg1 OK
's BES 's predicate OK
why WRB why arg2 OK
i PRP ^ ^ repeat
do VBP ^ ^ repeat
n't RB ^ ^ repeat
se- XX ^ ^ repeat
i PRP i arg0 OK
do VBP do arg2 OK
n't RB n't argM_neg OK
feel VB feel arg2 OK
like IN ^ ^ false_start
it PRP it arg1 OK
's S-2 's arg1 OK
that BES ^ ^ false_start
bad RB bad arg2 OK
watching JJ watching arg1 OK
watching CC ^ predicate repeat
them VBG them arg1 OK
and PRP and arg1 OK
things VBG the ^ false_start
things VBG things arg1 OK
happen NNS that arg1 OK
happen NNS happen arg1 OK
to VBP to arg1 OK
them IN them arg2 OK

and CC ^ ^ false_start
what WDT ^ ^ false_start
image NN ^ ^ false_start
if IN ^ ^ false_start
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
their PRP their ^ OK
choice NN choice ^ OK
to TO to ^ OK
do VB do ^ OK
whatever WP whatever ^ OK
things VBD ^ ^ false_start
they PRP they ^ OK
do VBP do ^ OK
or NP-1 or ^ OK
their CC ^ ^ repeat
did PRP did ^ OK
in NNS in ^ OK
the IN the ^ OK
past DT past ^ OK
or NN ^ ^ false_start
whatever CC ^ ^ false_start

how WRB ^ ^ repeat
i PRP ^ ^ repeat
mean VBP ^ ^ repeat
i PRP ^ ^ filler
mean VBP ^ ^ filler
how WRB how ^ OK
awful JJ awful arg2 OK
would MD would ^ OK
it PRP it arg1 OK
be VB be predicate OK
if IN if ^ OK
you PRP you arg1 OK
're VBP were predicate false_start
one CD one arg2 OK
of IN of arg2 OK
those DT those arg2 OK
people NNS people arg2 OK
that WDT ^ ^ false_start
they PRP they arg0 OK
make VBP make arg2 OK
fun NN fun arg1 OK
of IN of arg2 OK
so NP-2 ^ ^ false_start
bad RB ^ ^ false_start

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ repeat
'm VBP ^ ^ repeat
sure JJ ^ ^ repeat
are VBP ^ ^ repeat
probably RB ^ ^ repeat
do- XX ^ ^ repeat
maybe RB maybe ^ false_start
some DT some arg1 OK
of IN of arg1 OK
them PRP them arg1 OK
they PRP ^ ^ false_start
'll MD will ^ false_start
go VB go predicate OK
in IN in arg4 OK
there RB there arg4 OK

and CC ^ ^ false_start
they PRP ^ ^ repeat
they PRP they arg1 OK
just RB ^ ^ false_start
want VBP want predicate OK
to TO to arg1 OK
be VB be arg1 OK
on IN on argM_loc OK
t. NN t. argM_loc OK
v. NN v. argM_loc OK

that DT ^ ^ repeat
re- XX ^ ^ false_start
that DT that arg1 OK
's BES ^ ^ repeat
's BES 's predicate OK
pretty RB ^ ^ false_start
sad JJ sad arg2 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
is VBZ ^ ^ repeat
's BES 's predicate OK
just RB ^ ^ false_start
so RB ^ ^ false_start
so RB ^ ^ false_start
funny JJ funny arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ false_start
just RB ^ ^ false_start
e XX ^ ^ repeat
they PRP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
that DT that arg1 OK
's BES 's predicate OK
just RB ^ ^ false_start
like IN like arg2 OK
a DT a arg2 OK
comedy NN comedy arg2 OK
show NN show arg2 OK
when WRB when ^ OK
they PRP they arg0 OK
have VBP have predicate OK
those DT those arg1 OK

and CC ^ ^ false_start
they PRP they arg1 OK
're VBP 're predicate OK
like UH ^ ^ false_start
the DT the arg2 OK
worst JJS worst arg2 OK
singer NN singers arg2 false_start
ever RB ever argM_tmp OK

and CC ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
they PRP ^ ^ false_start
just RB ^ ^ false_start
everybody NN everybody arg0 OK
's BES 's ^ OK
making VBG making predicate OK
fun NN fun arg1 OK
of IN of ^ OK
them PRP them arg2 OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
how WRB how ^ OK
can MD can ^ OK
they PRP they arg0 OK
think VB think predicate OK
that IN that arg1 OK
they PRP they arg1 OK
're VBP 're arg1 OK
so RB so arg2 OK
good JJ good arg2 OK
when WRB when ^ OK
they PRP they arg1 OK
're VBP 're predicate OK
so RB so arg2 OK
bad JJ bad arg2 OK

or CC ^ ^ false_start
that DT ^ ^ repeat
's BES ^ ^ repeat
all DT ^ ^ repeat
they PRP ^ ^ repeat
maybe RB ^ ^ repeat
or CC ^ ^ false_start
maybe RB maybe ^ OK
that IN ^ ^ false_start
they PRP they arg0 OK
just RB ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
think VBP think predicate OK
they PRP they arg1 OK
're VBP 're arg1 OK
good JJ good arg2 OK
for IN ^ ^ false_start
some DT ^ ^ false_start
reason NN ^ ^ false_start
they PRP because ^ false_start
they PRP they arg0 false_start
never RB never argM_tmp false_start
sang VBD sang predicate false_start
to IN to ^ false_start
anybody NN anybody arg2 false_start
else RB else arg2 false_start

but CC ^ ^ false_start
a DT ^ ^ repeat
lot NN ^ ^ repeat
of IN ^ ^ repeat
the DT ^ ^ repeat
too RB ^ ^ false_start
like UH ^ ^ filler
some DT ^ ^ repeat
of IN ^ ^ repeat
th- PRP ^ ^ repeat
some DT ^ ^ repeat
of IN ^ ^ repeat
even RB even ^ OK
the DT ^ ^ repeat
the DT the ^ OK
worst JJS worst ^ OK
shows NNS ^ ^ false_start
them PRP ^ ^ false_start
ones NNS shows ^ false_start
like IN like ^ OK
uh UH ^ ^ filler
the DT the ^ OK
bachelor NNP bachelor ^ OK
or CC ^ ^ false_start
whatever WDT ^ ^ false_start

you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
like UH ^ ^ filler
i PRP i arg0 OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
get VBP got ^ false_start
sucked VBN sucked predicate OK
into IN into argM_other OK
watching VBG watching argM_other OK
like UH ^ ^ filler
the DT the arg1 OK
first JJ first arg1 OK
one CD one arg1 OK

and CC ^ ^ false_start
once IN once ^ OK
you PRP you arg0 OK
start VBP start predicate OK
watching VBG watching arg1 OK
it PRP it arg1 OK
it PRP ^ ^ repeat
's BES ^ ^ repeat
you PRP you arg0 OK
ca MD ca ^ OK
n't RB n't argM_neg OK
stop VB stop predicate OK

like UH ^ ^ filler
eh UH ^ ^ filler
there EX there ^ OK
's BES 's predicate OK
just RB ^ ^ false_start
no DT no arg1 OK
way NN way arg1 OK
i PRP i arg0 OK
can MD can arg1 OK
stop VB stop arg1 OK
after ADVP-1 after ^ OK
i IN i arg1 OK
just PRP ^ ^ false_start
kind RB ^ ^ false_start
of RB ^ ^ false_start
get RB get predicate OK
into VBP into arg_particl OK
one IN one arg2 OK
of CD of arg2 OK
them IN them arg2 OK

i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
there RB there arg2 OK
brother UH ^ ^ false_start

so UH ^ ^ repeat
so UH ^ ^ false_start
where WRB ^ ^ repeat
where WRB where arg2 OK
would MD would argM_mod OK
you PRP you arg1 OK
move VB move predicate OK
if IN if argM_adverb OK
you PRP you arg1 OK
were VBD were ^ OK
going VBG going argM_mod OK
to TO to argM_mod OK
move VB move predicate OK

you PRP ^ ^ repeat
well UH ^ ^ filler
you- PRP you- ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
well UH ^ ^ filler
tha- DT ^ ^ false_start
that DT that arg1 OK
's BES 's predicate OK
all RB all arg2 OK
like UH ^ ^ filler
west NNP west arg2 OK
mount NNP mount arg2 OK
airy NNP airy arg2 OK
up IN up arg2 OK
that DT that arg2 OK
way NN way arg2 OK

you PRP ^ ^ false_start
'd MD ^ ^ false_start
be VB ^ ^ false_start
believe VB believe predicate OK
it PRP it arg1 OK
or CC or arg1 OK
not RB not arg1 OK
charlie NNP charlie argM_discou OK
you PRP you arg0 OK
could MD could argM_mod OK
find VB find arg1 OK
some DT some arg1 OK
nice JJ nice arg1 OK
spots NNS spots arg1 OK
up IN up argM_loc OK
there RB there argM_loc OK
for IN for arg2 OK
not RB not arg2 OK
not RB ^ ^ repeat
too RB too arg2 OK
bad RB bad arg2 OK

something NN something ^ OK
just RB just ^ OK
kind RB ^ ^ repeat
kind RB kind ^ OK
of RB ^ ^ repeat
of RB of ^ OK
in IN ^ ^ repeat
ch- XX ^ ^ repeat
away RB away ^ OK
from IN from ^ OK
things NNS things ^ OK

i PRP i arg0 OK
hear VBP hear predicate OK
you PRP you arg2 OK
partner UH ^ ^ false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
'd MD 'd argM_mod OK
tell VBP ^ ^ repeat
tell VB tell predicate OK
yo- PRP ^ ^ repeat
you PRP you arg2 OK
what NN what arg1 OK

i PRP ^ ^ repeat
i PRP i arg0 OK
don- VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't argM_neg OK
know VB know predicate OK
if IN if argM_adverb OK
you PRP you arg0 OK
've VBP 've arg1 OK
ever RB ever argM_adverb OK
looked VBN looked arg1 OK
down IN down argM_dir OK
in IN in arg1 OK
south NNP south arg1 OK
philly NNP philly arg1 OK

but CC but argM_discou OK
they PRP they arg0 OK
got VBD have predicate false_start
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
three CD ^ ^ repeat
three CD three arg1 OK
story NN story arg1 OK
houses NNS houses arg1 OK
in SBAR-2 in arg1 OK
south IN south arg1 OK
philly NNP philly arg1 OK
that NNP that arg1 OK
are WDT ^ ^ false_start
n't VBP ^ ^ false_start
definitely RB definitely argM_adverb OK
are RB are arg1 OK
n't VBP n't argM_neg OK
too RB too arg2 OK
bad RB bad arg2 OK

i PRP i arg0 OK
know VBP know predicate OK
that IN that arg1 OK
uh UH ^ ^ filler
i PRP ^ ^ repeat
tried VBD ^ ^ repeat
i PRP i arg0 OK
tried VBD tried arg1 OK
looking VBG looking arg1 OK
at IN at arg1 OK
possibly RB possibly argM_adverb OK
uh UH ^ ^ filler
getting VBG getting arg1 OK
a DT ^ ^ repeat
a DT a arg1 OK
f- JJ ^ ^ repeat
first JJ first arg1 OK
time NN time arg1 OK
buyer NN buyer arg1 OK
's POS 's arg1 OK
loan NN loan arg1 OK

you PRP ^ ^ repeat
you PRP you arg1 OK
can MD ^ ^ repeat
can MD can argM_mod OK
definitely RB ^ ^ repeat
definitely RB definitely argM_adverb OK
qualify VB qualify predicate OK
for IN for arg2 OK
first JJ first arg2 OK
time NN time arg2 OK
buyers NNS buyers arg2 OK

but CC ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
uh UH ^ ^ filler
my PRP my arg1 OK
credit NN credit arg1 OK
is VBZ ^ ^ repeat
is VBZ is predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
kind RB kind argM_extent OK
of RB of argM_extent OK
banged JJ banged arg2 OK
up RP up arg_particl OK

i PRP i arg0 OK
got VBD got predicate OK
to TO to arg1 OK
repair VB repair arg1 OK
my PRP my arg1 OK
stuff NN stuff arg1 OK
too RB too argM_discou OK
man UH ^ ^ filler

so UH ^ ^ filler
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
like RP ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
uh UH ^ ^ filler
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
on IN ^ ^ false_start
my PRP ^ ^ false_start
way NN ^ ^ false_start
of IN ^ ^ false_start
working VBG ^ ^ false_start
it PRP ^ ^ false_start
to IN ^ ^ false_start
the DT ^ ^ false_start
point NN ^ ^ false_start
where WRB ^ ^ false_start
like UH ^ ^ filler
i PRP ^ ^ repeat
i PRP i arg0 OK
met VBD met predicate OK
with IN with arg1 OK
a DT a arg1 OK
guy NN guy arg1 OK
and CC and ^ OK
he PRP he arg0 OK
was VBD ^ ^ false_start
like RP said predicate filler
look VB look arg1 OK
adam NNP adam argM_discou OK

but CC but ^ OK
uh UH ^ ^ filler
you PRP you ^ OK
come VBP come ^ OK
back RB back ^ OK
i- XX ^ ^ false_start

i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
that IN that arg1 OK
if IN ^ ^ false_start
you PRP ^ ^ false_start
as RB ^ ^ repeat
see UH ^ ^ filler
as RB as argM_adverb OK
long RB ^ ^ repeat
long RB long argM_adverb OK
as IN ^ ^ repeat
as IN as argM_adverb OK
you PRP ^ ^ repeat
you PRP you arg1 OK
're VBP ^ ^ repeat
're VBP 're arg1 OK
staying VBG staying arg1 OK
consistent JJ consistent arg3 OK
and CC ^ ^ repeat
and CC and arg3 OK
up RB ^ ^ repeat
up IN up arg3 OK
on IN on arg3 OK
your PRP your arg3 OK
bills NNS bills arg3 OK
they PRP ^ ^ repeat
they PRP they arg0 OK
will MD ^ ^ repeat
will MD will argM_mod OK
take VB take arg1 OK
that DT that arg1 OK
as IN as arg1 OK
like UH ^ ^ filler
okay RB okay arg1 OK

well UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
what NN ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
mister NNP ^ ^ repeat
mist- NNP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
mister NNP ^ ^ false_start
f- NNP ^ ^ false_start
ed NNP ed argM_discou OK
you PRP you arg0 OK
can MD can argM_mod OK
handle VB handle predicate OK
those DT those arg1 OK
bills NNS bills arg1 OK
man UH ^ ^ filler

so RB ^ ^ false_start
eh UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we arg0 OK
should MD should argM_mod OK
be VB be predicate OK
able JJ able arg2 OK
to TO to arg2 OK
hook VB hook arg2 OK
you PRP you arg1 OK
up RP up arg_particl OK

but CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
fell VBD ^ ^ repeat
fell VBD fell predicate OK
behind RB behind arg2 OK

they PRP ^ ^ repeat
they PRP they arg1 OK
'll MD ^ ^ repeat
'll MD 'll argM_mod OK
be VB ^ ^ repeat
be VB be predicate OK
a DT ^ ^ repeat
to IN to arg2 OK
your PRP your arg2 OK
advantage NN advantage arg2 OK

because IN ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg1 OK
've VBP 've ^ OK
been VBN been predicate OK
to IN to arg2 OK
the DT the arg2 OK
south NNP south arg2 OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
everyone NN everyone arg0 OK
does VBZ does arg1 OK
it PRP it arg1 OK
there RB there argM_loc OK

but CC ^ ^ false_start
maybe RB maybe ^ OK
everyone NN everyone arg0 OK
that WDT ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
that WDT that ^ OK
g- VBZ ^ ^ repeat
goes VBZ goes predicate OK
to IN to ^ OK
bars NNS bars arg4 OK
does VBZ ^ ^ repeat
does VBZ does predicate OK
it PRP ^ ^ repeat
it PRP it arg1 OK

it PRP ^ ^ repeat
it PRP it arg1 OK
is VBZ is predicate OK
here RB here arg2 OK

they PRP they arg0 OK
banned VBD banned predicate OK
it PRP it arg1 OK
here RB here argM_loc OK
a DT ^ ^ repeat
probably RB ^ ^ false_start
a DT a argM_tmp OK
c- NN ^ ^ repeat
couple NN couple argM_tmp OK
of IN of argM_tmp OK
years NNS years argM_tmp OK
ago RB ago argM_tmp OK

because UH ^ ^ false_start
so UH ^ ^ false_start
i PRP i arg0 OK
've VBP 've ^ OK
heard VBN ^ ^ false_start
stories NNS ^ ^ false_start
where WRB ^ ^ false_start
er UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
read VBN read predicate OK
in IN in argM_loc OK
the DT the argM_loc OK
paper NN paper argM_loc OK
where WRB about arg1 false_start
someone NN someone arg0 OK
will MD ^ ^ false_start
be VB ^ ^ false_start
smoking VBG smoking arg1 OK
in IN in argM_loc OK
a DT a argM_loc OK
bar NN bar argM_loc OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
th- XX ^ ^ repeat
as IN as arg0 OK
a DT a arg0 OK
non-smoker NN non-smoker arg0 OK
i PRP i arg0 OK
think VBP think predicate OK
it PRP it arg1 OK
's BES 's arg1 OK
good JJ good arg2 OK

but CC ^ ^ false_start
then RB ^ ^ false_start
if IN if ^ OK
i PRP i ^ OK
was VBD were ^ false_start
a DT a ^ OK
smoker NN smoker ^ OK
i PRP i ^ OK
'd MD 'd ^ OK
be VB ^ ^ false_start
like RP say ^ false_start
hey UH hey ^ OK

but CC ^ ^ false_start
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
people ADVP-DIR- 1 people arg0 OK
are NNS ^ ^ false_start
smoking VBP smoke predicate false_start
and VBG and ^ OK
drinking CC drink predicate false_start
every- RB ^ ^ repeat
everywhere RB everywhere argM_loc false_start
you PRP you ^ false_start
go VBP go ^ false_start

you PRP you ^ OK
really RB really ^ OK

so UH ^ ^ false_start
w- PRP ^ ^ repeat
we PRP we arg1 OK
're VBP 're predicate OK
at IN at arg2 OK
the DT the arg2 OK
beach NN beach arg2 OK

and CC ^ ^ false_start
then RB ^ ^ false_start
so UH ^ ^ false_start
it PRP it arg0 OK
seems VBZ seems predicate OK
all RB all arg0 false_start
like IN ^ ^ false_start
the DT ^ ^ repeat
the DT the arg0 OK
more RBR more arg0 OK
mountainy JJ mountainous arg0 false_start
communities NNS communities arg0 OK
like UH ^ ^ filler
to IN to arg0 OK
the DT the arg0 OK
north NNP north arg0 OK
south NNP south arg0 OK
and CC and arg0 OK
east NNP east arg0 OK
of IN of arg0 OK
us PRP us arg0 OK
got VBD got arg1 OK
it PRP it arg1 OK

that DT ^ ^ repeat
that DT that arg0 OK
has VBZ has ^ OK
to TO to ^ OK
do VB do predicate OK
with IN with arg1 OK
smoking NN smoking arg1 OK

we PRP we ^ OK
're VBP 're ^ OK

my PRP my arg1 OK
sister NN sister arg1 OK
's POS 's arg1 OK
house NN house arg1 OK
was VBD was predicate OK
pretty RB ^ ^ false_start
close JJ close arg2 OK
to IN ^ ^ repeat
to IN to arg2 OK
uh UH ^ ^ filler
one CD one arg2 OK
of IN of arg2 OK
them PRP them arg2 OK

and CC ^ ^ false_start
so RB ^ ^ false_start
that DT that arg1 OK
was VBD was predicate OK
kind RB ^ ^ false_start
of RB ^ ^ false_start
scary JJ scary arg2 OK
for IN for argM_tmp OK
a DT a argM_tmp OK
couple NN couple argM_tmp OK
of IN of argM_tmp OK
days NNS days argM_tmp OK

and CC ^ ^ false_start
i PRP i ^ OK
'm VBP 'm ^ OK
like UH ^ ^ filler
the DT the ^ OK
only RB only ^ OK
just RB ^ ^ false_start
get VB get ^ OK
that DT that ^ OK
thing NN thing ^ OK
away RB away ^ OK
from IN from ^ OK
me PRP me ^ OK
kind NN kind ^ OK
of IN of ^ OK
person NN person ^ OK

you PRP ^ ^ filler
know VBP ^ ^ filler
especially RB ^ ^ false_start
now RB ^ ^ false_start
that IN ^ ^ false_start
i PRP ^ ^ repeat
have VBP ^ ^ false_start
a DT ^ ^ false_start
ba- NN ^ ^ false_start
i PRP i arg0 OK
just RB ^ ^ false_start
never RB never argM_tmp OK
you PRP ^ ^ filler
know VBP ^ ^ filler
had VBD had predicate OK
the DT ^ ^ repeat
just RB ^ ^ false_start
the DT ^ ^ repeat
the DT the arg1 OK
desire NN desire arg1 OK

and CC ^ ^ OK
i PRP i ^ OK
was VBD ^ ^ false_start
probably RB ^ ^ false_start
like RP said ^ false_start
yeah UH yeah ^ OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
it PRP it arg0 OK
must MD must ^ OK
have VB have ^ OK
looked VBN looked predicate OK
ridiculous JJ ridiculous arg1 OK

i PRP ^ ^ false_start
'm VBP ^ ^ false_start
sh- PRP ^ ^ false_start
i PRP i arg0 OK
had VBD had predicate OK
no DT no arg1 OK
idea NN idea arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
because IN because ^ OK
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
smoke VB smoke predicate OK

and CC ^ ^ false_start
i PRP i arg0 OK
went VBD said predicate false_start
oh UH oh arg1 OK
my UH my arg1 OK
god UH god arg1 OK

a DT a arg1 OK
case NN case arg1 OK
is VBZ is predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP ^ ^ filler
do VBP ^ ^ filler
n't RB ^ ^ filler
know VB probably ^ false_start
thirty CD thirty arg2 OK
forty CD or ^ false_start
forty CD forty arg2 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
whatever UH ^ ^ filler

i PRP i arg0 OK
was VBD ^ ^ false_start
like RP said predicate false_start
wow UH wow arg1 OK

i PRP ^ ^ repeat
th- VBP ^ ^ repeat
i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
even RB ^ ^ false_start
know VB know predicate OK

maybe RB maybe ^ OK
a- XX a- ^ OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
so RB yes arg1 false_start

so UH ^ ^ false_start
if IN ^ ^ repeat
if IN if ^ OK
you PRP ^ ^ repeat
you PRP you arg0 OK
're VBP ^ ^ repeat
do VBP do ^ OK
n't RB n't argM_neg OK
have VB have predicate OK
any DT any arg1 OK
money NN money arg1 OK
h- WRB ^ ^ repeat
how WRB how ^ OK
do VBP do ^ OK
you PRP you arg0 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
afford VB afford predicate OK
it PRP it arg1 OK

it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP ^ ^ repeat
it PRP it arg1 OK
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES ^ ^ repeat
's BES 's predicate OK
an DT an arg2 OK
expensive JJ expensive arg2 OK
habit NN habit arg2 OK

then RB ^ ^ false_start
we PRP we arg0 OK
could MD could ^ OK
sit VB sit predicate OK
and CC and ^ OK
argue VB argue ^ OK
and CC ^ ^ false_start
stuff NN ^ predicate false_start

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
did VBD ^ ^ repeat
did VBD did ^ OK
n't RB ^ ^ repeat
n't RB n't argM_neg OK
write VB write predicate OK
it PRP it arg1 OK
down RP down argM_loc OK

uh UH ^ ^ filler
not RB not ^ OK
particularly RB particularly ^ OK

i PRP ^ ^ repeat
i PRP i arg1 OK
uh UH ^ ^ filler
am VBP am predicate OK
a DT a arg2 OK
volunteer NN volunteer arg2 OK
on IN on arg2 OK
an DT an arg2 OK
ambulance NN ambulance arg2 OK
squad NN squad arg2 OK

so UH ^ ^ false_start
it PRP it arg0 OK
's HVS 's ^ OK
affected VBN affected predicate OK
the DT the arg1 OK
squad NN squad arg1 OK
quite PDT quite argM_extent OK
a DT a argM_extent OK
bit NN bit argM_extent OK

n- UH ^ ^ repeat
no UH no ^ OK

uh UH ^ arg2 filler
you PRP ^ ^ filler
know VBP ^ ^ filler
we PRP we ^ OK
like UH ^ ^ filler
lock VB lock predicate OK
ambulances NNS ambulances arg1 OK
up RP up arg_particl OK
and CC and ^ OK
we PRP are arg1 OK
careful JJ ^ predicate false_start
little RB a ^ false_start
uh UH ^ ^ filler
little RB little arg2 OK
more RBR more arg2 OK
careful JJ careful arg2 OK
around IN around arg2 OK
the DT the arg2 OK
buildings NNS buildings arg2 OK
and CC ^ ^ false_start
things NNS ^ ^ false_start
like IN ^ ^ false_start
that DT ^ ^ false_start

eh UH eh ^ OK

but CC ^ arg2 false_start
it PRP ^ ^ false_start
was VBD ^ ^ false_start
at IN at argM_tmp OK
the DT the argM_tmp OK
time NN time argM_tmp OK
it PRP it arg1 OK
was VBD was ^ OK
centered VBN centered predicate OK
on IN on arg2 OK
uh UH ^ ^ filler
what WP what arg1 OK
was VBD was arg2 OK
then RB ^ ^ false_start
currently RB currently arg2 OK
terrorist JJ terrorist arg1 OK
activity NN activity arg1 OK
which WDT which arg1 OK
is VBZ is arg2 OK
bombing VBG the ^ false_start
bombing VBG bombing arg2 OK
of IN of ^ OK
uh UH ^ ^ filler
uh UH ^ ^ filler
of IN _ARG_ arg2 false_start

we- XX ^ ^ false_start
i PRP ^ ^ false_start
d- VBP ^ ^ false_start
i PRP i arg0 OK
guess VBP guess predicate OK
in IN in argM_mnr OK
the DT the argM_mnr OK
same JJ same argM_mnr OK
way NN way argM_mnr OK
it PRP it arg0 OK
's HVS 's arg1 OK
affected VBN affected arg1 OK
my PRP my arg1 OK
traveling NN traveling arg1 OK
only RB only argM_cause OK
because IN because argM_cause OK
it PRP it arg1 OK
's S-1 's argM_cause OK
become HVS become argM_cause OK
more VBN more arg2 OK
painful RBR painful arg2 OK
to JJ to arg2 OK
travel TO travel arg2 OK

in IN ^ ^ repeat
in IN in ^ OK
flying NN flying ^ OK

the DT the arg1 OK
airports NNS airports arg1 OK
are VBP ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
take VBP take predicate OK
a DT a arg2 OK
lot NN lot arg2 OK
longer RBR longer arg2 OK
to TO to arg2 OK
get VB get arg2 OK
through RB through arg2 OK

not RB not argM_neg OK
that WDT that ^ OK
i PRP i arg0 OK
know VBP know predicate OK
of IN of arg1 OK

course NN of argM_discou false_start
course NN course argM_discou OK
n- XX ^ ^ false_start
i PRP i arg0 OK
live VBP live predicate OK
closer RBR closer argM_loc OK
to IN to argM_loc OK
new NNP new argM_loc OK
york NNP york argM_loc OK
than IN than argM_loc OK
they PRP they argM_loc OK
do VBP do argM_loc OK

but CC but argM_discou OK
w- WP ^ ^ repeat
what WP what arg1 OK
do VBP do ^ OK
they PRP they arg0 OK
say VB say predicate OK

well UH ^ ^ false_start
let VB ^ ^ false_start
's PRP ^ ^ false_start
see VB ^ ^ false_start
si- XX ^ ^ false_start
for IN for ^ OK
lack NN lack ^ OK
of IN of ^ OK
anything NN anything ^ OK
else RB else ^ OK

there EX ^ ^ false_start
was VBD ^ ^ false_start
uh UH ^ ^ filler
the DT the argM_tmp OK
day NN day argM_tmp OK
it PRP it argM_tmp OK
happened VBD happened argM_tmp OK
we ADVP-TMP- 1 we arg0 OK
had PRP had predicate OK
visitors VBD visitors arg1 OK
at NNS at argM_loc OK
our IN our argM_loc OK
plant PRP plant argM_loc OK

the DT ^ ^ repeat
th- PRP ^ ^ repeat
they PRP ^ ^ repeat
this DT this arg1 OK
w- VBD ^ ^ repeat
was VBD was predicate OK
at IN at arg2 OK
work NN work arg2 OK

eh UH ^ ^ filler
well UH ^ ^ filler
because IN because argM_cause OK
i PRP i arg0 OK
work VBP work predicate OK
for IN for arg1 OK
a DT a arg0 OK
military JJ military arg0 OK
subcontractor NN subcontractor arg0 OK
who WP who arg0 OK
also RB also argM_discou OK
was VBD was arg1 OK
making VBG making arg1 OK
airport NN airport arg1 OK
security NN security arg1 OK
equipment NN equipment arg1 OK

i PRP i arg0 OK
seen VBN have ^ false_start
kind RB kind ^ OK
of RB of ^ OK
seen VBN seen predicate OK
it PRP it arg1 OK
too RB too ^ OK

c- XX ^ ^ false_start
my PRP my arg0 OK
husband NN husband arg0 OK
gets VBZ gets predicate OK
those DT ^ ^ repeat
those DT those arg1 OK
computers NNS computers arg1 OK

you PRP you arg0 OK
heard VBD heard predicate OK
about IN about arg1 OK
that DT that arg1 OK

because IN ^ ^ false_start
i PRP i arg0 OK
was VBD was ^ OK
thinking VBG thinking predicate OK
i PRP ^ ^ filler
was VBD ^ ^ filler
like RP ^ ^ filler
i PRP i arg0 OK
wonder VBP wonder arg1 OK
how WRB how arg2 OK
would MD would arg1 OK
that RB that arg1 OK
be VB be arg1 OK

and CC ^ ^ false_start
plus CC ^ ^ filler
i PRP ^ ^ filler
mea- VB ^ ^ filler
i PRP i arg0 OK
like UH ^ ^ OK
like VB like predicate OK
the DT the arg1 OK
computer NN computer arg1 OK

because IN ^ ^ false_start
i PRP i arg0 OK
was VBD was ^ OK
saying VBG saying predicate OK
i PRP i arg0 OK
have VBP have arg1 OK
a DT a arg1 OK
typewriter NN typewriter arg1 OK

and CC ^ ^ false_start
i PRP ^ ^ false_start
'm VBP ^ ^ false_start
i PRP i arg0 OK
was VBD was ^ OK
trying VBG trying predicate OK
to TO to arg1 OK
get VB get arg1 OK
rid VBN rid arg1 OK
of IN of arg1 OK
it PRP it arg1 OK

and CC ^ ^ false_start
i PRP i arg0 OK
thought VBD thought predicate OK
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
have VBP have arg1 OK
a DT a arg0 OK
daughter NN daughter arg0 OK
here SBAR-1 here arg1 OK
who RB who arg1 OK
might WP might arg1 OK
need MD ^ ^ repeat
need DT need arg1 OK
a VBP ^ ^ repeat
typewriters VB typewriters arg1 OK
eventually NNS eventually argM_tmp OK
just RB just argM_tmp OK
to RB to argM_tmp OK
start TO start argM_tmp OK
out VB out arg_particl OK
on RP on arg1 OK

i PRP i arg0 OK
was VBD was ^ OK
thinking VBG thinking predicate OK
th- DT ^ ^ repeat
that DT that arg1 OK
would MD would ^ OK
would MD be arg1 false_start
pretty RB pretty arg2 OK
interesting JJ interesting arg2 OK
because IN because arg1 OK
like IN like arg1 OK
me PRP ^ ^ repeat
myself PRP myself arg1 OK
i PRP ^ ^ repeat
i PRP i arg0 OK
would MD ^ ^ repeat
'd MD 'd arg1 OK
get VB ^ ^ repeat
get VB get arg1 OK
tired JJ ^ ^ repeat
tired JJ tired arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
the DT the arg1 OK
wires NNS wires arg1 OK
and CC and arg1 OK
plugging VBG plugging arg1 OK
things NNS things arg1 OK
in RB in arg1 OK

times NNS times ^ OK
where WRB where ^ OK
you PRP you ^ OK
get VBP get ^ OK
the DT the ^ OK
wires NNS wires ^ OK
to IN ^ ^ repeat
to IN to ^ OK
the DT ^ ^ repeat
the DT the ^ OK
cigarette NN cigarette ^ OK
lighter NN lighter ^ OK
plug ADVP-TMP- 1 plug ^ OK
up VBP up ^ OK
things RP things ^ OK

but CC ^ ^ false_start
that DT ^ ^ repeat
that DT that ^ OK
w- XX w- ^ OK

i PRP i arg0 OK
wonder VBP wonder predicate OK
if IN if arg1 OK
that DT that arg0 OK
going VBG is ^ false_start
going VBG going arg1 OK
to TO to arg1 OK
be VB be arg1 OK
taking VBG taking arg1 OK
over RP over arg_particl OK
the DT the arg1 OK
regular JJ regular arg1 OK
ones NNS ones arg1 OK
eventually RB eventually argM_tmp OK

and CC ^ ^ false_start
i PRP ^ ^ repeat
i PRP i arg0 OK
get VBP ^ ^ repeat
get VBP get predicate OK
a DT ^ ^ repeat
a DT a arg1 OK
lot NN ^ ^ repeat
lot NN lot arg1 OK
of IN ^ ^ repeat
of IN of arg1 OK
e- XX ^ ^ repeat
like UH ^ ^ filler
educational JJ educational arg1 OK
s- XX ^ ^ repeat
stuff NN stuff arg1 OK
for IN for arg4 OK
the DT the arg4 OK
kids NNS kids arg4 OK
off IN off argM_loc OK
of IN of argM_loc OK
there RB there argM_loc OK
too RB too ^ OK

like IN like ^ OK
their PRP their ^ OK
basic JJ basic ^ OK
a. NN a. ^ OK
b. NN b. ^ OK
c.s NNS c.s ^ OK
and CC ^ ^ false_start
stuff NN ^ ^ false_start

i PRP i arg0 OK
'll MD 'll ^ OK
print VB print predicate OK
off IN off argM_loc OK
the DT the argM_loc OK
computer NN computer argM_loc OK
too RB too ^ OK

because UNK ^ ^ false_start
i UNK i ^ OK
do UNK do ^ OK
n't UNK n't ^ OK
get UNK get ^ OK
anything UNK anything ^ OK
else UNK else ^ OK
except UNK except ^ OK
for UNK for ^ OK

you PRP you arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
have VB have ^ OK
to TO to ^ OK
go VB go predicate OK
to IN to arg4 OK
library NN the ^ false_start
library NN library arg4 OK
to TO ^ ^ repeat
to TO to ^ OK
look VBP ^ ^ false_start
at IN ^ ^ false_start
a DT ^ ^ false_start
look VB ^ ^ repeat
see VB see predicate OK
if IN if arg1 OK
the DT the arg1 OK
book NN book arg1 OK
was VBD was arg1 OK
there RB there arg2 OK

i PRP i arg0 OK
do VBP do ^ OK
n't RB n't argM_neg OK
catch VB catch predicate OK
too RB too arg1 OK
many JJ many arg1 OK
vickys NNPS vickys arg1 OK
up RP up argM_loc OK

i PRP i arg1 OK
'm VBP 'm predicate OK
way RB way arg2 OK
on IN ^ ^ false_start
the DT ^ ^ repeat
kind RB ^ ^ false_start
of RB ^ ^ false_start
almo- RB ^ ^ false_start
on IN on arg2 OK
the DT the arg2 OK
other JJ other arg2 OK
side NN side arg2 OK
of IN of arg2 OK
the DT the arg2 OK
map NN map arg2 OK

but CC ^ ^ false_start
her- XX ^ ^ false_start
mm UH ^ ^ false_start
mm UH ^ ^ false_start
you PRP ^ ^ false_start
know VBP ^ ^ false_start
it PRP ^ ^ repeat
it PRP it arg1 OK
gets VBZ ^ ^ repeat
's BES 's predicate OK
of- RB ^ ^ repeat
off RB off arg2 OK
and CC and arg2 OK
on RB on arg2 OK

which WDT ^ ^ false_start
i PRP i arg1 OK
'm VBP 'm predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
ready JJ ready arg2 OK
for IN for arg2 OK
the DT the arg2 OK
chilly JJ chilly arg2 OK
weather NN weather arg2 OK
myself PRP myself arg2 OK

but CC but ^ OK
um UH ^ ^ filler
actually RB actually ^ OK
tha- DT ^ ^ repeat
that DT that arg1 OK
's BES 's predicate OK
not RB not arg2 OK
as RB as arg2 OK
ridiculous JJ ridiculous arg2 OK
as IN as arg2 OK
some DT some arg2 OK
of IN of arg2 OK
the DT the arg2 OK
other JJ other arg2 OK
ones NNS ones arg2 OK

y- PRP ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
now RB now ^ OK
that IN that ^ OK
i PRP i arg0 OK
am VBP am ^ OK
put VBN put predicate OK
on IN on arg2 OK
the DT the arg2 OK
spot NN spot arg2 OK
of IN of ^ OK
course NN course ^ OK
um UH ^ ^ filler
i PRP i arg0 OK
would MD would ^ OK
n't RB n't ^ OK
know VB know predicate OK

but CC but ^ OK
ten CD ten argM_tmp OK
minutes NNS minutes argM_tmp OK
after IN after argM_tmp OK
i PRP i arg1 OK
'm VBP 'm predicate OK
off IN off arg2 OK
the DT the arg2 OK
phone NN phone arg2 OK
i PRP i arg1 OK
'm VBP 'm predicate OK
sure JJ sure arg2 OK
i PRP i arg0 OK
'll MD 'll arg2 OK
have VB have arg2 OK
a DT a arg1 OK
whole JJ whole arg1 OK
list NN list arg1 OK
of IN of arg1 OK
them PRP them arg1 OK

i PRP i arg0 OK
guess VBP guess predicate OK
i PRP ^ ^ repeat
i PRP i arg0 OK
w- VBP ^ ^ repeat
watch VBP watch arg1 OK
a DT a arg1 OK
lot NN lot arg1 OK
of IN of arg1 OK
um UH ^ ^ filler
like UH ^ ^ filler
c. NNP c. arg1 OK
n. NNP n. arg1 OK
n. NNP n. arg1 OK
n. NNP n. arg1 OK
and CC and arg1 OK
history NN history arg1 OK
channel NNP channel arg1 OK

and CC ^ ^ false_start
all PDT ^ ^ false_start
that DT ^ ^ false_start
which WDT which arg1 OK
is VBZ is predicate OK
kind RB kind arg2 OK
of RB of arg2 OK
reality NN reality arg2 OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
ig- XX ^ ^ false_start
ag- XX ^ ^ false_start
exactly UH exactly ^ filler

and CC ^ ^ false_start
i PRP i arg0 OK
find VBP find predicate OK
i PRP i arg0 OK
watch VBP watch arg1 OK
so RB so arg1 OK
much JJ much arg1 OK
of IN of arg1 OK
that DT that arg1 OK

i ADVP-TMP- 2 i arg0 false_start
guess PRP guess predicate false_start
that IN ^ ^ false_start
um UH ^ ^ filler
when WRB when arg1 OK
i PRP i arg0 OK
want VBP want arg1 OK
to TO to arg1 OK
watch VB watch arg1 OK
something NN something arg1 OK
for IN for arg1 OK
p- RB ^ ^ repeat
purely RB purely arg1 OK
entertainment NN entertainment arg1 OK
purposes NNS purposes arg1 OK
i VBP i arg1 OK
go PRP go arg1 OK
more VBP more arg1 OK
for RBR for arg4 OK
either IN either arg4 OK
sitcoms DT sitcoms arg4 OK
or NNS or arg4 OK
you CC ^ ^ filler
know PRP ^ ^ filler
even VBP even arg4 OK
dramas RB dramas arg4 OK

you NNS ^ ^ filler
know PRP ^ ^ filler
where VBP where ^ OK
the WRB the ^ OK
it NN ^ ^ false_start
reality DT reality ^ OK
it NN ^ ^ false_start
stuff NN stuff ^ OK
it NN ^ ^ false_start
just PRP just ^ OK
looks RB looks ^ OK
like VBZ ^ ^ filler
um IN ^ ^ filler

i PRP ^ ^ false_start
do VBP ^ ^ false_start
n't RB ^ ^ false_start
just RB ^ ^ repeat
l- VB ^ ^ repeat
i PRP i arg0 OK
guess VBP guess predicate OK
to IN ^ ^ repeat
to IN to arg2 OK
m- PRP ^ ^ repeat
me PRP me arg2 OK
it PRP it arg0 false_start
know VB ^ ^ false_start
just RB just arg1 false_start
look VB looks arg1 false_start
like IN like arg1 OK
people NNS people arg1 OK
that WDT that arg1 OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
are VBP ^ ^ repeat
are VBP are arg1 OK
desperate JJ desperate arg2 OK
for IN for arg2 OK
their PRP their arg2 OK
fifteen CD fifteen arg2 OK
minutes NNS minutes arg2 OK
of IN of arg2 OK
fame NNP fame arg2 OK

so UH ^ arg1 false_start
instead IN instead ^ OK
of IN of ^ OK
having VBG having ^ OK
to TO to ^ OK
parade VB parade predicate OK
their PRP their arg0 OK
dirty JJ dirty arg0 OK
laun- NN ^ ^ false_start
linen NN linen arg0 OK
on IN on argM_loc OK
like UH ^ ^ filler
oprah NNP oprah argM_loc OK
or CC or argM_loc OK
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
one CD one argM_loc OK
of IN of argM_loc OK
those DT those argM_loc OK
um UH ^ ^ filler
talk NN talk argM_loc OK
shows NNS shows argM_loc OK
now RB ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
now RB now ^ OK
some DT some arg0 OK
people NNS people arg0 OK
have VBP have predicate OK
other JJ other arg1 OK
ways NNS ways arg1 OK
to TO to ^ OK
get VB get arg1 OK
their PRP their arg1 OK
fifteen CD fifteen arg1 OK
minutes NNS minutes arg1 OK
of IN of arg1 OK
fame NN fame arg1 OK

but CC but ^ OK
i PRP ^ ^ filler
mean VBP ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
some DT ^ ^ false_start
of IN ^ ^ false_start
the DT ^ ^ false_start
stuff NN ^ ^ false_start
like UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
um UH ^ ^ filler
you PRP ^ ^ filler
know VBP ^ ^ filler
tha- WP ^ ^ false_start
you PRP ^ ^ false_start
'd MD ^ ^ false_start
see VB ^ ^ false_start
um NP-1 ^ ^ filler
i UH ^ ^ filler
mean PRP ^ ^ filler
i VBP i arg1 OK
'm PRP 'm predicate OK
not VBP not arg2 OK
into RB into arg2 OK
talk IN talk arg2 OK
shows NN shows arg2 OK
either NNS either arg2 OK

but CC but ^ OK
you PRP ^ ^ filler
know VBP ^ ^ filler
like UH ^ ^ filler
when WRB when ^ OK
you PRP you ^ OK
're VBP 're ^ OK
flipping VBG flipping ^ OK
channels NNS channels ^ OK
and ADVP-TMP- 1 ^ ^ false_start
or CC or ^ OK
you CC you ^ OK
're PRP 're ^ OK
stuck VBP stuck ^ OK
waiting VBN waiting ^ OK
for VBG for ^ OK
a IN a ^ OK
commercial DT commercial ^ OK

next JJ next ^ OK
um ADVP-TMP- 1 ^ ^ filler
men JJ men ^ OK
who UH who ^ OK
wear NNS wear ^ OK
their WP their ^ OK
women VBP women ^ OK
's PRP 's ^ OK
clothing NNS clothing ^ OK
w- POS ^ ^ repeat
um NN ^ ^ filler
while XX while ^ OK

whate- UH ^ ^ repeat
you IN ^ ^ filler
know WP ^ ^ filler
whatever PRP ^ ^ false_start
you VBP ^ ^ filler
know WP ^ ^ filler
something PRP something ^ OK
ridiculous VBP ridiculous ^ OK
next NN next ^ OK
on JJ on ^ OK
oprah JJ oprah ^ OK

i- PRP ^ ^ repeat
i PRP i arg0 OK
think VBP think predicate OK
i PRP i arg0 OK
agree VBP agree arg1 OK

if IN ^ ^ false_start
they PRP ^ ^ false_start
can MD ^ ^ false_start
escape VB ^ ^ false_start
i- VBZ ^ ^ repeat
you PRP ^ ^ filler
know VBP ^ ^ filler
i PRP i arg0 OK
see VBP see predicate OK
it PRP it arg1 OK
as IN as ^ OK
an DT an ^ OK
escape NN escape predicate OK
for IN for arg0 OK
them PRP them arg0 OK

whoever WP whoever ^ OK
's BES 's ^ OK
on IN on ^ OK
the DT the ^ OK
show NN show ^ OK

it PRP it arg1 OK
is VBZ ^ ^ repeat
's BES 's predicate OK
their PRP their arg2 OK
reality NAC-3 reality arg2 OK
not NN not ^ OK
the RB the arg0 OK
person DT person arg0 OK
viewing NN viewing predicate OK
it VBG it arg1 OK

so RB ^ ^ false_start
for IN for ^ OK
them PRP them ^ OK
it PRP it arg1 OK
's BES 's predicate OK
just RB just arg2 OK
escapist JJ escapist arg2 OK
fare NN fare arg2 OK

i PRP i ^ OK
think VBP think ^ OK
there EX there ^ OK
's BES 's ^ OK
so- DT ^ ^ repeat
some DT some ^ OK
kind NN kind ^ OK
of IN of ^ OK
um UH ^ ^ filler

some DT ^ ^ false_start
um UH ^ ^ filler
i PRP i arg0 OK
ca MD ca ^ OK
n't RB n't ^ OK
even RB even ^ OK
c- XX ^ ^ false_start
articulate VB articulate predicate OK
the DT the arg1 OK
right JJ right arg1 OK
thought NN thought arg1 OK

i PRP i arg1 false_start
guess VBP guess predicate false_start
some DT there ^ false_start
some DT is predicate false_start
some DT some arg2 OK
kind NN kind arg2 OK
of IN of arg2 OK
s- XX ^ ^ false_start
uh UH ^ ^ filler
o- XX ^ ^ false_start
perverse JJ perverse arg2 OK
um UH ^ ^ repeat
satisfaction NN satisfaction arg2 OK
in IN in arg1 OK
seeing VBG seeing arg1 OK
you PRP ^ ^ filler
know VBP ^ ^ filler
someone NN someone arg0 OK
screw VB screw arg1 OK
someone NN someone arg1 OK
else RB else arg1 OK
over RP over arg_particl OK

it PRP it arg1 OK
's BES 's predicate OK
on IN on arg2 OK
a DT a arg2 OK
mi- RBR ^ ^ false_start
more RBR ^ ^ false_start
you PRP ^ ^ filler
know VBP ^ ^ filler
uh UH ^ ^ filler
uh UH ^ ^ filler
less RBR less arg2 OK
um UH ^ ^ filler
intense JJ intense arg2 OK
level NN level arg2 OK
like IN like ^ OK
when WRB when ^ OK
they PRP they arg0 OK
had VBD had predicate OK
the DT the arg1 OK
shows NNS shows arg1 OK
like IN like arg1 OK
who WP ^ ^ repeat
um UH ^ ^ filler
who WP who arg1 OK
want- VBZ ^ ^ repeat
wants VBZ wants arg2 OK
to TO to arg2 OK
be VB be arg1 OK
a DT a arg2 OK
millionaire NN millionaire arg2 OK

you PRP ^ ^ filler
know VBP ^ ^ filler
the DT ^ ^ repeat
the DT the ^ OK
regula- NN ^ ^ repeat
regular JJ regular ^ OK
games NNS games ^ OK
shows NNS shows ^ OK

um UH ^ ^ filler
w- WRB ^ ^ repeat
where WRB ^ ^ false_start
i PRP i arg0 OK
think VBP think predicate OK
there EX there arg1 OK
was VBD was arg1 OK
the DT the arg2 OK
one CD ^ ^ repeat
one CD one arg2 OK
from IN from arg2 OK
britain NNP britain arg2 OK

uh UH ^ ^ filler
the DT the ^ OK
weakest NNP weakest ^ OK
lin- NNP lin- ^ OK

or CC or ^ OK
the DT the ^ OK
world NN world ^ OK
in IN in ^ OK
general JJ general ^ OK

i PRP ^ ^ filler
mean VBP ^ ^ filler
i PRP ^ ^ false_start
because UH because ^ OK
my PRP my ^ OK
opinion NN opinion ^ OK
is VBZ is ^ OK
that IN that ^ OK
it PRP it ^ OK
's BES 's ^ OK
sure JJ sure ^ OK
disaster NN disaster ^ OK
no DT no ^ OK
matter NN matter ^ OK
what WP what ^ OK
happens VBZ happens ^ OK

it PRP ^ ^ false_start
's BES ^ ^ false_start
just RB ^ ^ false_start
you PRP you ^ OK
can MD can ^ OK
put VB put ^ OK
it PRP it ^ OK
off RP off ^ OK
longer RBR longer ^ OK

are VBP ^ ^ repeat
are VBP are ^ OK
they PRP ^ ^ repeat
they PRP they ^ OK
going VBG going ^ OK
to TO to ^ OK
tell VB tell ^ OK
us PRP us ^ OK
when WRB when ^ OK
the DT the ^ OK
ten CD ten ^ OK
minutes NNS minutes ^ OK
is VBZ is ^ OK
up RB up ^ OK

and CC ^ ^ false_start
at IN at ^ OK
that DT that ^ OK
point NN point ^ OK
could MD ^ ^ false_start
they PRP they ^ OK
created VBN created ^ OK
a DT a ^ OK
palestine NNP palestine ^ OK
nation NN nation ^ OK

y- UH ^ ^ repeat
yeah UH yeah ^ OK

i PRP ^ ^ repeat
i PRP i ^ OK
would MD ^ ^ repeat
would MD would ^ OK
n't RB ^ ^ repeat
n't RB n't ^ OK
know VB know ^ OK
that RB that ^ OK
much RB much ^ OK

um UH um ^ OK
well UH well ^ OK
uh UH uh ^ OK

the DT the ^ OK
problem NN problem ^ OK
right RB right ^ OK
now RB now ^ OK
is VBZ is ^ OK
yasser NNP yasser ^ OK
arafat NNP arafat ^ OK
would MD would ^ OK
be VB be ^ OK
such PDT such ^ OK
a DT a ^ OK
terrible JJ terrible ^ OK
leader NN leader ^ OK

well UH ^ ^ false_start
i PRP i ^ OK

i- PRP i- ^ OK

so UH ^ ^ false_start
i PRP i ^ OK

eh UH ^ ^ filler
yeah UH yeah ^ OK

